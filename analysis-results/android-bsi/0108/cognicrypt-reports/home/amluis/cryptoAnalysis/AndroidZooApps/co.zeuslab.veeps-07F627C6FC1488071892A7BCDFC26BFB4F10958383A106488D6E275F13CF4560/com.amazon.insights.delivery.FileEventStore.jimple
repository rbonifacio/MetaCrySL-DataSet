public class com.amazon.insights.delivery.FileEventStore extends java.lang.Object implements com.amazon.insights.delivery.EventStore
{
    static final java.lang.String ENCRYPTION_ALGORITHM;
    static final double ERROR_LENGTH_THRESHOLD_PERCENTAGE;
    static final java.lang.String EVENTS_DIRECTORY;
    static final java.lang.String EVENT_FILE_NAME;
    static final java.lang.String KEY_MAX_STORAGE_SIZE;
    static final long MAX_STORAGE_SIZE;
    private static final com.amazon.insights.core.log.Logger logger;
    private final java.util.concurrent.locks.ReentrantLock accessLock;
    private final com.amazon.insights.core.InsightsContext context;
    private java.io.File eventsFile;
    private javax.crypto.SecretKey secretKey;

    static void <clinit>()
    {
        com.amazon.insights.core.log.Logger $r0;

        nop;

        $r0 = staticinvoke <com.amazon.insights.core.log.Logger: com.amazon.insights.core.log.Logger getLogger(java.lang.Class)>(class "Lcom/amazon/insights/delivery/FileEventStore;");

        <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger> = $r0;

        return;
    }

    public void <init>(com.amazon.insights.core.InsightsContext)
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        com.amazon.insights.core.InsightsContext $r1;
        java.util.concurrent.locks.ReentrantLock $r2;
        byte[] $r3, $r12, $r14;
        com.amazon.insights.InsightsCredentials $r4;
        java.lang.String $r5, $r8, $r9, varReplacer1094, varReplacer1100, varReplacer1101, varReplacer1102, varReplacer1103;
        com.amazon.insights.core.idresolver.Id $r6, $r7;
        int $i0, varReplacer1095, varReplacer1096, varReplacer1097, varReplacer1098, varReplacer1099;
        java.lang.StringBuilder $r10;
        com.amazon.insights.core.configuration.Configuration $r11;
        java.security.MessageDigest $r13;
        javax.crypto.spec.SecretKeySpec $r15;
        java.lang.Throwable $r16, $r17;
        null_type varReplacer1093;

        nop;

        $r0 := @this: com.amazon.insights.delivery.FileEventStore;

        $r1 := @parameter0: com.amazon.insights.core.InsightsContext;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.locks.ReentrantLock;

        varReplacer1095 = 1;

        specialinvoke $r2.<java.util.concurrent.locks.ReentrantLock: void <init>(boolean)>(varReplacer1095);

        $r0.<com.amazon.insights.delivery.FileEventStore: java.util.concurrent.locks.ReentrantLock accessLock> = $r2;

        $r0.<com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.InsightsContext context> = $r1;

        specialinvoke $r0.<com.amazon.insights.delivery.FileEventStore: boolean tryCreateEventsFile()>();

        $r3 = newarray (byte)[32];

     label01:
        $r4 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.InsightsCredentials getCredentials()>();

        $r5 = interfaceinvoke $r4.<com.amazon.insights.InsightsCredentials: java.lang.String getPrivateKey()>();

        $r6 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.idresolver.Id getUniqueId()>();

     label02:
        if $r6 == null goto label24;

     label03:
        $r6 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.idresolver.Id getUniqueId()>();

        $r7 = staticinvoke <com.amazon.insights.core.idresolver.Id: com.amazon.insights.core.idresolver.Id getEmptyId()>();

     label04:
        if $r6 == $r7 goto label24;

     label05:
        $r6 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.idresolver.Id getUniqueId()>();

        $r8 = virtualinvoke $r6.<com.amazon.insights.core.idresolver.Id: java.lang.String getValue()>();

     label06:
        if $r8 == null goto label24;

     label07:
        $r6 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.idresolver.Id getUniqueId()>();

        $r5 = virtualinvoke $r6.<com.amazon.insights.core.idresolver.Id: java.lang.String getValue()>();

     label08:
        $r4 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.InsightsCredentials getCredentials()>();

        $r8 = interfaceinvoke $r4.<com.amazon.insights.InsightsCredentials: java.lang.String getPrivateKey()>();

     label09:
        $r9 = $r8;

     label10:
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

     label11:
        if $i0 <= 16 goto label14;

     label12:
        varReplacer1099 = 16;

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>(varReplacer1099);

     label13:
        $r9 = $r8;

     label14:
        $r10 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.configuration.Configuration getConfiguration()>();

        varReplacer1094 = "encryptionPrefix";

        $r8 = interfaceinvoke $r11.<com.amazon.insights.core.configuration.Configuration: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer1094, $r9);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1103 = "UTF-8";

        $r12 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1103);

     label16:
        varReplacer1101 = "SHA-256";

        $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1101);

        varReplacer1100 = "UTF-8";

        $r14 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1100);

        $r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest(byte[])>($r14);

     label17:
        $r12 = $r14;

     label18:
        varReplacer1096 = 0;

        varReplacer1097 = 0;

        varReplacer1098 = 32;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, varReplacer1096, $r3, varReplacer1096, varReplacer1098);

     label19:
        $r15 = new javax.crypto.spec.SecretKeySpec;

     label20:
        varReplacer1102 = "AES";

        specialinvoke $r15.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1102);

     label21:
        $r0.<com.amazon.insights.delivery.FileEventStore: javax.crypto.SecretKey secretKey> = $r15;

        return;

     label22:
        $r16 := @caughtexception;

        varReplacer1093 = null;

        $r0.<com.amazon.insights.delivery.FileEventStore: javax.crypto.SecretKey secretKey> = varReplacer1093;

        return;

     label23:
        $r17 := @caughtexception;

        goto label18;

     label24:
        goto label08;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label22;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label22;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label22;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label22;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label22;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label22;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label22;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label22;
        catch java.security.NoSuchAlgorithmException from label16 to label17 with label23;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label22;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label22;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label22;
    }

    static java.io.File access$000(com.amazon.insights.delivery.FileEventStore)
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        java.io.File r1;

        nop;

        $r0 := @parameter0: com.amazon.insights.delivery.FileEventStore;

        r1 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        return r1;
    }

    static com.amazon.insights.core.InsightsContext access$100(com.amazon.insights.delivery.FileEventStore)
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        com.amazon.insights.core.InsightsContext r1;

        nop;

        $r0 := @parameter0: com.amazon.insights.delivery.FileEventStore;

        r1 = $r0.<com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.InsightsContext context>;

        return r1;
    }

    static com.amazon.insights.core.log.Logger access$200()
    {
        com.amazon.insights.core.log.Logger r0;

        nop;

        r0 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        return r0;
    }

    static javax.crypto.SecretKey access$300(com.amazon.insights.delivery.FileEventStore)
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        javax.crypto.SecretKey r1;

        nop;

        $r0 := @parameter0: com.amazon.insights.delivery.FileEventStore;

        r1 = $r0.<com.amazon.insights.delivery.FileEventStore: javax.crypto.SecretKey secretKey>;

        return r1;
    }

    static java.util.concurrent.locks.ReentrantLock access$400(com.amazon.insights.delivery.FileEventStore)
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        java.util.concurrent.locks.ReentrantLock r1;

        nop;

        $r0 := @parameter0: com.amazon.insights.delivery.FileEventStore;

        r1 = $r0.<com.amazon.insights.delivery.FileEventStore: java.util.concurrent.locks.ReentrantLock accessLock>;

        return r1;
    }

    static java.io.File access$500(com.amazon.insights.delivery.FileEventStore, int)
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        int $i0;
        java.io.File $r1;

        nop;

        $r0 := @parameter0: com.amazon.insights.delivery.FileEventStore;

        $i0 := @parameter1: int;

        $r1 = specialinvoke $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File deleteReadEvents(int)>($i0);

        return $r1;
    }

    private java.io.File deleteReadEvents(int)
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        int $i0, $i4, varReplacer5037;
        java.lang.Object $r1, $r12;
        com.amazon.insights.core.InsightsContext $r2;
        com.amazon.insights.core.system.System $r3;
        com.amazon.insights.core.system.FileManager $r4;
        java.io.File $r5, $r8, $r11;
        com.amazon.insights.core.configuration.Configuration $r6;
        java.lang.Long $r7;
        long $l1, $l2, varReplacer5056;
        double $d0;
        byte $b3;
        boolean $z0;
        com.amazon.insights.core.log.Logger $r9;
        java.lang.Throwable $r10, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        java.io.FileReader $r13, r27;
        java.io.PrintWriter $r14, r30;
        java.io.FileWriter $r15, r29;
        java.lang.String $r16, varReplacer5035, varReplacer5036, varReplacer5038, varReplacer5039, varReplacer5040, varReplacer5041, varReplacer5042, varReplacer5043, varReplacer5044, varReplacer5045, varReplacer5046, varReplacer5047, varReplacer5048, varReplacer5049, varReplacer5050, varReplacer5051, varReplacer5052, varReplacer5053, varReplacer5054, varReplacer5055;
        java.io.BufferedReader r28;

        nop;

        $r0 := @this: com.amazon.insights.delivery.FileEventStore;

        $i0 := @parameter0: int;

        $r1 = null;

        $r2 = $r0.<com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.InsightsContext context>;

        $r3 = interfaceinvoke $r2.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.system.System getSystem()>();

        $r4 = interfaceinvoke $r3.<com.amazon.insights.core.system.System: com.amazon.insights.core.system.FileManager getFileManager()>();

        varReplacer5043 = "events";

        $r5 = interfaceinvoke $r4.<com.amazon.insights.core.system.FileManager: java.io.File createDirectory(java.lang.String)>(varReplacer5043);

        $r2 = $r0.<com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.InsightsContext context>;

        $r6 = interfaceinvoke $r2.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.configuration.Configuration getConfiguration()>();

        varReplacer5056 = 5242880L;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(varReplacer5056);

        varReplacer5036 = "maxStorageSize";

        $r7 = interfaceinvoke $r6.<com.amazon.insights.core.configuration.Configuration: java.lang.Long optLong(java.lang.String,java.lang.Long)>(varReplacer5036, $r7);

        $l1 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $d0 = (double) $l1;

        $d0 = $d0 * 1.1;

        $l1 = (long) $d0;

        $r8 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        $l2 = virtualinvoke $r8.<java.io.File: long length()>();

        $b3 = $l2 cmp $l1;

        if $b3 < 0 goto label06;

        $r8 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        $z0 = virtualinvoke $r8.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label01;

        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5048 = "Failed to delete events file that exceeds the max storage size";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String)>(varReplacer5048);

     label01:
        $r11 = new java.io.File;

        $r8 = $r11;

     label02:
        varReplacer5038 = "eventsFile";

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, varReplacer5038);

        $r5 = interfaceinvoke $r4.<com.amazon.insights.core.system.FileManager: java.io.File createFile(java.io.File)>($r8);

     label03:
        $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile> = $r5;

     label04:
        $r5 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        return $r5;

     label05:
        $r10 := @caughtexception;

        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5052 = "An error occurred while attempting to create the eventsFile";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>(varReplacer5052, $r10);

        goto label04;

     label06:
        $r11 = new java.io.File;

        $r8 = $r11;

     label07:
        varReplacer5035 = "eventsFile.tmp";

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, varReplacer5035);

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

     label08:
        if $z0 == 0 goto label12;

     label09:
        $z0 = virtualinvoke $r8.<java.io.File: boolean delete()>();

     label10:
        if $z0 != 0 goto label12;

        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

     label11:
        varReplacer5049 = "Failed to delete previous temp file";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String)>(varReplacer5049);

     label12:
        $r8 = interfaceinvoke $r4.<com.amazon.insights.core.system.FileManager: java.io.File createFile(java.io.File)>($r8);

     label13:
        if $r8 == null goto label37;

        $r11 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        $z0 = virtualinvoke $r11.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label37;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label37;

     label14:
        r28 = new java.io.BufferedReader;

     label15:
        $r12 = r28;

     label16:
        r27 = new java.io.FileReader;

     label17:
        $r13 = r27;

     label18:
        $r11 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

     label19:
        specialinvoke r27.<java.io.FileReader: void <init>(java.io.File)>($r11);

        specialinvoke r28.<java.io.BufferedReader: void <init>(java.io.Reader)>($r13);

     label20:
        r30 = new java.io.PrintWriter;

     label21:
        $r14 = r30;

     label22:
        r29 = new java.io.FileWriter;

     label23:
        $r15 = r29;

     label24:
        varReplacer5037 = 1;

        specialinvoke r29.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r8, varReplacer5037);

        specialinvoke r30.<java.io.PrintWriter: void <init>(java.io.Writer)>($r15);

     label25:
        $i4 = 0;

     label26:
        r28 = (java.io.BufferedReader) $r12;

     label27:
        $r16 = virtualinvoke r28.<java.io.BufferedReader: java.lang.String readLine()>();

     label28:
        if $r16 == null goto label39;

        $i4 = $i4 + 1;

        if $i4 <= $i0 goto label26;

     label29:
        virtualinvoke $r14.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        virtualinvoke $r14.<java.io.PrintWriter: void flush()>();

     label30:
        goto label26;

     label31:
        $r17 := @caughtexception;

        $r1 = $r12;

     label32:
        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5050 = "The events file count not be found";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>(varReplacer5050, $r17);

     label33:
        if $r14 == null goto label34;

        virtualinvoke $r14.<java.io.PrintWriter: void close()>();

     label34:
        if $r1 == null goto label36;

        r28 = (java.io.BufferedReader) $r1;

     label35:
        virtualinvoke r28.<java.io.BufferedReader: void close()>();

     label36:
        $r11 = new java.io.File;

        $r8 = $r11;

        varReplacer5054 = "eventsFile.tmp";

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, varReplacer5054);

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label37;

        $z0 = virtualinvoke $r8.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label37;

        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5047 = "Failed to delete temp file";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String)>(varReplacer5047);

     label37:
        $r5 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        return $r5;

     label38:
        $r18 := @caughtexception;

        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5041 = "An error occurred while attempting to create/open the temporary events file";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>(varReplacer5041, $r18);

        $r5 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        return $r5;

     label39:
        if $r14 == null goto label40;

        virtualinvoke $r14.<java.io.PrintWriter: void close()>();

     label40:
        if $r12 == null goto label42;

        r28 = (java.io.BufferedReader) $r12;

     label41:
        virtualinvoke r28.<java.io.BufferedReader: void close()>();

     label42:
        $r11 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        $z0 = virtualinvoke $r11.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label47;

        $r11 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        $z0 = virtualinvoke $r8.<java.io.File: boolean renameTo(java.io.File)>($r11);

        if $z0 != 0 goto label43;

        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5044 = "Failed to rename temp file to events file";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String)>(varReplacer5044);

     label43:
        $r11 = new java.io.File;

        $r8 = $r11;

     label44:
        varReplacer5053 = "eventsFile";

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, varReplacer5053);

        $r8 = interfaceinvoke $r4.<com.amazon.insights.core.system.FileManager: java.io.File createFile(java.io.File)>($r8);

     label45:
        $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile> = $r8;

        goto label36;

     label46:
        $r19 := @caughtexception;

        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5045 = "An error occurred while attempting to create the eventsFile";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>(varReplacer5045, $r19);

        goto label36;

     label47:
        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5046 = "Failed to delete previous events file";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String)>(varReplacer5046);

        goto label36;

     label48:
        $r20 := @caughtexception;

        $r12 = null;

     label49:
        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5039 = "An error occurred while attempting to delete the read events";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>(varReplacer5039, $r20);

     label50:
        if $r1 == null goto label51;

        $r14 = (java.io.PrintWriter) $r1;

        virtualinvoke $r14.<java.io.PrintWriter: void close()>();

     label51:
        if $r12 == null goto label36;

        r28 = (java.io.BufferedReader) $r12;

     label52:
        virtualinvoke r28.<java.io.BufferedReader: void close()>();

     label53:
        goto label36;

     label54:
        $r21 := @caughtexception;

        goto label36;

     label55:
        $r22 := @caughtexception;

        $r12 = null;

        $z0 = 0;

     label56:
        if $r1 == null goto label57;

        $r14 = (java.io.PrintWriter) $r1;

        virtualinvoke $r14.<java.io.PrintWriter: void close()>();

     label57:
        if $r12 == null goto label59;

        r28 = (java.io.BufferedReader) $r12;

     label58:
        virtualinvoke r28.<java.io.BufferedReader: void close()>();

     label59:
        if $z0 != 0 goto label63;

        $r11 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        $z0 = virtualinvoke $r11.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label65;

        $r11 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        $z0 = virtualinvoke $r8.<java.io.File: boolean renameTo(java.io.File)>($r11);

        if $z0 != 0 goto label60;

        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5055 = "Failed to rename temp file to events file";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String)>(varReplacer5055);

     label60:
        $r11 = new java.io.File;

        $r8 = $r11;

     label61:
        varReplacer5042 = "eventsFile";

        specialinvoke $r11.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, varReplacer5042);

        $r5 = interfaceinvoke $r4.<com.amazon.insights.core.system.FileManager: java.io.File createFile(java.io.File)>($r8);

     label62:
        $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile> = $r5;

     label63:
        throw $r22;

     label64:
        $r23 := @caughtexception;

        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5040 = "An error occurred while attempting to create the eventsFile";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>(varReplacer5040, $r23);

        goto label63;

     label65:
        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer5051 = "Failed to delete previous events file";

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String)>(varReplacer5051);

        goto label63;

     label66:
        $r24 := @caughtexception;

        goto label42;

     label67:
        $r25 := @caughtexception;

        goto label36;

     label68:
        $r26 := @caughtexception;

        goto label59;

     label69:
        $r22 := @caughtexception;

        $z0 = 0;

        goto label56;

     label70:
        $r22 := @caughtexception;

        $r1 = $r14;

        $z0 = 0;

        goto label56;

     label71:
        $r22 := @caughtexception;

        $r12 = $r1;

        $r1 = $r14;

        $z0 = 1;

        goto label56;

     label72:
        $r20 := @caughtexception;

        goto label49;

     label73:
        $r20 := @caughtexception;

        $r1 = $r14;

        goto label49;

     label74:
        $r17 := @caughtexception;

        $r14 = null;

        goto label32;

     label75:
        $r17 := @caughtexception;

        $r14 = null;

        $r1 = $r12;

        goto label32;

        catch java.io.IOException from label02 to label03 with label05;
        catch java.io.IOException from label07 to label08 with label38;
        catch java.io.IOException from label09 to label10 with label38;
        catch java.io.IOException from label11 to label13 with label38;
        catch java.io.FileNotFoundException from label19 to label20 with label74;
        catch java.io.IOException from label19 to label20 with label48;
        catch java.lang.Throwable from label14 to label15 with label55;
        catch java.lang.Throwable from label16 to label17 with label55;
        catch java.lang.Throwable from label18 to label20 with label55;
        catch java.io.FileNotFoundException from label24 to label25 with label75;
        catch java.io.IOException from label24 to label25 with label72;
        catch java.lang.Throwable from label20 to label21 with label69;
        catch java.lang.Throwable from label22 to label23 with label69;
        catch java.lang.Throwable from label24 to label25 with label69;
        catch java.io.FileNotFoundException from label27 to label28 with label31;
        catch java.io.FileNotFoundException from label29 to label30 with label31;
        catch java.io.IOException from label27 to label28 with label73;
        catch java.io.IOException from label29 to label30 with label73;
        catch java.lang.Throwable from label26 to label28 with label70;
        catch java.lang.Throwable from label29 to label30 with label70;
        catch java.lang.Throwable from label32 to label33 with label71;
        catch java.io.IOException from label35 to label36 with label67;
        catch java.io.IOException from label41 to label42 with label66;
        catch java.io.IOException from label44 to label45 with label46;
        catch java.lang.Throwable from label49 to label50 with label69;
        catch java.io.IOException from label52 to label53 with label54;
        catch java.io.IOException from label58 to label59 with label68;
        catch java.io.IOException from label61 to label62 with label64;
    }

    public static com.amazon.insights.delivery.FileEventStore newInstance(com.amazon.insights.core.InsightsContext)
    {
        com.amazon.insights.core.InsightsContext $r0;
        com.amazon.insights.delivery.FileEventStore $r1;

        nop;

        $r0 := @parameter0: com.amazon.insights.core.InsightsContext;

        $r1 = new com.amazon.insights.delivery.FileEventStore;

        specialinvoke $r1.<com.amazon.insights.delivery.FileEventStore: void <init>(com.amazon.insights.core.InsightsContext)>($r0);

        return $r1;
    }

    private void tryCloseWriter(java.io.Writer)
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        java.io.Writer $r1;
        java.lang.Throwable $r2;
        com.amazon.insights.core.log.Logger $r3;

        $r0 := @this: com.amazon.insights.delivery.FileEventStore;

        $r1 := @parameter0: java.io.Writer;

        if $r1 == null goto label4;

     label1:
        virtualinvoke $r1.<java.io.Writer: void close()>();

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r3 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        virtualinvoke $r3.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>("Unable to close writer for events file", $r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private boolean tryCreateEventsFile()
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        java.io.File $r1, $r6;
        boolean $z0;
        java.lang.Throwable $r2, $r7;
        com.amazon.insights.core.InsightsContext $r3;
        com.amazon.insights.core.system.System $r4;
        com.amazon.insights.core.system.FileManager $r5;
        com.amazon.insights.core.log.Logger $r8;
        int varReplacer1105, varReplacer1107, varReplacer1111, varReplacer1112;
        java.lang.String varReplacer1106, varReplacer1108, varReplacer1109, varReplacer1110;

        nop;

        $r0 := @this: com.amazon.insights.delivery.FileEventStore;

        $r1 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        if $r1 == null goto label01;

        $r1 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        varReplacer1105 = 1;

        return varReplacer1105;

     label01:
        entermonitor $r0;

     label02:
        $r1 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        if $r1 == null goto label06;

        $r1 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label06;

        exitmonitor $r0;

     label03:
        varReplacer1107 = 1;

        return varReplacer1107;

     label04:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label05:
        throw $r2;

     label06:
        $r3 = $r0.<com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.InsightsContext context>;

     label07:
        $r4 = interfaceinvoke $r3.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.system.System getSystem()>();

        $r5 = interfaceinvoke $r4.<com.amazon.insights.core.system.System: com.amazon.insights.core.system.FileManager getFileManager()>();

        varReplacer1106 = "events";

        $r6 = interfaceinvoke $r5.<com.amazon.insights.core.system.FileManager: java.io.File createDirectory(java.lang.String)>(varReplacer1106);

     label08:
        $r1 = new java.io.File;

     label09:
        varReplacer1110 = "eventsFile";

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, varReplacer1110);

        $r1 = interfaceinvoke $r5.<com.amazon.insights.core.system.FileManager: java.io.File createFile(java.io.File)>($r1);

     label10:
        $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile> = $r1;

     label11:
        exitmonitor $r0;

     label12:
        varReplacer1111 = 1;

        return varReplacer1111;

     label13:
        $r7 := @caughtexception;

        $r8 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer1108 = "Unable to open events file";

        virtualinvoke $r8.<com.amazon.insights.core.log.Logger: void deve(java.lang.String)>(varReplacer1108);

        $r8 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        varReplacer1109 = "An error occurred while attempting to create/open the events file";

        virtualinvoke $r8.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>(varReplacer1109, $r7);

        exitmonitor $r0;

     label14:
        varReplacer1112 = 0;

        return varReplacer1112;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.lang.Throwable from label06 to label11 with label04;
        catch java.lang.Throwable from label11 to label12 with label04;
        catch java.lang.Throwable from label13 to label14 with label04;
    }

    private java.io.Writer tryInitializeWriter()
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        boolean $z0;
        com.amazon.insights.core.InsightsContext $r1;
        com.amazon.insights.core.system.System $r2;
        com.amazon.insights.core.system.FileManager $r3;
        java.io.File $r4;
        java.io.OutputStream $r5;
        java.io.OutputStreamWriter $r6;
        com.amazon.insights.core.io.EncryptedWriter $r7;
        javax.crypto.SecretKey $r8;
        com.amazon.insights.delivery.EventStoreException $r9;
        java.lang.Throwable $r10;
        com.amazon.insights.core.log.Logger $r11;
        java.lang.Exception $r12;

        $r0 := @this: com.amazon.insights.delivery.FileEventStore;

     label01:
        $z0 = specialinvoke $r0.<com.amazon.insights.delivery.FileEventStore: boolean tryCreateEventsFile()>();

     label02:
        if $z0 == 0 goto label13;

     label03:
        $r1 = $r0.<com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.InsightsContext context>;

     label04:
        $r2 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.system.System getSystem()>();

        $r3 = interfaceinvoke $r2.<com.amazon.insights.core.system.System: com.amazon.insights.core.system.FileManager getFileManager()>();

     label05:
        $r4 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

     label06:
        $r5 = interfaceinvoke $r3.<com.amazon.insights.core.system.FileManager: java.io.OutputStream newOutputStream(java.io.File,boolean)>($r4, 1);

     label07:
        $r6 = new java.io.OutputStreamWriter;

     label08:
        specialinvoke $r6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r5);

     label09:
        $r7 = new com.amazon.insights.core.io.EncryptedWriter;

     label10:
        $r8 = $r0.<com.amazon.insights.delivery.FileEventStore: javax.crypto.SecretKey secretKey>;

     label11:
        specialinvoke $r7.<com.amazon.insights.core.io.EncryptedWriter: void <init>(java.io.Writer,javax.crypto.SecretKey)>($r6, $r8);

     label12:
        return $r7;

     label13:
        $r9 = new com.amazon.insights.delivery.EventStoreException;

     label14:
        specialinvoke $r9.<com.amazon.insights.delivery.EventStoreException: void <init>(java.lang.String)>("Unable to create eventsFile");

     label15:
        throw $r9;

     label16:
        $r9 := @caughtexception;

        throw $r9;

     label17:
        $r10 := @caughtexception;

        $r11 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        virtualinvoke $r11.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>("Events file not found to persist event to", $r10);

        $r9 = new com.amazon.insights.delivery.EventStoreException;

        specialinvoke $r9.<com.amazon.insights.delivery.EventStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to open events file writer", $r10);

        throw $r9;

     label18:
        $r12 := @caughtexception;

        $r11 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        virtualinvoke $r11.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>("Unexpected exception", $r12);

        $r9 = new com.amazon.insights.delivery.EventStoreException;

        specialinvoke $r9.<com.amazon.insights.delivery.EventStoreException: void <init>(java.lang.String,java.lang.Throwable)>("Unexpected error while creating eventsFile writer", $r12);

        throw $r9;

        catch com.amazon.insights.delivery.EventStoreException from label01 to label02 with label16;
        catch com.amazon.insights.delivery.EventStoreException from label04 to label05 with label16;
        catch com.amazon.insights.delivery.EventStoreException from label06 to label07 with label16;
        catch com.amazon.insights.delivery.EventStoreException from label08 to label09 with label16;
        catch com.amazon.insights.delivery.EventStoreException from label11 to label12 with label16;
        catch com.amazon.insights.delivery.EventStoreException from label14 to label16 with label16;
        catch java.io.FileNotFoundException from label01 to label02 with label17;
        catch java.io.FileNotFoundException from label04 to label05 with label17;
        catch java.io.FileNotFoundException from label06 to label07 with label17;
        catch java.io.FileNotFoundException from label08 to label09 with label17;
        catch java.io.FileNotFoundException from label11 to label12 with label17;
        catch java.io.FileNotFoundException from label14 to label15 with label17;
        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label07 with label18;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label12 with label18;
        catch java.lang.Exception from label14 to label16 with label18;
    }

    public com.amazon.insights.delivery.EventStore$EventIterator iterator()
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        com.amazon.insights.delivery.FileEventStore$1 $r1;

        nop;

        $r0 := @this: com.amazon.insights.delivery.FileEventStore;

        $r1 = new com.amazon.insights.delivery.FileEventStore$1;

        specialinvoke $r1.<com.amazon.insights.delivery.FileEventStore$1: void <init>(com.amazon.insights.delivery.FileEventStore)>($r0);

        return $r1;
    }

    public boolean put(java.lang.String)
    {
        com.amazon.insights.delivery.FileEventStore $r0;
        java.lang.String $r1;
        long $l0, $l1, $l2;
        boolean $z0;
        java.io.Writer $r2, $r4;
        java.util.concurrent.locks.ReentrantLock $r3;
        com.amazon.insights.core.InsightsContext $r5;
        com.amazon.insights.core.configuration.Configuration $r6;
        java.lang.Long $r7;
        java.io.File $r8;
        int $i3;
        byte $b4;
        com.amazon.insights.core.log.Logger $r9;
        java.lang.StringBuilder $r10;
        java.lang.Throwable $r11, $r12;

        $r0 := @this: com.amazon.insights.delivery.FileEventStore;

        $r1 := @parameter0: java.lang.String;

        $z0 = 0;

        $r2 = null;

        $r3 = $r0.<com.amazon.insights.delivery.FileEventStore: java.util.concurrent.locks.ReentrantLock accessLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $r4 = specialinvoke $r0.<com.amazon.insights.delivery.FileEventStore: java.io.Writer tryInitializeWriter()>();

     label02:
        $r2 = $r4;

        if $r4 == null goto label10;

     label03:
        $r5 = $r0.<com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.InsightsContext context>;

     label04:
        $r6 = interfaceinvoke $r5.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.configuration.Configuration getConfiguration()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5242880L);

        $r7 = interfaceinvoke $r6.<com.amazon.insights.core.configuration.Configuration: java.lang.Long optLong(java.lang.String,java.lang.Long)>("maxStorageSize", $r7);

        $l1 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

     label05:
        $r8 = $r0.<com.amazon.insights.delivery.FileEventStore: java.io.File eventsFile>;

     label06:
        $l2 = virtualinvoke $r8.<java.io.File: long length()>();

        $i3 = virtualinvoke $r1.<java.lang.String: int length()>();

     label07:
        $l0 = (long) $i3;

        $l0 = $l2 + $l0;

        $b4 = $l0 cmp $l1;

        if $b4 > 0 goto label11;

     label08:
        virtualinvoke $r4.<java.io.Writer: void write(java.lang.String)>($r1);

        virtualinvoke $r4.<java.io.Writer: void flush()>();

     label09:
        $z0 = 1;

     label10:
        $r3 = $r0.<com.amazon.insights.delivery.FileEventStore: java.util.concurrent.locks.ReentrantLock accessLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        specialinvoke $r0.<com.amazon.insights.delivery.FileEventStore: void tryCloseWriter(java.io.Writer)>($r4);

        return $z0;

     label11:
        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        $r10 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The events file exceeded its allowed size of ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String)>($r1);

     label13:
        goto label10;

     label14:
        $r11 := @caughtexception;

     label15:
        $r9 = <com.amazon.insights.delivery.FileEventStore: com.amazon.insights.core.log.Logger logger>;

        virtualinvoke $r9.<com.amazon.insights.core.log.Logger: void e(java.lang.String,java.lang.Throwable)>("Failed to persist the event", $r11);

     label16:
        $r3 = $r0.<com.amazon.insights.delivery.FileEventStore: java.util.concurrent.locks.ReentrantLock accessLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        specialinvoke $r0.<com.amazon.insights.delivery.FileEventStore: void tryCloseWriter(java.io.Writer)>($r2);

        return 0;

     label17:
        $r12 := @caughtexception;

        $r3 = $r0.<com.amazon.insights.delivery.FileEventStore: java.util.concurrent.locks.ReentrantLock accessLock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        specialinvoke $r0.<com.amazon.insights.delivery.FileEventStore: void tryCloseWriter(java.io.Writer)>($r2);

        throw $r12;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label07 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label11 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
    }
}
