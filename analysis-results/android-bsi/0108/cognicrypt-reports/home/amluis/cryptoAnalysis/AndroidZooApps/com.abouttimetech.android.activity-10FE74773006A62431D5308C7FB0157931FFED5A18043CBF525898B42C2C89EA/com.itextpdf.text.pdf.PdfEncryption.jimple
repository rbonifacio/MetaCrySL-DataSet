public class com.itextpdf.text.pdf.PdfEncryption extends java.lang.Object
{
    public static final int AES_128;
    public static final int AES_256;
    private static final int KEY_SALT_OFFSET;
    private static final int OU_LENGHT;
    private static final int SALT_LENGHT;
    public static final int STANDARD_ENCRYPTION_128;
    public static final int STANDARD_ENCRYPTION_40;
    private static final int VALIDATION_SALT_OFFSET;
    private static final byte[] metadataPad;
    private static final byte[] pad;
    private static final byte[] salt;
    static long seq;
    private com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour;
    private int cryptoMode;
    byte[] documentID;
    private boolean embeddedFilesOnly;
    private boolean encryptMetadata;
    byte[] extra;
    byte[] key;
    private int keyLength;
    int keySize;
    java.security.MessageDigest md5;
    byte[] mkey;
    byte[] oeKey;
    byte[] ownerKey;
    int permissions;
    byte[] perms;
    protected com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler;
    private int revision;
    byte[] ueKey;
    byte[] userKey;

    static void <clinit>()
    {
        long $l0;
        byte[] $r0;

        nop;

        $r0 = newarray (byte)[32];

        $r0[0] = 40;

        $r0[1] = -65;

        $r0[2] = 78;

        $r0[3] = 94;

        $r0[4] = 78;

        $r0[5] = 117;

        $r0[6] = -118;

        $r0[7] = 65;

        $r0[8] = 100;

        $r0[9] = 0;

        $r0[10] = 78;

        $r0[11] = 86;

        $r0[12] = -1;

        $r0[13] = -6;

        $r0[14] = 1;

        $r0[15] = 8;

        $r0[16] = 46;

        $r0[17] = 46;

        $r0[18] = 0;

        $r0[19] = -74;

        $r0[20] = -48;

        $r0[21] = 104;

        $r0[22] = 62;

        $r0[23] = -128;

        $r0[24] = 47;

        $r0[25] = 12;

        $r0[26] = -87;

        $r0[27] = -2;

        $r0[28] = 100;

        $r0[29] = 83;

        $r0[30] = 105;

        $r0[31] = 122;

        <com.itextpdf.text.pdf.PdfEncryption: byte[] pad> = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 115;

        $r0[1] = 65;

        $r0[2] = 108;

        $r0[3] = 84;

        <com.itextpdf.text.pdf.PdfEncryption: byte[] salt> = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = -1;

        $r0[1] = -1;

        $r0[2] = -1;

        $r0[3] = -1;

        <com.itextpdf.text.pdf.PdfEncryption: byte[] metadataPad> = $r0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        <com.itextpdf.text.pdf.PdfEncryption: long seq> = $l0;

        return;
    }

    public void <init>()
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        java.lang.Exception $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        com.itextpdf.text.pdf.crypto.ARCFOUREncryption $r4;
        com.itextpdf.text.pdf.PdfPublicKeySecurityHandler $r5;
        com.itextpdf.text.ExceptionConverter $r6;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (byte)[0];

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey> = $r3;

        $r3 = newarray (byte)[5];

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] extra> = $r3;

        $r3 = newarray (byte)[32];

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey> = $r3;

        $r3 = newarray (byte)[32];

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey> = $r3;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler> = null;

        $r4 = new com.itextpdf.text.pdf.crypto.ARCFOUREncryption;

        specialinvoke $r4.<com.itextpdf.text.pdf.crypto.ARCFOUREncryption: void <init>()>();

        $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour> = $r4;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5> = $r2;

     label2:
        $r5 = new com.itextpdf.text.pdf.PdfPublicKeySecurityHandler;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>();

        $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler> = $r5;

        return;

     label3:
        $r1 := @caughtexception;

        $r6 = new com.itextpdf.text.ExceptionConverter;

        specialinvoke $r6.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r1);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>(com.itextpdf.text.pdf.PdfEncryption)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0, $r1;
        byte[] $r2;
        java.lang.Object $r3;
        int $i0;
        boolean $z0;
        com.itextpdf.text.pdf.PdfPublicKeySecurityHandler $r4;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: com.itextpdf.text.pdf.PdfEncryption;

        specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: void <init>()>();

        $r2 = $r1.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

        if $r2 == null goto label1;

        $r2 = $r1.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (byte[]) $r3;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key> = $r2;

     label1:
        $i0 = $r1.<com.itextpdf.text.pdf.PdfEncryption: int keySize>;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keySize> = $i0;

        $r2 = $r1.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (byte[]) $r3;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey> = $r2;

        $r2 = $r1.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (byte[]) $r3;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey> = $r2;

        $r2 = $r1.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (byte[]) $r3;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey> = $r2;

        $i0 = $r1.<com.itextpdf.text.pdf.PdfEncryption: int permissions>;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int permissions> = $i0;

        $r2 = $r1.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID>;

        if $r2 == null goto label2;

        $r2 = $r1.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (byte[]) $r3;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID> = $r2;

     label2:
        $i0 = $r1.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision> = $i0;

        $i0 = $r1.<com.itextpdf.text.pdf.PdfEncryption: int keyLength>;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keyLength> = $i0;

        $z0 = $r1.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata> = $z0;

        $z0 = $r1.<com.itextpdf.text.pdf.PdfEncryption: boolean embeddedFilesOnly>;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean embeddedFilesOnly> = $z0;

        $r4 = $r1.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler>;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler> = $r4;

        return;
    }

    private static boolean compareArray(byte[], byte[], int)
    {
        byte[] $r0, $r1;
        int $i0, $i2;
        byte $b1, $b3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label3;

        $b3 = $r0[$i2];

        $b1 = $r1[$i2];

        if $b3 == $b1 goto label2;

        return 0;

     label2:
        $i2 = $i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    private byte[] computeOwnerKey(byte[], byte[])
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r2, $r3, $r5, $r6;
        java.security.MessageDigest $r4;
        int $i0, $i1, $i2;
        byte $b3;
        com.itextpdf.text.pdf.crypto.ARCFOUREncryption $r7;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 = newarray (byte)[32];

        $r4 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 == 3 goto label1;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 4 goto label7;

     label1:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int keyLength>;

        $i0 = $i0 / 8;

        $r2 = newarray (byte)[$i0];

        $i0 = 0;

     label2:
        if $i0 >= 50 goto label3;

        $r4 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $i1 = lengthof $r2;

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r5, 0, $i1);

        $r4 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        $i1 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, $i1);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, 0, 32);

        $i0 = 0;

     label4:
        if $i0 >= 20 goto label8;

        $i1 = 0;

     label5:
        $i2 = lengthof $r2;

        if $i1 >= $i2 goto label6;

        $b3 = $r5[$i1];

        $i2 = $b3 ^ $i0;

        $b3 = (byte) $i2;

        $r2[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label5;

     label6:
        $r7 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour>;

        virtualinvoke $r7.<com.itextpdf.text.pdf.crypto.ARCFOUREncryption: void prepareARCFOURKey(byte[])>($r2);

        $r7 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour>;

        virtualinvoke $r7.<com.itextpdf.text.pdf.crypto.ARCFOUREncryption: void encryptARCFOUR(byte[])>($r3);

        $i0 = $i0 + 1;

        goto label4;

     label7:
        $r7 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour>;

        virtualinvoke $r7.<com.itextpdf.text.pdf.crypto.ARCFOUREncryption: void prepareARCFOURKey(byte[],int,int)>($r5, 0, 5);

        $r7 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour>;

        virtualinvoke $r7.<com.itextpdf.text.pdf.crypto.ARCFOUREncryption: void encryptARCFOUR(byte[],byte[])>($r1, $r3);

     label8:
        return $r3;
    }

    public static byte[] createDocumentId()
    {
        java.lang.Exception $r0;
        java.security.MessageDigest $r1;
        long $l0, $l1;
        java.lang.Runtime $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer19965, varReplacer19966, varReplacer19967;
        byte[] $r5;
        com.itextpdf.text.ExceptionConverter $r6;

     label1:
        nop;

        varReplacer19965 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19965);

     label2:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l1 = virtualinvoke $r2.<java.lang.Runtime: long freeMemory()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        varReplacer19966 = "+";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer19966);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        varReplacer19967 = "+";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer19967);

        $l0 = <com.itextpdf.text.pdf.PdfEncryption: long seq>;

        $l1 = 1L + $l0;

        <com.itextpdf.text.pdf.PdfEncryption: long seq> = $l1;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $r5 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r5);

        return $r5;

     label3:
        $r0 := @caughtexception;

        $r6 = new com.itextpdf.text.ExceptionConverter;

        specialinvoke $r6.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r0);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static com.itextpdf.text.pdf.PdfObject createInfoId(byte[])
    {
        com.itextpdf.text.pdf.ByteBuffer $r0, $r2;
        byte[] $r1;
        int $i0, varReplacer19958, varReplacer19959, varReplacer19960, varReplacer19961, varReplacer19962, varReplacer19963, varReplacer19964;
        byte $b1;
        com.itextpdf.text.pdf.PdfLiteral $r3;

        nop;

        $r1 := @parameter0: byte[];

        $r0 = new com.itextpdf.text.pdf.ByteBuffer;

        varReplacer19963 = 90;

        specialinvoke $r0.<com.itextpdf.text.pdf.ByteBuffer: void <init>(int)>(varReplacer19963);

        varReplacer19962 = 91;

        $r2 = virtualinvoke $r0.<com.itextpdf.text.pdf.ByteBuffer: com.itextpdf.text.pdf.ByteBuffer append(char)>(varReplacer19962);

        varReplacer19959 = 60;

        virtualinvoke $r2.<com.itextpdf.text.pdf.ByteBuffer: com.itextpdf.text.pdf.ByteBuffer append(char)>(varReplacer19959);

        $i0 = 0;

     label1:
        if $i0 >= 16 goto label2;

        $b1 = $r1[$i0];

        virtualinvoke $r0.<com.itextpdf.text.pdf.ByteBuffer: com.itextpdf.text.pdf.ByteBuffer appendHex(byte)>($b1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        varReplacer19960 = 62;

        $r2 = virtualinvoke $r0.<com.itextpdf.text.pdf.ByteBuffer: com.itextpdf.text.pdf.ByteBuffer append(char)>(varReplacer19960);

        varReplacer19961 = 60;

        virtualinvoke $r2.<com.itextpdf.text.pdf.ByteBuffer: com.itextpdf.text.pdf.ByteBuffer append(char)>(varReplacer19961);

        $r1 = staticinvoke <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>();

        $i0 = 0;

     label3:
        if $i0 >= 16 goto label4;

        $b1 = $r1[$i0];

        virtualinvoke $r0.<com.itextpdf.text.pdf.ByteBuffer: com.itextpdf.text.pdf.ByteBuffer appendHex(byte)>($b1);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        varReplacer19964 = 62;

        $r2 = virtualinvoke $r0.<com.itextpdf.text.pdf.ByteBuffer: com.itextpdf.text.pdf.ByteBuffer append(char)>(varReplacer19964);

        varReplacer19958 = 93;

        virtualinvoke $r2.<com.itextpdf.text.pdf.ByteBuffer: com.itextpdf.text.pdf.ByteBuffer append(char)>(varReplacer19958);

        $r3 = new com.itextpdf.text.pdf.PdfLiteral;

        $r1 = virtualinvoke $r0.<com.itextpdf.text.pdf.ByteBuffer: byte[] toByteArray()>();

        specialinvoke $r3.<com.itextpdf.text.pdf.PdfLiteral: void <init>(byte[])>($r1);

        return $r3;
    }

    private byte[] padPassword(byte[])
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $r2 = newarray (byte)[32];

        if $r1 != null goto label1;

        $r1 = <com.itextpdf.text.pdf.PdfEncryption: byte[] pad>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, 32);

        return $r2;

     label1:
        $i0 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 32);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        $i0 = lengthof $r1;

        if $i0 >= 32 goto label2;

        $r3 = <com.itextpdf.text.pdf.PdfEncryption: byte[] pad>;

        $i0 = lengthof $r1;

        $i1 = lengthof $r1;

        $i1 = 32 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, $i0, $i1);

     label2:
        return $r2;
    }

    private void setupByOwnerPad(byte[], byte[], byte[], byte[], int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r2, $r3, $r4;
        int $i0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: byte[];

        $i0 := @parameter4: int;

        $r2 = specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] computeOwnerKey(byte[],byte[])>($r4, $r2);

        specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: void setupGlobalEncryptionKey(byte[],byte[],byte[],int)>($r1, $r2, $r4, $i0);

        specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: void setupUserKey()>();

        return;
    }

    private void setupByUserPad(byte[], byte[], byte[], int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r2, $r3;
        int $i0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        $i0 := @parameter3: int;

        specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: void setupGlobalEncryptionKey(byte[],byte[],byte[],int)>($r1, $r2, $r3, $i0);

        specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: void setupUserKey()>();

        return;
    }

    private void setupGlobalEncryptionKey(byte[], byte[], byte[], int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r2, $r3, $r4;
        int $i0, $i1;
        java.security.MessageDigest $r5;
        byte $b2;
        boolean $z0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        $i0 := @parameter3: int;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID> = $r1;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey> = $r3;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int permissions> = $i0;

        $i1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int keyLength>;

        $i1 = $i1 / 8;

        $r4 = newarray (byte)[$i1];

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey> = $r4;

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        virtualinvoke $r5.<java.security.MessageDigest: void reset()>();

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r2);

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r3);

        $r2 = newarray (byte)[4];

        $b2 = (byte) $i0;

        $r2[0] = $b2;

        $i1 = $i0 >> 8;

        $b2 = (byte) $i1;

        $r2[1] = $b2;

        $i1 = $i0 >> 16;

        $b2 = (byte) $i1;

        $r2[2] = $b2;

        $i0 = $i0 >> 24;

        $b2 = (byte) $i0;

        $r2[3] = $b2;

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, 4);

        if $r1 == null goto label1;

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r1);

     label1:
        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

        if $z0 != 0 goto label2;

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r1 = <com.itextpdf.text.pdf.PdfEncryption: byte[] metadataPad>;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r1);

     label2:
        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $i0 = lengthof $r1;

        $r1 = newarray (byte)[$i0];

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>();

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 == 3 goto label3;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 4 goto label5;

     label3:
        $i0 = 0;

     label4:
        if $i0 >= 50 goto label5;

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r1);

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i1);

        $i0 = $i0 + 1;

        goto label4;

     label5:
        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    private void setupUserKey()
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r3;
        int $i0, $i1, $i2;
        java.security.MessageDigest $r2;
        byte $b3;
        com.itextpdf.text.pdf.crypto.ARCFOUREncryption $r4;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 == 3 goto label1;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 4 goto label7;

     label1:
        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r1 = <com.itextpdf.text.pdf.PdfEncryption: byte[] pad>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r1);

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID>;

        $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1);

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r3, 0, 16);

        $i0 = 16;

     label2:
        if $i0 >= 32 goto label3;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        $r3[$i0] = 0;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $i0 = 0;

     label4:
        if $i0 >= 20 goto label8;

        $i1 = 0;

     label5:
        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $i2 = lengthof $r3;

        if $i1 >= $i2 goto label6;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $b3 = $r3[$i1];

        $i2 = $b3 ^ $i0;

        $b3 = (byte) $i2;

        $r1[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label5;

     label6:
        $r4 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour>;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $i1 = lengthof $r3;

        virtualinvoke $r4.<com.itextpdf.text.pdf.crypto.ARCFOUREncryption: void prepareARCFOURKey(byte[],int,int)>($r1, 0, $i1);

        $r4 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour>;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        virtualinvoke $r4.<com.itextpdf.text.pdf.crypto.ARCFOUREncryption: void encryptARCFOUR(byte[],int,int)>($r3, 0, 16);

        $i0 = $i0 + 1;

        goto label4;

     label7:
        $r4 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour>;

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        virtualinvoke $r4.<com.itextpdf.text.pdf.crypto.ARCFOUREncryption: void prepareARCFOURKey(byte[])>($r1);

        $r4 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.crypto.ARCFOUREncryption arcfour>;

        $r1 = <com.itextpdf.text.pdf.PdfEncryption: byte[] pad>;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        virtualinvoke $r4.<com.itextpdf.text.pdf.crypto.ARCFOUREncryption: void encryptARCFOUR(byte[],byte[])>($r1, $r3);

     label8:
        return;
    }

    public void addRecipient(java.security.cert.Certificate, int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        java.security.cert.Certificate $r1;
        int $i0;
        com.itextpdf.text.pdf.PdfPublicKeyRecipient $r2;
        byte[] $r3;
        com.itextpdf.text.pdf.PdfPublicKeySecurityHandler $r4;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: java.security.cert.Certificate;

        $i0 := @parameter1: int;

        $r3 = staticinvoke <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>();

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID> = $r3;

        $r4 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler>;

        $r2 = new com.itextpdf.text.pdf.PdfPublicKeyRecipient;

        specialinvoke $r2.<com.itextpdf.text.pdf.PdfPublicKeyRecipient: void <init>(java.security.cert.Certificate,int)>($r1, $i0);

        virtualinvoke $r4.<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void addRecipient(com.itextpdf.text.pdf.PdfPublicKeyRecipient)>($r2);

        return;
    }

    public int calculateStreamSize(int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        int $i0, $i1;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $i0 := @parameter0: int;

        $i1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i1 == 4 goto label1;

        $i1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i1 != 5 goto label2;

     label1:
        $i0 = 2147483632 & $i0;

        $i0 = $i0 + 32;

     label2:
        return $i0;
    }

    public byte[] computeUserPassword(byte[])
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r2;
        int $i0, $i1, $i2;
        boolean $z0;
        byte $b3, $b4;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey>;

        $r1 = specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] padPassword(byte[])>($r1);

        $r1 = specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] computeOwnerKey(byte[],byte[])>($r2, $r1);

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label6;

        $z0 = 1;

        $i1 = 0;

     label2:
        $i2 = lengthof $r1;

        $i2 = $i2 - $i0;

        if $i1 >= $i2 goto label3;

        $i2 = $i0 + $i1;

        $b3 = $r1[$i2];

        $r2 = <com.itextpdf.text.pdf.PdfEncryption: byte[] pad>;

        $b4 = $r2[$i1];

        if $b3 == $b4 goto label4;

        $z0 = 0;

     label3:
        if $z0 != 0 goto label5;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $r2 = newarray (byte)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return $r2;

     label6:
        return $r1;
    }

    public byte[] decryptByteArray(byte[])
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1;
        java.io.ByteArrayOutputStream $r2, r5;
        java.lang.Throwable $r3;
        int $i0;
        com.itextpdf.text.pdf.StandardDecryption $r4;
        com.itextpdf.text.ExceptionConverter r6;
        java.lang.Exception r7;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        r5 = new java.io.ByteArrayOutputStream;

        $r2 = r5;

     label01:
        specialinvoke r5.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = virtualinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.StandardDecryption getDecryptor()>();

     label02:
        $i0 = lengthof $r1;

     label03:
        $r1 = virtualinvoke $r4.<com.itextpdf.text.pdf.StandardDecryption: byte[] update(byte[],int,int)>($r1, 0, $i0);

     label04:
        if $r1 == null goto label06;

     label05:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r1);

     label06:
        $r1 = virtualinvoke $r4.<com.itextpdf.text.pdf.StandardDecryption: byte[] finish()>();

     label07:
        if $r1 == null goto label09;

     label08:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r1);

     label09:
        $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label10:
        return $r1;

     label11:
        $r3 := @caughtexception;

        r6 = new com.itextpdf.text.ExceptionConverter;

        r7 = (java.lang.Exception) $r3;

        specialinvoke r6.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>(r7);

        throw r6;

        catch java.io.IOException from label01 to label02 with label11;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label07 with label11;
        catch java.io.IOException from label08 to label10 with label11;
    }

    public byte[] encryptByteArray(byte[])
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1;
        java.io.ByteArrayOutputStream $r2, r5;
        java.lang.Throwable $r3;
        com.itextpdf.text.pdf.OutputStreamEncryption $r4;
        com.itextpdf.text.ExceptionConverter r6;
        java.lang.Exception r7;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        r5 = new java.io.ByteArrayOutputStream;

        $r2 = r5;

     label1:
        specialinvoke r5.<java.io.ByteArrayOutputStream: void <init>()>();

        $r4 = virtualinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.OutputStreamEncryption getEncryptionStream(java.io.OutputStream)>($r2);

        virtualinvoke $r4.<com.itextpdf.text.pdf.OutputStreamEncryption: void write(byte[])>($r1);

        virtualinvoke $r4.<com.itextpdf.text.pdf.OutputStreamEncryption: void finish()>();

        $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        r6 = new com.itextpdf.text.ExceptionConverter;

        r7 = (java.lang.Exception) $r3;

        specialinvoke r6.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>(r7);

        throw r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getCryptoMode()
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        int i0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int cryptoMode>;

        return i0;
    }

    public com.itextpdf.text.pdf.StandardDecryption getDecryptor()
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        com.itextpdf.text.pdf.StandardDecryption $r1;
        byte[] $r2;
        int $i0, $i1;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 = new com.itextpdf.text.pdf.StandardDecryption;

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int keySize>;

        $i1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        specialinvoke $r1.<com.itextpdf.text.pdf.StandardDecryption: void <init>(byte[],int,int,int)>($r2, 0, $i0, $i1);

        return $r1;
    }

    public com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        com.itextpdf.text.pdf.PdfDictionary $r1, $r11, $r13;
        com.itextpdf.text.pdf.PdfPublicKeySecurityHandler $r2;
        int $i0, $i1;
        com.itextpdf.text.pdf.PdfName $r3, $r4;
        com.itextpdf.text.pdf.PdfNumber $r5;
        com.itextpdf.text.pdf.PdfArray $r6;
        java.security.MessageDigest $r7;
        byte[] $r8;
        java.lang.Exception $r9, $r14;
        com.itextpdf.text.ExceptionConverter $r10;
        boolean $z0;
        com.itextpdf.text.pdf.PdfBoolean $r12;
        com.itextpdf.text.pdf.PdfLiteral $r15;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 = new com.itextpdf.text.pdf.PdfDictionary;

        specialinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void <init>()>();

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler>;

        $i0 = virtualinvoke $r2.<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: int getRecipientsSize()>();

        if $i0 <= 0 goto label30;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName FILTER>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName PUBSEC>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName R>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>($i0);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

     label01:
        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler>;

        $r6 = virtualinvoke $r2.<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: com.itextpdf.text.pdf.PdfArray getEncodedRecipients()>();

     label02:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 2 goto label13;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(1);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName SUBFILTER>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName ADBE_PKCS7_S4>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName RECIPIENTS>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r6);

     label03:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

     label04:
        if $i0 != 5 goto label22;

     label05:
        $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

     label06:
        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler>;

        $r8 = virtualinvoke $r2.<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: byte[] getSeed()>();

        virtualinvoke $r7.<java.security.MessageDigest: void update(byte[])>($r8);

     label07:
        $i0 = 0;

     label08:
        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler>;

        $i1 = virtualinvoke $r2.<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: int getRecipientsSize()>();

     label09:
        if $i0 >= $i1 goto label24;

     label10:
        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler publicKeyHandler>;

        $r8 = virtualinvoke $r2.<com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: byte[] getEncodedRecipient(int)>($i0);

        virtualinvoke $r7.<java.security.MessageDigest: void update(byte[])>($r8);

     label11:
        $i0 = $i0 + 1;

        goto label08;

     label12:
        $r9 := @caughtexception;

        $r10 = new com.itextpdf.text.ExceptionConverter;

        specialinvoke $r10.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label13:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 3 goto label14;

        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

        if $z0 == 0 goto label14;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(2);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName LENGTH>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(128);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName SUBFILTER>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName ADBE_PKCS7_S4>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName RECIPIENTS>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r6);

        goto label03;

     label14:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 5 goto label18;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName R>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(5);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(5);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

     label15:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName SUBFILTER>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName ADBE_PKCS7_S5>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r11 = new com.itextpdf.text.pdf.PdfDictionary;

        specialinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void <init>()>();

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName RECIPIENTS>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r6);

        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

        if $z0 != 0 goto label16;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName ENCRYPTMETADATA>;

        $r12 = <com.itextpdf.text.pdf.PdfBoolean: com.itextpdf.text.pdf.PdfBoolean PDFFALSE>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r12);

     label16:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 4 goto label19;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CFM>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AESV2>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName LENGTH>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(128);

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

     label17:
        $r13 = new com.itextpdf.text.pdf.PdfDictionary;

        specialinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void <init>()>();

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName DEFAULTCRYPTFILTER>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r11);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CF>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r13);

        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean embeddedFilesOnly>;

        if $z0 == 0 goto label21;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName EFF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName DEFAULTCRYPTFILTER>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STRF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName IDENTITY>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STMF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName IDENTITY>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        goto label03;

     label18:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName R>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(4);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(4);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        goto label15;

     label19:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 5 goto label20;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CFM>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AESV3>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName LENGTH>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(256);

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        goto label17;

     label20:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CFM>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V2>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        goto label17;

     label21:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STRF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName DEFAULTCRYPTFILTER>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STMF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName DEFAULTCRYPTFILTER>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        goto label03;

     label22:
        $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

     label23:
        goto label06;

     label24:
        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

     label25:
        if $z0 != 0 goto label27;

     label26:
        $r8 = newarray (byte)[4];

        $r8[0] = -1;

        $r8[1] = -1;

        $r8[2] = -1;

        $r8[3] = -1;

        virtualinvoke $r7.<java.security.MessageDigest: void update(byte[])>($r8);

     label27:
        $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>();

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 5 goto label29;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key> = $r8;

        return $r1;

     label28:
        $r14 := @caughtexception;

        $r10 = new com.itextpdf.text.ExceptionConverter;

        specialinvoke $r10.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r14);

        throw $r10;

     label29:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int keyLength>;

        virtualinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: void setupByEncryptionKey(byte[],int)>($r8, $i0);

        return $r1;

     label30:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName FILTER>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STANDARD>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName O>;

        $r15 = new com.itextpdf.text.pdf.PdfLiteral;

        $r8 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey>;

        $r8 = staticinvoke <com.itextpdf.text.pdf.PdfContentByte: byte[] escapeString(byte[])>($r8);

        specialinvoke $r15.<com.itextpdf.text.pdf.PdfLiteral: void <init>(byte[])>($r8);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r15);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName U>;

        $r15 = new com.itextpdf.text.pdf.PdfLiteral;

        $r8 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        $r8 = staticinvoke <com.itextpdf.text.pdf.PdfContentByte: byte[] escapeString(byte[])>($r8);

        specialinvoke $r15.<com.itextpdf.text.pdf.PdfLiteral: void <init>(byte[])>($r8);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r15);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName P>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int permissions>;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>($i0);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName R>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>($i0);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 2 goto label31;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(1);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        return $r1;

     label31:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 3 goto label32;

        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

        if $z0 == 0 goto label32;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(2);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName LENGTH>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(128);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        return $r1;

     label32:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 5 goto label36;

        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

        if $z0 != 0 goto label33;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName ENCRYPTMETADATA>;

        $r12 = <com.itextpdf.text.pdf.PdfBoolean: com.itextpdf.text.pdf.PdfBoolean PDFFALSE>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r12);

     label33:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName OE>;

        $r15 = new com.itextpdf.text.pdf.PdfLiteral;

        $r8 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] oeKey>;

        $r8 = staticinvoke <com.itextpdf.text.pdf.PdfContentByte: byte[] escapeString(byte[])>($r8);

        specialinvoke $r15.<com.itextpdf.text.pdf.PdfLiteral: void <init>(byte[])>($r8);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r15);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName UE>;

        $r15 = new com.itextpdf.text.pdf.PdfLiteral;

        $r8 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ueKey>;

        $r8 = staticinvoke <com.itextpdf.text.pdf.PdfContentByte: byte[] escapeString(byte[])>($r8);

        specialinvoke $r15.<com.itextpdf.text.pdf.PdfLiteral: void <init>(byte[])>($r8);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r15);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName PERMS>;

        $r15 = new com.itextpdf.text.pdf.PdfLiteral;

        $r8 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] perms>;

        $r8 = staticinvoke <com.itextpdf.text.pdf.PdfContentByte: byte[] escapeString(byte[])>($r8);

        specialinvoke $r15.<com.itextpdf.text.pdf.PdfLiteral: void <init>(byte[])>($r8);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r15);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>($i0);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName LENGTH>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(256);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r11 = new com.itextpdf.text.pdf.PdfDictionary;

        specialinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void <init>()>();

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName LENGTH>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(32);

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean embeddedFilesOnly>;

        if $z0 == 0 goto label35;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AUTHEVENT>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName EFOPEN>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName EFF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STDCF>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STRF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName IDENTITY>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STMF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName IDENTITY>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

     label34:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CFM>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AESV3>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r13 = new com.itextpdf.text.pdf.PdfDictionary;

        specialinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void <init>()>();

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STDCF>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r11);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CF>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r13);

        return $r1;

     label35:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AUTHEVENT>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName DOCOPEN>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STRF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STDCF>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STMF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STDCF>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        goto label34;

     label36:
        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

        if $z0 != 0 goto label37;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName ENCRYPTMETADATA>;

        $r12 = <com.itextpdf.text.pdf.PdfBoolean: com.itextpdf.text.pdf.PdfBoolean PDFFALSE>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r12);

     label37:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName R>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(4);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(4);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName LENGTH>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(128);

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $r11 = new com.itextpdf.text.pdf.PdfDictionary;

        specialinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void <init>()>();

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName LENGTH>;

        $r5 = new com.itextpdf.text.pdf.PdfNumber;

        specialinvoke $r5.<com.itextpdf.text.pdf.PdfNumber: void <init>(int)>(16);

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r5);

        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean embeddedFilesOnly>;

        if $z0 == 0 goto label40;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AUTHEVENT>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName EFOPEN>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName EFF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STDCF>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STRF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName IDENTITY>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STMF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName IDENTITY>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

     label38:
        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 4 goto label41;

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CFM>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AESV2>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

     label39:
        $r13 = new com.itextpdf.text.pdf.PdfDictionary;

        specialinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void <init>()>();

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STDCF>;

        virtualinvoke $r13.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r11);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CF>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r13);

        return $r1;

     label40:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName AUTHEVENT>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName DOCOPEN>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STRF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STDCF>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STMF>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName STDCF>;

        virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        goto label38;

     label41:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName CFM>;

        $r4 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName V2>;

        virtualinvoke $r11.<com.itextpdf.text.pdf.PdfDictionary: void put(com.itextpdf.text.pdf.PdfName,com.itextpdf.text.pdf.PdfObject)>($r3, $r4);

        goto label39;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label28;
        catch java.lang.Exception from label05 to label06 with label28;
        catch java.lang.Exception from label06 to label07 with label28;
        catch java.lang.Exception from label08 to label09 with label28;
        catch java.lang.Exception from label10 to label11 with label28;
        catch java.lang.Exception from label22 to label23 with label28;
        catch java.lang.Exception from label24 to label25 with label28;
        catch java.lang.Exception from label26 to label27 with label28;
    }

    public com.itextpdf.text.pdf.OutputStreamEncryption getEncryptionStream(java.io.OutputStream)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        java.io.OutputStream $r1;
        com.itextpdf.text.pdf.OutputStreamEncryption $r2;
        byte[] $r3;
        int $i0, $i1;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 = new com.itextpdf.text.pdf.OutputStreamEncryption;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int keySize>;

        $i1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        specialinvoke $r2.<com.itextpdf.text.pdf.OutputStreamEncryption: void <init>(java.io.OutputStream,byte[],int,int,int)>($r1, $r3, 0, $i0, $i1);

        return $r2;
    }

    public com.itextpdf.text.pdf.PdfObject getFileID()
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        com.itextpdf.text.pdf.PdfObject $r1;
        byte[] $r2;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID>;

        $r1 = staticinvoke <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfObject createInfoId(byte[])>($r2);

        return $r1;
    }

    public int getPermissions()
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        int i0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int permissions>;

        return i0;
    }

    public boolean isEmbeddedFilesOnly()
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        boolean z0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean embeddedFilesOnly>;

        return z0;
    }

    public boolean isMetadataEncrypted()
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        boolean z0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

        return z0;
    }

    public boolean readKey(com.itextpdf.text.pdf.PdfDictionary, byte[]) throws com.itextpdf.text.exceptions.BadPasswordException
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        com.itextpdf.text.pdf.PdfDictionary $r1;
        byte[] $r2, $r6, $r7, $r8, $r9, $r10, $r12;
        com.itextpdf.text.pdf.PdfName $r3;
        com.itextpdf.text.pdf.PdfObject $r4;
        java.lang.String $r5;
        java.security.MessageDigest $r11;
        int $i0, $i4;
        boolean $z0, $z1;
        com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad $r13;
        byte $b1;
        com.itextpdf.text.exceptions.BadPasswordException $r14;
        java.lang.Object[] $r15;
        java.lang.Exception $r16;
        com.itextpdf.text.ExceptionConverter $r17;
        short $s2, $s3;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: com.itextpdf.text.pdf.PdfDictionary;

        $r2 := @parameter1: byte[];

        if $r2 != null goto label02;

     label01:
        $r2 = newarray (byte)[0];

     label02:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName O>;

     label03:
        $r4 = virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfObject get(com.itextpdf.text.pdf.PdfName)>($r3);

        $r5 = virtualinvoke $r4.<com.itextpdf.text.pdf.PdfObject: java.lang.String toString()>();

        $r6 = staticinvoke <com.itextpdf.text.DocWriter: byte[] getISOBytes(java.lang.String)>($r5);

     label04:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName U>;

     label05:
        $r4 = virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfObject get(com.itextpdf.text.pdf.PdfName)>($r3);

        $r5 = virtualinvoke $r4.<com.itextpdf.text.pdf.PdfObject: java.lang.String toString()>();

        $r7 = staticinvoke <com.itextpdf.text.DocWriter: byte[] getISOBytes(java.lang.String)>($r5);

     label06:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName OE>;

     label07:
        $r4 = virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfObject get(com.itextpdf.text.pdf.PdfName)>($r3);

        $r5 = virtualinvoke $r4.<com.itextpdf.text.pdf.PdfObject: java.lang.String toString()>();

        $r8 = staticinvoke <com.itextpdf.text.DocWriter: byte[] getISOBytes(java.lang.String)>($r5);

     label08:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName UE>;

     label09:
        $r4 = virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfObject get(com.itextpdf.text.pdf.PdfName)>($r3);

        $r5 = virtualinvoke $r4.<com.itextpdf.text.pdf.PdfObject: java.lang.String toString()>();

        $r9 = staticinvoke <com.itextpdf.text.DocWriter: byte[] getISOBytes(java.lang.String)>($r5);

     label10:
        $r3 = <com.itextpdf.text.pdf.PdfName: com.itextpdf.text.pdf.PdfName PERMS>;

     label11:
        $r4 = virtualinvoke $r1.<com.itextpdf.text.pdf.PdfDictionary: com.itextpdf.text.pdf.PdfObject get(com.itextpdf.text.pdf.PdfName)>($r3);

        $r5 = virtualinvoke $r4.<com.itextpdf.text.pdf.PdfObject: java.lang.String toString()>();

        $r10 = staticinvoke <com.itextpdf.text.DocWriter: byte[] getISOBytes(java.lang.String)>($r5);

        $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

     label12:
        $i0 = lengthof $r2;

     label13:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 127);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i0);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r6, 32, 8);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r7, 0, 48);

        $r12 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>();

        $z0 = staticinvoke <com.itextpdf.text.pdf.PdfEncryption: boolean compareArray(byte[],byte[],int)>($r12, $r6, 32);

     label14:
        if $z0 == 0 goto label37;

     label15:
        $i0 = lengthof $r2;

     label16:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 127);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i0);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r6, 40, 8);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r7, 0, 48);

        $r2 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>();

     label17:
        $r13 = new com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad;

     label18:
        specialinvoke $r13.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: void <init>(boolean,byte[])>(0, $r2);

     label19:
        $i0 = lengthof $r8;

     label20:
        $r2 = virtualinvoke $r13.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: byte[] processBlock(byte[],int,int)>($r8, 0, $i0);

     label21:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key> = $r2;

     label22:
        $r13 = new com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad;

     label23:
        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

     label24:
        specialinvoke $r13.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: void <init>(boolean,byte[])>(0, $r2);

     label25:
        $i0 = lengthof $r10;

     label26:
        $r2 = virtualinvoke $r13.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: byte[] processBlock(byte[],int,int)>($r10, 0, $i0);

     label27:
        $b1 = $r2[9];

     label28:
        if $b1 != 97 goto label33;

     label29:
        $b1 = $r2[10];

     label30:
        if $b1 != 100 goto label33;

     label31:
        $b1 = $r2[11];

     label32:
        if $b1 == 98 goto label51;

     label33:
        $r14 = new com.itextpdf.text.exceptions.BadPasswordException;

     label34:
        $r15 = newarray (java.lang.Object)[0];

     label35:
        $r5 = staticinvoke <com.itextpdf.text.error_messages.MessageLocalization: java.lang.String getComposedMessage(java.lang.String,java.lang.Object[])>("bad.user.password", $r15);

        specialinvoke $r14.<com.itextpdf.text.exceptions.BadPasswordException: void <init>(java.lang.String)>($r5);

        throw $r14;

     label36:
        $r14 := @caughtexception;

        throw $r14;

     label37:
        $i0 = lengthof $r2;

     label38:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 127);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i0);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r7, 32, 8);

        $r8 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>();

        $z1 = staticinvoke <com.itextpdf.text.pdf.PdfEncryption: boolean compareArray(byte[],byte[],int)>($r8, $r7, 32);

     label39:
        if $z1 != 0 goto label43;

        $r14 = new com.itextpdf.text.exceptions.BadPasswordException;

     label40:
        $r15 = newarray (java.lang.Object)[0];

     label41:
        $r5 = staticinvoke <com.itextpdf.text.error_messages.MessageLocalization: java.lang.String getComposedMessage(java.lang.String,java.lang.Object[])>("bad.user.password", $r15);

        specialinvoke $r14.<com.itextpdf.text.exceptions.BadPasswordException: void <init>(java.lang.String)>($r5);

        throw $r14;

     label42:
        $r16 := @caughtexception;

        $r17 = new com.itextpdf.text.ExceptionConverter;

        specialinvoke $r17.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r16);

        throw $r17;

     label43:
        $i0 = lengthof $r2;

     label44:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, 127);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i0);

        virtualinvoke $r11.<java.security.MessageDigest: void update(byte[],int,int)>($r7, 40, 8);

        $r2 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>();

     label45:
        $r13 = new com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad;

     label46:
        specialinvoke $r13.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: void <init>(boolean,byte[])>(0, $r2);

     label47:
        $i0 = lengthof $r9;

     label48:
        $r2 = virtualinvoke $r13.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: byte[] processBlock(byte[],int,int)>($r9, 0, $i0);

     label49:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key> = $r2;

     label50:
        goto label22;

     label51:
        $b1 = $r2[0];

     label52:
        $s2 = $b1 & 255;

     label53:
        $b1 = $r2[1];

     label54:
        $s3 = $b1 & 255;

        $i0 = $s3 << 8;

        $i0 = $s2 | $i0;

     label55:
        $b1 = $r2[2];

     label56:
        $s2 = $b1 & 255;

        $i4 = $s2 << 16;

        $i0 = $i0 | $i4;

     label57:
        $b1 = $r2[2];

     label58:
        $s2 = $b1 & 255;

        $i4 = $s2 << 24;

        $i0 = $i0 | $i4;

     label59:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: int permissions> = $i0;

        $b1 = $r2[8];

     label60:
        if $b1 != 84 goto label63;

        $z1 = 1;

     label61:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata> = $z1;

     label62:
        return $z0;

     label63:
        $z1 = 0;

        goto label61;

        catch com.itextpdf.text.exceptions.BadPasswordException from label03 to label04 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label05 to label06 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label07 to label08 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label09 to label10 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label11 to label12 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label13 to label14 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label16 to label17 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label18 to label19 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label20 to label21 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label24 to label25 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label26 to label27 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label35 to label36 with label36;
        catch java.lang.Exception from label01 to label02 with label42;
        catch java.lang.Exception from label03 to label04 with label42;
        catch java.lang.Exception from label05 to label06 with label42;
        catch java.lang.Exception from label07 to label08 with label42;
        catch java.lang.Exception from label09 to label10 with label42;
        catch java.lang.Exception from label11 to label14 with label42;
        catch java.lang.Exception from label15 to label17 with label42;
        catch java.lang.Exception from label18 to label22 with label42;
        catch java.lang.Exception from label23 to label28 with label42;
        catch java.lang.Exception from label29 to label30 with label42;
        catch java.lang.Exception from label31 to label32 with label42;
        catch java.lang.Exception from label34 to label36 with label42;
        catch com.itextpdf.text.exceptions.BadPasswordException from label38 to label39 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label41 to label42 with label36;
        catch java.lang.Exception from label37 to label39 with label42;
        catch java.lang.Exception from label40 to label42 with label42;
        catch com.itextpdf.text.exceptions.BadPasswordException from label44 to label45 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label46 to label47 with label36;
        catch com.itextpdf.text.exceptions.BadPasswordException from label48 to label49 with label36;
        catch java.lang.Exception from label43 to label45 with label42;
        catch java.lang.Exception from label46 to label50 with label42;
        catch java.lang.Exception from label51 to label52 with label42;
        catch java.lang.Exception from label53 to label54 with label42;
        catch java.lang.Exception from label55 to label56 with label42;
        catch java.lang.Exception from label57 to label58 with label42;
        catch java.lang.Exception from label59 to label60 with label42;
        catch java.lang.Exception from label61 to label62 with label42;
    }

    public void setCryptoMode(int, int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;
        java.lang.Object[] $r3;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int cryptoMode> = $i1;

        $i2 = $i1 & 8;

        if $i2 == 8 goto label04;

        $z0 = 1;

     label01:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata> = $z0;

        $i2 = $i1 & 24;

        if $i2 != 24 goto label05;

        $z0 = 1;

     label02:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean embeddedFilesOnly> = $z0;

        $i1 = $i1 & 7;

        lookupswitch($i1)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label03;
        };

     label03:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = newarray (java.lang.Object)[0];

        $r1 = staticinvoke <com.itextpdf.text.error_messages.MessageLocalization: java.lang.String getComposedMessage(java.lang.String,java.lang.Object[])>("no.valid.encryption.mode", $r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label04:
        $z0 = 0;

        goto label01;

     label05:
        $z0 = 0;

        goto label02;

     label06:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata> = 1;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean embeddedFilesOnly> = 0;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keyLength> = 40;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision> = 2;

        return;

     label07:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean embeddedFilesOnly> = 0;

        if $i0 <= 0 goto label09;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keyLength> = $i0;

     label08:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision> = 3;

        return;

     label09:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keyLength> = 128;

        goto label08;

     label10:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keyLength> = 128;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision> = 4;

        return;

     label11:
        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keyLength> = 256;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keySize> = 32;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision> = 5;

        return;
    }

    public void setHashKey(int, int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        int $i0, $i1, $i2;
        byte[] $r1;
        java.security.MessageDigest $r2;
        byte $b3;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i2 != 5 goto label1;

        return;

     label1:
        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        virtualinvoke $r2.<java.security.MessageDigest: void reset()>();

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] extra>;

        $b3 = (byte) $i0;

        $r1[0] = $b3;

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] extra>;

        $i2 = $i0 >> 8;

        $b3 = (byte) $i2;

        $r1[1] = $b3;

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] extra>;

        $i0 = $i0 >> 16;

        $b3 = (byte) $i0;

        $r1[2] = $b3;

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] extra>;

        $b3 = (byte) $i1;

        $r1[3] = $b3;

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] extra>;

        $i0 = $i1 >> 8;

        $b3 = (byte) $i0;

        $r1[4] = $b3;

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r1);

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] extra>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r1);

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i0 != 4 goto label2;

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r1 = <com.itextpdf.text.pdf.PdfEncryption: byte[] salt>;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r1);

     label2:
        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key> = $r1;

        $r1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $i0 = lengthof $r1;

        $i0 = $i0 + 5;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keySize> = $i0;

        $i0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int keySize>;

        if $i0 <= 16 goto label3;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int keySize> = 16;

     label3:
        return;
    }

    public void setKey(byte[])
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key> = $r1;

        return;
    }

    public void setupAllKeys(byte[], byte[], int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        java.lang.Exception $r1;
        byte[] $r2, $r3, $r5, $r6, $r7;
        int $i0, $i1;
        java.security.MessageDigest $r4;
        short $s2;
        com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad $r8;
        byte $b3;
        boolean $z0;
        com.itextpdf.text.ExceptionConverter $r9;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r2 := @parameter0: byte[];

        $r3 := @parameter1: byte[];

        $i0 := @parameter2: int;

        if $r3 == null goto label01;

        $i1 = lengthof $r3;

        if $i1 != 0 goto label02;

     label01:
        $r4 = $r0.<com.itextpdf.text.pdf.PdfEncryption: java.security.MessageDigest md5>;

        $r3 = staticinvoke <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>();

        $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

     label02:
        $i1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i1 == 3 goto label03;

        $i1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i1 == 4 goto label03;

        $i1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i1 != 5 goto label24;

     label03:
        $s2 = -3904;

     label04:
        $i0 = $i0 | $s2;

        $i0 = $i0 & -4;

        $r0.<com.itextpdf.text.pdf.PdfEncryption: int permissions> = $i0;

        $i1 = $r0.<com.itextpdf.text.pdf.PdfEncryption: int revision>;

        if $i1 != 5 goto label27;

        if $r2 != null goto label06;

     label05:
        $r2 = newarray (byte)[0];

     label06:
        $r5 = staticinvoke <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>();

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID> = $r5;

        $r6 = staticinvoke <com.itextpdf.text.pdf.crypto.IVGenerator: byte[] getIV(int)>(8);

        $r5 = staticinvoke <com.itextpdf.text.pdf.crypto.IVGenerator: byte[] getIV(int)>(8);

        $r7 = staticinvoke <com.itextpdf.text.pdf.crypto.IVGenerator: byte[] getIV(int)>(32);

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key> = $r7;

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        $i1 = lengthof $r2;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 127);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i1);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r6);

        $r7 = newarray (byte)[48];

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey> = $r7;

        $r7 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        virtualinvoke $r4.<java.security.MessageDigest: int digest(byte[],int,int)>($r7, 0, 32);

        $r7 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r7, 32, 8);

        $r6 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r6, 40, 8);

        $i1 = lengthof $r2;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 127);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i1);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r5);

     label07:
        $r8 = new com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad;

     label08:
        $r2 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r8.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: void <init>(boolean,byte[])>(1, $r2);

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

        $i1 = lengthof $r5;

        $r2 = virtualinvoke $r8.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: byte[] processBlock(byte[],int,int)>($r2, 0, $i1);

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ueKey> = $r2;

        $r5 = staticinvoke <com.itextpdf.text.pdf.crypto.IVGenerator: byte[] getIV(int)>(8);

        $r2 = staticinvoke <com.itextpdf.text.pdf.crypto.IVGenerator: byte[] getIV(int)>(8);

        $i1 = lengthof $r3;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 127);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r3, 0, $i1);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r5);

        $r6 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r6);

        $r6 = newarray (byte)[48];

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey> = $r6;

        $r6 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey>;

        virtualinvoke $r4.<java.security.MessageDigest: int digest(byte[],int,int)>($r6, 0, 32);

        $r6 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r6, 32, 8);

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r5, 40, 8);

        $i1 = lengthof $r3;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, 127);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r3, 0, $i1);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] userKey>;

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r2);

     label09:
        $r8 = new com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad;

     label10:
        $r2 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r8.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: void <init>(boolean,byte[])>(1, $r2);

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

        $i1 = lengthof $r3;

        $r2 = virtualinvoke $r8.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: byte[] processBlock(byte[],int,int)>($r2, 0, $i1);

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] oeKey> = $r2;

        $r2 = staticinvoke <com.itextpdf.text.pdf.crypto.IVGenerator: byte[] getIV(int)>(16);

     label11:
        $b3 = (byte) $i0;

     label12:
        $r2[0] = $b3;

     label13:
        $i1 = $i0 >> 8;

        $b3 = (byte) $i1;

     label14:
        $r2[1] = $b3;

     label15:
        $i1 = $i0 >> 16;

        $b3 = (byte) $i1;

     label16:
        $r2[2] = $b3;

     label17:
        $i0 = $i0 >> 24;

        $b3 = (byte) $i0;

     label18:
        $r2[3] = $b3;

        $r2[4] = -1;

        $r2[5] = -1;

        $r2[6] = -1;

        $r2[7] = -1;

        $z0 = $r0.<com.itextpdf.text.pdf.PdfEncryption: boolean encryptMetadata>;

     label19:
        if $z0 == 0 goto label25;

        $b3 = 84;

     label20:
        $r2[8] = $b3;

        $r2[9] = 97;

        $r2[10] = 100;

        $r2[11] = 98;

     label21:
        $r8 = new com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad;

     label22:
        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] key>;

        specialinvoke $r8.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: void <init>(boolean,byte[])>(1, $r3);

        $i0 = lengthof $r2;

        $r2 = virtualinvoke $r8.<com.itextpdf.text.pdf.crypto.AESCipherCBCnoPad: byte[] processBlock(byte[],int,int)>($r2, 0, $i0);

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] perms> = $r2;

     label23:
        return;

     label24:
        $s2 = -64;

        goto label04;

     label25:
        $b3 = 70;

        goto label20;

     label26:
        $r1 := @caughtexception;

        $r9 = new com.itextpdf.text.ExceptionConverter;

        specialinvoke $r9.<com.itextpdf.text.ExceptionConverter: void <init>(java.lang.Exception)>($r1);

        throw $r9;

     label27:
        $r2 = specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] padPassword(byte[])>($r2);

        $r3 = specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] padPassword(byte[])>($r3);

        $r3 = specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] computeOwnerKey(byte[],byte[])>($r2, $r3);

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey> = $r3;

        $r3 = staticinvoke <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>();

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID> = $r3;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] documentID>;

        $r5 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] ownerKey>;

        specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: void setupByUserPad(byte[],byte[],byte[],int)>($r3, $r2, $r5, $i0);

        return;

        catch java.lang.Exception from label05 to label06 with label26;
        catch java.lang.Exception from label06 to label07 with label26;
        catch java.lang.Exception from label08 to label09 with label26;
        catch java.lang.Exception from label10 to label11 with label26;
        catch java.lang.Exception from label12 to label13 with label26;
        catch java.lang.Exception from label14 to label15 with label26;
        catch java.lang.Exception from label16 to label17 with label26;
        catch java.lang.Exception from label18 to label19 with label26;
        catch java.lang.Exception from label20 to label21 with label26;
        catch java.lang.Exception from label22 to label23 with label26;
    }

    public void setupByEncryptionKey(byte[], int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r2, $r3;
        int $i0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i0 = $i0 / 8;

        $r2 = newarray (byte)[$i0];

        $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey> = $r2;

        $r2 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $r3 = $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] mkey>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i0);

        return;
    }

    public void setupByOwnerPassword(byte[], byte[], byte[], byte[], int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r2, $r3, $r4;
        int $i0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: byte[];

        $i0 := @parameter4: int;

        $r2 = specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] padPassword(byte[])>($r2);

        specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: void setupByOwnerPad(byte[],byte[],byte[],byte[],int)>($r1, $r2, $r3, $r4, $i0);

        return;
    }

    public void setupByUserPassword(byte[], byte[], byte[], int)
    {
        com.itextpdf.text.pdf.PdfEncryption $r0;
        byte[] $r1, $r2, $r3;
        int $i0;

        $r0 := @this: com.itextpdf.text.pdf.PdfEncryption;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: byte[];

        $i0 := @parameter3: int;

        $r2 = specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: byte[] padPassword(byte[])>($r2);

        specialinvoke $r0.<com.itextpdf.text.pdf.PdfEncryption: void setupByUserPad(byte[],byte[],byte[],int)>($r1, $r2, $r3, $i0);

        return;
    }
}
