public class com.tune.Tune extends java.lang.Object
{
    private static volatile com.tune.Tune tune;
    private final java.lang.String IV;
    protected boolean collectLocation;
    private boolean debugMode;
    private com.tune.TuneDeferredDplinkr dplinkr;
    private com.tune.TuneEncryption encryption;
    protected com.tune.TuneEventQueue eventQueue;
    private boolean fbLogging;
    private boolean firstSession;
    boolean gotGaid;
    boolean gotReferrer;
    private long initTime;
    protected boolean initialized;
    protected boolean isRegistered;
    protected com.tune.location.TuneLocationListener locationListener;
    protected android.content.Context mContext;
    private com.tune.TunePreloadData mPreloadData;
    protected android.content.BroadcastReceiver networkStateReceiver;
    boolean notifiedPool;
    protected com.tune.TuneParameters params;
    java.util.concurrent.ExecutorService pool;
    protected java.util.concurrent.ExecutorService pubQueue;
    private long referrerTime;
    private com.tune.TuneListener tuneListener;
    protected com.tune.TuneTestRequest tuneRequest;
    private com.tune.http.UrlRequester urlRequester;

    static void <clinit>()
    {
        null_type varReplacer2979;

        nop;

        varReplacer2979 = null;

        <com.tune.Tune: com.tune.Tune tune> = varReplacer2979;

        return;
    }

    protected void <init>()
    {
        com.tune.Tune $r0;
        java.lang.String varReplacer3320;

        nop;

        $r0 := @this: com.tune.Tune;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer3320 = "heF9BATUfWuISyO8";

        $r0.<com.tune.Tune: java.lang.String IV> = varReplacer3320;

        return;
    }

    static void access$000(com.tune.Tune, com.tune.TuneEvent)
    {
        com.tune.Tune $r0;
        com.tune.TuneEvent $r1;

        $r0 := @parameter0: com.tune.Tune;

        $r1 := @parameter1: com.tune.TuneEvent;

        specialinvoke $r0.<com.tune.Tune: void measure(com.tune.TuneEvent)>($r1);

        return;
    }

    static void clear()
    {
        java.lang.Throwable $r0;

        entermonitor class "Lcom/tune/Tune;";

     label1:
        <com.tune.Tune: com.tune.Tune tune> = null;

     label2:
        exitmonitor class "Lcom/tune/Tune;";

        return;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/tune/Tune;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private boolean firstInstall()
    {
        com.tune.Tune $r0;
        android.content.Context $r1;
        android.content.SharedPreferences $r2;
        boolean $z0;
        android.content.SharedPreferences$Editor $r3;

        $r0 := @this: com.tune.Tune;

        $r1 = $r0.<com.tune.Tune: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.mobileapptracking", 0);

        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean contains(java.lang.String)>("mat_installed");

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("mat_installed", 1);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: void apply()>();

        return 1;
    }

    public static com.tune.Tune getInstance()
    {
        java.lang.Throwable $r0;
        com.tune.Tune r1;

        nop;

        entermonitor class "Lcom/tune/Tune;";

     label1:
        r1 = <com.tune.Tune: com.tune.Tune tune>;

     label2:
        exitmonitor class "Lcom/tune/Tune;";

        return r1;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lcom/tune/Tune;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static com.tune.Tune init(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2;
        com.tune.Tune $r3;
        java.lang.Throwable $r4;
        int varReplacer2978;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        entermonitor class "Lcom/tune/Tune;";

     label1:
        varReplacer2978 = 0;

        $r3 = staticinvoke <com.tune.Tune: com.tune.Tune init(android.content.Context,java.lang.String,java.lang.String,boolean)>($r0, $r1, $r2, varReplacer2978);

     label2:
        exitmonitor class "Lcom/tune/Tune;";

        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/tune/Tune;";

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static com.tune.Tune init(android.content.Context, java.lang.String, java.lang.String, boolean)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.tune.Tune $r3;
        java.lang.Throwable $r4;
        int varReplacer3002;
        null_type varReplacer3003;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        entermonitor class "Lcom/tune/Tune;";

     label1:
        varReplacer3002 = 0;

        varReplacer3003 = null;

        $r3 = staticinvoke <com.tune.Tune: com.tune.Tune init(android.content.Context,java.lang.String,java.lang.String,boolean,com.tune.ma.configuration.TuneConfiguration)>($r0, $r1, $r2, varReplacer3002, varReplacer3003);

     label2:
        exitmonitor class "Lcom/tune/Tune;";

        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/tune/Tune;";

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static com.tune.Tune init(android.content.Context, java.lang.String, java.lang.String, boolean, com.tune.ma.configuration.TuneConfiguration)
    {
        android.content.Context $r0, $r5;
        java.lang.String $r1, $r2;
        boolean $z0;
        com.tune.ma.configuration.TuneConfiguration $r3;
        com.tune.Tune $r4;
        java.util.concurrent.ExecutorService $r6;
        com.tune.location.TuneLocationListener $r7;
        java.lang.Throwable $r8;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: com.tune.ma.configuration.TuneConfiguration;

        entermonitor class "Lcom/tune/Tune;";

     label1:
        $r4 = <com.tune.Tune: com.tune.Tune tune>;

        if $r4 != null goto label3;

        $r4 = new com.tune.Tune;

        specialinvoke $r4.<com.tune.Tune: void <init>()>();

        <com.tune.Tune: com.tune.Tune tune> = $r4;

        $r4 = <com.tune.Tune: com.tune.Tune tune>;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4.<com.tune.Tune: android.content.Context mContext> = $r5;

        $r4 = <com.tune.Tune: com.tune.Tune tune>;

        $r6 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        $r4.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue> = $r6;

        goto label5;

     label2:
        $r4 = <com.tune.Tune: com.tune.Tune tune>;

        virtualinvoke $r4.<com.tune.Tune: void initAll(java.lang.String,java.lang.String)>($r1, $r2);

        $r4 = <com.tune.Tune: com.tune.Tune tune>;

        $r7 = new com.tune.location.TuneLocationListener;

        specialinvoke $r7.<com.tune.location.TuneLocationListener: void <init>(android.content.Context)>($r0);

        $r4.<com.tune.Tune: com.tune.location.TuneLocationListener locationListener> = $r7;

        goto label3;

     label3:
        $r4 = <com.tune.Tune: com.tune.Tune tune>;

     label4:
        exitmonitor class "Lcom/tune/Tune;";

        return $r4;

     label5:
        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void disable()>();

     label6:
        goto label2;

     label7:
        $r8 := @caughtexception;

        exitmonitor class "Lcom/tune/Tune;";

        throw $r8;

        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private void initLocalVariables(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, varReplacer3467, varReplacer3468, varReplacer3470, varReplacer3472, varReplacer3473;
        java.util.concurrent.ExecutorService $r2;
        com.tune.http.TuneUrlRequester $r3;
        com.tune.TuneEncryption $r4;
        long $l0;
        android.content.Context $r5;
        android.content.SharedPreferences $r6;
        boolean $z0;
        int varReplacer3469, varReplacer3471, varReplacer3474, varReplacer3475, varReplacer3476, varReplacer3477, varReplacer3478;

        nop;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pool> = $r2;

        $r3 = new com.tune.http.TuneUrlRequester;

        specialinvoke $r3.<com.tune.http.TuneUrlRequester: void <init>()>();

        $r0.<com.tune.Tune: com.tune.http.UrlRequester urlRequester> = $r3;

        $r4 = new com.tune.TuneEncryption;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        varReplacer3470 = "heF9BATUfWuISyO8";

        specialinvoke $r4.<com.tune.TuneEncryption: void <init>(java.lang.String,java.lang.String)>($r1, varReplacer3470);

        $r0.<com.tune.Tune: com.tune.TuneEncryption encryption> = $r4;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<com.tune.Tune: long initTime> = $l0;

        $r5 = $r0.<com.tune.Tune: android.content.Context mContext>;

        varReplacer3473 = "com.mobileapptracking";

        varReplacer3474 = 0;

        $r6 = virtualinvoke $r5.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer3473, varReplacer3474);

        varReplacer3467 = "mat_referrer";

        varReplacer3468 = "";

        $r1 = interfaceinvoke $r6.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer3467, varReplacer3468);

        varReplacer3472 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3472);

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        $r0.<com.tune.Tune: boolean gotReferrer> = $z0;

        varReplacer3469 = 1;

        $r0.<com.tune.Tune: boolean firstSession> = varReplacer3469;

        varReplacer3475 = 0;

        $r0.<com.tune.Tune: boolean initialized> = varReplacer3475;

        varReplacer3477 = 0;

        $r0.<com.tune.Tune: boolean isRegistered> = varReplacer3477;

        varReplacer3478 = 0;

        $r0.<com.tune.Tune: boolean debugMode> = varReplacer3478;

        varReplacer3476 = 0;

        $r0.<com.tune.Tune: boolean fbLogging> = varReplacer3476;

        varReplacer3471 = 1;

        $r0.<com.tune.Tune: boolean collectLocation> = varReplacer3471;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public static boolean isOnline(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        boolean $z0;
        java.lang.Throwable $r4;
        java.lang.String varReplacer3479;

        nop;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/tune/Tune;";

     label1:
        varReplacer3479 = "connectivity";

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer3479);

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label4;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnected()>();

     label2:
        if $z0 == 0 goto label4;

        $z0 = 1;

     label3:
        exitmonitor class "Lcom/tune/Tune;";

        return $z0;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r4 := @caughtexception;

        exitmonitor class "Lcom/tune/Tune;";

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    private void measure(com.tune.TuneEvent)
    {
        com.tune.Tune $r0;
        com.tune.TuneEvent $r1;
        org.json.JSONArray $r2, $r13;
        boolean $z0;
        com.tune.TuneParameters $r3;
        java.lang.String $r4, $r6, $r11, $r12;
        double $d0;
        byte $b0;
        com.tune.TunePreloadData $r5;
        java.util.List $r7;
        int $i1, $i2;
        java.lang.Object $r8;
        com.tune.TuneEventItem $r9;
        org.json.JSONObject $r10;
        com.tune.TuneTestRequest $r14;
        com.tune.TuneListener $r15;
        java.lang.StringBuilder $r16;
        java.lang.Throwable $r17;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.TuneEvent;

        entermonitor $r0;

     label01:
        $z0 = $r0.<com.tune.Tune: boolean initialized>;

     label02:
        if $z0 != 0 goto label04;

     label03:
        exitmonitor $r0;

        return;

     label04:
        virtualinvoke $r0.<com.tune.Tune: void dumpQueue()>();

        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        virtualinvoke $r3.<com.tune.TuneParameters: void setAction(java.lang.String)>("conversion");

        $r4 = virtualinvoke $r1.<com.tune.TuneEvent: java.lang.String getEventName()>();

        if $r4 == null goto label07;

        $r4 = virtualinvoke $r1.<com.tune.TuneEvent: java.lang.String getEventName()>();

        $z0 = $r0.<com.tune.Tune: boolean fbLogging>;

        if $z0 == 0 goto label05;

        staticinvoke <com.tune.TuneFBBridge: void logEvent(com.tune.TuneEvent)>($r1);

     label05:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("close");

        if $z0 != 0 goto label03;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("open");

        if $z0 != 0 goto label06;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("install");

        if $z0 != 0 goto label06;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("update");

        if $z0 != 0 goto label06;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("session");

        if $z0 == 0 goto label07;

     label06:
        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        virtualinvoke $r3.<com.tune.TuneParameters: void setAction(java.lang.String)>("session");

     label07:
        $d0 = virtualinvoke $r1.<com.tune.TuneEvent: double getRevenue()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label08;

        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        virtualinvoke $r3.<com.tune.TuneParameters: void setIsPayingUser(java.lang.String)>("1");

     label08:
        $r5 = $r0.<com.tune.Tune: com.tune.TunePreloadData mPreloadData>;

        $z0 = $r0.<com.tune.Tune: boolean debugMode>;

        $r4 = staticinvoke <com.tune.TuneUrlBuilder: java.lang.String buildLink(com.tune.TuneEvent,com.tune.TunePreloadData,boolean)>($r1, $r5, $z0);

        $r6 = staticinvoke <com.tune.TuneUrlBuilder: java.lang.String buildDataUnencrypted(com.tune.TuneEvent)>($r1);

        $r2 = new org.json.JSONArray;

        specialinvoke $r2.<org.json.JSONArray: void <init>()>();

        $r7 = virtualinvoke $r1.<com.tune.TuneEvent: java.util.List getEventItems()>();

        if $r7 == null goto label10;

        $i1 = 0;

     label09:
        $r7 = virtualinvoke $r1.<com.tune.TuneEvent: java.util.List getEventItems()>();

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 >= $i2 goto label10;

        $r7 = virtualinvoke $r1.<com.tune.TuneEvent: java.util.List getEventItems()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i1);

        $r9 = (com.tune.TuneEventItem) $r8;

        $r10 = virtualinvoke $r9.<com.tune.TuneEventItem: org.json.JSONObject toJson()>();

        virtualinvoke $r2.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r10);

        $i1 = $i1 + 1;

        goto label09;

     label10:
        $r11 = virtualinvoke $r1.<com.tune.TuneEvent: java.lang.String getReceiptData()>();

        $r12 = virtualinvoke $r1.<com.tune.TuneEvent: java.lang.String getReceiptSignature()>();

        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r13 = virtualinvoke $r3.<com.tune.TuneParameters: org.json.JSONArray getUserEmails()>();

        $r10 = staticinvoke <com.tune.TuneUrlBuilder: org.json.JSONObject buildBody(org.json.JSONArray,java.lang.String,java.lang.String,org.json.JSONArray)>($r2, $r11, $r12, $r13);

        $r14 = $r0.<com.tune.Tune: com.tune.TuneTestRequest tuneRequest>;

        if $r14 == null goto label11;

        $r14 = $r0.<com.tune.Tune: com.tune.TuneTestRequest tuneRequest>;

        interfaceinvoke $r14.<com.tune.TuneTestRequest: void constructedRequest(java.lang.String,java.lang.String,org.json.JSONObject)>($r4, $r6, $r10);

     label11:
        $z0 = $r0.<com.tune.Tune: boolean firstSession>;

        virtualinvoke $r0.<com.tune.Tune: void addEventToQueue(java.lang.String,java.lang.String,org.json.JSONObject,boolean)>($r4, $r6, $r10, $z0);

        $r0.<com.tune.Tune: boolean firstSession> = 0;

        virtualinvoke $r0.<com.tune.Tune: void dumpQueue()>();

        $r15 = $r0.<com.tune.Tune: com.tune.TuneListener tuneListener>;

        if $r15 == null goto label03;

        $r15 = $r0.<com.tune.Tune: com.tune.TuneListener tuneListener>;

        $r11 = virtualinvoke $r1.<com.tune.TuneEvent: java.lang.String getRefId()>();

        interfaceinvoke $r15.<com.tune.TuneListener: void enqueuedActionWithRefId(java.lang.String)>($r11);

        $r15 = $r0.<com.tune.Tune: com.tune.TuneListener tuneListener>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&data=");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<com.tune.TuneListener: void enqueuedRequest(java.lang.String,org.json.JSONObject)>($r4, $r10);

     label12:
        goto label03;

     label13:
        $r17 := @caughtexception;

        exitmonitor $r0;

        throw $r17;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label04 to label12 with label13;
    }

    private void registerDeepAction(java.lang.String, java.lang.String, java.lang.String, java.util.Map, com.tune.ma.model.TuneDeepActionCallback)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Map $r4;
        com.tune.ma.model.TuneDeepActionCallback $r5;
        com.tune.ma.deepactions.TuneDeepActionManager $r6;
        com.tune.ma.TuneManager $r7;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.util.Map;

        $r5 := @parameter4: com.tune.ma.model.TuneDeepActionCallback;

        $r6 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.deepactions.TuneDeepActionManager getDeepActionManagerForUser(java.lang.String)>("registerDeepAction");

        if $r6 != null goto label1;

        return;

     label1:
        $r7 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r6 = virtualinvoke $r7.<com.tune.ma.TuneManager: com.tune.ma.deepactions.TuneDeepActionManager getDeepActionManager()>();

        virtualinvoke $r6.<com.tune.ma.deepactions.TuneDeepActionManager: void registerDeepAction(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.tune.ma.model.TuneDeepActionCallback)>($r1, $r2, $r3, $r4, null, $r5);

        return;
    }

    private void registerDeepAction(java.lang.String, java.lang.String, java.lang.String, java.util.Map, java.util.Map, com.tune.ma.model.TuneDeepActionCallback)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Map $r4, $r5;
        com.tune.ma.model.TuneDeepActionCallback $r6;
        com.tune.ma.deepactions.TuneDeepActionManager $r7;
        com.tune.ma.TuneManager $r8;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.util.Map;

        $r5 := @parameter4: java.util.Map;

        $r6 := @parameter5: com.tune.ma.model.TuneDeepActionCallback;

        $r7 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.deepactions.TuneDeepActionManager getDeepActionManagerForUser(java.lang.String)>("registerDeepAction");

        if $r7 != null goto label1;

        return;

     label1:
        $r8 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r7 = virtualinvoke $r8.<com.tune.ma.TuneManager: com.tune.ma.deepactions.TuneDeepActionManager getDeepActionManager()>();

        virtualinvoke $r7.<com.tune.ma.deepactions.TuneDeepActionManager: void registerDeepAction(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.tune.ma.model.TuneDeepActionCallback)>($r1, $r2, $r3, $r4, $r5, $r6);

        return;
    }

    private void registerPowerHook(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        java.util.List $r5;
        com.tune.ma.powerhooks.TunePowerHookManager $r6;
        com.tune.ma.TuneManager $r7;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.util.List;

        $r6 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManagerForUser(java.lang.String)>("registerPowerHook");

        if $r6 != null goto label1;

        return;

     label1:
        $r7 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r6 = virtualinvoke $r7.<com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManager()>();

        virtualinvoke $r6.<com.tune.ma.powerhooks.TunePowerHookManager: void registerPowerHook(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List)>($r1, $r2, $r3, $r4, $r5);

        return;
    }

    private void requestDeeplink()
    {
        com.tune.Tune $r0;
        com.tune.http.UrlRequester $r1;
        com.tune.TuneDeferredDplinkr $r2;
        boolean $z0;
        com.tune.TuneParameters $r3;
        java.lang.String $r4;
        android.content.Context $r5;

        nop;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        $z0 = virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r4 = virtualinvoke $r3.<com.tune.TuneParameters: java.lang.String getUserAgent()>();

        virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: void setUserAgent(java.lang.String)>($r4);

        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        $r5 = $r0.<com.tune.Tune: android.content.Context mContext>;

        $r1 = $r0.<com.tune.Tune: com.tune.http.UrlRequester urlRequester>;

        virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: void checkForDeferredDeeplink(android.content.Context,com.tune.http.UrlRequester)>($r5, $r1);

     label1:
        return;
    }

    static void setInstance(com.tune.Tune)
    {
        com.tune.Tune $r0;

        $r0 := @parameter0: com.tune.Tune;

        <com.tune.Tune: com.tune.Tune tune> = $r0;

        return;
    }

    protected void addEventToQueue(java.lang.String, java.lang.String, org.json.JSONObject, boolean)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2;
        org.json.JSONObject $r3;
        boolean $z0, $z1;
        com.tune.TuneEventQueue $r4;
        java.util.concurrent.ExecutorService $r5;
        com.tune.TuneEventQueue$Add $r6;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.json.JSONObject;

        $z0 := @parameter3: boolean;

        $r5 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pool>;

        $z1 = interfaceinvoke $r5.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        $r5 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pool>;

        $r6 = new com.tune.TuneEventQueue$Add;

        $r4 = $r0.<com.tune.Tune: com.tune.TuneEventQueue eventQueue>;

        virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r6.<com.tune.TuneEventQueue$Add: void <init>(com.tune.TuneEventQueue,java.lang.String,java.lang.String,org.json.JSONObject,boolean)>($r4, $r1, $r2, $r3, $z0);

        interfaceinvoke $r5.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r6);

        return;
    }

    public void checkForDeferredDeeplink(com.tune.TuneDeeplinkListener)
    {
        com.tune.Tune $r0;
        com.tune.TuneDeeplinkListener $r1;
        boolean $z0;
        com.tune.TuneDeferredDplinkr $r2;
        java.lang.String $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.TuneDeeplinkListener;

        virtualinvoke $r0.<com.tune.Tune: void setDeeplinkListener(com.tune.TuneDeeplinkListener)>($r1);

        $z0 = specialinvoke $r0.<com.tune.Tune: boolean firstInstall()>();

        if $z0 == 0 goto label3;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: void enable(boolean)>(1);

     label1:
        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        $r3 = virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: java.lang.String getGoogleAdvertisingId()>();

        if $r3 != null goto label2;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        $r3 = virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: java.lang.String getAndroidId()>();

        if $r3 == null goto label4;

     label2:
        specialinvoke $r0.<com.tune.Tune: void requestDeeplink()>();

        return;

     label3:
        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: void enable(boolean)>(0);

        interfaceinvoke $r1.<com.tune.TuneDeeplinkListener: void didFailDeeplink(java.lang.String)>("Not first install, not checking for deferred deeplink");

        goto label1;

     label4:
        return;
    }

    public void clearAllCustomProfileVariables()
    {
        com.tune.Tune $r0;
        com.tune.ma.profile.TuneUserProfile $r1;
        com.tune.ma.TuneManager $r2;

        $r0 := @this: com.tune.Tune;

        $r1 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("clearAllCustomProfileVariables");

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        virtualinvoke $r1.<com.tune.ma.profile.TuneUserProfile: void clearAllCustomProfileVariables()>();

        return;
    }

    public void clearCustomProfileVariable(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.profile.TuneUserProfile $r2;
        com.tune.ma.TuneManager $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("clearCustomProfileVariable");

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        virtualinvoke $r2.<com.tune.ma.profile.TuneUserProfile: void clearCertainCustomProfileVariable(java.lang.String)>($r1);

        return;
    }

    public boolean didSessionStartFromTunePush()
    {
        com.tune.Tune $r0;
        com.tune.ma.push.TunePushManager $r1;
        com.tune.ma.TuneManager $r2;
        boolean $z0;

        $r0 := @this: com.tune.Tune;

        $r1 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManagerForUser(java.lang.String)>("didSessionStartFromTunePush");

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManager()>();

        $z0 = virtualinvoke $r1.<com.tune.ma.push.TunePushManager: boolean didOpenFromTunePushThisSession()>();

        return $z0;
    }

    public boolean didUserManuallyDisablePush()
    {
        com.tune.Tune $r0;
        com.tune.ma.push.TunePushManager $r1;
        com.tune.ma.TuneManager $r2;
        boolean $z0;

        $r0 := @this: com.tune.Tune;

        $r1 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManagerForUser(java.lang.String)>("didUserManuallyDisablePush");

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManager()>();

        $z0 = virtualinvoke $r1.<com.tune.ma.push.TunePushManager: boolean didUserManuallyDisablePush()>();

        return $z0;
    }

    protected void dumpQueue()
    {
        com.tune.Tune $r0;
        com.tune.TuneEventQueue$Dump $r1;
        com.tune.TuneEventQueue $r2;
        android.content.Context $r3;
        boolean $z0;
        java.util.concurrent.ExecutorService $r4;

        nop;

        $r0 := @this: com.tune.Tune;

        $r3 = $r0.<com.tune.Tune: android.content.Context mContext>;

        $z0 = staticinvoke <com.tune.Tune: boolean isOnline(android.content.Context)>($r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pool>;

        $z0 = interfaceinvoke $r4.<java.util.concurrent.ExecutorService: boolean isShutdown()>();

        if $z0 != 0 goto label2;

        $r4 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pool>;

        $r1 = new com.tune.TuneEventQueue$Dump;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneEventQueue eventQueue>;

        virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r1.<com.tune.TuneEventQueue$Dump: void <init>(com.tune.TuneEventQueue)>($r2);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r1);

     label2:
        return;
    }

    public void executeDeepAction(android.app.Activity, java.lang.String, java.util.Map)
    {
        com.tune.Tune $r0;
        android.app.Activity $r1;
        java.lang.String $r2;
        java.util.Map $r3;
        com.tune.ma.deepactions.TuneDeepActionManager $r4;
        com.tune.ma.TuneManager $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: android.app.Activity;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Map;

        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.deepactions.TuneDeepActionManager getDeepActionManagerForUser(java.lang.String)>("executeDeepAction");

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r4 = virtualinvoke $r5.<com.tune.ma.TuneManager: com.tune.ma.deepactions.TuneDeepActionManager getDeepActionManager()>();

        virtualinvoke $r4.<com.tune.ma.deepactions.TuneDeepActionManager: void executeDeepAction(android.app.Activity,java.lang.String,java.util.Map)>($r1, $r2, $r3);

        return;
    }

    public java.lang.String getAction()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getAction()>();

        return $r1;
    }

    public java.lang.String getAdvertiserId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        nop;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getAdvertiserId()>();

        return $r1;
    }

    public int getAge()
    {
        com.tune.Tune $r0;
        java.lang.Throwable $r1;
        com.tune.TuneParameters $r2;
        java.lang.String $r3;
        int $i0;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r3 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getAge()>();

        if $r3 == null goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing age value ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("TUNE", $r3, $r1);

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public double getAltitude()
    {
        com.tune.Tune $r0;
        java.lang.Throwable $r1;
        com.tune.TuneParameters $r2;
        java.lang.String $r3;
        double $d0;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r3 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getAltitude()>();

        if $r3 == null goto label4;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label2:
        return $d0;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing altitude value ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("TUNE", $r3, $r1);

     label4:
        return 0.0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.String getAndroidId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getAndroidId()>();

        return $r1;
    }

    public boolean getAppAdTrackingEnabled()
    {
        com.tune.Tune $r0;
        java.lang.Throwable $r1;
        com.tune.TuneParameters $r2;
        java.lang.String $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r3 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getAppAdTrackingEnabled()>();

        $i0 = 0;

        if $r3 == null goto label3;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        $i0 = $i1;

     label3:
        if $i0 != 1 goto label5;

        return 1;

     label4:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing adTrackingEnabled value ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("TUNE", $r3, $r1);

        goto label3;

     label5:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public java.lang.String getAppId()
    {
        com.tune.Tune $r0;
        com.tune.ma.profile.TuneUserProfile $r1;
        com.tune.ma.TuneManager $r2;
        java.lang.String $r3;

        $r0 := @this: com.tune.Tune;

        $r1 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("getAppId");

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r3 = virtualinvoke $r1.<com.tune.ma.profile.TuneUserProfile: java.lang.String getAppId()>();

        return $r3;
    }

    public java.lang.String getAppName()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getAppName()>();

        return $r1;
    }

    public int getAppVersion()
    {
        com.tune.Tune $r0;
        java.lang.Throwable $r1;
        com.tune.TuneParameters $r2;
        java.lang.String $r3;
        int $i0;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r3 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getAppVersion()>();

        if $r3 == null goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing appVersion value ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("TUNE", $r3, $r1);

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.String getConnectionType()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getConnectionType()>();

        return $r1;
    }

    public java.lang.String getCountryCode()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getCountryCode()>();

        return $r1;
    }

    public java.lang.String getCurrencyCode()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getCurrencyCode()>();

        return $r1;
    }

    public java.util.Date getCustomProfileDate(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.profile.TuneUserProfile $r2;
        com.tune.ma.TuneManager $r3;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r4;
        java.util.Date $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("getCustomProfileDate");

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r4 = virtualinvoke $r2.<com.tune.ma.profile.TuneUserProfile: com.tune.ma.analytics.model.TuneAnalyticsVariable getCustomProfileVariable(java.lang.String)>($r1);

        if $r4 == null goto label2;

        $r1 = virtualinvoke $r4.<com.tune.ma.analytics.model.TuneAnalyticsVariable: java.lang.String getValue()>();

        $r5 = staticinvoke <com.tune.ma.analytics.model.TuneAnalyticsVariable: java.util.Date stringToDate(java.lang.String)>($r1);

        return $r5;

     label2:
        return null;
    }

    public com.tune.TuneLocation getCustomProfileGeolocation(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.profile.TuneUserProfile $r2;
        com.tune.ma.TuneManager $r3;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r4;
        com.tune.TuneLocation $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("getCustomProfileGeolocation");

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r4 = virtualinvoke $r2.<com.tune.ma.profile.TuneUserProfile: com.tune.ma.analytics.model.TuneAnalyticsVariable getCustomProfileVariable(java.lang.String)>($r1);

        if $r4 == null goto label2;

        $r1 = virtualinvoke $r4.<com.tune.ma.analytics.model.TuneAnalyticsVariable: java.lang.String getValue()>();

        $r5 = staticinvoke <com.tune.ma.analytics.model.TuneAnalyticsVariable: com.tune.TuneLocation stringToGeolocation(java.lang.String)>($r1);

        return $r5;

     label2:
        return null;
    }

    public java.lang.Number getCustomProfileNumber(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.profile.TuneUserProfile $r2;
        com.tune.ma.TuneManager $r3;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r4;
        java.math.BigDecimal $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("getCustomProfileNumber");

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r4 = virtualinvoke $r2.<com.tune.ma.profile.TuneUserProfile: com.tune.ma.analytics.model.TuneAnalyticsVariable getCustomProfileVariable(java.lang.String)>($r1);

        if $r4 == null goto label2;

        $r1 = virtualinvoke $r4.<com.tune.ma.analytics.model.TuneAnalyticsVariable: java.lang.String getValue()>();

        if $r1 == null goto label2;

        $r5 = new java.math.BigDecimal;

        $r1 = virtualinvoke $r4.<com.tune.ma.analytics.model.TuneAnalyticsVariable: java.lang.String getValue()>();

        specialinvoke $r5.<java.math.BigDecimal: void <init>(java.lang.String)>($r1);

        return $r5;

     label2:
        return null;
    }

    public java.lang.String getCustomProfileString(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.profile.TuneUserProfile $r2;
        com.tune.ma.TuneManager $r3;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("getCustomProfileString");

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r4 = virtualinvoke $r2.<com.tune.ma.profile.TuneUserProfile: com.tune.ma.analytics.model.TuneAnalyticsVariable getCustomProfileVariable(java.lang.String)>($r1);

        if $r4 == null goto label2;

        $r1 = virtualinvoke $r4.<com.tune.ma.analytics.model.TuneAnalyticsVariable: java.lang.String getValue()>();

        return $r1;

     label2:
        return null;
    }

    public java.lang.String getDeviceBrand()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getDeviceBrand()>();

        return $r1;
    }

    public java.lang.String getDeviceCarrier()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getDeviceCarrier()>();

        return $r1;
    }

    public java.lang.String getDeviceId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getDeviceId()>();

        return $r1;
    }

    public java.lang.String getDeviceModel()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getDeviceModel()>();

        return $r1;
    }

    public java.lang.String getDeviceToken()
    {
        com.tune.Tune $r0;
        com.tune.ma.push.TunePushManager $r1;
        com.tune.ma.TuneManager $r2;
        java.lang.String $r3;

        $r0 := @this: com.tune.Tune;

        $r1 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManagerForUser(java.lang.String)>("getDeviceToken");

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManager()>();

        $r3 = virtualinvoke $r1.<com.tune.ma.push.TunePushManager: java.lang.String getDeviceToken()>();

        return $r3;
    }

    public boolean getExistingUser()
    {
        com.tune.Tune $r0;
        com.tune.TuneParameters $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: com.tune.Tune;

        $r1 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r2 = virtualinvoke $r1.<com.tune.TuneParameters: java.lang.String getExistingUser()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getFacebookUserId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getFacebookUserId()>();

        return $r1;
    }

    public com.tune.TuneGender getGender()
    {
        com.tune.Tune $r0;
        com.tune.TuneParameters $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        com.tune.TuneGender r4;

        $r0 := @this: com.tune.Tune;

        $r1 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r2 = virtualinvoke $r1.<com.tune.TuneParameters: java.lang.String getGender()>();

        $r3 = "0";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        r4 = <com.tune.TuneGender: com.tune.TuneGender MALE>;

        return r4;

     label1:
        $r3 = "1";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        r4 = <com.tune.TuneGender: com.tune.TuneGender FEMALE>;

        return r4;

     label2:
        r4 = <com.tune.TuneGender: com.tune.TuneGender UNKNOWN>;

        return r4;
    }

    public boolean getGoogleAdTrackingLimited()
    {
        com.tune.Tune $r0;
        java.lang.Throwable $r1;
        com.tune.TuneParameters $r2;
        java.lang.String $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r3 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getGoogleAdTrackingLimited()>();

        $i0 = 0;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        $i0 = $i1;

     label3:
        if $i0 == 0 goto label5;

        return 1;

     label4:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing googleAdTrackingLimited value ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("TUNE", $r3, $r1);

        goto label3;

     label5:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label4;
    }

    public java.lang.String getGoogleAdvertisingId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getGoogleAdvertisingId()>();

        return $r1;
    }

    public java.lang.String getGoogleUserId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getGoogleUserId()>();

        return $r1;
    }

    public java.util.Map getInAppMessageExperimentDetails()
    {
        com.tune.Tune $r0;
        com.tune.ma.experiments.TuneExperimentManager $r1;
        com.tune.ma.TuneManager $r2;
        java.util.Map $r3;

        $r0 := @this: com.tune.Tune;

        $r1 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.experiments.TuneExperimentManager getExperimentManagerForUser(java.lang.String)>("getInAppMessageExperimentDetails");

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.experiments.TuneExperimentManager getExperimentManager()>();

        $r3 = virtualinvoke $r1.<com.tune.ma.experiments.TuneExperimentManager: java.util.Map getInAppExperimentDetails()>();

        return $r3;
    }

    public long getInstallDate()
    {
        com.tune.Tune $r0;
        java.lang.Throwable $r1;
        com.tune.TuneParameters $r2;
        java.lang.String $r3;
        long $l0;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r3 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getInstallDate()>();

        if $r3 == null goto label4;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

     label2:
        return $l0;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing installDate value ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("TUNE", $r3, $r1);

     label4:
        return 0L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.String getInstallReferrer()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getInstallReferrer()>();

        return $r1;
    }

    public boolean getIsPayingUser()
    {
        com.tune.Tune $r0;
        com.tune.TuneParameters $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r0 := @this: com.tune.Tune;

        $r1 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r2 = virtualinvoke $r1.<com.tune.TuneParameters: java.lang.String getIsPayingUser()>();

        $r3 = "1";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public java.lang.String getLanguage()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getLanguage()>();

        return $r1;
    }

    public java.lang.String getLastOpenLogId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getLastOpenLogId()>();

        return $r1;
    }

    public double getLatitude()
    {
        com.tune.Tune $r0;
        java.lang.Throwable $r1;
        com.tune.TuneParameters $r2;
        java.lang.String $r3;
        double $d0;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r3 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getLatitude()>();

        if $r3 == null goto label4;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label2:
        return $d0;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing latitude value ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("TUNE", $r3, $r1);

     label4:
        return 0.0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public double getLongitude()
    {
        com.tune.Tune $r0;
        java.lang.Throwable $r1;
        com.tune.TuneParameters $r2;
        java.lang.String $r3;
        double $d0;
        java.lang.StringBuilder $r4;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r3 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getLongitude()>();

        if $r3 == null goto label4;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label2:
        return $d0;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing longitude value ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("TUNE", $r3, $r1);

     label4:
        return 0.0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public java.lang.String getMCC()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getMCC()>();

        return $r1;
    }

    public java.lang.String getMNC()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getMNC()>();

        return $r1;
    }

    public java.lang.String getMacAddress()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getMacAddress()>();

        return $r1;
    }

    public java.lang.String getMatId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getMatId()>();

        return $r1;
    }

    public java.lang.String getOpenLogId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        nop;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getOpenLogId()>();

        return $r1;
    }

    public java.lang.String getOsVersion()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getOsVersion()>();

        return $r1;
    }

    public java.lang.String getPackageName()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getPackageName()>();

        return $r1;
    }

    public java.lang.String getPluginName()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getPluginName()>();

        return $r1;
    }

    public java.util.Map getPowerHookExperimentDetails()
    {
        com.tune.Tune $r0;
        com.tune.ma.experiments.TuneExperimentManager $r1;
        com.tune.ma.TuneManager $r2;
        java.util.Map $r3;

        $r0 := @this: com.tune.Tune;

        $r1 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.experiments.TuneExperimentManager getExperimentManagerForUser(java.lang.String)>("getPowerHookExperimentDetails");

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.experiments.TuneExperimentManager getExperimentManager()>();

        $r3 = virtualinvoke $r1.<com.tune.ma.experiments.TuneExperimentManager: java.util.Map getPhookExperimentDetails()>();

        return $r3;
    }

    public java.lang.String getReferralSource()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getReferralSource()>();

        return $r1;
    }

    public java.lang.String getReferralUrl()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getReferralUrl()>();

        return $r1;
    }

    public java.lang.String getSDKVersion()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getSdkVersion()>();

        return $r1;
    }

    public java.lang.String getScreenDensity()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getScreenDensity()>();

        return $r1;
    }

    public java.lang.String getScreenHeight()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getScreenHeight()>();

        return $r1;
    }

    public java.lang.String getScreenWidth()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getScreenWidth()>();

        return $r1;
    }

    public java.lang.String getTRUSTeId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getTRUSTeId()>();

        return $r1;
    }

    public com.tune.ma.push.TunePushInfo getTunePushInfoForSession()
    {
        com.tune.Tune $r0;
        com.tune.ma.push.TunePushManager $r1;
        com.tune.ma.TuneManager $r2;
        com.tune.ma.push.TunePushInfo $r3;

        $r0 := @this: com.tune.Tune;

        $r1 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManagerForUser(java.lang.String)>("getTunePushInfoForSession");

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManager()>();

        $r3 = virtualinvoke $r1.<com.tune.ma.push.TunePushManager: com.tune.ma.push.TunePushInfo getLastOpenedPushInfo()>();

        return $r3;
    }

    public java.lang.String getTwitterUserId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getTwitterUserId()>();

        return $r1;
    }

    public java.lang.String getUserAgent()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getUserAgent()>();

        return $r1;
    }

    public java.lang.String getUserEmail()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getUserEmail()>();

        return $r1;
    }

    public java.lang.String getUserId()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getUserId()>();

        return $r1;
    }

    public java.lang.String getUserName()
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneParameters $r2;

        $r0 := @this: com.tune.Tune;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: java.lang.String getUserName()>();

        return $r1;
    }

    public java.lang.String getValueForHookById(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.powerhooks.TunePowerHookManager $r2;
        com.tune.ma.TuneManager $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManagerForUser(java.lang.String)>("getValueForHookById");

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManager()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.powerhooks.TunePowerHookManager: java.lang.String getValueForHookById(java.lang.String)>($r1);

        return $r1;
    }

    protected void initAll(java.lang.String, java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2, $r5, varReplacer3322;
        android.content.IntentFilter $r3;
        android.content.Context $r4;
        com.tune.TuneDeferredDplinkr $r6;
        com.tune.TuneParameters $r7;
        com.tune.TuneEventQueue $r8;
        com.tune.Tune$1 $r9;
        boolean $z0;
        android.content.BroadcastReceiver $r10;
        java.lang.Throwable $r11;
        int varReplacer3321, varReplacer3323, varReplacer3324;

        nop;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = $r0.<com.tune.Tune: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = staticinvoke <com.tune.TuneDeferredDplinkr: com.tune.TuneDeferredDplinkr initialize(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r5);

        $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr> = $r6;

        $r4 = $r0.<com.tune.Tune: android.content.Context mContext>;

        $r7 = staticinvoke <com.tune.TuneParameters: com.tune.TuneParameters init(com.tune.Tune,android.content.Context,java.lang.String,java.lang.String)>($r0, $r4, $r1, $r2);

        $r0.<com.tune.Tune: com.tune.TuneParameters params> = $r7;

        specialinvoke $r0.<com.tune.Tune: void initLocalVariables(java.lang.String)>($r2);

        $r8 = new com.tune.TuneEventQueue;

        $r4 = $r0.<com.tune.Tune: android.content.Context mContext>;

        specialinvoke $r8.<com.tune.TuneEventQueue: void <init>(android.content.Context,com.tune.Tune)>($r4, $r0);

        $r0.<com.tune.Tune: com.tune.TuneEventQueue eventQueue> = $r8;

        virtualinvoke $r0.<com.tune.Tune: void dumpQueue()>();

        $r9 = new com.tune.Tune$1;

        specialinvoke $r9.<com.tune.Tune$1: void <init>(com.tune.Tune)>($r0);

        $r0.<com.tune.Tune: android.content.BroadcastReceiver networkStateReceiver> = $r9;

        $z0 = $r0.<com.tune.Tune: boolean isRegistered>;

        if $z0 == 0 goto label3;

        $r4 = $r0.<com.tune.Tune: android.content.Context mContext>;

        $r10 = $r0.<com.tune.Tune: android.content.BroadcastReceiver networkStateReceiver>;

     label1:
        virtualinvoke $r4.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>($r10);

     label2:
        varReplacer3321 = 0;

        $r0.<com.tune.Tune: boolean isRegistered> = varReplacer3321;

     label3:
        $r3 = new android.content.IntentFilter;

        varReplacer3322 = "android.net.conn.CONNECTIVITY_CHANGE";

        specialinvoke $r3.<android.content.IntentFilter: void <init>(java.lang.String)>(varReplacer3322);

        $r4 = $r0.<com.tune.Tune: android.content.Context mContext>;

        $r10 = $r0.<com.tune.Tune: android.content.BroadcastReceiver networkStateReceiver>;

        virtualinvoke $r4.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r10, $r3);

        varReplacer3324 = 1;

        $r0.<com.tune.Tune: boolean isRegistered> = varReplacer3324;

        varReplacer3323 = 1;

        $r0.<com.tune.Tune: boolean initialized> = varReplacer3323;

        return;

     label4:
        $r11 := @caughtexception;

        goto label2;

        catch java.lang.IllegalArgumentException from label1 to label2 with label4;
    }

    public boolean isInDebugMode()
    {
        com.tune.Tune $r0;
        boolean z0;

        $r0 := @this: com.tune.Tune;

        z0 = $r0.<com.tune.Tune: boolean debugMode>;

        return z0;
    }

    public boolean isUserInAnySegmentIds(java.util.List)
    {
        com.tune.Tune $r0;
        java.util.List $r1;
        com.tune.ma.playlist.TunePlaylistManager $r2;
        com.tune.ma.TuneManager $r3;
        boolean $z0;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.util.List;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.playlist.TunePlaylistManager getPlaylistManagerForUser(java.lang.String)>("isUserInAnySegmentIds");

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.playlist.TunePlaylistManager getPlaylistManager()>();

        $z0 = virtualinvoke $r2.<com.tune.ma.playlist.TunePlaylistManager: boolean isUserInAnySegmentIds(java.util.List)>($r1);

        return $z0;
    }

    public boolean isUserInSegmentId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.playlist.TunePlaylistManager $r2;
        com.tune.ma.TuneManager $r3;
        boolean $z0;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.playlist.TunePlaylistManager getPlaylistManagerForUser(java.lang.String)>("isUserInSegmentId");

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.playlist.TunePlaylistManager getPlaylistManager()>();

        $z0 = virtualinvoke $r2.<com.tune.ma.playlist.TunePlaylistManager: boolean isUserInSegmentId(java.lang.String)>($r1);

        return $z0;
    }

    protected boolean makeRequest(java.lang.String, java.lang.String, org.json.JSONObject)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2, varReplacer10615, varReplacer10616, varReplacer10617, varReplacer10618, varReplacer10619, varReplacer10620, varReplacer10622, varReplacer10625, varReplacer10626, varReplacer10629;
        org.json.JSONObject $r3;
        org.json.JSONException $r4, $r10;
        boolean $z0, $z1;
        com.tune.TuneEncryption $r5;
        java.lang.StringBuilder $r6;
        com.tune.http.UrlRequester $r7;
        com.tune.TuneListener $r8;
        com.tune.TuneParameters $r9;
        int varReplacer10614, varReplacer10621, varReplacer10623, varReplacer10624, varReplacer10627, varReplacer10628;

        nop;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: org.json.JSONObject;

        $z0 = $r0.<com.tune.Tune: boolean debugMode>;

        if $z0 == 0 goto label01;

        varReplacer10622 = "Sending event to server...";

        staticinvoke <com.tune.TuneUtils: void log(java.lang.String)>(varReplacer10622);

     label01:
        virtualinvoke $r0.<com.tune.Tune: void updateLocation()>();

        $r5 = $r0.<com.tune.Tune: com.tune.TuneEncryption encryption>;

        $r2 = staticinvoke <com.tune.TuneUrlBuilder: java.lang.String updateAndEncryptData(java.lang.String,com.tune.TuneEncryption)>($r2, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer10616 = "&data=";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer10616);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = $r0.<com.tune.Tune: com.tune.http.UrlRequester urlRequester>;

        $z0 = $r0.<com.tune.Tune: boolean debugMode>;

        $r3 = interfaceinvoke $r7.<com.tune.http.UrlRequester: org.json.JSONObject requestUrl(java.lang.String,org.json.JSONObject,boolean)>($r1, $r3, $z0);

        if $r3 != null goto label02;

        $r8 = $r0.<com.tune.Tune: com.tune.TuneListener tuneListener>;

        if $r8 == null goto label19;

        $r8 = $r0.<com.tune.Tune: com.tune.TuneListener tuneListener>;

        interfaceinvoke $r8.<com.tune.TuneListener: void didFailWithError(org.json.JSONObject)>($r3);

        varReplacer10623 = 1;

        return varReplacer10623;

     label02:
        varReplacer10618 = "success";

        $z0 = virtualinvoke $r3.<org.json.JSONObject: boolean has(java.lang.String)>(varReplacer10618);

        if $z0 != 0 goto label04;

        $z0 = $r0.<com.tune.Tune: boolean debugMode>;

        if $z0 == 0 goto label03;

        varReplacer10629 = "Request failed, event will remain in queue";

        staticinvoke <com.tune.TuneUtils: void log(java.lang.String)>(varReplacer10629);

     label03:
        varReplacer10627 = 0;

        return varReplacer10627;

     label04:
        $r8 = $r0.<com.tune.Tune: com.tune.TuneListener tuneListener>;

        if $r8 == null goto label08;

        $z0 = 0;

     label05:
        varReplacer10625 = "success";

        $r1 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer10625);

        varReplacer10615 = "true";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer10615);

     label06:
        if $z1 == 0 goto label07;

        $z0 = 1;

     label07:
        if $z0 == 0 goto label18;

        $r8 = $r0.<com.tune.Tune: com.tune.TuneListener tuneListener>;

        interfaceinvoke $r8.<com.tune.TuneListener: void didSucceedWithData(org.json.JSONObject)>($r3);

     label08:
        varReplacer10617 = "site_event_type";

        $r1 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer10617);

        varReplacer10619 = "open";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer10619);

     label09:
        if $z0 == 0 goto label19;

     label10:
        varReplacer10626 = "log_id";

        $r1 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer10626);

        $r2 = virtualinvoke $r0.<com.tune.Tune: java.lang.String getOpenLogId()>();

        varReplacer10620 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer10620);

     label11:
        if $z0 == 0 goto label13;

        $r9 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

     label12:
        virtualinvoke $r9.<com.tune.TuneParameters: void setOpenLogId(java.lang.String)>($r1);

     label13:
        $r9 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

     label14:
        virtualinvoke $r9.<com.tune.TuneParameters: void setLastOpenLogId(java.lang.String)>($r1);

     label15:
        varReplacer10621 = 1;

        return varReplacer10621;

     label16:
        $r10 := @caughtexception;

        varReplacer10628 = 1;

        return varReplacer10628;

     label17:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.json.JSONException: void printStackTrace()>();

        varReplacer10624 = 0;

        return varReplacer10624;

     label18:
        $r8 = $r0.<com.tune.Tune: com.tune.TuneListener tuneListener>;

        interfaceinvoke $r8.<com.tune.TuneListener: void didFailWithError(org.json.JSONObject)>($r3);

        goto label08;

     label19:
        varReplacer10614 = 1;

        return varReplacer10614;

        catch org.json.JSONException from label05 to label06 with label17;
        catch org.json.JSONException from label08 to label09 with label16;
        catch org.json.JSONException from label10 to label11 with label16;
        catch org.json.JSONException from label12 to label13 with label16;
        catch org.json.JSONException from label14 to label15 with label16;
    }

    public void measureEvent(int)
    {
        com.tune.Tune $r0;
        int $i0;
        com.tune.TuneEvent $r1;

        $r0 := @this: com.tune.Tune;

        $i0 := @parameter0: int;

        $r1 = new com.tune.TuneEvent;

        specialinvoke $r1.<com.tune.TuneEvent: void <init>(int)>($i0);

        virtualinvoke $r0.<com.tune.Tune: void measureEvent(com.tune.TuneEvent)>($r1);

        return;
    }

    public void measureEvent(com.tune.TuneEvent)
    {
        com.tune.Tune $r0;
        com.tune.TuneEvent $r1;
        java.lang.String $r2;
        boolean $z0;
        int $i0;
        com.tune.ma.eventbus.event.TuneEventOccurred $r3;
        java.util.concurrent.ExecutorService $r4;
        com.tune.Tune$3 $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.TuneEvent;

        $r2 = virtualinvoke $r1.<com.tune.TuneEvent: java.lang.String getEventName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r1.<com.tune.TuneEvent: int getEventId()>();

        if $i0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TUNE", "Event name or ID cannot be null, empty, or zero");

        return;

     label1:
        $r3 = new com.tune.ma.eventbus.event.TuneEventOccurred;

        specialinvoke $r3.<com.tune.ma.eventbus.event.TuneEventOccurred: void <init>(com.tune.TuneEvent)>($r1);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r3);

        virtualinvoke $r0.<com.tune.Tune: void updateLocation()>();

        $r4 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r5 = new com.tune.Tune$3;

        specialinvoke $r5.<com.tune.Tune$3: void <init>(com.tune.Tune,com.tune.TuneEvent)>($r0, $r1);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r5);

        return;
    }

    public void measureEvent(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneEvent $r2;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = new com.tune.TuneEvent;

        specialinvoke $r2.<com.tune.TuneEvent: void <init>(java.lang.String)>($r1);

        virtualinvoke $r0.<com.tune.Tune: void measureEvent(com.tune.TuneEvent)>($r2);

        return;
    }

    public void measureSession()
    {
        com.tune.Tune $r0;
        android.os.Handler $r1;
        android.os.Looper $r2;
        com.tune.TuneEvent $r3;
        boolean $z0;
        com.tune.Tune$2 $r4;

        $r0 := @this: com.tune.Tune;

        $r0.<com.tune.Tune: boolean notifiedPool> = 0;

        $r3 = new com.tune.TuneEvent;

        specialinvoke $r3.<com.tune.TuneEvent: void <init>(java.lang.String)>("session");

        virtualinvoke $r0.<com.tune.Tune: void measureEvent(com.tune.TuneEvent)>($r3);

        $z0 = $r0.<com.tune.Tune: boolean debugMode>;

        if $z0 == 0 goto label1;

        $r1 = new android.os.Handler;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        $r4 = new com.tune.Tune$2;

        specialinvoke $r4.<com.tune.Tune$2: void <init>(com.tune.Tune)>($r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    public void onFirstPlaylistDownloaded(com.tune.ma.model.TuneCallback)
    {
        com.tune.Tune $r0;
        com.tune.ma.model.TuneCallback $r1;
        java.lang.Long $r2;
        com.tune.ma.playlist.TunePlaylistManager $r3;
        com.tune.ma.TuneManager $r4;
        long $l0;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.ma.model.TuneCallback;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.playlist.TunePlaylistManager getPlaylistManagerForUser(java.lang.String)>("onFirstPlaylistDownloaded");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.playlist.TunePlaylistManager getPlaylistManager()>();

        $r2 = <com.tune.TuneConstants: java.lang.Long DEFAULT_FIRST_PLAYLIST_DOWNLOADED_TIMEOUT>;

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        virtualinvoke $r3.<com.tune.ma.playlist.TunePlaylistManager: void onFirstPlaylistDownloaded(com.tune.ma.model.TuneCallback,long)>($r1, $l0);

        return;
    }

    public void onFirstPlaylistDownloaded(com.tune.ma.model.TuneCallback, long)
    {
        com.tune.Tune $r0;
        com.tune.ma.model.TuneCallback $r1;
        long $l0;
        com.tune.ma.playlist.TunePlaylistManager $r2;
        com.tune.ma.TuneManager $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.ma.model.TuneCallback;

        $l0 := @parameter1: long;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.playlist.TunePlaylistManager getPlaylistManagerForUser(java.lang.String)>("onFirstPlaylistDownloaded");

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.playlist.TunePlaylistManager getPlaylistManager()>();

        virtualinvoke $r2.<com.tune.ma.playlist.TunePlaylistManager: void onFirstPlaylistDownloaded(com.tune.ma.model.TuneCallback,long)>($r1, $l0);

        return;
    }

    public void onPowerHooksChanged(com.tune.ma.model.TuneCallback)
    {
        com.tune.Tune $r0;
        com.tune.ma.model.TuneCallback $r1;
        com.tune.ma.powerhooks.TunePowerHookManager $r2;
        com.tune.ma.TuneManager $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.ma.model.TuneCallback;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManagerForUser(java.lang.String)>("onPowerHooksChanged");

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManager()>();

        virtualinvoke $r2.<com.tune.ma.powerhooks.TunePowerHookManager: void onPowerHooksChanged(com.tune.ma.model.TuneCallback)>($r1);

        return;
    }

    public void registerCustomProfileDate(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.analytics.model.TuneVariableType $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;
        com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder $r5;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r6;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileDate");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r5 = staticinvoke <com.tune.ma.analytics.model.TuneAnalyticsVariable: com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder Builder(java.lang.String)>($r1);

        $r2 = <com.tune.ma.analytics.model.TuneVariableType: com.tune.ma.analytics.model.TuneVariableType DATETIME>;

        $r5 = virtualinvoke $r5.<com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder: com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder withType(com.tune.ma.analytics.model.TuneVariableType)>($r2);

        $r6 = virtualinvoke $r5.<com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder: com.tune.ma.analytics.model.TuneAnalyticsVariable build()>();

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r6);

        return;
    }

    public void registerCustomProfileDate(java.lang.String, java.util.Date)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.Date $r2;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r3;
        com.tune.ma.profile.TuneUserProfile $r4;
        com.tune.ma.TuneManager $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Date;

        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileDate");

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r4 = virtualinvoke $r5.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.util.Date)>($r1, $r2);

        virtualinvoke $r4.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        return;
    }

    public void registerCustomProfileGeolocation(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.analytics.model.TuneVariableType $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;
        com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder $r5;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r6;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileGeolocation");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r5 = staticinvoke <com.tune.ma.analytics.model.TuneAnalyticsVariable: com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder Builder(java.lang.String)>($r1);

        $r2 = <com.tune.ma.analytics.model.TuneVariableType: com.tune.ma.analytics.model.TuneVariableType GEOLOCATION>;

        $r5 = virtualinvoke $r5.<com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder: com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder withType(com.tune.ma.analytics.model.TuneVariableType)>($r2);

        $r6 = virtualinvoke $r5.<com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder: com.tune.ma.analytics.model.TuneAnalyticsVariable build()>();

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r6);

        return;
    }

    public void registerCustomProfileGeolocation(java.lang.String, com.tune.TuneLocation)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneLocation $r2;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r3;
        com.tune.ma.profile.TuneUserProfile $r4;
        com.tune.ma.TuneManager $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.tune.TuneLocation;

        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileGeolocation");

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r4 = virtualinvoke $r5.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,com.tune.TuneLocation)>($r1, $r2);

        virtualinvoke $r4.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        return;
    }

    public void registerCustomProfileNumber(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.analytics.model.TuneVariableType $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;
        com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder $r5;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r6;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileNumber");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r5 = staticinvoke <com.tune.ma.analytics.model.TuneAnalyticsVariable: com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder Builder(java.lang.String)>($r1);

        $r2 = <com.tune.ma.analytics.model.TuneVariableType: com.tune.ma.analytics.model.TuneVariableType FLOAT>;

        $r5 = virtualinvoke $r5.<com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder: com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder withType(com.tune.ma.analytics.model.TuneVariableType)>($r2);

        $r6 = virtualinvoke $r5.<com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder: com.tune.ma.analytics.model.TuneAnalyticsVariable build()>();

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r6);

        return;
    }

    public void registerCustomProfileNumber(java.lang.String, double)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        double $d0;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileNumber");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r2 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r2.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,double)>($r1, $d0);

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r2);

        return;
    }

    public void registerCustomProfileNumber(java.lang.String, float)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        float $f0;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $f0 := @parameter1: float;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileNumber");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r2 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r2.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,float)>($r1, $f0);

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r2);

        return;
    }

    public void registerCustomProfileNumber(java.lang.String, int)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        int $i0;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileNumber");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r2 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r2.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,int)>($r1, $i0);

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r2);

        return;
    }

    public void registerCustomProfileString(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.analytics.model.TuneVariableType $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;
        com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder $r5;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r6;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileString");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r5 = staticinvoke <com.tune.ma.analytics.model.TuneAnalyticsVariable: com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder Builder(java.lang.String)>($r1);

        $r2 = <com.tune.ma.analytics.model.TuneVariableType: com.tune.ma.analytics.model.TuneVariableType STRING>;

        $r5 = virtualinvoke $r5.<com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder: com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder withType(com.tune.ma.analytics.model.TuneVariableType)>($r2);

        $r6 = virtualinvoke $r5.<com.tune.ma.analytics.model.TuneAnalyticsVariable$TuneAnalyticsVariableBuilder: com.tune.ma.analytics.model.TuneAnalyticsVariable build()>();

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r6);

        return;
    }

    public void registerCustomProfileString(java.lang.String, java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r3;
        com.tune.ma.profile.TuneUserProfile $r4;
        com.tune.ma.TuneManager $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("registerCustomProfileString");

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r4 = virtualinvoke $r5.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke $r4.<com.tune.ma.profile.TuneUserProfile: void registerCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        return;
    }

    public void registerDeepAction(java.lang.String, java.lang.String, java.util.Map, com.tune.ma.model.TuneDeepActionCallback)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2;
        java.util.Map $r3;
        com.tune.ma.model.TuneDeepActionCallback $r4;
        com.tune.ma.deepactions.TuneDeepActionManager $r5;
        com.tune.ma.TuneManager $r6;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Map;

        $r4 := @parameter3: com.tune.ma.model.TuneDeepActionCallback;

        $r5 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.deepactions.TuneDeepActionManager getDeepActionManagerForUser(java.lang.String)>("registerDeepAction");

        if $r5 != null goto label1;

        return;

     label1:
        $r6 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r5 = virtualinvoke $r6.<com.tune.ma.TuneManager: com.tune.ma.deepactions.TuneDeepActionManager getDeepActionManager()>();

        virtualinvoke $r5.<com.tune.ma.deepactions.TuneDeepActionManager: void registerDeepAction(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.tune.ma.model.TuneDeepActionCallback)>($r1, $r2, null, $r3, null, $r4);

        return;
    }

    public void registerPowerHook(java.lang.String, java.lang.String, java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2, $r3;
        com.tune.ma.powerhooks.TunePowerHookManager $r4;
        com.tune.ma.TuneManager $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManagerForUser(java.lang.String)>("registerPowerHook");

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r4 = virtualinvoke $r5.<com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManager()>();

        virtualinvoke $r4.<com.tune.ma.powerhooks.TunePowerHookManager: void registerPowerHook(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List)>($r1, $r2, $r3, null, null);

        return;
    }

    public void setAdvertiserId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$4 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$4;

        specialinvoke $r3.<com.tune.Tune$4: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setAge(int)
    {
        com.tune.Tune $r0;
        int $i0;
        java.util.concurrent.ExecutorService $r1;
        com.tune.Tune$5 $r2;

        $r0 := @this: com.tune.Tune;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$5;

        specialinvoke $r2.<com.tune.Tune$5: void <init>(com.tune.Tune,int)>($r0, $i0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setAltitude(double)
    {
        com.tune.Tune $r0;
        double $d0;
        java.util.concurrent.ExecutorService $r1;
        com.tune.Tune$6 $r2;

        $r0 := @this: com.tune.Tune;

        $d0 := @parameter0: double;

        $r1 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$6;

        specialinvoke $r2.<com.tune.Tune$6: void <init>(com.tune.Tune,double)>($r0, $d0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setAndroidId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneDeferredDplinkr $r2;
        com.tune.TuneParameters $r3;

        nop;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: void setAndroidId(java.lang.String)>($r1);

        specialinvoke $r0.<com.tune.Tune: void requestDeeplink()>();

     label1:
        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        if $r3 == null goto label2;

        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        virtualinvoke $r3.<com.tune.TuneParameters: void setAndroidId(java.lang.String)>($r1);

     label2:
        return;
    }

    public void setAndroidIdMd5(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$7 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$7;

        specialinvoke $r3.<com.tune.Tune$7: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setAndroidIdSha1(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$8 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$8;

        specialinvoke $r3.<com.tune.Tune$8: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setAndroidIdSha256(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$9 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$9;

        specialinvoke $r3.<com.tune.Tune$9: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setAppAdTrackingEnabled(boolean)
    {
        com.tune.Tune $r0;
        boolean $z0;
        java.util.concurrent.ExecutorService $r1;
        com.tune.Tune$10 $r2;

        $r0 := @this: com.tune.Tune;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$10;

        specialinvoke $r2.<com.tune.Tune$10: void <init>(com.tune.Tune,boolean)>($r0, $z0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setConversionKey(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$11 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$11;

        specialinvoke $r3.<com.tune.Tune$11: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setCurrencyCode(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$12 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$12;

        specialinvoke $r3.<com.tune.Tune$12: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setCustomProfileDate(java.lang.String, java.util.Date)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.Date $r2;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r3;
        com.tune.ma.profile.TuneUserProfile $r4;
        com.tune.ma.TuneManager $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Date;

        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("setCustomProfileDate");

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r4 = virtualinvoke $r5.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.util.Date)>($r1, $r2);

        virtualinvoke $r4.<com.tune.ma.profile.TuneUserProfile: void setCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        return;
    }

    public void setCustomProfileGeolocation(java.lang.String, com.tune.TuneLocation)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.TuneLocation $r2;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r3;
        com.tune.ma.profile.TuneUserProfile $r4;
        com.tune.ma.TuneManager $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.tune.TuneLocation;

        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("setCustomProfileGeolocation");

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r4 = virtualinvoke $r5.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,com.tune.TuneLocation)>($r1, $r2);

        virtualinvoke $r4.<com.tune.ma.profile.TuneUserProfile: void setCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        return;
    }

    public void setCustomProfileNumber(java.lang.String, double)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        double $d0;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("setCustomProfileNumber");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r2 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r2.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,double)>($r1, $d0);

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void setCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r2);

        return;
    }

    public void setCustomProfileNumber(java.lang.String, float)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        float $f0;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $f0 := @parameter1: float;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("setCustomProfileNumber");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r2 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r2.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,float)>($r1, $f0);

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void setCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r2);

        return;
    }

    public void setCustomProfileNumber(java.lang.String, int)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        int $i0;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r2;
        com.tune.ma.profile.TuneUserProfile $r3;
        com.tune.ma.TuneManager $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("setCustomProfileNumber");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r2 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r2.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,int)>($r1, $i0);

        virtualinvoke $r3.<com.tune.ma.profile.TuneUserProfile: void setCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r2);

        return;
    }

    public void setCustomProfileStringValue(java.lang.String, java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r3;
        com.tune.ma.profile.TuneUserProfile $r4;
        com.tune.ma.TuneManager $r5;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileForUser(java.lang.String)>("setCustomProfileStringValue");

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r4 = virtualinvoke $r5.<com.tune.ma.TuneManager: com.tune.ma.profile.TuneUserProfile getProfileManager()>();

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke $r4.<com.tune.ma.profile.TuneUserProfile: void setCustomProfileVariable(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        return;
    }

    public void setDebugMode(boolean)
    {
        com.tune.Tune $r0;
        boolean $z0;
        android.os.Handler $r1;
        com.tune.Tune$38 $r2;
        android.os.Looper $r3;
        java.util.concurrent.ExecutorService $r4;
        com.tune.Tune$39 $r5;

        $r0 := @this: com.tune.Tune;

        $z0 := @parameter0: boolean;

        $r0.<com.tune.Tune: boolean debugMode> = $z0;

        $r4 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$38;

        specialinvoke $r2.<com.tune.Tune$38: void <init>(com.tune.Tune,boolean)>($r0, $z0);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        if $z0 == 0 goto label1;

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void setLogLevel(int)>(3);

        $r1 = new android.os.Handler;

        $r3 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        $r5 = new com.tune.Tune$39;

        specialinvoke $r5.<com.tune.Tune$39: void <init>(com.tune.Tune)>($r0);

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        return;

     label1:
        staticinvoke <com.tune.ma.utils.TuneDebugLog: void setLogLevel(int)>(6);

        return;
    }

    public void setDeeplinkListener(com.tune.TuneDeeplinkListener)
    {
        com.tune.Tune $r0;
        com.tune.TuneDeeplinkListener $r1;
        com.tune.TuneDeferredDplinkr $r2;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.TuneDeeplinkListener;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: void setListener(com.tune.TuneDeeplinkListener)>($r1);

        return;
    }

    public void setDeviceBrand(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$13 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$13;

        specialinvoke $r3.<com.tune.Tune$13: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setDeviceId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$14 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$14;

        specialinvoke $r3.<com.tune.Tune$14: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setDeviceModel(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$15 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$15;

        specialinvoke $r3.<com.tune.Tune$15: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setEmailCollection(boolean)
    {
        com.tune.Tune $r0;
        boolean $z0;
        java.util.concurrent.ExecutorService $r1;
        com.tune.Tune$40 $r2;

        $r0 := @this: com.tune.Tune;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$40;

        specialinvoke $r2.<com.tune.Tune$40: void <init>(com.tune.Tune,boolean)>($r0, $z0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setExistingUser(boolean)
    {
        com.tune.Tune $r0;
        boolean $z0;
        java.util.concurrent.ExecutorService $r1;
        com.tune.Tune$16 $r2;

        $r0 := @this: com.tune.Tune;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$16;

        specialinvoke $r2.<com.tune.Tune$16: void <init>(com.tune.Tune,boolean)>($r0, $z0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setFacebookEventLogging(boolean, android.content.Context, boolean)
    {
        com.tune.Tune $r0;
        boolean $z0, $z1;
        android.content.Context $r1;

        $r0 := @this: com.tune.Tune;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: android.content.Context;

        $z1 := @parameter2: boolean;

        $r0.<com.tune.Tune: boolean fbLogging> = $z0;

        if $z0 == 0 goto label1;

        if $r1 == null goto label1;

        staticinvoke <com.tune.TuneFBBridge: void startLogger(android.content.Context,boolean)>($r1, $z1);

     label1:
        return;
    }

    public void setFacebookUserId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$17 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$17;

        specialinvoke $r3.<com.tune.Tune$17: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setGender(com.tune.TuneGender)
    {
        com.tune.Tune $r0;
        com.tune.TuneGender $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$18 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.TuneGender;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$18;

        specialinvoke $r3.<com.tune.Tune$18: void <init>(com.tune.Tune,com.tune.TuneGender)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setGoogleAdvertisingId(java.lang.String, boolean)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        boolean $z0;
        byte $b0;
        com.tune.TuneDeferredDplinkr $r2;
        com.tune.TuneParameters $r3;
        java.util.concurrent.ExecutorService $r4, $r5;
        java.lang.Throwable $r6;
        int varReplacer10754, varReplacer10755;

        nop;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label6;

        $b0 = 1;

     label1:
        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        virtualinvoke $r2.<com.tune.TuneDeferredDplinkr: void setGoogleAdvertisingId(java.lang.String,int)>($r1, $b0);

        specialinvoke $r0.<com.tune.Tune: void requestDeeplink()>();

     label2:
        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        if $r3 == null goto label3;

        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        virtualinvoke $r3.<com.tune.TuneParameters: void setGoogleAdvertisingId(java.lang.String)>($r1);

        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($b0);

        virtualinvoke $r3.<com.tune.TuneParameters: void setGoogleAdTrackingLimited(java.lang.String)>($r1);

     label3:
        varReplacer10755 = 1;

        $r0.<com.tune.Tune: boolean gotGaid> = varReplacer10755;

        $z0 = $r0.<com.tune.Tune: boolean gotReferrer>;

        if $z0 == 0 goto label9;

        $z0 = $r0.<com.tune.Tune: boolean notifiedPool>;

        if $z0 != 0 goto label9;

        $r4 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pool>;

        entermonitor $r4;

     label4:
        $r5 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pool>;

        virtualinvoke $r5.<java.lang.Object: void notifyAll()>();

        varReplacer10754 = 1;

        $r0.<com.tune.Tune: boolean notifiedPool> = varReplacer10754;

        exitmonitor $r4;

     label5:
        return;

     label6:
        $b0 = 0;

        goto label1;

     label7:
        $r6 := @caughtexception;

        exitmonitor $r4;

     label8:
        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setGoogleUserId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$19 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$19;

        specialinvoke $r3.<com.tune.Tune$19: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setInstallReferrer(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.Tune$20 $r2;
        long $l0, $l1;
        com.tune.TuneParameters $r3;
        java.util.concurrent.ExecutorService $r4;
        int varReplacer5055;

        nop;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        varReplacer5055 = 1;

        $r0.<com.tune.Tune: boolean gotReferrer> = varReplacer5055;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<com.tune.Tune: long referrerTime> = $l0;

        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $l1 = $r0.<com.tune.Tune: long referrerTime>;

        $l0 = $r0.<com.tune.Tune: long initTime>;

        $l0 = $l1 - $l0;

        virtualinvoke $r3.<com.tune.TuneParameters: void setReferrerDelay(long)>($l0);

     label1:
        $r4 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$20;

        specialinvoke $r2.<com.tune.Tune$20: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setIsPayingUser(boolean)
    {
        com.tune.Tune $r0;
        boolean $z0;
        java.util.concurrent.ExecutorService $r1;
        com.tune.Tune$21 $r2;

        $r0 := @this: com.tune.Tune;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$21;

        specialinvoke $r2.<com.tune.Tune$21: void <init>(com.tune.Tune,boolean)>($r0, $z0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setLatitude(double)
    {
        com.tune.Tune $r0;
        double $d0;
        java.util.concurrent.ExecutorService $r1;
        com.tune.Tune$22 $r2;

        $r0 := @this: com.tune.Tune;

        $d0 := @parameter0: double;

        $r1 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$22;

        specialinvoke $r2.<com.tune.Tune$22: void <init>(com.tune.Tune,double)>($r0, $d0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setListener(com.tune.TuneListener)
    {
        com.tune.Tune $r0;
        com.tune.TuneListener $r1;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.TuneListener;

        $r0.<com.tune.Tune: com.tune.TuneListener tuneListener> = $r1;

        return;
    }

    public void setLocation(android.location.Location)
    {
        com.tune.Tune $r0;
        android.location.Location $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$23 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: android.location.Location;

        if $r1 != null goto label1;

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String)>("TUNE", "Location may not be null");

        return;

     label1:
        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$23;

        specialinvoke $r3.<com.tune.Tune$23: void <init>(com.tune.Tune,android.location.Location)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setLocation(com.tune.TuneLocation)
    {
        com.tune.Tune $r0;
        com.tune.TuneLocation $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$24 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.TuneLocation;

        if $r1 != null goto label1;

        staticinvoke <com.tune.ma.utils.TuneDebugLog: void e(java.lang.String,java.lang.String)>("TUNE", "Location may not be null");

        return;

     label1:
        virtualinvoke $r0.<com.tune.Tune: void setShouldAutoCollectDeviceLocation(boolean)>(0);

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$24;

        specialinvoke $r3.<com.tune.Tune$24: void <init>(com.tune.Tune,com.tune.TuneLocation)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setLongitude(double)
    {
        com.tune.Tune $r0;
        double $d0;
        java.util.concurrent.ExecutorService $r1;
        com.tune.Tune$25 $r2;

        $r0 := @this: com.tune.Tune;

        $d0 := @parameter0: double;

        $r1 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$25;

        specialinvoke $r2.<com.tune.Tune$25: void <init>(com.tune.Tune,double)>($r0, $d0);

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setMacAddress(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$26 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$26;

        specialinvoke $r3.<com.tune.Tune$26: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setOptedOutOfPush(boolean)
    {
        com.tune.Tune $r0;
        boolean $z0;
        com.tune.ma.push.TunePushManager $r1;
        com.tune.ma.TuneManager $r2;

        $r0 := @this: com.tune.Tune;

        $z0 := @parameter0: boolean;

        $r1 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManagerForUser(java.lang.String)>("setOptedOutOfPush");

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r1 = virtualinvoke $r2.<com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManager()>();

        virtualinvoke $r1.<com.tune.ma.push.TunePushManager: void setOptedOutOfPush(boolean)>($z0);

        return;
    }

    public void setOsVersion(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$27 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$27;

        specialinvoke $r3.<com.tune.Tune$27: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setPackageName(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.Tune$28 $r2;
        com.tune.TuneDeferredDplinkr $r3;
        java.util.concurrent.ExecutorService $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.tune.Tune: com.tune.TuneDeferredDplinkr dplinkr>;

        virtualinvoke $r3.<com.tune.TuneDeferredDplinkr: void setPackageName(java.lang.String)>($r1);

        $r4 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r2 = new com.tune.Tune$28;

        specialinvoke $r2.<com.tune.Tune$28: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r2);

        return;
    }

    public void setPhoneNumber(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$29 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$29;

        specialinvoke $r3.<com.tune.Tune$29: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setPluginName(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        java.util.List $r3;
        boolean $z0;
        java.util.concurrent.ExecutorService $r4;
        com.tune.Tune$37 $r5;
        java.lang.IllegalArgumentException $r6;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.tune.TuneConstants: java.lang.String[] PLUGIN_NAMES>;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r4 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r5 = new com.tune.Tune$37;

        specialinvoke $r5.<com.tune.Tune$37: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r5);

        return;

     label1:
        $z0 = $r0.<com.tune.Tune: boolean debugMode>;

        if $z0 == 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Plugin name not acceptable");

        throw $r6;

     label2:
        return;
    }

    public void setPreloadedApp(com.tune.TunePreloadData)
    {
        com.tune.Tune $r0;
        com.tune.TunePreloadData $r1;
        com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile $r2;
        com.tune.ma.analytics.model.TuneAnalyticsVariable $r3;
        java.lang.String $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.TunePreloadData;

        $r0.<com.tune.Tune: com.tune.TunePreloadData mPreloadData> = $r1;

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherId>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_id", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String offerId>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("offer_id", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String agencyId>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("agency_id", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherReferenceId>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_ref_id", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSubPublisher>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub_publisher", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSubSite>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub_site", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSubCampaign>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub_campaign", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSubAdgroup>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub_adgroup", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSubAd>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub_ad", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSubKeyword>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub_keyword", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSub1>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub1", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSub2>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub2", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSub3>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub3", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSub4>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub4", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String publisherSub5>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("publisher_sub5", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String advertiserSubPublisher>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("advertiser_sub_publisher", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String advertiserSubSite>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("advertiser_sub_site", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String advertiserSubCampaign>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("advertiser_sub_campaign", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String advertiserSubAdgroup>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("advertiser_sub_adgroup", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String advertiserSubAd>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("advertiser_sub_ad", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        $r2 = new com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile;

        $r3 = new com.tune.ma.analytics.model.TuneAnalyticsVariable;

        $r4 = $r1.<com.tune.TunePreloadData: java.lang.String advertiserSubKeyword>;

        specialinvoke $r3.<com.tune.ma.analytics.model.TuneAnalyticsVariable: void <init>(java.lang.String,java.lang.String)>("advertiser_sub_keyword", $r4);

        specialinvoke $r2.<com.tune.ma.eventbus.event.userprofile.TuneUpdateUserProfile: void <init>(com.tune.ma.analytics.model.TuneAnalyticsVariable)>($r3);

        staticinvoke <com.tune.ma.eventbus.TuneEventBus: void post(java.lang.Object)>($r2);

        return;
    }

    public void setPushNotificationBuilder(com.tune.ma.push.settings.TuneNotificationBuilder)
    {
        com.tune.Tune $r0;
        com.tune.ma.push.settings.TuneNotificationBuilder $r1;
        com.tune.ma.push.TunePushManager $r2;
        com.tune.ma.TuneManager $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.ma.push.settings.TuneNotificationBuilder;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManagerForUser(java.lang.String)>("setPushNotificationBuilder");

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManager()>();

        virtualinvoke $r2.<com.tune.ma.push.TunePushManager: void setTuneNotificationBuilder(com.tune.ma.push.settings.TuneNotificationBuilder)>($r1);

        return;
    }

    public void setPushNotificationRegistrationId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.push.TunePushManager $r2;
        com.tune.ma.TuneManager $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManagerForUser(java.lang.String)>("setPushNotificationRegistrationId");

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManager()>();

        virtualinvoke $r2.<com.tune.ma.push.TunePushManager: void setPushNotificationRegistrationId(java.lang.String)>($r1);

        return;
    }

    public void setPushNotificationSenderId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        com.tune.ma.push.TunePushManager $r2;
        com.tune.ma.TuneManager $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManagerForUser(java.lang.String)>("setPushNotificationSenderId");

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r2 = virtualinvoke $r3.<com.tune.ma.TuneManager: com.tune.ma.push.TunePushManager getPushManager()>();

        virtualinvoke $r2.<com.tune.ma.push.TunePushManager: void setPushNotificationSenderId(java.lang.String)>($r1);

        return;
    }

    public void setReferralSources(android.app.Activity)
    {
        com.tune.Tune $r0;
        android.app.Activity $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$30 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: android.app.Activity;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$30;

        specialinvoke $r3.<com.tune.Tune$30: void <init>(com.tune.Tune,android.app.Activity)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setReferralUrl(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$31 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$31;

        specialinvoke $r3.<com.tune.Tune$31: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setShouldAutoCollectDeviceLocation(boolean)
    {
        com.tune.Tune $r0;
        boolean $z0;
        com.tune.location.TuneLocationListener $r1;

        $r0 := @this: com.tune.Tune;

        $z0 := @parameter0: boolean;

        $r0.<com.tune.Tune: boolean collectLocation> = $z0;

        $z0 = $r0.<com.tune.Tune: boolean collectLocation>;

        if $z0 != 0 goto label1;

        $r1 = $r0.<com.tune.Tune: com.tune.location.TuneLocationListener locationListener>;

        virtualinvoke $r1.<com.tune.location.TuneLocationListener: void stopListening()>();

     label1:
        return;
    }

    public void setTRUSTeId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$32 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$32;

        specialinvoke $r3.<com.tune.Tune$32: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setTwitterUserId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$33 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$33;

        specialinvoke $r3.<com.tune.Tune$33: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    protected void setUrlRequester(com.tune.http.UrlRequester)
    {
        com.tune.Tune $r0;
        com.tune.http.UrlRequester $r1;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: com.tune.http.UrlRequester;

        $r0.<com.tune.Tune: com.tune.http.UrlRequester urlRequester> = $r1;

        return;
    }

    public void setUserEmail(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$34 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$34;

        specialinvoke $r3.<com.tune.Tune$34: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setUserId(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$35 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$35;

        specialinvoke $r3.<com.tune.Tune$35: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setUserName(java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1;
        java.util.concurrent.ExecutorService $r2;
        com.tune.Tune$36 $r3;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.tune.Tune: java.util.concurrent.ExecutorService pubQueue>;

        $r3 = new com.tune.Tune$36;

        specialinvoke $r3.<com.tune.Tune$36: void <init>(com.tune.Tune,java.lang.String)>($r0, $r1);

        interfaceinvoke $r2.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void setValueForHookById(java.lang.String, java.lang.String)
    {
        com.tune.Tune $r0;
        java.lang.String $r1, $r2;
        com.tune.ma.powerhooks.TunePowerHookManager $r3;
        com.tune.ma.TuneManager $r4;

        $r0 := @this: com.tune.Tune;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManagerForUser(java.lang.String)>("setValueForHookById");

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = staticinvoke <com.tune.ma.TuneManager: com.tune.ma.TuneManager getInstance()>();

        $r3 = virtualinvoke $r4.<com.tune.ma.TuneManager: com.tune.ma.powerhooks.TunePowerHookManager getPowerHookManager()>();

        virtualinvoke $r3.<com.tune.ma.powerhooks.TunePowerHookManager: void setValueForHookById(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    protected void updateLocation()
    {
        com.tune.Tune $r0;
        com.tune.TuneLocation $r1;
        boolean $z0;
        com.tune.TuneParameters $r2;
        com.tune.location.TuneLocationListener $r3;
        android.location.Location $r4;

        nop;

        $r0 := @this: com.tune.Tune;

        $z0 = $r0.<com.tune.Tune: boolean collectLocation>;

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = virtualinvoke $r2.<com.tune.TuneParameters: com.tune.TuneLocation getLocation()>();

        if $r1 != null goto label1;

        $r3 = $r0.<com.tune.Tune: com.tune.location.TuneLocationListener locationListener>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.tune.Tune: com.tune.location.TuneLocationListener locationListener>;

        $r4 = virtualinvoke $r3.<com.tune.location.TuneLocationListener: android.location.Location getLastLocation()>();

        if $r4 == null goto label1;

        $r2 = $r0.<com.tune.Tune: com.tune.TuneParameters params>;

        $r1 = new com.tune.TuneLocation;

        specialinvoke $r1.<com.tune.TuneLocation: void <init>(android.location.Location)>($r4);

        virtualinvoke $r2.<com.tune.TuneParameters: void setLocation(com.tune.TuneLocation)>($r1);

     label1:
        return;
    }
}
