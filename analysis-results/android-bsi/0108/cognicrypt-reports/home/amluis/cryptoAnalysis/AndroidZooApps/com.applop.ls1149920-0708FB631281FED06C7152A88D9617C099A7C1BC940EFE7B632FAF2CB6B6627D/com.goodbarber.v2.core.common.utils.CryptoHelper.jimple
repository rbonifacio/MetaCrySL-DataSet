public class com.goodbarber.v2.core.common.utils.CryptoHelper extends java.lang.Object
{
    private static final char[] HEX_DIGITS_LOWER;
    private static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        char[] $r2;

        nop;

        $r1 = class "Lcom/goodbarber/v2/core/common/utils/CryptoHelper;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.goodbarber.v2.core.common.utils.CryptoHelper: java.lang.String TAG> = $r0;

        $r2 = newarray (char)[16];

        $r2[0] = 48;

        $r2[1] = 49;

        $r2[2] = 50;

        $r2[3] = 51;

        $r2[4] = 52;

        $r2[5] = 53;

        $r2[6] = 54;

        $r2[7] = 55;

        $r2[8] = 56;

        $r2[9] = 57;

        $r2[10] = 97;

        $r2[11] = 98;

        $r2[12] = 99;

        $r2[13] = 100;

        $r2[14] = 101;

        $r2[15] = 102;

        <com.goodbarber.v2.core.common.utils.CryptoHelper: char[] HEX_DIGITS_LOWER> = $r2;

        return;
    }

    public void <init>()
    {
        com.goodbarber.v2.core.common.utils.CryptoHelper $r0;

        $r0 := @this: com.goodbarber.v2.core.common.utils.CryptoHelper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String buildMd5HashString(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        byte $b2;
        java.lang.String $r2;
        char $c3;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label4;

        $b2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b2);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i1 + -2;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        goto label2;

     label4:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String bytesToHexString(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, varReplacer713;
        byte $b2;
        short $s3;
        java.lang.String $r2;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label2;

        varReplacer713 = 48;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer713);

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String encryptRSA(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.lang.Exception $r1;
        java.security.PublicKey $r3;
        javax.crypto.Cipher $r4;
        byte[] $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <com.goodbarber.v2.core.common.utils.CryptoHelper: java.lang.String getPublicKeyStringFromFile()>();

        $r3 = staticinvoke <com.goodbarber.v2.core.common.utils.CryptoHelper: java.security.PublicKey getRSAPublicKeyFromString(java.lang.String)>($r2);

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/ECB/PKCS1Padding");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r3);

        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r5, 2);

     label2:
        $r2 = <com.goodbarber.v2.core.common.utils.CryptoHelper: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("crypted pwd = ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        staticinvoke <com.goodbarber.v2.core.common.utils.GBLog: void bigString(java.lang.String,java.lang.StringBuilder)>($r2, $r6);

     label4:
        return $r0;

     label5:
        $r1 := @caughtexception;

        $r0 = <com.goodbarber.v2.core.common.utils.CryptoHelper: java.lang.String TAG>;

        staticinvoke <com.goodbarber.v2.core.common.utils.GBLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, "Error while crypting", $r1);

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static java.lang.String getPublicKeyStringFromFile() throws java.lang.Exception
    {
        java.io.BufferedReader $r0;
        java.lang.StringBuilder $r1;
        android.content.res.Resources $r2;
        java.io.InputStream $r3;
        java.io.InputStreamReader $r4;
        java.lang.String $r5;

        $r2 = staticinvoke <com.goodbarber.v2.GBApplication: android.content.res.Resources getAppResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(2131034115);

        $r0 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r3);

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r5 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r5 == null goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        goto label1;

     label2:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static java.security.PublicKey getRSAPublicKeyFromString(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        java.security.spec.X509EncodedKeySpec $r1;
        byte[] $r2;
        java.security.KeyFactory $r3;
        java.security.PublicKey $r4;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-----BEGIN PUBLIC KEY-----", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-----END PUBLIC KEY-----", "");

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, 2);

        $r1 = new java.security.spec.X509EncodedKeySpec;

        specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2);

        $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("RSA");

        $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1);

        return $r4;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, $r5;
        java.security.MessageDigest $r1, $r2;
        byte[] $r3;
        java.lang.Throwable $r4, $r6;
        java.lang.Exception $r7;
        java.io.UnsupportedEncodingException r8;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label2:
        $r1 = $r2;

     label3:
        if $r1 == null goto label9;

     label4:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

        $r0 = staticinvoke <com.goodbarber.v2.core.common.utils.CryptoHelper: java.lang.String buildMd5HashString(byte[])>($r3);

     label5:
        return $r0;

     label6:
        $r4 := @caughtexception;

        $r5 = <com.goodbarber.v2.core.submit.detail.activities.AbstractSubmitDetailActivity: java.lang.String TAG>;

        staticinvoke <com.goodbarber.v2.core.common.utils.GBLog: void e(java.lang.String,java.lang.String)>($r5, "MD5 algorithm is not available");

        goto label3;

     label7:
        $r6 := @caughtexception;

        r8 = (java.io.UnsupportedEncodingException) $r6;

        virtualinvoke r8.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

     label8:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label9:
        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.io.UnsupportedEncodingException from label4 to label5 with label7;
        catch java.lang.Exception from label4 to label5 with label8;
    }

    public static java.lang.String toMD5(java.lang.String)
    {
        java.lang.String $r0, $r4, varReplacer2330;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        int $i0;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer2330 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2330);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r4 = staticinvoke <com.goodbarber.v2.core.common.utils.CryptoHelper: java.lang.String bytesToHexString(byte[])>($r3);

     label2:
        return $r4;

     label3:
        $r1 := @caughtexception;

        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        return $r0;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String toSHA1(java.lang.String)
    {
        java.lang.String $r0, $r4, varReplacer650;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        int $i0;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer650 = "SHA-1";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer650);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r4 = staticinvoke <com.goodbarber.v2.core.common.utils.CryptoHelper: java.lang.String bytesToHexString(byte[])>($r3);

     label2:
        return $r4;

     label3:
        $r1 := @caughtexception;

        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        return $r0;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
}
