class com.amazon.device.ads.StringUtils extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    private static final com.amazon.device.ads.MobileAdsLogger logger;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        com.amazon.device.ads.MobileAdsLoggerFactory $r2;
        com.amazon.device.ads.MobileAdsLogger $r3;

        nop;

        $r1 = class "Lcom/amazon/device/ads/StringUtils;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.amazon.device.ads.StringUtils: java.lang.String LOGTAG> = $r0;

        $r2 = new com.amazon.device.ads.MobileAdsLoggerFactory;

        specialinvoke $r2.<com.amazon.device.ads.MobileAdsLoggerFactory: void <init>()>();

        $r0 = <com.amazon.device.ads.StringUtils: java.lang.String LOGTAG>;

        $r3 = virtualinvoke $r2.<com.amazon.device.ads.MobileAdsLoggerFactory: com.amazon.device.ads.MobileAdsLogger createMobileAdsLogger(java.lang.String)>($r0);

        <com.amazon.device.ads.StringUtils: com.amazon.device.ads.MobileAdsLogger logger> = $r3;

        return;
    }

    private void <init>()
    {
        com.amazon.device.ads.StringUtils $r0;

        $r0 := @this: com.amazon.device.ads.StringUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean containsRegEx(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        return $z0;
    }

    protected static boolean doesExceptionContainLockedDatabaseMessage(java.lang.Exception)
    {
        java.lang.Exception $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Exception;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<java.lang.Exception: java.lang.String getMessage()>();

        if $r1 != null goto label2;

     label1:
        return 0;

     label2:
        $r1 = virtualinvoke $r0.<java.lang.Exception: java.lang.String getMessage()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("database is locked");

        return $z0;
    }

    public static java.lang.String getFirstMatch(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r0 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group()>();

        return $r0;

     label1:
        return null;
    }

    public static final boolean isNullOrEmpty(java.lang.String)
    {
        java.lang.String $r0, varReplacer12643;
        boolean $z0;
        int varReplacer12641, varReplacer12642;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        varReplacer12643 = "";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer12643);

        if $z0 == 0 goto label2;

     label1:
        varReplacer12641 = 1;

        return varReplacer12641;

     label2:
        varReplacer12642 = 0;

        return varReplacer12642;
    }

    public static final boolean isNullOrWhiteSpace(java.lang.String)
    {
        java.lang.String $r0, varReplacer12639;
        boolean $z0;
        int varReplacer12638, varReplacer12640;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.amazon.device.ads.StringUtils: boolean isNullOrEmpty(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        varReplacer12639 = "";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer12639);

        if $z0 == 0 goto label2;

     label1:
        varReplacer12638 = 1;

        return varReplacer12638;

     label2:
        varReplacer12640 = 0;

        return varReplacer12640;
    }

    public static java.lang.String readStringFromInputStream(java.io.InputStream)
    {
        java.io.InputStream $r0;
        byte[] $r1;
        java.lang.StringBuilder $r2;
        int $i0, varReplacer12786;
        java.lang.String $r3, varReplacer12782, varReplacer12783, varReplacer12784, varReplacer12785;
        java.lang.Throwable $r4, $r6, $r7, $r8, $r9;
        com.amazon.device.ads.MobileAdsLogger $r5;
        null_type varReplacer12781;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        if $r0 != null goto label01;

        varReplacer12781 = null;

        return varReplacer12781;

     label01:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = newarray (byte)[4096];

     label02:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1);

     label03:
        if $i0 == -1 goto label11;

     label04:
        $r3 = new java.lang.String;

     label05:
        varReplacer12786 = 0;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>($r1, varReplacer12786, $i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label06:
        goto label02;

     label07:
        $r4 := @caughtexception;

     label08:
        $r5 = <com.amazon.device.ads.StringUtils: com.amazon.device.ads.MobileAdsLogger logger>;

        varReplacer12785 = "Unable to read the stream.";

        virtualinvoke $r5.<com.amazon.device.ads.MobileAdsLogger: void e(java.lang.String)>(varReplacer12785);

     label09:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label10:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label11:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label12:
        goto label10;

     label13:
        $r6 := @caughtexception;

        $r5 = <com.amazon.device.ads.StringUtils: com.amazon.device.ads.MobileAdsLogger logger>;

        varReplacer12784 = "IOException while trying to close the stream.";

        virtualinvoke $r5.<com.amazon.device.ads.MobileAdsLogger: void e(java.lang.String)>(varReplacer12784);

        goto label10;

     label14:
        $r7 := @caughtexception;

        $r5 = <com.amazon.device.ads.StringUtils: com.amazon.device.ads.MobileAdsLogger logger>;

        varReplacer12782 = "IOException while trying to close the stream.";

        virtualinvoke $r5.<com.amazon.device.ads.MobileAdsLogger: void e(java.lang.String)>(varReplacer12782);

        goto label10;

     label15:
        $r8 := @caughtexception;

     label16:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label17:
        throw $r8;

     label18:
        $r9 := @caughtexception;

        $r5 = <com.amazon.device.ads.StringUtils: com.amazon.device.ads.MobileAdsLogger logger>;

        varReplacer12783 = "IOException while trying to close the stream.";

        virtualinvoke $r5.<com.amazon.device.ads.MobileAdsLogger: void e(java.lang.String)>(varReplacer12783);

        goto label17;

        catch java.io.IOException from label02 to label03 with label07;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.IOException from label16 to label17 with label18;
    }

    public static java.lang.String sha1(java.lang.String)
    {
        java.lang.String $r0, varReplacer13782, varReplacer13783;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.security.MessageDigest $r3;
        byte[] $r4;
        int $i0, $i1, varReplacer13781;
        byte $b2;
        short $s3;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer13783 = "SHA-1";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13783);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r2 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label08;

        $b2 = $r4[$i0];

        $s3 = $b2 & 255;

        $s3 = $s3 | 256;

     label06:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        varReplacer13781 = 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(varReplacer13781);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        return $r0;

     label10:
        $r1 := @caughtexception;

        varReplacer13782 = "";

        return varReplacer13782;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label10;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label10;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label10;
    }
}
