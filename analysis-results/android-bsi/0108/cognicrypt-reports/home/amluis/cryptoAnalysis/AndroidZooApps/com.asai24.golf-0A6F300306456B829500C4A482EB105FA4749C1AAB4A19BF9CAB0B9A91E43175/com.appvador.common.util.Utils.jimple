public class com.appvador.common.util.Utils extends java.lang.Object
{
    private static final java.util.concurrent.atomic.AtomicLong sNextGeneratedId;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicLong $r0;
        long varReplacer1048;

        nop;

        $r0 = new java.util.concurrent.atomic.AtomicLong;

        varReplacer1048 = 1L;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicLong: void <init>(long)>(varReplacer1048);

        <com.appvador.common.util.Utils: java.util.concurrent.atomic.AtomicLong sNextGeneratedId> = $r0;

        return;
    }

    public void <init>()
    {
        com.appvador.common.util.Utils $r0;

        $r0 := @this: com.appvador.common.util.Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean bitMaskContainsFlag(int, int)
    {
        int $i0, $i1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i0 = $i0 & $i1;

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void copyFile(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File $r0, $r1;
        byte[] $r2;
        java.io.FileInputStream $r3;
        java.io.FileOutputStream $r4;
        int $i0;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.io.File;

        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        $r2 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 <= 0 goto label2;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label1;

     label2:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

        return;
    }

    public static long generateUniqueId()
    {
        java.util.concurrent.atomic.AtomicLong $r0;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

     label1:
        $r0 = <com.appvador.common.util.Utils: java.util.concurrent.atomic.AtomicLong sNextGeneratedId>;

        $l0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicLong: long get()>();

        $l1 = $l0 + 1L;

        $b2 = $l1 cmp 9223372036854775806L;

        if $b2 <= 0 goto label2;

        $l1 = 1L;

     label2:
        $r0 = <com.appvador.common.util.Utils: java.util.concurrent.atomic.AtomicLong sNextGeneratedId>;

        $z0 = virtualinvoke $r0.<java.util.concurrent.atomic.AtomicLong: boolean compareAndSet(long,long)>($l0, $l1);

        if $z0 == 0 goto label1;

        return $l0;
    }

    public static java.lang.String sha1(java.lang.String)
    {
        java.lang.String $r0, varReplacer1019, varReplacer1021, varReplacer1022, varReplacer1023;
        byte $b0;
        java.lang.Exception $r1;
        int $i1, $i2, varReplacer1020;
        java.lang.StringBuilder $r2;
        java.security.MessageDigest $r3;
        byte[] $r4;
        java.lang.Object[] $r5;
        java.lang.Byte $r6;
        java.util.Locale $r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label01:
        varReplacer1021 = "SHA-1";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1021);

        varReplacer1022 = "UTF-8";

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1022);

        $i1 = lengthof $r4;

        varReplacer1020 = 0;

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[],int,int)>($r4, varReplacer1020, $i1);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

        $i1 = lengthof $r4;

     label02:
        $i2 = 0;

     label03:
        if $i2 >= $i1 goto label06;

     label04:
        $b0 = $r4[$i2];

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r5[0] = $r6;

        varReplacer1023 = "%02X";

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer1023, $r5);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label05:
        $i2 = $i2 + 1;

        goto label03;

     label06:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r7 = <java.util.Locale: java.util.Locale US>;

     label08:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

     label09:
        return $r0;

     label10:
        $r1 := @caughtexception;

        varReplacer1019 = "";

        return varReplacer1019;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    public static java.lang.String uniqueString()
    {
        long $l0;
        java.lang.String $r0;

        $l0 = staticinvoke <com.appvador.common.util.Utils: long generateUniqueId()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r0 = staticinvoke <com.appvador.common.util.Utils: java.lang.String sha1(java.lang.String)>($r0);

        return $r0;
    }
}
