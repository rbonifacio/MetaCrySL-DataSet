Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer571
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer571)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: 834cabf3774920f9b4677056cc3a54415b0b7852d1ab939f3678dad0d857b603
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer564)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: d7aa0acece2be44121122b35d6c3a08336d98fe7c9ff7eb31291570a019a5de9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer561)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: 7e3400eae57eeddf09144c8e1ed44979386bd85c10fe442ce10fb5bfe7b281ce
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: e14834b1f4e671e9cbd4e04cbd567ef494e2f9d54df04ce760ca2f46625ea303
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer570)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: 8cb4acd1b18d9277fa76c770825ce0f8fbfe0910358ef3a2c7e4624bb0f35f4c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: ce740544214b0c47fab5044a31b2d476344461212d32e00984374e4c454060b8
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: 6f7c162e6b02620c220b1ebdbe970a6db4bb18bdeb768af86f3dda38c2688825
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer571)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String encrypt(java.lang.String)>
		SHA-256: 68310e959d4c1a10703a197546d49f240be568dad9b8855c12c6565b4d19e51a
		Secure: false
	Object:
		Variable: varReplacer561
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer561)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: 161256aef124459daca0186494e3e3380b1c4e539d689d322e94a047389af2da
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.ashampoo.droid.optimizer.utils.Cryptic: java.lang.String decrypt(java.lang.String)>
		SHA-256: c123b883cfc8983eed4dd76fef17f11fa17ffd7424a6a145e33f648a56b6a1f8
		Secure: false

Findings in Java Class: com.ashampoo.droid.optimizer.utils.Cryptic

	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer561)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer562, $r4, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d7aa0acece2be44121122b35d6c3a08336d98fe7c9ff7eb31291570a019a5de9)
			First parameter (with value "DES/CBC/PKCS7Padding") should be any of {AES, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer564)


	 in Method: java.lang.String encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer569, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer569, $r3, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8cb4acd1b18d9277fa76c770825ce0f8fbfe0910358ef3a2c7e4624bb0f35f4c)
			First parameter (with value "DES/CBC/PKCS7Padding") should be any of {AES, RSA}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer570)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer571)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 7
=====================================================================