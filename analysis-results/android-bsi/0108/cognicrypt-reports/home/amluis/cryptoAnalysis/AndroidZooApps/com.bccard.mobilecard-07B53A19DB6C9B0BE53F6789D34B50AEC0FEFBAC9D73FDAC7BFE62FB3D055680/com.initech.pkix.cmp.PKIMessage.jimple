public class com.initech.pkix.'cmp'.PKIMessage extends com.initech.asn1.useful.ASN1Object implements java.lang.Cloneable
{
    private com.initech.pkix.'cmp'.PKIHeader a;
    private com.initech.pkix.'cmp'.PKIBody b;
    private com.initech.asn1.ASN1BitString c;
    private com.initech.x509.Certificates d;
    private byte[] e;
    private boolean f;

    public void <init>()
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        com.initech.pkix.'cmp'.PKIHeader $r1;
        com.initech.pkix.'cmp'.PKIBody $r2;
        com.initech.x509.Certificates $r3;
        int varReplacer28409, varReplacer28410, varReplacer28412;
        null_type varReplacer28411, varReplacer28413;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r0.<com.initech.asn1.useful.ASN1Object: void <init>()>();

        $r1 = new com.initech.pkix.'cmp'.PKIHeader;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIHeader: void <init>()>();

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a> = $r1;

        $r2 = new com.initech.pkix.'cmp'.PKIBody;

        specialinvoke $r2.<com.initech.pkix.'cmp'.PKIBody: void <init>()>();

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIBody b> = $r2;

        $r3 = new com.initech.x509.Certificates;

        specialinvoke $r3.<com.initech.x509.Certificates: void <init>()>();

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.x509.Certificates d> = $r3;

        varReplacer28413 = null;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] e> = varReplacer28413;

        varReplacer28409 = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f> = varReplacer28409;

        varReplacer28412 = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f> = varReplacer28412;

        varReplacer28410 = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean modified> = varReplacer28410;

        varReplacer28411 = null;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c> = varReplacer28411;

        return;
    }

    public void <init>(byte[])
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        byte[] $r1;
        java.lang.Object $r2;
        com.initech.pkix.'cmp'.PKIHeader $r3;
        com.initech.pkix.'cmp'.PKIBody $r4;
        com.initech.x509.Certificates $r5;
        com.initech.asn1.DERDecoder $r6;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<com.initech.asn1.useful.ASN1Object: void <init>()>();

        $r3 = new com.initech.pkix.'cmp'.PKIHeader;

        specialinvoke $r3.<com.initech.pkix.'cmp'.PKIHeader: void <init>()>();

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a> = $r3;

        $r4 = new com.initech.pkix.'cmp'.PKIBody;

        specialinvoke $r4.<com.initech.pkix.'cmp'.PKIBody: void <init>()>();

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIBody b> = $r4;

        $r5 = new com.initech.x509.Certificates;

        specialinvoke $r5.<com.initech.x509.Certificates: void <init>()>();

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.x509.Certificates d> = $r5;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] e> = null;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f> = 1;

        $r6 = new com.initech.asn1.DERDecoder;

        specialinvoke $r6.<com.initech.asn1.DERDecoder: void <init>(byte[])>($r1);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: void decode(com.initech.asn1.ASN1Decoder)>($r6);

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (byte[]) $r2;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] encoded> = $r1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean modified> = 0;

        return;
    }

    public void addExtraCertificate(java.security.cert.X509Certificate)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        java.security.cert.X509Certificate $r1;
        com.initech.x509.Certificates $r2;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.x509.Certificates d>;

        virtualinvoke $r2.<com.initech.x509.Certificates: void add(java.security.cert.X509Certificate)>($r1);

        return;
    }

    public java.lang.Object clone()
    {
        com.initech.pkix.'cmp'.PKIMessage $r0, $r2;
        byte[] $r1;
        java.lang.Exception $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

     label1:
        $r1 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] getEncoded()>();

     label2:
        $r2 = new com.initech.pkix.'cmp'.PKIMessage;

     label3:
        specialinvoke $r2.<com.initech.pkix.'cmp'.PKIMessage: void <init>(byte[])>($r1);

     label4:
        return $r2;

     label5:
        $r3 := @caughtexception;

     label6:
        $r4 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

     label7:
        $r0 = (com.initech.pkix.'cmp'.PKIMessage) $r4;

        return $r0;

     label8:
        $r5 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.CloneNotSupportedException from label6 to label7 with label8;
    }

    public void decode(com.initech.asn1.ASN1Decoder)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        com.initech.asn1.ASN1Decoder $r1;
        int $i0, $i1;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        com.initech.pkix.'cmp'.PKIBody $r3;
        boolean $z0;
        com.initech.x509.Certificates $r4;
        com.initech.asn1.ASN1BitString $r5;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: com.initech.asn1.ASN1Decoder;

        $i0 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: int decodeSequence()>();

        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void decode(com.initech.asn1.ASN1Decoder)>($r1);

        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIBody b>;

        virtualinvoke $r3.<com.initech.pkix.'cmp'.PKIBody: void decode(com.initech.asn1.ASN1Decoder)>($r1);

        $i1 = staticinvoke <com.initech.asn1.ASN1Tag: int makeExplicitTag(int)>(0);

        $z0 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: boolean nextIsOptional(int)>($i1);

        if $z0 == 0 goto label3;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c> = null;

     label1:
        $i1 = staticinvoke <com.initech.asn1.ASN1Tag: int makeExplicitTag(int)>(1);

        $z0 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: boolean nextIsOptional(int)>($i1);

        if $z0 == 0 goto label4;

        $r4 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.x509.Certificates d>;

        virtualinvoke $r4.<com.initech.x509.Certificates: void clear()>();

     label2:
        virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: boolean endOf(int)>($i0);

        return;

     label3:
        $i1 = staticinvoke <com.initech.asn1.ASN1Tag: int makeContextTag(int)>(0);

        $i1 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: int decodeExplicit(int)>($i1);

        $r5 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: com.initech.asn1.ASN1BitString decodeBitString()>();

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c> = $r5;

        virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: boolean endOf(int)>($i1);

        goto label1;

     label4:
        $i1 = staticinvoke <com.initech.asn1.ASN1Tag: int makeContextTag(int)>(1);

        $i1 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: int decodeExplicit(int)>($i1);

        $r4 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.x509.Certificates d>;

        virtualinvoke $r4.<com.initech.x509.Certificates: void decode(com.initech.asn1.ASN1Decoder)>($r1);

        virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: boolean endOf(int)>($i1);

        goto label2;
    }

    public void encode(com.initech.asn1.ASN1Encoder)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        com.initech.asn1.ASN1Encoder $r1;
        int $i0, $i1, varReplacer29086, varReplacer29087;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        byte[] $r3;
        boolean $z0;
        com.initech.asn1.ASN1BitString $r4;
        com.initech.x509.Certificates $r5;
        com.initech.pkix.'cmp'.PKIBody $r6;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: com.initech.asn1.ASN1Encoder;

        $i0 = virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: int encodeSequence()>();

        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        $r3 = virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: byte[] getEncoded()>();

        virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: void encodeAny(byte[])>($r3);

        $z0 = $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f>;

        if $z0 != 0 goto label4;

        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] e>;

        if $r3 == null goto label4;

        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] e>;

        virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: void encodeAny(byte[])>($r3);

     label1:
        $r4 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r4 == null goto label2;

        varReplacer29086 = 0;

        $i1 = staticinvoke <com.initech.asn1.ASN1Tag: int makeContextTag(int)>(varReplacer29086);

        $i1 = virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: int encodeExplicit(int)>($i1);

        $r4 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: void encodeBitString(com.initech.asn1.ASN1BitString)>($r4);

        virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: void endOf(int)>($i1);

     label2:
        $r5 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.x509.Certificates d>;

        $i1 = virtualinvoke $r5.<com.initech.x509.Certificates: int size()>();

        if $i1 <= 0 goto label3;

        varReplacer29087 = 1;

        $i1 = staticinvoke <com.initech.asn1.ASN1Tag: int makeContextTag(int)>(varReplacer29087);

        $i1 = virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: int encodeExplicit(int)>($i1);

        $r5 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.x509.Certificates d>;

        virtualinvoke $r5.<com.initech.x509.Certificates: void encode(com.initech.asn1.ASN1Encoder)>($r1);

        virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: void endOf(int)>($i1);

     label3:
        virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: void endOf(int)>($i0);

        return;

     label4:
        $r6 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIBody b>;

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIBody: void encode(com.initech.asn1.ASN1Encoder)>($r1);

        goto label1;
    }

    public java.lang.Object getContentBody()
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        java.lang.Object $r1;
        com.initech.pkix.'cmp'.PKIBody $r2;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIBody b>;

        $r1 = virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIBody: java.lang.Object getContentBody()>();

        return $r1;
    }

    public int getContentType()
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        int $i0;
        com.initech.pkix.'cmp'.PKIBody $r1;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIBody b>;

        $i0 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIBody: int getContentType()>();

        return $i0;
    }

    public com.initech.pkix.'cmp'.PKIHeader getHeader()
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        com.initech.pkix.'cmp'.PKIHeader r1;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        r1 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        return r1;
    }

    public byte[] getProtectedBody()
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        com.initech.pkix.'cmp'.PKIBody $r1;
        com.initech.asn1.DEREncoder $r2, $r5;
        int $i0, varReplacer28368;
        com.initech.pkix.'cmp'.PKIHeader $r3;
        byte[] $r4;
        boolean $z0;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r2 = new com.initech.asn1.DEREncoder;

        specialinvoke $r2.<com.initech.asn1.DEREncoder: void <init>()>();

        $i0 = virtualinvoke $r2.<com.initech.asn1.DEREncoder: int encodeSequence()>();

        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        $r4 = virtualinvoke $r3.<com.initech.pkix.'cmp'.PKIHeader: byte[] getEncoded()>();

        virtualinvoke $r2.<com.initech.asn1.DEREncoder: void encodeAny(byte[])>($r4);

        $z0 = $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f>;

        if $z0 == 0 goto label1;

        $r5 = new com.initech.asn1.DEREncoder;

        specialinvoke $r5.<com.initech.asn1.DEREncoder: void <init>()>();

        $r1 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIBody b>;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIBody: void encode(com.initech.asn1.ASN1Encoder)>($r5);

        $r4 = virtualinvoke $r5.<com.initech.asn1.DEREncoder: byte[] toByteArray()>();

        $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] e> = $r4;

        varReplacer28368 = 0;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f> = varReplacer28368;

     label1:
        $r4 = $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] e>;

        virtualinvoke $r2.<com.initech.asn1.DEREncoder: void encodeAny(byte[])>($r4);

        virtualinvoke $r2.<com.initech.asn1.DEREncoder: void endOf(int)>($i0);

        $r4 = virtualinvoke $r2.<com.initech.asn1.DEREncoder: byte[] toByteArray()>();

        return $r4;
    }

    public byte[] getProtection()
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        byte[] $r1;
        com.initech.asn1.ASN1BitString $r2;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        $r1 = virtualinvoke $r2.<com.initech.asn1.ASN1BitString: byte[] getAsByteArray()>();

        return $r1;
    }

    public boolean hasProtection()
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        com.initech.asn1.ASN1BitString $r1;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void mac(byte[], com.initech.asn1.useful.AlgorithmID)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        byte[] $r1;
        com.initech.asn1.useful.AlgorithmID $r2;
        java.lang.String varReplacer28363;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: com.initech.asn1.useful.AlgorithmID;

        varReplacer28363 = "InitechPKIX";

        virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: void mac(byte[],com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r1, $r2, varReplacer28363);

        return;
    }

    public void mac(byte[], com.initech.asn1.useful.AlgorithmID, java.lang.String)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        byte[] $r1, $r7;
        com.initech.asn1.useful.AlgorithmID $r2;
        java.lang.String $r3, $r5, $r6, varReplacer28369, varReplacer28370, varReplacer28371, varReplacer28373;
        com.initech.pkix.'cmp'.PBMParameter $r4, r16;
        boolean $z0;
        com.initech.asn1.useful.ASN1Object $r8;
        com.initech.cryptox.Mac $r9;
        com.initech.pkix.'cmp'.PKIHeader $r10;
        com.initech.provider.pkix.mac.CMPMacKey $r11, r17;
        com.initech.asn1.ASN1BitString $r12, r18;
        com.initech.asn1.ASN1Exception $r13, $r15;
        java.lang.Throwable $r14;
        com.initech.pkix.'cmp'.DHBMParameter r19;
        java.security.SignatureException r20;
        java.security.NoSuchAlgorithmException r21;
        java.security.spec.AlgorithmParameterSpec r22;
        java.security.NoSuchProviderException r23;
        int varReplacer28372, varReplacer28374;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: com.initech.asn1.useful.AlgorithmID;

        $r3 := @parameter2: java.lang.String;

        $r4 = null;

        $r5 = "1.2.840.113533.7.66.13";

     label01:
        $r6 = virtualinvoke $r2.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlg()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label02:
        if $z0 == 0 goto label18;

        r16 = new com.initech.pkix.'cmp'.PBMParameter;

        $r4 = r16;

     label03:
        $r7 = virtualinvoke $r2.<com.initech.asn1.useful.AlgorithmID: byte[] getParameter()>();

        specialinvoke r16.<com.initech.pkix.'cmp'.PBMParameter: void <init>(byte[])>($r7);

     label04:
        $r8 = $r4;

     label05:
        $r5 = virtualinvoke $r4.<com.initech.pkix.'cmp'.PBMParameter: java.lang.String getMACAlg()>();

        varReplacer28373 = "1.3.14.3.2.10";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28373);

     label06:
        if $z0 == 0 goto label27;

     label07:
        varReplacer28369 = "PasswordBasedMacETRI";

        varReplacer28370 = "InitechPKIX";

        $r9 = staticinvoke <com.initech.cryptox.Mac: com.initech.cryptox.Mac getInstance(java.lang.String,java.lang.String)>(varReplacer28369, varReplacer28370);

     label08:
        $r10 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        virtualinvoke $r10.<com.initech.pkix.'cmp'.PKIHeader: void setProtectionAlg(com.initech.asn1.useful.AlgorithmID)>($r2);

        r17 = new com.initech.provider.pkix.mac.CMPMacKey;

        $r11 = r17;

     label09:
        specialinvoke r17.<com.initech.provider.pkix.mac.CMPMacKey: void <init>(byte[])>($r1);

     label10:
        r22 = (java.security.spec.AlgorithmParameterSpec) $r8;

     label11:
        virtualinvoke $r9.<com.initech.cryptox.Mac: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>($r11, r22);

        $r1 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] getProtectedBody()>();

        virtualinvoke $r9.<com.initech.cryptox.Mac: void update(byte[])>($r1);

     label12:
        $r12 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r12 != null goto label15;

        r18 = new com.initech.asn1.ASN1BitString;

     label13:
        specialinvoke r18.<com.initech.asn1.ASN1BitString: void <init>()>();

     label14:
        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c> = r18;

     label15:
        $r12 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

     label16:
        $r1 = virtualinvoke $r9.<com.initech.cryptox.Mac: byte[] doFinal()>();

        virtualinvoke $r12.<com.initech.asn1.ASN1BitString: void setByteArray(byte[])>($r1);

     label17:
        varReplacer28372 = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f> = varReplacer28372;

        varReplacer28374 = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean modified> = varReplacer28374;

        return;

     label18:
        $r5 = "1.2.840.113533.7.66.30";

     label19:
        $r6 = virtualinvoke $r2.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlg()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label20:
        if $z0 == 0 goto label24;

        r19 = new com.initech.pkix.'cmp'.DHBMParameter;

        $r8 = r19;

     label21:
        $r7 = virtualinvoke $r2.<com.initech.asn1.useful.AlgorithmID: byte[] getParameter()>();

        specialinvoke r19.<com.initech.pkix.'cmp'.DHBMParameter: void <init>(byte[])>($r7);

     label22:
        goto label05;

     label23:
        $r13 := @caughtexception;

        r20 = new java.security.SignatureException;

        $r3 = virtualinvoke $r13.<com.initech.asn1.ASN1Exception: java.lang.String toString()>();

        specialinvoke r20.<java.security.SignatureException: void <init>(java.lang.String)>($r3);

        throw r20;

     label24:
        r21 = new java.security.NoSuchAlgorithmException;

     label25:
        $r3 = virtualinvoke $r2.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlg()>();

        specialinvoke r21.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r3);

     label26:
        throw r21;

     label27:
        $r5 = virtualinvoke $r2.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlgName()>();

        varReplacer28371 = "InitechPKIX";

        $r9 = staticinvoke <com.initech.cryptox.Mac: com.initech.cryptox.Mac getInstance(java.lang.String,java.lang.String)>($r5, varReplacer28371);

     label28:
        goto label08;

     label29:
        $r14 := @caughtexception;

        r20 = new java.security.SignatureException;

        r23 = (java.security.NoSuchProviderException) $r14;

        $r3 = virtualinvoke r23.<java.security.NoSuchProviderException: java.lang.String toString()>();

        specialinvoke r20.<java.security.SignatureException: void <init>(java.lang.String)>($r3);

        throw r20;

     label30:
        $r15 := @caughtexception;

        r20 = new java.security.SignatureException;

        $r3 = virtualinvoke $r15.<com.initech.asn1.ASN1Exception: java.lang.String toString()>();

        specialinvoke r20.<java.security.SignatureException: void <init>(java.lang.String)>($r3);

        throw r20;

        catch com.initech.asn1.ASN1Exception from label01 to label02 with label23;
        catch com.initech.asn1.ASN1Exception from label03 to label04 with label23;
        catch java.security.NoSuchProviderException from label05 to label06 with label29;
        catch java.security.NoSuchProviderException from label07 to label08 with label29;
        catch com.initech.asn1.ASN1Exception from label09 to label10 with label30;
        catch com.initech.asn1.ASN1Exception from label11 to label12 with label30;
        catch com.initech.asn1.ASN1Exception from label13 to label14 with label30;
        catch com.initech.asn1.ASN1Exception from label16 to label17 with label30;
        catch com.initech.asn1.ASN1Exception from label19 to label20 with label23;
        catch com.initech.asn1.ASN1Exception from label21 to label22 with label23;
        catch com.initech.asn1.ASN1Exception from label25 to label26 with label23;
        catch java.security.NoSuchProviderException from label27 to label28 with label29;
    }

    public void setContent(int, java.lang.Object)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        int $i0, varReplacer28414, varReplacer28415;
        java.lang.Object $r1;
        com.initech.pkix.'cmp'.PKIBody $r2;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        varReplacer28415 = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean modified> = varReplacer28415;

        varReplacer28414 = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f> = varReplacer28414;

        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIBody b>;

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIBody: void setContent(int,java.lang.Object)>($i0, $r1);

        return;
    }

    public void setHeader(com.initech.pkix.'cmp'.PKIHeader)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        com.initech.pkix.'cmp'.PKIHeader $r1;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: com.initech.pkix.'cmp'.PKIHeader;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean modified> = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a> = $r1;

        return;
    }

    public void setProtection(byte[])
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        byte[] $r1;
        com.initech.asn1.ASN1BitString $r2;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: byte[];

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean modified> = 1;

        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r2 != null goto label1;

        $r2 = new com.initech.asn1.ASN1BitString;

        specialinvoke $r2.<com.initech.asn1.ASN1BitString: void <init>(int,byte[])>(0, $r1);

        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c> = $r2;

        return;

     label1:
        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        virtualinvoke $r2.<com.initech.asn1.ASN1BitString: void setByteArray(byte[])>($r1);

        return;
    }

    public void sign(com.initech.pkix.'cmp'.client.USIMAdapter, com.initech.asn1.useful.AlgorithmID, boolean)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        com.initech.pkix.'cmp'.client.USIMAdapter $r1;
        com.initech.asn1.useful.AlgorithmID $r2;
        boolean $z0;
        com.initech.pkix.'cmp'.PKIHeader $r3;
        com.initech.asn1.ASN1BitString $r4, r9;
        byte[] $r5;
        java.lang.Throwable $r6;
        java.lang.String $r7;
        com.initech.asn1.ASN1Exception $r8;
        java.security.SignatureException r10;
        java.security.NoSuchProviderException r11;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: com.initech.pkix.'cmp'.client.USIMAdapter;

        $r2 := @parameter1: com.initech.asn1.useful.AlgorithmID;

        $z0 := @parameter2: boolean;

        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        virtualinvoke $r3.<com.initech.pkix.'cmp'.PKIHeader: void setProtectionAlg(com.initech.asn1.useful.AlgorithmID)>($r2);

        $r4 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r4 != null goto label3;

        r9 = new com.initech.asn1.ASN1BitString;

     label1:
        specialinvoke r9.<com.initech.asn1.ASN1BitString: void <init>()>();

     label2:
        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c> = r9;

     label3:
        $r5 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] getProtectedBody()>();

        $r5 = virtualinvoke $r1.<com.initech.pkix.'cmp'.client.USIMAdapter: byte[] sign(com.initech.asn1.useful.AlgorithmID,byte[],boolean)>($r2, $r5, $z0);

     label4:
        $r4 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

     label5:
        virtualinvoke $r4.<com.initech.asn1.ASN1BitString: void setByteArray(byte[])>($r5);

     label6:
        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean modified> = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f> = 1;

        return;

     label7:
        $r6 := @caughtexception;

        r10 = new java.security.SignatureException;

        r11 = (java.security.NoSuchProviderException) $r6;

        $r7 = virtualinvoke r11.<java.security.NoSuchProviderException: java.lang.String toString()>();

        specialinvoke r10.<java.security.SignatureException: void <init>(java.lang.String)>($r7);

        throw r10;

     label8:
        $r8 := @caughtexception;

        r10 = new java.security.SignatureException;

        $r7 = virtualinvoke $r8.<com.initech.asn1.ASN1Exception: java.lang.String toString()>();

        specialinvoke r10.<java.security.SignatureException: void <init>(java.lang.String)>($r7);

        throw r10;

        catch java.security.NoSuchProviderException from label1 to label2 with label7;
        catch java.security.NoSuchProviderException from label3 to label4 with label7;
        catch java.security.NoSuchProviderException from label5 to label6 with label7;
        catch com.initech.asn1.ASN1Exception from label1 to label2 with label8;
        catch com.initech.asn1.ASN1Exception from label3 to label4 with label8;
        catch com.initech.asn1.ASN1Exception from label5 to label6 with label8;
    }

    public void sign(java.security.PrivateKey, com.initech.asn1.useful.AlgorithmID)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        java.security.PrivateKey $r1;
        com.initech.asn1.useful.AlgorithmID $r2;
        java.lang.String varReplacer28364;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 := @parameter1: com.initech.asn1.useful.AlgorithmID;

        varReplacer28364 = "Initech";

        virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: void sign(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r1, $r2, varReplacer28364);

        return;
    }

    public void sign(java.security.PrivateKey, com.initech.asn1.useful.AlgorithmID, java.lang.String)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        java.security.PrivateKey $r1;
        com.initech.asn1.useful.AlgorithmID $r2;
        java.lang.String $r3, $r4, varReplacer28367;
        java.security.Signature $r5;
        com.initech.pkix.'cmp'.PKIHeader $r6;
        byte[] $r7;
        com.initech.asn1.ASN1BitString $r8, r11;
        java.lang.Throwable $r9;
        com.initech.asn1.ASN1Exception $r10;
        java.security.SignatureException r12;
        java.security.NoSuchProviderException r13;
        int varReplacer28365, varReplacer28366;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: java.security.PrivateKey;

        $r2 := @parameter1: com.initech.asn1.useful.AlgorithmID;

        $r3 := @parameter2: java.lang.String;

     label01:
        $r4 = virtualinvoke $r2.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlgName()>();

        varReplacer28367 = "Initech";

        $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, varReplacer28367);

     label02:
        $r6 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setProtectionAlg(com.initech.asn1.useful.AlgorithmID)>($r2);

     label03:
        virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1);

        $r7 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] getProtectedBody()>();

        virtualinvoke $r5.<java.security.Signature: void update(byte[])>($r7);

     label04:
        $r8 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r8 != null goto label07;

        r11 = new com.initech.asn1.ASN1BitString;

     label05:
        specialinvoke r11.<com.initech.asn1.ASN1BitString: void <init>()>();

     label06:
        $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c> = r11;

     label07:
        $r8 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

     label08:
        $r7 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>();

        virtualinvoke $r8.<com.initech.asn1.ASN1BitString: void setByteArray(byte[])>($r7);

     label09:
        varReplacer28365 = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean modified> = varReplacer28365;

        varReplacer28366 = 1;

        $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean f> = varReplacer28366;

        return;

     label10:
        $r9 := @caughtexception;

        r12 = new java.security.SignatureException;

        r13 = (java.security.NoSuchProviderException) $r9;

        $r3 = virtualinvoke r13.<java.security.NoSuchProviderException: java.lang.String toString()>();

        specialinvoke r12.<java.security.SignatureException: void <init>(java.lang.String)>($r3);

        throw r12;

     label11:
        $r10 := @caughtexception;

        r12 = new java.security.SignatureException;

        $r3 = virtualinvoke $r10.<com.initech.asn1.ASN1Exception: java.lang.String toString()>();

        specialinvoke r12.<java.security.SignatureException: void <init>(java.lang.String)>($r3);

        throw r12;

        catch java.security.NoSuchProviderException from label01 to label02 with label10;
        catch com.initech.asn1.ASN1Exception from label03 to label04 with label11;
        catch com.initech.asn1.ASN1Exception from label05 to label06 with label11;
        catch com.initech.asn1.ASN1Exception from label08 to label09 with label11;
    }

    public boolean verify(java.lang.Object)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.security.PublicKey $r2;
        byte[] $r3;
        java.security.InvalidKeyException $r4;
        java.lang.String varReplacer28483;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.security.PublicKey;

        if $z0 == 0 goto label1;

        $r2 = (java.security.PublicKey) $r1;

        $z0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean verifySign(java.security.PublicKey)>($r2);

        return $z0;

     label1:
        $z0 = $r1 instanceof byte[];

        if $z0 == 0 goto label2;

        $r3 = (byte[]) $r1;

        varReplacer28483 = "InitechPKIX";

        $z0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean verifyMac(byte[],java.lang.String)>($r3, varReplacer28483);

        return $z0;

     label2:
        $r4 = new java.security.InvalidKeyException;

        specialinvoke $r4.<java.security.InvalidKeyException: void <init>()>();

        throw $r4;
    }

    public boolean verify(java.lang.Object, java.lang.String)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        boolean $z0;
        java.security.PublicKey $r3;
        byte[] $r4;
        java.security.InvalidKeyException $r5;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r2 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $z0 = $r2 instanceof java.security.PublicKey;

        if $z0 == 0 goto label1;

        $r3 = (java.security.PublicKey) $r2;

        $z0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean verifySign(java.security.PublicKey,java.lang.String)>($r3, $r1);

        return $z0;

     label1:
        $z0 = $r2 instanceof byte[];

        if $z0 == 0 goto label2;

        $r4 = (byte[]) $r2;

        $z0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean verifyMac(byte[],java.lang.String)>($r4, $r1);

        return $z0;

     label2:
        $r5 = new java.security.InvalidKeyException;

        specialinvoke $r5.<java.security.InvalidKeyException: void <init>()>();

        throw $r5;
    }

    public boolean verifyMac(byte[])
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        byte[] $r1;
        boolean $z0;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: byte[];

        $z0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: boolean verifyMac(byte[],java.lang.String)>($r1, "InitechPKIX");

        return $z0;
    }

    public boolean verifyMac(byte[], java.lang.String)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        byte[] $r1, $r8;
        java.lang.String $r2, $r6, $r7, r16, varReplacer28488, varReplacer28489, varReplacer28490, varReplacer28493, varReplacer28494;
        com.initech.asn1.ASN1BitString $r3;
        com.initech.pkix.'cmp'.PKIHeader $r4;
        com.initech.asn1.useful.AlgorithmID $r5;
        boolean $z0;
        com.initech.asn1.useful.ASN1Object $r9;
        com.initech.cryptox.Mac $r10;
        com.initech.provider.pkix.mac.CMPMacKey $r11, r17;
        java.lang.Throwable $r12;
        com.initech.asn1.ASN1Exception $r13, $r14;
        com.initech.pkix.'cmp'.PBMParameter r15;
        java.security.SignatureException r18;
        com.initech.pkix.'cmp'.DHBMParameter r19;
        java.security.NoSuchAlgorithmException r20;
        java.security.spec.AlgorithmParameterSpec r21;
        java.security.NoSuchProviderException r22;
        int varReplacer28491, varReplacer28492;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r3 != null goto label01;

        varReplacer28492 = 0;

        return varReplacer28492;

     label01:
        $r4 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        $r5 = virtualinvoke $r4.<com.initech.pkix.'cmp'.PKIHeader: com.initech.asn1.useful.AlgorithmID getProtectionAlg()>();

        if $r5 == null goto label34;

        $r6 = "1.2.840.113533.7.66.13";

     label02:
        $r7 = virtualinvoke $r5.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlg()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label03:
        if $z0 == 0 goto label24;

     label04:
        $r8 = virtualinvoke $r5.<com.initech.asn1.useful.AlgorithmID: byte[] getParameter()>();

     label05:
        if $r8 != null goto label18;

        r15 = new com.initech.pkix.'cmp'.PBMParameter;

        $r9 = r15;

     label06:
        specialinvoke r15.<com.initech.pkix.'cmp'.PBMParameter: void <init>()>();

     label07:
        r15 = (com.initech.pkix.'cmp'.PBMParameter) $r9;

     label08:
        virtualinvoke r15.<com.initech.pkix.'cmp'.PBMParameter: void setETRIParam()>();

     label09:
        r16 = new java.lang.String;

        $r6 = r16;

        r15 = (com.initech.pkix.'cmp'.PBMParameter) $r9;

     label10:
        $r7 = virtualinvoke r15.<com.initech.pkix.'cmp'.PBMParameter: java.lang.String getMACAlg()>();

        specialinvoke r16.<java.lang.String: void <init>(java.lang.String)>($r7);

        varReplacer28493 = "1.3.14.3.2.10";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28493);

     label11:
        if $z0 == 0 goto label22;

     label12:
        varReplacer28488 = "PasswordBasedMacETRI";

        varReplacer28489 = "InitechPKIX";

        $r10 = staticinvoke <com.initech.cryptox.Mac: com.initech.cryptox.Mac getInstance(java.lang.String,java.lang.String)>(varReplacer28488, varReplacer28489);

     label13:
        r17 = new com.initech.provider.pkix.mac.CMPMacKey;

        $r11 = r17;

     label14:
        specialinvoke r17.<com.initech.provider.pkix.mac.CMPMacKey: void <init>(byte[])>($r1);

     label15:
        r21 = (java.security.spec.AlgorithmParameterSpec) $r9;

     label16:
        virtualinvoke $r10.<com.initech.cryptox.Mac: void init(java.security.Key,java.security.spec.AlgorithmParameterSpec)>($r11, r21);

        $r1 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] getProtectedBody()>();

        virtualinvoke $r10.<com.initech.cryptox.Mac: void update(byte[])>($r1);

        $r1 = virtualinvoke $r10.<com.initech.cryptox.Mac: byte[] doFinal()>();

     label17:
        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        $r8 = virtualinvoke $r3.<com.initech.asn1.ASN1BitString: byte[] getAsByteArray()>();

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r1, $r8);

        return $z0;

     label18:
        r15 = new com.initech.pkix.'cmp'.PBMParameter;

        $r9 = r15;

     label19:
        $r8 = virtualinvoke $r5.<com.initech.asn1.useful.AlgorithmID: byte[] getParameter()>();

        specialinvoke r15.<com.initech.pkix.'cmp'.PBMParameter: void <init>(byte[])>($r8);

     label20:
        goto label09;

     label21:
        $r12 := @caughtexception;

        r18 = new java.security.SignatureException;

        r22 = (java.security.NoSuchProviderException) $r12;

        $r2 = virtualinvoke r22.<java.security.NoSuchProviderException: java.lang.String toString()>();

        specialinvoke r18.<java.security.SignatureException: void <init>(java.lang.String)>($r2);

        throw r18;

     label22:
        $r6 = virtualinvoke $r5.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlgName()>();

        varReplacer28494 = "InitechPKIX";

        $r10 = staticinvoke <com.initech.cryptox.Mac: com.initech.cryptox.Mac getInstance(java.lang.String,java.lang.String)>($r6, varReplacer28494);

     label23:
        goto label13;

     label24:
        $r6 = "1.2.840.113533.7.66.30";

     label25:
        $r7 = virtualinvoke $r5.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlg()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label26:
        if $z0 == 0 goto label29;

        r19 = new com.initech.pkix.'cmp'.DHBMParameter;

        $r9 = r19;

     label27:
        $r8 = virtualinvoke $r5.<com.initech.asn1.useful.AlgorithmID: byte[] getParameter()>();

        specialinvoke r19.<com.initech.pkix.'cmp'.DHBMParameter: void <init>(byte[])>($r8);

        $r6 = virtualinvoke $r5.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlgName()>();

        varReplacer28490 = "InitechPKIX";

        $r10 = staticinvoke <com.initech.cryptox.Mac: com.initech.cryptox.Mac getInstance(java.lang.String,java.lang.String)>($r6, varReplacer28490);

     label28:
        goto label13;

     label29:
        r20 = new java.security.NoSuchAlgorithmException;

     label30:
        $r2 = virtualinvoke $r5.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlg()>();

        specialinvoke r20.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r2);

     label31:
        throw r20;

     label32:
        $r13 := @caughtexception;

        r18 = new java.security.SignatureException;

        $r2 = virtualinvoke $r13.<com.initech.asn1.ASN1Exception: java.lang.String toString()>();

        specialinvoke r18.<java.security.SignatureException: void <init>(java.lang.String)>($r2);

        throw r18;

     label33:
        $r14 := @caughtexception;

        r18 = new java.security.SignatureException;

        $r2 = virtualinvoke $r14.<com.initech.asn1.ASN1Exception: java.lang.String toString()>();

        specialinvoke r18.<java.security.SignatureException: void <init>(java.lang.String)>($r2);

        throw r18;

     label34:
        varReplacer28491 = 0;

        return varReplacer28491;

        catch java.security.NoSuchProviderException from label02 to label03 with label21;
        catch java.security.NoSuchProviderException from label04 to label05 with label21;
        catch java.security.NoSuchProviderException from label06 to label07 with label21;
        catch java.security.NoSuchProviderException from label08 to label09 with label21;
        catch java.security.NoSuchProviderException from label10 to label11 with label21;
        catch java.security.NoSuchProviderException from label12 to label13 with label21;
        catch com.initech.asn1.ASN1Exception from label02 to label03 with label32;
        catch com.initech.asn1.ASN1Exception from label04 to label05 with label32;
        catch com.initech.asn1.ASN1Exception from label06 to label07 with label32;
        catch com.initech.asn1.ASN1Exception from label08 to label09 with label32;
        catch com.initech.asn1.ASN1Exception from label10 to label11 with label32;
        catch com.initech.asn1.ASN1Exception from label12 to label13 with label32;
        catch com.initech.asn1.ASN1Exception from label14 to label15 with label33;
        catch com.initech.asn1.ASN1Exception from label16 to label17 with label33;
        catch java.security.NoSuchProviderException from label19 to label20 with label21;
        catch com.initech.asn1.ASN1Exception from label19 to label20 with label32;
        catch java.security.NoSuchProviderException from label22 to label23 with label21;
        catch java.security.NoSuchProviderException from label25 to label26 with label21;
        catch java.security.NoSuchProviderException from label27 to label28 with label21;
        catch java.security.NoSuchProviderException from label30 to label31 with label21;
        catch com.initech.asn1.ASN1Exception from label22 to label23 with label32;
        catch com.initech.asn1.ASN1Exception from label25 to label26 with label32;
        catch com.initech.asn1.ASN1Exception from label27 to label28 with label32;
        catch com.initech.asn1.ASN1Exception from label30 to label31 with label32;
    }

    public boolean verifySign(java.security.PublicKey)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        java.security.PublicKey $r1;
        com.initech.asn1.ASN1BitString $r2;
        com.initech.pkix.'cmp'.PKIHeader $r3;
        com.initech.asn1.useful.AlgorithmID $r4;
        java.lang.String $r5, $r6, varReplacer28487;
        int $i0, varReplacer28484, varReplacer28485, varReplacer28486;
        com.initech.provider.crypto.rsa.RSAAutoSignature $r7;
        byte[] $r8, $r9;
        boolean $z0;
        java.lang.Exception $r10;
        java.security.SignatureException $r11;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r2 != null goto label01;

        varReplacer28484 = 0;

        return varReplacer28484;

     label01:
        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        $r4 = virtualinvoke $r3.<com.initech.pkix.'cmp'.PKIHeader: com.initech.asn1.useful.AlgorithmID getProtectionAlg()>();

        if $r4 == null goto label12;

     label02:
        $r5 = virtualinvoke $r4.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlgName()>();

     label03:
        $r6 = $r5;

     label04:
        varReplacer28487 = "with";

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>(varReplacer28487);

     label05:
        if $i0 == -1 goto label08;

     label06:
        varReplacer28486 = 0;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(varReplacer28486, $i0);

     label07:
        $r6 = $r5;

     label08:
        $r7 = new com.initech.provider.crypto.rsa.RSAAutoSignature;

     label09:
        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] getProtectedBody()>();

        $r2 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        $r9 = virtualinvoke $r2.<com.initech.asn1.ASN1BitString: byte[] getAsByteArray()>();

        specialinvoke $r7.<com.initech.provider.crypto.rsa.RSAAutoSignature: void <init>(java.security.PublicKey,byte[],byte[],java.lang.String)>($r1, $r8, $r9, $r6);

     label10:
        $z0 = virtualinvoke $r7.<com.initech.provider.crypto.rsa.RSAAutoSignature: boolean verify()>();

        return $z0;

     label11:
        $r10 := @caughtexception;

        $r11 = new java.security.SignatureException;

        $r5 = virtualinvoke $r10.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r11.<java.security.SignatureException: void <init>(java.lang.String)>($r5);

        throw $r11;

     label12:
        varReplacer28485 = 0;

        return varReplacer28485;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public boolean verifySign(java.security.PublicKey, java.lang.String)
    {
        com.initech.pkix.'cmp'.PKIMessage $r0;
        java.security.PublicKey $r1;
        java.lang.String $r2, $r6;
        com.initech.asn1.ASN1BitString $r3;
        com.initech.pkix.'cmp'.PKIHeader $r4;
        com.initech.asn1.useful.AlgorithmID $r5;
        int $i0;
        com.initech.provider.crypto.rsa.RSAAutoSignature $r7;
        byte[] $r8, $r9;
        boolean $z0;
        java.lang.Exception $r10;
        java.security.SignatureException $r11;

        $r0 := @this: com.initech.pkix.'cmp'.PKIMessage;

        $r1 := @parameter0: java.security.PublicKey;

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        if $r3 != null goto label01;

        return 0;

     label01:
        $r4 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader a>;

        $r5 = virtualinvoke $r4.<com.initech.pkix.'cmp'.PKIHeader: com.initech.asn1.useful.AlgorithmID getProtectionAlg()>();

        if $r5 == null goto label12;

     label02:
        $r2 = virtualinvoke $r5.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlgName()>();

     label03:
        $r6 = $r2;

     label04:
        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("with");

     label05:
        if $i0 == -1 goto label08;

     label06:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label07:
        $r6 = $r2;

     label08:
        $r7 = new com.initech.provider.crypto.rsa.RSAAutoSignature;

     label09:
        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.PKIMessage: byte[] getProtectedBody()>();

        $r3 = $r0.<com.initech.pkix.'cmp'.PKIMessage: com.initech.asn1.ASN1BitString c>;

        $r9 = virtualinvoke $r3.<com.initech.asn1.ASN1BitString: byte[] getAsByteArray()>();

        specialinvoke $r7.<com.initech.provider.crypto.rsa.RSAAutoSignature: void <init>(java.security.PublicKey,byte[],byte[],java.lang.String)>($r1, $r8, $r9, $r6);

     label10:
        $z0 = virtualinvoke $r7.<com.initech.provider.crypto.rsa.RSAAutoSignature: boolean verify()>();

        return $z0;

     label11:
        $r10 := @caughtexception;

        $r11 = new java.security.SignatureException;

        $r2 = virtualinvoke $r10.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r11.<java.security.SignatureException: void <init>(java.lang.String)>($r2);

        throw $r11;

     label12:
        return 0;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
}
