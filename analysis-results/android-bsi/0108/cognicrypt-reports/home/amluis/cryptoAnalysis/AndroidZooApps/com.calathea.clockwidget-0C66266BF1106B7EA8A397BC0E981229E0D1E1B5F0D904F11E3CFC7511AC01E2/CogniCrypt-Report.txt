Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r11
		Type: java.security.SecureRandom
		Statement: specialinvoke r11.<java.security.SecureRandom: void <init>()>()
		Method: <com.calathea.clockwidget.net.RemoteAgent: okhttp3.OkHttpClient getUnsafeOkHttpClient()>
		SHA-256: e546ed694bae1b13888eed129a0042f74069d873d354bff6f4749fe5804328a9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4547)
		Method: <com.calathea.clockwidget.utils.Utils: java.lang.String getSHA1(java.lang.String)>
		SHA-256: 33b86a31a87d803f968f6290613e201c2f8a20da112d54c0e9f153d92ed550f9
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6239)
		Method: <com.calathea.clockwidget.utils.Utils: java.lang.String getSha256(java.lang.String)>
		SHA-256: d3fdf87e02951f2169466d5b2ddcbaa1847f2149dcf10b347cca35d330fed069
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.calathea.clockwidget.utils.Utils: java.lang.String getSha256(java.lang.String)>
		SHA-256: 61445fe378c4ea7fb0f47896e24b2b9380951c6fecb2d5607a919b56722b7858
		Secure: true
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1162)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 2f4fda1ac062b5d32e70e162c1f026e5a46749384dcaebf3370170d9f8596562
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.calathea.clockwidget.utils.Utils: java.lang.String getSHA1(java.lang.String)>
		SHA-256: ce83e84036b2bb0461ec2b02fe3496b1994c411412106681ae5c514639d2601a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer434)
		Method: <com.calathea.clockwidget.net.RemoteAgent: okhttp3.OkHttpClient getUnsafeOkHttpClient()>
		SHA-256: 79d82953a968fceaacb56e6239b3446d2e8bcdb461ed83c53a8e7dc84c4bd66e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5474)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 2c9edd2343372ac25b6bc69d6f1c30bd4bbe661c5b9bab8d7852862f7832cac4
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 779fa9e7d07fc58ac6fb0f677b3796756777647dae3e7e2e128e2e27e33a0c70
		Secure: false

Findings in Java Class: com.calathea.clockwidget.net.RemoteAgent

	 in Method: okhttp3.OkHttpClient getUnsafeOkHttpClient()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #79d82953a968fceaacb56e6239b3446d2e8bcdb461ed83c53a8e7dc84c4bd66e)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer434)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer436, r15, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer436, r15, $r6)


Findings in Java Class: com.calathea.clockwidget.utils.Utils

	 in Method: java.lang.String getSHA1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #33b86a31a87d803f968f6290613e201c2f8a20da112d54c0e9f153d92ed550f9)
			First parameter (with value "SHA-1") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4547)


Findings in Java Class: okhttp3.internal.Util

	 in Method: okio.ByteString sha1(okio.ByteString)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2c9edd2343372ac25b6bc69d6f1c30bd4bbe661c5b9bab8d7852862f7832cac4)
			First parameter (with value "SHA-1") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5474)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1163, varReplacer1163, varReplacer1163)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1163, varReplacer1163, varReplacer1163)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 9

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 4
=====================================================================