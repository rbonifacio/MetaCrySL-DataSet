public class c.v extends java.lang.Object implements c.e$a, java.lang.Cloneable
{
    private static final java.util.List A;
    private static final java.util.List z;
    final c.m a;
    public final java.net.Proxy b;
    public final java.util.List c;
    public final java.util.List d;
    final java.util.List e;
    final java.util.List f;
    public final java.net.ProxySelector g;
    public final c.l h;
    final c.c i;
    final c.a.a.e j;
    public final javax.net.SocketFactory k;
    public final javax.net.ssl.SSLSocketFactory l;
    final c.a.g.b m;
    public final javax.net.ssl.HostnameVerifier n;
    public final c.f o;
    public final c.b p;
    public final c.b q;
    public final c.i r;
    public final c.n s;
    public final boolean t;
    public final boolean u;
    public final boolean v;
    public final int w;
    public final int x;
    public final int y;

    static void <clinit>()
    {
        c.w[] $r0;
        c.w $r1;
        java.util.List $r2;
        c.j[] $r3;
        c.j $r4;
        c.v$1 $r5;

        nop;

        $r0 = newarray (c.w)[3];

        $r1 = <c.w: c.w d>;

        $r0[0] = $r1;

        $r1 = <c.w: c.w c>;

        $r0[1] = $r1;

        $r1 = <c.w: c.w b>;

        $r0[2] = $r1;

        $r2 = staticinvoke <c.a.c: java.util.List a(java.lang.Object[])>($r0);

        <c.v: java.util.List z> = $r2;

        $r3 = newarray (c.j)[3];

        $r4 = <c.j: c.j a>;

        $r3[0] = $r4;

        $r4 = <c.j: c.j b>;

        $r3[1] = $r4;

        $r4 = <c.j: c.j c>;

        $r3[2] = $r4;

        $r2 = staticinvoke <c.a.c: java.util.List a(java.lang.Object[])>($r3);

        <c.v: java.util.List A> = $r2;

        $r5 = new c.v$1;

        specialinvoke $r5.<c.v$1: void <init>()>();

        <c.a.a: c.a.a a> = $r5;

        return;
    }

    public void <init>()
    {
        c.v $r0;
        c.v$a $r1;

        nop;

        $r0 := @this: c.v;

        $r1 = new c.v$a;

        specialinvoke $r1.<c.v$a: void <init>()>();

        specialinvoke $r0.<c.v: void <init>(c.v$a)>($r1);

        return;
    }

    private void <init>(c.v$a)
    {
        c.v $r0;
        c.v$a $r1;
        c.m $r2;
        java.net.Proxy $r3;
        java.util.List $r4;
        java.net.ProxySelector $r5;
        c.l $r6;
        c.c $r7;
        c.a.a.e $r8;
        javax.net.SocketFactory $r9;
        java.util.Iterator $r10;
        boolean $z0, $z1;
        java.lang.Object $r11;
        c.j $r12;
        javax.net.ssl.SSLSocketFactory $r13;
        c.a.g.b $r14, $r17;
        javax.net.ssl.HostnameVerifier $r15;
        c.f $r16, $r18;
        c.b $r19;
        c.i $r20;
        c.n $r21;
        int $i0;
        javax.net.ssl.X509TrustManager $r22;
        c.a.f.e $r23;

        nop;

        $r0 := @this: c.v;

        $r1 := @parameter0: c.v$a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<c.v$a: c.m a>;

        $r0.<c.v: c.m a> = $r2;

        $r3 = $r1.<c.v$a: java.net.Proxy b>;

        $r0.<c.v: java.net.Proxy b> = $r3;

        $r4 = $r1.<c.v$a: java.util.List c>;

        $r0.<c.v: java.util.List c> = $r4;

        $r4 = $r1.<c.v$a: java.util.List d>;

        $r0.<c.v: java.util.List d> = $r4;

        $r4 = $r1.<c.v$a: java.util.List e>;

        $r4 = staticinvoke <c.a.c: java.util.List a(java.util.List)>($r4);

        $r0.<c.v: java.util.List e> = $r4;

        $r4 = $r1.<c.v$a: java.util.List f>;

        $r4 = staticinvoke <c.a.c: java.util.List a(java.util.List)>($r4);

        $r0.<c.v: java.util.List f> = $r4;

        $r5 = $r1.<c.v$a: java.net.ProxySelector g>;

        $r0.<c.v: java.net.ProxySelector g> = $r5;

        $r6 = $r1.<c.v$a: c.l h>;

        $r0.<c.v: c.l h> = $r6;

        $r7 = $r1.<c.v$a: c.c i>;

        $r0.<c.v: c.c i> = $r7;

        $r8 = $r1.<c.v$a: c.a.a.e j>;

        $r0.<c.v: c.a.a.e j> = $r8;

        $r9 = $r1.<c.v$a: javax.net.SocketFactory k>;

        $r0.<c.v: javax.net.SocketFactory k> = $r9;

        $r4 = $r0.<c.v: java.util.List d>;

        $r10 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = 0;

     label01:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (c.j) $r11;

        if $z0 != 0 goto label02;

        $z0 = $r12.<c.j: boolean d>;

        if $z0 == 0 goto label04;

     label02:
        $z0 = 1;

     label03:
        goto label01;

     label04:
        $z0 = 0;

        goto label03;

     label05:
        $r13 = $r1.<c.v$a: javax.net.ssl.SSLSocketFactory l>;

        if $r13 != null goto label06;

        if $z0 != 0 goto label09;

     label06:
        $r13 = $r1.<c.v$a: javax.net.ssl.SSLSocketFactory l>;

        $r0.<c.v: javax.net.ssl.SSLSocketFactory l> = $r13;

        $r14 = $r1.<c.v$a: c.a.g.b m>;

        $r0.<c.v: c.a.g.b m> = $r14;

     label07:
        $r15 = $r1.<c.v$a: javax.net.ssl.HostnameVerifier n>;

        $r0.<c.v: javax.net.ssl.HostnameVerifier n> = $r15;

        $r16 = $r1.<c.v$a: c.f o>;

        $r14 = $r0.<c.v: c.a.g.b m>;

        $r17 = $r16.<c.f: c.a.g.b c>;

        if $r17 == $r14 goto label10;

        $r18 = new c.f;

        $r4 = $r16.<c.f: java.util.List b>;

        specialinvoke $r18.<c.f: void <init>(java.util.List,c.a.g.b)>($r4, $r14);

     label08:
        $r0.<c.v: c.f o> = $r18;

        $r19 = $r1.<c.v$a: c.b p>;

        $r0.<c.v: c.b p> = $r19;

        $r19 = $r1.<c.v$a: c.b q>;

        $r0.<c.v: c.b q> = $r19;

        $r20 = $r1.<c.v$a: c.i r>;

        $r0.<c.v: c.i r> = $r20;

        $r21 = $r1.<c.v$a: c.n s>;

        $r0.<c.v: c.n s> = $r21;

        $z0 = $r1.<c.v$a: boolean t>;

        $r0.<c.v: boolean t> = $z0;

        $z0 = $r1.<c.v$a: boolean u>;

        $r0.<c.v: boolean u> = $z0;

        $z0 = $r1.<c.v$a: boolean v>;

        $r0.<c.v: boolean v> = $z0;

        $i0 = $r1.<c.v$a: int w>;

        $r0.<c.v: int w> = $i0;

        $i0 = $r1.<c.v$a: int x>;

        $r0.<c.v: int x> = $i0;

        $i0 = $r1.<c.v$a: int y>;

        $r0.<c.v: int y> = $i0;

        return;

     label09:
        $r22 = staticinvoke <c.v: javax.net.ssl.X509TrustManager c()>();

        $r13 = staticinvoke <c.v: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>($r22);

        $r0.<c.v: javax.net.ssl.SSLSocketFactory l> = $r13;

        $r23 = staticinvoke <c.a.f.e: c.a.f.e b()>();

        $r14 = virtualinvoke $r23.<c.a.f.e: c.a.g.b a(javax.net.ssl.X509TrustManager)>($r22);

        $r0.<c.v: c.a.g.b m> = $r14;

        goto label07;

     label10:
        $r18 = $r16;

        goto label08;
    }

    public void <init>(c.v$a, byte)
    {
        c.v $r0;
        c.v$a $r1;
        byte $b0;

        nop;

        $r0 := @this: c.v;

        $r1 := @parameter0: c.v$a;

        $b0 := @parameter1: byte;

        specialinvoke $r0.<c.v: void <init>(c.v$a)>($r1);

        return;
    }

    static java.util.List a()
    {
        java.util.List r0;

        nop;

        r0 = <c.v: java.util.List z>;

        return r0;
    }

    private static javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
    {
        javax.net.ssl.X509TrustManager $r0;
        javax.net.ssl.SSLContext $r1;
        java.lang.Object[] $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.lang.Throwable $r4;
        java.lang.AssertionError r5;
        javax.net.ssl.TrustManager[] r6;
        java.lang.String varReplacer8575;
        null_type varReplacer8576, varReplacer8577;

        nop;

        $r0 := @parameter0: javax.net.ssl.X509TrustManager;

     label1:
        varReplacer8575 = "TLS";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8575);

     label2:
        $r2 = newarray (javax.net.ssl.TrustManager)[1];

        $r2[0] = $r0;

        r6 = (javax.net.ssl.TrustManager[]) $r2;

     label3:
        varReplacer8576 = null;

        varReplacer8577 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8576, r6, varReplacer8576);

        $r3 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        r5 = new java.lang.AssertionError;

        specialinvoke r5.<java.lang.AssertionError: void <init>()>();

        throw r5;

        catch java.security.GeneralSecurityException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label5;
    }

    static java.util.List b()
    {
        java.util.List r0;

        nop;

        r0 = <c.v: java.util.List A>;

        return r0;
    }

    private static javax.net.ssl.X509TrustManager c()
    {
        java.lang.String $r0, varReplacer8579;
        javax.net.ssl.TrustManagerFactory $r1;
        javax.net.ssl.TrustManager[] $r2;
        int $i0;
        javax.net.ssl.TrustManager $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.Throwable $r6;
        java.lang.AssertionError $r7;
        javax.net.ssl.X509TrustManager $r8;
        null_type varReplacer8578;

     label1:
        nop;

        $r0 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0);

        varReplacer8578 = null;

        virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer8578);

        $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label2:
        $i0 = lengthof $r2;

        if $i0 != 1 goto label3;

        $r3 = $r2[0];

        $z0 = $r3 instanceof javax.net.ssl.X509TrustManager;

        if $z0 != 0 goto label7;

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

     label4:
        varReplacer8579 = "Unexpected default trust managers:";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer8579);

        $r0 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

     label5:
        throw $r4;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label7:
        $r3 = $r2[0];

        $r8 = (javax.net.ssl.X509TrustManager) $r3;

        return $r8;

        catch java.security.GeneralSecurityException from label1 to label2 with label6;
        catch java.security.GeneralSecurityException from label4 to label5 with label6;
    }

    public final c.e a(c.y)
    {
        c.v $r0;
        c.y $r1;
        c.x $r2;

        $r0 := @this: c.v;

        $r1 := @parameter0: c.y;

        $r2 = new c.x;

        specialinvoke $r2.<c.x: void <init>(c.v,c.y)>($r0, $r1);

        return $r2;
    }
}
