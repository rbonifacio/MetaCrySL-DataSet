public final class com.ljoy.chatbot.utils.CommonUtils extends java.lang.Object
{
    private static final java.lang.String CHARSET;
    public static final java.lang.String FAILURE;
    public static final java.lang.String SUCCESS;
    private static final java.lang.String TAG;
    private static final int TIME_OUT;
    private static java.util.Map fileTotalSize;
    private static java.util.Map fileUploadSize;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        nop;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileUploadSize> = $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileTotalSize> = $r0;

        return;
    }

    public void <init>()
    {
        com.ljoy.chatbot.utils.CommonUtils $r0;

        $r0 := @this: com.ljoy.chatbot.utils.CommonUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String List2JsonArrStr(java.util.ArrayList)
    {
        java.util.ArrayList $r0;
        org.json.JSONArray $r1;
        int $i0;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.util.HashMap $r4;
        org.json.JSONObject $r5;
        java.lang.String $r6;

        $r0 := @parameter0: java.util.ArrayList;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r1 = new org.json.JSONArray;

        specialinvoke $r1.<org.json.JSONArray: void <init>()>();

        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.HashMap) $r3;

        $r5 = new org.json.JSONObject;

        specialinvoke $r5.<org.json.JSONObject: void <init>(java.util.Map)>($r4);

        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r5);

        goto label3;

     label4:
        $r6 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String toString()>();

        return $r6;
    }

    public static int caculateInSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        android.graphics.BitmapFactory$Options $r0;
        int $i0, $i1, $i2, $i3, varReplacer2804;
        float $f0, $f1;

        nop;

        $r0 := @parameter0: android.graphics.BitmapFactory$Options;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i3 = $r0.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i2 = $r0.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i3 > 2000 goto label1;

        if $i2 <= 2000 goto label2;

     label1:
        $f0 = (float) $i3;

        $f0 = $f0 * 1.0F;

        $f1 = (float) 2000;

        $f0 = $f0 / $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $f0 = (float) $i2;

        $f0 = $f0 * 1.0F;

        $f1 = (float) 2000;

        $f0 = $f0 / $f1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        return $i0;

     label2:
        varReplacer2804 = 1;

        return varReplacer2804;
    }

    public static void clearUploadFile(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Map $r1;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileUploadSize>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r0);

        $r1 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileTotalSize>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r0);

        return;
    }

    public static android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable)
    {
        android.graphics.drawable.Drawable $r0;
        android.graphics.Canvas $r1;
        int $i0, $i1, $i2;
        android.graphics.Bitmap$Config $r2;
        android.graphics.Bitmap $r3;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i2 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i2 == -1 goto label2;

        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label1:
        $r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r2);

        $r1 = new android.graphics.Canvas;

        specialinvoke $r1.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r3);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i0, $i1);

        virtualinvoke $r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>($r1);

        return $r3;

     label2:
        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        goto label1;
    }

    public static int getBitmapSize(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        int $i0, $i1;

        nop;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getAllocationByteCount()>();

        return $i0;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 12 goto label2;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getByteCount()>();

        return $i0;

     label2:
        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getRowBytes()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i0 * $i1;

        return $i0;
    }

    public static java.lang.String getDataColumn(android.content.Context, android.net.Uri, java.lang.String, java.lang.String[])
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String $r2, varReplacer2885;
        java.lang.String[] $r3, $r4;
        android.database.Cursor $r5, $r7;
        android.content.ContentResolver $r6;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r8;
        null_type varReplacer2886, varReplacer2887;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String[];

        $r5 = null;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "_data";

     label01:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer2886 = null;

        $r7 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r4, $r2, $r3, varReplacer2886);

     label02:
        $r5 = $r7;

        if $r7 == null goto label07;

     label03:
        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

     label04:
        if $z0 == 0 goto label07;

     label05:
        varReplacer2885 = "_data";

        $i0 = interfaceinvoke $r7.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>(varReplacer2885);

        $r2 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label06:
        if $r7 == null goto label11;

        interfaceinvoke $r7.<android.database.Cursor: void close()>();

        return $r2;

     label07:
        if $r7 == null goto label08;

        interfaceinvoke $r7.<android.database.Cursor: void close()>();

     label08:
        varReplacer2887 = null;

        return varReplacer2887;

     label09:
        $r8 := @caughtexception;

        if $r5 == null goto label10;

        interfaceinvoke $r5.<android.database.Cursor: void close()>();

     label10:
        throw $r8;

     label11:
        return $r2;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
    }

    public static int getFileProcess(java.lang.String)
    {
        java.lang.String $r0, $r7;
        float $f0, $f1;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3, $r4;
        int $i0;
        com.ljoy.chatbot.utils.Log $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileTotalSize>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (java.lang.Integer) $r2;

        if $r3 == null goto label1;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileUploadSize>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r4 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $f0 = (float) $i0;

        $r5 = staticinvoke <com.ljoy.chatbot.utils.Log: com.ljoy.chatbot.utils.Log o()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" total:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":size:");

        $r1 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileTotalSize>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.ljoy.chatbot.utils.Log: void out1(java.lang.String)>($r7);

        $r5 = staticinvoke <com.ljoy.chatbot.utils.Log: com.ljoy.chatbot.utils.Log o()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" curr:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":size:");

        $r1 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileUploadSize>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<com.ljoy.chatbot.utils.Log: void out1(java.lang.String)>($r0);

        $f0 = 100.0F * $f0;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = (int) $f0;

        return $i0;
    }

    public static java.lang.String getImageAbsolutePath(android.app.Activity, android.net.Uri)
    {
        android.app.Activity $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2, $r8;
        int $i0;
        boolean $z0;
        java.lang.String $r3, $r4, varReplacer2807, varReplacer2808, varReplacer2809, varReplacer2812, varReplacer2815;
        java.lang.StringBuilder $r5;
        java.io.File $r6;
        java.lang.Long $r7;
        long $l1;
        null_type varReplacer2805, varReplacer2806, varReplacer2810, varReplacer2811, varReplacer2813, varReplacer2814;

        nop;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: android.net.Uri;

        if $r0 == null goto label10;

        if $r1 != null goto label01;

        varReplacer2811 = null;

        return varReplacer2811;

     label01:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label07;

        $z0 = staticinvoke <android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>($r0, $r1);

        if $z0 == 0 goto label07;

        $z0 = staticinvoke <com.ljoy.chatbot.utils.CommonUtils: boolean isExternalStorageDocument(android.net.Uri)>($r1);

        if $z0 == 0 goto label02;

        $r3 = staticinvoke <android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>($r1);

        varReplacer2812 = ":";

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer2812);

        $r3 = $r2[0];

        $r4 = "primary";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label10;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        varReplacer2807 = "/";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2807);

        $r3 = $r2[1];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label02:
        $z0 = staticinvoke <com.ljoy.chatbot.utils.CommonUtils: boolean isDownloadsDocument(android.net.Uri)>($r1);

        if $z0 == 0 goto label03;

        $r3 = staticinvoke <android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>($r1);

        varReplacer2815 = "content://downloads/public_downloads";

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(varReplacer2815);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r3);

        $l1 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

        $r1 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r1, $l1);

        varReplacer2805 = null;

        varReplacer2806 = null;

        $r3 = staticinvoke <com.ljoy.chatbot.utils.CommonUtils: java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[])>($r0, $r1, varReplacer2805, varReplacer2805);

        return $r3;

     label03:
        $z0 = staticinvoke <com.ljoy.chatbot.utils.CommonUtils: boolean isMediaDocument(android.net.Uri)>($r1);

        if $z0 == 0 goto label10;

        $r3 = staticinvoke <android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>($r1);

        varReplacer2809 = ":";

        $r8 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer2809);

        $r3 = $r8[0];

        $r1 = null;

        $r4 = "image";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label05;

        $r1 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

     label04:
        $r2 = newarray (java.lang.String)[1];

        $r3 = $r8[1];

        $r2[0] = $r3;

        varReplacer2808 = "_id=?";

        $r3 = staticinvoke <com.ljoy.chatbot.utils.CommonUtils: java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[])>($r0, $r1, varReplacer2808, $r2);

        return $r3;

     label05:
        $r4 = "video";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label06;

        $r1 = <android.provider.MediaStore$Video$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        goto label04;

     label06:
        $r4 = "audio";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label04;

        $r1 = <android.provider.MediaStore$Audio$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        goto label04;

     label07:
        $r3 = "content";

        $r4 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label09;

        $z0 = staticinvoke <com.ljoy.chatbot.utils.CommonUtils: boolean isGooglePhotosUri(android.net.Uri)>($r1);

        if $z0 == 0 goto label08;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        return $r3;

     label08:
        varReplacer2813 = null;

        varReplacer2814 = null;

        $r3 = staticinvoke <com.ljoy.chatbot.utils.CommonUtils: java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[])>($r0, $r1, varReplacer2813, varReplacer2813);

        return $r3;

     label09:
        $r3 = "file";

        $r4 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label10;

        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getPath()>();

        return $r3;

     label10:
        varReplacer2810 = null;

        return varReplacer2810;
    }

    public static java.lang.String getRealPathFromURI(android.content.Context, android.net.Uri)
    {
        android.content.Context $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        java.lang.String $r3, $r4, $r5;
        boolean $z0;
        android.content.ContentResolver $r6;
        android.database.Cursor $r7;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.net.Uri;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke $r1.<android.net.Uri: java.lang.String getScheme()>();

        $r4 = null;

        if $r3 != null goto label3;

        $r4 = virtualinvoke $r1.<android.net.Uri: java.lang.String getPath()>();

     label2:
        return $r4;

     label3:
        $r5 = "file";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke $r1.<android.net.Uri: java.lang.String getPath()>();

        goto label2;

     label4:
        $r5 = "content";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "_data";

        $r7 = virtualinvoke $r6.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, null, null, null);

        if $r7 == null goto label2;

        $z0 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label5;

        $i0 = interfaceinvoke $r7.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_data");

        if $i0 <= -1 goto label5;

        $r4 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>($i0);

     label5:
        interfaceinvoke $r7.<android.database.Cursor: void close()>();

        goto label2;
    }

    public static android.graphics.Bitmap getRemoteImage(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        java.net.URL $r1;
        java.net.URLConnection $r2;
        java.net.HttpURLConnection $r3;
        int $i0;
        java.io.InputStream $r4;
        android.graphics.Bitmap $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.net.URL;

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = (java.net.HttpURLConnection) $r2;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke $r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>(5000);

        $i0 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 != 200 goto label1;

        $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>($r4);

        return $r5;

     label1:
        return null;
    }

    public static boolean isDownloadsDocument(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.net.Uri;

        $r1 = "com.android.providers.downloads.documents";

        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public static boolean isEmpty(java.lang.String)
    {
        java.lang.String $r0, varReplacer963;
        boolean $z0;
        int varReplacer961, varReplacer962;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        varReplacer963 = "";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer963);

        if $z0 == 0 goto label2;

     label1:
        varReplacer962 = 1;

        return varReplacer962;

     label2:
        varReplacer961 = 0;

        return varReplacer961;
    }

    public static boolean isExternalStorageDocument(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.net.Uri;

        $r1 = "com.android.externalstorage.documents";

        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public static boolean isGooglePhotosUri(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.net.Uri;

        $r1 = "com.google.android.apps.photos.content";

        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public static boolean isMediaDocument(android.net.Uri)
    {
        android.net.Uri $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.net.Uri;

        $r1 = "com.android.providers.media.documents";

        $r2 = virtualinvoke $r0.<android.net.Uri: java.lang.String getAuthority()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public static boolean isSame(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int varReplacer888;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        if $r1 != null goto label2;

     label1:
        varReplacer888 = 0;

        return varReplacer888;

     label2:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer891, varReplacer892, varReplacer893, varReplacer894, varReplacer895;
        byte $b0;
        java.lang.StringBuilder $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        int $i1, $i2;
        short $s3;
        java.lang.Throwable $r4, $r6;
        java.lang.RuntimeException $r5;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer894 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer894);

        varReplacer892 = "UTF-8";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer892);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

     label2:
        $r1 = new java.lang.StringBuilder;

        $i1 = lengthof $r3;

        $i1 = $i1 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = lengthof $r3;

        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label7;

        $b0 = $r3[$i2];

        $s3 = $b0 & 255;

        if $s3 >= 16 goto label4;

        varReplacer893 = "0";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer893);

     label4:
        $s3 = $b0 & 255;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $i2 = $i2 + 1;

        goto label3;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        varReplacer895 = "Huh, MD5 should be supported?";

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer895, $r4);

        throw $r5;

     label6:
        $r6 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        varReplacer891 = "Huh, UTF-8 should be supported?";

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer891, $r6);

        throw $r5;

     label7:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
    }

    public static void startFlick(android.view.View)
    {
        android.view.View $r0;
        android.view.animation.AlphaAnimation $r1;
        android.view.animation.LinearInterpolator $r2;

        $r0 := @parameter0: android.view.View;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = new android.view.animation.AlphaAnimation;

        specialinvoke $r1.<android.view.animation.AlphaAnimation: void <init>(float,float)>(1.0F, 0.0F);

        virtualinvoke $r1.<android.view.animation.Animation: void setDuration(long)>(500L);

        $r2 = new android.view.animation.LinearInterpolator;

        specialinvoke $r2.<android.view.animation.LinearInterpolator: void <init>()>();

        virtualinvoke $r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        virtualinvoke $r1.<android.view.animation.Animation: void setRepeatCount(int)>(-1);

        virtualinvoke $r1.<android.view.animation.Animation: void setRepeatMode(int)>(2);

        virtualinvoke $r0.<android.view.View: void startAnimation(android.view.animation.Animation)>($r1);

        return;
    }

    public static void stopFlick(android.view.View)
    {
        android.view.View $r0;

        $r0 := @parameter0: android.view.View;

        if $r0 != null goto label1;

        return;

     label1:
        virtualinvoke $r0.<android.view.View: void clearAnimation()>();

        return;
    }

    public static void systemAlertShow(android.app.Activity, java.lang.String, java.lang.String, java.lang.String)
    {
        android.app.Activity $r0;
        java.lang.String $r1, $r2, $r3;
        com.ljoy.chatbot.utils.CommonUtils$1 $r4;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        if $r0 == null goto label1;

        $r4 = new com.ljoy.chatbot.utils.CommonUtils$1;

        specialinvoke $r4.<com.ljoy.chatbot.utils.CommonUtils$1: void <init>(android.app.Activity,java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, $r2, $r3);

        virtualinvoke $r0.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    public static void systemAlertShow(android.app.Activity, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        android.app.Activity $r0;
        java.lang.String $r1, $r2, $r3, $r4;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        return;
    }

    public static java.lang.String uploadFile(java.io.File)
    {
        java.io.File $r0;
        java.lang.String $r1, $r10, $r14, $r15, $r19;
        java.lang.StringBuffer $r2, r36;
        byte[] $r3;
        java.io.DataOutputStream $r4, r35;
        java.io.BufferedReader $r5, r39;
        java.io.FileInputStream $r6, r37;
        org.json.JSONObject $r7, r40;
        java.net.URL $r8, r34;
        java.lang.StringBuilder $r9, r33;
        java.util.Map $r11, $r29;
        long $l0;
        int $i1, $i2;
        java.lang.Integer $r12;
        java.util.UUID $r13;
        java.net.URLConnection $r16;
        java.net.HttpURLConnection $r17;
        java.io.OutputStream $r18;
        boolean $z0;
        com.ljoy.chatbot.controller.ElvaServiceController $r20;
        com.ljoy.chatbot.model.ManufacturerInfo $r21;
        com.ljoy.chatbot.model.DeviceInfo $r22;
        android.app.Activity $r23;
        com.ljoy.chatbot.model.UserInfo $r24;
        java.lang.Throwable $r25, $r26;
        java.io.InputStreamReader $r27, r38;
        java.io.InputStream $r28;
        java.lang.Object $r30;
        com.ljoy.chatbot.ChatMainActivity $r31;
        org.json.JSONException $r32;
        java.net.MalformedURLException r41;
        java.io.IOException r42;

        $r0 := @parameter0: java.io.File;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file://");

        $r10 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileTotalSize>;

        $l0 = virtualinvoke $r0.<java.io.File: long length()>();

        $i1 = (int) $l0;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

        $r11 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileUploadSize>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

        $r13 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r14 = virtualinvoke $r13.<java.util.UUID: java.lang.String toString()>();

        $r1 = "\r\n";

        $r15 = staticinvoke <com.ljoy.chatbot.core.mqtt.NetMQTT: java.lang.String getUploadUrl()>();

        r34 = new java.net.URL;

        $r8 = r34;

     label01:
        specialinvoke r34.<java.net.URL: void <init>(java.lang.String)>($r15);

        $r16 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>();

     label02:
        $r17 = (java.net.HttpURLConnection) $r16;

     label03:
        virtualinvoke $r17.<java.net.HttpURLConnection: void setReadTimeout(int)>(100000000);

        virtualinvoke $r17.<java.net.HttpURLConnection: void setConnectTimeout(int)>(100000000);

        virtualinvoke $r17.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r17.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r17.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        virtualinvoke $r17.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke $r17.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Charset", "utf-8");

        virtualinvoke $r17.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("connection", "keep-alive");

     label04:
        r33 = new java.lang.StringBuilder;

        $r9 = r33;

     label05:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multipart/form-data");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";boundary=");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r15);

     label06:
        if $r0 == null goto label52;

     label07:
        $r18 = virtualinvoke $r17.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

     label08:
        r35 = new java.io.DataOutputStream;

        $r4 = r35;

     label09:
        specialinvoke r35.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r18);

     label10:
        $i1 = 0;

     label11:
        if $i1 >= 10 goto label53;

        $z0 = 0;

        r36 = new java.lang.StringBuffer;

        $r2 = r36;

     label12:
        specialinvoke r36.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("--");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

     label13:
        $r15 = "";

        $r19 = "";

        lookupswitch($i1)
        {
            case 0: goto label16;
            case 1: goto label19;
            case 2: goto label22;
            case 3: goto label25;
            case 4: goto label28;
            case 5: goto label31;
            case 6: goto label32;
            case 7: goto label37;
            case 8: goto label42;
            case 9: goto label43;
            default: goto label14;
        };

     label14:
        if $z0 == 0 goto label46;

     label15:
        $i1 = $i1 + 1;

        goto label11;

     label16:
        $r15 = "appId";

     label17:
        $r20 = staticinvoke <com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.controller.ElvaServiceController getInstance()>();

        $r21 = virtualinvoke $r20.<com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.model.ManufacturerInfo getManufacturerInfo()>();

        $r19 = virtualinvoke $r21.<com.ljoy.chatbot.model.ManufacturerInfo: java.lang.String getAppId()>();

     label18:
        goto label14;

     label19:
        $r15 = "appKey";

     label20:
        $r20 = staticinvoke <com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.controller.ElvaServiceController getInstance()>();

        $r21 = virtualinvoke $r20.<com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.model.ManufacturerInfo getManufacturerInfo()>();

        $r19 = virtualinvoke $r21.<com.ljoy.chatbot.model.ManufacturerInfo: java.lang.String getAppKey()>();

     label21:
        goto label14;

     label22:
        $r15 = "domain";

     label23:
        $r20 = staticinvoke <com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.controller.ElvaServiceController getInstance()>();

        $r21 = virtualinvoke $r20.<com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.model.ManufacturerInfo getManufacturerInfo()>();

        $r19 = virtualinvoke $r21.<com.ljoy.chatbot.model.ManufacturerInfo: java.lang.String getDomain()>();

     label24:
        goto label14;

     label25:
        $r15 = "timestamp";

     label26:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r19 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label27:
        goto label14;

     label28:
        $r15 = "deviceid";

     label29:
        $r20 = staticinvoke <com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.controller.ElvaServiceController getInstance()>();

        $r22 = virtualinvoke $r20.<com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.model.DeviceInfo getDeviceInfo()>();

        $r19 = virtualinvoke $r22.<com.ljoy.chatbot.model.DeviceInfo: java.lang.String getDeviceId()>();

     label30:
        goto label14;

     label31:
        $r15 = "sdkVersion";

        $r19 = <com.ljoy.chatbot.utils.Constants: java.lang.String SDK_VERSION>;

        goto label14;

     label32:
        $r23 = staticinvoke <com.ljoy.chatbot.view.ChatServiceActivity: android.app.Activity getCurrentActivity()>();

     label33:
        if $r23 == null goto label36;

     label34:
        $r20 = staticinvoke <com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.controller.ElvaServiceController getInstance()>();

        $r24 = virtualinvoke $r20.<com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.model.UserInfo getUserInfo()>();

        $r15 = virtualinvoke $r24.<com.ljoy.chatbot.model.UserInfo: java.lang.String getServerId()>();

     label35:
        $r19 = $r15;

        $r15 = "serverId";

        goto label14;

     label36:
        $z0 = 1;

        goto label14;

     label37:
        $r23 = staticinvoke <com.ljoy.chatbot.view.ChatServiceActivity: android.app.Activity getCurrentActivity()>();

     label38:
        if $r23 == null goto label41;

     label39:
        $r20 = staticinvoke <com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.controller.ElvaServiceController getInstance()>();

        $r24 = virtualinvoke $r20.<com.ljoy.chatbot.controller.ElvaServiceController: com.ljoy.chatbot.model.UserInfo getUserInfo()>();

        $r15 = virtualinvoke $r24.<com.ljoy.chatbot.model.UserInfo: java.lang.String getUserId()>();

     label40:
        $r19 = $r15;

        $r15 = "userid";

        goto label14;

     label41:
        $z0 = 1;

        goto label14;

     label42:
        $r15 = "fileType";

        $r19 = "png";

        goto label14;

     label43:
        $r15 = "fileName";

     label44:
        $r19 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

     label45:
        goto label14;

     label46:
        r33 = new java.lang.StringBuilder;

        $r9 = r33;

     label47:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: form-data; name=\"");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

     label48:
        r33 = new java.lang.StringBuilder;

        $r9 = r33;

     label49:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r15 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r15);

     label50:
        goto label15;

     label51:
        $r25 := @caughtexception;

        r41 = (java.net.MalformedURLException) $r25;

        virtualinvoke r41.<java.net.MalformedURLException: void printStackTrace()>();

     label52:
        return "0";

     label53:
        r36 = new java.lang.StringBuffer;

        $r2 = r36;

     label54:
        specialinvoke r36.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("--");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

     label55:
        r33 = new java.lang.StringBuilder;

        $r9 = r33;

     label56:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Disposition: form-data; name=\"file\";filename=\"");

        $r15 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

     label57:
        r33 = new java.lang.StringBuilder;

        $r9 = r33;

     label58:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-Type: application/octet-stream; charset=utf-8");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        $r15 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r15.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>($r3);

     label59:
        r37 = new java.io.FileInputStream;

        $r6 = r37;

     label60:
        specialinvoke r37.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label61:
        $r3 = newarray (byte)[1024];

        $i1 = 0;

     label62:
        $i2 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>($r3);

     label63:
        if $i2 == -1 goto label69;

     label64:
        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[],int,int)>($r3, 0, $i2);

     label65:
        $i1 = $i1 + $i2;

        $r11 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileUploadSize>;

     label66:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r12);

     label67:
        goto label62;

     label68:
        $r26 := @caughtexception;

        r42 = (java.io.IOException) $r26;

        virtualinvoke r42.<java.io.IOException: void printStackTrace()>();

        goto label52;

     label69:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>($r3);

     label70:
        r33 = new java.lang.StringBuilder;

        $r9 = r33;

     label71:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void write(byte[])>($r3);

        virtualinvoke $r4.<java.io.DataOutputStream: void flush()>();

        $i1 = virtualinvoke $r17.<java.net.HttpURLConnection: int getResponseCode()>();

     label72:
        r36 = new java.lang.StringBuffer;

        $r2 = r36;

     label73:
        specialinvoke r36.<java.lang.StringBuffer: void <init>()>();

     label74:
        r39 = new java.io.BufferedReader;

        $r5 = r39;

        r38 = new java.io.InputStreamReader;

        $r27 = r38;

     label75:
        $r28 = virtualinvoke $r17.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke r38.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r28, "GBK");

        specialinvoke r39.<java.io.BufferedReader: void <init>(java.io.Reader)>($r27);

     label76:
        $r1 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label77:
        if $r1 == null goto label80;

     label78:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label79:
        goto label76;

     label80:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label81:
        if $i1 != 200 goto label52;

        r40 = new org.json.JSONObject;

        $r7 = r40;

     label82:
        specialinvoke r40.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("url");

     label83:
        $r11 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileUploadSize>;

        $r29 = <com.ljoy.chatbot.utils.CommonUtils: java.util.Map fileTotalSize>;

     label84:
        $r30 = interfaceinvoke $r29.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r30);

        $r31 = staticinvoke <com.ljoy.chatbot.view.ChatServiceActivity: com.ljoy.chatbot.ChatMainActivity getChatActivity()>();

     label85:
        if $r31 == null goto label88;

     label86:
        $r31 = staticinvoke <com.ljoy.chatbot.view.ChatServiceActivity: com.ljoy.chatbot.ChatMainActivity getChatActivity()>();

        virtualinvoke $r31.<com.ljoy.chatbot.ChatMainActivity: void getUploadResult(java.lang.String)>($r1);

     label87:
        return "1";

     label88:
        return "0";

     label89:
        $r32 := @caughtexception;

     label90:
        virtualinvoke $r32.<org.json.JSONException: void printStackTrace()>();

     label91:
        goto label87;

        catch java.net.MalformedURLException from label01 to label02 with label51;
        catch java.net.MalformedURLException from label03 to label04 with label51;
        catch java.net.MalformedURLException from label05 to label06 with label51;
        catch java.net.MalformedURLException from label07 to label08 with label51;
        catch java.net.MalformedURLException from label09 to label10 with label51;
        catch java.net.MalformedURLException from label12 to label13 with label51;
        catch java.net.MalformedURLException from label17 to label18 with label51;
        catch java.net.MalformedURLException from label20 to label21 with label51;
        catch java.net.MalformedURLException from label23 to label24 with label51;
        catch java.net.MalformedURLException from label26 to label27 with label51;
        catch java.net.MalformedURLException from label29 to label30 with label51;
        catch java.net.MalformedURLException from label32 to label33 with label51;
        catch java.net.MalformedURLException from label34 to label35 with label51;
        catch java.net.MalformedURLException from label37 to label38 with label51;
        catch java.net.MalformedURLException from label39 to label40 with label51;
        catch java.net.MalformedURLException from label44 to label45 with label51;
        catch java.net.MalformedURLException from label47 to label48 with label51;
        catch java.net.MalformedURLException from label49 to label50 with label51;
        catch java.io.IOException from label01 to label02 with label68;
        catch java.io.IOException from label03 to label04 with label68;
        catch java.io.IOException from label05 to label06 with label68;
        catch java.io.IOException from label07 to label08 with label68;
        catch java.io.IOException from label09 to label10 with label68;
        catch java.io.IOException from label12 to label13 with label68;
        catch java.io.IOException from label17 to label18 with label68;
        catch java.io.IOException from label20 to label21 with label68;
        catch java.io.IOException from label23 to label24 with label68;
        catch java.io.IOException from label26 to label27 with label68;
        catch java.io.IOException from label29 to label30 with label68;
        catch java.io.IOException from label32 to label33 with label68;
        catch java.io.IOException from label34 to label35 with label68;
        catch java.io.IOException from label37 to label38 with label68;
        catch java.io.IOException from label39 to label40 with label68;
        catch java.io.IOException from label44 to label45 with label68;
        catch java.io.IOException from label47 to label48 with label68;
        catch java.io.IOException from label49 to label50 with label68;
        catch java.net.MalformedURLException from label54 to label55 with label51;
        catch java.net.MalformedURLException from label56 to label57 with label51;
        catch java.net.MalformedURLException from label58 to label59 with label51;
        catch java.net.MalformedURLException from label60 to label61 with label51;
        catch java.net.MalformedURLException from label62 to label63 with label51;
        catch java.net.MalformedURLException from label64 to label65 with label51;
        catch java.net.MalformedURLException from label66 to label67 with label51;
        catch java.io.IOException from label54 to label55 with label68;
        catch java.io.IOException from label56 to label57 with label68;
        catch java.io.IOException from label58 to label59 with label68;
        catch java.io.IOException from label60 to label61 with label68;
        catch java.io.IOException from label62 to label63 with label68;
        catch java.io.IOException from label64 to label65 with label68;
        catch java.io.IOException from label66 to label67 with label68;
        catch java.net.MalformedURLException from label69 to label70 with label51;
        catch java.net.MalformedURLException from label71 to label72 with label51;
        catch java.net.MalformedURLException from label73 to label74 with label51;
        catch java.net.MalformedURLException from label75 to label77 with label51;
        catch java.net.MalformedURLException from label78 to label79 with label51;
        catch java.net.MalformedURLException from label80 to label81 with label51;
        catch java.io.IOException from label69 to label70 with label68;
        catch java.io.IOException from label71 to label72 with label68;
        catch java.io.IOException from label73 to label74 with label68;
        catch java.io.IOException from label75 to label77 with label68;
        catch java.io.IOException from label78 to label79 with label68;
        catch java.io.IOException from label80 to label81 with label68;
        catch org.json.JSONException from label82 to label83 with label89;
        catch org.json.JSONException from label84 to label85 with label89;
        catch org.json.JSONException from label86 to label87 with label89;
        catch java.net.MalformedURLException from label82 to label83 with label51;
        catch java.net.MalformedURLException from label84 to label85 with label51;
        catch java.net.MalformedURLException from label86 to label87 with label51;
        catch java.io.IOException from label82 to label83 with label68;
        catch java.io.IOException from label84 to label85 with label68;
        catch java.io.IOException from label86 to label87 with label68;
        catch java.net.MalformedURLException from label90 to label91 with label51;
        catch java.io.IOException from label90 to label91 with label68;
    }

    public static android.graphics.drawable.Drawable zoomDrawable(android.graphics.drawable.Drawable, int, int)
    {
        android.graphics.drawable.Drawable $r0;
        int $i0, $i1, $i2, $i3;
        android.graphics.Matrix $r1;
        float $f0, $f1, $f2;
        android.graphics.Bitmap $r2;
        android.graphics.drawable.BitmapDrawable $r3;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $i3 = virtualinvoke $r0.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $r2 = staticinvoke <com.ljoy.chatbot.utils.CommonUtils: android.graphics.Bitmap drawableToBitmap(android.graphics.drawable.Drawable)>($r0);

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        $f1 = (float) $i0;

        $f0 = (float) $i2;

        $f1 = $f1 / $f0;

        $f0 = (float) $i1;

        $f2 = (float) $i3;

        $f0 = $f0 / $f2;

        virtualinvoke $r1.<android.graphics.Matrix: boolean postScale(float,float)>($f1, $f0);

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>($r2, 0, 0, $i2, $i3, $r1, 1);

        $r3 = new android.graphics.drawable.BitmapDrawable;

        specialinvoke $r3.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r2);

        return $r3;
    }
}
