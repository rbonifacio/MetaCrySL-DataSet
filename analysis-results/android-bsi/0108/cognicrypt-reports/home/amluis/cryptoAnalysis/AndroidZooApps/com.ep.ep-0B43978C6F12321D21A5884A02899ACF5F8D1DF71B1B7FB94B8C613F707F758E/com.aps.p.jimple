public class com.aps.p extends java.lang.Object
{
    private static java.util.List a;
    private com.aps.g b;
    private int c;

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        nop;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.aps.p: java.util.List a> = $r0;

        return;
    }

    private void <init>(java.io.File, int, long) throws java.io.IOException
    {
        com.aps.p $r0;
        java.io.File $r1;
        int $i0, varReplacer6244, varReplacer6245, varReplacer6246;
        long $l1, varReplacer6247;
        com.aps.g $r2;

        nop;

        $r0 := @this: com.aps.p;

        $r1 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer6244 = 1;

        $r0.<com.aps.p: int c> = varReplacer6244;

        varReplacer6245 = 1;

        varReplacer6246 = 1;

        varReplacer6247 = 1048576L;

        $r2 = staticinvoke <com.aps.g: com.aps.g a(java.io.File,int,int,long)>($r1, varReplacer6245, varReplacer6245, varReplacer6247);

        $r0.<com.aps.p: com.aps.g b> = $r2;

        return;
    }

    public static com.aps.p a(java.io.File, int, long) throws java.io.IOException
    {
        java.io.File $r0;
        int $i0, varReplacer6242;
        long $l1, varReplacer6243;
        java.util.List $r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer6240, varReplacer6241;
        java.lang.Throwable $r5;
        com.aps.p $r6;

        nop;

        $r0 := @parameter0: java.io.File;

        $i0 := @parameter1: int;

        $l1 := @parameter2: long;

        entermonitor class "Lcom/aps/p;";

     label1:
        $r1 = <com.aps.p: java.util.List a>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer6240 = "Cache dir ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6240);

        $r4 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer6241 = " was used before.";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6241);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $r5 := @caughtexception;

        exitmonitor class "Lcom/aps/p;";

        throw $r5;

     label3:
        $r1 = <com.aps.p: java.util.List a>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r0);

        $r6 = new com.aps.p;

        varReplacer6242 = 1;

        varReplacer6243 = 1048576L;

        specialinvoke $r6.<com.aps.p: void <init>(java.io.File,int,long)>($r0, varReplacer6242, varReplacer6243);

     label4:
        exitmonitor class "Lcom/aps/p;";

        return $r6;

        catch java.lang.Throwable from label1 to label2 with label2;
        catch java.lang.Throwable from label3 to label4 with label2;
    }

    private java.util.Map a(com.aps.g$c) throws java.io.IOException
    {
        com.aps.p $r0;
        com.aps.g$c $r1;
        java.io.ObjectInputStream $r2;
        java.io.BufferedInputStream $r3;
        java.io.InputStream $r4;
        java.lang.Object $r5;
        java.util.Map $r6;
        java.lang.ClassNotFoundException $r7;
        java.lang.RuntimeException $r8;
        java.lang.Throwable $r9;
        int varReplacer7351;

        nop;

        $r0 := @this: com.aps.p;

        $r1 := @parameter0: com.aps.g$c;

     label01:
        $r2 = new java.io.ObjectInputStream;

        $r3 = new java.io.BufferedInputStream;

     label02:
        varReplacer7351 = 0;

        $r4 = virtualinvoke $r1.<com.aps.g$c: java.io.InputStream a(int)>(varReplacer7351);

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);

        specialinvoke $r2.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r3);

     label03:
        $r5 = virtualinvoke $r2.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label04:
        $r6 = (java.util.Map) $r5;

     label05:
        if $r2 == null goto label13;

        virtualinvoke $r2.<java.io.ObjectInputStream: void close()>();

        return $r6;

     label06:
        $r7 := @caughtexception;

        $r2 = null;

     label07:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label08:
        $r9 := @caughtexception;

     label09:
        if $r2 == null goto label10;

        virtualinvoke $r2.<java.io.ObjectInputStream: void close()>();

     label10:
        throw $r9;

     label11:
        $r9 := @caughtexception;

        $r2 = null;

        goto label09;

     label12:
        $r7 := @caughtexception;

        goto label07;

     label13:
        return $r6;

        catch java.lang.ClassNotFoundException from label02 to label03 with label06;
        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.ClassNotFoundException from label03 to label04 with label12;
        catch java.lang.Throwable from label03 to label05 with label08;
        catch java.lang.Throwable from label07 to label08 with label08;
    }

    private java.lang.String b(java.lang.String)
    {
        com.aps.p $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: com.aps.p;

        $r1 := @parameter0: java.lang.String;

        $r1 = specialinvoke $r0.<com.aps.p: java.lang.String c(java.lang.String)>($r1);

        return $r1;
    }

    private java.lang.String c(java.lang.String)
    {
        com.aps.p $r0;
        java.lang.String $r1, varReplacer7336, varReplacer7337;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.math.BigInteger $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.AssertionError $r6;
        int varReplacer7334, varReplacer7335;

        nop;

        $r0 := @this: com.aps.p;

        $r1 := @parameter0: java.lang.String;

     label1:
        varReplacer7336 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7336);

        varReplacer7337 = "UTF-8";

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7337);

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label2:
        $r4 = new java.math.BigInteger;

     label3:
        varReplacer7334 = 1;

        specialinvoke $r4.<java.math.BigInteger: void <init>(int,byte[])>(varReplacer7334, $r3);

        varReplacer7335 = 16;

        $r1 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(varReplacer7335);

     label4:
        return $r1;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label6:
        $r7 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
    }

    public java.io.OutputStream a(java.lang.String, java.util.Map) throws java.io.IOException
    {
        com.aps.p $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        com.aps.g $r3;
        com.aps.g$a $r4;
        java.io.ObjectOutputStream $r5;
        java.io.OutputStream $r6;
        com.aps.p$a $r7;
        java.lang.Throwable $r8;
        null_type varReplacer7330, varReplacer7332;
        int varReplacer7331;

        nop;

        $r0 := @this: com.aps.p;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        $r3 = $r0.<com.aps.p: com.aps.g b>;

        $r1 = specialinvoke $r0.<com.aps.p: java.lang.String b(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<com.aps.g: com.aps.g$a b(java.lang.String)>($r1);

        if $r4 != null goto label1;

        varReplacer7330 = null;

        return varReplacer7330;

     label1:
        $r5 = new java.io.ObjectOutputStream;

     label2:
        varReplacer7331 = 0;

        $r6 = virtualinvoke $r4.<com.aps.g$a: java.io.OutputStream a(int)>(varReplacer7331);

        specialinvoke $r5.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r6);

        virtualinvoke $r5.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

     label3:
        $r7 = new com.aps.p$a;

     label4:
        varReplacer7332 = null;

        specialinvoke $r7.<com.aps.p$a: void <init>(java.io.OutputStream,com.aps.g$a,com.aps.p$1)>($r5, $r4, varReplacer7332);

     label5:
        return $r7;

     label6:
        $r8 := @caughtexception;

        virtualinvoke $r4.<com.aps.g$a: void b()>();

        throw $r8;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    public java.util.Map a(java.lang.String) throws java.io.IOException
    {
        com.aps.p $r0;
        java.lang.String $r1;
        com.aps.g $r2;
        com.aps.g$c $r3;
        java.util.Map $r4;
        java.lang.Throwable $r5;
        null_type varReplacer7329;

        nop;

        $r0 := @this: com.aps.p;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.aps.p: com.aps.g b>;

        $r1 = specialinvoke $r0.<com.aps.p: java.lang.String b(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<com.aps.g: com.aps.g$c a(java.lang.String)>($r1);

        if $r3 != null goto label1;

        varReplacer7329 = null;

        return varReplacer7329;

     label1:
        $r4 = specialinvoke $r0.<com.aps.p: java.util.Map a(com.aps.g$c)>($r3);

     label2:
        virtualinvoke $r3.<com.aps.g$c: void close()>();

        return $r4;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r3.<com.aps.g$c: void close()>();

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void a()
    {
        com.aps.p $r0;
        java.util.List $r1;
        com.aps.g $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @this: com.aps.p;

     label1:
        $r1 = <com.aps.p: java.util.List a>;

     label2:
        if $r1 == null goto label4;

     label3:
        $r1 = <com.aps.p: java.util.List a>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

     label4:
        $r2 = $r0.<com.aps.p: com.aps.g b>;

     label5:
        if $r2 == null goto label9;

     label6:
        $r2 = $r0.<com.aps.p: com.aps.g b>;

        virtualinvoke $r2.<com.aps.g: void close()>();

     label7:
        return;

     label8:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace()>();

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public void b(java.lang.String, java.util.Map) throws java.io.IOException
    {
        com.aps.p $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.Throwable $r3;
        java.io.OutputStream $r4;

        nop;

        $r0 := @this: com.aps.p;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

     label1:
        $r4 = virtualinvoke $r0.<com.aps.p: java.io.OutputStream a(java.lang.String,java.util.Map)>($r1, $r2);

     label2:
        if $r4 == null goto label5;

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

        return;

     label3:
        $r3 := @caughtexception;

        goto label4;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
