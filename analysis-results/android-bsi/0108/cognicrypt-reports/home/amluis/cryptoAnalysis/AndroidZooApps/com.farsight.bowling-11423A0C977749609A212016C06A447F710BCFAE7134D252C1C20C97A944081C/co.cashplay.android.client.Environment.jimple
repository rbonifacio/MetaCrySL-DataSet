public class co.cashplay.android.client.Environment extends java.lang.Object
{
    private static final int LOCATION_FETCH_TIMEOUT;
    private static final int LOCATION_UPDATE_DISTANCE;
    private static final int LOCATION_UPDATE_INTERVAL;
    static final java.lang.String TAG;
    private static final int TIMER_RESOLUTION;
    private boolean _access;
    private boolean _activatingLocation;
    private android.app.AlertDialog _cashplayServiceFailed;
    private android.content.Context _context;
    private co.cashplay.android.client.Environment$IContinue _continueHandler;
    private int _elapsedTime;
    private android.location.Location _location;
    private android.app.ProgressDialog _locationFetchProgress;
    private co.cashplay.android.client.Environment$LocationFetcher _locationFetcher;
    private android.location.LocationManager _locationManager;
    private android.app.AlertDialog _locationServiceDisabled;
    private android.app.AlertDialog _locationServiceFailed;
    private co.cashplay.android.client.Environment$LocationState _locationState;
    private android.app.AlertDialog _notConnectedToInternet;
    private android.content.DialogInterface$OnCancelListener _onCancelListener;
    private co.cashplay.android.client.Environment$IReturn _returnHandler;
    private org.json.JSONObject _routes;
    private co.cashplay.android.client.Environment$RoutesState _routesState;
    private int _server;
    private java.lang.String _sessionId;
    private co.cashplay.android.client.Environment$TimerState _timerState;
    private boolean _verbose;

    public void <init>(android.content.Context, int, boolean)
    {
        co.cashplay.android.client.Environment $r0;
        android.content.Context $r1;
        int $i0;
        boolean $z0;
        java.lang.Object $r2;
        co.cashplay.android.client.Environment$LocationState $r3;
        co.cashplay.android.client.Environment$RoutesState $r4;
        co.cashplay.android.client.Environment$TimerState $r5;
        co.cashplay.android.client.Environment$2 $r6;
        android.location.LocationManager $r7;
        android.app.Activity $r8;
        co.cashplay.android.client.Environment$1 $r9;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<co.cashplay.android.client.Environment: android.content.Context _context> = null;

        $r0.<co.cashplay.android.client.Environment: int _server> = 0;

        $r0.<co.cashplay.android.client.Environment: boolean _verbose> = 1;

        $r3 = <co.cashplay.android.client.Environment$LocationState: co.cashplay.android.client.Environment$LocationState TimedOut>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationState _locationState> = $r3;

        $r0.<co.cashplay.android.client.Environment: android.location.Location _location> = null;

        $r0.<co.cashplay.android.client.Environment: android.location.LocationManager _locationManager> = null;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationFetcher _locationFetcher> = null;

        $r4 = <co.cashplay.android.client.Environment$RoutesState: co.cashplay.android.client.Environment$RoutesState Failed>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$RoutesState _routesState> = $r4;

        $r0.<co.cashplay.android.client.Environment: org.json.JSONObject _routes> = null;

        $r5 = <co.cashplay.android.client.Environment$TimerState: co.cashplay.android.client.Environment$TimerState None>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$TimerState _timerState> = $r5;

        $r0.<co.cashplay.android.client.Environment: int _elapsedTime> = 0;

        $r0.<co.cashplay.android.client.Environment: android.app.ProgressDialog _locationFetchProgress> = null;

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceFailed> = null;

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceDisabled> = null;

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _notConnectedToInternet> = null;

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _cashplayServiceFailed> = null;

        $r0.<co.cashplay.android.client.Environment: boolean _activatingLocation> = 0;

        $r6 = new co.cashplay.android.client.Environment$2;

        specialinvoke $r6.<co.cashplay.android.client.Environment$2: void <init>(co.cashplay.android.client.Environment)>($r0);

        $r0.<co.cashplay.android.client.Environment: android.content.DialogInterface$OnCancelListener _onCancelListener> = $r6;

        $r0.<co.cashplay.android.client.Environment: boolean _access> = 0;

        $r0.<co.cashplay.android.client.Environment: android.content.Context _context> = $r1;

        $r0.<co.cashplay.android.client.Environment: int _server> = $i0;

        $r0.<co.cashplay.android.client.Environment: boolean _verbose> = $z0;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        $r7 = (android.location.LocationManager) $r2;

        $r0.<co.cashplay.android.client.Environment: android.location.LocationManager _locationManager> = $r7;

        $r1 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        $r8 = (android.app.Activity) $r1;

        $r9 = new co.cashplay.android.client.Environment$1;

        specialinvoke $r9.<co.cashplay.android.client.Environment$1: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r8.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r9);

        return;
    }

    public static java.lang.String CalculateContentMD5(byte[])
    {
        byte[] $r0;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2, $r3;
        int $i0, varReplacer3246, varReplacer3247;
        java.lang.String $r4, varReplacer3248;
        java.security.NoSuchAlgorithmException r5;

        nop;

        $r0 := @parameter0: byte[];

        $r2 = null;

     label1:
        varReplacer3248 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3248);

     label2:
        $r2 = $r3;

     label3:
        $i0 = lengthof $r0;

        varReplacer3247 = 0;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r0, varReplacer3247, $i0);

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        varReplacer3246 = 0;

        $r4 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r0, varReplacer3246);

        return $r4;

     label4:
        $r1 := @caughtexception;

        r5 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r5.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
    }

    public static java.lang.String CalculateHMAC(byte[], java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.security.SignatureException
    {
        byte[] $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r8, varReplacer3233, varReplacer3234, varReplacer3235, varReplacer3236, varReplacer3237, varReplacer3238, varReplacer3239, varReplacer3240, varReplacer3242, varReplacer3243, varReplacer3244, varReplacer3245;
        java.lang.Exception $r5;
        javax.crypto.spec.SecretKeySpec $r6;
        android.net.Uri $r7;
        java.lang.StringBuilder $r9;
        javax.crypto.Mac $r10;
        int varReplacer3241;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<android.net.Uri: java.lang.String getPath()>();

        $r8 = staticinvoke <co.cashplay.android.client.Environment: java.lang.String CalculateContentMD5(byte[])>($r0);

        varReplacer3233 = "\n";

        varReplacer3234 = "";

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer3233, varReplacer3234);

        varReplacer3243 = "\r";

        varReplacer3244 = "";

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer3243, varReplacer3244);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer3235 = ",";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3235);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer3236 = ",";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3236);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer3237 = ",";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3237);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        varReplacer3239 = "Canonical string: ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3239);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3245 = "CashPlayEnvironment";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer3245, $r3);

        $r6 = new javax.crypto.spec.SecretKeySpec;

     label1:
        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer3240 = "HmacSHA1";

        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3240);

        varReplacer3238 = "HmacSHA1";

        $r10 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3238);

        virtualinvoke $r10.<javax.crypto.Mac: void init(java.security.Key)>($r6);

        $r0 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r0 = virtualinvoke $r10.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0);

        varReplacer3241 = 0;

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r0, varReplacer3241);

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        varReplacer3242 = "";

        return varReplacer3242;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.util.Map GenerateHMACHeaders(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.security.SignatureException, java.io.IOException
    {
        java.lang.String $r0, $r1, $r2, $r3, varReplacer3479;
        java.util.Map $r4;
        byte[] $r5;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r5 = newarray (byte)[0];

        varReplacer3479 = "application/x-www-form-urlencoded";

        $r4 = staticinvoke <co.cashplay.android.client.Environment: java.util.Map GenerateHMACHeaders(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r5, $r0, $r1, varReplacer3479, $r3);

        return $r4;
    }

    public static java.util.Map GenerateHMACHeaders(byte[], java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.security.SignatureException
    {
        byte[] $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r10, $r11, varReplacer3222, varReplacer3223, varReplacer3224, varReplacer3225, varReplacer3226, varReplacer3227, varReplacer3228, varReplacer3229, varReplacer3230, varReplacer3231, varReplacer3232;
        java.text.SimpleDateFormat $r5;
        java.util.HashMap $r6;
        java.util.Locale $r7;
        java.util.Calendar $r8;
        java.util.Date $r9;
        java.lang.StringBuilder $r12;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r5 = new java.text.SimpleDateFormat;

        $r7 = <java.util.Locale: java.util.Locale US>;

        varReplacer3230 = "yyyy-MM-dd\'T\'HH:mm:ssZ";

        specialinvoke $r5.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(varReplacer3230, $r7);

        $r8 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r9 = virtualinvoke $r8.<java.util.Calendar: java.util.Date getTime()>();

        $r10 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r9);

        $r11 = staticinvoke <co.cashplay.android.client.Environment: java.lang.String CalculateContentMD5(byte[])>($r0);

        $r1 = staticinvoke <co.cashplay.android.client.Environment: java.lang.String CalculateHMAC(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, $r3, $r4, $r10);

        varReplacer3227 = "\n";

        varReplacer3228 = "";

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer3227, varReplacer3228);

        varReplacer3223 = "Date";

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3223, $r10);

        varReplacer3229 = "Content-Type";

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3229, $r3);

        varReplacer3224 = "\n";

        varReplacer3225 = "";

        $r3 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer3224, varReplacer3225);

        varReplacer3222 = "Content-MD5";

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3222, $r3);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer3231 = "APIAuth ";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3231);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer3226 = ":";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3226);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3232 = "Authorization";

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3232, $r1);

        return $r6;
    }

    private void LogD(java.lang.String, java.lang.String)
    {
        co.cashplay.android.client.Environment $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        android.content.Context $r3;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = $r0.<co.cashplay.android.client.Environment: boolean _verbose>;

        if $z0 == 0 goto label1;

        $r3 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        staticinvoke <co.cashplay.android.client.CpLog: void d(android.content.Context,java.lang.String,java.lang.String)>($r3, $r1, $r2);

     label1:
        return;
    }

    public static void SetHMACHeaders(org.apache.http.client.methods.HttpEntityEnclosingRequestBase, byte[], java.lang.String, java.lang.String, java.lang.String) throws java.security.SignatureException, java.io.IOException
    {
        org.apache.http.client.methods.HttpEntityEnclosingRequestBase $r0;
        byte[] $r1;
        java.lang.String $r2, $r3, $r4, $r6;
        java.net.URI $r5;
        java.util.Map $r7;

        nop;

        $r0 := @parameter0: org.apache.http.client.methods.HttpEntityEnclosingRequestBase;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 = virtualinvoke $r0.<org.apache.http.client.methods.HttpEntityEnclosingRequestBase: java.net.URI getURI()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String toString()>();

        $r7 = staticinvoke <co.cashplay.android.client.Environment: java.util.Map GenerateHMACHeaders(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, $r6);

        staticinvoke <co.cashplay.android.client.Environment: void SetHeaders(org.apache.http.client.methods.HttpRequestBase,java.util.Map)>($r0, $r7);

        return;
    }

    public static void SetHeaders(org.apache.http.client.methods.HttpRequestBase, java.util.Map)
    {
        org.apache.http.client.methods.HttpRequestBase $r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.String $r6, $r7;

        nop;

        $r0 := @parameter0: org.apache.http.client.methods.HttpRequestBase;

        $r1 := @parameter1: java.util.Map;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<org.apache.http.client.methods.HttpRequestBase: void setHeader(java.lang.String,java.lang.String)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    static void access$000(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void onReturn()>();

        return;
    }

    static void access$100(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void onRetryRoutes()>();

        return;
    }

    static void access$1000(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void showLocationFetchProgress()>();

        return;
    }

    static boolean access$1100(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;
        boolean $z0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        $z0 = specialinvoke $r0.<co.cashplay.android.client.Environment: boolean isConnectedToInternet()>();

        return $z0;
    }

    static void access$1200(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void showCashplaySeviceFailed()>();

        return;
    }

    static void access$1300(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void showNotConnectedToInternet()>();

        return;
    }

    static void access$1400(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideNotConnectedToInternet()>();

        return;
    }

    static void access$1500(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideCashplayServiceFailed()>();

        return;
    }

    static void access$1600(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void showLocationServiceDisabled()>();

        return;
    }

    static void access$1700(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideLocationServiceDisabled()>();

        return;
    }

    static void access$1800(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void showLocationSeviceFailed()>();

        return;
    }

    static void access$1900(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideLocationServiceFailed()>();

        return;
    }

    static void access$200(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void onContinue()>();

        return;
    }

    static boolean access$2000(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;
        boolean z0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        z0 = $r0.<co.cashplay.android.client.Environment: boolean _activatingLocation>;

        return z0;
    }

    static boolean access$2002(co.cashplay.android.client.Environment, boolean)
    {
        co.cashplay.android.client.Environment $r0;
        boolean $z0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        $z0 := @parameter1: boolean;

        $r0.<co.cashplay.android.client.Environment: boolean _activatingLocation> = $z0;

        return $z0;
    }

    static boolean access$2100(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;
        boolean $z0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        $z0 = specialinvoke $r0.<co.cashplay.android.client.Environment: boolean isLocationServicesEnabled()>();

        return $z0;
    }

    static co.cashplay.android.client.Environment$TimerState access$2200(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;
        co.cashplay.android.client.Environment$TimerState r1;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$TimerState _timerState>;

        return r1;
    }

    static int access$2300(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;
        int i0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        i0 = $r0.<co.cashplay.android.client.Environment: int _elapsedTime>;

        return i0;
    }

    static int access$2312(co.cashplay.android.client.Environment, int)
    {
        co.cashplay.android.client.Environment $r0;
        int $i0, $i1;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        $i0 := @parameter1: int;

        $i1 = $r0.<co.cashplay.android.client.Environment: int _elapsedTime>;

        $i0 = $i1 + $i0;

        $r0.<co.cashplay.android.client.Environment: int _elapsedTime> = $i0;

        return $i0;
    }

    static void access$2400(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void onLocationFetchTimedOut()>();

        return;
    }

    static void access$2500(co.cashplay.android.client.Environment, android.location.Location)
    {
        co.cashplay.android.client.Environment $r0;
        android.location.Location $r1;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        $r1 := @parameter1: android.location.Location;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void setLocation(android.location.Location)>($r1);

        return;
    }

    static void access$2600(co.cashplay.android.client.Environment, java.lang.String)
    {
        co.cashplay.android.client.Environment $r0;
        java.lang.String $r1;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void setRoutes(java.lang.String)>($r1);

        return;
    }

    static void access$300(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void onActivateLocation()>();

        return;
    }

    static void access$400(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void onRetryLocation()>();

        return;
    }

    static boolean access$500(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;
        boolean z0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        z0 = $r0.<co.cashplay.android.client.Environment: boolean _access>;

        return z0;
    }

    static co.cashplay.android.client.Environment$LocationState access$600(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;
        co.cashplay.android.client.Environment$LocationState r1;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationState _locationState>;

        return r1;
    }

    static co.cashplay.android.client.Environment$RoutesState access$700(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;
        co.cashplay.android.client.Environment$RoutesState r1;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$RoutesState _routesState>;

        return r1;
    }

    static void access$800(co.cashplay.android.client.Environment, java.lang.String, java.lang.String)
    {
        co.cashplay.android.client.Environment $r0;
        java.lang.String $r1, $r2;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    static void access$900(co.cashplay.android.client.Environment)
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @parameter0: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideAll()>();

        return;
    }

    private void cancelAccess()
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @this: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideAll()>();

        $r0.<co.cashplay.android.client.Environment: boolean _activatingLocation> = 0;

        $r0.<co.cashplay.android.client.Environment: boolean _access> = 0;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$IContinue _continueHandler> = null;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$IReturn _returnHandler> = null;

        return;
    }

    private void continueAccess()
    {
        co.cashplay.android.client.Environment $r0;
        co.cashplay.android.client.Environment$11 $r1;
        android.content.Context $r2;
        android.app.Activity $r3;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        $r3 = (android.app.Activity) $r2;

        $r1 = new co.cashplay.android.client.Environment$11;

        specialinvoke $r1.<co.cashplay.android.client.Environment$11: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r3.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r1);

        return;
    }

    private void hideAll()
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @this: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideLocationFetchProgress()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideNotConnectedToInternet()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideCashplayServiceFailed()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideLocationServiceFailed()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void hideLocationServiceDisabled()>();

        return;
    }

    private void hideCashplayServiceFailed()
    {
        co.cashplay.android.client.Environment $r0;
        android.app.AlertDialog $r1;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _cashplayServiceFailed>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _cashplayServiceFailed>;

        virtualinvoke $r1.<android.app.AlertDialog: void dismiss()>();

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _cashplayServiceFailed> = null;

        return;
    }

    private void hideLocationFetchProgress()
    {
        co.cashplay.android.client.Environment $r0;
        android.app.ProgressDialog $r1;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.ProgressDialog _locationFetchProgress>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.ProgressDialog _locationFetchProgress>;

        virtualinvoke $r1.<android.app.ProgressDialog: void dismiss()>();

        $r0.<co.cashplay.android.client.Environment: android.app.ProgressDialog _locationFetchProgress> = null;

        return;
    }

    private void hideLocationServiceDisabled()
    {
        co.cashplay.android.client.Environment $r0;
        android.app.AlertDialog $r1;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceDisabled>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceDisabled>;

        virtualinvoke $r1.<android.app.AlertDialog: void dismiss()>();

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceDisabled> = null;

        $r0.<co.cashplay.android.client.Environment: boolean _activatingLocation> = 0;

        return;
    }

    private void hideLocationServiceFailed()
    {
        co.cashplay.android.client.Environment $r0;
        android.app.AlertDialog $r1;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceFailed>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceFailed>;

        virtualinvoke $r1.<android.app.AlertDialog: void dismiss()>();

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceFailed> = null;

        return;
    }

    private void hideNotConnectedToInternet()
    {
        co.cashplay.android.client.Environment $r0;
        android.app.AlertDialog $r1;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _notConnectedToInternet>;

        if $r1 != null goto label1;

        return;

     label1:
        $r1 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _notConnectedToInternet>;

        virtualinvoke $r1.<android.app.AlertDialog: void dismiss()>();

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _notConnectedToInternet> = null;

        return;
    }

    private boolean isConnectedToInternet()
    {
        co.cashplay.android.client.Environment $r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.net.ConnectivityManager $r3;
        android.net.NetworkInfo $r4;
        boolean $z0;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r3 = (android.net.ConnectivityManager) $r2;

        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r4 == null goto label1;

        $z0 = virtualinvoke $r4.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isLocationServicesEnabled()
    {
        co.cashplay.android.client.Environment $r0;
        android.location.LocationManager $r1;
        java.util.List $r2;
        int $i0;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 = $r0.<co.cashplay.android.client.Environment: android.location.LocationManager _locationManager>;

        $r2 = virtualinvoke $r1.<android.location.LocationManager: java.util.List getProviders(boolean)>(1);

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>("passive");

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private void onActivateLocation()
    {
        co.cashplay.android.client.Environment $r0;
        android.content.Intent $r1;
        android.content.Context $r2;
        android.app.Activity $r3;
        co.cashplay.android.client.Environment$12 $r4;

        $r0 := @this: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Navigating to location settings");

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.settings.LOCATION_SOURCE_SETTINGS");

        $r2 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        virtualinvoke $r2.<android.content.Context: void startActivity(android.content.Intent)>($r1);

        $r0.<co.cashplay.android.client.Environment: boolean _activatingLocation> = 1;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        $r3 = (android.app.Activity) $r2;

        $r4 = new co.cashplay.android.client.Environment$12;

        specialinvoke $r4.<co.cashplay.android.client.Environment$12: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r3.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r4);

        return;
    }

    private void onContinue()
    {
        co.cashplay.android.client.Environment $r0;
        org.json.JSONObject $r1;
        boolean $z0;
        co.cashplay.android.client.Environment$IContinue $r2;
        android.location.Location $r3;

        $r0 := @this: co.cashplay.android.client.Environment;

        $z0 = $r0.<co.cashplay.android.client.Environment: boolean _access>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Continuing to Cashplay");

        $r2 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$IContinue _continueHandler>;

        if $r2 == null goto label2;

        $r2 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$IContinue _continueHandler>;

        $r3 = $r0.<co.cashplay.android.client.Environment: android.location.Location _location>;

        $r1 = $r0.<co.cashplay.android.client.Environment: org.json.JSONObject _routes>;

        interfaceinvoke $r2.<co.cashplay.android.client.Environment$IContinue: void OnContinue(android.location.Location,org.json.JSONObject)>($r3, $r1);

     label2:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void cancelAccess()>();

        return;
    }

    private void onLocationFetchTimedOut()
    {
        co.cashplay.android.client.Environment $r0;
        co.cashplay.android.client.Environment$LocationState $r1;

        $r0 := @this: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Location fetch timed out");

        $r1 = <co.cashplay.android.client.Environment$LocationState: co.cashplay.android.client.Environment$LocationState TimedOut>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationState _locationState> = $r1;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void continueAccess()>();

        return;
    }

    private void onRetryLocation()
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @this: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Retrying location");

        specialinvoke $r0.<co.cashplay.android.client.Environment: void startLocationUpdates()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void continueAccess()>();

        return;
    }

    private void onRetryRoutes()
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @this: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Retrying routes");

        specialinvoke $r0.<co.cashplay.android.client.Environment: void startRoutesUpdate()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void continueAccess()>();

        return;
    }

    private void onReturn()
    {
        co.cashplay.android.client.Environment $r0;
        boolean $z0;
        co.cashplay.android.client.Environment$IReturn $r1;
        co.cashplay.android.client.Environment$RoutesState $r2, $r3;

        $r0 := @this: co.cashplay.android.client.Environment;

        $z0 = $r0.<co.cashplay.android.client.Environment: boolean _access>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Returning to game");

        $r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$IReturn _returnHandler>;

        if $r1 == null goto label2;

        $r2 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$RoutesState _routesState>;

        $r3 = <co.cashplay.android.client.Environment$RoutesState: co.cashplay.android.client.Environment$RoutesState Failed>;

        if $r2 != $r3 goto label3;

        $r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$IReturn _returnHandler>;

        interfaceinvoke $r1.<co.cashplay.android.client.Environment$IReturn: void OnRoutesFailure()>();

     label2:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void cancelAccess()>();

        return;

     label3:
        $r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$IReturn _returnHandler>;

        interfaceinvoke $r1.<co.cashplay.android.client.Environment$IReturn: void OnCancel()>();

        goto label2;
    }

    private void setLocation(android.location.Location)
    {
        co.cashplay.android.client.Environment $r0;
        android.location.Location $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        co.cashplay.android.client.Environment$LocationState $r4;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 := @parameter0: android.location.Location;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Location retrieved from location service: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", $r3);

        $r0.<co.cashplay.android.client.Environment: android.location.Location _location> = $r1;

        $r4 = <co.cashplay.android.client.Environment$LocationState: co.cashplay.android.client.Environment$LocationState Retrieved>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationState _locationState> = $r4;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void stopLocationUpdates()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void stopTimer()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void continueAccess()>();

        return;
    }

    private void setLocationLookup(java.lang.String)
    {
        co.cashplay.android.client.Environment $r0;
        java.lang.String $r1, $r3;
        java.lang.StringBuilder $r2;
        boolean $z0;
        co.cashplay.android.client.Environment$LocationState $r4;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Location lookup received from Cashplay service: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", $r3);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("allowed");

        if $z0 == 0 goto label1;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void stopLocationUpdates()>();

        $r4 = <co.cashplay.android.client.Environment$LocationState: co.cashplay.android.client.Environment$LocationState NotRequired>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationState _locationState> = $r4;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("restricted");

        if $z0 == 0 goto label2;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void stopLocationUpdates()>();

        $r4 = <co.cashplay.android.client.Environment$LocationState: co.cashplay.android.client.Environment$LocationState Denied>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationState _locationState> = $r4;

     label2:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void continueAccess()>();

        return;
    }

    private void setRoutes(java.lang.String)
    {
        co.cashplay.android.client.Environment $r0;
        java.lang.String $r1, $r5;
        org.json.JSONException $r2;
        org.json.JSONObject $r3, $r6;
        java.lang.StringBuilder $r4;
        boolean $z0;
        co.cashplay.android.client.Environment$RoutesState $r7;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 := @parameter0: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Routes retrieved from Cashplay service: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", $r5);

        if $r1 == null goto label12;

        $r3 = new org.json.JSONObject;

     label01:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r3.<org.json.JSONObject: boolean has(java.lang.String)>("routes");

     label02:
        if $z0 == 0 goto label10;

     label03:
        $r6 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("routes");

     label04:
        $r0.<co.cashplay.android.client.Environment: org.json.JSONObject _routes> = $r6;

     label05:
        $r7 = <co.cashplay.android.client.Environment$RoutesState: co.cashplay.android.client.Environment$RoutesState Retrieved>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$RoutesState _routesState> = $r7;

     label06:
        $z0 = virtualinvoke $r3.<org.json.JSONObject: boolean has(java.lang.String)>("location");

     label07:
        if $z0 == 0 goto label09;

     label08:
        $r1 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("location");

        specialinvoke $r0.<co.cashplay.android.client.Environment: void setLocationLookup(java.lang.String)>($r1);

     label09:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void continueAccess()>();

        return;

     label10:
        $r0.<co.cashplay.android.client.Environment: org.json.JSONObject _routes> = $r3;

        goto label05;

     label11:
        $r2 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse routes:\n");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", $r1);

        $r0.<co.cashplay.android.client.Environment: org.json.JSONObject _routes> = null;

        $r7 = <co.cashplay.android.client.Environment$RoutesState: co.cashplay.android.client.Environment$RoutesState Failed>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$RoutesState _routesState> = $r7;

        goto label09;

     label12:
        $r0.<co.cashplay.android.client.Environment: org.json.JSONObject _routes> = null;

        $r7 = <co.cashplay.android.client.Environment$RoutesState: co.cashplay.android.client.Environment$RoutesState Failed>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$RoutesState _routesState> = $r7;

        goto label09;

        catch org.json.JSONException from label01 to label02 with label11;
        catch org.json.JSONException from label03 to label04 with label11;
        catch org.json.JSONException from label06 to label07 with label11;
        catch org.json.JSONException from label08 to label09 with label11;
    }

    private void showCashplaySeviceFailed()
    {
        co.cashplay.android.client.Environment $r0;
        android.app.AlertDialog$Builder $r1;
        android.app.AlertDialog $r2;
        android.content.Context $r3;
        co.cashplay.android.client.Environment$5 $r4;
        co.cashplay.android.client.Environment$6 $r5;
        android.content.DialogInterface$OnCancelListener $r6;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _cashplayServiceFailed>;

        if $r2 == null goto label1;

        return;

     label1:
        $r1 = new android.app.AlertDialog$Builder;

        $r3 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        specialinvoke $r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r3);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("The cashplay service is temporarily unavailable. Please try again later.");

        $r4 = new co.cashplay.android.client.Environment$5;

        specialinvoke $r4.<co.cashplay.android.client.Environment$5: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Return", $r4);

        $r5 = new co.cashplay.android.client.Environment$6;

        specialinvoke $r5.<co.cashplay.android.client.Environment$6: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Retry", $r5);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(1);

        $r6 = $r0.<co.cashplay.android.client.Environment: android.content.DialogInterface$OnCancelListener _onCancelListener>;

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r6);

        $r2 = virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _cashplayServiceFailed> = $r2;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _cashplayServiceFailed>;

        virtualinvoke $r2.<android.app.AlertDialog: void show()>();

        return;
    }

    private void showLocationFetchProgress()
    {
        co.cashplay.android.client.Environment $r0;
        android.content.DialogInterface$OnCancelListener $r1;
        android.app.ProgressDialog $r2;
        android.content.Context $r3;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.app.ProgressDialog _locationFetchProgress>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        $r1 = $r0.<co.cashplay.android.client.Environment: android.content.DialogInterface$OnCancelListener _onCancelListener>;

        $r2 = staticinvoke <android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface$OnCancelListener)>($r3, "", "Retrieving your location...", 1, 1, $r1);

        $r0.<co.cashplay.android.client.Environment: android.app.ProgressDialog _locationFetchProgress> = $r2;

        return;
    }

    private void showLocationServiceDisabled()
    {
        co.cashplay.android.client.Environment $r0;
        android.app.AlertDialog$Builder $r1;
        android.app.AlertDialog $r2;
        android.content.Context $r3;
        co.cashplay.android.client.Environment$7 $r4;
        co.cashplay.android.client.Environment$8 $r5;
        android.content.DialogInterface$OnCancelListener $r6;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceDisabled>;

        if $r2 == null goto label1;

        return;

     label1:
        $r1 = new android.app.AlertDialog$Builder;

        $r3 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        specialinvoke $r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r3);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("Location services are not active. Please be sure that location services are active on your phone to play for cash.");

        $r4 = new co.cashplay.android.client.Environment$7;

        specialinvoke $r4.<co.cashplay.android.client.Environment$7: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Skip", $r4);

        $r5 = new co.cashplay.android.client.Environment$8;

        specialinvoke $r5.<co.cashplay.android.client.Environment$8: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Activate", $r5);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(1);

        $r6 = $r0.<co.cashplay.android.client.Environment: android.content.DialogInterface$OnCancelListener _onCancelListener>;

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r6);

        $r2 = virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceDisabled> = $r2;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceDisabled>;

        virtualinvoke $r2.<android.app.AlertDialog: void show()>();

        return;
    }

    private void showLocationSeviceFailed()
    {
        co.cashplay.android.client.Environment $r0;
        android.app.AlertDialog$Builder $r1;
        android.app.AlertDialog $r2;
        android.content.Context $r3;
        co.cashplay.android.client.Environment$9 $r4;
        co.cashplay.android.client.Environment$10 $r5;
        android.content.DialogInterface$OnCancelListener $r6;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceFailed>;

        if $r2 == null goto label1;

        return;

     label1:
        $r1 = new android.app.AlertDialog$Builder;

        $r3 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        specialinvoke $r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r3);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("Your location cannot be determined. Please be sure that location services are active on your phone to play for cash.");

        $r4 = new co.cashplay.android.client.Environment$9;

        specialinvoke $r4.<co.cashplay.android.client.Environment$9: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Skip", $r4);

        $r5 = new co.cashplay.android.client.Environment$10;

        specialinvoke $r5.<co.cashplay.android.client.Environment$10: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Retry", $r5);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(1);

        $r6 = $r0.<co.cashplay.android.client.Environment: android.content.DialogInterface$OnCancelListener _onCancelListener>;

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r6);

        $r2 = virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceFailed> = $r2;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _locationServiceFailed>;

        virtualinvoke $r2.<android.app.AlertDialog: void show()>();

        return;
    }

    private void showNotConnectedToInternet()
    {
        co.cashplay.android.client.Environment $r0;
        android.app.AlertDialog$Builder $r1;
        android.app.AlertDialog $r2;
        android.content.Context $r3;
        co.cashplay.android.client.Environment$3 $r4;
        co.cashplay.android.client.Environment$4 $r5;
        android.content.DialogInterface$OnCancelListener $r6;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _notConnectedToInternet>;

        if $r2 == null goto label1;

        return;

     label1:
        $r1 = new android.app.AlertDialog$Builder;

        $r3 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        specialinvoke $r1.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>($r3);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>("You failed to connect to the cashplay network. Please check your internet connection and try again.");

        $r4 = new co.cashplay.android.client.Environment$3;

        specialinvoke $r4.<co.cashplay.android.client.Environment$3: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Return", $r4);

        $r5 = new co.cashplay.android.client.Environment$4;

        specialinvoke $r5.<co.cashplay.android.client.Environment$4: void <init>(co.cashplay.android.client.Environment)>($r0);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener)>("Retry", $r5);

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(1);

        $r6 = $r0.<co.cashplay.android.client.Environment: android.content.DialogInterface$OnCancelListener _onCancelListener>;

        virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>($r6);

        $r2 = virtualinvoke $r1.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _notConnectedToInternet> = $r2;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.app.AlertDialog _notConnectedToInternet>;

        virtualinvoke $r2.<android.app.AlertDialog: void show()>();

        return;
    }

    private void startLocationUpdates()
    {
        co.cashplay.android.client.Environment $r0;
        co.cashplay.android.client.Environment$LocationFetcher $r1;
        android.location.LocationManager $r2;
        java.util.List $r3;
        int $i0;
        co.cashplay.android.client.Environment$LocationState $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, $r9;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r2 = $r0.<co.cashplay.android.client.Environment: android.location.LocationManager _locationManager>;

        $r3 = virtualinvoke $r2.<android.location.LocationManager: java.util.List getProviders(boolean)>(1);

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>("passive");

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r4 = <co.cashplay.android.client.Environment$LocationState: co.cashplay.android.client.Environment$LocationState Disabled>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationState _locationState> = $r4;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "No active location providers");

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting location updates from: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", $r6);

        $r4 = <co.cashplay.android.client.Environment$LocationState: co.cashplay.android.client.Environment$LocationState Requested>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationState _locationState> = $r4;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void startTimer()>();

        $r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationFetcher _locationFetcher>;

        if $r1 == null goto label2;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Location listener is already running");

        return;

     label2:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Creating location fetcher");

        $r1 = new co.cashplay.android.client.Environment$LocationFetcher;

        specialinvoke $r1.<co.cashplay.android.client.Environment$LocationFetcher: void <init>(co.cashplay.android.client.Environment,co.cashplay.android.client.Environment)>($r0, $r0);

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationFetcher _locationFetcher> = $r1;

        $r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r8;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requesting location updates from ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", $r9);

        $r2 = $r0.<co.cashplay.android.client.Environment: android.location.LocationManager _locationManager>;

        $r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationFetcher _locationFetcher>;

        virtualinvoke $r2.<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>($r6, 2000L, 500.0F, $r1);

        goto label3;

     label4:
        return;
    }

    private void startRoutesUpdate()
    {
        co.cashplay.android.client.Environment $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2, $r3;
        co.cashplay.android.client.Environment$RoutesState $r4;
        android.content.Context $r5;
        android.app.Activity $r6;
        co.cashplay.android.client.Environment$14 $r7;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = $r0.<co.cashplay.android.client.Environment: int _server>;

        $r2 = staticinvoke <co.cashplay.android.client.WebUi: java.lang.String getHost(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/mobile/routes");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting routes update from: ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", $r3);

        $r4 = <co.cashplay.android.client.Environment$RoutesState: co.cashplay.android.client.Environment$RoutesState Requested>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$RoutesState _routesState> = $r4;

        $r5 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        $r6 = (android.app.Activity) $r5;

        $r7 = new co.cashplay.android.client.Environment$14;

        specialinvoke $r7.<co.cashplay.android.client.Environment$14: void <init>(co.cashplay.android.client.Environment,co.cashplay.android.client.Environment,java.lang.String)>($r0, $r0, $r2);

        virtualinvoke $r6.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r7);

        return;
    }

    private void startTimer()
    {
        co.cashplay.android.client.Environment $r0;
        android.os.Handler $r1;
        co.cashplay.android.client.Environment$TimerState $r2, $r3;
        android.content.Context $r4;
        android.os.Looper $r5;
        co.cashplay.android.client.Environment$13 $r6;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r0.<co.cashplay.android.client.Environment: int _elapsedTime> = 0;

        $r2 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$TimerState _timerState>;

        $r3 = <co.cashplay.android.client.Environment$TimerState: co.cashplay.android.client.Environment$TimerState Running>;

        if $r2 != $r3 goto label1;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Resetting timer");

        return;

     label1:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Starting timer");

        $r2 = <co.cashplay.android.client.Environment$TimerState: co.cashplay.android.client.Environment$TimerState Running>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$TimerState _timerState> = $r2;

        $r1 = new android.os.Handler;

        $r4 = $r0.<co.cashplay.android.client.Environment: android.content.Context _context>;

        $r4 = virtualinvoke $r4.<android.content.Context: android.content.Context getApplicationContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r5);

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Handler created");

        $r6 = new co.cashplay.android.client.Environment$13;

        specialinvoke $r6.<co.cashplay.android.client.Environment$13: void <init>(co.cashplay.android.client.Environment,android.os.Handler)>($r0, $r1);

        virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r6, 100L);

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Timer started");

        return;
    }

    private void stopLocationUpdates()
    {
        co.cashplay.android.client.Environment $r0;
        co.cashplay.android.client.Environment$LocationFetcher $r1;
        android.location.LocationManager $r2;

        $r0 := @this: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Stopping location updates");

        $r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationFetcher _locationFetcher>;

        if $r1 == null goto label1;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Removing location updates");

        $r2 = $r0.<co.cashplay.android.client.Environment: android.location.LocationManager _locationManager>;

        $r1 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationFetcher _locationFetcher>;

        virtualinvoke $r2.<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>($r1);

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$LocationFetcher _locationFetcher> = null;

     label1:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void stopTimer()>();

        return;
    }

    private void stopTimer()
    {
        co.cashplay.android.client.Environment $r0;
        co.cashplay.android.client.Environment$TimerState $r1;

        $r0 := @this: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Stopping timer");

        $r1 = <co.cashplay.android.client.Environment$TimerState: co.cashplay.android.client.Environment$TimerState None>;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$TimerState _timerState> = $r1;

        return;
    }

    public void access(co.cashplay.android.client.Environment$IContinue, co.cashplay.android.client.Environment$IReturn)
    {
        co.cashplay.android.client.Environment $r0;
        co.cashplay.android.client.Environment$IContinue $r1;
        co.cashplay.android.client.Environment$IReturn $r2;
        boolean $z0;
        co.cashplay.android.client.Environment$RoutesState $r3, $r4;

        $r0 := @this: co.cashplay.android.client.Environment;

        $r1 := @parameter0: co.cashplay.android.client.Environment$IContinue;

        $r2 := @parameter1: co.cashplay.android.client.Environment$IReturn;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Accessing from game");

        $r0.<co.cashplay.android.client.Environment: boolean _access> = 1;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$IContinue _continueHandler> = $r1;

        $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$IReturn _returnHandler> = $r2;

        $r3 = $r0.<co.cashplay.android.client.Environment: co.cashplay.android.client.Environment$RoutesState _routesState>;

        $r4 = <co.cashplay.android.client.Environment$RoutesState: co.cashplay.android.client.Environment$RoutesState Failed>;

        if $r3 != $r4 goto label1;

        $z0 = specialinvoke $r0.<co.cashplay.android.client.Environment: boolean isConnectedToInternet()>();

        if $z0 == 0 goto label1;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void onRetryRoutes()>();

        return;

     label1:
        specialinvoke $r0.<co.cashplay.android.client.Environment: void continueAccess()>();

        return;
    }

    public android.location.Location getLocation()
    {
        co.cashplay.android.client.Environment $r0;
        android.location.Location r1;

        $r0 := @this: co.cashplay.android.client.Environment;

        r1 = $r0.<co.cashplay.android.client.Environment: android.location.Location _location>;

        return r1;
    }

    public org.json.JSONObject getRoutes()
    {
        co.cashplay.android.client.Environment $r0;
        org.json.JSONObject r1;

        $r0 := @this: co.cashplay.android.client.Environment;

        r1 = $r0.<co.cashplay.android.client.Environment: org.json.JSONObject _routes>;

        return r1;
    }

    public void init()
    {
        co.cashplay.android.client.Environment $r0;

        $r0 := @this: co.cashplay.android.client.Environment;

        specialinvoke $r0.<co.cashplay.android.client.Environment: void LogD(java.lang.String,java.lang.String)>("CashPlayEnvironment", "Initializing from game");

        specialinvoke $r0.<co.cashplay.android.client.Environment: void startRoutesUpdate()>();

        specialinvoke $r0.<co.cashplay.android.client.Environment: void startLocationUpdates()>();

        return;
    }
}
