public final class org.xutils.common.util.MD5 extends java.lang.Object
{
    private static final char[] a;

    static void <clinit>()
    {
        char[] $r0;

        nop;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <org.xutils.common.util.MD5: char[] a> = $r0;

        return;
    }

    private void <init>()
    {
        org.xutils.common.util.MD5 $r0;

        $r0 := @this: org.xutils.common.util.MD5;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String md5(java.io.File)
    {
        java.io.File $r0;
        java.lang.RuntimeException $r1;
        java.nio.channels.FileChannel $r2, $r5;
        java.security.MessageDigest $r3;
        java.io.FileInputStream $r4;
        java.nio.channels.FileChannel$MapMode $r6;
        long $l0;
        java.nio.MappedByteBuffer $r7;
        byte[] $r8;
        java.lang.String $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13;

        $r0 := @parameter0: java.io.File;

        $r2 = null;

     label01:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label02:
        $r4 = new java.io.FileInputStream;

     label03:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label04:
        $r5 = virtualinvoke $r4.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

     label05:
        $r6 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>;

     label06:
        $l0 = virtualinvoke $r0.<java.io.File: long length()>();

        $r7 = virtualinvoke $r5.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r6, 0L, $l0);

        virtualinvoke $r3.<java.security.MessageDigest: void update(java.nio.ByteBuffer)>($r7);

        $r8 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label07:
        staticinvoke <org.xutils.common.util.IOUtil: void closeQuietly(java.io.Closeable)>($r4);

        staticinvoke <org.xutils.common.util.IOUtil: void closeQuietly(java.io.Closeable)>($r5);

        $r9 = staticinvoke <org.xutils.common.util.MD5: java.lang.String toHexString(byte[])>($r8);

        return $r9;

     label08:
        $r10 := @caughtexception;

        $r4 = null;

     label09:
        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r10);

        throw $r1;

     label10:
        $r11 := @caughtexception;

     label11:
        staticinvoke <org.xutils.common.util.IOUtil: void closeQuietly(java.io.Closeable)>($r4);

        staticinvoke <org.xutils.common.util.IOUtil: void closeQuietly(java.io.Closeable)>($r2);

        throw $r11;

     label12:
        $r11 := @caughtexception;

        $r4 = null;

        goto label11;

     label13:
        $r11 := @caughtexception;

        goto label11;

     label14:
        $r12 := @caughtexception;

        $r2 = $r5;

        $r11 = $r12;

        goto label11;

     label15:
        $r10 := @caughtexception;

        goto label09;

     label16:
        $r13 := @caughtexception;

        $r10 = $r13;

        $r2 = $r5;

        goto label09;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label08;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label08;
        catch java.lang.Throwable from label01 to label04 with label12;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label15;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label16;
        catch java.lang.Throwable from label05 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer1900, varReplacer1901;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Throwable $r3, $r5;
        java.lang.RuntimeException $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer1901 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1901);

        varReplacer1900 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1900);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

     label2:
        $r0 = staticinvoke <org.xutils.common.util.MD5: java.lang.String toHexString(byte[])>($r2);

        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        $r5 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static java.lang.String toHexString(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1;
        java.lang.String $r2, varReplacer1917;
        byte $b2, $b3;
        char[] $r3;
        char $c4;

        nop;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        varReplacer1917 = "";

        return varReplacer1917;

     label1:
        $r1 = new java.lang.StringBuilder;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        $r3 = <org.xutils.common.util.MD5: char[] a>;

        $b3 = $b2 >> 4;

        $b3 = $b3 & 15;

        $c4 = $r3[$b3];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r3 = <org.xutils.common.util.MD5: char[] a>;

        $b2 = $b2 & 15;

        $c4 = $r3[$b2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
