public class com.parse.codec.digest.DigestUtils extends java.lang.Object
{
    private static final int STREAM_BUFFER_LENGTH;

    public void <init>()
    {
        com.parse.codec.digest.DigestUtils $r0;

        $r0 := @this: com.parse.codec.digest.DigestUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static byte[] digest(java.security.MessageDigest, java.io.InputStream) throws java.io.IOException
    {
        java.security.MessageDigest $r0;
        java.io.InputStream $r1;
        byte[] $r2;
        int $i0;

        $r0 := @parameter0: java.security.MessageDigest;

        $r1 := @parameter1: java.io.InputStream;

        $r2 = newarray (byte)[1024];

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, 1024);

     label1:
        if $i0 > -1 goto label2;

        $r2 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>();

        return $r2;

     label2:
        virtualinvoke $r0.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i0);

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, 1024);

        goto label1;
    }

    private static byte[] getBytesUtf8(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.binary.StringUtils: byte[] getBytesUtf8(java.lang.String)>($r0);

        return $r1;
    }

    static java.security.MessageDigest getDigest(java.lang.String)
    {
        java.lang.String $r0, varReplacer839;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        java.lang.RuntimeException r3;
        java.security.NoSuchAlgorithmException r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer839 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer839);

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        r3 = new java.lang.RuntimeException;

        r4 = (java.security.NoSuchAlgorithmException) $r1;

        $r0 = virtualinvoke r4.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        specialinvoke r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r0);

        throw r3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private static java.security.MessageDigest getMd5Digest()
    {
        java.security.MessageDigest $r0;
        java.lang.String varReplacer832;

        nop;

        varReplacer832 = "MD5";

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>(varReplacer832);

        return $r0;
    }

    private static java.security.MessageDigest getSha256Digest()
    {
        java.security.MessageDigest $r0;

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>("SHA-256");

        return $r0;
    }

    private static java.security.MessageDigest getSha384Digest()
    {
        java.security.MessageDigest $r0;

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>("SHA-384");

        return $r0;
    }

    private static java.security.MessageDigest getSha512Digest()
    {
        java.security.MessageDigest $r0;

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>("SHA-512");

        return $r0;
    }

    private static java.security.MessageDigest getShaDigest()
    {
        java.security.MessageDigest $r0;

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>("SHA");

        return $r0;
    }

    public static byte[] md5(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.security.MessageDigest $r1;
        byte[] $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>();

        $r2 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>($r1, $r0);

        return $r2;
    }

    public static byte[] md5(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] getBytesUtf8(java.lang.String)>($r0);

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] md5(byte[])>($r1);

        return $r1;
    }

    public static byte[] md5(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r1;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>();

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

        return $r0;
    }

    public static java.lang.String md5Hex(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] md5(java.io.InputStream)>($r0);

        $r2 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r2;
    }

    public static java.lang.String md5Hex(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] md5(java.lang.String)>($r0);

        $r0 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String md5Hex(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] md5(byte[])>($r0);

        $r1 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r0);

        return $r1;
    }

    public static byte[] sha(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.security.MessageDigest $r1;
        byte[] $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getShaDigest()>();

        $r2 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>($r1, $r0);

        return $r2;
    }

    public static byte[] sha(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] getBytesUtf8(java.lang.String)>($r0);

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha(byte[])>($r1);

        return $r1;
    }

    public static byte[] sha(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getShaDigest()>();

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

        return $r0;
    }

    public static byte[] sha256(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.security.MessageDigest $r1;
        byte[] $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getSha256Digest()>();

        $r2 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>($r1, $r0);

        return $r2;
    }

    public static byte[] sha256(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] getBytesUtf8(java.lang.String)>($r0);

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha256(byte[])>($r1);

        return $r1;
    }

    public static byte[] sha256(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getSha256Digest()>();

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

        return $r0;
    }

    public static java.lang.String sha256Hex(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha256(java.io.InputStream)>($r0);

        $r2 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r2;
    }

    public static java.lang.String sha256Hex(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha256(java.lang.String)>($r0);

        $r0 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String sha256Hex(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha256(byte[])>($r0);

        $r1 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r0);

        return $r1;
    }

    public static byte[] sha384(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.security.MessageDigest $r1;
        byte[] $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getSha384Digest()>();

        $r2 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>($r1, $r0);

        return $r2;
    }

    public static byte[] sha384(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] getBytesUtf8(java.lang.String)>($r0);

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha384(byte[])>($r1);

        return $r1;
    }

    public static byte[] sha384(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getSha384Digest()>();

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

        return $r0;
    }

    public static java.lang.String sha384Hex(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha384(java.io.InputStream)>($r0);

        $r2 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r2;
    }

    public static java.lang.String sha384Hex(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha384(java.lang.String)>($r0);

        $r0 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String sha384Hex(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha384(byte[])>($r0);

        $r1 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r0);

        return $r1;
    }

    public static byte[] sha512(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.security.MessageDigest $r1;
        byte[] $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getSha512Digest()>();

        $r2 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>($r1, $r0);

        return $r2;
    }

    public static byte[] sha512(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] getBytesUtf8(java.lang.String)>($r0);

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha512(byte[])>($r1);

        return $r1;
    }

    public static byte[] sha512(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: java.security.MessageDigest getSha512Digest()>();

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

        return $r0;
    }

    public static java.lang.String sha512Hex(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha512(java.io.InputStream)>($r0);

        $r2 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r2;
    }

    public static java.lang.String sha512Hex(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha512(java.lang.String)>($r0);

        $r0 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String sha512Hex(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha512(byte[])>($r0);

        $r1 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r0);

        return $r1;
    }

    public static java.lang.String shaHex(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha(java.io.InputStream)>($r0);

        $r2 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r2;
    }

    public static java.lang.String shaHex(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha(java.lang.String)>($r0);

        $r0 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String shaHex(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $r0 = staticinvoke <com.parse.codec.digest.DigestUtils: byte[] sha(byte[])>($r0);

        $r1 = staticinvoke <com.parse.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r0);

        return $r1;
    }
}
