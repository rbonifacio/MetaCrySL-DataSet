class com.nielsen.app.nuid.a extends java.lang.Object
{
    public static final int ENCODING_SCHEME_Base16Text;
    public static final int ENCODING_SCHEME_Base64Text;
    private static java.security.KeyStore c;
    private static java.lang.String d;
    private static java.lang.String e;
    private static android.content.SharedPreferences f;
    private static final java.lang.String g;
    private static final java.lang.String h;
    private static final java.lang.String j;
    private static final java.lang.String k;
    private android.content.Context a;
    private byte[] b;
    private java.lang.String i;
    private javax.crypto.Cipher l;
    private javax.crypto.SecretKey m;
    private javax.crypto.spec.IvParameterSpec n;

    static void <clinit>()
    {
        java.lang.String varReplacer2050, varReplacer2051;
        null_type varReplacer2052, varReplacer2053;

        nop;

        varReplacer2053 = null;

        <com.nielsen.app.nuid.a: java.security.KeyStore c> = varReplacer2053;

        varReplacer2050 = "cryptoAliasKey";

        <com.nielsen.app.nuid.a: java.lang.String d> = varReplacer2050;

        varReplacer2051 = "initialVectorAlias";

        <com.nielsen.app.nuid.a: java.lang.String e> = varReplacer2051;

        varReplacer2052 = null;

        <com.nielsen.app.nuid.a: android.content.SharedPreferences f> = varReplacer2052;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.nielsen.app.nuid.a $r0;
        android.content.Context $r1;
        null_type varReplacer2056, varReplacer2057, varReplacer2058, varReplacer2059, varReplacer2060, varReplacer2061;

        nop;

        $r0 := @this: com.nielsen.app.nuid.a;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer2060 = null;

        $r0.<com.nielsen.app.nuid.a: android.content.Context a> = varReplacer2060;

        varReplacer2058 = null;

        $r0.<com.nielsen.app.nuid.a: byte[] b> = varReplacer2058;

        varReplacer2057 = null;

        $r0.<com.nielsen.app.nuid.a: java.lang.String i> = varReplacer2057;

        varReplacer2061 = null;

        $r0.<com.nielsen.app.nuid.a: javax.crypto.Cipher l> = varReplacer2061;

        varReplacer2059 = null;

        $r0.<com.nielsen.app.nuid.a: javax.crypto.SecretKey m> = varReplacer2059;

        varReplacer2056 = null;

        $r0.<com.nielsen.app.nuid.a: javax.crypto.spec.IvParameterSpec n> = varReplacer2056;

        $r0.<com.nielsen.app.nuid.a: android.content.Context a> = $r1;

        return;
    }

    private boolean a()
    {
        com.nielsen.app.nuid.a $r0;
        boolean $z0, $z1;
        javax.crypto.Cipher $r1;
        javax.crypto.SecretKey $r2;
        javax.crypto.spec.IvParameterSpec $r3;
        android.content.Context $r4;
        java.lang.String $r5, $r16, varReplacer2018, varReplacer2019, varReplacer2020, varReplacer2022, varReplacer2024, varReplacer2025, varReplacer2026, varReplacer2027, varReplacer2030, varReplacer2031, varReplacer2032, varReplacer2033, varReplacer2034, varReplacer2036, varReplacer2037, varReplacer2038, varReplacer2039, varReplacer2040, varReplacer2041, varReplacer2042, varReplacer2043, varReplacer2046, varReplacer2048;
        java.security.KeyStore $r6;
        android.content.SharedPreferences $r7;
        java.io.File $r8;
        java.lang.StringBuilder $r9;
        javax.crypto.KeyGenerator $r10;
        java.security.SecureRandom $r11;
        byte[] $r12;
        javax.crypto.spec.SecretKeySpec $r13;
        int $i0, varReplacer2021, varReplacer2028, varReplacer2029, varReplacer2035, varReplacer2044, varReplacer2047;
        android.content.SharedPreferences$Editor $r14;
        char[] $r15;
        java.io.FileOutputStream $r17;
        java.io.FileInputStream $r18;
        java.security.Key $r19;
        java.lang.Throwable $r20, $r21, $r22;
        java.lang.Exception $r23;
        null_type varReplacer2023, varReplacer2045, varReplacer2049;

        nop;

        $r0 := @this: com.nielsen.app.nuid.a;

        $z0 = 0;

        $r1 = $r0.<com.nielsen.app.nuid.a: javax.crypto.Cipher l>;

        if $r1 == null goto label01;

        $r2 = $r0.<com.nielsen.app.nuid.a: javax.crypto.SecretKey m>;

        if $r2 == null goto label01;

        $r3 = $r0.<com.nielsen.app.nuid.a: javax.crypto.spec.IvParameterSpec n>;

        if $r3 == null goto label01;

        varReplacer2028 = 1;

        return varReplacer2028;

     label01:
        $r4 = $r0.<com.nielsen.app.nuid.a: android.content.Context a>;

     label02:
        if $r4 == null goto label79;

     label03:
        $r5 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5);

     label04:
        <com.nielsen.app.nuid.a: java.security.KeyStore c> = $r6;

     label05:
        $r4 = $r0.<com.nielsen.app.nuid.a: android.content.Context a>;

     label06:
        varReplacer2046 = "AppCryptoPrefs";

        varReplacer2047 = 0;

        $r7 = virtualinvoke $r4.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer2046, varReplacer2047);

     label07:
        <com.nielsen.app.nuid.a: android.content.SharedPreferences f> = $r7;

        $r6 = <com.nielsen.app.nuid.a: java.security.KeyStore c>;

        if $r6 == null goto label80;

        $r7 = <com.nielsen.app.nuid.a: android.content.SharedPreferences f>;

        if $r7 == null goto label80;

     label08:
        $r4 = $r0.<com.nielsen.app.nuid.a: android.content.Context a>;

     label09:
        $r8 = virtualinvoke $r4.<android.content.Context: java.io.File getFilesDir()>();

        $r5 = virtualinvoke $r8.<java.io.File: java.lang.String getPath()>();

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String toString()>();

     label10:
        $r8 = new java.io.File;

        $r9 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label12:
        $r5 = <java.io.File: java.lang.String separator>;

     label13:
        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer2022 = "cryptokey.keystore";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2022);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r5);

        $z1 = virtualinvoke $r8.<java.io.File: boolean exists()>();

     label14:
        if $z1 != 0 goto label55;

     label15:
        varReplacer2034 = "AES";

        $r10 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2034);

        varReplacer2043 = "SHA1PRNG";

        $r11 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2043);

        varReplacer2029 = 256;

        virtualinvoke $r10.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer2029, $r11);

        $r2 = virtualinvoke $r10.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label16:
        $r0.<com.nielsen.app.nuid.a: byte[] b> = $r12;

        $r12 = newarray (byte)[16];

     label17:
        virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12);

     label18:
        $r3 = new javax.crypto.spec.IvParameterSpec;

     label19:
        specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12);

     label20:
        $r0.<com.nielsen.app.nuid.a: javax.crypto.spec.IvParameterSpec n> = $r3;

     label21:
        $r13 = new javax.crypto.spec.SecretKeySpec;

     label22:
        $i0 = lengthof $r12;

     label23:
        varReplacer2035 = 0;

        varReplacer2036 = "AES";

        specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2035, $i0, varReplacer2036);

     label24:
        $r7 = <com.nielsen.app.nuid.a: android.content.SharedPreferences f>;

     label25:
        $r14 = interfaceinvoke $r7.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

     label26:
        $r12 = newarray (byte)[16];

     label27:
        virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12);

        varReplacer2044 = 0;

        $r5 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r12, varReplacer2044);

     label28:
        $r0.<com.nielsen.app.nuid.a: java.lang.String i> = $r5;

        $r5 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label29:
        varReplacer2031 = "[^A-Za-z]+";

        varReplacer2032 = "";

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(varReplacer2031, varReplacer2032);

     label30:
        $r0.<com.nielsen.app.nuid.a: java.lang.String i> = $r5;

        $r5 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label31:
        varReplacer2048 = "KeyStorePw";

        interfaceinvoke $r14.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer2048, $r5);

        interfaceinvoke $r14.<android.content.SharedPreferences$Editor: boolean commit()>();

     label32:
        $r6 = <com.nielsen.app.nuid.a: java.security.KeyStore c>;

     label33:
        $r5 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label34:
        $r15 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        varReplacer2023 = null;

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer2023, $r15);

     label35:
        $r6 = <com.nielsen.app.nuid.a: java.security.KeyStore c>;

        $r5 = <com.nielsen.app.nuid.a: java.lang.String d>;

     label36:
        $r16 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label37:
        $r15 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        varReplacer2045 = null;

        virtualinvoke $r6.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>($r5, $r2, $r15, varReplacer2045);

     label38:
        $r6 = <com.nielsen.app.nuid.a: java.security.KeyStore c>;

        $r5 = <com.nielsen.app.nuid.a: java.lang.String e>;

     label39:
        $r16 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label40:
        $r15 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        varReplacer2049 = null;

        virtualinvoke $r6.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>($r5, $r13, $r15, varReplacer2049);

     label41:
        $r4 = $r0.<com.nielsen.app.nuid.a: android.content.Context a>;

     label42:
        varReplacer2020 = "cryptokey.keystore";

        varReplacer2021 = 0;

        $r17 = virtualinvoke $r4.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>(varReplacer2020, varReplacer2021);

     label43:
        $r6 = <com.nielsen.app.nuid.a: java.security.KeyStore c>;

     label44:
        $r5 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label45:
        $r15 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r6.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r17, $r15);

        virtualinvoke $r17.<java.io.FileOutputStream: void close()>();

     label46:
        $r13 = new javax.crypto.spec.SecretKeySpec;

     label47:
        $r12 = $r0.<com.nielsen.app.nuid.a: byte[] b>;

     label48:
        varReplacer2033 = "AES";

        specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2033);

     label49:
        $r0.<com.nielsen.app.nuid.a: javax.crypto.SecretKey m> = $r13;

     label50:
        varReplacer2030 = "AES/CBC/PKCS5Padding";

        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2030);

     label51:
        $r0.<com.nielsen.app.nuid.a: javax.crypto.Cipher l> = $r1;

     label52:
        $z1 = 1;

     label53:
        $z0 = $z1;

     label54:
        return $z0;

     label55:
        $r7 = <com.nielsen.app.nuid.a: android.content.SharedPreferences f>;

     label56:
        $r5 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label57:
        varReplacer2018 = "KeyStorePw";

        $r5 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer2018, $r5);

     label58:
        $r0.<com.nielsen.app.nuid.a: java.lang.String i> = $r5;

        $r4 = $r0.<com.nielsen.app.nuid.a: android.content.Context a>;

     label59:
        varReplacer2019 = "cryptokey.keystore";

        $r18 = virtualinvoke $r4.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>(varReplacer2019);

     label60:
        $r6 = <com.nielsen.app.nuid.a: java.security.KeyStore c>;

     label61:
        $r5 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label62:
        $r15 = virtualinvoke $r5.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r18, $r15);

     label63:
        $r6 = <com.nielsen.app.nuid.a: java.security.KeyStore c>;

        $r5 = <com.nielsen.app.nuid.a: java.lang.String d>;

     label64:
        $r16 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label65:
        $r15 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15);

     label66:
        $r2 = (javax.crypto.SecretKey) $r19;

     label67:
        $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label68:
        $r0.<com.nielsen.app.nuid.a: byte[] b> = $r12;

     label69:
        $r6 = <com.nielsen.app.nuid.a: java.security.KeyStore c>;

        $r5 = <com.nielsen.app.nuid.a: java.lang.String e>;

     label70:
        $r16 = $r0.<com.nielsen.app.nuid.a: java.lang.String i>;

     label71:
        $r15 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15);

     label72:
        $r2 = (javax.crypto.SecretKey) $r19;

     label73:
        $r3 = new javax.crypto.spec.IvParameterSpec;

     label74:
        $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

        specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12);

     label75:
        $r0.<com.nielsen.app.nuid.a: javax.crypto.spec.IvParameterSpec n> = $r3;

     label76:
        virtualinvoke $r18.<java.io.FileInputStream: void close()>();

     label77:
        goto label46;

     label78:
        $r20 := @caughtexception;

        varReplacer2026 = "AppNuid";

        varReplacer2027 = "UTF-8 encoding for initial vector array is not supported";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2026, varReplacer2027, $r20);

        goto label54;

     label79:
        varReplacer2037 = "AppNuid";

        varReplacer2038 = "App Context is NULL. Unable to retrieve absolute directory path and access preferences !";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2037, varReplacer2038);

     label80:
        $z1 = 0;

        goto label53;

     label81:
        $r21 := @caughtexception;

        varReplacer2039 = "AppNuid";

        varReplacer2040 = "Encryption algorithm support does not exist";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2039, varReplacer2040, $r21);

        goto label54;

     label82:
        $r22 := @caughtexception;

        varReplacer2024 = "AppNuid";

        varReplacer2025 = "Padding scheme supported does not exist";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2024, varReplacer2025, $r22);

        goto label54;

     label83:
        $r23 := @caughtexception;

        varReplacer2041 = "AppNuid";

        varReplacer2042 = "Failed setting up encrypt/decrypt paramerers";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2041, varReplacer2042, $r23);

        goto label54;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label78;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label78;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label78;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label78;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label78;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label78;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label78;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label78;
        catch java.io.UnsupportedEncodingException from label23 to label24 with label78;
        catch java.io.UnsupportedEncodingException from label25 to label26 with label78;
        catch java.io.UnsupportedEncodingException from label27 to label28 with label78;
        catch java.io.UnsupportedEncodingException from label29 to label30 with label78;
        catch java.io.UnsupportedEncodingException from label31 to label32 with label78;
        catch java.io.UnsupportedEncodingException from label34 to label35 with label78;
        catch java.io.UnsupportedEncodingException from label37 to label38 with label78;
        catch java.io.UnsupportedEncodingException from label40 to label41 with label78;
        catch java.io.UnsupportedEncodingException from label42 to label43 with label78;
        catch java.io.UnsupportedEncodingException from label45 to label46 with label78;
        catch java.io.UnsupportedEncodingException from label48 to label49 with label78;
        catch java.io.UnsupportedEncodingException from label50 to label51 with label78;
        catch java.io.UnsupportedEncodingException from label57 to label58 with label78;
        catch java.io.UnsupportedEncodingException from label59 to label60 with label78;
        catch java.io.UnsupportedEncodingException from label62 to label63 with label78;
        catch java.io.UnsupportedEncodingException from label65 to label66 with label78;
        catch java.io.UnsupportedEncodingException from label67 to label68 with label78;
        catch java.io.UnsupportedEncodingException from label71 to label72 with label78;
        catch java.io.UnsupportedEncodingException from label74 to label75 with label78;
        catch java.io.UnsupportedEncodingException from label76 to label77 with label78;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label81;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label81;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label81;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label81;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label81;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label81;
        catch java.security.NoSuchAlgorithmException from label17 to label18 with label81;
        catch java.security.NoSuchAlgorithmException from label19 to label20 with label81;
        catch java.security.NoSuchAlgorithmException from label23 to label24 with label81;
        catch java.security.NoSuchAlgorithmException from label25 to label26 with label81;
        catch java.security.NoSuchAlgorithmException from label27 to label28 with label81;
        catch java.security.NoSuchAlgorithmException from label29 to label30 with label81;
        catch java.security.NoSuchAlgorithmException from label31 to label32 with label81;
        catch java.security.NoSuchAlgorithmException from label34 to label35 with label81;
        catch java.security.NoSuchAlgorithmException from label37 to label38 with label81;
        catch java.security.NoSuchAlgorithmException from label40 to label41 with label81;
        catch java.security.NoSuchAlgorithmException from label42 to label43 with label81;
        catch java.security.NoSuchAlgorithmException from label45 to label46 with label81;
        catch java.security.NoSuchAlgorithmException from label48 to label49 with label81;
        catch java.security.NoSuchAlgorithmException from label50 to label51 with label81;
        catch java.security.NoSuchAlgorithmException from label57 to label58 with label81;
        catch java.security.NoSuchAlgorithmException from label59 to label60 with label81;
        catch java.security.NoSuchAlgorithmException from label62 to label63 with label81;
        catch java.security.NoSuchAlgorithmException from label65 to label66 with label81;
        catch java.security.NoSuchAlgorithmException from label67 to label68 with label81;
        catch java.security.NoSuchAlgorithmException from label71 to label72 with label81;
        catch java.security.NoSuchAlgorithmException from label74 to label75 with label81;
        catch java.security.NoSuchAlgorithmException from label76 to label77 with label81;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label82;
        catch javax.crypto.NoSuchPaddingException from label06 to label07 with label82;
        catch javax.crypto.NoSuchPaddingException from label09 to label10 with label82;
        catch javax.crypto.NoSuchPaddingException from label11 to label12 with label82;
        catch javax.crypto.NoSuchPaddingException from label13 to label14 with label82;
        catch javax.crypto.NoSuchPaddingException from label15 to label16 with label82;
        catch javax.crypto.NoSuchPaddingException from label17 to label18 with label82;
        catch javax.crypto.NoSuchPaddingException from label19 to label20 with label82;
        catch javax.crypto.NoSuchPaddingException from label23 to label24 with label82;
        catch javax.crypto.NoSuchPaddingException from label25 to label26 with label82;
        catch javax.crypto.NoSuchPaddingException from label27 to label28 with label82;
        catch javax.crypto.NoSuchPaddingException from label29 to label30 with label82;
        catch javax.crypto.NoSuchPaddingException from label31 to label32 with label82;
        catch javax.crypto.NoSuchPaddingException from label34 to label35 with label82;
        catch javax.crypto.NoSuchPaddingException from label37 to label38 with label82;
        catch javax.crypto.NoSuchPaddingException from label40 to label41 with label82;
        catch javax.crypto.NoSuchPaddingException from label42 to label43 with label82;
        catch javax.crypto.NoSuchPaddingException from label45 to label46 with label82;
        catch javax.crypto.NoSuchPaddingException from label48 to label49 with label82;
        catch javax.crypto.NoSuchPaddingException from label50 to label51 with label82;
        catch javax.crypto.NoSuchPaddingException from label57 to label58 with label82;
        catch javax.crypto.NoSuchPaddingException from label59 to label60 with label82;
        catch javax.crypto.NoSuchPaddingException from label62 to label63 with label82;
        catch javax.crypto.NoSuchPaddingException from label65 to label66 with label82;
        catch javax.crypto.NoSuchPaddingException from label67 to label68 with label82;
        catch javax.crypto.NoSuchPaddingException from label71 to label72 with label82;
        catch javax.crypto.NoSuchPaddingException from label74 to label75 with label82;
        catch javax.crypto.NoSuchPaddingException from label76 to label77 with label82;
        catch java.lang.Exception from label01 to label02 with label83;
        catch java.lang.Exception from label03 to label04 with label83;
        catch java.lang.Exception from label05 to label07 with label83;
        catch java.lang.Exception from label08 to label10 with label83;
        catch java.lang.Exception from label11 to label12 with label83;
        catch java.lang.Exception from label13 to label14 with label83;
        catch java.lang.Exception from label15 to label18 with label83;
        catch java.lang.Exception from label19 to label21 with label83;
        catch java.lang.Exception from label22 to label24 with label83;
        catch java.lang.Exception from label25 to label32 with label83;
        catch java.lang.Exception from label33 to label35 with label83;
        catch java.lang.Exception from label36 to label38 with label83;
        catch java.lang.Exception from label39 to label43 with label83;
        catch java.lang.Exception from label44 to label46 with label83;
        catch java.lang.Exception from label47 to label52 with label83;
        catch java.lang.Exception from label56 to label60 with label83;
        catch java.lang.Exception from label61 to label63 with label83;
        catch java.lang.Exception from label64 to label69 with label83;
        catch java.lang.Exception from label70 to label73 with label83;
        catch java.lang.Exception from label74 to label77 with label83;
        catch java.io.UnsupportedEncodingException from label79 to label80 with label78;
        catch java.security.NoSuchAlgorithmException from label79 to label80 with label81;
        catch javax.crypto.NoSuchPaddingException from label79 to label80 with label82;
        catch java.lang.Exception from label79 to label80 with label83;
    }

    private byte[] a(byte[])
    {
        com.nielsen.app.nuid.a $r0;
        byte[] $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        boolean $z0;
        javax.crypto.Cipher $r3;
        javax.crypto.SecretKey $r4;
        java.lang.Throwable $r5, $r6, $r7, $r8;
        java.lang.Exception $r9;
        null_type varReplacer2002, varReplacer2003, varReplacer2004, varReplacer2005, varReplacer2007;
        int varReplacer2006;
        java.lang.String varReplacer2008, varReplacer2009, varReplacer2010, varReplacer2011, varReplacer2012, varReplacer2013, varReplacer2014, varReplacer2015, varReplacer2016, varReplacer2017;

        nop;

        $r0 := @this: com.nielsen.app.nuid.a;

        $r1 := @parameter0: byte[];

     label01:
        $z0 = specialinvoke $r0.<com.nielsen.app.nuid.a: boolean a()>();

     label02:
        if $z0 == 0 goto label13;

     label03:
        $r3 = $r0.<com.nielsen.app.nuid.a: javax.crypto.Cipher l>;

        $r4 = $r0.<com.nielsen.app.nuid.a: javax.crypto.SecretKey m>;

        $r2 = $r0.<com.nielsen.app.nuid.a: javax.crypto.spec.IvParameterSpec n>;

     label04:
        varReplacer2006 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2006, $r4, $r2);

     label05:
        $r3 = $r0.<com.nielsen.app.nuid.a: javax.crypto.Cipher l>;

     label06:
        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label07:
        return $r1;

     label08:
        $r5 := @caughtexception;

        varReplacer2014 = "AppNuid";

        varReplacer2015 = "Invalid key for encryption algorithm";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2014, varReplacer2015, $r5);

        varReplacer2005 = null;

        return varReplacer2005;

     label09:
        $r6 := @caughtexception;

        varReplacer2012 = "AppNuid";

        varReplacer2013 = "Invalid parameter for encryption algorithm";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2012, varReplacer2013, $r6);

        varReplacer2002 = null;

        return varReplacer2002;

     label10:
        $r7 := @caughtexception;

        varReplacer2008 = "AppNuid";

        varReplacer2009 = "Illegal block size for encryption algorithm";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2008, varReplacer2009, $r7);

        varReplacer2007 = null;

        return varReplacer2007;

     label11:
        $r8 := @caughtexception;

        varReplacer2010 = "AppNuid";

        varReplacer2011 = "Bad padding for encryption algorithm";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2010, varReplacer2011, $r8);

        varReplacer2004 = null;

        return varReplacer2004;

     label12:
        $r9 := @caughtexception;

        varReplacer2016 = "AppNuid";

        varReplacer2017 = "Failed encrypting from bytes";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2016, varReplacer2017, $r9);

     label13:
        varReplacer2003 = null;

        return varReplacer2003;

        catch java.security.InvalidKeyException from label01 to label02 with label08;
        catch java.security.InvalidKeyException from label04 to label05 with label08;
        catch java.security.InvalidKeyException from label06 to label07 with label08;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label09;
        catch java.security.InvalidAlgorithmParameterException from label04 to label05 with label09;
        catch java.security.InvalidAlgorithmParameterException from label06 to label07 with label09;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label10;
        catch javax.crypto.IllegalBlockSizeException from label04 to label05 with label10;
        catch javax.crypto.IllegalBlockSizeException from label06 to label07 with label10;
        catch javax.crypto.BadPaddingException from label01 to label02 with label11;
        catch javax.crypto.BadPaddingException from label04 to label05 with label11;
        catch javax.crypto.BadPaddingException from label06 to label07 with label11;
        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label07 with label12;
    }

    private byte[] b(byte[])
    {
        com.nielsen.app.nuid.a $r0;
        byte[] $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        boolean $z0;
        javax.crypto.Cipher $r3;
        javax.crypto.SecretKey $r4;
        java.lang.Throwable $r5, $r6, $r7, $r8;
        java.lang.Exception $r9;
        java.lang.String varReplacer2082, varReplacer2083, varReplacer2084, varReplacer2085, varReplacer2087, varReplacer2088, varReplacer2091, varReplacer2092, varReplacer2094, varReplacer2095;
        int varReplacer2086;
        null_type varReplacer2089, varReplacer2090, varReplacer2093, varReplacer2096, varReplacer2097;

        nop;

        $r0 := @this: com.nielsen.app.nuid.a;

        $r1 := @parameter0: byte[];

     label01:
        $z0 = specialinvoke $r0.<com.nielsen.app.nuid.a: boolean a()>();

     label02:
        if $z0 == 0 goto label13;

     label03:
        $r3 = $r0.<com.nielsen.app.nuid.a: javax.crypto.Cipher l>;

        $r4 = $r0.<com.nielsen.app.nuid.a: javax.crypto.SecretKey m>;

        $r2 = $r0.<com.nielsen.app.nuid.a: javax.crypto.spec.IvParameterSpec n>;

     label04:
        varReplacer2086 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2086, $r4, $r2);

     label05:
        $r3 = $r0.<com.nielsen.app.nuid.a: javax.crypto.Cipher l>;

     label06:
        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label07:
        return $r1;

     label08:
        $r5 := @caughtexception;

        varReplacer2082 = "AppNuid";

        varReplacer2083 = "Invalid key for decryption algorithm";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2082, varReplacer2083, $r5);

        varReplacer2090 = null;

        return varReplacer2090;

     label09:
        $r6 := @caughtexception;

        varReplacer2091 = "AppNuid";

        varReplacer2092 = "Invalid parameter for decryption algorithm";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2091, varReplacer2092, $r6);

        varReplacer2093 = null;

        return varReplacer2093;

     label10:
        $r7 := @caughtexception;

        varReplacer2087 = "AppNuid";

        varReplacer2088 = "Illegal block size for decryption algorithm";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2087, varReplacer2088, $r7);

        varReplacer2096 = null;

        return varReplacer2096;

     label11:
        $r8 := @caughtexception;

        varReplacer2084 = "AppNuid";

        varReplacer2085 = "Bad padding for decryption algorithm";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2084, varReplacer2085, $r8);

        varReplacer2097 = null;

        return varReplacer2097;

     label12:
        $r9 := @caughtexception;

        varReplacer2094 = "AppNuid";

        varReplacer2095 = "Failed decrypting from bytes";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2094, varReplacer2095, $r9);

     label13:
        varReplacer2089 = null;

        return varReplacer2089;

        catch java.security.InvalidKeyException from label01 to label02 with label08;
        catch java.security.InvalidKeyException from label04 to label05 with label08;
        catch java.security.InvalidKeyException from label06 to label07 with label08;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label09;
        catch java.security.InvalidAlgorithmParameterException from label04 to label05 with label09;
        catch java.security.InvalidAlgorithmParameterException from label06 to label07 with label09;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label10;
        catch javax.crypto.IllegalBlockSizeException from label04 to label05 with label10;
        catch javax.crypto.IllegalBlockSizeException from label06 to label07 with label10;
        catch javax.crypto.BadPaddingException from label01 to label02 with label11;
        catch javax.crypto.BadPaddingException from label04 to label05 with label11;
        catch javax.crypto.BadPaddingException from label06 to label07 with label11;
        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label07 with label12;
    }

    public java.lang.String decrypt(java.lang.String, int)
    {
        com.nielsen.app.nuid.a $r0;
        java.lang.String $r1, varReplacer2069, varReplacer2070, varReplacer2071, varReplacer2072;
        int $i0, varReplacer2074;
        byte[] $r2;
        java.nio.charset.Charset $r3;
        java.lang.Throwable $r4;
        java.lang.Exception $r5;
        null_type varReplacer2073, varReplacer2075, varReplacer2076;

        nop;

        $r0 := @this: com.nielsen.app.nuid.a;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        lookupswitch(0)
        {
            case 0: goto label03;
            case 1: goto label05;
            default: goto label01;
        };

     label01:
        $r2 = null;

     label02:
        if $r2 != null goto label07;

        varReplacer2076 = null;

        return varReplacer2076;

     label03:
        varReplacer2074 = 0;

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, varReplacer2074);

     label04:
        goto label02;

     label05:
        $r2 = staticinvoke <com.nielsen.app.nuid.AppNuid: byte[] a(java.lang.String)>($r1);

     label06:
        goto label02;

     label07:
        $r2 = specialinvoke $r0.<com.nielsen.app.nuid.a: byte[] b(byte[])>($r2);

     label08:
        if $r2 == null goto label13;

        $r1 = new java.lang.String;

     label09:
        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r2, $r3);

     label10:
        return $r1;

     label11:
        $r4 := @caughtexception;

        varReplacer2071 = "AppNuid";

        varReplacer2072 = "IllegalArgumentException while decrypting text";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2071, varReplacer2072, $r4);

        varReplacer2075 = null;

        return varReplacer2075;

     label12:
        $r5 := @caughtexception;

        varReplacer2069 = "AppNuid";

        varReplacer2070 = "Failed decrypting string";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2069, varReplacer2070, $r5);

        varReplacer2073 = null;

        return varReplacer2073;

     label13:
        $r1 = null;

        goto label10;

        catch java.lang.IllegalArgumentException from label03 to label04 with label11;
        catch java.lang.IllegalArgumentException from label05 to label06 with label11;
        catch java.lang.IllegalArgumentException from label07 to label08 with label11;
        catch java.lang.IllegalArgumentException from label09 to label10 with label11;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label12;
    }

    public java.lang.String encrypt(java.lang.String, int)
    {
        com.nielsen.app.nuid.a $r0;
        java.lang.String $r1;
        int $i0, varReplacer2000;
        java.nio.charset.Charset $r2;
        byte[] $r3;
        null_type varReplacer1998, varReplacer1999;

        nop;

        $r0 := @this: com.nielsen.app.nuid.a;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r3 = specialinvoke $r0.<com.nielsen.app.nuid.a: byte[] a(byte[])>($r3);

        if $r3 == null goto label4;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label1;
        };

     label1:
        varReplacer1999 = null;

        return varReplacer1999;

     label2:
        varReplacer2000 = 0;

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, varReplacer2000);

        return $r1;

     label3:
        $r1 = staticinvoke <com.nielsen.app.nuid.AppNuid: java.lang.String a(byte[])>($r3);

        return $r1;

     label4:
        varReplacer1998 = null;

        return varReplacer1998;
    }
}
