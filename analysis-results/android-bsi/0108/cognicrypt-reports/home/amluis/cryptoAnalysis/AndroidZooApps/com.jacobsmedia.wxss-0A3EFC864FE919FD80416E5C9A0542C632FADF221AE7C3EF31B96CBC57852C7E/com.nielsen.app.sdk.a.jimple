class com.nielsen.app.sdk.a extends java.lang.Object
{
    public static final int a;
    public long b;
    public boolean c;
    private java.lang.String d;
    private boolean e;
    private boolean f;
    private final java.util.concurrent.locks.Lock g;
    private com.nielsen.app.sdk.AppEventNotifier h;
    private com.nielsen.app.sdk.f i;
    private com.nielsen.app.sdk.k j;
    private com.nielsen.app.sdk.AppConfig k;
    private com.nielsen.app.sdk.b l;
    private com.nielsen.app.sdk.AppScheduler m;
    private com.nielsen.app.sdk.h n;
    private com.nielsen.app.sdk.AppRequestManager o;
    private com.nielsen.app.sdk.e p;
    private com.nielsen.app.sdk.AppLocationManager q;

    public void <init>(android.content.Context, java.lang.String, com.nielsen.app.sdk.i, com.nielsen.app.sdk.IAppNotifier)
    {
        com.nielsen.app.sdk.a $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        com.nielsen.app.sdk.i $r3;
        com.nielsen.app.sdk.IAppNotifier $r4;
        boolean $z0;
        java.util.concurrent.locks.ReentrantLock $r5;
        int varReplacer306, varReplacer310, varReplacer315, varReplacer320, varReplacer321;
        null_type varReplacer307, varReplacer308, varReplacer309, varReplacer311, varReplacer312, varReplacer313, varReplacer314, varReplacer316, varReplacer318, varReplacer319, varReplacer322;
        long varReplacer317;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.nielsen.app.sdk.i;

        $r4 := @parameter3: com.nielsen.app.sdk.IAppNotifier;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer317 = 0L;

        $r0.<com.nielsen.app.sdk.a: long b> = varReplacer317;

        varReplacer306 = 0;

        $r0.<com.nielsen.app.sdk.a: boolean c> = varReplacer306;

        varReplacer322 = null;

        $r0.<com.nielsen.app.sdk.a: java.lang.String d> = varReplacer322;

        varReplacer315 = 0;

        $r0.<com.nielsen.app.sdk.a: boolean e> = varReplacer315;

        varReplacer310 = 0;

        $r0.<com.nielsen.app.sdk.a: boolean f> = varReplacer310;

        $r5 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        $r0.<com.nielsen.app.sdk.a: java.util.concurrent.locks.Lock g> = $r5;

        varReplacer319 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppEventNotifier h> = varReplacer319;

        varReplacer308 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i> = varReplacer308;

        varReplacer311 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j> = varReplacer311;

        varReplacer314 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k> = varReplacer314;

        varReplacer307 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.b l> = varReplacer307;

        varReplacer312 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppScheduler m> = varReplacer312;

        varReplacer318 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n> = varReplacer318;

        varReplacer309 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppRequestManager o> = varReplacer309;

        varReplacer313 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.e p> = varReplacer313;

        varReplacer316 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppLocationManager q> = varReplacer316;

        varReplacer320 = 0;

        $r0.<com.nielsen.app.sdk.a: boolean e> = varReplacer320;

        $z0 = specialinvoke $r0.<com.nielsen.app.sdk.a: boolean a(android.content.Context,java.lang.String,com.nielsen.app.sdk.i,com.nielsen.app.sdk.IAppNotifier)>($r1, $r2, $r3, $r4);

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void b()>();

        return;

     label1:
        varReplacer321 = 1;

        $r0.<com.nielsen.app.sdk.a: boolean e> = varReplacer321;

        return;
    }

    private boolean a(android.content.Context, java.lang.String, com.nielsen.app.sdk.i, com.nielsen.app.sdk.IAppNotifier)
    {
        com.nielsen.app.sdk.a $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r12, $r13, varReplacer323, varReplacer328, varReplacer329, varReplacer332, varReplacer335, varReplacer336, varReplacer337, varReplacer340, varReplacer342, varReplacer345, varReplacer348, varReplacer350, varReplacer353, varReplacer354;
        com.nielsen.app.sdk.i $r3;
        com.nielsen.app.sdk.IAppNotifier $r4;
        java.lang.Object[] $r5;
        java.util.HashMap $r6;
        boolean $z0;
        com.nielsen.app.sdk.AppEventNotifier $r7;
        com.nielsen.app.sdk.f $r8;
        org.json.JSONObject $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        java.util.Locale $r14;
        org.json.JSONException $r15;
        char $c0;
        java.util.regex.Pattern $r16;
        java.util.regex.Matcher $r17;
        java.lang.StringBuilder $r18;
        com.nielsen.app.sdk.e $r19;
        com.nielsen.app.sdk.k $r20;
        com.nielsen.app.sdk.b $r21;
        com.nielsen.app.sdk.AppLocationManager $r22;
        com.nielsen.app.sdk.AppScheduler $r23;
        com.nielsen.app.sdk.AppRequestManager $r24;
        com.nielsen.app.sdk.AppConfig $r25;
        com.nielsen.app.sdk.h $r26;
        java.lang.Exception $r27;
        java.lang.Throwable $r28;
        int varReplacer324, varReplacer325, varReplacer330, varReplacer331, varReplacer333, varReplacer334, varReplacer338, varReplacer339, varReplacer341, varReplacer343, varReplacer344, varReplacer346, varReplacer347, varReplacer349, varReplacer351, varReplacer352, varReplacer355;
        long varReplacer326;
        float varReplacer327;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.nielsen.app.sdk.i;

        $r4 := @parameter3: com.nielsen.app.sdk.IAppNotifier;

        entermonitor $r0;

        if $r1 != null goto label04;

     label01:
        varReplacer336 = "NielsenAPPSDK";

        varReplacer337 = "AppApi initialize. No context was passed to App SDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer336, varReplacer337);

     label02:
        $z0 = 0;

     label03:
        exitmonitor $r0;

        return $z0;

     label04:
        $r7 = new com.nielsen.app.sdk.AppEventNotifier;

     label05:
        specialinvoke $r7.<com.nielsen.app.sdk.AppEventNotifier: void <init>(com.nielsen.app.sdk.IAppNotifier)>($r4);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppEventNotifier h> = $r7;

     label06:
        $r8 = new com.nielsen.app.sdk.f;

     label07:
        specialinvoke $r8.<com.nielsen.app.sdk.f: void <init>(android.content.Context,com.nielsen.app.sdk.a)>($r1, $r0);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i> = $r8;

     label08:
        $r6 = new java.util.HashMap;

     label09:
        specialinvoke $r6.<java.util.HashMap: void <init>()>();

     label10:
        if $r2 == null goto label62;

     label11:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

     label12:
        if $z0 != 0 goto label62;

     label13:
        $r9 = new org.json.JSONObject;

     label14:
        specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r2);

     label15:
        if $r9 == null goto label26;

     label16:
        $r10 = virtualinvoke $r9.<org.json.JSONObject: java.util.Iterator keys()>();

     label17:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

     label18:
        if $z0 == 0 goto label26;

     label19:
        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

     label20:
        $r12 = (java.lang.String) $r11;

     label21:
        $r13 = virtualinvoke $r9.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r12);

        $r14 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r12 = virtualinvoke $r12.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r14);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r13);

     label22:
        goto label17;

     label23:
        $r15 := @caughtexception;

     label24:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

        varReplacer330 = 16;

        varReplacer331 = 69;

        varReplacer332 = "AppApi initialize. Failed to parse. JSON(%s)";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer330, varReplacer331, varReplacer332, $r5);

     label25:
        $z0 = 0;

        goto label03;

     label26:
        $r13 = "nol_devDebug";

     label27:
        $r14 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r13 = virtualinvoke $r13.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r14);

        $r11 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

     label28:
        $r13 = (java.lang.String) $r11;

     label29:
        if $r13 == null goto label33;

     label30:
        $z0 = virtualinvoke $r13.<java.lang.String: boolean isEmpty()>();

     label31:
        if $z0 != 0 goto label33;

     label32:
        $c0 = staticinvoke <com.nielsen.app.sdk.f: char a(java.lang.String)>($r13);

        staticinvoke <com.nielsen.app.sdk.AppSdk: void setDebug(char)>($c0);

     label33:
        varReplacer342 = "appid";

        $r11 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(varReplacer342);

     label34:
        $r13 = (java.lang.String) $r11;

        $r0.<com.nielsen.app.sdk.a: java.lang.String d> = $r13;

     label35:
        varReplacer323 = "([PT])([A-Z0-9]{8})((-([A-Z0-9]{4})){3})-([A-Z0-9]{12})";

        $r16 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(varReplacer323);

     label36:
        $r13 = $r0.<com.nielsen.app.sdk.a: java.lang.String d>;

     label37:
        if $r13 == null goto label41;

     label38:
        $r13 = $r0.<com.nielsen.app.sdk.a: java.lang.String d>;

     label39:
        $r17 = virtualinvoke $r16.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r13);

        $z0 = virtualinvoke $r17.<java.util.regex.Matcher: boolean matches()>();

     label40:
        if $z0 != 0 goto label50;

     label41:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

     label42:
        varReplacer351 = 16;

        varReplacer352 = 69;

        varReplacer353 = "AppApi initialize. Incorrect application ID (appid) provided. JSON(%s)";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer351, varReplacer352, varReplacer353, $r5);

     label43:
        $r18 = new java.lang.StringBuilder;

     label44:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        varReplacer328 = "Failed to initialize. appid validation failed. Incorrect appid is provided: ";

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer328);

     label45:
        $r13 = $r0.<com.nielsen.app.sdk.a: java.lang.String d>;

     label46:
        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label47:
        $r5 = newarray (java.lang.Object)[0];

     label48:
        varReplacer341 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer341, $r13, $r5);

     label49:
        $z0 = 0;

        goto label03;

     label50:
        varReplacer354 = "appname";

        $r11 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(varReplacer354);

     label51:
        $r13 = (java.lang.String) $r11;

     label52:
        if $r13 == null goto label55;

     label53:
        $z0 = virtualinvoke $r13.<java.lang.String: boolean isEmpty()>();

     label54:
        if $z0 == 0 goto label64;

     label55:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

     label56:
        varReplacer333 = 16;

        varReplacer334 = 69;

        varReplacer335 = "AppApi initialize. Incorrect application name (appname) provided. JSON (%s)";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer333, varReplacer334, varReplacer335, $r5);

     label57:
        $r18 = new java.lang.StringBuilder;

     label58:
        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        varReplacer329 = "AppApi initialize. Incorrect application name (appname) provided. JSON: ";

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer329);

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r13 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label59:
        $r5 = newarray (java.lang.Object)[0];

     label60:
        varReplacer338 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer338, $r13, $r5);

     label61:
        $z0 = 0;

        goto label03;

     label62:
        $r5 = newarray (java.lang.Object)[0];

        varReplacer343 = 16;

        varReplacer344 = 69;

        varReplacer345 = "AppApi initialize. JSON string is empty or null";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer343, varReplacer344, varReplacer345, $r5);

        $r5 = newarray (java.lang.Object)[0];

        varReplacer349 = 73;

        varReplacer350 = "AppApi initialize. JSON string is empty or null";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer349, varReplacer350, $r5);

     label63:
        $z0 = 0;

        goto label03;

     label64:
        $r19 = new com.nielsen.app.sdk.e;

     label65:
        specialinvoke $r19.<com.nielsen.app.sdk.e: void <init>(android.content.Context,com.nielsen.app.sdk.a)>($r1, $r0);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.e p> = $r19;

     label66:
        $r20 = new com.nielsen.app.sdk.k;

     label67:
        specialinvoke $r20.<com.nielsen.app.sdk.k: void <init>(android.content.Context,com.nielsen.app.sdk.a)>($r1, $r0);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j> = $r20;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

        varReplacer339 = 68;

        varReplacer340 = "appInit: %s";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer339, varReplacer340, $r5);

     label68:
        $r21 = new com.nielsen.app.sdk.b;

     label69:
        specialinvoke $r21.<com.nielsen.app.sdk.b: void <init>(android.content.Context,com.nielsen.app.sdk.a)>($r1, $r0);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.b l> = $r21;

        $r21 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.b l>;

     label70:
        if $r21 == null goto label72;

     label71:
        $r21 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.b l>;

        virtualinvoke $r21.<com.nielsen.app.sdk.b: boolean a()>();

     label72:
        $r20 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        $z0 = virtualinvoke $r20.<com.nielsen.app.sdk.k: boolean n()>();

     label73:
        if $z0 == 0 goto label77;

        $r22 = new com.nielsen.app.sdk.AppLocationManager;

     label74:
        specialinvoke $r22.<com.nielsen.app.sdk.AppLocationManager: void <init>(android.content.Context,com.nielsen.app.sdk.a)>($r1, $r0);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppLocationManager q> = $r22;

        $r22 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppLocationManager q>;

     label75:
        if $r22 == null goto label77;

     label76:
        $r22 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppLocationManager q>;

        varReplacer324 = 2;

        varReplacer325 = 2;

        varReplacer326 = 500L;

        varReplacer327 = 250.0F;

        virtualinvoke $r22.<com.nielsen.app.sdk.AppLocationManager: boolean a(int,int,long,float)>(varReplacer324, varReplacer324, varReplacer326, varReplacer327);

     label77:
        $r23 = new com.nielsen.app.sdk.AppScheduler;

     label78:
        specialinvoke $r23.<com.nielsen.app.sdk.AppScheduler: void <init>(com.nielsen.app.sdk.a)>($r0);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppScheduler m> = $r23;

     label79:
        $r24 = new com.nielsen.app.sdk.AppRequestManager;

     label80:
        varReplacer355 = 2;

        specialinvoke $r24.<com.nielsen.app.sdk.AppRequestManager: void <init>(int,com.nielsen.app.sdk.a)>(varReplacer355, $r0);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppRequestManager o> = $r24;

     label81:
        $r25 = new com.nielsen.app.sdk.AppConfig;

     label82:
        specialinvoke $r25.<com.nielsen.app.sdk.AppConfig: void <init>(android.content.Context,java.util.HashMap,com.nielsen.app.sdk.i,com.nielsen.app.sdk.a)>($r1, $r6, $r3, $r0);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k> = $r25;

     label83:
        $r26 = new com.nielsen.app.sdk.h;

     label84:
        specialinvoke $r26.<com.nielsen.app.sdk.h: void <init>(com.nielsen.app.sdk.a)>($r0);

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n> = $r26;

        $r25 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

     label85:
        if $r25 == null goto label87;

     label86:
        $r25 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        virtualinvoke $r25.<com.nielsen.app.sdk.AppConfig: void start()>();

     label87:
        $z0 = 1;

        goto label03;

     label88:
        $r27 := @caughtexception;

     label89:
        $r5 = newarray (java.lang.Object)[0];

        varReplacer346 = 16;

        varReplacer347 = 69;

        varReplacer348 = "AppApi initialize. Failed";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,int,char,java.lang.String,java.lang.Object[])>($r27, varReplacer346, varReplacer347, varReplacer348, $r5);

     label90:
        $z0 = 0;

        goto label03;

     label91:
        $r28 := @caughtexception;

        exitmonitor $r0;

        throw $r28;

        catch java.lang.Throwable from label01 to label02 with label91;
        catch java.lang.Exception from label05 to label06 with label88;
        catch java.lang.Exception from label07 to label08 with label88;
        catch java.lang.Exception from label09 to label10 with label88;
        catch java.lang.Exception from label11 to label12 with label88;
        catch java.lang.Throwable from label04 to label12 with label91;
        catch org.json.JSONException from label14 to label15 with label23;
        catch org.json.JSONException from label16 to label18 with label23;
        catch org.json.JSONException from label19 to label20 with label23;
        catch org.json.JSONException from label21 to label22 with label23;
        catch java.lang.Exception from label14 to label15 with label88;
        catch java.lang.Exception from label16 to label18 with label88;
        catch java.lang.Exception from label19 to label22 with label88;
        catch java.lang.Throwable from label13 to label22 with label91;
        catch java.lang.Exception from label24 to label25 with label88;
        catch java.lang.Throwable from label24 to label25 with label91;
        catch org.json.JSONException from label27 to label28 with label23;
        catch org.json.JSONException from label30 to label31 with label23;
        catch org.json.JSONException from label32 to label34 with label23;
        catch org.json.JSONException from label35 to label36 with label23;
        catch org.json.JSONException from label39 to label40 with label23;
        catch org.json.JSONException from label42 to label43 with label23;
        catch org.json.JSONException from label44 to label45 with label23;
        catch org.json.JSONException from label46 to label47 with label23;
        catch org.json.JSONException from label48 to label49 with label23;
        catch org.json.JSONException from label50 to label51 with label23;
        catch org.json.JSONException from label53 to label54 with label23;
        catch org.json.JSONException from label56 to label57 with label23;
        catch org.json.JSONException from label58 to label59 with label23;
        catch org.json.JSONException from label60 to label61 with label23;
        catch java.lang.Exception from label27 to label29 with label88;
        catch java.lang.Exception from label30 to label31 with label88;
        catch java.lang.Exception from label32 to label37 with label88;
        catch java.lang.Exception from label38 to label40 with label88;
        catch java.lang.Exception from label41 to label43 with label88;
        catch java.lang.Exception from label44 to label49 with label88;
        catch java.lang.Exception from label50 to label52 with label88;
        catch java.lang.Exception from label53 to label54 with label88;
        catch java.lang.Exception from label55 to label57 with label88;
        catch java.lang.Exception from label58 to label61 with label88;
        catch java.lang.Throwable from label26 to label61 with label91;
        catch java.lang.Exception from label62 to label63 with label88;
        catch java.lang.Exception from label65 to label66 with label88;
        catch java.lang.Exception from label67 to label68 with label88;
        catch java.lang.Exception from label69 to label70 with label88;
        catch java.lang.Exception from label71 to label73 with label88;
        catch java.lang.Exception from label74 to label75 with label88;
        catch java.lang.Exception from label76 to label77 with label88;
        catch java.lang.Exception from label78 to label79 with label88;
        catch java.lang.Exception from label80 to label81 with label88;
        catch java.lang.Exception from label82 to label83 with label88;
        catch java.lang.Exception from label84 to label85 with label88;
        catch java.lang.Exception from label86 to label87 with label88;
        catch java.lang.Throwable from label62 to label87 with label91;
        catch java.lang.Throwable from label89 to label90 with label91;
    }

    private void f(java.lang.String)
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String $r1, $r2, $r3, $r6, varReplacer11991, varReplacer11993, varReplacer11995, varReplacer11996, varReplacer11997, varReplacer11998, varReplacer11999, varReplacer12000, varReplacer12001, varReplacer12003, varReplacer12006, varReplacer12008, varReplacer12010, varReplacer12011, varReplacer12012, varReplacer12013, varReplacer12014, varReplacer12015, varReplacer12016, varReplacer12017, varReplacer12019, varReplacer12020, varReplacer12022, varReplacer12023, varReplacer12024, varReplacer12026, varReplacer12027, varReplacer12028, varReplacer12030, varReplacer12031, varReplacer12032;
        boolean $z0;
        org.json.JSONObject $r4;
        java.util.Iterator $r5;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8;
        java.lang.Object[] $r9;
        java.lang.Throwable $r10, $r12, $r13;
        java.lang.Exception $r11;
        int varReplacer11992, varReplacer11994, varReplacer12002, varReplacer12004, varReplacer12005, varReplacer12007, varReplacer12009, varReplacer12018, varReplacer12021, varReplacer12025, varReplacer12029;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label120;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label120;

        $r2 = "";

        $r3 = "";

        $r4 = new org.json.JSONObject;

     label001:
        specialinvoke $r4.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

     label002:
        if $r4 == null goto label120;

     label003:
        $r5 = virtualinvoke $r4.<org.json.JSONObject: java.util.Iterator keys()>();

     label004:
        $r6 = "";

        $r1 = "";

     label005:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label006:
        if $z0 == 0 goto label120;

     label007:
        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

     label008:
        $r2 = (java.lang.String) $r7;

     label009:
        varReplacer12030 = "length";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer12030);

     label010:
        if $z0 == 0 goto label022;

     label011:
        varReplacer12026 = "length";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer12026);

     label012:
        $r1 = $r3;

        if $r3 == null goto label015;

     label013:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label014:
        if $z0 == 0 goto label020;

     label015:
        $r8 = new java.lang.StringBuilder;

     label016:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer12003 = "Invalid value provided in metadata. Input should not be empty or null: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12003);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label017:
        $r9 = newarray (java.lang.Object)[0];

     label018:
        varReplacer12018 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12018, $r3, $r9);

     label019:
        $r6 = $r2;

        goto label005;

     label020:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label021:
        $r6 = $r2;

        goto label005;

     label022:
        varReplacer11999 = "category";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer11999);

     label023:
        if $z0 == 0 goto label033;

     label024:
        varReplacer12010 = "category";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer12010);

     label025:
        $r1 = $r3;

        if $r3 == null goto label028;

     label026:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label027:
        if $z0 == 0 goto label119;

     label028:
        $r8 = new java.lang.StringBuilder;

     label029:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer11995 = "Invalid value provided in metadata. Input should not be empty or null: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer11995);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label030:
        $r9 = newarray (java.lang.Object)[0];

     label031:
        varReplacer12029 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12029, $r3, $r9);

     label032:
        $r6 = $r2;

        goto label005;

     label033:
        varReplacer12016 = "title";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer12016);

     label034:
        if $z0 == 0 goto label044;

     label035:
        varReplacer12019 = "title";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer12019);

     label036:
        $r1 = $r3;

        if $r3 == null goto label039;

     label037:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label038:
        if $z0 == 0 goto label119;

     label039:
        $r8 = new java.lang.StringBuilder;

     label040:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer12022 = "Invalid value provided in metadata. Input should not be empty or null: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12022);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label041:
        $r9 = newarray (java.lang.Object)[0];

     label042:
        varReplacer12004 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12004, $r3, $r9);

     label043:
        $r6 = $r2;

        goto label005;

     label044:
        varReplacer11998 = "program";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer11998);

     label045:
        if $z0 == 0 goto label055;

     label046:
        varReplacer11991 = "program";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer11991);

     label047:
        $r1 = $r3;

        if $r3 == null goto label050;

     label048:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label049:
        if $z0 == 0 goto label119;

     label050:
        $r8 = new java.lang.StringBuilder;

     label051:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer12031 = "Invalid value provided in metadata. Input should not be empty or null: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12031);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label052:
        $r9 = newarray (java.lang.Object)[0];

     label053:
        varReplacer11992 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer11992, $r3, $r9);

     label054:
        $r6 = $r2;

        goto label005;

     label055:
        varReplacer12000 = "dprflag";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer12000);

     label056:
        if $z0 == 0 goto label068;

     label057:
        varReplacer12008 = "dprflag";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer12008);

     label058:
        $r1 = $r3;

        if $r3 == null goto label061;

     label059:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label060:
        if $z0 == 0 goto label066;

     label061:
        $r8 = new java.lang.StringBuilder;

     label062:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer11996 = "Invalid value provided in metadata. Input should not be empty or null: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer11996);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label063:
        $r9 = newarray (java.lang.Object)[0];

     label064:
        varReplacer12009 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12009, $r3, $r9);

     label065:
        $r6 = $r2;

        goto label005;

     label066:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label067:
        $r6 = $r2;

        goto label005;

     label068:
        varReplacer12023 = "assetid";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer12023);

     label069:
        if $z0 == 0 goto label079;

     label070:
        varReplacer12024 = "assetid";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer12024);

     label071:
        $r1 = $r3;

        if $r3 == null goto label074;

     label072:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label073:
        if $z0 == 0 goto label119;

     label074:
        $r8 = new java.lang.StringBuilder;

     label075:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer12001 = "Invalid value provided in metadata. Input should not be empty or null: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12001);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label076:
        $r9 = newarray (java.lang.Object)[0];

     label077:
        varReplacer12002 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12002, $r3, $r9);

     label078:
        $r6 = $r2;

        goto label005;

     label079:
        varReplacer12027 = "type";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer12027);

     label080:
        if $z0 == 0 goto label090;

     label081:
        varReplacer12006 = "type";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer12006);

     label082:
        $r1 = $r3;

        if $r3 == null goto label085;

     label083:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label084:
        if $z0 == 0 goto label119;

     label085:
        $r8 = new java.lang.StringBuilder;

     label086:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer12020 = "Invalid value provided in metadata. Input should not be empty or null: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12020);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label087:
        $r9 = newarray (java.lang.Object)[0];

     label088:
        varReplacer11994 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer11994, $r3, $r9);

     label089:
        $r6 = $r2;

        goto label005;

     label090:
        varReplacer12032 = "adloadtype";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer12032);

     label091:
        if $z0 == 0 goto label103;

     label092:
        varReplacer11993 = "adloadtype";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer11993);

     label093:
        $r1 = $r3;

        if $r3 == null goto label096;

     label094:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label095:
        if $z0 == 0 goto label101;

     label096:
        $r8 = new java.lang.StringBuilder;

     label097:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer12013 = "Invalid value provided in metadata. Input should not be empty or null: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12013);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label098:
        $r9 = newarray (java.lang.Object)[0];

     label099:
        varReplacer12025 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12025, $r3, $r9);

     label100:
        $r6 = $r2;

        goto label005;

     label101:
        staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label102:
        $r6 = $r2;

        goto label005;

     label103:
        varReplacer12015 = "tv";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer12015);

     label104:
        if $z0 == 0 goto label119;

     label105:
        varReplacer11997 = "tv";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer11997);

     label106:
        $r1 = $r3;

        if $r3 == null goto label109;

     label107:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label108:
        if $z0 == 0 goto label119;

     label109:
        $r8 = new java.lang.StringBuilder;

     label110:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer12014 = "Invalid value provided in metadata. Input should not be empty or null: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12014);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label111:
        $r9 = newarray (java.lang.Object)[0];

     label112:
        varReplacer12021 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12021, $r3, $r9);

     label113:
        $r6 = $r2;

        goto label005;

     label114:
        $r10 := @caughtexception;

     label115:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer12028 = "Invalid ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12028);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer12011 = " provided in metadata. ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12011);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer12012 = " should be a numeric value: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12012);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        varReplacer12007 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12007, $r1, $r9);

        return;

     label116:
        $r11 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer12017 = "Validating meta data Length parameter - EXCEPTION; ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12017);

        $r1 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        varReplacer12005 = 69;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12005, $r1, $r9);

        return;

     label117:
        $r12 := @caughtexception;

        $r3 = $r1;

        goto label115;

     label118:
        $r13 := @caughtexception;

        $r3 = $r1;

        $r2 = $r6;

        goto label115;

     label119:
        $r6 = $r2;

        goto label005;

     label120:
        return;

        catch java.lang.NumberFormatException from label001 to label002 with label114;
        catch java.lang.NumberFormatException from label003 to label004 with label114;
        catch java.lang.Exception from label001 to label002 with label116;
        catch java.lang.Exception from label003 to label004 with label116;
        catch java.lang.NumberFormatException from label005 to label006 with label118;
        catch java.lang.NumberFormatException from label007 to label008 with label118;
        catch java.lang.Exception from label005 to label006 with label116;
        catch java.lang.Exception from label007 to label009 with label116;
        catch java.lang.NumberFormatException from label009 to label010 with label117;
        catch java.lang.NumberFormatException from label011 to label012 with label117;
        catch java.lang.NumberFormatException from label013 to label014 with label117;
        catch java.lang.NumberFormatException from label016 to label017 with label117;
        catch java.lang.NumberFormatException from label018 to label019 with label117;
        catch java.lang.NumberFormatException from label020 to label021 with label117;
        catch java.lang.NumberFormatException from label022 to label023 with label117;
        catch java.lang.NumberFormatException from label024 to label025 with label117;
        catch java.lang.NumberFormatException from label026 to label027 with label117;
        catch java.lang.NumberFormatException from label029 to label030 with label117;
        catch java.lang.NumberFormatException from label031 to label032 with label117;
        catch java.lang.NumberFormatException from label033 to label034 with label117;
        catch java.lang.NumberFormatException from label035 to label036 with label117;
        catch java.lang.NumberFormatException from label037 to label038 with label117;
        catch java.lang.NumberFormatException from label040 to label041 with label117;
        catch java.lang.NumberFormatException from label042 to label043 with label117;
        catch java.lang.NumberFormatException from label044 to label045 with label117;
        catch java.lang.NumberFormatException from label046 to label047 with label117;
        catch java.lang.NumberFormatException from label048 to label049 with label117;
        catch java.lang.NumberFormatException from label051 to label052 with label117;
        catch java.lang.NumberFormatException from label053 to label054 with label117;
        catch java.lang.NumberFormatException from label055 to label056 with label117;
        catch java.lang.NumberFormatException from label057 to label058 with label117;
        catch java.lang.NumberFormatException from label059 to label060 with label117;
        catch java.lang.NumberFormatException from label062 to label063 with label117;
        catch java.lang.NumberFormatException from label064 to label065 with label117;
        catch java.lang.NumberFormatException from label066 to label067 with label117;
        catch java.lang.NumberFormatException from label068 to label069 with label117;
        catch java.lang.NumberFormatException from label070 to label071 with label117;
        catch java.lang.NumberFormatException from label072 to label073 with label117;
        catch java.lang.NumberFormatException from label075 to label076 with label117;
        catch java.lang.NumberFormatException from label077 to label078 with label117;
        catch java.lang.NumberFormatException from label079 to label080 with label117;
        catch java.lang.NumberFormatException from label081 to label082 with label117;
        catch java.lang.NumberFormatException from label083 to label084 with label117;
        catch java.lang.NumberFormatException from label086 to label087 with label117;
        catch java.lang.NumberFormatException from label088 to label089 with label117;
        catch java.lang.NumberFormatException from label090 to label091 with label117;
        catch java.lang.NumberFormatException from label092 to label093 with label117;
        catch java.lang.NumberFormatException from label094 to label095 with label117;
        catch java.lang.NumberFormatException from label097 to label098 with label117;
        catch java.lang.NumberFormatException from label099 to label100 with label117;
        catch java.lang.NumberFormatException from label101 to label102 with label117;
        catch java.lang.NumberFormatException from label103 to label104 with label117;
        catch java.lang.NumberFormatException from label105 to label106 with label117;
        catch java.lang.NumberFormatException from label107 to label108 with label117;
        catch java.lang.NumberFormatException from label110 to label111 with label117;
        catch java.lang.NumberFormatException from label112 to label113 with label117;
        catch java.lang.Exception from label009 to label010 with label116;
        catch java.lang.Exception from label011 to label012 with label116;
        catch java.lang.Exception from label013 to label014 with label116;
        catch java.lang.Exception from label016 to label019 with label116;
        catch java.lang.Exception from label020 to label021 with label116;
        catch java.lang.Exception from label022 to label023 with label116;
        catch java.lang.Exception from label024 to label025 with label116;
        catch java.lang.Exception from label026 to label027 with label116;
        catch java.lang.Exception from label029 to label032 with label116;
        catch java.lang.Exception from label033 to label034 with label116;
        catch java.lang.Exception from label035 to label036 with label116;
        catch java.lang.Exception from label037 to label038 with label116;
        catch java.lang.Exception from label040 to label043 with label116;
        catch java.lang.Exception from label044 to label045 with label116;
        catch java.lang.Exception from label046 to label047 with label116;
        catch java.lang.Exception from label048 to label049 with label116;
        catch java.lang.Exception from label051 to label054 with label116;
        catch java.lang.Exception from label055 to label056 with label116;
        catch java.lang.Exception from label057 to label058 with label116;
        catch java.lang.Exception from label059 to label060 with label116;
        catch java.lang.Exception from label062 to label065 with label116;
        catch java.lang.Exception from label066 to label067 with label116;
        catch java.lang.Exception from label068 to label069 with label116;
        catch java.lang.Exception from label070 to label071 with label116;
        catch java.lang.Exception from label072 to label073 with label116;
        catch java.lang.Exception from label075 to label078 with label116;
        catch java.lang.Exception from label079 to label080 with label116;
        catch java.lang.Exception from label081 to label082 with label116;
        catch java.lang.Exception from label083 to label084 with label116;
        catch java.lang.Exception from label086 to label089 with label116;
        catch java.lang.Exception from label090 to label091 with label116;
        catch java.lang.Exception from label092 to label093 with label116;
        catch java.lang.Exception from label094 to label095 with label116;
        catch java.lang.Exception from label097 to label100 with label116;
        catch java.lang.Exception from label101 to label102 with label116;
        catch java.lang.Exception from label103 to label104 with label116;
        catch java.lang.Exception from label105 to label106 with label116;
        catch java.lang.Exception from label107 to label108 with label116;
        catch java.lang.Exception from label110 to label113 with label116;
    }

    public static java.lang.String h()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.nielsen.app.sdk.k: java.lang.String u()>();

        return $r0;
    }

    public static java.lang.String k()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.nielsen.app.sdk.k: java.lang.String A()>();

        return $r0;
    }

    public java.lang.String a()
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: java.lang.String d>;

        return r1;
    }

    public transient void a(char, java.lang.String, java.lang.Object[])
    {
        com.nielsen.app.sdk.a $r0;
        char $c0;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        com.nielsen.app.sdk.f $r3;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $c0 := @parameter0: char;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Object[];

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        virtualinvoke $r3.<com.nielsen.app.sdk.f: void a(char,java.lang.String,java.lang.Object[])>($c0, $r1, $r2);

     label1:
        return;
    }

    public transient void a(int, char, java.lang.String, java.lang.Object[])
    {
        com.nielsen.app.sdk.a $r0;
        int $i0;
        char $c1;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        com.nielsen.app.sdk.f $r3;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $i0 := @parameter0: int;

        $c1 := @parameter1: char;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.Object[];

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        virtualinvoke $r3.<com.nielsen.app.sdk.f: void a(int,char,java.lang.String,java.lang.Object[])>($i0, $c1, $r1, $r2);

     label1:
        return;
    }

    public transient void a(java.lang.Throwable, char, java.lang.String, java.lang.Object[])
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.Throwable $r1;
        char $c0;
        java.lang.String $r2;
        java.lang.Object[] $r3;
        com.nielsen.app.sdk.f $r4;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: java.lang.Throwable;

        $c0 := @parameter1: char;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.Object[];

        $r4 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        if $r4 == null goto label1;

        $r4 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        virtualinvoke $r4.<com.nielsen.app.sdk.f: void a(java.lang.Throwable,char,java.lang.String,java.lang.Object[])>($r1, $c0, $r2, $r3);

     label1:
        return;
    }

    public transient void a(java.lang.Throwable, int, char, java.lang.String, java.lang.Object[])
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.Throwable $r1;
        int $i0, varReplacer2355;
        char $c1;
        java.lang.String $r2;
        java.lang.Object[] $r3;
        com.nielsen.app.sdk.f $r4;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: java.lang.Throwable;

        $i0 := @parameter1: int;

        $c1 := @parameter2: char;

        $r2 := @parameter3: java.lang.String;

        $r3 := @parameter4: java.lang.Object[];

        $r4 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        if $r4 == null goto label1;

        $r4 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        varReplacer2355 = 69;

        virtualinvoke $r4.<com.nielsen.app.sdk.f: void a(java.lang.Throwable,int,char,java.lang.String,java.lang.Object[])>($r1, $i0, varReplacer2355, $r2, $r3);

     label1:
        return;
    }

    public boolean a(int, long)
    {
        com.nielsen.app.sdk.a $r0;
        int $i0, varReplacer9350, varReplacer9351, varReplacer9352, varReplacer9353, varReplacer9354, varReplacer9355, varReplacer9356, varReplacer9358, varReplacer9359, varReplacer9362, varReplacer9363;
        long $l1;
        com.nielsen.app.sdk.h $r1;
        java.lang.Object[] $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer9349, varReplacer9357, varReplacer9360, varReplacer9361, varReplacer9364;
        java.lang.Integer $r5;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $i0 := @parameter0: int;

        $l1 := @parameter1: long;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r1 != null goto label1;

        $r2 = newarray (java.lang.Object)[0];

        varReplacer9358 = 16;

        varReplacer9359 = 69;

        varReplacer9360 = "AppApi processSessionEvent. Missing processor manager object";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer9358, varReplacer9359, varReplacer9360, $r2);

        varReplacer9354 = 0;

        return varReplacer9354;

     label1:
        $z0 = virtualinvoke $r0.<com.nielsen.app.sdk.a: boolean o()>();

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.Object)[0];

        varReplacer9362 = 19;

        varReplacer9363 = 73;

        varReplacer9364 = "AppApi processSessionEvent. App SDK is currently disabled";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer9362, varReplacer9363, varReplacer9364, $r2);

        $r2 = newarray (java.lang.Object)[0];

        varReplacer9356 = 73;

        varReplacer9357 = "AppApi processSessionEvent. App SDK is currently disabled";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer9356, varReplacer9357, $r2);

        varReplacer9353 = 0;

        return varReplacer9353;

     label2:
        lookupswitch(4)
        {
            case 4: goto label8;
            case 5: goto label7;
            case 6: goto label6;
            default: goto label3;
        };

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer9349 = "AppApi processSessionEvent. Invalid event reported (%s) with value: ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9349);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = newarray (java.lang.Object)[1];

        varReplacer9352 = 4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer9352);

        $r2[0] = $r5;

        varReplacer9355 = 69;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer9355, $r4, $r2);

        $z0 = 0;

     label4:
        if $z0 != 0 goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer9361 = "AppApi processSessionEvent. Could not process value: ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9361);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = newarray (java.lang.Object)[0];

        varReplacer9350 = 24;

        varReplacer9351 = 69;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer9350, varReplacer9351, $r4, $r2);

     label5:
        return $z0;

     label6:
        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $z0 = virtualinvoke $r1.<com.nielsen.app.sdk.h: boolean f(java.lang.String)>($r4);

        goto label4;

     label7:
        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $z0 = virtualinvoke $r1.<com.nielsen.app.sdk.h: boolean g(java.lang.String)>($r4);

        goto label4;

     label8:
        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $z0 = virtualinvoke $r1.<com.nielsen.app.sdk.h: boolean h(java.lang.String)>($r4);

        goto label4;
    }

    public boolean a(long)
    {
        com.nielsen.app.sdk.a $r0;
        long $l0;
        com.nielsen.app.sdk.h $r1;
        com.nielsen.app.sdk.k $r2;
        java.lang.Object[] $r3;
        boolean $z0;
        com.nielsen.app.sdk.f $r4;
        java.lang.Long $r5;
        int varReplacer12106, varReplacer12107, varReplacer12108, varReplacer12110, varReplacer12112, varReplacer12113, varReplacer12114, varReplacer12116, varReplacer12117;
        java.lang.String varReplacer12109, varReplacer12111, varReplacer12115, varReplacer12118;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $l0 := @parameter0: long;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r1 == null goto label1;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        if $r2 != null goto label2;

     label1:
        $r3 = newarray (java.lang.Object)[0];

        varReplacer12107 = 16;

        varReplacer12108 = 69;

        varReplacer12109 = "AppApi setPlayheadPosition. Missing processor manager or util objects";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer12107, varReplacer12108, varReplacer12109, $r3);

        varReplacer12106 = 0;

        return varReplacer12106;

     label2:
        $z0 = virtualinvoke $r0.<com.nielsen.app.sdk.a: boolean o()>();

        if $z0 == 0 goto label3;

        $r3 = newarray (java.lang.Object)[0];

        varReplacer12113 = 19;

        varReplacer12114 = 69;

        varReplacer12115 = "AppApi setPlayheadPosition. App SDK is currently disabled";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer12113, varReplacer12114, varReplacer12115, $r3);

        $r3 = newarray (java.lang.Object)[0];

        varReplacer12110 = 73;

        varReplacer12111 = "AppApi setPlayheadPosition. App SDK is currently disabled";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12110, varReplacer12111, $r3);

        varReplacer12112 = 0;

        return varReplacer12112;

     label3:
        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $z0 = virtualinvoke $r1.<com.nielsen.app.sdk.h: boolean a(long)>($l0);

        $r4 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        if $r4 == null goto label4;

        if $z0 != 0 goto label4;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3[0] = $r5;

        varReplacer12116 = 20;

        varReplacer12117 = 69;

        varReplacer12118 = "AppApi setPlayheadPosition. Could not process (%d)";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer12116, varReplacer12117, varReplacer12118, $r3);

     label4:
        return $z0;
    }

    public boolean a(com.nielsen.app.sdk.i)
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.i $r1;
        com.nielsen.app.sdk.AppConfig $r2;
        int varReplacer2431, varReplacer2432;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: com.nielsen.app.sdk.i;

        if $r1 == null goto label1;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        virtualinvoke $r2.<com.nielsen.app.sdk.AppConfig: void a(com.nielsen.app.sdk.i)>($r1);

        varReplacer2432 = 1;

        return varReplacer2432;

     label1:
        varReplacer2431 = 0;

        return varReplacer2431;
    }

    public boolean a(java.lang.String)
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String $r1, varReplacer11980, varReplacer11982, varReplacer11985, varReplacer11988;
        com.nielsen.app.sdk.h $r2;
        com.nielsen.app.sdk.k $r3;
        java.lang.Object[] $r4;
        boolean $z0;
        int varReplacer11978, varReplacer11979, varReplacer11981, varReplacer11983, varReplacer11984, varReplacer11986, varReplacer11987, varReplacer11989, varReplacer11990;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r2 == null goto label1;

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        if $r3 != null goto label2;

     label1:
        $r4 = newarray (java.lang.Object)[0];

        varReplacer11986 = 16;

        varReplacer11987 = 69;

        varReplacer11988 = "AppApi loadMetadata. Missing processor manager or util objects";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer11986, varReplacer11987, varReplacer11988, $r4);

        varReplacer11990 = 0;

        return varReplacer11990;

     label2:
        $z0 = virtualinvoke $r0.<com.nielsen.app.sdk.a: boolean o()>();

        if $z0 == 0 goto label3;

        $r4 = newarray (java.lang.Object)[0];

        varReplacer11983 = 19;

        varReplacer11984 = 69;

        varReplacer11985 = "AppApi loadMetadata. App SDK is currently disabled";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer11983, varReplacer11984, varReplacer11985, $r4);

        $r4 = newarray (java.lang.Object)[0];

        varReplacer11981 = 73;

        varReplacer11982 = "AppApi loadMetadata. App SDK is currently disabled";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer11981, varReplacer11982, $r4);

        varReplacer11989 = 0;

        return varReplacer11989;

     label3:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $z0 = virtualinvoke $r2.<com.nielsen.app.sdk.h: boolean b(java.lang.String)>($r1);

        if $z0 != 0 goto label4;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        varReplacer11978 = 21;

        varReplacer11979 = 69;

        varReplacer11980 = "AppApi loadMetadata. Metadata not processed. JSON(%s)";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer11978, varReplacer11979, varReplacer11980, $r4);

     label4:
        specialinvoke $r0.<com.nielsen.app.sdk.a: void f(java.lang.String)>($r1);

        return $z0;
    }

    public boolean a(boolean)
    {
        com.nielsen.app.sdk.a $r0;
        boolean $z0;
        java.lang.Object[] $r1;
        com.nielsen.app.sdk.AppConfig $r2;

        $r0 := @this: com.nielsen.app.sdk.a;

        $z0 := @parameter0: boolean;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        if $r2 != null goto label1;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi setDisabledApi. Missing config object", $r1);

        return 0;

     label1:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        $z0 = virtualinvoke $r2.<com.nielsen.app.sdk.AppConfig: boolean a(boolean)>($z0);

        return $z0;
    }

    public void b()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.h $r1;
        com.nielsen.app.sdk.AppLocationManager $r2;
        com.nielsen.app.sdk.AppConfig $r3;
        com.nielsen.app.sdk.e $r4, $r5;
        android.content.SharedPreferences$OnSharedPreferenceChangeListener $r6;
        com.nielsen.app.sdk.k $r7;
        com.nielsen.app.sdk.AppRequestManager $r8;
        com.nielsen.app.sdk.AppScheduler $r9;
        com.nielsen.app.sdk.b $r10;
        com.nielsen.app.sdk.f $r11;
        null_type varReplacer356, varReplacer357, varReplacer358, varReplacer359, varReplacer360, varReplacer361, varReplacer362, varReplacer363, varReplacer366;
        java.lang.String varReplacer364, varReplacer365;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        virtualinvoke $r1.<com.nielsen.app.sdk.h: void close()>();

        varReplacer359 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n> = varReplacer359;

     label1:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppLocationManager q>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppLocationManager q>;

        virtualinvoke $r2.<com.nielsen.app.sdk.AppLocationManager: void close()>();

        varReplacer361 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppLocationManager q> = varReplacer361;

     label2:
        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        if $r3 == null goto label3;

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        virtualinvoke $r3.<com.nielsen.app.sdk.AppConfig: void close()>();

        varReplacer362 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k> = varReplacer362;

     label3:
        $r4 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.e p>;

        if $r4 == null goto label4;

        $r4 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.e p>;

        $r5 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.e p>;

        $r6 = $r5.<com.nielsen.app.sdk.e: android.content.SharedPreferences$OnSharedPreferenceChangeListener b>;

        virtualinvoke $r4.<com.nielsen.app.sdk.e: void b(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>($r6);

        $r4 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.e p>;

        virtualinvoke $r4.<com.nielsen.app.sdk.e: void close()>();

        varReplacer360 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.e p> = varReplacer360;

     label4:
        $r7 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        if $r7 == null goto label5;

        varReplacer357 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j> = varReplacer357;

     label5:
        $r8 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppRequestManager o>;

        if $r8 == null goto label6;

        $r8 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppRequestManager o>;

        virtualinvoke $r8.<com.nielsen.app.sdk.AppRequestManager: void close()>();

        varReplacer358 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppRequestManager o> = varReplacer358;

     label6:
        $r9 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppScheduler m>;

        if $r9 == null goto label7;

        $r9 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppScheduler m>;

        varReplacer364 = "AppUpload";

        virtualinvoke $r9.<com.nielsen.app.sdk.AppScheduler: boolean b(java.lang.String)>(varReplacer364);

        $r9 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppScheduler m>;

        varReplacer365 = "AppPendingUpload";

        virtualinvoke $r9.<com.nielsen.app.sdk.AppScheduler: boolean b(java.lang.String)>(varReplacer365);

        varReplacer356 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppScheduler m> = varReplacer356;

     label7:
        $r10 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.b l>;

        if $r10 == null goto label8;

        $r10 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.b l>;

        virtualinvoke $r10.<com.nielsen.app.sdk.b: void close()>();

        varReplacer366 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.b l> = varReplacer366;

     label8:
        $r11 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        if $r11 == null goto label9;

        $r11 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        virtualinvoke $r11.<com.nielsen.app.sdk.f: void close()>();

        varReplacer363 = null;

        $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i> = varReplacer363;

     label9:
        return;
    }

    public boolean b(java.lang.String)
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String $r1, $r6;
        boolean $z0, $z1;
        com.nielsen.app.sdk.h $r2;
        com.nielsen.app.sdk.k $r3;
        java.lang.Object[] $r4;
        java.util.concurrent.locks.Lock $r5;
        com.nielsen.app.sdk.f $r7;
        java.lang.StringBuilder $r8;
        java.lang.Exception $r9;
        java.lang.Error $r10;
        java.lang.Throwable $r11;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: java.lang.String;

        $z0 = 0;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r2 == null goto label01;

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        if $r3 != null goto label02;

     label01:
        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi processId3Tag. Missing processor manager or util objects", $r4);

        return 0;

     label02:
        $z1 = virtualinvoke $r0.<com.nielsen.app.sdk.a: boolean o()>();

        if $z1 == 0 goto label03;

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(19, 69, "AppApi processId3Tag. App SDK is currently disabled", $r4);

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(73, "AppApi processId3Tag. App SDK is currently disabled", $r4);

        return 0;

     label03:
        $r5 = $r0.<com.nielsen.app.sdk.a: java.util.concurrent.locks.Lock g>;

     label04:
        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label05:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

     label06:
        $r6 = virtualinvoke $r2.<com.nielsen.app.sdk.h: java.lang.String d(java.lang.String)>($r1);

     label07:
        if $r6 == null goto label19;

     label08:
        $z1 = virtualinvoke $r6.<java.lang.String: boolean isEmpty()>();

     label09:
        if $z1 != 0 goto label19;

     label10:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

     label11:
        $z1 = virtualinvoke $r2.<com.nielsen.app.sdk.h: boolean c(java.lang.String)>($r6);

     label12:
        $z0 = $z1;

     label13:
        $r7 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

     label14:
        if $r7 == null goto label18;

        if $z1 != 0 goto label18;

     label15:
        $r4 = newarray (java.lang.Object)[1];

     label16:
        $r4[0] = $r6;

     label17:
        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(8, 69, "AppApi processId3Tag. Could not process (%s)", $r4);

     label18:
        $r5 = $r0.<com.nielsen.app.sdk.a: java.util.concurrent.locks.Lock g>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        return $z0;

     label19:
        $r4 = newarray (java.lang.Object)[1];

     label20:
        $r4[0] = $r1;

     label21:
        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(8, 69, "AppApi processId3Tag. Invalid ID3(%s)", $r4);

     label22:
        $r8 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendId3 Invalid Id3 tag detected ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        $r4 = newarray (java.lang.Object)[0];

     label25:
        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(73, $r6, $r4);

     label26:
        goto label18;

     label27:
        $r9 := @caughtexception;

        $z0 = 0;

     label28:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot process ID3 tag(");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - ");

        $r6 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(68, $r6, $r4);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,int,char,java.lang.String,java.lang.Object[])>($r9, 8, 69, "AppApi processId3Tag. ID3(%s)", $r4);

     label29:
        $r5 = $r0.<com.nielsen.app.sdk.a: java.util.concurrent.locks.Lock g>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        return $z0;

     label30:
        $r10 := @caughtexception;

        $z0 = 0;

     label31:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot process ID3 tag(");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - ");

        $r6 = virtualinvoke $r10.<java.lang.Error: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(68, $r6, $r4);

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,int,char,java.lang.String,java.lang.Object[])>($r10, 8, 69, "AppApi processId3Tag. ID3(%s)", $r4);

     label32:
        $r5 = $r0.<com.nielsen.app.sdk.a: java.util.concurrent.locks.Lock g>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        return $z0;

     label33:
        $r11 := @caughtexception;

        $r5 = $r0.<com.nielsen.app.sdk.a: java.util.concurrent.locks.Lock g>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r11;

     label34:
        $r10 := @caughtexception;

        $z0 = $z1;

        goto label31;

     label35:
        $r9 := @caughtexception;

        $z0 = $z1;

        goto label28;

        catch java.lang.Exception from label03 to label07 with label27;
        catch java.lang.Exception from label08 to label09 with label27;
        catch java.lang.Exception from label10 to label12 with label27;
        catch java.lang.Error from label03 to label07 with label30;
        catch java.lang.Error from label08 to label09 with label30;
        catch java.lang.Error from label10 to label12 with label30;
        catch java.lang.Throwable from label04 to label05 with label33;
        catch java.lang.Throwable from label06 to label07 with label33;
        catch java.lang.Throwable from label08 to label09 with label33;
        catch java.lang.Throwable from label11 to label12 with label33;
        catch java.lang.Exception from label13 to label14 with label35;
        catch java.lang.Exception from label15 to label18 with label35;
        catch java.lang.Error from label13 to label14 with label34;
        catch java.lang.Error from label15 to label16 with label34;
        catch java.lang.Error from label17 to label18 with label34;
        catch java.lang.Throwable from label17 to label18 with label33;
        catch java.lang.Exception from label19 to label22 with label27;
        catch java.lang.Exception from label23 to label26 with label27;
        catch java.lang.Error from label19 to label20 with label30;
        catch java.lang.Error from label21 to label26 with label30;
        catch java.lang.Throwable from label21 to label22 with label33;
        catch java.lang.Throwable from label23 to label24 with label33;
        catch java.lang.Throwable from label25 to label26 with label33;
        catch java.lang.Throwable from label28 to label29 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
    }

    public boolean c()
    {
        com.nielsen.app.sdk.a $r0;
        boolean z0;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        z0 = $r0.<com.nielsen.app.sdk.a: boolean e>;

        return z0;
    }

    public boolean c(java.lang.String)
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String $r1, varReplacer12048, varReplacer12052, varReplacer12055, varReplacer12057;
        com.nielsen.app.sdk.h $r2;
        com.nielsen.app.sdk.k $r3;
        java.lang.Object[] $r4;
        boolean $z0;
        long $l0;
        int varReplacer12046, varReplacer12047, varReplacer12049, varReplacer12050, varReplacer12051, varReplacer12053, varReplacer12054, varReplacer12056, varReplacer12058, varReplacer12059;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r2 == null goto label1;

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        if $r3 != null goto label2;

     label1:
        $r4 = newarray (java.lang.Object)[0];

        varReplacer12046 = 16;

        varReplacer12047 = 69;

        varReplacer12048 = "AppApi sessionStart. Missing processor manager or utilities objects";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer12046, varReplacer12047, varReplacer12048, $r4);

        varReplacer12058 = 0;

        return varReplacer12058;

     label2:
        $z0 = virtualinvoke $r0.<com.nielsen.app.sdk.a: boolean o()>();

        if $z0 == 0 goto label3;

        $r4 = newarray (java.lang.Object)[0];

        varReplacer12053 = 19;

        varReplacer12054 = 69;

        varReplacer12055 = "AppApi sessionStart. App SDK is currently disabled";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer12053, varReplacer12054, varReplacer12055, $r4);

        $r4 = newarray (java.lang.Object)[0];

        varReplacer12056 = 73;

        varReplacer12057 = "AppApi sessionStart. App SDK is currently disabled";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer12056, varReplacer12057, $r4);

        varReplacer12049 = 0;

        return varReplacer12049;

     label3:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $z0 = virtualinvoke $r2.<com.nielsen.app.sdk.h: boolean e(java.lang.String)>($r1);

        if $z0 != 0 goto label5;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r1;

        varReplacer12050 = 4;

        varReplacer12051 = 69;

        varReplacer12052 = "AppApi sessionStart. Could not process channel info. JSON(%)";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer12050, varReplacer12051, varReplacer12052, $r4);

     label4:
        return $z0;

     label5:
        $l0 = staticinvoke <com.nielsen.app.sdk.k: long o()>();

        $r0.<com.nielsen.app.sdk.a: long b> = $l0;

        varReplacer12059 = 0;

        $r0.<com.nielsen.app.sdk.a: boolean c> = varReplacer12059;

        goto label4;
    }

    public boolean d()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.AppConfig $r1;
        com.nielsen.app.sdk.h $r2;
        java.lang.Object[] $r3;
        boolean $z0, $z1;
        com.nielsen.app.sdk.d $r4;
        java.lang.Throwable $r5;
        com.nielsen.app.sdk.f $r6;
        com.nielsen.app.sdk.AppEventNotifier $r7;
        int varReplacer10849, varReplacer10850, varReplacer10851, varReplacer10853, varReplacer10854, varReplacer10856, varReplacer10859, varReplacer10860, varReplacer10861;
        java.lang.String varReplacer10852, varReplacer10855, varReplacer10857, varReplacer10858, varReplacer10862;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        entermonitor $r0;

     label01:
        varReplacer10849 = 0;

        $r0.<com.nielsen.app.sdk.a: boolean f> = varReplacer10849;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        if $r1 == null goto label02;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r2 != null goto label05;

     label02:
        $r3 = newarray (java.lang.Object)[0];

        varReplacer10850 = 16;

        varReplacer10851 = 69;

        varReplacer10852 = "AppApi suspend. Missing configuration and/or processor management objects";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer10850, varReplacer10851, varReplacer10852, $r3);

     label03:
        $z0 = $r0.<com.nielsen.app.sdk.a: boolean f>;

     label04:
        exitmonitor $r0;

        return $z0;

     label05:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $z0 = virtualinvoke $r2.<com.nielsen.app.sdk.h: boolean d()>();

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        $r4 = virtualinvoke $r1.<com.nielsen.app.sdk.AppConfig: com.nielsen.app.sdk.d a()>();

        if $r4 == null goto label11;

        varReplacer10858 = "nol_backgroundMode";

        varReplacer10859 = 0;

        $z1 = virtualinvoke $r4.<com.nielsen.app.sdk.d: boolean a(java.lang.String,boolean)>(varReplacer10858, varReplacer10859);

        if $z1 == 0 goto label08;

        if $z0 == 0 goto label08;

        varReplacer10860 = 1;

        $r0.<com.nielsen.app.sdk.a: boolean f> = varReplacer10860;

     label06:
        goto label03;

     label07:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

     label08:
        $r6 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        if $r6 == null goto label09;

        $r6 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        $r3 = newarray (java.lang.Object)[0];

        varReplacer10861 = 2;

        varReplacer10862 = "App SDK closed while application goes into background";

        virtualinvoke $r6.<com.nielsen.app.sdk.f: void a(int,java.lang.String,java.lang.Object[])>(varReplacer10861, varReplacer10862, $r3);

     label09:
        $r7 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppEventNotifier h>;

        if $r7 == null goto label10;

        $r7 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppEventNotifier h>;

        $r3 = newarray (java.lang.Object)[0];

        varReplacer10856 = 2;

        varReplacer10857 = "App SDK closed while application goes into background";

        virtualinvoke $r7.<com.nielsen.app.sdk.AppEventNotifier: void notifyEvent(int,java.lang.String,java.lang.Object[])>(varReplacer10856, varReplacer10857, $r3);

     label10:
        virtualinvoke $r0.<com.nielsen.app.sdk.a: void b()>();

        goto label03;

     label11:
        $r3 = newarray (java.lang.Object)[0];

        varReplacer10853 = 17;

        varReplacer10854 = 69;

        varReplacer10855 = "AppApi suspend. Missing configuration dictionary object";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer10853, varReplacer10854, varReplacer10855, $r3);

     label12:
        goto label03;

        catch java.lang.Throwable from label01 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label12 with label07;
    }

    public boolean d(java.lang.String)
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        boolean $z0;
        com.nielsen.app.sdk.AppConfig $r3;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        if $r3 != null goto label1;

        $r2 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi userOptOut. There is no config object", $r2);

        return 0;

     label1:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r1;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(73, "Response from Opt In/Out web page (%s)", $r2);

        $r3 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        $z0 = virtualinvoke $r3.<com.nielsen.app.sdk.AppConfig: boolean a(java.lang.String)>($r1);

        return $z0;
    }

    public boolean e()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.h $r1;
        boolean $z0;
        int varReplacer10848;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $z0 = virtualinvoke $r1.<com.nielsen.app.sdk.h: boolean i()>();

        return $z0;

     label1:
        varReplacer10848 = 0;

        return varReplacer10848;
    }

    public boolean e(java.lang.String)
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String $r1, $r6;
        com.nielsen.app.sdk.h $r2;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.Error $r7;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 := @parameter0: java.lang.String;

     label01:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

     label02:
        if $r2 == null goto label06;

     label03:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $z0 = virtualinvoke $r2.<com.nielsen.app.sdk.h: boolean j(java.lang.String)>($r1);

     label04:
        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(73, "Detected updateOTT notification from the app.", $r3);

     label05:
        return $z0;

     label06:
        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi updateOTT. Missing processor manager.", $r3);

     label07:
        return 0;

     label08:
        $r4 := @caughtexception;

        $z0 = 0;

     label09:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot process app updateOTT (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - ");

        $r6 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(68, $r6, $r3);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,int,char,java.lang.String,java.lang.Object[])>($r4, 23, 69, "AppApi updateOTT. ottInfo (%s)", $r3);

        return $z0;

     label10:
        $r7 := @caughtexception;

        $z0 = 0;

     label11:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot process app updateOTT (");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") - ");

        $r6 = virtualinvoke $r7.<java.lang.Error: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(68, $r6, $r3);

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r1;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(java.lang.Throwable,int,char,java.lang.String,java.lang.Object[])>($r7, 23, 69, "AppApi updateOTT. ottInfo (%s)", $r3);

        return $z0;

     label12:
        $r7 := @caughtexception;

        goto label11;

     label13:
        $r4 := @caughtexception;

        goto label09;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Error from label01 to label02 with label10;
        catch java.lang.Error from label03 to label04 with label10;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Error from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Error from label06 to label07 with label10;
    }

    public android.util.Pair f()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.h $r1;
        java.lang.Object[] $r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer11914, varReplacer11916, varReplacer11918, varReplacer11921, varReplacer11925;
        com.nielsen.app.sdk.f $r5;
        com.nielsen.app.sdk.AppEventNotifier $r6;
        android.util.Pair $r7;
        java.lang.Boolean $r8, $r9;
        int varReplacer11912, varReplacer11913, varReplacer11917, varReplacer11919, varReplacer11920, varReplacer11922, varReplacer11923, varReplacer11924;
        null_type varReplacer11915;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r1 != null goto label1;

        $r2 = newarray (java.lang.Object)[0];

        varReplacer11912 = 16;

        varReplacer11913 = 69;

        varReplacer11914 = "AppApi stop. Missing processor manager or utilities objects";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer11912, varReplacer11913, varReplacer11914, $r2);

        varReplacer11915 = null;

        return varReplacer11915;

     label1:
        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $z0 = virtualinvoke $r1.<com.nielsen.app.sdk.h: boolean e()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer11916 = "Session stopping ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer11916);

        if $z0 == 0 goto label7;

        $r4 = "SUCCEEDED";

     label2:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = newarray (java.lang.Object)[0];

        varReplacer11922 = 73;

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(varReplacer11922, $r4, $r2);

        $z1 = $r0.<com.nielsen.app.sdk.a: boolean f>;

        if $z1 == 0 goto label8;

        if $z0 == 0 goto label8;

        $r5 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        if $r5 == null goto label3;

        $r5 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        $r2 = newarray (java.lang.Object)[0];

        varReplacer11917 = 2;

        varReplacer11918 = "App SDK closed when playing back ends in background";

        virtualinvoke $r5.<com.nielsen.app.sdk.f: void a(int,java.lang.String,java.lang.Object[])>(varReplacer11917, varReplacer11918, $r2);

     label3:
        $r6 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppEventNotifier h>;

        if $r6 == null goto label4;

        $r6 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppEventNotifier h>;

        $r2 = newarray (java.lang.Object)[0];

        varReplacer11920 = 2;

        varReplacer11921 = "App SDK closed when playing back ends in background";

        virtualinvoke $r6.<com.nielsen.app.sdk.AppEventNotifier: void notifyEvent(int,java.lang.String,java.lang.Object[])>(varReplacer11920, varReplacer11921, $r2);

     label4:
        virtualinvoke $r0.<com.nielsen.app.sdk.a: void b()>();

        varReplacer11919 = 0;

        $r0.<com.nielsen.app.sdk.a: boolean f> = varReplacer11919;

        $z1 = 1;

     label5:
        if $z0 != 0 goto label6;

        $r2 = newarray (java.lang.Object)[0];

        varReplacer11923 = 22;

        varReplacer11924 = 69;

        varReplacer11925 = "AppApi stop. App SDK is failed to stop";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer11923, varReplacer11924, varReplacer11925, $r2);

     label6:
        $r7 = new android.util.Pair;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        specialinvoke $r7.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r8, $r9);

        return $r7;

     label7:
        $r4 = "FAILED";

        goto label2;

     label8:
        $z1 = 0;

        goto label5;
    }

    public boolean g()
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.Object[] $r1;
        boolean $z0;
        com.nielsen.app.sdk.h $r2;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        $z0 = virtualinvoke $r2.<com.nielsen.app.sdk.h: boolean f()>();

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(73, "Detected channel Change or content playback ended.", $r1);

        return $z0;

     label1:
        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi end. Missing processor manager.", $r1);

        return 0;
    }

    public java.lang.String i()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.AppEventNotifier $r1;
        org.json.JSONObject $r2;
        java.lang.String $r3;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppEventNotifier h>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppEventNotifier h>;

        $r2 = virtualinvoke $r1.<com.nielsen.app.sdk.AppEventNotifier: org.json.JSONObject getLastEvent()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        return $r3;

     label1:
        return "";
    }

    public java.lang.String j()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.f $r1;
        org.json.JSONObject $r2;
        java.lang.String $r3;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        $r2 = virtualinvoke $r1.<com.nielsen.app.sdk.f: org.json.JSONObject a()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        return $r3;

     label1:
        return null;
    }

    public java.lang.String l()
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String $r1;
        com.nielsen.app.sdk.AppConfig $r2;
        java.lang.Object[] $r3;
        boolean $z0;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 = null;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        if $r2 != null goto label3;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi getNielsenId. Missing configuration object", $r3);

     label1:
        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label2:
        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(15, 69, "AppApi getNielsenId. Could not generate NUID. Returned empty string", $r3);

        return $r1;

     label3:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        $r1 = virtualinvoke $r2.<com.nielsen.app.sdk.AppConfig: java.lang.String d()>();

        goto label1;

     label4:
        return $r1;
    }

    public java.lang.String m()
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String $r1;
        com.nielsen.app.sdk.AppConfig $r2;
        java.lang.Object[] $r3;
        boolean $z0;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 = null;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        if $r2 != null goto label3;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi getDeviceId. Missing configuration object", $r3);

     label1:
        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label2:
        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(14, 69, "AppApi getDeviceId. Could not generate DeviceId. Returned empty string", $r3);

        return $r1;

     label3:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        $r1 = virtualinvoke $r2.<com.nielsen.app.sdk.AppConfig: java.lang.String c()>();

        goto label1;

     label4:
        return $r1;
    }

    public java.lang.String n()
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.String $r1;
        com.nielsen.app.sdk.AppConfig $r2;
        java.lang.Object[] $r3;
        boolean $z0;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 = null;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        if $r2 != null goto label3;

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(73, "Cannot retreive optOutUrlString; no config object", $r3);

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi optOutUrlString. Missing configuration object", $r3);

     label1:
        if $r1 == null goto label2;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label2:
        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(char,java.lang.String,java.lang.Object[])>(73, "Cannot retreive optOutUrlString; no config received yet", $r3);

        $r3 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi optOutUrlString. Returned empty string", $r3);

        return $r1;

     label3:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        $r1 = virtualinvoke $r2.<com.nielsen.app.sdk.AppConfig: java.lang.String f()>();

        goto label1;

     label4:
        return $r1;
    }

    public boolean o()
    {
        com.nielsen.app.sdk.a $r0;
        boolean $z0;
        com.nielsen.app.sdk.k $r1;
        java.lang.Object[] $r2;
        int varReplacer9365, varReplacer9366, varReplacer9367;
        java.lang.String varReplacer9368;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        if $r1 != null goto label1;

        $r2 = newarray (java.lang.Object)[0];

        varReplacer9366 = 16;

        varReplacer9367 = 69;

        varReplacer9368 = "AppApi getDisabledApi. Missing utilities object";

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(varReplacer9366, varReplacer9367, varReplacer9368, $r2);

        varReplacer9365 = 1;

        return varReplacer9365;

     label1:
        $r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        $z0 = virtualinvoke $r1.<com.nielsen.app.sdk.k: boolean i()>();

        return $z0;
    }

    public boolean p()
    {
        com.nielsen.app.sdk.a $r0;
        java.lang.Object[] $r1;
        boolean $z0;
        com.nielsen.app.sdk.k $r2;

        $r0 := @this: com.nielsen.app.sdk.a;

        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        if $r2 != null goto label1;

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<com.nielsen.app.sdk.a: void a(int,char,java.lang.String,java.lang.Object[])>(16, 69, "AppApi getUserOptOutApi. Missing utilities object", $r1);

        return 0;

     label1:
        $r2 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        $z0 = virtualinvoke $r2.<com.nielsen.app.sdk.k: boolean k()>();

        return $z0;
    }

    public com.nielsen.app.sdk.AppEventNotifier q()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.AppEventNotifier r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppEventNotifier h>;

        return r1;
    }

    public com.nielsen.app.sdk.f r()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.f r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.f i>;

        return r1;
    }

    public com.nielsen.app.sdk.k s()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.k r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.k j>;

        return r1;
    }

    public com.nielsen.app.sdk.AppConfig t()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.AppConfig r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppConfig k>;

        return r1;
    }

    public com.nielsen.app.sdk.b u()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.b r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.b l>;

        return r1;
    }

    public com.nielsen.app.sdk.AppScheduler v()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.AppScheduler r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppScheduler m>;

        return r1;
    }

    public com.nielsen.app.sdk.h w()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.h r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h n>;

        return r1;
    }

    public com.nielsen.app.sdk.AppRequestManager x()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.AppRequestManager r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppRequestManager o>;

        return r1;
    }

    public com.nielsen.app.sdk.e y()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.e r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.e p>;

        return r1;
    }

    public com.nielsen.app.sdk.AppLocationManager z()
    {
        com.nielsen.app.sdk.a $r0;
        com.nielsen.app.sdk.AppLocationManager r1;

        nop;

        $r0 := @this: com.nielsen.app.sdk.a;

        r1 = $r0.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.AppLocationManager q>;

        return r1;
    }
}
