public class b.v extends java.lang.Object implements java.lang.Cloneable
{
    private static final java.util.List A;
    private static final java.util.List z;
    final b.n a;
    final java.net.Proxy b;
    final java.util.List c;
    final java.util.List d;
    final java.util.List e;
    final java.util.List f;
    final java.net.ProxySelector g;
    final b.m h;
    final b.c i;
    final b.a.a.e j;
    final javax.net.SocketFactory k;
    final javax.net.ssl.SSLSocketFactory l;
    final b.a.g.b m;
    final javax.net.ssl.HostnameVerifier n;
    final b.g o;
    final b.b p;
    final b.b q;
    final b.j r;
    final b.o s;
    final boolean t;
    final boolean u;
    final boolean v;
    final int w;
    final int x;
    final int y;

    static void <clinit>()
    {
        b.w[] $r0;
        b.w $r1;
        java.util.List $r2;
        b.k[] $r3;
        b.k $r4;
        b.v$1 $r5;

        nop;

        $r0 = newarray (b.w)[3];

        $r1 = <b.w: b.w HTTP_2>;

        $r0[0] = $r1;

        $r1 = <b.w: b.w SPDY_3>;

        $r0[1] = $r1;

        $r1 = <b.w: b.w HTTP_1_1>;

        $r0[2] = $r1;

        $r2 = staticinvoke <b.a.c: java.util.List immutableList(java.lang.Object[])>($r0);

        <b.v: java.util.List z> = $r2;

        $r3 = newarray (b.k)[3];

        $r4 = <b.k: b.k a>;

        $r3[0] = $r4;

        $r4 = <b.k: b.k b>;

        $r3[1] = $r4;

        $r4 = <b.k: b.k c>;

        $r3[2] = $r4;

        $r2 = staticinvoke <b.a.c: java.util.List immutableList(java.lang.Object[])>($r3);

        <b.v: java.util.List A> = $r2;

        $r5 = new b.v$1;

        specialinvoke $r5.<b.v$1: void <init>()>();

        <b.a.a: b.a.a a> = $r5;

        return;
    }

    public void <init>()
    {
        b.v $r0;
        b.v$a $r1;

        $r0 := @this: b.v;

        $r1 = new b.v$a;

        specialinvoke $r1.<b.v$a: void <init>()>();

        specialinvoke $r0.<b.v: void <init>(b.v$a)>($r1);

        return;
    }

    private void <init>(b.v$a)
    {
        b.v $r0;
        b.v$a $r1;
        b.n $r2;
        java.net.Proxy $r3;
        java.util.List $r4;
        java.net.ProxySelector $r5;
        b.m $r6;
        b.c $r7;
        b.a.a.e $r8;
        javax.net.SocketFactory $r9;
        java.util.Iterator $r10;
        boolean $z0, $z1;
        java.lang.Object $r11;
        b.k $r12;
        javax.net.ssl.SSLSocketFactory $r13;
        b.a.g.b $r14, $r17;
        javax.net.ssl.HostnameVerifier $r15;
        b.g $r16, $r18;
        b.b $r19;
        b.j $r20;
        b.o $r21;
        int $i0;
        javax.net.ssl.X509TrustManager $r22;

        nop;

        $r0 := @this: b.v;

        $r1 := @parameter0: b.v$a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<b.v$a: b.n a>;

        $r0.<b.v: b.n a> = $r2;

        $r3 = $r1.<b.v$a: java.net.Proxy b>;

        $r0.<b.v: java.net.Proxy b> = $r3;

        $r4 = $r1.<b.v$a: java.util.List c>;

        $r0.<b.v: java.util.List c> = $r4;

        $r4 = $r1.<b.v$a: java.util.List d>;

        $r0.<b.v: java.util.List d> = $r4;

        $r4 = $r1.<b.v$a: java.util.List e>;

        $r4 = staticinvoke <b.a.c: java.util.List immutableList(java.util.List)>($r4);

        $r0.<b.v: java.util.List e> = $r4;

        $r4 = $r1.<b.v$a: java.util.List f>;

        $r4 = staticinvoke <b.a.c: java.util.List immutableList(java.util.List)>($r4);

        $r0.<b.v: java.util.List f> = $r4;

        $r5 = $r1.<b.v$a: java.net.ProxySelector g>;

        $r0.<b.v: java.net.ProxySelector g> = $r5;

        $r6 = $r1.<b.v$a: b.m h>;

        $r0.<b.v: b.m h> = $r6;

        $r7 = $r1.<b.v$a: b.c i>;

        $r0.<b.v: b.c i> = $r7;

        $r8 = $r1.<b.v$a: b.a.a.e j>;

        $r0.<b.v: b.a.a.e j> = $r8;

        $r9 = $r1.<b.v$a: javax.net.SocketFactory k>;

        $r0.<b.v: javax.net.SocketFactory k> = $r9;

        $r4 = $r0.<b.v: java.util.List d>;

        $r10 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = 0;

     label01:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (b.k) $r11;

        if $z0 != 0 goto label02;

        $z0 = virtualinvoke $r12.<b.k: boolean isTls()>();

        if $z0 == 0 goto label04;

     label02:
        $z0 = 1;

     label03:
        goto label01;

     label04:
        $z0 = 0;

        goto label03;

     label05:
        $r13 = $r1.<b.v$a: javax.net.ssl.SSLSocketFactory l>;

        if $r13 != null goto label06;

        if $z0 != 0 goto label09;

     label06:
        $r13 = $r1.<b.v$a: javax.net.ssl.SSLSocketFactory l>;

        $r0.<b.v: javax.net.ssl.SSLSocketFactory l> = $r13;

        $r14 = $r1.<b.v$a: b.a.g.b m>;

        $r0.<b.v: b.a.g.b m> = $r14;

     label07:
        $r15 = $r1.<b.v$a: javax.net.ssl.HostnameVerifier n>;

        $r0.<b.v: javax.net.ssl.HostnameVerifier n> = $r15;

        $r16 = $r1.<b.v$a: b.g o>;

        $r14 = $r0.<b.v: b.a.g.b m>;

        $r17 = $r16.<b.g: b.a.g.b c>;

        if $r17 == $r14 goto label10;

        $r18 = new b.g;

        $r4 = $r16.<b.g: java.util.List b>;

        specialinvoke $r18.<b.g: void <init>(java.util.List,b.a.g.b)>($r4, $r14);

     label08:
        $r0.<b.v: b.g o> = $r18;

        $r19 = $r1.<b.v$a: b.b p>;

        $r0.<b.v: b.b p> = $r19;

        $r19 = $r1.<b.v$a: b.b q>;

        $r0.<b.v: b.b q> = $r19;

        $r20 = $r1.<b.v$a: b.j r>;

        $r0.<b.v: b.j r> = $r20;

        $r21 = $r1.<b.v$a: b.o s>;

        $r0.<b.v: b.o s> = $r21;

        $z0 = $r1.<b.v$a: boolean t>;

        $r0.<b.v: boolean t> = $z0;

        $z0 = $r1.<b.v$a: boolean u>;

        $r0.<b.v: boolean u> = $z0;

        $z0 = $r1.<b.v$a: boolean v>;

        $r0.<b.v: boolean v> = $z0;

        $i0 = $r1.<b.v$a: int w>;

        $r0.<b.v: int w> = $i0;

        $i0 = $r1.<b.v$a: int x>;

        $r0.<b.v: int x> = $i0;

        $i0 = $r1.<b.v$a: int y>;

        $r0.<b.v: int y> = $i0;

        return;

     label09:
        $r22 = staticinvoke <b.v: javax.net.ssl.X509TrustManager c()>();

        $r13 = staticinvoke <b.v: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>($r22);

        $r0.<b.v: javax.net.ssl.SSLSocketFactory l> = $r13;

        $r14 = staticinvoke <b.a.g.b: b.a.g.b get(javax.net.ssl.X509TrustManager)>($r22);

        $r0.<b.v: b.a.g.b m> = $r14;

        goto label07;

     label10:
        $r18 = $r16;

        goto label08;
    }

    void <init>(b.v$a, byte)
    {
        b.v $r0;
        b.v$a $r1;
        byte $b0;

        nop;

        $r0 := @this: b.v;

        $r1 := @parameter0: b.v$a;

        $b0 := @parameter1: byte;

        specialinvoke $r0.<b.v: void <init>(b.v$a)>($r1);

        return;
    }

    static java.util.List a()
    {
        java.util.List r0;

        nop;

        r0 = <b.v: java.util.List z>;

        return r0;
    }

    private static javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
    {
        javax.net.ssl.X509TrustManager $r0;
        javax.net.ssl.SSLContext $r1;
        java.lang.Object[] $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.lang.Throwable $r4;
        java.lang.AssertionError r5;
        javax.net.ssl.TrustManager[] r6;
        null_type varReplacer4115, varReplacer4116;
        java.lang.String varReplacer4117;

        nop;

        $r0 := @parameter0: javax.net.ssl.X509TrustManager;

     label1:
        varReplacer4117 = "TLS";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4117);

     label2:
        $r2 = newarray (javax.net.ssl.TrustManager)[1];

        $r2[0] = $r0;

        r6 = (javax.net.ssl.TrustManager[]) $r2;

     label3:
        varReplacer4115 = null;

        varReplacer4116 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4115, r6, varReplacer4115);

        $r3 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        r5 = new java.lang.AssertionError;

        specialinvoke r5.<java.lang.AssertionError: void <init>()>();

        throw r5;

        catch java.security.GeneralSecurityException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label5;
    }

    static java.util.List b()
    {
        java.util.List r0;

        nop;

        r0 = <b.v: java.util.List A>;

        return r0;
    }

    private static javax.net.ssl.X509TrustManager c()
    {
        java.lang.String $r0, varReplacer4119;
        javax.net.ssl.TrustManagerFactory $r1;
        javax.net.ssl.TrustManager[] $r2;
        int $i0;
        javax.net.ssl.TrustManager $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.Throwable $r6;
        java.lang.AssertionError $r7;
        javax.net.ssl.X509TrustManager $r8;
        null_type varReplacer4118;

     label1:
        nop;

        $r0 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0);

        varReplacer4118 = null;

        virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer4118);

        $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label2:
        $i0 = lengthof $r2;

        if $i0 != 1 goto label3;

        $r3 = $r2[0];

        $z0 = $r3 instanceof javax.net.ssl.X509TrustManager;

        if $z0 != 0 goto label7;

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

     label4:
        varReplacer4119 = "Unexpected default trust managers:";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4119);

        $r0 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

     label5:
        throw $r4;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label7:
        $r3 = $r2[0];

        $r8 = (javax.net.ssl.X509TrustManager) $r3;

        return $r8;

        catch java.security.GeneralSecurityException from label1 to label2 with label6;
        catch java.security.GeneralSecurityException from label4 to label5 with label6;
    }

    public b.b authenticator()
    {
        b.v $r0;
        b.b r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: b.b q>;

        return r1;
    }

    public b.g certificatePinner()
    {
        b.v $r0;
        b.g r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: b.g o>;

        return r1;
    }

    public int connectTimeoutMillis()
    {
        b.v $r0;
        int i0;

        $r0 := @this: b.v;

        i0 = $r0.<b.v: int w>;

        return i0;
    }

    public b.j connectionPool()
    {
        b.v $r0;
        b.j r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: b.j r>;

        return r1;
    }

    public java.util.List connectionSpecs()
    {
        b.v $r0;
        java.util.List r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: java.util.List d>;

        return r1;
    }

    public b.m cookieJar()
    {
        b.v $r0;
        b.m r1;

        nop;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: b.m h>;

        return r1;
    }

    public b.n dispatcher()
    {
        b.v $r0;
        b.n r1;

        nop;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: b.n a>;

        return r1;
    }

    public b.o dns()
    {
        b.v $r0;
        b.o r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: b.o s>;

        return r1;
    }

    public boolean followRedirects()
    {
        b.v $r0;
        boolean z0;

        $r0 := @this: b.v;

        z0 = $r0.<b.v: boolean u>;

        return z0;
    }

    public boolean followSslRedirects()
    {
        b.v $r0;
        boolean z0;

        $r0 := @this: b.v;

        z0 = $r0.<b.v: boolean t>;

        return z0;
    }

    public javax.net.ssl.HostnameVerifier hostnameVerifier()
    {
        b.v $r0;
        javax.net.ssl.HostnameVerifier r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: javax.net.ssl.HostnameVerifier n>;

        return r1;
    }

    public java.util.List interceptors()
    {
        b.v $r0;
        java.util.List r1;

        nop;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: java.util.List e>;

        return r1;
    }

    public java.util.List networkInterceptors()
    {
        b.v $r0;
        java.util.List r1;

        nop;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: java.util.List f>;

        return r1;
    }

    public b.e newCall(b.y)
    {
        b.v $r0;
        b.y $r1;
        b.x $r2;

        nop;

        $r0 := @this: b.v;

        $r1 := @parameter0: b.y;

        $r2 = new b.x;

        specialinvoke $r2.<b.x: void <init>(b.v,b.y)>($r0, $r1);

        return $r2;
    }

    public java.util.List protocols()
    {
        b.v $r0;
        java.util.List r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: java.util.List c>;

        return r1;
    }

    public java.net.Proxy proxy()
    {
        b.v $r0;
        java.net.Proxy r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: java.net.Proxy b>;

        return r1;
    }

    public b.b proxyAuthenticator()
    {
        b.v $r0;
        b.b r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: b.b p>;

        return r1;
    }

    public java.net.ProxySelector proxySelector()
    {
        b.v $r0;
        java.net.ProxySelector r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: java.net.ProxySelector g>;

        return r1;
    }

    public int readTimeoutMillis()
    {
        b.v $r0;
        int i0;

        $r0 := @this: b.v;

        i0 = $r0.<b.v: int x>;

        return i0;
    }

    public boolean retryOnConnectionFailure()
    {
        b.v $r0;
        boolean z0;

        $r0 := @this: b.v;

        z0 = $r0.<b.v: boolean v>;

        return z0;
    }

    public javax.net.SocketFactory socketFactory()
    {
        b.v $r0;
        javax.net.SocketFactory r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: javax.net.SocketFactory k>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory sslSocketFactory()
    {
        b.v $r0;
        javax.net.ssl.SSLSocketFactory r1;

        $r0 := @this: b.v;

        r1 = $r0.<b.v: javax.net.ssl.SSLSocketFactory l>;

        return r1;
    }

    public int writeTimeoutMillis()
    {
        b.v $r0;
        int i0;

        $r0 := @this: b.v;

        i0 = $r0.<b.v: int y>;

        return i0;
    }
}
