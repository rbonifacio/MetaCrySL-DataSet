public class com.maptoapp.lib.util.AssetHelper extends java.lang.Object
{
    private static final java.lang.String COM_MAPTOAPP_LIB_APP_FAVES_SECTION;
    public static final int CONNECTION_TIMEOUT;
    private static final int DEFAULT_IMAGE_SIZE;
    private static final java.lang.String TAG;
    private static final java.util.regex.Pattern densityNumberPattern;
    private static java.lang.Boolean hasFavouritesCachedValued;
    private static com.maptoapp.lib.util.AssetHelper helper;
    private static final java.util.regex.Pattern urlDensityPattern;
    private java.lang.String cacheRoot;
    private android.net.ConnectivityManager connectivityManager;
    private float density;
    private java.lang.String[] densityAwareUrls;

    static void <clinit>()
    {
        com.maptoapp.lib.widget.menu.M2AMenuConstants$MENU_SECTIONS_CONFIG_MAPPING $r0;
        java.lang.String $r1, varReplacer360, varReplacer361;
        java.util.regex.Pattern $r2;

        nop;

        $r0 = <com.maptoapp.lib.widget.menu.M2AMenuConstants$MENU_SECTIONS_CONFIG_MAPPING: com.maptoapp.lib.widget.menu.M2AMenuConstants$MENU_SECTIONS_CONFIG_MAPPING faves>;

        $r1 = virtualinvoke $r0.<com.maptoapp.lib.widget.menu.M2AMenuConstants$MENU_SECTIONS_CONFIG_MAPPING: java.lang.String name()>();

        <com.maptoapp.lib.util.AssetHelper: java.lang.String COM_MAPTOAPP_LIB_APP_FAVES_SECTION> = $r1;

        varReplacer360 = "=s[\\d]+(\\.[\\w]+)?$";

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(varReplacer360);

        <com.maptoapp.lib.util.AssetHelper: java.util.regex.Pattern urlDensityPattern> = $r2;

        varReplacer361 = "[\\d]+";

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(varReplacer361);

        <com.maptoapp.lib.util.AssetHelper: java.util.regex.Pattern densityNumberPattern> = $r2;

        return;
    }

    private void <init>(android.content.Context)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.String[] $r3;
        android.util.DisplayMetrics $r4;
        float $f0;
        java.lang.String $r5, varReplacer397;
        java.lang.Object $r6;
        android.net.ConnectivityManager $r7;
        int varReplacer398;

        nop;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        varReplacer398 = 2131230721;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(varReplacer398);

        $r0.<com.maptoapp.lib.util.AssetHelper: java.lang.String[] densityAwareUrls> = $r3;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r4.<android.util.DisplayMetrics: float density>;

        $r0.<com.maptoapp.lib.util.AssetHelper: float density> = $f0;

        $r5 = specialinvoke $r0.<com.maptoapp.lib.util.AssetHelper: java.lang.String getCacheRoot(android.content.Context)>($r1);

        $r0.<com.maptoapp.lib.util.AssetHelper: java.lang.String cacheRoot> = $r5;

        varReplacer397 = "connectivity";

        $r6 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer397);

        $r7 = (android.net.ConnectivityManager) $r6;

        $r0.<com.maptoapp.lib.util.AssetHelper: android.net.ConnectivityManager connectivityManager> = $r7;

        return;
    }

    public static java.lang.String assetToString(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer789, varReplacer790, varReplacer791;
        char[] $r2;
        java.lang.Throwable $r3;
        java.io.BufferedReader $r4, r12;
        java.io.StringWriter $r5, r10;
        android.content.res.AssetManager $r6;
        java.io.InputStream $r7;
        java.io.InputStreamReader $r8, r11;
        int $i0, varReplacer792;
        java.lang.StringBuilder $r9, r13;
        java.io.IOException r14;
        null_type varReplacer793;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r10 = new java.io.StringWriter;

        $r5 = r10;

        specialinvoke r10.<java.io.StringWriter: void <init>()>();

     label01:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r7 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label02:
        $r2 = newarray (char)[1024];

        r12 = new java.io.BufferedReader;

        $r4 = r12;

        r11 = new java.io.InputStreamReader;

        $r8 = r11;

     label03:
        varReplacer789 = "UTF-8";

        specialinvoke r11.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r7, varReplacer789);

        specialinvoke r12.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

     label04:
        $i0 = virtualinvoke $r4.<java.io.Reader: int read(char[])>($r2);

     label05:
        if $i0 == -1 goto label09;

     label06:
        varReplacer792 = 0;

        virtualinvoke $r5.<java.io.StringWriter: void write(char[],int,int)>($r2, varReplacer792, $i0);

     label07:
        goto label04;

     label08:
        $r3 := @caughtexception;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        varReplacer791 = "Error reading asset: ";

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer791);

        r14 = (java.io.IOException) $r3;

        $r1 = virtualinvoke r14.<java.io.IOException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer790 = "Asset";

        staticinvoke <com.maptoapp.m2acore.helpers.M2ALog: void e(java.lang.String,java.lang.String)>(varReplacer790, $r1);

        varReplacer793 = null;

        return varReplacer793;

     label09:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

        $r1 = virtualinvoke $r5.<java.io.StringWriter: java.lang.String toString()>();

     label10:
        return $r1;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.io.IOException from label03 to label05 with label08;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label09 to label10 with label08;
    }

    private static java.lang.String bytesToHexString(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, varReplacer7872;
        byte $b2;
        short $s3;
        java.lang.String $r2;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label2;

        varReplacer7872 = 48;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer7872);

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private boolean checkConnection(android.content.Context)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        android.content.Context $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        boolean $z0;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 = $r0.<com.maptoapp.lib.util.AssetHelper: android.net.ConnectivityManager connectivityManager>;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnectedOrConnecting()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.lang.String getCacheRoot(android.content.Context)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        android.content.Context $r1;
        java.io.File $r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        nop;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 = null;

        $r3 = "mounted";

        $r4 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <com.maptoapp.lib.util.AssetHelper: boolean isExternalStorageRemovable()>();

        if $z0 != 0 goto label2;

     label1:
        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getExternalCacheDir()>();

     label2:
        if $r2 != null goto label3;

        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getCacheDir()>();

     label3:
        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r3;
    }

    private java.lang.String getDensityAwareUrl(java.lang.String)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.Exception $r1;
        java.lang.String $r2, $r5, $r6, $r7;
        boolean $z0;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        int $i0, $i1;
        float $f0, $f1;
        java.lang.StringBuilder $r8;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r2 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<com.maptoapp.lib.util.AssetHelper: boolean isUrlDensityAware(java.lang.String)>($r2);

        if $z0 != 0 goto label1;

        return $r2;

     label1:
        $r3 = <com.maptoapp.lib.util.AssetHelper: java.util.regex.Pattern urlDensityPattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label7;

        $r5 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group()>();

        $r3 = <com.maptoapp.lib.util.AssetHelper: java.util.regex.Pattern densityNumberPattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);

        virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

        $i0 = 0;

     label2:
        $r6 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

     label3:
        $i0 = $i1;

     label4:
        if $i0 <= 0 goto label5;

        $f0 = (float) $i0;

        $f1 = $r0.<com.maptoapp.lib.util.AssetHelper: float density>;

        $f0 = $f0 * $f1;

        $i0 = (int) $f0;

        $r3 = <com.maptoapp.lib.util.AssetHelper: java.util.regex.Pattern densityNumberPattern>;

        $r6 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r6, $r7);

        $r3 = <com.maptoapp.lib.util.AssetHelper: java.util.regex.Pattern urlDensityPattern>;

        $r6 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r6, $r5);

     label5:
        return $r2;

     label6:
        $r1 := @caughtexception;

        $r6 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r1);

        staticinvoke <com.maptoapp.m2acore.helpers.M2ALog: void e(java.lang.String,java.lang.String)>("Asset", $r6);

        goto label4;

     label7:
        $f0 = $r0.<com.maptoapp.lib.util.AssetHelper: float density>;

        $f0 = 640.0F * $f0;

        $i0 = (int) $f0;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=s");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

        catch java.lang.Exception from label2 to label3 with label6;
    }

    private java.lang.String getDensityAwareUrl_withConnectionChecksToResize(java.lang.String)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.maptoapp.lib.util.NetworkHelper: boolean isNetworkOnline(int)>(1);

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        $r1 = specialinvoke $r0.<com.maptoapp.lib.util.AssetHelper: java.lang.String getDensityAwareUrl(java.lang.String)>($r1);

        return $r1;
    }

    public static com.maptoapp.lib.util.AssetHelper getInstance(android.content.Context)
    {
        android.content.Context $r0;
        com.maptoapp.lib.util.AssetHelper $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.maptoapp.lib.util.AssetHelper: com.maptoapp.lib.util.AssetHelper helper>;

        if $r1 != null goto label1;

        $r1 = new com.maptoapp.lib.util.AssetHelper;

        specialinvoke $r1.<com.maptoapp.lib.util.AssetHelper: void <init>(android.content.Context)>($r0);

        <com.maptoapp.lib.util.AssetHelper: com.maptoapp.lib.util.AssetHelper helper> = $r1;

     label1:
        $r1 = <com.maptoapp.lib.util.AssetHelper: com.maptoapp.lib.util.AssetHelper helper>;

        return $r1;
    }

    public static java.io.InputStream getItinerary(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r4;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3, r7;
        char $c0;
        android.content.res.AssetManager $r5;
        java.io.InputStream $r6;
        java.io.IOException r8;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        r7 = new java.lang.StringBuilder;

        $r3 = r7;

     label1:
        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("itineraries");

     label2:
        $c0 = <java.io.File: char separatorChar>;

     label3:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r4 = staticinvoke <com.maptoapp.lib.util.AssetHelper: java.lang.String hashKey(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        r7 = new java.lang.StringBuilder;

        $r3 = r7;

     label5:
        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested itinerary: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Asset", $r1);

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r6 = virtualinvoke $r5.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r4);

     label6:
        return $r6;

     label7:
        $r2 := @caughtexception;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error getting bundled itinerary file: ");

        r8 = (java.io.IOException) $r2;

        $r1 = virtualinvoke r8.<java.io.IOException: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.maptoapp.m2acore.helpers.M2ALog: void e(java.lang.String,java.lang.String)>("Asset", $r1);

        return null;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public static boolean hasFavourites(android.content.Context)
    {
        android.content.Context $r0;
        org.json.JSONArray $r1;
        java.lang.Boolean $r2;
        java.lang.String $r3, $r5, varReplacer777, varReplacer779, varReplacer780, varReplacer781, varReplacer783, varReplacer784;
        int $i0, $i1, varReplacer778, varReplacer782;
        org.json.JSONObject $r4;
        boolean $z0;
        org.json.JSONException $r6, $r8;
        java.lang.StringBuilder $r7;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = <com.maptoapp.lib.util.AssetHelper: java.lang.Boolean hasFavouritesCachedValued>;

        if $r2 != null goto label11;

        $r1 = new org.json.JSONArray;

     label01:
        varReplacer779 = "tabs/config.json";

        $r3 = staticinvoke <com.maptoapp.lib.util.AssetHelper: java.lang.String assetToString(android.content.Context,java.lang.String)>($r0, varReplacer779);

        specialinvoke $r1.<org.json.JSONArray: void <init>(java.lang.String)>($r3);

     label02:
        $i0 = 0;

     label03:
        $i1 = virtualinvoke $r1.<org.json.JSONArray: int length()>();

     label04:
        if $i0 >= $i1 goto label11;

     label05:
        $r4 = virtualinvoke $r1.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        varReplacer777 = "type";

        $r3 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer777);

     label06:
        $r5 = <com.maptoapp.lib.util.AssetHelper: java.lang.String COM_MAPTOAPP_LIB_APP_FAVES_SECTION>;

     label07:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

     label08:
        if $z0 == 0 goto label12;

     label09:
        varReplacer782 = 1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer782);

     label10:
        <com.maptoapp.lib.util.AssetHelper: java.lang.Boolean hasFavouritesCachedValued> = $r2;

     label11:
        $r2 = <com.maptoapp.lib.util.AssetHelper: java.lang.Boolean hasFavouritesCachedValued>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label12:
        varReplacer778 = 0;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer778);

     label13:
        <com.maptoapp.lib.util.AssetHelper: java.lang.Boolean hasFavouritesCachedValued> = $r2;

     label14:
        $i0 = $i0 + 1;

        goto label03;

     label15:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

     label16:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer783 = "Error parsing tabs/config.json at hasFavourites: ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer783);

        $r3 = virtualinvoke $r6.<org.json.JSONException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer780 = "Asset";

        staticinvoke <com.maptoapp.m2acore.helpers.M2ALog: void e(java.lang.String,java.lang.String)>(varReplacer780, $r3);

     label17:
        goto label14;

     label18:
        $r8 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer784 = "Error reading file tabs/config.json at hasFavourites: ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer784);

        $r3 = virtualinvoke $r8.<org.json.JSONException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer781 = "Asset";

        staticinvoke <com.maptoapp.m2acore.helpers.M2ALog: void e(java.lang.String,java.lang.String)>(varReplacer781, $r3);

        goto label11;

        catch org.json.JSONException from label01 to label02 with label18;
        catch org.json.JSONException from label03 to label04 with label18;
        catch org.json.JSONException from label05 to label06 with label15;
        catch org.json.JSONException from label07 to label08 with label15;
        catch org.json.JSONException from label09 to label10 with label15;
        catch org.json.JSONException from label12 to label13 with label15;
        catch org.json.JSONException from label16 to label17 with label18;
    }

    public static java.lang.String hashKey(java.lang.String) throws java.lang.NullPointerException
    {
        java.lang.String $r0, $r4, varReplacer7871;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        int $i0;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer7871 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7871);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r4 = staticinvoke <com.maptoapp.lib.util.AssetHelper: java.lang.String bytesToHexString(byte[])>($r3);

     label2:
        return $r4;

     label3:
        $r1 := @caughtexception;

        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        return $r0;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static boolean isExternalStorageRemovable()
    {
        boolean $z0;
        int varReplacer399;

        nop;

        $z0 = staticinvoke <com.maptoapp.lib.imageutil.Utils: boolean hasGingerbread()>();

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <android.os.Environment: boolean isExternalStorageRemovable()>();

        return $z0;

     label1:
        varReplacer399 = 1;

        return varReplacer399;
    }

    public boolean cacheExists(java.lang.String, java.lang.String)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1, $r2, $r5;
        java.lang.Throwable $r3;
        java.net.URL $r4;
        boolean $z0;
        java.io.File $r6;
        java.lang.StringBuilder $r7;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r4 = new java.net.URL;

        $r5 = <com.maptoapp.lib.data.Media: java.lang.String TYPE_IMAGE>;

     label2:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

     label3:
        if $z0 == 0 goto label7;

     label4:
        $r2 = specialinvoke $r0.<com.maptoapp.lib.util.AssetHelper: java.lang.String getDensityAwareUrl_withConnectionChecksToResize(java.lang.String)>($r1);

     label5:
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r2);

     label6:
        $r1 = virtualinvoke $r4.<java.net.URL: java.lang.String toString()>();

        $r6 = virtualinvoke $r0.<com.maptoapp.lib.util.AssetHelper: java.io.File getCacheFileFromUrl(java.lang.String)>($r1);

        if $r6 == null goto label9;

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label9;

        return 1;

     label7:
        $r2 = $r1;

        goto label5;

     label8:
        $r3 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed URL: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Asset", $r1);

     label9:
        return 0;

        catch java.net.MalformedURLException from label2 to label3 with label8;
        catch java.net.MalformedURLException from label4 to label5 with label8;
        catch java.net.MalformedURLException from label5 to label6 with label8;
    }

    public void cacheImage(java.lang.String)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.maptoapp.lib.data.Media: java.lang.String TYPE_IMAGE>;

        virtualinvoke $r0.<com.maptoapp.lib.util.AssetHelper: void cacheMedia(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void cacheMedia(java.lang.String, java.lang.String)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1, $r2;
        java.lang.NullPointerException $r3;
        java.lang.StringBuilder $r4;
        java.lang.Exception $r5;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label1:
        virtualinvoke $r0.<com.maptoapp.lib.util.AssetHelper: java.io.File cacheMediaToFile(java.lang.String,java.lang.String)>($r1, $r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has caused null pointer exception: ");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r3);

        staticinvoke <com.maptoapp.m2acore.helpers.M2ALog: void e(java.lang.String,java.lang.String)>($r1, $r2);

        return;

     label4:
        $r5 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error caching: ");

        $r1 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.maptoapp.m2acore.helpers.M2ALog: void e(java.lang.String,java.lang.String)>("Asset", $r1);

        return;

        catch java.lang.NullPointerException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public java.io.File cacheMediaToFile(java.lang.String, java.lang.String) throws java.lang.NullPointerException, java.io.IOException
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1, $r5, $r6;
        byte[] $r2;
        com.squareup.okhttp.OkHttpClient $r3;
        java.io.FileOutputStream $r4;
        boolean $z0;
        java.io.File $r7;
        java.lang.StringBuilder $r8;
        java.util.concurrent.TimeUnit $r9;
        com.squareup.okhttp.Request$Builder $r10;
        com.squareup.okhttp.Request $r11;
        com.squareup.okhttp.Call $r12;
        com.squareup.okhttp.Response $r13;
        com.squareup.okhttp.ResponseBody $r14;
        java.io.InputStream $r15;
        int $i0;
        long $l1;
        byte $b2;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r5 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r6 = <com.maptoapp.lib.data.Media: java.lang.String TYPE_IMAGE>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        $r5 = specialinvoke $r0.<com.maptoapp.lib.util.AssetHelper: java.lang.String getDensityAwareUrl_withConnectionChecksToResize(java.lang.String)>($r5);

     label1:
        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label5;

        $r7 = virtualinvoke $r0.<com.maptoapp.lib.util.AssetHelper: java.io.File getCacheFileFromUrl(java.lang.String)>($r5);

        if $r7 == null goto label5;

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label5;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("---------> cache exists: ");

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with address: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Asset", $r1);

        $r3 = new com.squareup.okhttp.OkHttpClient;

        specialinvoke $r3.<com.squareup.okhttp.OkHttpClient: void <init>()>();

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r3.<com.squareup.okhttp.OkHttpClient: void setConnectTimeout(long,java.util.concurrent.TimeUnit)>(10000L, $r9);

        $r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r3.<com.squareup.okhttp.OkHttpClient: void setReadTimeout(long,java.util.concurrent.TimeUnit)>(10000L, $r9);

        $r10 = new com.squareup.okhttp.Request$Builder;

        specialinvoke $r10.<com.squareup.okhttp.Request$Builder: void <init>()>();

        $r10 = virtualinvoke $r10.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request$Builder url(java.lang.String)>($r5);

        $r11 = virtualinvoke $r10.<com.squareup.okhttp.Request$Builder: com.squareup.okhttp.Request build()>();

        $r12 = virtualinvoke $r3.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Call newCall(com.squareup.okhttp.Request)>($r11);

        $r13 = virtualinvoke $r12.<com.squareup.okhttp.Call: com.squareup.okhttp.Response execute()>();

        $z0 = virtualinvoke $r13.<com.squareup.okhttp.Response: boolean isSuccessful()>();

        if $z0 == 0 goto label5;

        $r14 = virtualinvoke $r13.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        $r15 = virtualinvoke $r14.<com.squareup.okhttp.ResponseBody: java.io.InputStream byteStream()>();

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r7);

        $r2 = newarray (byte)[4096];

     label2:
        $i0 = virtualinvoke $r15.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 <= 0 goto label3;

        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label2;

     label3:
        virtualinvoke $r4.<java.io.OutputStream: void flush()>();

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

        virtualinvoke $r15.<java.io.InputStream: void close()>();

        $r14 = virtualinvoke $r13.<com.squareup.okhttp.Response: com.squareup.okhttp.ResponseBody body()>();

        virtualinvoke $r14.<com.squareup.okhttp.ResponseBody: void close()>();

        $l1 = virtualinvoke $r7.<java.io.File: long length()>();

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid cache, removing: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Asset", $r5);

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

        virtualinvoke $r7.<java.io.File: boolean delete()>();

        return $r7;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cached: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Asset", $r5);

     label5:
        return $r7;
    }

    public void fetchBitmapOnThread(android.content.Context, java.lang.String, android.widget.ImageView, com.maptoapp.lib.util.AssetHelper$ImageSetter)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.widget.ImageView $r3;
        com.maptoapp.lib.util.AssetHelper$ImageSetter $r4;
        android.widget.ImageView$ScaleType $r5;

        nop;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.widget.ImageView;

        $r4 := @parameter3: com.maptoapp.lib.util.AssetHelper$ImageSetter;

        $r5 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        virtualinvoke $r0.<com.maptoapp.lib.util.AssetHelper: void fetchBitmapOnThread(android.content.Context,java.lang.String,android.widget.ImageView,com.maptoapp.lib.util.AssetHelper$ImageSetter,android.widget.ImageView$ScaleType)>($r1, $r2, $r3, $r4, $r5);

        return;
    }

    public void fetchBitmapOnThread(android.content.Context, java.lang.String, android.widget.ImageView, com.maptoapp.lib.util.AssetHelper$ImageSetter, android.widget.ImageView$ScaleType)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        android.content.Context $r1;
        java.lang.String $r2;
        android.widget.ImageView $r3;
        com.maptoapp.lib.util.AssetHelper$ImageSetter $r4;
        android.widget.ImageView$ScaleType $r5;
        com.maptoapp.lib.util.AssetHelper$1 $r6;
        java.util.concurrent.ThreadPoolExecutor $r7;
        java.lang.Void[] $r8;

        nop;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: android.widget.ImageView;

        $r4 := @parameter3: com.maptoapp.lib.util.AssetHelper$ImageSetter;

        $r5 := @parameter4: android.widget.ImageView$ScaleType;

        $r6 = new com.maptoapp.lib.util.AssetHelper$1;

        specialinvoke $r6.<com.maptoapp.lib.util.AssetHelper$1: void <init>(com.maptoapp.lib.util.AssetHelper,java.lang.String,android.widget.ImageView,android.widget.ImageView$ScaleType,com.maptoapp.lib.util.AssetHelper$ImageSetter)>($r0, $r2, $r3, $r5, $r4);

        $r7 = <com.maptoapp.lib.tasks.M2AThreadPoolExecutorHelper: java.util.concurrent.ThreadPoolExecutor M2A_IMAGES_THREAD_POOL_EXECUTOR>;

        $r8 = newarray (java.lang.Void)[0];

        virtualinvoke $r6.<com.maptoapp.lib.util.AssetHelper$1: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r7, $r8);

        return;
    }

    public void fetchBitmapOnThread(java.lang.String, android.widget.ImageView, android.widget.ImageView$ScaleType, com.squareup.picasso.Transformation)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1;
        android.widget.ImageView $r2;
        android.widget.ImageView$ScaleType $r3;
        com.squareup.picasso.Transformation $r4;
        com.maptoapp.lib.util.AssetHelper$2 $r5;
        java.util.concurrent.ThreadPoolExecutor $r6;
        java.lang.Void[] $r7;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.widget.ImageView;

        $r3 := @parameter2: android.widget.ImageView$ScaleType;

        $r4 := @parameter3: com.squareup.picasso.Transformation;

        $r5 = new com.maptoapp.lib.util.AssetHelper$2;

        specialinvoke $r5.<com.maptoapp.lib.util.AssetHelper$2: void <init>(com.maptoapp.lib.util.AssetHelper,java.lang.String,android.widget.ImageView,android.widget.ImageView$ScaleType,com.squareup.picasso.Transformation)>($r0, $r1, $r2, $r3, $r4);

        $r6 = <com.maptoapp.lib.tasks.M2AThreadPoolExecutorHelper: java.util.concurrent.ThreadPoolExecutor M2A_IMAGES_THREAD_POOL_EXECUTOR>;

        $r7 = newarray (java.lang.Void)[0];

        virtualinvoke $r5.<com.maptoapp.lib.util.AssetHelper$2: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r6, $r7);

        return;
    }

    public java.io.File getAudioFileFromUrl(java.lang.String)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1;
        java.io.File $r2;

        nop;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<com.maptoapp.lib.util.AssetHelper: java.io.File getCacheFileFromUrl(java.lang.String)>($r1);

        return $r2;
    }

    public java.io.File getCacheFileFromUrl(java.lang.String)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1, $r5;
        java.io.File $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        char $c0;
        null_type varReplacer7869;
        int varReplacer7870;

        nop;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: java.lang.String;

        $r3 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label2;

        $r1 = staticinvoke <com.maptoapp.lib.util.AssetHelper: java.lang.String hashKey(java.lang.String)>($r1);

        $r2 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = $r0.<com.maptoapp.lib.util.AssetHelper: java.lang.String cacheRoot>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $c0 = <java.io.File: char separatorChar>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        varReplacer7870 = 0;

        $c0 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(varReplacer7870);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        if $z0 != 0 goto label1;

        varReplacer7869 = null;

        return varReplacer7869;

     label1:
        $r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $c0 = <java.io.File: char separatorChar>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r1);

     label2:
        return $r3;
    }

    public boolean isUrlDensityAware(java.lang.String)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1, $r3;
        java.lang.String[] $r2;
        int $i0, $i1, varReplacer2982, varReplacer2983;
        boolean $z0;

        nop;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $r2 = $r0.<com.maptoapp.lib.util.AssetHelper: java.lang.String[] densityAwareUrls>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r2[$i1];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label2;

        varReplacer2982 = 1;

        return varReplacer2982;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        varReplacer2983 = 0;

        return varReplacer2983;
    }

    public void manageErrorOnImageLoaded(java.lang.String)
    {
        com.maptoapp.lib.util.AssetHelper $r0;
        java.lang.String $r1, $r5;
        java.lang.Exception $r2;
        java.io.File $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.net.URI $r6;

        $r0 := @this: com.maptoapp.lib.util.AssetHelper;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("manageErrorOnImageLoaded: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.maptoapp.m2acore.helpers.M2ALog: void e(java.lang.String,java.lang.String)>("Asset", $r5);

        $r3 = new java.io.File;

     label1:
        $r6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.net.URI: java.lang.String getPath()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label2:
        if $z0 == 0 goto label6;

     label3:
        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label4:
        return;

     label5:
        $r2 := @caughtexception;

        $r1 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        staticinvoke <com.maptoapp.m2acore.helpers.M2ALog: void e(java.lang.String,java.lang.String)>("Asset", $r1);

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
