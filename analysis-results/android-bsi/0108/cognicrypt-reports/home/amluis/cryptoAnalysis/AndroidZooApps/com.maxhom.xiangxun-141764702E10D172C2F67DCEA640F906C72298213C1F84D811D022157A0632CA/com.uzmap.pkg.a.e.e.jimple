public class com.uzmap.pkg.a.e.e extends java.lang.Object
{
    static java.lang.String a;
    private static final char[] b;
    private static final java.lang.String[] c;
    private static final java.lang.ThreadLocal d;

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        com.uzmap.pkg.a.e.e$1 $r3;
        null_type varReplacer1532;

        nop;

        $r1 = "0123456789ABCDEF";

        $r0 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <com.uzmap.pkg.a.e.e: char[] b> = $r0;

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "EEE, dd MMM yyyy HH:mm:ss zzz";

        $r2[1] = "EEE, dd-MMM-yy HH:mm:ss zzz";

        $r2[2] = "EEE MMM d HH:mm:ss yyyy";

        <com.uzmap.pkg.a.e.e: java.lang.String[] c> = $r2;

        $r3 = new com.uzmap.pkg.a.e.e$1;

        specialinvoke $r3.<com.uzmap.pkg.a.e.e$1: void <init>()>();

        <com.uzmap.pkg.a.e.e: java.lang.ThreadLocal d> = $r3;

        varReplacer1532 = null;

        <com.uzmap.pkg.a.e.e: java.lang.String a> = varReplacer1532;

        return;
    }

    public static final java.lang.String a(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.io.File $r2;
        java.lang.StringBuilder $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.uzmap.pkg.a.e.e: java.lang.String a>;

        if $r1 == null goto label1;

        $r1 = <com.uzmap.pkg.a.e.e: java.lang.String a>;

        return $r1;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: java.io.File getExternalCacheDir()>();

        if $r2 == null goto label3;

        $r3 = new java.lang.StringBuilder;

        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String toString()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        <com.uzmap.pkg.a.e.e: java.lang.String a> = $r1;

        $r1 = <com.uzmap.pkg.a.e.e: java.lang.String a>;

        return $r1;

     label3:
        $r1 = null;

        goto label2;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, varReplacer1721, varReplacer1722;
        int $i0, varReplacer1720;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Throwable $r3, $r4;
        java.security.NoSuchAlgorithmException r5;
        java.io.UnsupportedEncodingException r6;
        null_type varReplacer1723, varReplacer1724;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer1721 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1721);

        varReplacer1722 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1722);

     label2:
        $i0 = lengthof $r2;

     label3:
        varReplacer1720 = 0;

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r2, varReplacer1720, $i0);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.uzmap.pkg.a.e.e: java.lang.String b(byte[])>($r2);

     label4:
        return $r0;

     label5:
        $r3 := @caughtexception;

        r5 = (java.security.NoSuchAlgorithmException) $r3;

        virtualinvoke r5.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer1723 = null;

        return varReplacer1723;

     label6:
        $r4 := @caughtexception;

        r6 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke r6.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        varReplacer1724 = null;

        return varReplacer1724;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
    }

    public static java.lang.String a(java.util.Date)
    {
        java.util.Date $r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        java.text.DateFormat $r3;
        java.lang.String $r4;

        nop;

        $r0 := @parameter0: java.util.Date;

        $r1 = <com.uzmap.pkg.a.e.e: java.lang.ThreadLocal d>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r3 = (java.text.DateFormat) $r2;

        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r0);

        return $r4;
    }

    public static java.lang.String a(java.util.List, java.lang.String)
    {
        java.util.List $r0;
        java.lang.String $r1, $r6, $r7;
        java.lang.StringBuilder $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.uzmap.pkg.a.e.d.g $r5;
        int $i0;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.uzmap.pkg.a.e.d.g) $r4;

        $r6 = virtualinvoke $r5.<com.uzmap.pkg.a.e.d.g: java.lang.String a()>();

        $r6 = staticinvoke <com.uzmap.pkg.a.e.e: java.lang.String b(java.lang.String,java.lang.String)>($r6, $r1);

        $r7 = virtualinvoke $r5.<com.uzmap.pkg.a.e.d.g: java.lang.String b()>();

        if $r7 == null goto label5;

        $r7 = staticinvoke <com.uzmap.pkg.a.e.e: java.lang.String b(java.lang.String,java.lang.String)>($r7, $r1);

     label3:
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label4;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label1;

     label5:
        $r7 = "";

        goto label3;
    }

    public static java.lang.String a(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;
        java.lang.IllegalArgumentException $r2;
        int $i0;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r2;

     label1:
        $i0 = lengthof $r0;

        $r1 = staticinvoke <com.uzmap.pkg.a.e.e: java.lang.String a(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static java.lang.String a(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.Throwable $r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;
        java.lang.Error $r4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r2;

     label1:
        $r3 = new java.lang.String;

     label2:
        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r0, $i0, $i1, "US-ASCII");

     label3:
        return $r3;

     label4:
        $r1 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>("HttpClient requires ASCII support");

        throw $r4;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static boolean a(java.lang.CharSequence)
    {
        java.lang.CharSequence $r0;
        int $i0, varReplacer1802, varReplacer1803;

        nop;

        $r0 := @parameter0: java.lang.CharSequence;

        if $r0 == null goto label1;

        $i0 = interfaceinvoke $r0.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label2;

     label1:
        varReplacer1802 = 1;

        return varReplacer1802;

     label2:
        varReplacer1803 = 0;

        return varReplacer1803;
    }

    public static byte[] a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        java.lang.IllegalArgumentException $r3;
        int $i0;
        byte[] $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("data may not be null");

        throw $r3;

     label1:
        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("charset may not be null or empty");

        throw $r3;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r1);

     label4:
        return $r4;

     label5:
        $r2 := @caughtexception;

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        return $r4;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    private static java.lang.String b(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.lang.Throwable $r1;
        java.lang.IllegalArgumentException $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 == null goto label3;

     label1:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, $r2);

     label2:
        return $r0;

     label3:
        $r2 = "ISO-8859-1";

        goto label1;

     label4:
        $r1 := @caughtexception;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r1);

        throw $r3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    private static java.lang.String b(byte[])
    {
        byte[] $r0;
        char[] $r1, $r3;
        short $s0, $s4;
        int $i1, $i2;
        java.lang.String $r2;
        byte $b3;
        char $c5;

        nop;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        $i1 = $i1 * 2;

        $r1 = newarray (char)[$i1];

        $i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i1 < $i2 goto label2;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;

     label2:
        $b3 = $r0[$i1];

        $s0 = $b3 & 255;

        $i2 = $i1 * 2;

        $r3 = <com.uzmap.pkg.a.e.e: char[] b>;

        $s4 = $s0 >>> 4;

        $c5 = $r3[$s4];

        $r1[$i2] = $c5;

        $i2 = $i1 * 2;

        $i2 = $i2 + 1;

        $r3 = <com.uzmap.pkg.a.e.e: char[] b>;

        $s0 = $s0 & 15;

        $c5 = $r3[$s0];

        $r1[$i2] = $c5;

        $i1 = $i1 + 1;

        goto label1;
    }

    public static java.util.Date b(java.lang.String)
    {
        java.lang.String $r0, $r4;
        java.lang.String[] $r1;
        java.util.Date $r2, $r6;
        java.text.ParsePosition $r3;
        int $i0, $i1, $i2;
        boolean $z0;
        java.text.SimpleDateFormat $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.uzmap.pkg.a.e.e: java.lang.String[] c>;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $r4 = $r0;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 1 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

     label1:
        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        return null;

     label3:
        $r0 = $r1[$i1];

        $r5 = staticinvoke <com.uzmap.pkg.a.e.e$a: java.text.SimpleDateFormat a(java.lang.String)>($r0);

        virtualinvoke $r5.<java.text.SimpleDateFormat: void set2DigitYearStart(java.util.Date)>($r2);

        $r3 = new java.text.ParsePosition;

        specialinvoke $r3.<java.text.ParsePosition: void <init>(int)>(0);

        $r6 = virtualinvoke $r5.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>($r4, $r3);

        $i2 = virtualinvoke $r3.<java.text.ParsePosition: int getIndex()>();

        if $i2 != 0 goto label4;

        $i1 = $i1 + 1;

        goto label2;

     label4:
        return $r6;
    }

    public static byte[] c(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        byte[] $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Error $r4;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r3;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.Error;

        specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>("HttpClient requires ASCII support");

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String d(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        android.webkit.MimeTypeMap $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.uzmap.pkg.a.e.e: boolean a(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return "file";

     label1:
        $r1 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r0 = virtualinvoke $r1.<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>($r0);

        if $r0 != null goto label2;

        return "file";

     label2:
        return $r0;
    }

    public static java.lang.String e(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Exception $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String f(java.lang.String)
    {
        java.lang.Throwable $r0;
        java.lang.StringBuffer $r1, r7;
        java.util.StringTokenizer $r2, r8;
        java.lang.String $r3, $r4, $r6, varReplacer2070, varReplacer2071, varReplacer2074;
        int $i0, varReplacer2072, varReplacer2073, varReplacer2075, varReplacer2076, varReplacer2077, varReplacer2078;
        boolean $z0;
        java.lang.StringBuilder $r5, r9;
        java.io.UnsupportedEncodingException r10;

        nop;

        $r3 := @parameter0: java.lang.String;

        varReplacer2076 = 63;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(varReplacer2076);

        if $i0 > 0 goto label1;

        return $r3;

     label1:
        varReplacer2077 = 0;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2077, $i0);

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        r7 = new java.lang.StringBuffer;

        $r1 = r7;

        specialinvoke r7.<java.lang.StringBuffer: void <init>()>();

        r8 = new java.util.StringTokenizer;

        $r2 = r8;

        varReplacer2070 = "&";

        specialinvoke r8.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r3, varReplacer2070);

     label2:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z0 != 0 goto label3;

        r9 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        varReplacer2071 = "?";

        $r5 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2071);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label3:
        $r3 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        varReplacer2073 = 61;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(varReplacer2073);

        if $i0 >= 0 goto label5;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label4:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        varReplacer2078 = 38;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(varReplacer2078);

        goto label2;

     label5:
        varReplacer2075 = 0;

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2075, $i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        varReplacer2072 = 61;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(varReplacer2072);

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

     label6:
        varReplacer2074 = "UTF-8";

        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, varReplacer2074);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label7:
        goto label4;

     label8:
        $r0 := @caughtexception;

        r10 = (java.io.UnsupportedEncodingException) $r0;

        virtualinvoke r10.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label4;

        catch java.io.UnsupportedEncodingException from label6 to label7 with label8;
    }
}
