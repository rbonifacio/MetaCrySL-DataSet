public final class mp.lib.u extends java.lang.Object
{
    private final java.io.InputStream a;
    private final int b;

    public void <init>(java.io.InputStream)
    {
        mp.lib.u $r0;
        java.io.InputStream $r1;
        int $i0;

        nop;

        $r0 := @this: mp.lib.u;

        $r1 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <mp.lib.i: int a(java.io.InputStream)>($r1);

        specialinvoke $r0.<mp.lib.u: void <init>(java.io.InputStream,int)>($r1, $i0);

        return;
    }

    public void <init>(java.io.InputStream, int)
    {
        mp.lib.u $r0;
        java.io.InputStream $r1;
        int $i0;

        nop;

        $r0 := @this: mp.lib.u;

        $r1 := @parameter0: java.io.InputStream;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<mp.lib.u: java.io.InputStream a> = $r1;

        $r0.<mp.lib.u: int b> = $i0;

        return;
    }

    public static int a(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Throwable $r2;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, $r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label4;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i1;

     label3:
        $r2 := @caughtexception;

     label4:
        return $i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int a(byte[])
    {
        byte[] $r0;
        byte $b0;
        int $i1, $i2;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return 0;

     label1:
        $i1 = lengthof $r0;

        $i2 = $i1 + 1;

     label2:
        $i1 = $i1 + -1;

        if $i1 < 0 goto label3;

        $i2 = $i2 * 257;

        $b0 = $r0[$i1];

        $i2 = $i2 ^ $b0;

        goto label2;

     label3:
        return $i2;
    }

    public static long a(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1;
        boolean $z0;
        long $l0;
        java.lang.Throwable $r2;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, $r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label4;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

     label4:
        return 60L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, varReplacer2905;
        java.math.BigInteger $r1;
        int $i0, varReplacer2904;
        java.lang.StringBuilder $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <mp.lib.u: java.math.BigInteger b(java.lang.String)>($r0);

        varReplacer2904 = 16;

        $r0 = virtualinvoke $r1.<java.math.BigInteger: java.lang.String toString(int)>(varReplacer2904);

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 32 goto label2;

        $r2 = new java.lang.StringBuilder;

        varReplacer2905 = "0";

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2905);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return $r0;
    }

    public static mp.lib.model.a a(android.content.Context, mp.lib.model.k, android.os.Bundle)
    {
        android.content.Context $r0;
        mp.lib.model.k $r1;
        android.os.Bundle $r2;
        java.lang.String $r3, $r4, varReplacer2386, varReplacer2387;
        boolean $z0;
        mp.lib.model.l $r5;
        mp.lib.dg $r6;
        mp.lib.dh $r7;
        mp.lib.df $r8;
        mp.lib.di $r9;
        mp.lib.de $r10;
        mp.lib.cf $r11;
        java.lang.IllegalArgumentException $r12;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: mp.lib.model.k;

        $r2 := @parameter2: android.os.Bundle;

        varReplacer2386 = "com.fortumo.android.bundle.TYPE";

        $r3 = virtualinvoke $r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer2386);

        $r4 = "http_request";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label1;

        $r5 = new mp.lib.model.l;

        specialinvoke $r5.<mp.lib.model.l: void <init>(android.content.Context,android.os.Bundle)>($r0, $r2);

        return $r5;

     label1:
        $r4 = "payment";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label2;

        $r6 = new mp.lib.dg;

        specialinvoke $r6.<mp.lib.dg: void <init>(android.os.Bundle)>($r2);

        return $r6;

     label2:
        $r4 = "trigger";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label3;

        $r7 = new mp.lib.dh;

        specialinvoke $r7.<mp.lib.dh: void <init>(android.content.Context,mp.lib.model.k,android.os.Bundle)>($r0, $r1, $r2);

        return $r7;

     label3:
        $r4 = "mo";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label4;

        $r8 = new mp.lib.df;

        specialinvoke $r8.<mp.lib.df: void <init>(android.os.Bundle)>($r2);

        return $r8;

     label4:
        $r4 = "ui_prompt";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label5;

        $r9 = new mp.lib.di;

        specialinvoke $r9.<mp.lib.di: void <init>(android.os.Bundle)>($r2);

        return $r9;

     label5:
        $r4 = "ui_dialog";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label6;

        $r10 = new mp.lib.de;

        specialinvoke $r10.<mp.lib.de: void <init>(android.os.Bundle)>($r2);

        return $r10;

     label6:
        $r4 = "ui_predefined";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label7;

        $r11 = new mp.lib.cf;

        specialinvoke $r11.<mp.lib.cf: void <init>(android.content.Context,mp.lib.model.k,android.os.Bundle)>($r0, $r1, $r2);

        return $r11;

     label7:
        $r12 = new java.lang.IllegalArgumentException;

        varReplacer2387 = "xpp contains an unknown action";

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer2387);

        throw $r12;
    }

    public static mp.lib.model.a a(android.content.Context, mp.lib.model.k, org.xmlpull.v1.XmlPullParser, int)
    {
        android.content.Context $r0;
        mp.lib.model.k $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        int $i0, $i1;
        java.lang.String $r3, $r5, $r6, $r7, $r8, $r15, $r16;
        mp.lib.model.a $r4;
        boolean $z0, $z1;
        mp.lib.model.l $r9;
        java.util.ArrayList $r10, $r11, $r12;
        mp.lib.dg $r13;
        mp.lib.df $r14;
        mp.lib.di $r17;
        mp.lib.de $r18;
        java.lang.Exception $r19, $r23;
        mp.lib.cf $r20;
        java.lang.IllegalArgumentException $r21;
        java.lang.StringBuilder $r22;
        java.util.Iterator $r24;
        java.lang.Object $r25;
        mp.lib.model.a$a $r26;
        java.lang.Throwable $r27;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: mp.lib.model.k;

        $r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $i0 := @parameter3: int;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "type");

        $r4 = null;

        $r5 = "http_request";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label17;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "url");

        $r6 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "method");

        $r7 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "response");

        $r8 = "DCB_XML";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z0 == 0 goto label14;

        $i0 = 1;

     label01:
        $r9 = new mp.lib.model.l;

        specialinvoke $r9.<mp.lib.model.l: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int)>($r0, $r5, $r6, $r3, $i0);

        $r4 = $r9;

        $r10 = null;

     label02:
        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label03:
        $r11 = null;

     label04:
        if $i0 == 1 goto label37;

        if $i0 == 3 goto label37;

     label05:
        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

     label06:
        if $i0 != 2 goto label12;

     label07:
        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("params");

     label08:
        if $z0 == 0 goto label30;

        if $r11 != null goto label11;

        $r12 = new java.util.ArrayList;

     label09:
        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

     label10:
        $r11 = $r12;

     label11:
        staticinvoke <mp.lib.u: void a(org.xmlpull.v1.XmlPullParser,java.util.List)>($r2, $r11);

     label12:
        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label13:
        goto label04;

     label14:
        $r8 = "CCB_XML";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z0 == 0 goto label15;

        $i0 = 3;

        goto label01;

     label15:
        $r8 = "UNKNOWN";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z0 == 0 goto label16;

        $i0 = 0;

        goto label01;

     label16:
        goto label01;

     label17:
        $r5 = "payment";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label18;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "status");

        $r13 = new mp.lib.dg;

        specialinvoke $r13.<mp.lib.dg: void <init>(java.lang.String,java.lang.String)>($r3, $r5);

        $r4 = $r13;

        $r10 = null;

        goto label02;

     label18:
        $r5 = "mo";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label19;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "shortcode");

        $r6 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "content");

        $r14 = new mp.lib.df;

        specialinvoke $r14.<mp.lib.df: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r3, $r5, $r6);

        $r4 = $r14;

        $r10 = null;

        goto label02;

     label19:
        $r5 = "ui_prompt";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label24;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r5 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "param");

        $r6 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "pattern");

        $r7 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "label");

        $r8 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "error_label");

        $r15 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "display_error");

        $z0 = 1;

        $r16 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "remember");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r16);

        if $z1 != 0 goto label20;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r16);

     label20:
        $i0 = 1;

        $r16 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "input_type");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r16);

        if $z1 != 0 goto label23;

     label21:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

     label22:
        $i0 = $i1;

     label23:
        $r17 = new mp.lib.di;

        specialinvoke $r17.<mp.lib.di: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int)>($r3, $r5, $r6, $r7, $r8, $r15, $z0, $i0);

        $r4 = $r17;

        $r10 = null;

        goto label02;

     label24:
        $r5 = "ui_dialog";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label28;

        $r18 = new mp.lib.de;

     label25:
        specialinvoke $r18.<mp.lib.de: void <init>(org.xmlpull.v1.XmlPullParser)>($r2);

     label26:
        return $r18;

     label27:
        $r19 := @caughtexception;

        $r10 = null;

        goto label02;

     label28:
        $r5 = "ui_predefined";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 == 0 goto label29;

        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r20 = new mp.lib.cf;

        specialinvoke $r20.<mp.lib.cf: void <init>(java.lang.String,java.util.List)>($r3, $r10);

        $r4 = $r20;

        goto label02;

     label29:
        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("xpp contains an unknown action ");

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r21;

     label30:
        $r3 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("actions");

     label31:
        if $z0 == 0 goto label12;

        if $r10 != null goto label33;

        $r10 = new java.util.ArrayList;

     label32:
        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

     label33:
        staticinvoke <mp.lib.u: void a(android.content.Context,mp.lib.model.k,org.xmlpull.v1.XmlPullParser,java.util.List)>($r0, $r1, $r2, $r10);

     label34:
        goto label12;

     label35:
        $r23 := @caughtexception;

     label36:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>(java.lang.String)>("ActionFactory.getAction: ");

        $r3 = virtualinvoke $r23.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label37:
        if $r4 == null goto label39;

        if $r11 == null goto label39;

        $r24 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label38:
        $z0 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label39;

        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        $r26 = (mp.lib.model.a$a) $r25;

        interfaceinvoke $r4.<mp.lib.model.a: void a(mp.lib.model.a$a)>($r26);

        goto label38;

     label39:
        return $r4;

     label40:
        $r27 := @caughtexception;

        goto label23;

     label41:
        $r23 := @caughtexception;

        $r11 = null;

        goto label36;

        catch java.lang.Exception from label02 to label03 with label41;
        catch java.lang.Exception from label05 to label06 with label35;
        catch java.lang.Exception from label07 to label08 with label35;
        catch java.lang.Exception from label09 to label10 with label35;
        catch java.lang.Exception from label11 to label13 with label35;
        catch java.lang.NumberFormatException from label21 to label22 with label40;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Exception from label30 to label31 with label35;
        catch java.lang.Exception from label32 to label34 with label35;
    }

    private static void a(android.content.Context, mp.lib.model.k, org.xmlpull.v1.XmlPullParser, java.util.List)
    {
        android.content.Context $r0;
        mp.lib.model.k $r1;
        org.xmlpull.v1.XmlPullParser $r2;
        java.util.List $r3;
        int $i0;
        java.lang.String $r4;
        boolean $z0;
        mp.lib.model.a $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: mp.lib.model.k;

        $r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        $r3 := @parameter3: java.util.List;

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if $i0 == 1 goto label3;

        if $i0 == 3 goto label3;

        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 != 2 goto label2;

        $r4 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("action");

        if $z0 == 0 goto label2;

        $r5 = staticinvoke <mp.lib.u: mp.lib.model.a a(android.content.Context,mp.lib.model.k,org.xmlpull.v1.XmlPullParser,int)>($r0, $r1, $r2, 3);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        $i0 = interfaceinvoke $r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label3:
        return;
    }

    public static void a(java.lang.String, java.lang.String, android.app.PendingIntent)
    {
        java.lang.String $r0, $r1, $r3, $r4;
        android.app.PendingIntent $r2;
        int $i0;
        boolean $z0;
        android.telephony.SmsManager $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.app.PendingIntent;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 15 goto label1;

        $r3 = "GT-I9100";

        $r4 = <android.os.Build: java.lang.String MODEL>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        staticinvoke <mp.am: void a(java.lang.String)>("Galaxy S2 workaround");

        $z0 = staticinvoke <mp.lib.u: boolean b(java.lang.String,java.lang.String,android.app.PendingIntent)>($r0, $r1, $r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r5 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getDefault()>();

        virtualinvoke $r5.<android.telephony.SmsManager: void sendTextMessage(java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>($r0, null, $r1, $r2, null);

        return;
    }

    public static void a(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        int $i0;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label1:
        if $i0 == 1 goto label2;

        if $i0 == 3 goto label2;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label1;

     label2:
        return;
    }

    private static void a(org.xmlpull.v1.XmlPullParser, java.util.List)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.util.List $r1;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r5;
        boolean $z0;
        java.util.regex.Pattern $r6;
        mp.lib.model.a$a $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label01:
        if $i0 == 1 goto label10;

        if $i0 == 3 goto label10;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if $i0 != 2 goto label09;

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("param");

        if $z0 == 0 goto label09;

        $r2 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "name");

        $r3 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "value");

        $r4 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "required");

        $r5 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "regex");

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label07;

     label02:
        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

     label03:
        $r7 = new mp.lib.model.a$a;

        if $r4 == null goto label08;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r4);

        if $z0 == 0 goto label08;

        $z0 = 1;

     label04:
        specialinvoke $r7.<mp.lib.model.a$a: void <init>(java.lang.String,java.lang.String,boolean,java.util.regex.Pattern)>($r2, $r3, $z0, $r6);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

     label05:
        if $i0 == 1 goto label09;

        if $i0 == 3 goto label09;

        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label05;

     label06:
        $r8 := @caughtexception;

     label07:
        $r6 = null;

        goto label03;

     label08:
        $z0 = 0;

        goto label04;

     label09:
        $i0 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        goto label01;

     label10:
        return;

        catch java.util.regex.PatternSyntaxException from label02 to label03 with label06;
    }

    public static boolean a(org.xmlpull.v1.XmlPullParser, java.lang.String, boolean)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1;
        boolean $z0, $z1;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, $r1);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z1 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r1);

     label1:
        return $z0;
    }

    public static boolean a(byte[], byte[])
    {
        byte[] $r0, $r1;
        byte $b0, $b3;
        int $i1, $i2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        if $r0 == null goto label4;

        if $r1 == null goto label4;

        $i1 = lengthof $r0;

        $i2 = lengthof $r1;

        if $i1 != $i2 goto label4;

        $i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if $i1 == $i2 goto label3;

        $b3 = $r0[$i1];

        $b0 = $r1[$i1];

        if $b3 != $b0 goto label4;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return 1;

     label4:
        return 0;
    }

    public static java.math.BigInteger b(java.lang.String)
    {
        java.lang.String $r0, varReplacer2908;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.math.BigInteger $r3;
        java.lang.Throwable $r4;
        java.lang.Class $r5;
        null_type varReplacer2906;
        int varReplacer2907;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer2908 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2908);

        virtualinvoke $r1.<java.security.MessageDigest: void reset()>();

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

     label2:
        $r3 = new java.math.BigInteger;

     label3:
        varReplacer2907 = 1;

        specialinvoke $r3.<java.math.BigInteger: void <init>(int,byte[])>(varReplacer2907, $r2);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();

        varReplacer2906 = null;

        return varReplacer2906;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
    }

    private static boolean b(java.lang.String, java.lang.String, android.app.PendingIntent)
    {
        java.lang.String $r0, $r1;
        android.app.PendingIntent $r2;
        android.telephony.SmsManager $r3;
        java.util.ArrayList $r4, $r5, $r10;
        java.lang.Class[] $r6;
        java.lang.Class $r7;
        java.lang.reflect.Method $r8;
        java.lang.Object[] $r9;
        java.lang.Boolean $r11;
        java.lang.Integer $r12;
        java.lang.Exception $r13;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.app.PendingIntent;

     label01:
        $r3 = staticinvoke <android.telephony.SmsManager: android.telephony.SmsManager getDefault()>();

     label02:
        $r4 = new java.util.ArrayList;

     label03:
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label04:
        if $r2 == null goto label06;

     label05:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

     label06:
        $r5 = new java.util.ArrayList;

     label07:
        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = newarray (java.lang.Class)[9];

        $r6[0] = class "Ljava/lang/String;";

        $r6[1] = class "Ljava/lang/String;";

        $r6[2] = class "Ljava/util/ArrayList;";

        $r6[3] = class "Ljava/util/ArrayList;";

        $r6[4] = class "Ljava/util/ArrayList;";

     label08:
        $r7 = <java.lang.Boolean: java.lang.Class TYPE>;

     label09:
        $r6[5] = $r7;

     label10:
        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

     label11:
        $r6[6] = $r7;

     label12:
        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

     label13:
        $r6[7] = $r7;

     label14:
        $r7 = <java.lang.Integer: java.lang.Class TYPE>;

     label15:
        $r6[8] = $r7;

        $r7 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("sendMultipartTextMessage", $r6);

        $r9 = newarray (java.lang.Object)[9];

        $r9[0] = $r0;

        $r9[1] = null;

        $r10 = virtualinvoke $r3.<android.telephony.SmsManager: java.util.ArrayList divideMessage(java.lang.String)>($r1);

        $r9[2] = $r10;

        $r9[3] = $r4;

        $r9[4] = $r5;

     label16:
        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label17:
        $r9[5] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r9[8] = $r12;

        $r9[7] = $r12;

        $r9[6] = $r12;

        virtualinvoke $r8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r9);

     label18:
        return 1;

     label19:
        $r13 := @caughtexception;

        return 0;

        catch java.lang.Exception from label01 to label02 with label19;
        catch java.lang.Exception from label03 to label04 with label19;
        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Exception from label09 to label10 with label19;
        catch java.lang.Exception from label11 to label12 with label19;
        catch java.lang.Exception from label13 to label14 with label19;
        catch java.lang.Exception from label15 to label16 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    public static java.lang.String c(java.lang.String)
    {
        java.lang.String $r0, varReplacer5704, varReplacer5705;
        int $i0, varReplacer5702, varReplacer5703;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        varReplacer5704 = "[^A-Z_a-z0-9\\-]";

        varReplacer5705 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(varReplacer5704, varReplacer5705);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        varReplacer5702 = 32;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, varReplacer5702);

        varReplacer5703 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5703, $i0);

     label1:
        return $r0;
    }

    public static boolean d(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, varReplacer3202, varReplacer3203, varReplacer3204;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        varReplacer3203 = 1;

        return varReplacer3203;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        varReplacer3202 = 0;

        return varReplacer3202;

     label2:
        varReplacer3204 = 1;

        return varReplacer3204;
    }

    public final mp.lib.an a()
    {
        mp.lib.u $r0, $r4;
        java.io.InputStream $r1;
        int $i0, $i1, $i2, varReplacer5806, varReplacer5807, varReplacer5812;
        boolean $z0;
        mp.lib.bs $r2;
        java.io.IOException $r3;
        mp.lib.a $r5;
        mp.lib.ah $r6;
        mp.lib.g $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9, varReplacer5809, varReplacer5810, varReplacer5811;
        mp.lib.ar $r10;
        mp.lib.aa $r11;
        mp.lib.ad $r12;
        mp.lib.af $r13;
        mp.lib.bq $r14;
        mp.lib.aj $r15;
        byte[] $r16;
        mp.lib.bo $r17;
        mp.lib.bg $r18;
        mp.lib.bi $r19;
        mp.lib.az $r20;
        mp.lib.bc $r21;
        java.lang.Throwable $r22;
        null_type varReplacer5808;

        nop;

        $r0 := @this: mp.lib.u;

        $r1 = $r0.<mp.lib.u: java.io.InputStream a>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        if $i0 != -1 goto label01;

        varReplacer5808 = null;

        return varReplacer5808;

     label01:
        $r1 = $r0.<mp.lib.u: java.io.InputStream a>;

        $z0 = $r1 instanceof mp.lib.bs;

        if $z0 == 0 goto label02;

        $r1 = $r0.<mp.lib.u: java.io.InputStream a>;

        $r2 = (mp.lib.bs) $r1;

        varReplacer5807 = 0;

        virtualinvoke $r2.<mp.lib.bs: void a(boolean)>(varReplacer5807);

     label02:
        $r1 = $r0.<mp.lib.u: java.io.InputStream a>;

        $i1 = staticinvoke <mp.lib.i: int a(java.io.InputStream,int)>($r1, $i0);

        $i2 = $i0 & 32;

        if $i2 == 0 goto label04;

        $z0 = 1;

     label03:
        $r1 = $r0.<mp.lib.u: java.io.InputStream a>;

        $i2 = $r0.<mp.lib.u: int b>;

        $i2 = staticinvoke <mp.lib.i: int b(java.io.InputStream,int)>($r1, $i2);

        if $i2 >= 0 goto label13;

        if $z0 != 0 goto label05;

        $r3 = new java.io.IOException;

        varReplacer5809 = "indefinite length primitive encoding encountered";

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>(varReplacer5809);

        throw $r3;

     label04:
        $z0 = 0;

        goto label03;

     label05:
        $r2 = new mp.lib.bs;

        $r1 = $r0.<mp.lib.u: java.io.InputStream a>;

        $i2 = $r0.<mp.lib.u: int b>;

        specialinvoke $r2.<mp.lib.bs: void <init>(java.io.InputStream,int)>($r1, $i2);

        $r4 = new mp.lib.u;

        $i2 = $r0.<mp.lib.u: int b>;

        specialinvoke $r4.<mp.lib.u: void <init>(java.io.InputStream,int)>($r2, $i2);

        $i2 = $i0 & 64;

        if $i2 == 0 goto label06;

        $r5 = new mp.lib.a;

        specialinvoke $r5.<mp.lib.a: void <init>(int,mp.lib.u)>($i1, $r4);

        return $r5;

     label06:
        $i0 = $i0 & 128;

        if $i0 == 0 goto label07;

        $r6 = new mp.lib.ah;

        varReplacer5812 = 1;

        specialinvoke $r6.<mp.lib.ah: void <init>(boolean,int,mp.lib.u)>(varReplacer5812, $i1, $r4);

        return $r6;

     label07:
        lookupswitch($i1)
        {
            case 4: goto label10;
            case 8: goto label09;
            case 16: goto label11;
            case 17: goto label12;
            default: goto label08;
        };

     label08:
        $r7 = new mp.lib.g;

        $r8 = new java.lang.StringBuilder;

        varReplacer5811 = "unknown BER object encountered: 0x";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5811);

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<mp.lib.g: void <init>(java.lang.String)>($r9);

        throw $r7;

     label09:
        $r10 = new mp.lib.ar;

        specialinvoke $r10.<mp.lib.ar: void <init>(mp.lib.u)>($r4);

        return $r10;

     label10:
        $r11 = new mp.lib.aa;

        specialinvoke $r11.<mp.lib.aa: void <init>(mp.lib.u)>($r4);

        return $r11;

     label11:
        $r12 = new mp.lib.ad;

        specialinvoke $r12.<mp.lib.ad: void <init>(mp.lib.u)>($r4);

        return $r12;

     label12:
        $r13 = new mp.lib.af;

        specialinvoke $r13.<mp.lib.af: void <init>(mp.lib.u)>($r4);

        return $r13;

     label13:
        $r14 = new mp.lib.bq;

        $r1 = $r0.<mp.lib.u: java.io.InputStream a>;

        specialinvoke $r14.<mp.lib.bq: void <init>(java.io.InputStream,int)>($r1, $i2);

        $i2 = $i0 & 64;

        if $i2 == 0 goto label14;

        $r15 = new mp.lib.aj;

        $r16 = virtualinvoke $r14.<mp.lib.bq: byte[] b()>();

        specialinvoke $r15.<mp.lib.aj: void <init>(boolean,int,byte[])>($z0, $i1, $r16);

        return $r15;

     label14:
        $i0 = $i0 & 128;

        if $i0 == 0 goto label15;

        $r6 = new mp.lib.ah;

        $r0 = new mp.lib.u;

        specialinvoke $r0.<mp.lib.u: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r6.<mp.lib.ah: void <init>(boolean,int,mp.lib.u)>($z0, $i1, $r0);

        return $r6;

     label15:
        if $z0 == 0 goto label21;

        lookupswitch($i1)
        {
            case 4: goto label17;
            case 8: goto label20;
            case 16: goto label18;
            case 17: goto label19;
            default: goto label16;
        };

     label16:
        $r17 = new mp.lib.bo;

        $r16 = virtualinvoke $r14.<mp.lib.bq: byte[] b()>();

        varReplacer5806 = 1;

        specialinvoke $r17.<mp.lib.bo: void <init>(boolean,int,byte[])>(varReplacer5806, $i1, $r16);

        return $r17;

     label17:
        $r11 = new mp.lib.aa;

        $r0 = new mp.lib.u;

        specialinvoke $r0.<mp.lib.u: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r11.<mp.lib.aa: void <init>(mp.lib.u)>($r0);

        return $r11;

     label18:
        $r18 = new mp.lib.bg;

        $r0 = new mp.lib.u;

        specialinvoke $r0.<mp.lib.u: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r18.<mp.lib.bg: void <init>(mp.lib.u)>($r0);

        return $r18;

     label19:
        $r19 = new mp.lib.bi;

        $r0 = new mp.lib.u;

        specialinvoke $r0.<mp.lib.u: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r19.<mp.lib.bi: void <init>(mp.lib.u)>($r0);

        return $r19;

     label20:
        $r10 = new mp.lib.ar;

        $r0 = new mp.lib.u;

        specialinvoke $r0.<mp.lib.u: void <init>(java.io.InputStream)>($r14);

        specialinvoke $r10.<mp.lib.ar: void <init>(mp.lib.u)>($r0);

        return $r10;

     label21:
        lookupswitch($i1)
        {
            case 4: goto label24;
            default: goto label22;
        };

     label22:
        $r16 = virtualinvoke $r14.<mp.lib.bq: byte[] b()>();

        $r20 = staticinvoke <mp.lib.i: mp.lib.az a(int,byte[])>($i1, $r16);

     label23:
        return $r20;

     label24:
        $r21 = new mp.lib.bc;

        specialinvoke $r21.<mp.lib.bc: void <init>(mp.lib.bq)>($r14);

        return $r21;

     label25:
        $r22 := @caughtexception;

        $r7 = new mp.lib.g;

        varReplacer5810 = "corrupted stream detected";

        specialinvoke $r7.<mp.lib.g: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer5810, $r22);

        throw $r7;

        catch java.lang.IllegalArgumentException from label22 to label23 with label25;
    }

    final mp.lib.az a(boolean, int)
    {
        mp.lib.u $r0;
        boolean $z0;
        int $i0, $i1, varReplacer5796, varReplacer5797, varReplacer5798, varReplacer5799, varReplacer5800, varReplacer5801, varReplacer5802;
        java.io.InputStream $r1;
        mp.lib.bq $r2;
        mp.lib.bk $r3;
        mp.lib.bb $r4;
        byte[] $r5;
        mp.lib.e $r6;
        java.util.Vector $r7;
        mp.lib.ag $r8;
        mp.lib.an $r9;
        mp.lib.ac $r10;
        mp.lib.bf $r11;

        nop;

        $r0 := @this: mp.lib.u;

        $z0 := @parameter0: boolean;

        $i0 := @parameter1: int;

        if $z0 != 0 goto label1;

        $r1 = $r0.<mp.lib.u: java.io.InputStream a>;

        $r2 = (mp.lib.bq) $r1;

        $r3 = new mp.lib.bk;

        $r4 = new mp.lib.bb;

        $r5 = virtualinvoke $r2.<mp.lib.bq: byte[] b()>();

        specialinvoke $r4.<mp.lib.bb: void <init>(byte[])>($r5);

        varReplacer5800 = 0;

        specialinvoke $r3.<mp.lib.bk: void <init>(boolean,int,mp.lib.an)>(varReplacer5800, $i0, $r4);

        return $r3;

     label1:
        $r6 = virtualinvoke $r0.<mp.lib.u: mp.lib.e b()>();

        $r1 = $r0.<mp.lib.u: java.io.InputStream a>;

        $z0 = $r1 instanceof mp.lib.bs;

        if $z0 == 0 goto label3;

        $r7 = $r6.<mp.lib.e: java.util.Vector a>;

        $i1 = virtualinvoke $r7.<java.util.Vector: int size()>();

        if $i1 != 1 goto label2;

        $r8 = new mp.lib.ag;

        varReplacer5796 = 0;

        $r9 = virtualinvoke $r6.<mp.lib.e: mp.lib.an a(int)>(varReplacer5796);

        varReplacer5802 = 1;

        specialinvoke $r8.<mp.lib.ag: void <init>(boolean,int,mp.lib.an)>(varReplacer5802, $i0, $r9);

        return $r8;

     label2:
        $r8 = new mp.lib.ag;

        $r10 = staticinvoke <mp.lib.z: mp.lib.ac a(mp.lib.e)>($r6);

        varReplacer5801 = 0;

        specialinvoke $r8.<mp.lib.ag: void <init>(boolean,int,mp.lib.an)>(varReplacer5801, $i0, $r10);

        return $r8;

     label3:
        $r7 = $r6.<mp.lib.e: java.util.Vector a>;

        $i1 = virtualinvoke $r7.<java.util.Vector: int size()>();

        if $i1 != 1 goto label4;

        $r3 = new mp.lib.bk;

        varReplacer5797 = 0;

        $r9 = virtualinvoke $r6.<mp.lib.e: mp.lib.an a(int)>(varReplacer5797);

        varReplacer5798 = 1;

        specialinvoke $r3.<mp.lib.bk: void <init>(boolean,int,mp.lib.an)>(varReplacer5798, $i0, $r9);

        return $r3;

     label4:
        $r3 = new mp.lib.bk;

        $r11 = staticinvoke <mp.lib.as: mp.lib.bf a(mp.lib.e)>($r6);

        varReplacer5799 = 0;

        specialinvoke $r3.<mp.lib.bk: void <init>(boolean,int,mp.lib.an)>(varReplacer5799, $i0, $r11);

        return $r3;
    }

    final mp.lib.e b()
    {
        mp.lib.u $r0;
        mp.lib.e $r1;
        boolean $z0;
        mp.lib.an $r2;
        mp.lib.br $r3;
        mp.lib.az $r4;

        nop;

        $r0 := @this: mp.lib.u;

        $r1 = new mp.lib.e;

        specialinvoke $r1.<mp.lib.e: void <init>()>();

     label1:
        $r2 = virtualinvoke $r0.<mp.lib.u: mp.lib.an a()>();

        if $r2 == null goto label3;

        $z0 = $r2 instanceof mp.lib.br;

        if $z0 == 0 goto label2;

        $r3 = (mp.lib.br) $r2;

        $r4 = interfaceinvoke $r3.<mp.lib.br: mp.lib.az a()>();

        virtualinvoke $r1.<mp.lib.e: void a(mp.lib.an)>($r4);

        goto label1;

     label2:
        $r4 = interfaceinvoke $r2.<mp.lib.an: mp.lib.az b()>();

        virtualinvoke $r1.<mp.lib.e: void a(mp.lib.an)>($r4);

        goto label1;

     label3:
        return $r1;
    }
}
