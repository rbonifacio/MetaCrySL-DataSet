public class com.palringo.android.base.e.a extends java.lang.Object
{
    private static final java.lang.String a;
    private static final byte[] b;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        byte[] $r2;

        nop;

        $r1 = class "Lcom/palringo/android/base/e/a;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.palringo.android.base.e.a: java.lang.String a> = $r0;

        $r2 = newarray (byte)[8];

        $r2[0] = -87;

        $r2[1] = -101;

        $r2[2] = -56;

        $r2[3] = 50;

        $r2[4] = 86;

        $r2[5] = 53;

        $r2[6] = -29;

        $r2[7] = 3;

        <com.palringo.android.base.e.a: byte[] b> = $r2;

        return;
    }

    public void <init>()
    {
        com.palringo.android.base.e.a $r0;

        $r0 := @this: com.palringo.android.base.e.a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int a(android.content.Context)
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r1;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        $i0 = interfaceinvoke $r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("CRYPTO_VERSION_PREF", 0);

        return $i0;
    }

    public static java.lang.String a(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 = staticinvoke <com.palringo.android.base.e.a: int a(android.content.Context)>($r0);

        if $i0 < 1 goto label1;

        return null;

     label1:
        staticinvoke <com.palringo.android.base.e.a: void a(android.content.Context,int)>($r0, 1);

        if $r1 == null goto label2;

        $r1 = staticinvoke <com.palringo.android.base.e.a: java.lang.String d(java.lang.String)>($r1);

        if $r1 == null goto label2;

        $r1 = staticinvoke <com.palringo.android.base.e.a: java.lang.String a(java.lang.String)>($r1);

        return $r1;

     label2:
        return null;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, varReplacer8900;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer8900 = "PBEWithSHA256And256BitAES-CBC-BC";

        $r0 = staticinvoke <com.palringo.android.base.e.a: java.lang.String a(java.lang.String,java.lang.String)>($r0, varReplacer8900);

        return $r0;
    }

    public static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer8901, varReplacer8902;
        byte[] $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = <com.palringo.android.base.e.a: byte[] b>;

        varReplacer8901 = "41ecaef47b54b6337731b0757481b007";

        varReplacer8902 = "PBEWithSHA256And256BitAES-CBC-BC";

        $r0 = staticinvoke <com.palringo.android.base.e.a: java.lang.String a(java.lang.String,byte[],java.lang.String,java.lang.String)>(varReplacer8901, $r2, $r0, varReplacer8902);

        return $r0;
    }

    private static java.lang.String a(java.lang.String, byte[], java.lang.String)
    {
        java.lang.String $r0, $r2;
        byte[] $r1;
        javax.crypto.SecretKey $r3;
        javax.crypto.Cipher $r4;
        java.lang.Throwable $r5, $r7, $r8;
        java.lang.StringBuilder $r6, r9;
        java.io.UnsupportedEncodingException r10;
        javax.crypto.IllegalBlockSizeException r11;
        javax.crypto.BadPaddingException r12;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <com.palringo.android.base.e.a: javax.crypto.SecretKey a(java.lang.String,byte[],int,java.lang.String)>($r0, $r1, 200, "PBEWithSHA256And256BitAES-CBC-BC");

        if $r3 != null goto label1;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, "Unable to generate secret key, cannot decrypt data");

        return null;

     label1:
        $r4 = staticinvoke <com.palringo.android.base.e.a: javax.crypto.Cipher a(javax.crypto.SecretKey,int,byte[],int)>($r3, 2, $r1, 200);

        if $r4 != null goto label2;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, "Unable to generate decryption cipher, cannot decrypt data");

        return null;

     label2:
        $r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, 0);

        $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label3:
        $r2 = new java.lang.String;

     label4:
        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "UTF-8");

     label5:
        return $r2;

     label6:
        $r5 := @caughtexception;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported encoding exception getting bytes from plaintext: ");

        r10 = (java.io.UnsupportedEncodingException) $r5;

        $r2 = virtualinvoke r10.<java.io.UnsupportedEncodingException: java.lang.String getLocalizedMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, $r2);

        return null;

     label7:
        $r7 := @caughtexception;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal block size while concluding the encryption operation: ");

        r11 = (javax.crypto.IllegalBlockSizeException) $r7;

        $r2 = virtualinvoke r11.<javax.crypto.IllegalBlockSizeException: java.lang.String getLocalizedMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, $r2);

        return null;

     label8:
        $r8 := @caughtexception;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad padding while concluding the encryption operation: ");

        r12 = (javax.crypto.BadPaddingException) $r8;

        $r2 = virtualinvoke r12.<javax.crypto.BadPaddingException: java.lang.String getLocalizedMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, $r2);

        return null;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label6;
        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
        catch javax.crypto.IllegalBlockSizeException from label2 to label3 with label7;
        catch javax.crypto.IllegalBlockSizeException from label4 to label5 with label7;
        catch javax.crypto.BadPaddingException from label2 to label3 with label8;
        catch javax.crypto.BadPaddingException from label4 to label5 with label8;
    }

    private static java.lang.String a(java.lang.String, byte[], java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r2, $r3, varReplacer8903, varReplacer8904, varReplacer8910, varReplacer8911, varReplacer8913, varReplacer8914, varReplacer8916, varReplacer8918;
        byte[] $r1;
        javax.crypto.SecretKey $r4;
        javax.crypto.Cipher $r5;
        java.lang.Throwable $r6, $r8, $r9;
        java.lang.StringBuilder $r7, r10;
        java.io.UnsupportedEncodingException r11;
        javax.crypto.IllegalBlockSizeException r12;
        javax.crypto.BadPaddingException r13;
        null_type varReplacer8905, varReplacer8908, varReplacer8909, varReplacer8917, varReplacer8919;
        int varReplacer8906, varReplacer8907, varReplacer8912, varReplacer8915;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        varReplacer8911 = "41ecaef47b54b6337731b0757481b007";

        varReplacer8912 = 200;

        varReplacer8913 = "PBEWithSHA256And256BitAES-CBC-BC";

        $r4 = staticinvoke <com.palringo.android.base.e.a: javax.crypto.SecretKey a(java.lang.String,byte[],int,java.lang.String)>(varReplacer8911, $r1, varReplacer8912, varReplacer8913);

        if $r4 != null goto label1;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        varReplacer8916 = "Unable to generate Secret Key, cannot encrypt data";

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, varReplacer8916);

        varReplacer8909 = null;

        return varReplacer8909;

     label1:
        varReplacer8906 = 1;

        varReplacer8907 = 200;

        $r5 = staticinvoke <com.palringo.android.base.e.a: javax.crypto.Cipher a(javax.crypto.SecretKey,int,byte[],int)>($r4, varReplacer8906, $r1, varReplacer8907);

        if $r5 != null goto label2;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        varReplacer8903 = "Unable to generate encryption cipher, cannot encrypt data";

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, varReplacer8903);

        varReplacer8905 = null;

        return varReplacer8905;

     label2:
        varReplacer8910 = "UTF-8";

        $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer8910);

        $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        varReplacer8915 = 0;

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r1, varReplacer8915);

     label3:
        return $r0;

     label4:
        $r6 := @caughtexception;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer8914 = "Unsupported encoding exception getting bytes from plaintext: ";

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8914);

        r11 = (java.io.UnsupportedEncodingException) $r6;

        $r2 = virtualinvoke r11.<java.io.UnsupportedEncodingException: java.lang.String getLocalizedMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, $r2);

        varReplacer8917 = null;

        return varReplacer8917;

     label5:
        $r8 := @caughtexception;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer8918 = "Illegal block size while concluding the encryption operation: ";

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8918);

        r12 = (javax.crypto.IllegalBlockSizeException) $r8;

        $r2 = virtualinvoke r12.<javax.crypto.IllegalBlockSizeException: java.lang.String getLocalizedMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, $r2);

        varReplacer8919 = null;

        return varReplacer8919;

     label6:
        $r9 := @caughtexception;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer8904 = "Bad padding while concluding the encryption operation: ";

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8904);

        r13 = (javax.crypto.BadPaddingException) $r9;

        $r2 = virtualinvoke r13.<javax.crypto.BadPaddingException: java.lang.String getLocalizedMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, $r2);

        varReplacer8908 = null;

        return varReplacer8908;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
        catch javax.crypto.IllegalBlockSizeException from label2 to label3 with label5;
        catch javax.crypto.BadPaddingException from label2 to label3 with label6;
    }

    private static javax.crypto.Cipher a(javax.crypto.SecretKey, int, byte[], int)
    {
        javax.crypto.SecretKey $r0;
        int $i0, $i1, varReplacer8921, varReplacer8924;
        byte[] $r1;
        java.lang.String $r2, $r7, varReplacer8922, varReplacer8923, varReplacer8925, varReplacer8926;
        javax.crypto.Cipher $r3;
        javax.crypto.spec.PBEParameterSpec $r4, r11;
        java.lang.Throwable $r5, $r8, $r9, $r10;
        java.lang.StringBuilder $r6, r12;
        java.security.NoSuchAlgorithmException r13;
        javax.crypto.NoSuchPaddingException r14;
        java.security.InvalidKeyException r15;
        java.security.InvalidAlgorithmParameterException r16;
        null_type varReplacer8920;

        nop;

        $r0 := @parameter0: javax.crypto.SecretKey;

        $i0 := @parameter1: int;

        $r1 := @parameter2: byte[];

        $i1 := @parameter3: int;

     label1:
        $r2 = interfaceinvoke $r0.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2);

     label2:
        r11 = new javax.crypto.spec.PBEParameterSpec;

        $r4 = r11;

     label3:
        varReplacer8921 = 200;

        specialinvoke r11.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r1, varReplacer8921);

        varReplacer8924 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8924, $r0, $r4);

     label4:
        return $r3;

     label5:
        $r5 := @caughtexception;

        $r2 = <com.palringo.android.base.e.a: java.lang.String a>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer8922 = "No such algorithm to generate Cipher: ";

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8922);

        r13 = (java.security.NoSuchAlgorithmException) $r5;

        $r7 = virtualinvoke r13.<java.security.NoSuchAlgorithmException: java.lang.String getLocalizedMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r2, $r7);

     label6:
        varReplacer8920 = null;

        return varReplacer8920;

     label7:
        $r8 := @caughtexception;

        $r2 = <com.palringo.android.base.e.a: java.lang.String a>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer8926 = "No such padding generating Cipher: ";

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8926);

        r14 = (javax.crypto.NoSuchPaddingException) $r8;

        $r7 = virtualinvoke r14.<javax.crypto.NoSuchPaddingException: java.lang.String getLocalizedMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r2, $r7);

        goto label6;

     label8:
        $r9 := @caughtexception;

        $r2 = <com.palringo.android.base.e.a: java.lang.String a>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer8925 = "Invalid key initialising Cipher: ";

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8925);

        r15 = (java.security.InvalidKeyException) $r9;

        $r7 = virtualinvoke r15.<java.security.InvalidKeyException: java.lang.String getLocalizedMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r2, $r7);

        goto label6;

     label9:
        $r10 := @caughtexception;

        $r2 = <com.palringo.android.base.e.a: java.lang.String a>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer8923 = "Invalid algorithm initialising Cipher: ";

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8923);

        r16 = (java.security.InvalidAlgorithmParameterException) $r10;

        $r7 = virtualinvoke r16.<java.security.InvalidAlgorithmParameterException: java.lang.String getLocalizedMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r2, $r7);

        goto label6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label7;
        catch javax.crypto.NoSuchPaddingException from label3 to label4 with label7;
        catch java.security.InvalidKeyException from label1 to label2 with label8;
        catch java.security.InvalidKeyException from label3 to label4 with label8;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label9;
        catch java.security.InvalidAlgorithmParameterException from label3 to label4 with label9;
    }

    private static javax.crypto.SecretKey a(java.lang.String, byte[], int, java.lang.String)
    {
        java.lang.String $r0, $r2, varReplacer8927, varReplacer8929, varReplacer8930;
        byte[] $r1;
        int $i0, varReplacer8928;
        javax.crypto.spec.PBEKeySpec $r3, r10;
        char[] $r4;
        javax.crypto.SecretKeyFactory $r5;
        javax.crypto.SecretKey $r6;
        java.lang.Throwable $r7, $r9;
        java.lang.StringBuilder $r8, r11;
        java.security.NoSuchAlgorithmException r12;
        java.security.spec.InvalidKeySpecException r13;
        null_type varReplacer8931;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r2 := @parameter3: java.lang.String;

        r10 = new javax.crypto.spec.PBEKeySpec;

        $r3 = r10;

     label1:
        $r4 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        varReplacer8928 = 200;

        specialinvoke r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)>($r4, $r1, varReplacer8928);

        varReplacer8929 = "PBEWithSHA256And256BitAES-CBC-BC";

        $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8929);

        $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer8930 = "No such algorithm to generate secret key: ";

        $r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8930);

        r12 = (java.security.NoSuchAlgorithmException) $r7;

        $r2 = virtualinvoke r12.<java.security.NoSuchAlgorithmException: java.lang.String getLocalizedMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, $r2);

     label4:
        varReplacer8931 = null;

        return varReplacer8931;

     label5:
        $r9 := @caughtexception;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer8927 = "Invalid key specification generating secret key: ";

        $r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8927);

        r13 = (java.security.spec.InvalidKeySpecException) $r9;

        $r2 = virtualinvoke r13.<java.security.spec.InvalidKeySpecException: java.lang.String getLocalizedMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.palringo.a.a: void d(java.lang.String,java.lang.String)>($r0, $r2);

        goto label4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label5;
    }

    private static void a(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("CRYPTO_VERSION_PREF", $i0);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    private static byte[] a(byte[])
    {
        byte[] $r0;
        javax.crypto.KeyGenerator $r1;
        java.security.SecureRandom $r2;
        javax.crypto.SecretKey $r3;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES");

        $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>("SHA1PRNG", "Crypto");

        virtualinvoke $r2.<java.security.SecureRandom: void setSeed(byte[])>($r0);

        virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(128, $r2);

        $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r0 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>();

        return $r0;
    }

    private static byte[] a(byte[], byte[])
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "AES");

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String b(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.palringo.android.base.e.a: byte[] b>;

        $r0 = staticinvoke <com.palringo.android.base.e.a: java.lang.String a(java.lang.String,byte[],java.lang.String)>("41ecaef47b54b6337731b0757481b007", $r1, $r0);

        return $r0;
    }

    public static byte[] c(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        java.lang.Integer $r3;
        byte $b4;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r2, 16);

        $b4 = virtualinvoke $r3.<java.lang.Integer: byte byteValue()>();

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static java.lang.String d(java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2, $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "41ecaef47b54b6337731b0757481b007";

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r2 = staticinvoke <com.palringo.android.base.e.a: byte[] a(byte[])>($r2);

        $r3 = staticinvoke <com.palringo.android.base.e.a: byte[] c(java.lang.String)>($r0);

        $r2 = staticinvoke <com.palringo.android.base.e.a: byte[] a(byte[],byte[])>($r2, $r3);

     label2:
        $r0 = new java.lang.String;

     label3:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r2);

     label4:
        return $r0;

     label5:
        $r4 := @caughtexception;

        $r0 = <com.palringo.android.base.e.a: java.lang.String a>;

        staticinvoke <com.palringo.a.a: void a(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, "decrypt", $r4);

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
