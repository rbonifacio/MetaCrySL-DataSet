public final class com.squareup.okhttp.internal.Util extends java.lang.Object
{
    public static final byte[] EMPTY_BYTE_ARRAY;
    public static final java.io.InputStream EMPTY_INPUT_STREAM;
    public static final java.lang.String[] EMPTY_STRING_ARRAY;
    public static final java.util.List HTTP2_AND_HTTP_11;
    public static final java.util.List HTTP2_SPDY3_AND_HTTP;
    public static final java.util.List SPDY3_AND_HTTP11;
    public static final java.nio.charset.Charset US_ASCII;
    public static final java.nio.charset.Charset UTF_8;

    static void <clinit>()
    {
        byte[] $r0;
        java.lang.String[] $r1;
        java.io.ByteArrayInputStream $r2;
        java.nio.charset.Charset $r3;
        com.squareup.okhttp.Protocol[] $r4;
        com.squareup.okhttp.Protocol $r5;
        java.util.List $r6;
        java.lang.String varReplacer798, varReplacer799;

        nop;

        $r0 = newarray (byte)[0];

        <com.squareup.okhttp.internal.Util: byte[] EMPTY_BYTE_ARRAY> = $r0;

        $r1 = newarray (java.lang.String)[0];

        <com.squareup.okhttp.internal.Util: java.lang.String[] EMPTY_STRING_ARRAY> = $r1;

        $r2 = new java.io.ByteArrayInputStream;

        $r0 = <com.squareup.okhttp.internal.Util: byte[] EMPTY_BYTE_ARRAY>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        <com.squareup.okhttp.internal.Util: java.io.InputStream EMPTY_INPUT_STREAM> = $r2;

        varReplacer799 = "US-ASCII";

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(varReplacer799);

        <com.squareup.okhttp.internal.Util: java.nio.charset.Charset US_ASCII> = $r3;

        varReplacer798 = "UTF-8";

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(varReplacer798);

        <com.squareup.okhttp.internal.Util: java.nio.charset.Charset UTF_8> = $r3;

        $r4 = newarray (com.squareup.okhttp.Protocol)[3];

        $r5 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_2>;

        $r4[0] = $r5;

        $r5 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol SPDY_3>;

        $r4[1] = $r5;

        $r5 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_11>;

        $r4[2] = $r5;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r6 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>($r6);

        <com.squareup.okhttp.internal.Util: java.util.List HTTP2_SPDY3_AND_HTTP> = $r6;

        $r4 = newarray (com.squareup.okhttp.Protocol)[2];

        $r5 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol SPDY_3>;

        $r4[0] = $r5;

        $r5 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_11>;

        $r4[1] = $r5;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r6 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>($r6);

        <com.squareup.okhttp.internal.Util: java.util.List SPDY3_AND_HTTP11> = $r6;

        $r4 = newarray (com.squareup.okhttp.Protocol)[2];

        $r5 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_2>;

        $r4[0] = $r5;

        $r5 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_11>;

        $r4[1] = $r5;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        $r6 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>($r6);

        <com.squareup.okhttp.internal.Util: java.util.List HTTP2_AND_HTTP_11> = $r6;

        return;
    }

    private void <init>()
    {
        com.squareup.okhttp.internal.Util $r0;

        $r0 := @this: com.squareup.okhttp.internal.Util;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void checkOffsetAndCount(long, long, long)
    {
        long $l0, $l1, $l2, $l3;
        byte $b4;
        java.lang.ArrayIndexOutOfBoundsException $r0;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $l3 = $l1 | $l2;

        $b4 = $l3 cmp 0L;

        if $b4 < 0 goto label1;

        $b4 = $l1 cmp $l0;

        if $b4 > 0 goto label1;

        $l0 = $l0 - $l1;

        $b4 = $l0 cmp $l2;

        if $b4 >= 0 goto label2;

     label1:
        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label2:
        return;
    }

    public static void closeAll(java.io.Closeable, java.io.Closeable) throws java.io.IOException
    {
        java.io.Closeable $r0, $r1;
        java.lang.Throwable $r2, $r3;
        boolean $z0;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;
        java.lang.Error $r6;
        java.lang.AssertionError $r7;

        nop;

        $r0 := @parameter0: java.io.Closeable;

        $r1 := @parameter1: java.io.Closeable;

        $r2 = null;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        interfaceinvoke $r1.<java.io.Closeable: void close()>();

     label3:
        if $r2 != null goto label6;

        return;

     label4:
        $r2 := @caughtexception;

        goto label2;

     label5:
        $r3 := @caughtexception;

        if $r2 != null goto label3;

        $r2 = $r3;

        goto label3;

     label6:
        $z0 = $r2 instanceof java.io.IOException;

        if $z0 == 0 goto label7;

        $r4 = (java.io.IOException) $r2;

        throw $r4;

     label7:
        $z0 = $r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label8;

        $r5 = (java.lang.RuntimeException) $r2;

        throw $r5;

     label8:
        $z0 = $r2 instanceof java.lang.Error;

        if $z0 == 0 goto label9;

        $r6 = (java.lang.Error) $r2;

        throw $r6;

     label9:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    public static void closeQuietly(java.io.Closeable)
    {
        java.io.Closeable $r0;
        java.lang.RuntimeException $r1;
        java.lang.Exception $r2;

        nop;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 == null goto label5;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        throw $r1;

     label4:
        $r2 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static void closeQuietly(java.net.ServerSocket)
    {
        java.net.ServerSocket $r0;
        java.lang.RuntimeException $r1;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.net.ServerSocket;

        if $r0 == null goto label5;

     label1:
        virtualinvoke $r0.<java.net.ServerSocket: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        throw $r1;

     label4:
        $r2 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static void closeQuietly(java.net.Socket)
    {
        java.net.Socket $r0;
        java.lang.RuntimeException $r1;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.net.Socket;

        if $r0 == null goto label5;

     label1:
        virtualinvoke $r0.<java.net.Socket: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        throw $r1;

     label4:
        $r2 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static int copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        byte[] $r2;
        int $i0, $i1;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $i1 = 0;

        $r2 = newarray (byte)[8192];

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 == -1 goto label2;

        $i1 = $i1 + $i0;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label1;

     label2:
        return $i1;
    }

    public static void deleteContents(java.io.File) throws java.io.IOException
    {
        java.io.File $r0;
        int $i0, $i1;
        java.io.File[] $r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer800, varReplacer801;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        if $r1 != null goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer800 = "not a readable directory: ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer800);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label1:
        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r0 = $r1[$i1];

        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        staticinvoke <com.squareup.okhttp.internal.Util: void deleteContents(java.io.File)>($r0);

     label3:
        $z0 = virtualinvoke $r0.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label4;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer801 = "failed to delete file: ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer801);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        return;
    }

    public static boolean equal(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;
        int varReplacer5184, varReplacer5185;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        if $r0 == $r1 goto label1;

        if $r0 == null goto label2;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        varReplacer5185 = 1;

        return varReplacer5185;

     label2:
        varReplacer5184 = 0;

        return varReplacer5184;
    }

    public static int getDefaultPort(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int varReplacer4774, varReplacer4775, varReplacer4776;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = "http";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label1;

        varReplacer4776 = 80;

        return varReplacer4776;

     label1:
        $r1 = "https";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        varReplacer4775 = 443;

        return varReplacer4775;

     label2:
        varReplacer4774 = -1;

        return varReplacer4774;
    }

    private static int getEffectivePort(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $i0 == -1 goto label1;

        return $i0;

     label1:
        $i0 = staticinvoke <com.squareup.okhttp.internal.Util: int getDefaultPort(java.lang.String)>($r0);

        return $i0;
    }

    public static int getEffectivePort(java.net.URI)
    {
        java.net.URI $r0;
        java.lang.String $r1;
        int $i0;

        nop;

        $r0 := @parameter0: java.net.URI;

        $r1 = virtualinvoke $r0.<java.net.URI: java.lang.String getScheme()>();

        $i0 = virtualinvoke $r0.<java.net.URI: int getPort()>();

        $i0 = staticinvoke <com.squareup.okhttp.internal.Util: int getEffectivePort(java.lang.String,int)>($r1, $i0);

        return $i0;
    }

    public static int getEffectivePort(java.net.URL)
    {
        java.net.URL $r0;
        java.lang.String $r1;
        int $i0;

        nop;

        $r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke $r0.<java.net.URL: java.lang.String getProtocol()>();

        $i0 = virtualinvoke $r0.<java.net.URL: int getPort()>();

        $i0 = staticinvoke <com.squareup.okhttp.internal.Util: int getEffectivePort(java.lang.String,int)>($r1, $i0);

        return $i0;
    }

    public static com.squareup.okhttp.Protocol getProtocol(com.squareup.okhttp.internal.okio.ByteString) throws java.io.IOException
    {
        com.squareup.okhttp.internal.okio.ByteString $r0, $r3;
        int $i0, $i1;
        com.squareup.okhttp.Protocol[] $r1;
        com.squareup.okhttp.Protocol $r2;
        boolean $z0;
        java.io.IOException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, varReplacer5017;

        nop;

        $r0 := @parameter0: com.squareup.okhttp.internal.okio.ByteString;

        if $r0 != null goto label1;

        $r2 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_11>;

        return $r2;

     label1:
        $r1 = staticinvoke <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol[] values()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        $r3 = $r2.<com.squareup.okhttp.Protocol: com.squareup.okhttp.internal.okio.ByteString name>;

        $z0 = virtualinvoke $r3.<com.squareup.okhttp.internal.okio.ByteString: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label4;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer5017 = "Unexpected protocol: ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5017);

        $r6 = virtualinvoke $r0.<com.squareup.okhttp.internal.okio.ByteString: java.lang.String utf8()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label4:
        return $r2;
    }

    public static java.lang.String hash(java.lang.String)
    {
        java.lang.String $r0, varReplacer4880, varReplacer4881;
        java.security.MessageDigest $r1;
        byte[] $r2;
        com.squareup.okhttp.internal.okio.ByteString $r3;
        java.lang.Throwable $r4, $r6;
        java.lang.AssertionError $r5;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer4880 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4880);

        varReplacer4881 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4881);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

        $r3 = staticinvoke <com.squareup.okhttp.internal.okio.ByteString: com.squareup.okhttp.internal.okio.ByteString of(byte[])>($r2);

        $r0 = virtualinvoke $r3.<com.squareup.okhttp.internal.okio.ByteString: java.lang.String hex()>();

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r4);

        throw $r5;

     label4:
        $r6 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6);

        throw $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static transient java.util.List headerEntries(java.lang.String[])
    {
        java.lang.String[] $r0;
        java.util.ArrayList $r1;
        java.lang.String $r2, $r4;
        int $i0, $i1;
        com.squareup.okhttp.internal.spdy.Header $r3;

        $r0 := @parameter0: java.lang.String[];

        $r1 = new java.util.ArrayList;

        $i0 = lengthof $r0;

        $i0 = $i0 / 2;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label2;

        $r3 = new com.squareup.okhttp.internal.spdy.Header;

        $r2 = $r0[$i0];

        $i1 = $i0 + 1;

        $r4 = $r0[$i1];

        specialinvoke $r3.<com.squareup.okhttp.internal.spdy.Header: void <init>(java.lang.String,java.lang.String)>($r2, $r4);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i0 = $i0 + 2;

        goto label1;

     label2:
        return $r1;
    }

    public static java.util.List immutableList(java.util.List)
    {
        java.util.List $r0;
        java.util.ArrayList $r1;

        nop;

        $r0 := @parameter0: java.util.List;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        $r0 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r0;
    }

    public static java.util.List immutableList(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1;
        java.util.List $r2;

        nop;

        $r0 := @parameter0: java.lang.Object[];

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r0 = (java.lang.Object[]) $r1;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r2;
    }

    public static com.squareup.okhttp.internal.okio.OkBuffer readFully(com.squareup.okhttp.internal.okio.Source) throws java.io.IOException
    {
        com.squareup.okhttp.internal.okio.Source $r0;
        com.squareup.okhttp.internal.okio.OkBuffer $r1;
        long $l0;
        byte $b1;

        $r0 := @parameter0: com.squareup.okhttp.internal.okio.Source;

        $r1 = new com.squareup.okhttp.internal.okio.OkBuffer;

        specialinvoke $r1.<com.squareup.okhttp.internal.okio.OkBuffer: void <init>()>();

     label1:
        $l0 = interfaceinvoke $r0.<com.squareup.okhttp.internal.okio.Source: long read(com.squareup.okhttp.internal.okio.OkBuffer,long)>($r1, 2048L);

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        interfaceinvoke $r0.<com.squareup.okhttp.internal.okio.Source: void close()>();

        return $r1;
    }

    public static void readFully(java.io.InputStream, byte[]) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        int $i0;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r1;

        staticinvoke <com.squareup.okhttp.internal.Util: void readFully(java.io.InputStream,byte[],int,int)>($r0, $r1, 0, $i0);

        return;
    }

    public static void readFully(java.io.InputStream, byte[], int, int) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        long $l0, $l1, $l5;
        int $i2, $i3, $i4;
        java.lang.NullPointerException $r2;
        java.io.EOFException $r3;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: byte[];

        $i3 := @parameter2: int;

        $i4 := @parameter3: int;

        if $i4 != 0 goto label1;

        return;

     label1:
        if $r0 != null goto label2;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("in == null");

        throw $r2;

     label2:
        if $r1 != null goto label3;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("dst == null");

        throw $r2;

     label3:
        $i2 = lengthof $r1;

        $l5 = (long) $i2;

        $l0 = (long) $i3;

        $l1 = (long) $i4;

        staticinvoke <com.squareup.okhttp.internal.Util: void checkOffsetAndCount(long,long,long)>($l5, $l0, $l1);

     label4:
        if $i4 <= 0 goto label6;

        $i2 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r1, $i3, $i4);

        if $i2 >= 0 goto label5;

        $r3 = new java.io.EOFException;

        specialinvoke $r3.<java.io.EOFException: void <init>()>();

        throw $r3;

     label5:
        $i3 = $i3 + $i2;

        $i4 = $i4 - $i2;

        goto label4;

     label6:
        return;
    }

    public static boolean skipAll(com.squareup.okhttp.internal.okio.Source, int) throws java.io.IOException
    {
        com.squareup.okhttp.internal.okio.Source $r0;
        int $i0, varReplacer9665, varReplacer9666;
        com.squareup.okhttp.internal.okio.OkBuffer $r1;
        long $l1, $l2, $l3, varReplacer9667;
        java.util.concurrent.TimeUnit $r2;
        byte $b4;

        nop;

        $r0 := @parameter0: com.squareup.okhttp.internal.okio.Source;

        $i0 := @parameter1: int;

        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        $r1 = new com.squareup.okhttp.internal.okio.OkBuffer;

        specialinvoke $r1.<com.squareup.okhttp.internal.okio.OkBuffer: void <init>()>();

     label1:
        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $l1 = $l1 - $l2;

        $l3 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long toMillis(long)>($l1);

        $l1 = (long) 100;

        $b4 = $l3 cmp $l1;

        if $b4 >= 0 goto label3;

        varReplacer9667 = 2048L;

        $l1 = interfaceinvoke $r0.<com.squareup.okhttp.internal.okio.Source: long read(com.squareup.okhttp.internal.okio.OkBuffer,long)>($r1, varReplacer9667);

        $b4 = $l1 cmp -1L;

        if $b4 != 0 goto label2;

        varReplacer9665 = 1;

        return varReplacer9665;

     label2:
        virtualinvoke $r1.<com.squareup.okhttp.internal.okio.OkBuffer: void clear()>();

        goto label1;

     label3:
        varReplacer9666 = 0;

        return varReplacer9666;
    }

    public static java.util.concurrent.ThreadFactory threadFactory(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0;
        com.squareup.okhttp.internal.Util$1 $r1;
        int varReplacer884;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = new com.squareup.okhttp.internal.Util$1;

        varReplacer884 = 1;

        specialinvoke $r1.<com.squareup.okhttp.internal.Util$1: void <init>(java.lang.String,boolean)>($r0, varReplacer884);

        return $r1;
    }
}
