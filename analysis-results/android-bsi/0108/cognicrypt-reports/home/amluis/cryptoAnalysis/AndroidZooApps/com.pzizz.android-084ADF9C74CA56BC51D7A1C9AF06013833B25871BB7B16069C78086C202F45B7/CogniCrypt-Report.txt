Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2308)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: 13ca6642cb3a9244978cba12e6c619de80088fa6c91d81111cf44717ec8c4372
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1338)
		Method: <com.mixpanel.android.mpmetrics.MPConfig: void <init>(android.os.Bundle,android.content.Context)>
		SHA-256: 1261b10c4f24ecb8e1b97d701c7a61783347d70f3e8822c52d4f512a79ee79a3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: 378fa10e2a093566e279e3caa5291b78b286b80ed5f1ca63b77d687cf94072a1
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1473)
		Method: <com.mixpanel.android.util.ImageStore: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.util.RemoteService)>
		SHA-256: 5dc56ce47bb45058b1b0b19e3cfa3b52c46be2fa236f8968ac5c2398a9f28812
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2165)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 1229f6a7046adbcd91a1794e02e52b660395e67826d15fb65ff1e61a1cc3d9f5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2279)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: 4462f6b4bbe772c0e8e01a0516a6bcdaf6be7ecafc4cc807c039500014995bf1
		Secure: false
	Object:
		Variable: varReplacer2308
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2308)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: a7dd15f029b39af1f05b8b45f1e62fc0cd1b849d44a69eae85fccb612e95d433
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2301)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: b15213d5f6ef7d68fc2c5c20bab67ea5b805e57669d632fe740d6e4ad4fd2109
		Secure: true
	Object:
		Variable: varReplacer2279
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2279)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: d167cc72c1947108bd0af0e246b66705847b31cd0c8725e60fd9dfd8edfef562
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2280)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: 9c999acad62d6e580ddecab3574788d3b1448026ca1a3ceba491bd4d64f7a23
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2154)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 1bc9273529ed2fe89151c4123b18ae9565ce725a40966fd0a48af171c6da1f7e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: a69da9772a3fe20a5b8a3da2d965798565bf108a402900bc7d0bfacd6bdeddbf
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: 39aadb73d0e9a32b92f425a1e4e292cb18454b7a893a2e3ad4134eca36da1976
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2302)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: byte[] generateSecureKey()>
		SHA-256: 6c9795b7506d077735ea7e1680b7721b35bd75b6e50b8a49ebb3d1d576838062
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2310)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])>
		SHA-256: 25e9f4e63dfe345e769ee5562001cdd742a0df2f861cd2c00a2206a1b3bb1bd2
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.pzizz.android.backend.SneakyModulePurchaseManager: void <init>(android.content.Context)>
		SHA-256: a34e20962c91ca958dc98705cf9ed3568965045deb9f4c84cb0863d5d67b5210
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r1)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 1f15fdcda9b923b07ad2fb0fff591155d212c798860f8dee84a8c357e9a78696
		Secure: false

Findings in Java Class: com.mixpanel.android.util.ImageStore

	 in Method: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.util.RemoteService)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5dc56ce47bb45058b1b0b19e3cfa3b52c46be2fa236f8968ac5c2398a9f28812)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1473)


Findings in Java Class: com.mixpanel.android.mpmetrics.AnalyticsMessages

	 in Method: void <init>(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5dc56ce47bb45058b1b0b19e3cfa3b52c46be2fa236f8968ac5c2398a9f28812)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker createWorker()>()


Findings in Java Class: com.mixpanel.android.mpmetrics.MixpanelAPI

	 in Method: void <init>(android.content.Context,java.util.concurrent.Future,java.lang.String,com.mixpanel.android.mpmetrics.MPConfig)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5dc56ce47bb45058b1b0b19e3cfa3b52c46be2fa236f8968ac5c2398a9f28812)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r7.<com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.MixpanelAPI$1)>($r0, varReplacer1420)


Findings in Java Class: com.pzizz.android.backend.SneakyModulePurchaseManager

	 in Method: void <init>(android.content.Context)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9c999acad62d6e580ddecab3574788d3b1448026ca1a3ceba491bd4d64f7a23)
			First parameter (with value "AES") should be any of AES/{CBC, CTR}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2280)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2276, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2279)


	 in Method: void persistPurchasedModules(android.content.SharedPreferences$Editor,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #25e9f4e63dfe345e769ee5562001cdd742a0df2f861cd2c00a2206a1b3bb1bd2)
			First parameter (with value "AES") should be any of AES/{CBC, CTR}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2310)


Findings in Java Class: com.mixpanel.android.mpmetrics.MPConfig

	 in Method: void <init>(android.os.Bundle,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1365, varReplacer1365, varReplacer1365)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1365, varReplacer1365, varReplacer1365)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2166, r5, varReplacer2166)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2166, r5, varReplacer2166)


Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2155, varReplacer2155, varReplacer2155)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2155, varReplacer2155, varReplacer2155)


Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r7, $r8)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 10
	ConstraintError: 3
	IncompleteOperationError: 2
=====================================================================