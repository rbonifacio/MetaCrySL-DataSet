public class com.mixpanel.android.mpmetrics.MixpanelAPI extends java.lang.Object
{
    private static final java.lang.String APP_LINKS_LOGTAG;
    private static final java.lang.String ENGAGE_DATE_FORMAT_STRING;
    private static final java.lang.String LOGTAG;
    public static final java.lang.String VERSION;
    private static final java.util.Map sInstanceMap;
    private static final com.mixpanel.android.mpmetrics.SharedPreferencesLoader sPrefsLoader;
    private static java.util.concurrent.Future sReferrerPrefs;
    private static final com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks;
    private final com.mixpanel.android.mpmetrics.MPConfig mConfig;
    private final android.content.Context mContext;
    private final com.mixpanel.android.mpmetrics.DecideMessages mDecideMessages;
    private final java.util.Map mDeviceInfo;
    private final java.util.Map mEventTimings;
    private final com.mixpanel.android.mpmetrics.AnalyticsMessages mMessages;
    private final com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl mPeople;
    private final com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity;
    private final java.lang.String mToken;
    private final com.mixpanel.android.viewcrawler.TrackingDebug mTrackingDebug;
    private final com.mixpanel.android.viewcrawler.UpdatesFromMixpanel mUpdatesFromMixpanel;
    private final com.mixpanel.android.mpmetrics.MixpanelAPI$UpdatesListener mUpdatesListener;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        com.mixpanel.android.mpmetrics.SharedPreferencesLoader $r1;
        com.mixpanel.android.mpmetrics.Tweaks $r2;

        nop;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map sInstanceMap> = $r0;

        $r1 = new com.mixpanel.android.mpmetrics.SharedPreferencesLoader;

        specialinvoke $r1.<com.mixpanel.android.mpmetrics.SharedPreferencesLoader: void <init>()>();

        <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.SharedPreferencesLoader sPrefsLoader> = $r1;

        $r2 = new com.mixpanel.android.mpmetrics.Tweaks;

        specialinvoke $r2.<com.mixpanel.android.mpmetrics.Tweaks: void <init>()>();

        <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks> = $r2;

        return;
    }

    void <init>(android.content.Context, java.util.concurrent.Future, java.lang.String)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        android.content.Context $r1;
        java.util.concurrent.Future $r2;
        java.lang.String $r3, varReplacer1323;
        com.mixpanel.android.mpmetrics.MPConfig $r4;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.util.concurrent.Future;

        $r3 := @parameter2: java.lang.String;

        $r4 = staticinvoke <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig getInstance(android.content.Context)>($r1);

        varReplacer1323 = "d0e4eb487eeb24204930c127fef04db2";

        specialinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void <init>(android.content.Context,java.util.concurrent.Future,java.lang.String,com.mixpanel.android.mpmetrics.MPConfig)>($r1, $r2, varReplacer1323, $r4);

        return;
    }

    void <init>(android.content.Context, java.util.concurrent.Future, java.lang.String, com.mixpanel.android.mpmetrics.MPConfig)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        android.content.Context $r1, $r9;
        java.util.concurrent.Future $r2;
        java.lang.String $r3, $r8, varReplacer1417, varReplacer1418, varReplacer1419, varReplacer1422, varReplacer1423, varReplacer1425, varReplacer1426, varReplacer1427, varReplacer1428, varReplacer1429, varReplacer1430, varReplacer1431, varReplacer1432, varReplacer1433, varReplacer1434, varReplacer1435, varReplacer1436;
        com.mixpanel.android.mpmetrics.MPConfig $r4;
        java.util.HashMap $r5;
        java.lang.Throwable $r6;
        com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl $r7;
        android.content.pm.PackageManager $r10;
        android.content.pm.PackageInfo $r11;
        int $i0, varReplacer1421;
        java.util.Map $r12;
        com.mixpanel.android.viewcrawler.UpdatesFromMixpanel $r13;
        com.mixpanel.android.viewcrawler.TrackingDebug $r14;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r15;
        com.mixpanel.android.mpmetrics.MixpanelAPI$UpdatesListener $r16;
        com.mixpanel.android.mpmetrics.DecideMessages $r17;
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r18;
        boolean $z0;
        null_type varReplacer1420, varReplacer1424;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.util.concurrent.Future;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.mixpanel.android.mpmetrics.MPConfig;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: android.content.Context mContext> = $r1;

        varReplacer1436 = "d0e4eb487eeb24204930c127fef04db2";

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.lang.String mToken> = varReplacer1436;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map mEventTimings> = $r5;

        $r7 = new com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl;

        varReplacer1420 = null;

        specialinvoke $r7.<com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.MixpanelAPI$1)>($r0, varReplacer1420);

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl mPeople> = $r7;

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MPConfig mConfig> = $r4;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        varReplacer1433 = "$android_lib_version";

        varReplacer1434 = "4.8.0";

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1433, varReplacer1434);

        varReplacer1425 = "$android_os";

        varReplacer1426 = "Android";

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1425, varReplacer1426);

        $r8 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        if $r8 != null goto label16;

        $r8 = "UNKNOWN";

     label01:
        varReplacer1432 = "$android_os_version";

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1432, $r8);

        $r8 = <android.os.Build: java.lang.String MANUFACTURER>;

        if $r8 != null goto label17;

        $r8 = "UNKNOWN";

     label02:
        varReplacer1435 = "$android_manufacturer";

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1435, $r8);

        $r8 = <android.os.Build: java.lang.String BRAND>;

        if $r8 != null goto label18;

        $r8 = "UNKNOWN";

     label03:
        varReplacer1428 = "$android_brand";

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1428, $r8);

        $r8 = <android.os.Build: java.lang.String MODEL>;

        if $r8 != null goto label19;

        $r8 = "UNKNOWN";

     label04:
        varReplacer1417 = "$android_model";

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1417, $r8);

        $r9 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: android.content.Context mContext>;

     label05:
        $r10 = virtualinvoke $r9.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label06:
        $r9 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: android.content.Context mContext>;

     label07:
        $r8 = virtualinvoke $r9.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1421 = 0;

        $r11 = virtualinvoke $r10.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r8, varReplacer1421);

     label08:
        $r8 = $r11.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label09:
        varReplacer1427 = "$android_app_version";

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1427, $r8);

     label10:
        $i0 = $r11.<android.content.pm.PackageInfo: int versionCode>;

     label11:
        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        varReplacer1422 = "$android_app_version_code";

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1422, $r8);

     label12:
        $r12 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r5);

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map mDeviceInfo> = $r12;

        varReplacer1429 = "d0e4eb487eeb24204930c127fef04db2";

        $r13 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.UpdatesFromMixpanel constructUpdatesFromMixpanel(android.content.Context,java.lang.String)>($r1, varReplacer1429);

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.UpdatesFromMixpanel mUpdatesFromMixpanel> = $r13;

        $r14 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.TrackingDebug constructTrackingDebug()>();

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.TrackingDebug mTrackingDebug> = $r14;

        varReplacer1419 = "d0e4eb487eeb24204930c127fef04db2";

        $r15 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity getPersistentIdentity(android.content.Context,java.util.concurrent.Future,java.lang.String)>($r1, $r2, varReplacer1419);

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity> = $r15;

        $r16 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MixpanelAPI$UpdatesListener constructUpdatesListener()>();

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MixpanelAPI$UpdatesListener mUpdatesListener> = $r16;

        $r16 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MixpanelAPI$UpdatesListener mUpdatesListener>;

        $r13 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.UpdatesFromMixpanel mUpdatesFromMixpanel>;

        varReplacer1418 = "d0e4eb487eeb24204930c127fef04db2";

        $r17 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.DecideMessages constructDecideUpdates(java.lang.String,com.mixpanel.android.mpmetrics.DecideMessages$OnNewResultsListener,com.mixpanel.android.viewcrawler.UpdatesFromMixpanel)>(varReplacer1418, $r16, $r13);

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.DecideMessages mDecideMessages> = $r17;

        $r15 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        $r3 = virtualinvoke $r15.<com.mixpanel.android.mpmetrics.PersistentIdentity: java.lang.String getPeopleDistinctId()>();

        $r8 = $r3;

        if $r3 != null goto label13;

        $r15 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        $r8 = virtualinvoke $r15.<com.mixpanel.android.mpmetrics.PersistentIdentity: java.lang.String getEventsDistinctId()>();

     label13:
        $r17 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.DecideMessages mDecideMessages>;

        virtualinvoke $r17.<com.mixpanel.android.mpmetrics.DecideMessages: void setDistinctId(java.lang.String)>($r8);

        $r18 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.AnalyticsMessages getAnalyticsMessages()>();

        $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.AnalyticsMessages mMessages> = $r18;

        $r4 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MPConfig mConfig>;

        $z0 = virtualinvoke $r4.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableDecideChecker()>();

        if $z0 != 0 goto label14;

        $r18 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.AnalyticsMessages mMessages>;

        $r17 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.DecideMessages mDecideMessages>;

        virtualinvoke $r18.<com.mixpanel.android.mpmetrics.AnalyticsMessages: void installDecideCheck(com.mixpanel.android.mpmetrics.DecideMessages)>($r17);

     label14:
        virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void registerMixpanelActivityLifecycleCallbacks()>();

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: boolean sendAppOpen()>();

        if $z0 == 0 goto label15;

        varReplacer1423 = "$app_open";

        varReplacer1424 = null;

        virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void track(java.lang.String,org.json.JSONObject)>(varReplacer1423, varReplacer1424);

     label15:
        $r13 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.UpdatesFromMixpanel mUpdatesFromMixpanel>;

        interfaceinvoke $r13.<com.mixpanel.android.viewcrawler.UpdatesFromMixpanel: void startUpdates()>();

        return;

     label16:
        $r8 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        goto label01;

     label17:
        $r8 = <android.os.Build: java.lang.String MANUFACTURER>;

        goto label02;

     label18:
        $r8 = <android.os.Build: java.lang.String BRAND>;

        goto label03;

     label19:
        $r8 = <android.os.Build: java.lang.String MODEL>;

        goto label04;

     label20:
        $r6 := @caughtexception;

        varReplacer1430 = "MixpanelAPI.API";

        varReplacer1431 = "Exception getting app version name";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1430, varReplacer1431, $r6);

        goto label12;

        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label20;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label20;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label20;
        catch android.content.pm.PackageManager$NameNotFoundException from label11 to label12 with label20;
    }

    static void access$100(com.mixpanel.android.mpmetrics.MixpanelAPI, org.json.JSONArray)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        org.json.JSONArray $r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter1: org.json.JSONArray;

        specialinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void sendAllPeopleRecords(org.json.JSONArray)>($r1);

        return;
    }

    static com.mixpanel.android.viewcrawler.UpdatesFromMixpanel access$1000(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.viewcrawler.UpdatesFromMixpanel r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.UpdatesFromMixpanel mUpdatesFromMixpanel>;

        return r1;
    }

    static android.content.Context access$1100(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        android.content.Context r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: android.content.Context mContext>;

        return r1;
    }

    static com.mixpanel.android.mpmetrics.MixpanelAPI$UpdatesListener access$1200(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.MixpanelAPI$UpdatesListener r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MixpanelAPI$UpdatesListener mUpdatesListener>;

        return r1;
    }

    static java.lang.String access$1300(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.lang.String mToken>;

        return r1;
    }

    static com.mixpanel.android.mpmetrics.AnalyticsMessages access$1400(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.AnalyticsMessages mMessages>;

        return r1;
    }

    static com.mixpanel.android.mpmetrics.PersistentIdentity access$400(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.PersistentIdentity r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        return r1;
    }

    static com.mixpanel.android.mpmetrics.DecideMessages access$500(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.DecideMessages r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.DecideMessages mDecideMessages>;

        return r1;
    }

    static void access$600(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        specialinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void pushWaitingPeopleRecord()>();

        return;
    }

    static java.util.Map access$700(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.util.Map r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map mDeviceInfo>;

        return r1;
    }

    static void access$800(com.mixpanel.android.mpmetrics.MixpanelAPI, org.json.JSONObject)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        org.json.JSONObject $r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter1: org.json.JSONObject;

        specialinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void recordPeopleMessage(org.json.JSONObject)>($r1);

        return;
    }

    static com.mixpanel.android.mpmetrics.MPConfig access$900(com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.MPConfig r1;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MPConfig mConfig>;

        return r1;
    }

    static void allInstances(com.mixpanel.android.mpmetrics.MixpanelAPI$InstanceProcessor)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI$InstanceProcessor $r0;
        java.util.Map $r1, $r2;
        java.util.Collection $r3;
        java.util.Iterator $r4, $r6;
        boolean $z0;
        java.lang.Object $r5;
        com.mixpanel.android.mpmetrics.MixpanelAPI $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.MixpanelAPI$InstanceProcessor;

        $r1 = <com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map sInstanceMap>;

        entermonitor $r1;

     label1:
        $r2 = <com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map sInstanceMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.util.Map) $r5;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r6 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (com.mixpanel.android.mpmetrics.MixpanelAPI) $r5;

        interfaceinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI$InstanceProcessor: void process(com.mixpanel.android.mpmetrics.MixpanelAPI)>($r7);

        goto label3;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r8;

     label6:
        exitmonitor $r1;

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label4;
        catch java.lang.Throwable from label6 to label7 with label4;
    }

    public static com.mixpanel.android.mpmetrics.Tweak booleanTweak(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0;
        com.mixpanel.android.mpmetrics.Tweak $r1;
        com.mixpanel.android.mpmetrics.Tweaks $r2;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        $r1 = virtualinvoke $r2.<com.mixpanel.android.mpmetrics.Tweaks: com.mixpanel.android.mpmetrics.Tweak booleanTweak(java.lang.String,boolean)>($r0, $z0);

        return $r1;
    }

    public static com.mixpanel.android.mpmetrics.Tweak byteTweak(java.lang.String, byte)
    {
        java.lang.String $r0;
        byte $b0;
        com.mixpanel.android.mpmetrics.Tweak $r1;
        com.mixpanel.android.mpmetrics.Tweaks $r2;

        $r0 := @parameter0: java.lang.String;

        $b0 := @parameter1: byte;

        $r2 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        $r1 = virtualinvoke $r2.<com.mixpanel.android.mpmetrics.Tweaks: com.mixpanel.android.mpmetrics.Tweak byteTweak(java.lang.String,byte)>($r0, $b0);

        return $r1;
    }

    private static void checkIntentForInboundAppLink(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;
        java.lang.Class $r1;
        android.app.Activity $r2;
        android.content.Intent $r3;
        java.lang.Class[] $r4;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r6;
        java.lang.Throwable $r7, $r11, $r12;
        java.lang.ClassNotFoundException $r8;
        java.lang.StringBuilder $r9, r13;
        java.lang.String $r10, varReplacer1279, varReplacer1280, varReplacer1281, varReplacer1282, varReplacer1283, varReplacer1284, varReplacer1285, varReplacer1286, varReplacer1288, varReplacer1289, varReplacer1290, varReplacer1291;
        java.lang.NoSuchMethodException r14;
        java.lang.IllegalAccessException r15;
        null_type varReplacer1287;

        nop;

        $r0 := @parameter0: android.content.Context;

        $z0 = $r0 instanceof android.app.Activity;

        if $z0 == 0 goto label13;

     label01:
        varReplacer1281 = "bolts.AppLinks";

        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(varReplacer1281);

     label02:
        $r2 = (android.app.Activity) $r0;

     label03:
        $r3 = virtualinvoke $r2.<android.app.Activity: android.content.Intent getIntent()>();

     label04:
        $r4 = newarray (java.lang.Class)[2];

        $r4[0] = class "Landroid/content/Context;";

        $r4[1] = class "Landroid/content/Intent;";

     label05:
        varReplacer1289 = "getTargetUrlFromInboundIntent";

        $r5 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(varReplacer1289, $r4);

     label06:
        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r0;

        $r6[1] = $r3;

     label07:
        varReplacer1287 = null;

        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(varReplacer1287, $r6);

     label08:
        return;

     label09:
        $r7 := @caughtexception;

        varReplacer1279 = "MixpanelAPI.AL";

        varReplacer1280 = "Failed to invoke bolts.AppLinks.getTargetUrlFromInboundIntent() -- Unable to detect inbound App Links";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1279, varReplacer1280, $r7);

        return;

     label10:
        $r8 := @caughtexception;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        varReplacer1282 = "Please install the Bolts library >= 1.1.2 to track App Links: ";

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1282);

        $r10 = virtualinvoke $r8.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1286 = "MixpanelAPI.AL";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1286, $r10);

        return;

     label11:
        $r11 := @caughtexception;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        varReplacer1288 = "Please install the Bolts library >= 1.1.2 to track App Links: ";

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1288);

        r14 = (java.lang.NoSuchMethodException) $r11;

        $r10 = virtualinvoke r14.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1285 = "MixpanelAPI.AL";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1285, $r10);

        return;

     label12:
        $r12 := @caughtexception;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        varReplacer1290 = "Unable to detect inbound App Links: ";

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1290);

        r15 = (java.lang.IllegalAccessException) $r12;

        $r10 = virtualinvoke r15.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1291 = "MixpanelAPI.AL";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1291, $r10);

        return;

     label13:
        varReplacer1283 = "MixpanelAPI.AL";

        varReplacer1284 = "Context is not an instance of Activity. To detect inbound App Links, pass an instance of an Activity to getInstance.";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1283, varReplacer1284);

        return;

        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label09;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label09;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label09;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label09;
        catch java.lang.ClassNotFoundException from label01 to label02 with label10;
        catch java.lang.ClassNotFoundException from label03 to label04 with label10;
        catch java.lang.ClassNotFoundException from label05 to label06 with label10;
        catch java.lang.ClassNotFoundException from label07 to label08 with label10;
        catch java.lang.NoSuchMethodException from label01 to label02 with label11;
        catch java.lang.NoSuchMethodException from label03 to label04 with label11;
        catch java.lang.NoSuchMethodException from label05 to label06 with label11;
        catch java.lang.NoSuchMethodException from label07 to label08 with label11;
        catch java.lang.IllegalAccessException from label01 to label02 with label12;
        catch java.lang.IllegalAccessException from label03 to label04 with label12;
        catch java.lang.IllegalAccessException from label05 to label06 with label12;
        catch java.lang.IllegalAccessException from label07 to label08 with label12;
    }

    public static com.mixpanel.android.mpmetrics.Tweak doubleTweak(java.lang.String, double)
    {
        java.lang.String $r0;
        double $d0;
        com.mixpanel.android.mpmetrics.Tweak $r1;
        com.mixpanel.android.mpmetrics.Tweaks $r2;

        $r0 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        $r2 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        $r1 = virtualinvoke $r2.<com.mixpanel.android.mpmetrics.Tweaks: com.mixpanel.android.mpmetrics.Tweak doubleTweak(java.lang.String,double)>($r0, $d0);

        return $r1;
    }

    public static void enableFallbackServer(android.content.Context, boolean)
    {
        android.content.Context $r0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MixpanelAPI.API", "MixpanelAPI.enableFallbackServer is deprecated. This call is a no-op.\n    To enable fallback in your application, add\n    <meta-data android:name=\"com.mixpanel.android.MPConfig.DisableFallback\" android:value=\"false\" />\n    to the <application> section of your AndroidManifest.xml.");

        return;
    }

    public static com.mixpanel.android.mpmetrics.Tweak floatTweak(java.lang.String, float)
    {
        java.lang.String $r0;
        float $f0;
        com.mixpanel.android.mpmetrics.Tweak $r1;
        com.mixpanel.android.mpmetrics.Tweaks $r2;

        $r0 := @parameter0: java.lang.String;

        $f0 := @parameter1: float;

        $r2 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        $r1 = virtualinvoke $r2.<com.mixpanel.android.mpmetrics.Tweaks: com.mixpanel.android.mpmetrics.Tweak floatTweak(java.lang.String,float)>($r0, $f0);

        return $r1;
    }

    public static com.mixpanel.android.mpmetrics.MixpanelAPI getInstance(android.content.Context, java.lang.String)
    {
        android.content.Context $r0, $r3;
        java.lang.String $r1, varReplacer1273, varReplacer1275, varReplacer1276, varReplacer1277;
        java.util.Map $r2, $r6;
        java.util.concurrent.Future $r4;
        com.mixpanel.android.mpmetrics.SharedPreferencesLoader $r5;
        java.lang.Object $r7, $r8;
        com.mixpanel.android.mpmetrics.MixpanelAPI $r9, r12;
        boolean $z0;
        java.lang.Throwable $r10;
        java.util.HashMap r11;
        null_type varReplacer1274, varReplacer1278;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        varReplacer1278 = null;

        return varReplacer1278;

     label1:
        $r2 = <com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map sInstanceMap>;

        entermonitor $r2;

     label2:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = <com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.concurrent.Future sReferrerPrefs>;

        if $r4 != null goto label3;

        $r5 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.SharedPreferencesLoader sPrefsLoader>;

        varReplacer1273 = "com.mixpanel.android.mpmetrics.ReferralInfo";

        varReplacer1274 = null;

        $r4 = virtualinvoke $r5.<com.mixpanel.android.mpmetrics.SharedPreferencesLoader: java.util.concurrent.Future loadPreferences(android.content.Context,java.lang.String,com.mixpanel.android.mpmetrics.SharedPreferencesLoader$OnPrefsLoadedListener)>($r0, varReplacer1273, varReplacer1274);

        <com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.concurrent.Future sReferrerPrefs> = $r4;

     label3:
        $r6 = <com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map sInstanceMap>;

        varReplacer1275 = "d0e4eb487eeb24204930c127fef04db2";

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer1275);

        $r7 = (java.util.Map) $r7;

        if $r7 != null goto label4;

        r11 = new java.util.HashMap;

        $r7 = r11;

        specialinvoke r11.<java.util.HashMap: void <init>()>();

        $r6 = <com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map sInstanceMap>;

        varReplacer1276 = "d0e4eb487eeb24204930c127fef04db2";

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1276, $r7);

     label4:
        $r6 = (java.util.Map) $r7;

        $r8 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r9 = (com.mixpanel.android.mpmetrics.MixpanelAPI) $r8;

        if $r9 != null goto label5;

        $z0 = staticinvoke <com.mixpanel.android.mpmetrics.ConfigurationChecker: boolean checkBasicConfiguration(android.content.Context)>($r3);

        if $z0 == 0 goto label5;

        r12 = new com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r9 = r12;

        $r4 = <com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.concurrent.Future sReferrerPrefs>;

        varReplacer1277 = "d0e4eb487eeb24204930c127fef04db2";

        specialinvoke r12.<com.mixpanel.android.mpmetrics.MixpanelAPI: void <init>(android.content.Context,java.util.concurrent.Future,java.lang.String)>($r3, $r4, varReplacer1277);

        staticinvoke <com.mixpanel.android.mpmetrics.MixpanelAPI: void registerAppLinksListeners(android.content.Context,com.mixpanel.android.mpmetrics.MixpanelAPI)>($r0, $r9);

        $r6 = (java.util.Map) $r7;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r9);

     label5:
        staticinvoke <com.mixpanel.android.mpmetrics.MixpanelAPI: void checkIntentForInboundAppLink(android.content.Context)>($r0);

        exitmonitor $r2;

     label6:
        return $r9;

     label7:
        $r10 := @caughtexception;

        exitmonitor $r2;

     label8:
        throw $r10;

        catch java.lang.Throwable from label2 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static com.mixpanel.android.mpmetrics.Tweak intTweak(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        com.mixpanel.android.mpmetrics.Tweak $r1;
        com.mixpanel.android.mpmetrics.Tweaks $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        $r1 = virtualinvoke $r2.<com.mixpanel.android.mpmetrics.Tweaks: com.mixpanel.android.mpmetrics.Tweak intTweak(java.lang.String,int)>($r0, $i0);

        return $r1;
    }

    public static com.mixpanel.android.mpmetrics.Tweak longTweak(java.lang.String, long)
    {
        java.lang.String $r0;
        long $l0;
        com.mixpanel.android.mpmetrics.Tweak $r1;
        com.mixpanel.android.mpmetrics.Tweaks $r2;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r2 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        $r1 = virtualinvoke $r2.<com.mixpanel.android.mpmetrics.Tweaks: com.mixpanel.android.mpmetrics.Tweak longTweak(java.lang.String,long)>($r0, $l0);

        return $r1;
    }

    private void pushWaitingPeopleRecord()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r1;
        org.json.JSONArray $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        $r2 = virtualinvoke $r1.<com.mixpanel.android.mpmetrics.PersistentIdentity: org.json.JSONArray waitingPeopleRecordsForSending()>();

        if $r2 == null goto label1;

        specialinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void sendAllPeopleRecords(org.json.JSONArray)>($r2);

     label1:
        return;
    }

    private void recordPeopleMessage(org.json.JSONObject)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        org.json.JSONObject $r1;
        boolean $z0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r2;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r3;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: org.json.JSONObject;

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("$distinct_id");

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.AnalyticsMessages mMessages>;

        virtualinvoke $r2.<com.mixpanel.android.mpmetrics.AnalyticsMessages: void peopleMessage(org.json.JSONObject)>($r1);

        return;

     label1:
        $r3 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        virtualinvoke $r3.<com.mixpanel.android.mpmetrics.PersistentIdentity: void storeWaitingPeopleRecord(org.json.JSONObject)>($r1);

        return;
    }

    private static void registerAppLinksListeners(android.content.Context, com.mixpanel.android.mpmetrics.MixpanelAPI)
    {
        android.content.Context $r0;
        com.mixpanel.android.mpmetrics.MixpanelAPI $r1;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4, $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r8, $r12, $r13;
        java.lang.ClassNotFoundException $r9;
        java.lang.StringBuilder $r10, r16;
        java.lang.String $r11, varReplacer1292, varReplacer1293, varReplacer1294, varReplacer1295, varReplacer1296, varReplacer1297, varReplacer1298, varReplacer1299, varReplacer1301, varReplacer1302, varReplacer1303, varReplacer1304;
        com.mixpanel.android.mpmetrics.MixpanelAPI$2 r14;
        android.content.IntentFilter r15;
        java.lang.NoSuchMethodException r17;
        java.lang.IllegalAccessException r18;
        null_type varReplacer1300;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.mixpanel.android.mpmetrics.MixpanelAPI;

     label01:
        varReplacer1296 = "android.support.v4.content.LocalBroadcastManager";

        $r2 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(varReplacer1296);

     label02:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Landroid/content/Context;";

     label03:
        varReplacer1292 = "getInstance";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(varReplacer1292, $r3);

     label04:
        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = class "Landroid/content/BroadcastReceiver;";

        $r3[1] = class "Landroid/content/IntentFilter;";

     label05:
        varReplacer1304 = "registerReceiver";

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(varReplacer1304, $r3);

     label06:
        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r0;

     label07:
        varReplacer1300 = null;

        $r7 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(varReplacer1300, $r6);

     label08:
        $r6 = newarray (java.lang.Object)[2];

        r14 = new com.mixpanel.android.mpmetrics.MixpanelAPI$2;

     label09:
        specialinvoke r14.<com.mixpanel.android.mpmetrics.MixpanelAPI$2: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI)>($r1);

     label10:
        $r6[0] = r14;

        r15 = new android.content.IntentFilter;

     label11:
        varReplacer1298 = "com.parse.bolts.measurement_event";

        specialinvoke r15.<android.content.IntentFilter: void <init>(java.lang.String)>(varReplacer1298);

     label12:
        $r6[1] = r15;

     label13:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r7, $r6);

     label14:
        return;

     label15:
        $r8 := @caughtexception;

        varReplacer1294 = "MixpanelAPI.AL";

        varReplacer1295 = "Failed to invoke LocalBroadcastManager.registerReceiver() -- App Links tracking will not be enabled due to this exception";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1294, varReplacer1295, $r8);

        return;

     label16:
        $r9 := @caughtexception;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer1293 = "To enable App Links tracking android.support.v4 must be installed: ";

        $r10 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1293);

        $r11 = virtualinvoke $r9.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1297 = "MixpanelAPI.AL";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1297, $r11);

        return;

     label17:
        $r12 := @caughtexception;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer1299 = "To enable App Links tracking android.support.v4 must be installed: ";

        $r10 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1299);

        r17 = (java.lang.NoSuchMethodException) $r12;

        $r11 = virtualinvoke r17.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1301 = "MixpanelAPI.AL";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1301, $r11);

        return;

     label18:
        $r13 := @caughtexception;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer1303 = "App Links tracking will not be enabled due to this exception: ";

        $r10 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1303);

        r18 = (java.lang.IllegalAccessException) $r13;

        $r11 = virtualinvoke r18.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1302 = "MixpanelAPI.AL";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1302, $r11);

        return;

        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label15;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label15;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label15;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label15;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label15;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label15;
        catch java.lang.reflect.InvocationTargetException from label13 to label14 with label15;
        catch java.lang.ClassNotFoundException from label01 to label02 with label16;
        catch java.lang.ClassNotFoundException from label03 to label04 with label16;
        catch java.lang.ClassNotFoundException from label05 to label06 with label16;
        catch java.lang.ClassNotFoundException from label07 to label08 with label16;
        catch java.lang.ClassNotFoundException from label09 to label10 with label16;
        catch java.lang.ClassNotFoundException from label11 to label12 with label16;
        catch java.lang.ClassNotFoundException from label13 to label14 with label16;
        catch java.lang.NoSuchMethodException from label01 to label02 with label17;
        catch java.lang.NoSuchMethodException from label03 to label04 with label17;
        catch java.lang.NoSuchMethodException from label05 to label06 with label17;
        catch java.lang.NoSuchMethodException from label07 to label08 with label17;
        catch java.lang.NoSuchMethodException from label09 to label10 with label17;
        catch java.lang.NoSuchMethodException from label11 to label12 with label17;
        catch java.lang.NoSuchMethodException from label13 to label14 with label17;
        catch java.lang.IllegalAccessException from label01 to label02 with label18;
        catch java.lang.IllegalAccessException from label03 to label04 with label18;
        catch java.lang.IllegalAccessException from label05 to label06 with label18;
        catch java.lang.IllegalAccessException from label07 to label08 with label18;
        catch java.lang.IllegalAccessException from label09 to label10 with label18;
        catch java.lang.IllegalAccessException from label11 to label12 with label18;
        catch java.lang.IllegalAccessException from label13 to label14 with label18;
    }

    private void sendAllPeopleRecords(org.json.JSONArray)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        org.json.JSONArray $r1;
        org.json.JSONException $r2;
        int $i0, $i1;
        org.json.JSONObject $r3;
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r4;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: org.json.JSONArray;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label7;

     label2:
        $r3 = virtualinvoke $r1.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

     label3:
        $r4 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.AnalyticsMessages mMessages>;

     label4:
        virtualinvoke $r4.<com.mixpanel.android.mpmetrics.AnalyticsMessages: void peopleMessage(org.json.JSONObject)>($r3);

     label5:
        $i0 = $i0 + 1;

        goto label1;

     label6:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MixpanelAPI.API", "Malformed people record stored pending identity, will not send it.", $r2);

        goto label5;

     label7:
        return;

        catch org.json.JSONException from label2 to label3 with label6;
        catch org.json.JSONException from label4 to label5 with label6;
    }

    public static void setFlushInterval(android.content.Context, long)
    {
        android.content.Context $r0;
        long $l0;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MixpanelAPI.API", "MixpanelAPI.setFlushInterval is deprecated. Calling is now a no-op.\n    To set a custom Mixpanel flush interval for your application, add\n    <meta-data android:name=\"com.mixpanel.android.MPConfig.FlushInterval\" android:value=\"YOUR_INTERVAL\" />\n    to the <application> section of your AndroidManifest.xml.");

        return;
    }

    public static com.mixpanel.android.mpmetrics.Tweak shortTweak(java.lang.String, short)
    {
        java.lang.String $r0;
        short $s0;
        com.mixpanel.android.mpmetrics.Tweak $r1;
        com.mixpanel.android.mpmetrics.Tweaks $r2;

        $r0 := @parameter0: java.lang.String;

        $s0 := @parameter1: short;

        $r2 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        $r1 = virtualinvoke $r2.<com.mixpanel.android.mpmetrics.Tweaks: com.mixpanel.android.mpmetrics.Tweak shortTweak(java.lang.String,short)>($r0, $s0);

        return $r1;
    }

    public static com.mixpanel.android.mpmetrics.Tweak stringTweak(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        com.mixpanel.android.mpmetrics.Tweak $r2;
        com.mixpanel.android.mpmetrics.Tweaks $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        $r2 = virtualinvoke $r3.<com.mixpanel.android.mpmetrics.Tweaks: com.mixpanel.android.mpmetrics.Tweak stringTweak(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public void alias(java.lang.String, java.lang.String)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String $r1, $r4;
        org.json.JSONException $r2;
        org.json.JSONObject $r3;
        boolean $z0;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.lang.String;

        $r4 := @parameter1: java.lang.String;

        if $r4 != null goto label1;

        $r4 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.lang.String getDistinctId()>();

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempted to alias identical distinct_ids ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Alias message will not be sent.");

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MixpanelAPI.API", $r1);

        return;

     label2:
        $r3 = new org.json.JSONObject;

     label3:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("alias", $r1);

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("original", $r4);

        virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void track(java.lang.String,org.json.JSONObject)>("$create_alias", $r3);

     label4:
        virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void flush()>();

        return;

     label5:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("MixpanelAPI.API", "Failed to alias", $r2);

        goto label4;

        catch org.json.JSONException from label3 to label4 with label5;
    }

    public void clearSuperProperties()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r1;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        virtualinvoke $r1.<com.mixpanel.android.mpmetrics.PersistentIdentity: void clearSuperProperties()>();

        return;
    }

    com.mixpanel.android.mpmetrics.DecideMessages constructDecideUpdates(java.lang.String, com.mixpanel.android.mpmetrics.DecideMessages$OnNewResultsListener, com.mixpanel.android.viewcrawler.UpdatesFromMixpanel)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String $r1, varReplacer1448;
        com.mixpanel.android.mpmetrics.DecideMessages$OnNewResultsListener $r2;
        com.mixpanel.android.viewcrawler.UpdatesFromMixpanel $r3;
        com.mixpanel.android.mpmetrics.DecideMessages $r4;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mixpanel.android.mpmetrics.DecideMessages$OnNewResultsListener;

        $r3 := @parameter2: com.mixpanel.android.viewcrawler.UpdatesFromMixpanel;

        $r4 = new com.mixpanel.android.mpmetrics.DecideMessages;

        varReplacer1448 = "d0e4eb487eeb24204930c127fef04db2";

        specialinvoke $r4.<com.mixpanel.android.mpmetrics.DecideMessages: void <init>(java.lang.String,com.mixpanel.android.mpmetrics.DecideMessages$OnNewResultsListener,com.mixpanel.android.viewcrawler.UpdatesFromMixpanel)>(varReplacer1448, $r2, $r3);

        return $r4;
    }

    com.mixpanel.android.viewcrawler.TrackingDebug constructTrackingDebug()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.viewcrawler.UpdatesFromMixpanel $r1;
        boolean $z0;
        com.mixpanel.android.viewcrawler.TrackingDebug $r2;
        null_type varReplacer1441;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.UpdatesFromMixpanel mUpdatesFromMixpanel>;

        $z0 = $r1 instanceof com.mixpanel.android.viewcrawler.ViewCrawler;

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.UpdatesFromMixpanel mUpdatesFromMixpanel>;

        $r2 = (com.mixpanel.android.viewcrawler.TrackingDebug) $r1;

        return $r2;

     label1:
        varReplacer1441 = null;

        return varReplacer1441;
    }

    com.mixpanel.android.viewcrawler.UpdatesFromMixpanel constructUpdatesFromMixpanel(android.content.Context, java.lang.String)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        android.content.Context $r1;
        java.lang.String $r2, varReplacer1437, varReplacer1438, varReplacer1439, varReplacer1440;
        com.mixpanel.android.mpmetrics.Tweaks $r3;
        boolean $z0;
        int $i0;
        com.mixpanel.android.mpmetrics.MixpanelAPI$NoOpUpdatesFromMixpanel $r4;
        com.mixpanel.android.mpmetrics.MPConfig $r5;
        com.mixpanel.android.viewcrawler.ViewCrawler $r6;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label1;

        varReplacer1439 = "MixpanelAPI.API";

        varReplacer1440 = "SDK version is lower than 16. Web Configuration, A/B Testing, and Dynamic Tweaks are disabled.";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1439, varReplacer1440);

        $r4 = new com.mixpanel.android.mpmetrics.MixpanelAPI$NoOpUpdatesFromMixpanel;

        $r3 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        specialinvoke $r4.<com.mixpanel.android.mpmetrics.MixpanelAPI$NoOpUpdatesFromMixpanel: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.Tweaks)>($r0, $r3);

        return $r4;

     label1:
        $r5 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MPConfig mConfig>;

        $z0 = virtualinvoke $r5.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableViewCrawler()>();

        if $z0 == 0 goto label2;

        varReplacer1437 = "MixpanelAPI.API";

        varReplacer1438 = "DisableViewCrawler is set to true. Web Configuration, A/B Testing, and Dynamic Tweaks are disabled.";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1437, varReplacer1438);

        $r4 = new com.mixpanel.android.mpmetrics.MixpanelAPI$NoOpUpdatesFromMixpanel;

        $r3 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        specialinvoke $r4.<com.mixpanel.android.mpmetrics.MixpanelAPI$NoOpUpdatesFromMixpanel: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.Tweaks)>($r0, $r3);

        return $r4;

     label2:
        $r6 = new com.mixpanel.android.viewcrawler.ViewCrawler;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: android.content.Context mContext>;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.lang.String mToken>;

        $r3 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.Tweaks sSharedTweaks>;

        specialinvoke $r6.<com.mixpanel.android.viewcrawler.ViewCrawler: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.Tweaks)>($r1, $r2, $r0, $r3);

        return $r6;
    }

    com.mixpanel.android.mpmetrics.MixpanelAPI$UpdatesListener constructUpdatesListener()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        int $i0;
        com.mixpanel.android.mpmetrics.MixpanelAPI$UnsupportedUpdatesListener $r1;
        com.mixpanel.android.mpmetrics.MixpanelAPI$SupportedUpdatesListener $r2;
        null_type varReplacer1444, varReplacer1445;
        java.lang.String varReplacer1446, varReplacer1447;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label1;

        varReplacer1446 = "MixpanelAPI.API";

        varReplacer1447 = "Surveys and Notifications are not supported on this Android OS Version";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1446, varReplacer1447);

        $r1 = new com.mixpanel.android.mpmetrics.MixpanelAPI$UnsupportedUpdatesListener;

        varReplacer1445 = null;

        specialinvoke $r1.<com.mixpanel.android.mpmetrics.MixpanelAPI$UnsupportedUpdatesListener: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.MixpanelAPI$1)>($r0, varReplacer1445);

        return $r1;

     label1:
        $r2 = new com.mixpanel.android.mpmetrics.MixpanelAPI$SupportedUpdatesListener;

        varReplacer1444 = null;

        specialinvoke $r2.<com.mixpanel.android.mpmetrics.MixpanelAPI$SupportedUpdatesListener: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI,com.mixpanel.android.mpmetrics.MixpanelAPI$1)>($r0, varReplacer1444);

        return $r2;
    }

    public void flush()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r1;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.AnalyticsMessages mMessages>;

        virtualinvoke $r1.<com.mixpanel.android.mpmetrics.AnalyticsMessages: void postToServer()>();

        return;
    }

    com.mixpanel.android.mpmetrics.AnalyticsMessages getAnalyticsMessages()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r1;
        android.content.Context $r2;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: android.content.Context mContext>;

        $r1 = staticinvoke <com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages getInstance(android.content.Context)>($r2);

        return $r1;
    }

    public java.util.Map getDeviceInfo()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.util.Map r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map mDeviceInfo>;

        return r1;
    }

    public java.lang.String getDistinctId()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String $r1;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r2;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        $r1 = virtualinvoke $r2.<com.mixpanel.android.mpmetrics.PersistentIdentity: java.lang.String getEventsDistinctId()>();

        return $r1;
    }

    public com.mixpanel.android.mpmetrics.MixpanelAPI$People getPeople()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl r1;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MixpanelAPI$PeopleImpl mPeople>;

        return r1;
    }

    com.mixpanel.android.mpmetrics.PersistentIdentity getPersistentIdentity(android.content.Context, java.util.concurrent.Future, java.lang.String)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        android.content.Context $r1;
        java.util.concurrent.Future $r2, $r7;
        java.lang.String $r3, varReplacer1442, varReplacer1443;
        com.mixpanel.android.mpmetrics.MixpanelAPI$1 $r4;
        java.lang.StringBuilder $r5;
        com.mixpanel.android.mpmetrics.SharedPreferencesLoader $r6;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r8;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.util.concurrent.Future;

        $r3 := @parameter2: java.lang.String;

        $r4 = new com.mixpanel.android.mpmetrics.MixpanelAPI$1;

        specialinvoke $r4.<com.mixpanel.android.mpmetrics.MixpanelAPI$1: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI)>($r0);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer1442 = "com.mixpanel.android.mpmetrics.MixpanelAPI_";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1442);

        varReplacer1443 = "d0e4eb487eeb24204930c127fef04db2";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1443);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.SharedPreferencesLoader sPrefsLoader>;

        $r7 = virtualinvoke $r6.<com.mixpanel.android.mpmetrics.SharedPreferencesLoader: java.util.concurrent.Future loadPreferences(android.content.Context,java.lang.String,com.mixpanel.android.mpmetrics.SharedPreferencesLoader$OnPrefsLoadedListener)>($r1, $r3, $r4);

        $r8 = new com.mixpanel.android.mpmetrics.PersistentIdentity;

        specialinvoke $r8.<com.mixpanel.android.mpmetrics.PersistentIdentity: void <init>(java.util.concurrent.Future,java.util.concurrent.Future)>($r2, $r7);

        return $r8;
    }

    public org.json.JSONObject getSuperProperties()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        org.json.JSONObject $r1;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        virtualinvoke $r2.<com.mixpanel.android.mpmetrics.PersistentIdentity: void addSuperPropertiesToObject(org.json.JSONObject)>($r1);

        return $r1;
    }

    public void identify(java.lang.String)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String $r1, $r4;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r2, $r3;
        com.mixpanel.android.mpmetrics.DecideMessages $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        virtualinvoke $r3.<com.mixpanel.android.mpmetrics.PersistentIdentity: void setEventsDistinctId(java.lang.String)>($r1);

        $r3 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        $r1 = virtualinvoke $r3.<com.mixpanel.android.mpmetrics.PersistentIdentity: java.lang.String getPeopleDistinctId()>();

        $r4 = $r1;

        if $r1 != null goto label2;

        $r3 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        $r4 = virtualinvoke $r3.<com.mixpanel.android.mpmetrics.PersistentIdentity: java.lang.String getEventsDistinctId()>();

     label2:
        $r5 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.DecideMessages mDecideMessages>;

        virtualinvoke $r5.<com.mixpanel.android.mpmetrics.DecideMessages: void setDistinctId(java.lang.String)>($r4);

        exitmonitor $r2;

     label3:
        return;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void logPosts()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("MixpanelAPI.API", "MixpanelAPI.logPosts() is deprecated.\n    To get verbose debug level logging, add\n    <meta-data android:name=\"com.mixpanel.android.MPConfig.EnableDebugLogging\" value=\"true\" />\n    to the <application> section of your AndroidManifest.xml.");

        return;
    }

    void registerMixpanelActivityLifecycleCallbacks()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        int $i0;
        com.mixpanel.android.mpmetrics.MPConfig $r1;
        boolean $z0;
        android.content.Context $r2;
        android.app.Application $r3;
        com.mixpanel.android.mpmetrics.MixpanelActivityLifecycleCallbacks $r4;
        java.lang.String varReplacer1449, varReplacer1450;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label2;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MPConfig mConfig>;

        $z0 = virtualinvoke $r1.<com.mixpanel.android.mpmetrics.MPConfig: boolean getAutoShowMixpanelUpdates()>();

        if $z0 == 0 goto label2;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: android.content.Context mContext>;

        $r2 = virtualinvoke $r2.<android.content.Context: android.content.Context getApplicationContext()>();

        $z0 = $r2 instanceof android.app.Application;

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: android.content.Context mContext>;

        $r2 = virtualinvoke $r2.<android.content.Context: android.content.Context getApplicationContext()>();

        $r3 = (android.app.Application) $r2;

        $r4 = new com.mixpanel.android.mpmetrics.MixpanelActivityLifecycleCallbacks;

        specialinvoke $r4.<com.mixpanel.android.mpmetrics.MixpanelActivityLifecycleCallbacks: void <init>(com.mixpanel.android.mpmetrics.MixpanelAPI)>($r0);

        virtualinvoke $r3.<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks)>($r4);

        return;

     label1:
        varReplacer1449 = "MixpanelAPI.API";

        varReplacer1450 = "Context is not an Application, Mixpanel will not automatically show surveys, in-app notifications, or A/B test experiments.";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1449, varReplacer1450);

     label2:
        return;
    }

    public void registerSuperProperties(org.json.JSONObject)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        org.json.JSONObject $r1;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        virtualinvoke $r2.<com.mixpanel.android.mpmetrics.PersistentIdentity: void registerSuperProperties(org.json.JSONObject)>($r1);

        return;
    }

    public void registerSuperPropertiesMap(java.util.Map)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.util.Map $r1;
        java.lang.NullPointerException $r2;
        org.json.JSONObject $r3;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.util.Map;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MixpanelAPI.API", "registerSuperPropertiesMap does not accept null properties");

        return;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.util.Map)>($r1);

        virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void registerSuperProperties(org.json.JSONObject)>($r3);

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MixpanelAPI.API", "Can\'t have null keys in the properties of registerSuperPropertiesMap!");

        return;

        catch java.lang.NullPointerException from label2 to label3 with label4;
    }

    public void registerSuperPropertiesOnce(org.json.JSONObject)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        org.json.JSONObject $r1;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        virtualinvoke $r2.<com.mixpanel.android.mpmetrics.PersistentIdentity: void registerSuperPropertiesOnce(org.json.JSONObject)>($r1);

        return;
    }

    public void registerSuperPropertiesOnceMap(java.util.Map)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.util.Map $r1;
        java.lang.NullPointerException $r2;
        org.json.JSONObject $r3;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.util.Map;

        if $r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MixpanelAPI.API", "registerSuperPropertiesOnceMap does not accept null properties");

        return;

     label1:
        $r3 = new org.json.JSONObject;

     label2:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.util.Map)>($r1);

        virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void registerSuperPropertiesOnce(org.json.JSONObject)>($r3);

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MixpanelAPI.API", "Can\'t have null keys in the properties of registerSuperPropertiesOnce!");

        return;

        catch java.lang.NullPointerException from label2 to label3 with label4;
    }

    public void reset()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r1;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        virtualinvoke $r1.<com.mixpanel.android.mpmetrics.PersistentIdentity: void clearPreferences()>();

        return;
    }

    boolean sendAppOpen()
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        boolean $z0;
        com.mixpanel.android.mpmetrics.MPConfig $r1;
        int varReplacer1451, varReplacer1452;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.MPConfig mConfig>;

        $z0 = virtualinvoke $r1.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableAppOpenEvent()>();

        if $z0 != 0 goto label1;

        varReplacer1451 = 1;

        return varReplacer1451;

     label1:
        varReplacer1452 = 0;

        return varReplacer1452;
    }

    public void timeEvent(java.lang.String)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String $r1;
        java.util.Map $r2, $r3;
        long $l0;
        java.lang.Long $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map mEventTimings>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map mEventTimings>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

        exitmonitor $r2;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void track(java.lang.String)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String $r1;
        null_type varReplacer1312;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.lang.String;

        varReplacer1312 = null;

        virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void track(java.lang.String,org.json.JSONObject)>($r1, varReplacer1312);

        return;
    }

    public void track(java.lang.String, org.json.JSONObject)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String $r1, $r14, $r15, varReplacer1313, varReplacer1314, varReplacer1315, varReplacer1316, varReplacer1317;
        org.json.JSONObject $r2, $r5;
        org.json.JSONException $r3;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$EventDescription $r4;
        double $d0, $d1;
        java.util.Map $r6, $r7;
        java.lang.Object $r8;
        java.lang.Long $r9;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r10;
        java.util.Set $r11;
        java.util.Iterator $r12;
        boolean $z0;
        java.util.Map$Entry $r13;
        java.lang.StringBuilder $r16;
        java.lang.Throwable $r17;
        long $l0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r18;
        com.mixpanel.android.viewcrawler.TrackingDebug $r19;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.json.JSONObject;

        $r6 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map mEventTimings>;

        entermonitor $r6;

     label01:
        $r7 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map mEventTimings>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r9 = (java.lang.Long) $r8;

        $r7 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.util.Map mEventTimings>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        exitmonitor $r6;

     label02:
        $r5 = new org.json.JSONObject;

     label03:
        specialinvoke $r5.<org.json.JSONObject: void <init>()>();

     label04:
        $r10 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

     label05:
        $r6 = virtualinvoke $r10.<com.mixpanel.android.mpmetrics.PersistentIdentity: java.util.Map getReferrerProperties()>();

        $r11 = interfaceinvoke $r6.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

     label07:
        if $z0 == 0 goto label20;

     label08:
        $r8 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

     label09:
        $r13 = (java.util.Map$Entry) $r8;

     label10:
        $r8 = interfaceinvoke $r13.<java.util.Map$Entry: java.lang.Object getKey()>();

     label11:
        $r14 = (java.lang.String) $r8;

     label12:
        $r8 = interfaceinvoke $r13.<java.util.Map$Entry: java.lang.Object getValue()>();

     label13:
        $r15 = (java.lang.String) $r8;

     label14:
        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r14, $r15);

     label15:
        goto label06;

     label16:
        $r3 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer1315 = "Exception tracking event ";

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1315);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1314 = "MixpanelAPI.API";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1314, $r1, $r3);

        return;

     label17:
        $r17 := @caughtexception;

     label18:
        exitmonitor $r6;

     label19:
        throw $r17;

     label20:
        $r10 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

     label21:
        virtualinvoke $r10.<com.mixpanel.android.mpmetrics.PersistentIdentity: void addSuperPropertiesToObject(org.json.JSONObject)>($r5);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label22:
        $d1 = (double) $l0;

        $d1 = $d1 / 1000.0;

        $l0 = (long) $d1;

     label23:
        varReplacer1317 = "time";

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>(varReplacer1317, $l0);

        $r14 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.lang.String getDistinctId()>();

        varReplacer1313 = "distinct_id";

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer1313, $r14);

     label24:
        if $r9 == null goto label28;

     label25:
        $l0 = virtualinvoke $r9.<java.lang.Long: long longValue()>();

     label26:
        $d0 = (double) $l0;

        $d0 = $d0 / 1000.0;

        $d1 = $d1 - $d0;

     label27:
        varReplacer1316 = "$duration";

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>(varReplacer1316, $d1);

     label28:
        goto label29;

     label29:
        $r4 = new com.mixpanel.android.mpmetrics.AnalyticsMessages$EventDescription;

        $r14 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: java.lang.String mToken>;

     label30:
        specialinvoke $r4.<com.mixpanel.android.mpmetrics.AnalyticsMessages$EventDescription: void <init>(java.lang.String,org.json.JSONObject,java.lang.String)>($r1, $r5, $r14);

     label31:
        $r18 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.AnalyticsMessages mMessages>;

     label32:
        virtualinvoke $r18.<com.mixpanel.android.mpmetrics.AnalyticsMessages: void eventsMessage(com.mixpanel.android.mpmetrics.AnalyticsMessages$EventDescription)>($r4);

     label33:
        $r19 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.TrackingDebug mTrackingDebug>;

        if $r19 == null goto label35;

        $r19 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.viewcrawler.TrackingDebug mTrackingDebug>;

     label34:
        interfaceinvoke $r19.<com.mixpanel.android.viewcrawler.TrackingDebug: void reportTrack(java.lang.String)>($r1);

     label35:
        return;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch org.json.JSONException from label03 to label04 with label16;
        catch org.json.JSONException from label05 to label07 with label16;
        catch org.json.JSONException from label08 to label09 with label16;
        catch org.json.JSONException from label10 to label11 with label16;
        catch org.json.JSONException from label12 to label13 with label16;
        catch org.json.JSONException from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label17;
        catch org.json.JSONException from label21 to label22 with label16;
        catch org.json.JSONException from label23 to label24 with label16;
        catch org.json.JSONException from label25 to label26 with label16;
        catch org.json.JSONException from label27 to label28 with label16;
        catch org.json.JSONException from label29 to label29 with label16;
        catch org.json.JSONException from label29 to label29 with label16;
        catch org.json.JSONException from label29 to label29 with label16;
        catch org.json.JSONException from label30 to label31 with label16;
        catch org.json.JSONException from label32 to label33 with label16;
        catch org.json.JSONException from label34 to label35 with label16;
    }

    public void trackMap(java.lang.String, java.util.Map)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String $r1;
        java.util.Map $r2;
        java.lang.NullPointerException $r3;
        org.json.JSONObject $r4;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        if $r2 != null goto label1;

        virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void track(java.lang.String,org.json.JSONObject)>($r1, null);

        return;

     label1:
        $r4 = new org.json.JSONObject;

     label2:
        specialinvoke $r4.<org.json.JSONObject: void <init>(java.util.Map)>($r2);

        virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: void track(java.lang.String,org.json.JSONObject)>($r1, $r4);

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MixpanelAPI.API", "Can\'t have null keys in the properties of trackMap!");

        return;

        catch java.lang.NullPointerException from label2 to label3 with label4;
    }

    public void unregisterSuperProperty(java.lang.String)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        java.lang.String $r1;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        virtualinvoke $r2.<com.mixpanel.android.mpmetrics.PersistentIdentity: void unregisterSuperProperty(java.lang.String)>($r1);

        return;
    }

    public void updateSuperProperties(com.mixpanel.android.mpmetrics.SuperPropertyUpdate)
    {
        com.mixpanel.android.mpmetrics.MixpanelAPI $r0;
        com.mixpanel.android.mpmetrics.SuperPropertyUpdate $r1;
        com.mixpanel.android.mpmetrics.PersistentIdentity $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MixpanelAPI;

        $r1 := @parameter0: com.mixpanel.android.mpmetrics.SuperPropertyUpdate;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.MixpanelAPI: com.mixpanel.android.mpmetrics.PersistentIdentity mPersistentIdentity>;

        virtualinvoke $r2.<com.mixpanel.android.mpmetrics.PersistentIdentity: void updateSuperProperties(com.mixpanel.android.mpmetrics.SuperPropertyUpdate)>($r1);

        return;
    }
}
