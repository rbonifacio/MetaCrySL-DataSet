class com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory extends org.apache.http.conn.ssl.SSLSocketFactory
{
    javax.net.ssl.SSLContext sslContext;

    public void <init>(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException
    {
        com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory $r0;
        java.security.KeyStore $r1;
        javax.net.ssl.SSLContext $r2;
        java.lang.Object[] $r3;
        com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory$1 r4;
        javax.net.ssl.TrustManager[] r5;
        java.lang.String varReplacer2167;
        null_type varReplacer2168, varReplacer2169;

        nop;

        $r0 := @this: com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory;

        $r1 := @parameter0: java.security.KeyStore;

        specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>($r1);

        varReplacer2167 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2167);

        $r0.<com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory: javax.net.ssl.SSLContext sslContext> = $r2;

        r4 = new com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory$1;

        specialinvoke r4.<com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory$1: void <init>(com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory)>($r0);

        $r2 = $r0.<com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        $r3[0] = r4;

        r5 = (javax.net.ssl.TrustManager[]) $r3;

        varReplacer2168 = null;

        varReplacer2169 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2168, r5, varReplacer2168);

        return;
    }

    public java.net.Socket createSocket() throws java.io.IOException
    {
        com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;

        $r0 := @this: com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory;

        $r1 = $r0.<com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r3;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException, java.net.UnknownHostException
    {
        com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;

        $r0 := @this: com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        return $r1;
    }
}
