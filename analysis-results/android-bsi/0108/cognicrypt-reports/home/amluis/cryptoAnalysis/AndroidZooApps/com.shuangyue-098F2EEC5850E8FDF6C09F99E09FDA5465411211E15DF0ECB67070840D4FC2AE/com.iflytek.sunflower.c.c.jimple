public class com.iflytek.sunflower.c.c extends java.lang.Object
{

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, varReplacer9510, varReplacer9511;
        int $i0, $i1, $i2;
        java.security.MessageDigest $r1;
        char[] $r2;
        byte[] $r3;
        char $c3;
        byte $b4;
        java.lang.StringBuffer $r4;
        short $s5;
        java.lang.Exception $r5;
        java.lang.Throwable $r6;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

        entermonitor class "Lcom/iflytek/sunflower/c/c;";

     label01:
        varReplacer9510 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9510);

        $r2 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $i1 = lengthof $r2;

        $r3 = newarray (byte)[$i1];

     label02:
        $i1 = 0;

     label03:
        $i2 = lengthof $r2;

     label04:
        if $i1 >= $i2 goto label09;

     label05:
        $c3 = $r2[$i1];

     label06:
        $b4 = (byte) $c3;

     label07:
        $r3[$i1] = $b4;

     label08:
        $i1 = $i1 + 1;

        goto label03;

     label09:
        $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

     label10:
        $r4 = new java.lang.StringBuffer;

     label11:
        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

     label12:
        $i1 = lengthof $r3;

     label13:
        if $i0 >= $i1 goto label19;

     label14:
        $b4 = $r3[$i0];

     label15:
        $s5 = $b4 & 255;

        if $s5 >= 16 goto label17;

     label16:
        varReplacer9511 = "0";

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer9511);

     label17:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s5);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label18:
        $i0 = $i0 + 1;

        goto label12;

     label19:
        $r0 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label20:
        exitmonitor class "Lcom/iflytek/sunflower/c/c;";

        return $r0;

     label21:
        $r5 := @caughtexception;

     label22:
        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        $r0 = "";

     label23:
        goto label20;

     label24:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/iflytek/sunflower/c/c;";

        throw $r6;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label13 with label21;
        catch java.lang.Exception from label14 to label15 with label21;
        catch java.lang.Exception from label16 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Throwable from label01 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    public static byte[] a(byte[])
    {
        byte[] $r0;
        java.io.ByteArrayOutputStream $r1, r9;
        java.util.zip.GZIPOutputStream $r2, r10;
        int $i0, $i1;
        byte $b2;
        java.lang.Throwable $r3, $r4, $r5, $r6, $r7, $r8;
        java.io.IOException r11;
        null_type varReplacer9529, varReplacer9530, varReplacer9531, varReplacer9532;

        nop;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label01;

        varReplacer9530 = null;

        return varReplacer9530;

     label01:
        r9 = new java.io.ByteArrayOutputStream;

        $r1 = r9;

        specialinvoke r9.<java.io.ByteArrayOutputStream: void <init>()>();

     label02:
        r10 = new java.util.zip.GZIPOutputStream;

     label03:
        $r2 = r10;

     label04:
        specialinvoke r10.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r1);

     label05:
        virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void write(byte[])>($r0);

        virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void finish()>();

     label06:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

     label07:
        if $i0 >= 19 goto label09;

     label08:
        virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void flush()>();

     label09:
        $r0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label10:
        $i0 = 0;

     label11:
        $i1 = lengthof $r0;

     label12:
        if $i0 >= $i1 goto label17;

     label13:
        $b2 = $r0[$i0];

     label14:
        $b2 = $b2 ^ 5;

     label15:
        $r0[$i0] = $b2;

     label16:
        $i0 = $i0 + 1;

        goto label11;

     label17:
        if $r2 == null goto label19;

     label18:
        virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void close()>();

     label19:
        if $r1 == null goto label40;

     label20:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label21:
        return $r0;

     label22:
        $r3 := @caughtexception;

        r11 = (java.io.IOException) $r3;

        virtualinvoke r11.<java.io.IOException: void printStackTrace()>();

        return $r0;

     label23:
        $r4 := @caughtexception;

        $r2 = null;

     label24:
        r11 = (java.io.IOException) $r4;

        virtualinvoke r11.<java.io.IOException: void printStackTrace()>();

     label25:
        if $r2 == null goto label27;

     label26:
        virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void close()>();

     label27:
        if $r1 == null goto label41;

     label28:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label29:
        varReplacer9531 = null;

        return varReplacer9531;

     label30:
        $r5 := @caughtexception;

        r11 = (java.io.IOException) $r5;

        virtualinvoke r11.<java.io.IOException: void printStackTrace()>();

        varReplacer9529 = null;

        return varReplacer9529;

     label31:
        $r6 := @caughtexception;

        $r2 = null;

        $r7 = $r6;

     label32:
        if $r2 == null goto label34;

     label33:
        virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void close()>();

     label34:
        if $r1 == null goto label36;

     label35:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label36:
        throw $r7;

     label37:
        $r8 := @caughtexception;

        r11 = (java.io.IOException) $r8;

        virtualinvoke r11.<java.io.IOException: void printStackTrace()>();

        goto label36;

     label38:
        $r7 := @caughtexception;

        goto label32;

     label39:
        $r4 := @caughtexception;

        goto label24;

     label40:
        return $r0;

     label41:
        varReplacer9532 = null;

        return varReplacer9532;

        catch java.io.IOException from label04 to label05 with label23;
        catch java.lang.Throwable from label02 to label03 with label31;
        catch java.lang.Throwable from label04 to label05 with label31;
        catch java.io.IOException from label05 to label06 with label39;
        catch java.io.IOException from label08 to label10 with label39;
        catch java.lang.Throwable from label05 to label07 with label38;
        catch java.lang.Throwable from label08 to label10 with label38;
        catch java.lang.Throwable from label11 to label12 with label38;
        catch java.lang.Throwable from label13 to label14 with label38;
        catch java.lang.Throwable from label15 to label16 with label38;
        catch java.io.IOException from label18 to label19 with label22;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label24 to label25 with label38;
        catch java.io.IOException from label26 to label27 with label30;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.io.IOException from label33 to label34 with label37;
        catch java.io.IOException from label35 to label36 with label37;
    }

    public static java.lang.String b(java.lang.String)
    {
        java.lang.String $r0;
        int varReplacer9834, varReplacer9835;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.iflytek.sunflower.c.c: java.lang.String a(java.lang.String)>($r0);

        varReplacer9834 = 8;

        varReplacer9835 = 24;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer9834, varReplacer9835);

        return $r0;
    }

    public static byte[] b(byte[])
    {
        byte[] $r0, $r7;
        java.io.ByteArrayInputStream $r1, r12;
        java.io.ByteArrayOutputStream $r2, r13;
        int $i0, $i1, varReplacer9571, varReplacer9572;
        byte $b2;
        java.util.zip.GZIPInputStream $r3, r14;
        java.lang.Throwable $r4, $r5, $r6, $r8, $r9, $r10, $r11;
        java.io.IOException r15;
        null_type varReplacer9573;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = 0;

        if $r0 != null goto label01;

        varReplacer9573 = null;

        return varReplacer9573;

     label01:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label02;

        $b2 = $r0[$i0];

        $b2 = $b2 ^ 5;

        $r0[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label01;

     label02:
        r12 = new java.io.ByteArrayInputStream;

        $r1 = r12;

        specialinvoke r12.<java.io.ByteArrayInputStream: void <init>(byte[])>($r0);

        r13 = new java.io.ByteArrayOutputStream;

        $r2 = r13;

        specialinvoke r13.<java.io.ByteArrayOutputStream: void <init>()>();

     label03:
        r14 = new java.util.zip.GZIPInputStream;

     label04:
        $r3 = r14;

     label05:
        specialinvoke r14.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r1);

     label06:
        $r0 = newarray (byte)[1024];

     label07:
        $i0 = lengthof $r0;

     label08:
        varReplacer9572 = 0;

        $i0 = virtualinvoke $r3.<java.util.zip.GZIPInputStream: int read(byte[],int,int)>($r0, varReplacer9572, $i0);

     label09:
        if $i0 == -1 goto label22;

     label10:
        varReplacer9571 = 0;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r0, varReplacer9571, $i0);

     label11:
        goto label07;

     label12:
        $r4 := @caughtexception;

        $r0 = null;

        $r5 = $r4;

     label13:
        r15 = (java.io.IOException) $r5;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

     label14:
        if $r3 == null goto label16;

     label15:
        virtualinvoke $r3.<java.util.zip.GZIPInputStream: void close()>();

     label16:
        if $r1 == null goto label18;

     label17:
        virtualinvoke $r1.<java.io.ByteArrayInputStream: void close()>();

     label18:
        if $r2 == null goto label45;

     label19:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

     label20:
        return $r0;

     label21:
        $r6 := @caughtexception;

        r15 = (java.io.IOException) $r6;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        return $r0;

     label22:
        $r7 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label23:
        $r0 = $r7;

     label24:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void flush()>();

     label25:
        if $r3 == null goto label27;

     label26:
        virtualinvoke $r3.<java.util.zip.GZIPInputStream: void close()>();

     label27:
        if $r1 == null goto label29;

     label28:
        virtualinvoke $r1.<java.io.ByteArrayInputStream: void close()>();

     label29:
        if $r2 == null goto label46;

     label30:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

     label31:
        return $r7;

     label32:
        $r8 := @caughtexception;

        r15 = (java.io.IOException) $r8;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        return $r7;

     label33:
        $r9 := @caughtexception;

        $r3 = null;

     label34:
        if $r3 == null goto label36;

     label35:
        virtualinvoke $r3.<java.util.zip.GZIPInputStream: void close()>();

     label36:
        if $r1 == null goto label38;

     label37:
        virtualinvoke $r1.<java.io.ByteArrayInputStream: void close()>();

     label38:
        if $r2 == null goto label40;

     label39:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

     label40:
        throw $r9;

     label41:
        $r10 := @caughtexception;

        r15 = (java.io.IOException) $r10;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        goto label40;

     label42:
        $r9 := @caughtexception;

        goto label34;

     label43:
        $r11 := @caughtexception;

        $r3 = null;

        $r0 = null;

        $r5 = $r11;

        goto label13;

     label44:
        $r5 := @caughtexception;

        goto label13;

     label45:
        return $r0;

     label46:
        return $r7;

        catch java.io.IOException from label05 to label06 with label43;
        catch java.lang.Throwable from label03 to label04 with label33;
        catch java.lang.Throwable from label05 to label06 with label33;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label06 to label09 with label42;
        catch java.lang.Throwable from label10 to label11 with label42;
        catch java.lang.Throwable from label13 to label14 with label42;
        catch java.io.IOException from label15 to label16 with label21;
        catch java.io.IOException from label17 to label18 with label21;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label22 to label23 with label12;
        catch java.lang.Throwable from label22 to label23 with label42;
        catch java.io.IOException from label24 to label25 with label44;
        catch java.lang.Throwable from label24 to label25 with label42;
        catch java.io.IOException from label26 to label27 with label32;
        catch java.io.IOException from label28 to label29 with label32;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.io.IOException from label35 to label36 with label41;
        catch java.io.IOException from label37 to label38 with label41;
        catch java.io.IOException from label39 to label40 with label41;
    }
}
