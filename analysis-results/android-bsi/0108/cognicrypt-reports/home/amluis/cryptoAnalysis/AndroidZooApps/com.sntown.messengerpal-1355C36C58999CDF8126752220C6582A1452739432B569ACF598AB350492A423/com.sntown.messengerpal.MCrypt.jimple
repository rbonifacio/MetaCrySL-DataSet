public class com.sntown.messengerpal.MCrypt extends java.lang.Object
{
    private javax.crypto.Cipher cipher;
    private java.lang.String iv;
    private javax.crypto.spec.IvParameterSpec ivspec;
    public java.lang.String key;
    private javax.crypto.spec.SecretKeySpec keyspec;

    public void <init>()
    {
        com.sntown.messengerpal.MCrypt $r0;
        java.lang.String $r1, varReplacer4285, varReplacer4286, varReplacer4287, varReplacer4288;
        byte[] $r2;
        javax.crypto.Cipher $r3;
        java.lang.Throwable $r4, $r5;
        javax.crypto.spec.IvParameterSpec r6;
        javax.crypto.spec.SecretKeySpec r7;
        java.security.NoSuchAlgorithmException r8;
        javax.crypto.NoSuchPaddingException r9;

        nop;

        $r0 := @this: com.sntown.messengerpal.MCrypt;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer4285 = "3849d82ef8c8a81b";

        $r0.<com.sntown.messengerpal.MCrypt: java.lang.String iv> = varReplacer4285;

        varReplacer4286 = "0123456789abcdef0123456789abcdef";

        $r0.<com.sntown.messengerpal.MCrypt: java.lang.String key> = varReplacer4286;

        r6 = new javax.crypto.spec.IvParameterSpec;

        $r1 = $r0.<com.sntown.messengerpal.MCrypt: java.lang.String iv>;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        specialinvoke r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2);

        $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.spec.IvParameterSpec ivspec> = r6;

        r7 = new javax.crypto.spec.SecretKeySpec;

        $r1 = $r0.<com.sntown.messengerpal.MCrypt: java.lang.String key>;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer4287 = "AES";

        specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4287);

        $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.spec.SecretKeySpec keyspec> = r7;

     label1:
        varReplacer4288 = "AES/CBC/NoPadding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4288);

     label2:
        $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.Cipher cipher> = $r3;

        return;

     label3:
        $r4 := @caughtexception;

        r8 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke r8.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return;

     label4:
        $r5 := @caughtexception;

        r9 = (javax.crypto.NoSuchPaddingException) $r5;

        virtualinvoke r9.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        return;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label4;
    }

    public static java.lang.String bytesToHex(byte[])
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.String $r1, varReplacer4277;
        byte $b2;
        short $s3;
        java.lang.StringBuilder $r2;
        null_type varReplacer4276;

        nop;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        varReplacer4276 = null;

        return varReplacer4276;

     label1:
        $i0 = lengthof $r0;

        $r1 = "";

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $b2 = $r0[$i1];

        $s3 = $b2 & 255;

        if $s3 >= 16 goto label4;

        $r2 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        varReplacer4277 = "0";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4277);

        $b2 = $r0[$i1];

        $s3 = $b2 & 255;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r2 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $b2 = $r0[$i1];

        $s3 = $b2 & 255;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label5:
        return $r1;
    }

    public static byte[] hexToBytes(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        byte $b4;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 < 2 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, 16);

        $b4 = (byte) $i2;

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        return null;

     label4:
        return $r1;
    }

    private static java.lang.String padString(java.lang.String)
    {
        int $i0, $i1, varReplacer4293;
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 % 16;

        $i0 = 16 - $i0;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return $r0;

     label2:
        $r1 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer4293 = 32;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer4293);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = $i1 + 1;

        goto label1;
    }

    public byte[] decrypt(java.lang.String) throws java.lang.Exception
    {
        com.sntown.messengerpal.MCrypt $r0;
        java.lang.String $r1;
        java.lang.Exception $r2, $r7;
        javax.crypto.spec.IvParameterSpec $r3;
        int $i0;
        javax.crypto.Cipher $r4;
        javax.crypto.spec.SecretKeySpec $r5;
        byte[] $r6;
        java.lang.StringBuilder $r8;

        $r0 := @this: com.sntown.messengerpal.MCrypt;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.Exception;

        specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>("Empty string");

        throw $r2;

     label2:
        $r4 = $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.Cipher cipher>;

        $r5 = $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.spec.SecretKeySpec keyspec>;

        $r3 = $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.spec.IvParameterSpec ivspec>;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r5, $r3);

        $r4 = $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.Cipher cipher>;

        $r6 = staticinvoke <com.sntown.messengerpal.MCrypt: byte[] hexToBytes(java.lang.String)>($r1);

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

     label3:
        return $r6;

     label4:
        $r2 := @caughtexception;

        $r7 = new java.lang.Exception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("[decrypt] ");

        $r1 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r7;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public byte[] encrypt(java.lang.String) throws java.lang.Exception
    {
        com.sntown.messengerpal.MCrypt $r0;
        java.lang.String $r1, varReplacer4291, varReplacer4292;
        java.lang.Exception $r2, $r7;
        javax.crypto.spec.IvParameterSpec $r3;
        int $i0, varReplacer4290;
        javax.crypto.Cipher $r4;
        javax.crypto.spec.SecretKeySpec $r5;
        byte[] $r6;
        java.lang.StringBuilder $r8;

        nop;

        $r0 := @this: com.sntown.messengerpal.MCrypt;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.Exception;

        varReplacer4291 = "Empty string";

        specialinvoke $r2.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer4291);

        throw $r2;

     label2:
        $r4 = $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.Cipher cipher>;

        $r5 = $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.spec.SecretKeySpec keyspec>;

        $r3 = $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.spec.IvParameterSpec ivspec>;

        varReplacer4290 = 1;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4290, $r5, $r3);

        $r4 = $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.Cipher cipher>;

        $r1 = staticinvoke <com.sntown.messengerpal.MCrypt: java.lang.String padString(java.lang.String)>($r1);

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

     label3:
        return $r6;

     label4:
        $r2 := @caughtexception;

        $r7 = new java.lang.Exception;

        $r8 = new java.lang.StringBuilder;

        varReplacer4292 = "[encrypt] ";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4292);

        $r1 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r7;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public void setKey(java.lang.String)
    {
        com.sntown.messengerpal.MCrypt $r0;
        java.lang.String $r1, varReplacer4289;
        javax.crypto.spec.SecretKeySpec $r2;
        byte[] $r3;

        nop;

        $r0 := @this: com.sntown.messengerpal.MCrypt;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.sntown.messengerpal.MCrypt: java.lang.String key> = $r1;

        $r2 = new javax.crypto.spec.SecretKeySpec;

        $r1 = $r0.<com.sntown.messengerpal.MCrypt: java.lang.String key>;

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer4289 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4289);

        $r0.<com.sntown.messengerpal.MCrypt: javax.crypto.spec.SecretKeySpec keyspec> = $r2;

        return;
    }
}
