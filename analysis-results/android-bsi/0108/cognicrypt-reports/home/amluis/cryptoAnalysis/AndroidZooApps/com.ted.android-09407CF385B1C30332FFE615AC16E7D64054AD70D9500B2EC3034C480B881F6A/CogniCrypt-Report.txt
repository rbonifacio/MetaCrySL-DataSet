Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13786)
		Method: <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: f1ec1d9be7cd8b35fc9c3919f4d28a287ec7dc8cd6835e7a93ac211e3a7b7707
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13785)
		Method: <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 8048849ec5c95875bcf267d18d88d245606b2d50607ea31c07fea24f716fa222
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer13776, varReplacer13777)
		Method: <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 22dd1882d377392cc32eccec250599ecb4468e7dd9b7856ea5daee9323294103
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14787)
		Method: <com.comscore.utils.Utils: java.lang.String md5(java.lang.String)>
		SHA-256: 33f47e74c982289e674f1a9d8113cb81c95890ac730e0db60f3e2e91dac5cad6
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 370c144343593a2f250efa941f352a4014e247d247772ee8513fb5ea08368c0d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzkk(java.lang.String)>
		SHA-256: f768922fa43b6517f5cbb7b5c0e8dff878a97528e590f1df3666b51af353f078
		Secure: true
	Object:
		Variable: varReplacer13780
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer13780)
		Method: <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 44f1693fcca50f713ee475caea1e6d791562aa9fd9e974cd613a92afdf80a872
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 2faa76daebb8e6de2f1ad32db8b5be407984fa0b517ad152e21be098abd9aeb9
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.comscore.utils.Utils: java.lang.String md5(java.lang.String)>
		SHA-256: 7a0c952aa4b6bb226c7f9e0f629aee7df35becca6ac2c77b99c0de045d786b35
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: ff685f32e7a7f750cd456b35d0be518bacf6cdd5ba40802666534e9df3ec3217
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18090)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 95870f023426adbb0e021ee6a23f437018efbff601042fc799c3b31be6dd035f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.leanplum.a.t: java.lang.String a(java.lang.String)>
		SHA-256: 92dce0ca4685026f612d6025b86212f333fb1e94f10b12d4c1ab2fb2f787a419
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14850)
		Method: <com.comscore.utils.Utils: java.lang.String encrypt(java.lang.String)>
		SHA-256: 42f8a7dd9753e65145b7328aa18aeb4be626d6068bbf8a05a716b92bbf2a9bab
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer22061)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: f23de989ddd1053578f36d6234f7a1e6defb4b67fed0e701eb849455209fc746
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.comscore.utils.Utils: java.lang.String encrypt(java.lang.String)>
		SHA-256: 2e25fc4f5817014fc577a5b1652183606647b49d2e3de30023a176d46a6dac26
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 779fa9e7d07fc58ac6fb0f677b3796756777647dae3e7e2e128e2e27e33a0c70
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14726)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: c3b6df0b75a6c56eaf13df7f0b40a4c0f6fe215e9a312cb78bbfabe7a823625b
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer13780)
		Method: <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: fc15d4854083d04d1e2221208536b4e65c2925393c4745ce17370fc242ba0512
		Secure: false
	Object:
		Variable: r9
		Type: java.security.DigestInputStream
		Statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)
		Method: <com.leanplum.a.h: com.leanplum.a.h$b a(java.io.InputStream)>
		SHA-256: c2883b47ae7d945075d360ed0a9681ad75e492a7705d4fc46523c506079fb866
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13690)
		Method: <com.leanplum.a.h: com.leanplum.a.h$b a(java.io.InputStream)>
		SHA-256: e13f2786be31c6859cf68793cc25c810c894e2e889920b8b4daef48cc33002bf
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20554)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: b79d546f9ee8df441911e85c9ec6123ce5b65019ec50c30be444c31c7b578fb1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14162)
		Method: <com.leanplum.a.t: java.lang.String a(java.lang.String)>
		SHA-256: a34ce3be0695d1e64a238cccf1e4043b5e0dcc7542e78a3faaa1e7317d02ccb1
		Secure: false
	Object:
		Variable: varReplacer13777
		Type: int
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer13776, varReplacer13777)
		Method: <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 649be21674ea94d14e5917fcfda02e7100cf0fece55e42f7be589475fa4e834a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: a3d08211d3ba404e6ba4646686ff2b51d3fd8d0e847ca8bb2960c48a82e64856
		Secure: false

Findings in Java Class: com.leanplum.a.h

	 in Method: com.leanplum.a.h$b a(java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e13f2786be31c6859cf68793cc25c810c894e2e889920b8b4daef48cc33002bf)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13690)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e13f2786be31c6859cf68793cc25c810c894e2e889920b8b4daef48cc33002bf)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #c2883b47ae7d945075d360ed0a9681ad75e492a7705d4fc46523c506079fb866)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)


Findings in Java Class: com.leanplum.a.a

	 in Method: byte[] a(int,java.lang.String,byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #22dd1882d377392cc32eccec250599ecb4468e7dd9b7856ea5daee9323294103)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer13776, varReplacer13777)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r9, $r11)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #22dd1882d377392cc32eccec250599ecb4468e7dd9b7856ea5daee9323294103)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer13776, varReplacer13777)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f1ec1d9be7cd8b35fc9c3919f4d28a287ec7dc8cd6835e7a93ac211e3a7b7707)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13786)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer13780)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #8048849ec5c95875bcf267d18d88d245606b2d50607ea31c07fea24f716fa222)
			First parameter (with value "PBEWithMD5And128BitAES-CBC-OpenSSL") should be any of {PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithSHAAND192BITAES-CBC-BC, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC}
			at statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13785)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #22dd1882d377392cc32eccec250599ecb4468e7dd9b7856ea5daee9323294103)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer13776, varReplacer13777)


Findings in Java Class: com.leanplum.a.t

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a34ce3be0695d1e64a238cccf1e4043b5e0dcc7542e78a3faaa1e7317d02ccb1)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14162)


Findings in Java Class: com.comscore.utils.Utils

	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #33f47e74c982289e674f1a9d8113cb81c95890ac730e0db60f3e2e91dac5cad6)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14787)


	 in Method: java.lang.String encrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #42f8a7dd9753e65145b7328aa18aeb4be626d6068bbf8a05a716b92bbf2a9bab)
			First parameter (with value "RSA/ECB/PKCS1PADDING") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14850)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer14852, $r4)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #95870f023426adbb0e021ee6a23f437018efbff601042fc799c3b31be6dd035f)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18090)


Findings in Java Class: com.squareup.okhttp.internal.Util

	 in Method: okio.ByteString sha1(okio.ByteString)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b79d546f9ee8df441911e85c9ec6123ce5b65019ec50c30be444c31c7b578fb1)
			First parameter (with value "SHA-1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20554)


	 in Method: java.lang.String md5Hex(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f23de989ddd1053578f36d6234f7a1e6defb4b67fed0e701eb849455209fc746)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer22061)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14723, varReplacer14723, varReplacer14723)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14723, varReplacer14723, varReplacer14723)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 27

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	ConstraintError: 11
	IncompleteOperationError: 2
	NeverTypeOfError: 1
	RequiredPredicateError: 9
=====================================================================