Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 8a18293d25bd4e0e4496aab2f692053d02876383f7d9925df51022b51fa68219
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <wr: java.lang.String b(android.content.Context)>
		SHA-256: b670bc4a8f1329bc184f0e88d6c77c6dbb1653660b2d117f3c4abd40b14e0ff9
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 6c2dcbeb07bd7f1b70eb6d154701de6808a364968c7ce939ff18e08510a1524
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2054)
		Method: <com.apsalar.sdk.ApsalarSQLiteHelper: android.database.sqlite.SQLiteDatabase getSQLWritableDatabase(android.content.Context)>
		SHA-256: 8de8c8f2d35707343b0f808d23efc479f67365e6eec77e2a0f58c28a42d2b591
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apsalar.sdk.ApsalarSQLiteHelper: android.database.sqlite.SQLiteDatabase getSQLWritableDatabase(android.content.Context)>
		SHA-256: a594579d3cc8915b77702a6e52c83ce5d63a58fbe337eaa46ecba7bb971575ec
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <wu: java.lang.String b(java.lang.String,java.security.Key)>
		SHA-256: ce5a61d7b69fd446805cb210c6dd1b6a08d5139bf65f1345e9e92e60e994583a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1303)
		Method: <wt: void <init>(android.content.Context)>
		SHA-256: aafbe26e8c4cc940db81f9c0c76735f3de21641d138297c5ee264cbb33525c7a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <BI: Dw a(Dw)>
		SHA-256: d4a31328347d89bd4e4372bede485d5050c0a71e91564bc8bb57c245aacbf1b8
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apsalar.sdk.ApsalarEvent: java.lang.String makeHash(java.lang.String,java.lang.String)>
		SHA-256: 49ee367f159b711d65f8eff9ce358324398e52c02986d3de6f1a1b852693d685
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.comscore.utils.Utils: java.lang.String encrypt(java.lang.String)>
		SHA-256: 2e25fc4f5817014fc577a5b1652183606647b49d2e3de30023a176d46a6dac26
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair d(java.lang.String)>
		SHA-256: a60088a0c77a890bf25074b4e1ccdd640604a936ae63e5fe7fdec7cf2044428d
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1283)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 5282c0fb4875d8e61d9c85a13fa1c769790f8f01ba4024860ac8d1f6df8e4a6
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.comscore.utils.Utils: java.lang.String md5(java.lang.String)>
		SHA-256: 7a0c952aa4b6bb226c7f9e0f629aee7df35becca6ac2c77b99c0de045d786b35
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2813)
		Method: <com.apsalar.sdk.ApsalarResolve: int doGet(boolean)>
		SHA-256: 79b13b906b02b5f12fdbc68b636bb08a57bf7c0208dee9b3741e0dd4bc11f0ac
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.til.happytrips.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c678472b4c19c53650e756c77dab364889209724da847a2f30c698a83517174f
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <wu: java.lang.String b(java.lang.String,java.security.Key)>
		SHA-256: 89ea27a94a92c5eeaf38bf6f864e1f1f3833ccc8f681793b3127bbc3d4c9184f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <wu: java.lang.String b(java.lang.String,java.security.Key)>
		SHA-256: 9b2a776ace8c58f731ca237b2a23a17c12a714e8302e937c199e9a84ea12f882
		Secure: false
	Object:
		Variable: varReplacer1285
		Type: int
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r1, varReplacer1284, varReplacer1285)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 52f2c9fdfe192868dee7f1840788aad46f085f78ec05a247d0898f65ea83c823
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8494)
		Method: <BI: Dw a(Dw)>
		SHA-256: f92e703fb8f84cecea9ca51151ecb594d9cbc9f618ace6d6d59757a0715027d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apsalar.sdk.ApsalarResolve: int doGet(boolean)>
		SHA-256: 32ba452225c293642e88b6aab9c2aaf0f2c46ce990fb67b9e25418500a2f738d
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2681)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair a()>
		SHA-256: 18b8a0048d887ac5b07ddc3d23ce87e5635cc5fb1850d555d46ede694ecb55d2
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2737)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: 3a6dc46f0b2ee03964a9e7497a69bd906aad825b958603a0aeb5f5ec1fd64b4c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7616)
		Method: <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>
		SHA-256: 8f7ee758a17d2fad0dd5bf3601eb5fffe7b9f7b1b5a8b96974df2d3a665ac9e5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5797)
		Method: <com.comscore.utils.Utils: java.lang.String md5(java.lang.String)>
		SHA-256: fb22e3a591543695296ee9171a6b57bab4c401f765b10e7584721804d635eca2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: 756b01b06feb63ec058f055931b7364dec725eddbf18032316df47bfbaf76753
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>
		SHA-256: 40308c8180e92b7a3927be33ff39c46de5d95e3556a193778b46eca16c371f67
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.Key
		Statement: $r11 = interfaceinvoke $r12.<java.security.Key: byte[] getEncoded()>()
		Method: <ww: void <init>(android.content.Context,java.lang.String)>
		SHA-256: 7a34c4ff58e841fc825b375baf2914b4a4ed56bf2c946cba94c5718724b22298
		Secure: true
	Object:
		Variable: r27
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer1263)
		Method: <ww: void <init>(android.content.Context,java.lang.String)>
		SHA-256: 7bffbb7af203579f260bcc21fefa142e1c754e242a7b66925fcc5ffd8b079f6b
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: ee43d3c27e21c5b1ebbc253f41bdf471d170acb772d54f94537e8e4b3da9ea54
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = interfaceinvoke $r12.<java.security.Key: byte[] getEncoded()>()
		Method: <ww: void <init>(android.content.Context,java.lang.String)>
		SHA-256: 6e635b1ba663c480ab5f00804ae6facb86fa8a06deac51db60f083a6ba955407
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: bb7187a5bb3b8757816d72f6d792fc777b962cfcc06524eec6d517f459d321b
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer741)
		Method: <Bf: void <init>(Bh)>
		SHA-256: 89d18e4ce7d1674d1127dd7e0c9eba146a9c91ef4bdd0cb1b29c64147a147814
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1282)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: ce25016174537f3725951eb9a155e8f02e6e706055e03fb3c9aee2097d5f0f16
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair a()>
		SHA-256: b6cc8ac493f44dad3810c3a2f8466a33a72ab2c638b8dfbfccb655950d0b27ab
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1287)
		Method: <wr: java.lang.String b(android.content.Context)>
		SHA-256: 534f5c6a062a00a84a7c29dd136ef7e05376a02cb600bb3866b0c41122f5ac88
		Secure: false
	Object:
		Variable: varReplacer1263
		Type: java.lang.String
		Statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer1263)
		Method: <ww: void <init>(android.content.Context,java.lang.String)>
		SHA-256: d7836e1490bf7017bf14c1d71b5e85fc902caff422fb2315a1128557e12bed63
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7218)
		Method: <com.til.happytrips.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: e12ce5587c1aa5c2f012398a6a40d305840a0026aeba60f336e32a212e09cab
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r1, varReplacer1284, varReplacer1285)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: de08f82a2db21f818c1723b9191d31e739dcee39e24a222ea4947e2d24120c95
		Secure: false
	Object:
		Variable: varReplacer1283
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1283)
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: dc06fb80c7334363a414cf04c8a28f15fba4c30dbb40c1710838ae17c3740c02
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5858)
		Method: <com.comscore.utils.Utils: java.lang.String encrypt(java.lang.String)>
		SHA-256: 6acb024302837c4b15c6cc67238cf2678db7d669dea7c68cc720cc561e7c1a3e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <wr: java.security.Key a(android.content.Context)>
		SHA-256: 30c3487d8c10516cde0819d14296afbe13e0adef8213086e8551a44562c7dd9
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2601)
		Method: <com.apsalar.sdk.ApsalarEvent: java.lang.String makeHash(java.lang.String,java.lang.String)>
		SHA-256: 2249b66a388e772813f283ce96266ae01c6bc4cf84a1542d39c17f4d274f7ef6
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 2cbee2b1f1e301f5e0fd6a68eabf46e222064dcd3b3e2060dbe5051d968e770f
		Secure: true

Findings in Java Class: wr

	 in Method: java.security.Key a(android.content.Context)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #de08f82a2db21f818c1723b9191d31e739dcee39e24a222ea4947e2d24120c95)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r1, varReplacer1284, varReplacer1285)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #de08f82a2db21f818c1723b9191d31e739dcee39e24a222ea4947e2d24120c95)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r1, varReplacer1284, varReplacer1285)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1283)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #de08f82a2db21f818c1723b9191d31e739dcee39e24a222ea4947e2d24120c95)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r1, varReplacer1284, varReplacer1285)


	 in Method: java.lang.String b(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #534f5c6a062a00a84a7c29dd136ef7e05376a02cb600bb3866b0c41122f5ac88)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1287)


Findings in Java Class: wt

	 in Method: void <init>(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #aafbe26e8c4cc940db81f9c0c76735f3de21641d138297c5ee264cbb33525c7a)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1303)


Findings in Java Class: com.apsalar.sdk.ApsalarSQLiteHelper

	 in Method: android.database.sqlite.SQLiteDatabase getSQLWritableDatabase(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8de8c8f2d35707343b0f808d23efc479f67365e6eec77e2a0f58c28a42d2b591)
			First parameter (with value "SHA-1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2054)


Findings in Java Class: com.apsalar.sdk.ApsalarEvent

	 in Method: java.lang.String makeHash(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2249b66a388e772813f283ce96266ae01c6bc4cf84a1542d39c17f4d274f7ef6)
			First parameter (with value "SHA-1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2601)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1)
			First parameter (with value "SHA256withECDSA") should be any of {SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3a6dc46f0b2ee03964a9e7497a69bd906aad825b958603a0aeb5f5ec1fd64b4c)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2737)


Findings in Java Class: com.apsalar.sdk.ApsalarResolve

	 in Method: int doGet(boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #79b13b906b02b5f12fdbc68b636bb08a57bf7c0208dee9b3741e0dd4bc11f0ac)
			First parameter (with value "SHA-1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2813)


Findings in Java Class: com.comscore.utils.Utils

	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb22e3a591543695296ee9171a6b57bab4c401f765b10e7584721804d635eca2)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5797)


	 in Method: java.lang.String encrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6acb024302837c4b15c6cc67238cf2678db7d669dea7c68cc720cc561e7c1a3e)
			First parameter (with value "RSA/ECB/PKCS1PADDING") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5858)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5859, $r4)


Findings in Java Class: com.til.happytrips.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #e12ce5587c1aa5c2f012398a6a40d305840a0026aeba60f336e32a212e09cab)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA}
			at statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7218)


Findings in Java Class: wu

	 in Method: java.lang.String b(java.lang.String,java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7389, $r2, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #89ea27a94a92c5eeaf38bf6f864e1f1f3833ccc8f681793b3127bbc3d4c9184f)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


Findings in Java Class: com.skobbler.ngx.SKMaps

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8f7ee758a17d2fad0dd5bf3601eb5fffe7b9f7b1b5a8b96974df2d3a665ac9e5)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7616)


Findings in Java Class: BI

	 in Method: Dw a(Dw)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f92e703fb8f84cecea9ca51151ecb594d9cbc9f618ace6d6d59757a0715027d)
			First parameter (with value "SHA-1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8494)


Findings in Java Class: ww

	 in Method: void <init>(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer1263)


Findings in Java Class: Bf

	 in Method: void <init>(Bh)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer742, varReplacer742, varReplacer742)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer742, varReplacer742, varReplacer742)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 44

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 11
	IncompleteOperationError: 1
	NeverTypeOfError: 1
	ConstraintError: 14
=====================================================================