public class com.amap.api.location.core.f extends java.lang.Object
{
    private static final char[] a;
    private static final byte[] b;
    private static final javax.crypto.spec.IvParameterSpec c;

    static void <clinit>()
    {
        char[] $r0;
        byte[] $r1;
        javax.crypto.spec.IvParameterSpec $r2;

        nop;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <com.amap.api.location.core.f: char[] a> = $r0;

        $r1 = newarray (byte)[16];

        $r1[0] = 0;

        $r1[1] = 1;

        $r1[2] = 1;

        $r1[3] = 2;

        $r1[4] = 3;

        $r1[5] = 5;

        $r1[6] = 8;

        $r1[7] = 13;

        $r1[8] = 8;

        $r1[9] = 7;

        $r1[10] = 6;

        $r1[11] = 5;

        $r1[12] = 4;

        $r1[13] = 3;

        $r1[14] = 2;

        $r1[15] = 1;

        <com.amap.api.location.core.f: byte[] b> = $r1;

        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r1 = <com.amap.api.location.core.f: byte[] b>;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        <com.amap.api.location.core.f: javax.crypto.spec.IvParameterSpec c> = $r2;

        return;
    }

    static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, $r2, varReplacer19075, varReplacer19077;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.Throwable $r3;
        null_type varReplacer19074, varReplacer19076;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label6;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label2:
        if $i0 != 0 goto label3;

        varReplacer19074 = null;

        return varReplacer19074;

     label3:
        varReplacer19077 = "SHA1";

        $r2 = staticinvoke <com.amap.api.location.core.f: java.lang.String a(java.lang.String,java.lang.String)>(varReplacer19077, $r0);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer19075 = "MD5";

        $r0 = staticinvoke <com.amap.api.location.core.f: java.lang.String a(java.lang.String,java.lang.String)>(varReplacer19075, $r0);

     label4:
        return $r0;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace()>();

     label6:
        varReplacer19076 = null;

        return varReplacer19076;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer19124;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.lang.Exception $r4;
        java.lang.RuntimeException $r5;
        null_type varReplacer19123;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        varReplacer19123 = null;

        return varReplacer19123;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0);

        varReplacer19124 = "utf-8";

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer19124);

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.amap.api.location.core.f: java.lang.String b(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String a(byte[])
    {
        byte[] $r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        byte $b2;
        short $s3;
        java.lang.String $r2, varReplacer20003;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuffer;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label2;

        varReplacer20003 = "0";

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer20003);

     label2:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        return $r2;
    }

    static java.security.PublicKey a(android.content.Context)
    {
        android.content.Context $r0;
        byte[] $r1;
        java.io.ByteArrayInputStream $r2;
        java.security.cert.CertificateFactory $r3;
        java.security.KeyFactory $r4;
        java.security.cert.Certificate $r5;
        java.security.spec.X509EncodedKeySpec $r6;
        java.security.PublicKey $r7;
        java.lang.Throwable $r8, $r10, $r12, $r13;
        java.lang.Exception $r9;
        java.lang.NullPointerException $r11;
        java.lang.String varReplacer19217, varReplacer19218, varReplacer19219, varReplacer19221, varReplacer19222;
        null_type varReplacer19220;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = newarray (byte)[674];

     label01:
        $r1[0] = 48;

        $r1[1] = -126;

        $r1[2] = 2;

        $r1[3] = -98;

        $r1[4] = 48;

        $r1[5] = -126;

        $r1[6] = 2;

        $r1[7] = 7;

        $r1[8] = -96;

        $r1[9] = 3;

        $r1[10] = 2;

        $r1[11] = 1;

        $r1[12] = 2;

        $r1[13] = 2;

        $r1[14] = 9;

        $r1[15] = 0;

        $r1[16] = -99;

        $r1[17] = 15;

        $r1[18] = 119;

        $r1[19] = 58;

        $r1[20] = 44;

        $r1[21] = -19;

        $r1[22] = -105;

        $r1[23] = -40;

        $r1[24] = 48;

        $r1[25] = 13;

        $r1[26] = 6;

        $r1[27] = 9;

        $r1[28] = 42;

        $r1[29] = -122;

        $r1[30] = 72;

        $r1[31] = -122;

        $r1[32] = -9;

        $r1[33] = 13;

        $r1[34] = 1;

        $r1[35] = 1;

        $r1[36] = 5;

        $r1[37] = 5;

        $r1[38] = 0;

        $r1[39] = 48;

        $r1[40] = 104;

        $r1[41] = 49;

        $r1[42] = 11;

        $r1[43] = 48;

        $r1[44] = 9;

        $r1[45] = 6;

        $r1[46] = 3;

        $r1[47] = 85;

        $r1[48] = 4;

        $r1[49] = 6;

        $r1[50] = 19;

        $r1[51] = 2;

        $r1[52] = 67;

        $r1[53] = 78;

        $r1[54] = 49;

        $r1[55] = 19;

        $r1[56] = 48;

        $r1[57] = 17;

        $r1[58] = 6;

        $r1[59] = 3;

        $r1[60] = 85;

        $r1[61] = 4;

        $r1[62] = 8;

        $r1[63] = 12;

        $r1[64] = 10;

        $r1[65] = 83;

        $r1[66] = 111;

        $r1[67] = 109;

        $r1[68] = 101;

        $r1[69] = 45;

        $r1[70] = 83;

        $r1[71] = 116;

        $r1[72] = 97;

        $r1[73] = 116;

        $r1[74] = 101;

        $r1[75] = 49;

        $r1[76] = 16;

        $r1[77] = 48;

        $r1[78] = 14;

        $r1[79] = 6;

        $r1[80] = 3;

        $r1[81] = 85;

        $r1[82] = 4;

        $r1[83] = 7;

        $r1[84] = 12;

        $r1[85] = 7;

        $r1[86] = 66;

        $r1[87] = 101;

        $r1[88] = 105;

        $r1[89] = 106;

        $r1[90] = 105;

        $r1[91] = 110;

        $r1[92] = 103;

        $r1[93] = 49;

        $r1[94] = 17;

        $r1[95] = 48;

        $r1[96] = 15;

        $r1[97] = 6;

        $r1[98] = 3;

        $r1[99] = 85;

        $r1[100] = 4;

        $r1[101] = 10;

        $r1[102] = 12;

        $r1[103] = 8;

        $r1[104] = 65;

        $r1[105] = 117;

        $r1[106] = 116;

        $r1[107] = 111;

        $r1[108] = 110;

        $r1[109] = 97;

        $r1[110] = 118;

        $r1[111] = 105;

        $r1[112] = 49;

        $r1[113] = 31;

        $r1[114] = 48;

        $r1[115] = 29;

        $r1[116] = 6;

        $r1[117] = 3;

        $r1[118] = 85;

        $r1[119] = 4;

        $r1[120] = 3;

        $r1[121] = 12;

        $r1[122] = 22;

        $r1[123] = 99;

        $r1[124] = 111;

        $r1[125] = 109;

        $r1[126] = 46;

        $r1[127] = 97;

        $r1[128] = 117;

        $r1[129] = 116;

        $r1[130] = 111;

        $r1[131] = 110;

        $r1[132] = 97;

        $r1[133] = 118;

        $r1[134] = 105;

        $r1[135] = 46;

        $r1[136] = 97;

        $r1[137] = 112;

        $r1[138] = 105;

        $r1[139] = 115;

        $r1[140] = 101;

        $r1[141] = 114;

        $r1[142] = 118;

        $r1[143] = 101;

        $r1[144] = 114;

        $r1[145] = 48;

        $r1[146] = 30;

        $r1[147] = 23;

        $r1[148] = 13;

        $r1[149] = 49;

        $r1[150] = 51;

        $r1[151] = 48;

        $r1[152] = 56;

        $r1[153] = 49;

        $r1[154] = 53;

        $r1[155] = 48;

        $r1[156] = 55;

        $r1[157] = 53;

        $r1[158] = 54;

        $r1[159] = 53;

        $r1[160] = 53;

        $r1[161] = 90;

        $r1[162] = 23;

        $r1[163] = 13;

        $r1[164] = 50;

        $r1[165] = 51;

        $r1[166] = 48;

        $r1[167] = 56;

        $r1[168] = 49;

        $r1[169] = 51;

        $r1[170] = 48;

        $r1[171] = 55;

        $r1[172] = 53;

        $r1[173] = 54;

        $r1[174] = 53;

        $r1[175] = 53;

        $r1[176] = 90;

        $r1[177] = 48;

        $r1[178] = 104;

        $r1[179] = 49;

        $r1[180] = 11;

        $r1[181] = 48;

        $r1[182] = 9;

        $r1[183] = 6;

        $r1[184] = 3;

        $r1[185] = 85;

        $r1[186] = 4;

        $r1[187] = 6;

        $r1[188] = 19;

        $r1[189] = 2;

        $r1[190] = 67;

        $r1[191] = 78;

        $r1[192] = 49;

        $r1[193] = 19;

        $r1[194] = 48;

        $r1[195] = 17;

        $r1[196] = 6;

        $r1[197] = 3;

        $r1[198] = 85;

        $r1[199] = 4;

        $r1[200] = 8;

        $r1[201] = 12;

        $r1[202] = 10;

        $r1[203] = 83;

        $r1[204] = 111;

        $r1[205] = 109;

        $r1[206] = 101;

        $r1[207] = 45;

        $r1[208] = 83;

        $r1[209] = 116;

        $r1[210] = 97;

        $r1[211] = 116;

        $r1[212] = 101;

        $r1[213] = 49;

        $r1[214] = 16;

        $r1[215] = 48;

        $r1[216] = 14;

        $r1[217] = 6;

        $r1[218] = 3;

        $r1[219] = 85;

        $r1[220] = 4;

        $r1[221] = 7;

        $r1[222] = 12;

        $r1[223] = 7;

        $r1[224] = 66;

        $r1[225] = 101;

        $r1[226] = 105;

        $r1[227] = 106;

        $r1[228] = 105;

        $r1[229] = 110;

        $r1[230] = 103;

        $r1[231] = 49;

        $r1[232] = 17;

        $r1[233] = 48;

        $r1[234] = 15;

        $r1[235] = 6;

        $r1[236] = 3;

        $r1[237] = 85;

        $r1[238] = 4;

        $r1[239] = 10;

        $r1[240] = 12;

        $r1[241] = 8;

        $r1[242] = 65;

        $r1[243] = 117;

        $r1[244] = 116;

        $r1[245] = 111;

        $r1[246] = 110;

        $r1[247] = 97;

        $r1[248] = 118;

        $r1[249] = 105;

        $r1[250] = 49;

        $r1[251] = 31;

        $r1[252] = 48;

        $r1[253] = 29;

        $r1[254] = 6;

        $r1[255] = 3;

        $r1[256] = 85;

        $r1[257] = 4;

        $r1[258] = 3;

        $r1[259] = 12;

        $r1[260] = 22;

        $r1[261] = 99;

        $r1[262] = 111;

        $r1[263] = 109;

        $r1[264] = 46;

        $r1[265] = 97;

        $r1[266] = 117;

        $r1[267] = 116;

        $r1[268] = 111;

        $r1[269] = 110;

        $r1[270] = 97;

        $r1[271] = 118;

        $r1[272] = 105;

        $r1[273] = 46;

        $r1[274] = 97;

        $r1[275] = 112;

        $r1[276] = 105;

        $r1[277] = 115;

        $r1[278] = 101;

        $r1[279] = 114;

        $r1[280] = 118;

        $r1[281] = 101;

        $r1[282] = 114;

        $r1[283] = 48;

        $r1[284] = -127;

        $r1[285] = -97;

        $r1[286] = 48;

        $r1[287] = 13;

        $r1[288] = 6;

        $r1[289] = 9;

        $r1[290] = 42;

        $r1[291] = -122;

        $r1[292] = 72;

        $r1[293] = -122;

        $r1[294] = -9;

        $r1[295] = 13;

        $r1[296] = 1;

        $r1[297] = 1;

        $r1[298] = 1;

        $r1[299] = 5;

        $r1[300] = 0;

        $r1[301] = 3;

        $r1[302] = -127;

        $r1[303] = -115;

        $r1[304] = 0;

        $r1[305] = 48;

        $r1[306] = -127;

        $r1[307] = -119;

        $r1[308] = 2;

        $r1[309] = -127;

        $r1[310] = -127;

        $r1[311] = 0;

        $r1[312] = -15;

        $r1[313] = -27;

        $r1[314] = -128;

        $r1[315] = -56;

        $r1[316] = 118;

        $r1[317] = -59;

        $r1[318] = 62;

        $r1[319] = -127;

        $r1[320] = 79;

        $r1[321] = 125;

        $r1[322] = -36;

        $r1[323] = 121;

        $r1[324] = 0;

        $r1[325] = 63;

        $r1[326] = -125;

        $r1[327] = -30;

        $r1[328] = 118;

        $r1[329] = 5;

        $r1[330] = -85;

        $r1[331] = -121;

        $r1[332] = 91;

        $r1[333] = 39;

        $r1[334] = 90;

        $r1[335] = 123;

        $r1[336] = 72;

        $r1[337] = -126;

        $r1[338] = -83;

        $r1[339] = -41;

        $r1[340] = -45;

        $r1[341] = -77;

        $r1[342] = -42;

        $r1[343] = -120;

        $r1[344] = -81;

        $r1[345] = 23;

        $r1[346] = -2;

        $r1[347] = -121;

        $r1[348] = -29;

        $r1[349] = 123;

        $r1[350] = -7;

        $r1[351] = 22;

        $r1[352] = -114;

        $r1[353] = -20;

        $r1[354] = -25;

        $r1[355] = 74;

        $r1[356] = 67;

        $r1[357] = -43;

        $r1[358] = 65;

        $r1[359] = 124;

        $r1[360] = -7;

        $r1[361] = 11;

        $r1[362] = -72;

        $r1[363] = 38;

        $r1[364] = -123;

        $r1[365] = 16;

        $r1[366] = -58;

        $r1[367] = 80;

        $r1[368] = 32;

        $r1[369] = 58;

        $r1[370] = -33;

        $r1[371] = 14;

        $r1[372] = 11;

        $r1[373] = 36;

        $r1[374] = 60;

        $r1[375] = 13;

        $r1[376] = -121;

        $r1[377] = 100;

        $r1[378] = 105;

        $r1[379] = -32;

        $r1[380] = 123;

        $r1[381] = -31;

        $r1[382] = 114;

        $r1[383] = -101;

        $r1[384] = -41;

        $r1[385] = 12;

        $r1[386] = 100;

        $r1[387] = 33;

        $r1[388] = -120;

        $r1[389] = 63;

        $r1[390] = 126;

        $r1[391] = -123;

        $r1[392] = 48;

        $r1[393] = 55;

        $r1[394] = 80;

        $r1[395] = -116;

        $r1[396] = 28;

        $r1[397] = -10;

        $r1[398] = 125;

        $r1[399] = 59;

        $r1[400] = -41;

        $r1[401] = -95;

        $r1[402] = -126;

        $r1[403] = 118;

        $r1[404] = -70;

        $r1[405] = 43;

        $r1[406] = -127;

        $r1[407] = 9;

        $r1[408] = 93;

        $r1[409] = -100;

        $r1[410] = 81;

        $r1[411] = -19;

        $r1[412] = -114;

        $r1[413] = -41;

        $r1[414] = 85;

        $r1[415] = -103;

        $r1[416] = -37;

        $r1[417] = -116;

        $r1[418] = 118;

        $r1[419] = 72;

        $r1[420] = 86;

        $r1[421] = 125;

        $r1[422] = -43;

        $r1[423] = -92;

        $r1[424] = -11;

        $r1[425] = 63;

        $r1[426] = 69;

        $r1[427] = -38;

        $r1[428] = -10;

        $r1[429] = -65;

        $r1[430] = 126;

        $r1[431] = -53;

        $r1[432] = -115;

        $r1[433] = 60;

        $r1[434] = 62;

        $r1[435] = -86;

        $r1[436] = -80;

        $r1[437] = 1;

        $r1[438] = 39;

        $r1[439] = 19;

        $r1[440] = 2;

        $r1[441] = 3;

        $r1[442] = 1;

        $r1[443] = 0;

        $r1[444] = 1;

        $r1[445] = -93;

        $r1[446] = 80;

        $r1[447] = 48;

        $r1[448] = 78;

        $r1[449] = 48;

        $r1[450] = 29;

        $r1[451] = 6;

        $r1[452] = 3;

        $r1[453] = 85;

        $r1[454] = 29;

        $r1[455] = 14;

        $r1[456] = 4;

        $r1[457] = 22;

        $r1[458] = 4;

        $r1[459] = 20;

        $r1[460] = -29;

        $r1[461] = 63;

        $r1[462] = 48;

        $r1[463] = -79;

        $r1[464] = -113;

        $r1[465] = -13;

        $r1[466] = 26;

        $r1[467] = 85;

        $r1[468] = 22;

        $r1[469] = -27;

        $r1[470] = 93;

        $r1[471] = -5;

        $r1[472] = 122;

        $r1[473] = -103;

        $r1[474] = -109;

        $r1[475] = 14;

        $r1[476] = -18;

        $r1[477] = 6;

        $r1[478] = -13;

        $r1[479] = -109;

        $r1[480] = 48;

        $r1[481] = 31;

        $r1[482] = 6;

        $r1[483] = 3;

        $r1[484] = 85;

        $r1[485] = 29;

        $r1[486] = 35;

        $r1[487] = 4;

        $r1[488] = 24;

        $r1[489] = 48;

        $r1[490] = 22;

        $r1[491] = -128;

        $r1[492] = 20;

        $r1[493] = -29;

        $r1[494] = 63;

        $r1[495] = 48;

        $r1[496] = -79;

        $r1[497] = -113;

        $r1[498] = -13;

        $r1[499] = 26;

        $r1[500] = 85;

        $r1[501] = 22;

        $r1[502] = -27;

        $r1[503] = 93;

        $r1[504] = -5;

        $r1[505] = 122;

        $r1[506] = -103;

        $r1[507] = -109;

        $r1[508] = 14;

        $r1[509] = -18;

        $r1[510] = 6;

        $r1[511] = -13;

        $r1[512] = -109;

        $r1[513] = 48;

        $r1[514] = 12;

        $r1[515] = 6;

        $r1[516] = 3;

        $r1[517] = 85;

        $r1[518] = 29;

        $r1[519] = 19;

        $r1[520] = 4;

        $r1[521] = 5;

        $r1[522] = 48;

        $r1[523] = 3;

        $r1[524] = 1;

        $r1[525] = 1;

        $r1[526] = -1;

        $r1[527] = 48;

        $r1[528] = 13;

        $r1[529] = 6;

        $r1[530] = 9;

        $r1[531] = 42;

        $r1[532] = -122;

        $r1[533] = 72;

        $r1[534] = -122;

        $r1[535] = -9;

        $r1[536] = 13;

        $r1[537] = 1;

        $r1[538] = 1;

        $r1[539] = 5;

        $r1[540] = 5;

        $r1[541] = 0;

        $r1[542] = 3;

        $r1[543] = -127;

        $r1[544] = -127;

        $r1[545] = 0;

        $r1[546] = -32;

        $r1[547] = -74;

        $r1[548] = 55;

        $r1[549] = -125;

        $r1[550] = -58;

        $r1[551] = -128;

        $r1[552] = 15;

        $r1[553] = -62;

        $r1[554] = 100;

        $r1[555] = -60;

        $r1[556] = 3;

        $r1[557] = -86;

        $r1[558] = 81;

        $r1[559] = 112;

        $r1[560] = -61;

        $r1[561] = -56;

        $r1[562] = -69;

        $r1[563] = -126;

        $r1[564] = 8;

        $r1[565] = 99;

        $r1[566] = -100;

        $r1[567] = -38;

        $r1[568] = -108;

        $r1[569] = -56;

        $r1[570] = -122;

        $r1[571] = 125;

        $r1[572] = 19;

        $r1[573] = -64;

        $r1[574] = -61;

        $r1[575] = 90;

        $r1[576] = 85;

        $r1[577] = -47;

        $r1[578] = -8;

        $r1[579] = -123;

        $r1[580] = -103;

        $r1[581] = 105;

        $r1[582] = 77;

        $r1[583] = -32;

        $r1[584] = -65;

        $r1[585] = -62;

        $r1[586] = -28;

        $r1[587] = 67;

        $r1[588] = -28;

        $r1[589] = -78;

        $r1[590] = 116;

        $r1[591] = -49;

        $r1[592] = 120;

        $r1[593] = -2;

        $r1[594] = 33;

        $r1[595] = 13;

        $r1[596] = 47;

        $r1[597] = 46;

        $r1[598] = -5;

        $r1[599] = -112;

        $r1[600] = 3;

        $r1[601] = -101;

        $r1[602] = -125;

        $r1[603] = -115;

        $r1[604] = 92;

        $r1[605] = -124;

        $r1[606] = 58;

        $r1[607] = 80;

        $r1[608] = 107;

        $r1[609] = -67;

        $r1[610] = 82;

        $r1[611] = 6;

        $r1[612] = -63;

        $r1[613] = 39;

        $r1[614] = -90;

        $r1[615] = -1;

        $r1[616] = 85;

        $r1[617] = -58;

        $r1[618] = 82;

        $r1[619] = -115;

        $r1[620] = 119;

        $r1[621] = 13;

        $r1[622] = -4;

        $r1[623] = -32;

        $r1[624] = 0;

        $r1[625] = -98;

        $r1[626] = 100;

        $r1[627] = -41;

        $r1[628] = 94;

        $r1[629] = -75;

        $r1[630] = 75;

        $r1[631] = -103;

        $r1[632] = 126;

        $r1[633] = -80;

        $r1[634] = 85;

        $r1[635] = 40;

        $r1[636] = -27;

        $r1[637] = 60;

        $r1[638] = 105;

        $r1[639] = 28;

        $r1[640] = -27;

        $r1[641] = -21;

        $r1[642] = -15;

        $r1[643] = -98;

        $r1[644] = 103;

        $r1[645] = -88;

        $r1[646] = -109;

        $r1[647] = 35;

        $r1[648] = -119;

        $r1[649] = -27;

        $r1[650] = -26;

        $r1[651] = -122;

        $r1[652] = 113;

        $r1[653] = 63;

        $r1[654] = 35;

        $r1[655] = -33;

        $r1[656] = 70;

        $r1[657] = 23;

        $r1[658] = 33;

        $r1[659] = -23;

        $r1[660] = 66;

        $r1[661] = 108;

        $r1[662] = 56;

        $r1[663] = 112;

        $r1[664] = 46;

        $r1[665] = -85;

        $r1[666] = -123;

        $r1[667] = -123;

        $r1[668] = 33;

        $r1[669] = 118;

        $r1[670] = 27;

        $r1[671] = 96;

        $r1[672] = -7;

        $r1[673] = -103;

     label02:
        $r2 = new java.io.ByteArrayInputStream;

     label03:
        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        varReplacer19218 = "X.509";

        $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer19218);

        varReplacer19219 = "RSA";

        $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer19219);

        $r5 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label04:
        $r6 = new java.security.spec.X509EncodedKeySpec;

     label05:
        $r7 = virtualinvoke $r5.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r1 = interfaceinvoke $r7.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r7 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6);

     label06:
        return $r7;

     label07:
        $r8 := @caughtexception;

        $r9 = new java.lang.Exception;

        varReplacer19222 = "\u65e0\u6b64\u7b97\u6cd5";

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer19222);

        throw $r9;

     label08:
        $r10 := @caughtexception;

        $r9 = new java.lang.Exception;

        varReplacer19217 = "\u516c\u94a5\u975e\u6cd5";

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer19217);

        throw $r9;

     label09:
        $r11 := @caughtexception;

        $r9 = new java.lang.Exception;

        varReplacer19221 = "\u516c\u94a5\u6570\u636e\u4e3a\u7a7a";

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer19221);

        throw $r9;

     label10:
        $r12 := @caughtexception;

     label11:
        varReplacer19220 = null;

        return varReplacer19220;

     label12:
        $r13 := @caughtexception;

        goto label11;

        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.security.cert.CertificateException from label03 to label04 with label10;
        catch java.security.cert.CertificateException from label05 to label06 with label10;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label07;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label07;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label08;
        catch java.security.spec.InvalidKeySpecException from label05 to label06 with label08;
        catch java.lang.NullPointerException from label01 to label02 with label09;
        catch java.lang.NullPointerException from label03 to label04 with label09;
        catch java.lang.NullPointerException from label05 to label06 with label09;
    }

    public static byte[] a(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1, varReplacer19125;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r4;
        null_type varReplacer19126;
        int varReplacer19127;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.amap.api.location.core.f: javax.crypto.spec.SecretKeySpec c(java.lang.String)>($r1);

        varReplacer19125 = "AES/ECB/ZeroBytePadding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19125);

        varReplacer19127 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer19127, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        varReplacer19126 = null;

        return varReplacer19126;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static byte[] a(byte[], java.security.Key)
    {
        byte[] $r0;
        java.security.Key $r1;
        javax.crypto.Cipher $r2;
        int varReplacer19215;
        java.lang.String varReplacer19216;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.security.Key;

        varReplacer19216 = "RSA/ECB/PKCS1Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19216);

        varReplacer19215 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer19215, $r1);

        $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    public static byte[] a(byte[], byte[])
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        int varReplacer20734;
        java.lang.String varReplacer20735, varReplacer20736;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        varReplacer20735 = "AES/CBC/PKCS5Padding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20735);

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer20736 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer20736);

        $r4 = <com.amap.api.location.core.f: javax.crypto.spec.IvParameterSpec c>;

        varReplacer20734 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer20734, $r2, $r4);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String b(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer19121;
        int $i0;
        byte[] $r2;
        java.lang.Exception $r3;
        java.lang.Throwable $r4, $r5;
        java.io.UnsupportedEncodingException r6;
        null_type varReplacer19120, varReplacer19122;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label15;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 > 0 goto label01;

        varReplacer19120 = null;

        return varReplacer19120;

     label01:
        $r2 = staticinvoke <com.amap.api.location.core.f: byte[] b(java.lang.String)>($r0);

     label02:
        $r2 = staticinvoke <com.amap.api.location.core.f: byte[] a(byte[],java.lang.String)>($r2, $r1);

     label03:
        if $r2 == null goto label15;

     label04:
        $r1 = new java.lang.String;

     label05:
        $r0 = $r1;

     label06:
        varReplacer19121 = "UTF-8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, varReplacer19121);

     label07:
        return $r0;

     label08:
        $r3 := @caughtexception;

     label09:
        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label10:
        $r2 = null;

        goto label02;

     label11:
        $r4 := @caughtexception;

     label12:
        r6 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke r6.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label13:
        $r0 = null;

        goto label07;

     label14:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Throwable: void printStackTrace()>();

     label15:
        varReplacer19122 = null;

        return varReplacer19122;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label11;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    private static java.lang.String b(byte[])
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        char[] $r3;
        byte $b2;
        char $c3;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = new java.lang.StringBuilder;

        $i1 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = <com.amap.api.location.core.f: char[] a>;

        $b2 = $r0[$i1];

        $b2 = $b2 >> 4;

        $b2 = $b2 & 15;

        $c3 = $r3[$b2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r3 = <com.amap.api.location.core.f: char[] a>;

        $b2 = $r0[$i1];

        $b2 = $b2 & 15;

        $c3 = $r3[$b2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static byte[] b(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3, varReplacer19128;
        byte[] $r1;
        byte $b4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 2 goto label2;

     label1:
        $r1 = newarray (byte)[0];

        return $r1;

     label2:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

     label3:
        if $i1 >= $i0 goto label4;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        varReplacer19128 = 16;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, varReplacer19128);

        $i2 = $i2 & 255;

        $b4 = (byte) $i2;

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r1;
    }

    public static byte[] b(byte[], java.lang.String)
    {
        byte[] $r0, $r3;
        java.lang.String $r1, varReplacer19974, varReplacer19975, varReplacer19976;
        java.io.ByteArrayOutputStream $r2;
        int $i0, $i1, $i2, $i3, varReplacer19973, varReplacer19977, varReplacer19978;
        java.security.spec.PKCS8EncodedKeySpec $r4;
        java.security.KeyFactory $r5;
        java.security.PrivateKey $r6;
        javax.crypto.Cipher $r7;
        java.lang.Throwable $r8;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

        entermonitor class "Lcom/amap/api/location/core/f;";

     label1:
        varReplacer19976 = "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDCEYwdO3V2ANrhApjqyk7X8FH5AEaWly58kP9IDAhMqwtIbmcJrUK9oO9Afh3KZnOlDtjiowy733YqpLRO7WBvdbW/c4Dz/d3dy/m+6HMqxaak+GQQRHw/VPdKciaZ3eIZp4MWOyIQwiFSQvPTAo/Na8hV4SgBZHB3lGFw0yu+BmG+h32eIE6p4Y8EDCn+G+yzekX+taMrWTQIysledrygZSGPv1ukbdFDnH/xZEI0dCr9pZT+AZQl3o9a2aMyuRrHM0oupXKKiYl69Y8fKh1Tyd752rF6LrR5uOb9aOfXt18hb+3YL5P9rQ+ZRYbyHYFaxzBPA2jLq0KUQ+Dmg7YhAgMBAAECggEAL9pj0lF3BUHwtssNKdf42QZJMD0BKuDcdZrLV9ifs0f54EJY5enzKw8j76MpdV8N5QVkNX4/BZR0bs9uJogh31oHFs5EXeWbb7V8P7bRrxpNnSAijGBWwscQsyqymf48YlcL28949ujnjoEz3jQjgWOyYnrCgpVhphrQbCGmB5TcZnTFvHfozt/0tzuMj5na5lRnkD0kYXgr0x/SRZcPoCybSpc3t/B/9MAAboGaV/QQkTotr7VOuJfaPRjvg8rzyPzavo3evxsjXj7vDXbN4w0cbk/Uqn2JtvPQ8HoysmF2HdYvILZibvJmWH1hA58b4sn5s6AqFRjMOL7rHdD+gQKBgQD+IzoofmZK5tTxgO9sWsG71IUeshQP9fe159jKCehk1RfuIqqbRP0UcxJiw4eNjHs4zU0HeRL3iF5XfUs0FQanO/pp6YL1xgVdfQlDdTdk6KFHJ0sUJapnJn1S2k7IKfRKE1+rkofSXMYUTsgHF1fDp+gxy4yUMY+h9O+JlKVKOwKBgQDDfaDIblaSm+B0lyG//wFPynAeGd0Q8wcMZbQQ/LWMJZhMZ7fyUZ+A6eL/jB53a2tgnaw2rXBpMe1qu8uSpym2plU0fkgLAnVugS5+KRhOkUHyorcbpVZbs5azf7GlTydR5dI1PHF3Bncemoa6IsEvumHWgQbVyTTz/O9mlFafUwKBgQCvDebms8KUf5JY1F6XfaCLWGVl8nZdVCmQFKbA7Lg2lI5KS3jHQWsupeEZRORffU/3nXsc1apZ9YY+r6CYvI77rRXd1KqPzxos/o7d96TzjkZhc9CEjTlmmh2jb5rqx/Ns/xFcZq/GGH+cx3ODZvHeZQ9NFY+9GLJ+dfB2DX0ZtwKBgQC+9/lZ8telbpqMqpqwqRaJ8LMn5JIdHZu0E6IcuhFLr+ogMW3zTKMpVtGGXEXi2M/TWRPDchiO2tQX4Q5T2/KW19QCbJ5KCwPWiGF3owN4tNOciDGh0xkSidRc0xAh8bnyejSoBry8zlcNUVztdkgMLOGonvCjZWPSOTNQnPYluwKBgCV+WVftpTk3l+OfAJTaXEPNYdh7+WQjzxZKjUaDzx80Ts7hRo2U+EQT7FBjQQNqmmDnWtujo5p1YmJC0FT3n1CVa7g901pb3b0RcOziYWAoJi0/+kLyeo6XBhuLeZ7h90S70GGh1o0V/j/9N1jb5DCL4xKkvdYePPTSTku0BM+n";

        $r3 = staticinvoke <com.amap.api.location.core.c: byte[] a(java.lang.String)>(varReplacer19976);

        $r4 = new java.security.spec.PKCS8EncodedKeySpec;

        specialinvoke $r4.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r3);

        varReplacer19974 = "RSA";

        $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer19974);

        $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r4);

        varReplacer19975 = "RSA/ECB/PKCS1Padding";

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19975);

        varReplacer19973 = 1;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer19973, $r6);

        $i1 = lengthof $r0;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $i2 = 0;

     label2:
        $i3 = $i1 - $i0;

        if $i3 <= 0 goto label5;

        $i3 = $i1 - $i0;

        if $i3 <= 245 goto label4;

        varReplacer19977 = 245;

        $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer19977);

     label3:
        $i0 = lengthof $r3;

        varReplacer19978 = 0;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, varReplacer19978, $i0);

        $i2 = $i2 + 1;

        $i0 = $i2 * 245;

        goto label2;

     label4:
        $i3 = $i1 - $i0;

        $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3);

        goto label3;

     label5:
        $r0 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

     label6:
        exitmonitor class "Lcom/amap/api/location/core/f;";

        return $r0;

     label7:
        $r8 := @caughtexception;

        exitmonitor class "Lcom/amap/api/location/core/f;";

        throw $r8;

        catch java.lang.Throwable from label1 to label6 with label7;
    }

    static byte[] b(byte[], byte[])
    {
        byte[] $r0, $r1, $r5;
        int $i0, $i1, $i2, varReplacer19214;
        java.lang.StringBuffer $r2, r10;
        java.lang.String $r3, r11, varReplacer19209, varReplacer19210, varReplacer19211, varReplacer19212, varReplacer19213;
        java.lang.String[] $r4;
        byte $b3;
        javax.crypto.spec.IvParameterSpec $r6, r12;
        javax.crypto.spec.SecretKeySpec $r7, r13;
        javax.crypto.Cipher $r8;
        java.lang.Throwable $r9;
        java.security.InvalidAlgorithmParameterException r14;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 = 0;

        r10 = new java.lang.StringBuffer;

        varReplacer19212 = "16,16,18,77,15,911,121,77,121,911,38,77,911,99,86,67,611,96,48,77,84,911,38,67,021,301,86,67,611,98,48,77,511,77,48,97,511,58,48,97,511,84,501,87,511,96,48,77,221,911,38,77,121,37,86,67,25,301,86,67,021,96,86,67,021,701,86,67,35,56,86,67,611,37,221,87";

        specialinvoke r10.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer19212);

        $r2 = virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer reverse()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        varReplacer19213 = ",";

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer19213);

        $i1 = lengthof $r4;

        $r5 = newarray (byte)[$i1];

        $i1 = 0;

     label1:
        $i2 = lengthof $r4;

        if $i1 >= $i2 goto label2;

        $r3 = $r4[$i1];

        $b3 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>($r3);

        $r5[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        r11 = new java.lang.String;

        specialinvoke r11.<java.lang.String: void <init>(byte[])>($r5);

        $r5 = staticinvoke <com.amap.api.location.core.c: byte[] a(java.lang.String)>(r11);

        r11 = new java.lang.String;

        specialinvoke r11.<java.lang.String: void <init>(byte[])>($r5);

        r10 = new java.lang.StringBuffer;

        specialinvoke r10.<java.lang.StringBuffer: void <init>(java.lang.String)>(r11);

        $r2 = virtualinvoke r10.<java.lang.StringBuffer: java.lang.StringBuffer reverse()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        varReplacer19211 = ",";

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer19211);

        $i1 = lengthof $r4;

        $r5 = newarray (byte)[$i1];

     label3:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label4;

        $r3 = $r4[$i0];

        $b3 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>($r3);

        $r5[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        r12 = new javax.crypto.spec.IvParameterSpec;

        $r6 = r12;

        specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        r13 = new javax.crypto.spec.SecretKeySpec;

        $r7 = r13;

        varReplacer19209 = "AES";

        specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer19209);

        varReplacer19210 = "AES/CBC/PKCS5Padding";

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19210);

     label5:
        varReplacer19214 = 1;

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer19214, $r7, $r6);

     label6:
        $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;

     label7:
        $r9 := @caughtexception;

        r14 = (java.security.InvalidAlgorithmParameterException) $r9;

        virtualinvoke r14.<java.security.InvalidAlgorithmParameterException: void printStackTrace()>();

        goto label6;

        catch java.security.InvalidAlgorithmParameterException from label5 to label6 with label7;
    }

    private static javax.crypto.spec.SecretKeySpec c(java.lang.String)
    {
        java.lang.String $r0, varReplacer19130, varReplacer19132, varReplacer19133;
        byte[] $r1, $r3;
        java.lang.StringBuffer $r2, r5;
        int $i0, varReplacer19129, varReplacer19131;
        java.lang.Throwable $r4;
        javax.crypto.spec.SecretKeySpec r6;
        java.io.UnsupportedEncodingException r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

        if $r0 != null goto label1;

        $r0 = "";

     label1:
        r5 = new java.lang.StringBuffer;

        $r2 = r5;

        varReplacer19129 = 16;

        specialinvoke r5.<java.lang.StringBuffer: void <init>(int)>(varReplacer19129);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label2:
        $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 >= 16 goto label3;

        varReplacer19132 = "0";

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer19132);

        goto label2;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 <= 16 goto label4;

        varReplacer19131 = 16;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(varReplacer19131);

     label4:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        varReplacer19130 = "UTF-8";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer19130);

     label5:
        $r1 = $r3;

     label6:
        r6 = new javax.crypto.spec.SecretKeySpec;

        varReplacer19133 = "AES";

        specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer19133);

        return r6;

     label7:
        $r4 := @caughtexception;

        r7 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke r7.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label6;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label7;
    }

    public static byte[] c(byte[], java.lang.String)
    {
        byte[] $r0, $r3;
        java.lang.String $r1, varReplacer20737, varReplacer20739, varReplacer20742;
        java.io.ByteArrayOutputStream $r2;
        int $i0, $i1, $i2, $i3, varReplacer20738, varReplacer20740, varReplacer20741;
        java.security.spec.PKCS8EncodedKeySpec $r4;
        java.security.KeyFactory $r5;
        java.security.PrivateKey $r6;
        javax.crypto.Cipher $r7;
        java.lang.Throwable $r8;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

        entermonitor class "Lcom/amap/api/location/core/f;";

     label1:
        varReplacer20742 = "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDCEYwdO3V2ANrhApjqyk7X8FH5AEaWly58kP9IDAhMqwtIbmcJrUK9oO9Afh3KZnOlDtjiowy733YqpLRO7WBvdbW/c4Dz/d3dy/m+6HMqxaak+GQQRHw/VPdKciaZ3eIZp4MWOyIQwiFSQvPTAo/Na8hV4SgBZHB3lGFw0yu+BmG+h32eIE6p4Y8EDCn+G+yzekX+taMrWTQIysledrygZSGPv1ukbdFDnH/xZEI0dCr9pZT+AZQl3o9a2aMyuRrHM0oupXKKiYl69Y8fKh1Tyd752rF6LrR5uOb9aOfXt18hb+3YL5P9rQ+ZRYbyHYFaxzBPA2jLq0KUQ+Dmg7YhAgMBAAECggEAL9pj0lF3BUHwtssNKdf42QZJMD0BKuDcdZrLV9ifs0f54EJY5enzKw8j76MpdV8N5QVkNX4/BZR0bs9uJogh31oHFs5EXeWbb7V8P7bRrxpNnSAijGBWwscQsyqymf48YlcL28949ujnjoEz3jQjgWOyYnrCgpVhphrQbCGmB5TcZnTFvHfozt/0tzuMj5na5lRnkD0kYXgr0x/SRZcPoCybSpc3t/B/9MAAboGaV/QQkTotr7VOuJfaPRjvg8rzyPzavo3evxsjXj7vDXbN4w0cbk/Uqn2JtvPQ8HoysmF2HdYvILZibvJmWH1hA58b4sn5s6AqFRjMOL7rHdD+gQKBgQD+IzoofmZK5tTxgO9sWsG71IUeshQP9fe159jKCehk1RfuIqqbRP0UcxJiw4eNjHs4zU0HeRL3iF5XfUs0FQanO/pp6YL1xgVdfQlDdTdk6KFHJ0sUJapnJn1S2k7IKfRKE1+rkofSXMYUTsgHF1fDp+gxy4yUMY+h9O+JlKVKOwKBgQDDfaDIblaSm+B0lyG//wFPynAeGd0Q8wcMZbQQ/LWMJZhMZ7fyUZ+A6eL/jB53a2tgnaw2rXBpMe1qu8uSpym2plU0fkgLAnVugS5+KRhOkUHyorcbpVZbs5azf7GlTydR5dI1PHF3Bncemoa6IsEvumHWgQbVyTTz/O9mlFafUwKBgQCvDebms8KUf5JY1F6XfaCLWGVl8nZdVCmQFKbA7Lg2lI5KS3jHQWsupeEZRORffU/3nXsc1apZ9YY+r6CYvI77rRXd1KqPzxos/o7d96TzjkZhc9CEjTlmmh2jb5rqx/Ns/xFcZq/GGH+cx3ODZvHeZQ9NFY+9GLJ+dfB2DX0ZtwKBgQC+9/lZ8telbpqMqpqwqRaJ8LMn5JIdHZu0E6IcuhFLr+ogMW3zTKMpVtGGXEXi2M/TWRPDchiO2tQX4Q5T2/KW19QCbJ5KCwPWiGF3owN4tNOciDGh0xkSidRc0xAh8bnyejSoBry8zlcNUVztdkgMLOGonvCjZWPSOTNQnPYluwKBgCV+WVftpTk3l+OfAJTaXEPNYdh7+WQjzxZKjUaDzx80Ts7hRo2U+EQT7FBjQQNqmmDnWtujo5p1YmJC0FT3n1CVa7g901pb3b0RcOziYWAoJi0/+kLyeo6XBhuLeZ7h90S70GGh1o0V/j/9N1jb5DCL4xKkvdYePPTSTku0BM+n";

        $r3 = staticinvoke <com.amap.api.location.core.c: byte[] a(java.lang.String)>(varReplacer20742);

        $r4 = new java.security.spec.PKCS8EncodedKeySpec;

        specialinvoke $r4.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r3);

        varReplacer20737 = "RSA";

        $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20737);

        $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r4);

        varReplacer20739 = "RSA/ECB/PKCS1Padding";

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20739);

        varReplacer20741 = 2;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20741, $r6);

        $i1 = lengthof $r0;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $i2 = 0;

     label2:
        $i3 = $i1 - $i0;

        if $i3 <= 0 goto label5;

        $i3 = $i1 - $i0;

        if $i3 <= 256 goto label4;

        varReplacer20738 = 256;

        $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer20738);

     label3:
        $i0 = lengthof $r3;

        varReplacer20740 = 0;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r3, varReplacer20740, $i0);

        $i2 = $i2 + 1;

        $i0 = $i2 * 256;

        goto label2;

     label4:
        $i3 = $i1 - $i0;

        $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3);

        goto label3;

     label5:
        $r0 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

     label6:
        exitmonitor class "Lcom/amap/api/location/core/f;";

        return $r0;

     label7:
        $r8 := @caughtexception;

        exitmonitor class "Lcom/amap/api/location/core/f;";

        throw $r8;

        catch java.lang.Throwable from label1 to label6 with label7;
    }

    public static java.lang.String d(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1, varReplacer20002;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r4;
        null_type varReplacer19999, varReplacer20001;
        int varReplacer20000;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.amap.api.location.core.f: javax.crypto.spec.SecretKeySpec c(java.lang.String)>($r1);

        varReplacer20002 = "AES/ECB/ZeroBytePadding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20002);

        varReplacer20000 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20000, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label2:
        if $r0 != null goto label3;

        varReplacer19999 = null;

        return varReplacer19999;

     label3:
        $r1 = staticinvoke <com.amap.api.location.core.f: java.lang.String a(byte[])>($r0);

     label4:
        return $r1;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        varReplacer20001 = null;

        return varReplacer20001;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
