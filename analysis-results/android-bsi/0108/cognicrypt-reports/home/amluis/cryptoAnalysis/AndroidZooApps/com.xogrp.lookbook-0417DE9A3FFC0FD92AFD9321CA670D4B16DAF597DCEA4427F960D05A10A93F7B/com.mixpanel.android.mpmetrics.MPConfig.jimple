public class com.mixpanel.android.mpmetrics.MPConfig extends java.lang.Object
{
    public static boolean DEBUG;
    private static final java.lang.String LOGTAG;
    static final int MAX_NOTIFICATION_CACHE_COUNT;
    static final java.lang.String REFERRER_PREFS_NAME;
    public static final int UI_FEATURES_MIN_API;
    public static final java.lang.String VERSION;
    private static com.mixpanel.android.mpmetrics.MPConfig sInstance;
    private static final java.lang.Object sInstanceLock;
    private final boolean mAutoShowMixpanelUpdates;
    private final int mBulkUploadLimit;
    private final int mDataExpiration;
    private final int mDebugFlushInterval;
    private final java.lang.String mDecideEndpoint;
    private final java.lang.String mDecideFallbackEndpoint;
    private final boolean mDisableAppOpenEvent;
    private final boolean mDisableEmulatorBindingUI;
    private final boolean mDisableFallback;
    private final boolean mDisableGestureBindingUI;
    private final java.lang.String mEditorUrl;
    private final java.lang.String mEventsEndpoint;
    private final java.lang.String mEventsFallbackEndpoint;
    private final int mFlushInterval;
    private final int mMinimumDatabaseLimit;
    private final java.lang.String mPeopleEndpoint;
    private final java.lang.String mPeopleFallbackEndpoint;
    private final java.lang.String mResourcePackageName;
    private javax.net.ssl.SSLSocketFactory mSSLSocketFactory;
    private final boolean mTestMode;

    static void <clinit>()
    {
        java.lang.Object $r0;
        int varReplacer1854;

        nop;

        varReplacer1854 = 0;

        <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG> = varReplacer1854;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.mixpanel.android.mpmetrics.MPConfig: java.lang.Object sInstanceLock> = $r0;

        return;
    }

    void <init>(android.os.Bundle, android.content.Context)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        android.os.Bundle $r1;
        android.content.Context $r2;
        java.lang.Throwable $r3;
        javax.net.ssl.SSLContext $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        boolean $z0, $z1;
        int $i0, varReplacer1864, varReplacer1867, varReplacer1871, varReplacer1885, varReplacer1902, varReplacer1904, varReplacer1912, varReplacer1914, varReplacer1918, varReplacer1921, varReplacer1923, varReplacer1933, varReplacer1935;
        java.lang.String $r6, $r7, varReplacer1858, varReplacer1859, varReplacer1860, varReplacer1861, varReplacer1862, varReplacer1863, varReplacer1865, varReplacer1866, varReplacer1868, varReplacer1869, varReplacer1870, varReplacer1872, varReplacer1873, varReplacer1874, varReplacer1875, varReplacer1879, varReplacer1880, varReplacer1881, varReplacer1882, varReplacer1883, varReplacer1884, varReplacer1886, varReplacer1887, varReplacer1888, varReplacer1889, varReplacer1890, varReplacer1891, varReplacer1892, varReplacer1893, varReplacer1894, varReplacer1895, varReplacer1896, varReplacer1897, varReplacer1898, varReplacer1899, varReplacer1900, varReplacer1901, varReplacer1903, varReplacer1905, varReplacer1906, varReplacer1907, varReplacer1908, varReplacer1909, varReplacer1910, varReplacer1911, varReplacer1913, varReplacer1915, varReplacer1916, varReplacer1917, varReplacer1919, varReplacer1920, varReplacer1922, varReplacer1924, varReplacer1925, varReplacer1926, varReplacer1927, varReplacer1928, varReplacer1929, varReplacer1930, varReplacer1931, varReplacer1932, varReplacer1934, varReplacer1936, varReplacer1937;
        java.lang.StringBuilder $r8;
        null_type varReplacer1876, varReplacer1877, varReplacer1878;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

     label01:
        varReplacer1861 = "TLS";

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1861);

        varReplacer1876 = null;

        varReplacer1877 = null;

        varReplacer1878 = null;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1876, varReplacer1876, varReplacer1876);

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label02:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory> = $r5;

        varReplacer1901 = "com.mixpanel.android.MPConfig.EnableDebugLogging";

        varReplacer1902 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1901, varReplacer1902);

        <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG> = $z0;

        varReplacer1931 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys";

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>(varReplacer1931);

        if $z0 == 0 goto label03;

        varReplacer1859 = "MixpanelAPI.Conf";

        varReplacer1860 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys has been deprecated in favor of com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates. Please update this key as soon as possible.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer1859, varReplacer1860);

     label03:
        varReplacer1920 = "com.mixpanel.android.MPConfig.BulkUploadLimit";

        varReplacer1921 = 40;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1920, varReplacer1921);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mBulkUploadLimit> = $i0;

        varReplacer1934 = "com.mixpanel.android.MPConfig.FlushInterval";

        varReplacer1935 = 60000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1934, varReplacer1935);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mFlushInterval> = $i0;

        varReplacer1911 = "com.mixpanel.android.MPConfig.DebugFlushInterval";

        varReplacer1912 = 1000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1911, varReplacer1912);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDebugFlushInterval> = $i0;

        varReplacer1913 = "com.mixpanel.android.MPConfig.DataExpiration";

        varReplacer1914 = 432000000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1913, varReplacer1914);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDataExpiration> = $i0;

        varReplacer1932 = "com.mixpanel.android.MPConfig.MinimumDatabaseLimit";

        varReplacer1933 = 20971520;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1932, varReplacer1933);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mMinimumDatabaseLimit> = $i0;

        varReplacer1870 = "com.mixpanel.android.MPConfig.DisableFallback";

        varReplacer1871 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1870, varReplacer1871);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableFallback> = $z0;

        varReplacer1873 = "com.mixpanel.android.MPConfig.ResourcePackageName";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1873);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mResourcePackageName> = $r6;

        varReplacer1884 = "com.mixpanel.android.MPConfig.DisableGestureBindingUI";

        varReplacer1885 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1884, varReplacer1885);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableGestureBindingUI> = $z0;

        varReplacer1866 = "com.mixpanel.android.MPConfig.DisableEmulatorBindingUI";

        varReplacer1867 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1866, varReplacer1867);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableEmulatorBindingUI> = $z0;

        varReplacer1863 = "com.mixpanel.android.MPConfig.DisableAppOpenEvent";

        varReplacer1864 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1863, varReplacer1864);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableAppOpenEvent> = $z0;

        varReplacer1922 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys";

        varReplacer1923 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1922, varReplacer1923);

        varReplacer1917 = "com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates";

        varReplacer1918 = 1;

        $z1 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1917, varReplacer1918);

        if $z0 == 0 goto label13;

        if $z1 == 0 goto label13;

        $z0 = 1;

     label04:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mAutoShowMixpanelUpdates> = $z0;

        varReplacer1903 = "com.mixpanel.android.MPConfig.TestMode";

        varReplacer1904 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1903, varReplacer1904);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mTestMode> = $z0;

        varReplacer1879 = "com.mixpanel.android.MPConfig.EventsEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1879);

        $r7 = $r6;

        if $r6 != null goto label05;

        $r7 = "https://api.mixpanel.com/track?ip=1";

     label05:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsEndpoint> = $r7;

        varReplacer1872 = "com.mixpanel.android.MPConfig.EventsFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1872);

        $r7 = $r6;

        if $r6 != null goto label06;

        $r7 = "http://api.mixpanel.com/track?ip=1";

     label06:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsFallbackEndpoint> = $r7;

        varReplacer1927 = "com.mixpanel.android.MPConfig.PeopleEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1927);

        $r7 = $r6;

        if $r6 != null goto label07;

        $r7 = "https://api.mixpanel.com/engage";

     label07:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleEndpoint> = $r7;

        varReplacer1929 = "com.mixpanel.android.MPConfig.PeopleFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1929);

        $r7 = $r6;

        if $r6 != null goto label08;

        $r7 = "http://api.mixpanel.com/engage";

     label08:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleFallbackEndpoint> = $r7;

        varReplacer1924 = "com.mixpanel.android.MPConfig.DecideEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1924);

        $r7 = $r6;

        if $r6 != null goto label09;

        $r7 = "https://decide.mixpanel.com/decide";

     label09:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideEndpoint> = $r7;

        varReplacer1897 = "com.mixpanel.android.MPConfig.DecideFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1897);

        $r7 = $r6;

        if $r6 != null goto label10;

        $r7 = "http://decide.mixpanel.com/decide";

     label10:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideFallbackEndpoint> = $r7;

        varReplacer1880 = "com.mixpanel.android.MPConfig.EditorUrl";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1880);

        $r7 = $r6;

        if $r6 != null goto label11;

        $r7 = "wss://switchboard.mixpanel.com/connect/";

     label11:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEditorUrl> = $r7;

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        if $z0 == 0 goto label14;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer1905 = "Mixpanel configured with:\n    AutoShowMixpanelUpdates ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1905);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getAutoShowMixpanelUpdates()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1874 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1874);

        varReplacer1908 = "    BulkUploadLimit ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1908);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getBulkUploadLimit()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1936 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1936);

        varReplacer1926 = "    FlushInterval ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1926);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getFlushInterval(android.content.Context)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1906 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1906);

        varReplacer1909 = "    DataExpiration ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1909);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getDataExpiration()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1886 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1886);

        varReplacer1881 = "    MinimumDatabaseLimit ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1881);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getMinimumDatabaseLimit()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1890 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1890);

        varReplacer1887 = "    DisableFallback ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1887);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableFallback()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1928 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1928);

        varReplacer1899 = "    DisableAppOpenEvent ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1899);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableAppOpenEvent()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1891 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1891);

        varReplacer1930 = "    DisableDeviceUIBinding ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1930);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableGestureBindingUI()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1915 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1915);

        varReplacer1894 = "    DisableEmulatorUIBinding ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1894);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableEmulatorBindingUI()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1892 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1892);

        varReplacer1900 = "    EnableDebugLogging ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1900);

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1882 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1882);

        varReplacer1916 = "    TestMode ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1916);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getTestMode()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1875 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1875);

        varReplacer1865 = "    EventsEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1865);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEventsEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1937 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1937);

        varReplacer1889 = "    PeopleEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1889);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getPeopleEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1896 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1896);

        varReplacer1893 = "    DecideEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1893);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getDecideEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1895 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1895);

        varReplacer1858 = "    EventsFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1858);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEventsFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1898 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1898);

        varReplacer1888 = "    PeopleFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1888);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getPeopleFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1925 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1925);

        varReplacer1910 = "    DecideFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1910);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getDecideFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1919 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1919);

        varReplacer1907 = "    EditorUrl ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1907);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEditorUrl()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1862 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1862);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1883 = "MixpanelAPI.Conf";

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(varReplacer1883, $r6);

        return;

     label12:
        $r3 := @caughtexception;

        varReplacer1868 = "MixpanelAPI.Conf";

        varReplacer1869 = "System has no SSL support. Built-in events editor will not be available";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1868, varReplacer1869, $r3);

        $r5 = null;

        goto label02;

     label13:
        $z0 = 0;

        goto label04;

     label14:
        return;

        catch java.security.GeneralSecurityException from label01 to label02 with label12;
    }

    public static com.mixpanel.android.mpmetrics.MPConfig getInstance(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        com.mixpanel.android.mpmetrics.MPConfig $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.mixpanel.android.mpmetrics.MPConfig: java.lang.Object sInstanceLock>;

        entermonitor $r1;

     label1:
        $r2 = <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance>;

        if $r2 != null goto label2;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = staticinvoke <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig readConfig(android.content.Context)>($r0);

        <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance> = $r2;

     label2:
        exitmonitor $r1;

     label3:
        $r2 = <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance>;

        return $r2;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor $r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static com.mixpanel.android.mpmetrics.MPConfig readConfig(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, varReplacer1855;
        android.content.pm.PackageManager $r3;
        android.content.pm.ApplicationInfo $r4;
        android.os.Bundle $r5;
        com.mixpanel.android.mpmetrics.MPConfig $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8;
        int varReplacer1856;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        varReplacer1856 = 128;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, varReplacer1856);

     label2:
        $r5 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r5 != null goto label4;

        $r5 = new android.os.Bundle;

     label3:
        specialinvoke $r5.<android.os.Bundle: void <init>()>();

     label4:
        $r6 = new com.mixpanel.android.mpmetrics.MPConfig;

     label5:
        specialinvoke $r6.<com.mixpanel.android.mpmetrics.MPConfig: void <init>(android.os.Bundle,android.content.Context)>($r5, $r0);

     label6:
        return $r6;

     label7:
        $r1 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer1855 = "Can\'t configure Mixpanel with package name ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1855);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r1);

        throw $r7;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label7;
    }

    public boolean getAutoShowMixpanelUpdates()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mAutoShowMixpanelUpdates>;

        return z0;
    }

    public int getBulkUploadLimit()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mBulkUploadLimit>;

        return i0;
    }

    public int getDataExpiration()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDataExpiration>;

        return i0;
    }

    public java.lang.String getDecideEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideEndpoint>;

        return r1;
    }

    public java.lang.String getDecideFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideFallbackEndpoint>;

        return r1;
    }

    public boolean getDisableAppOpenEvent()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableAppOpenEvent>;

        return z0;
    }

    public boolean getDisableEmulatorBindingUI()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableEmulatorBindingUI>;

        return z0;
    }

    public boolean getDisableFallback()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableFallback>;

        return z0;
    }

    public boolean getDisableGestureBindingUI()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableGestureBindingUI>;

        return z0;
    }

    public java.lang.String getEditorUrl()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEditorUrl>;

        return r1;
    }

    public java.lang.String getEventsEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsEndpoint>;

        return r1;
    }

    public java.lang.String getEventsFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsFallbackEndpoint>;

        return r1;
    }

    public int getFlushInterval()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int $i0;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getFlushInterval(android.content.Context)>(null);

        return $i0;
    }

    public int getFlushInterval(android.content.Context)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        boolean $z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: android.content.Context;

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 2;

        $r2.<android.content.pm.ApplicationInfo: int flags> = $i0;

        if $i0 == 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDebugFlushInterval>;

        return $i0;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mFlushInterval>;

        return $i0;
    }

    public int getMinimumDatabaseLimit()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mMinimumDatabaseLimit>;

        return i0;
    }

    public java.lang.String getPeopleEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleEndpoint>;

        return r1;
    }

    public java.lang.String getPeopleFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleFallbackEndpoint>;

        return r1;
    }

    public java.lang.String getResourcePackageName()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mResourcePackageName>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.Throwable $r1;
        javax.net.ssl.SSLSocketFactory r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        entermonitor $r0;

     label1:
        r2 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean getTestMode()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mTestMode>;

        return z0;
    }

    public void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        javax.net.ssl.SSLSocketFactory $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        entermonitor $r0;

     label1:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
