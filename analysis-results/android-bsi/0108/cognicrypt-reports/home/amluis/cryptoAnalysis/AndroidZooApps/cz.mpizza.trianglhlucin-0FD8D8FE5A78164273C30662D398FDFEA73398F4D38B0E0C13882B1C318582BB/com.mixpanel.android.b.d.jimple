public class com.mixpanel.android.b.d extends java.lang.Object
{
    private static final java.lang.String e;
    private static final int f;
    private static final java.lang.String g;
    private static final java.lang.String h;
    private final java.io.File a;
    private final com.mixpanel.android.b.g b;
    private final java.security.MessageDigest c;
    private final com.mixpanel.android.mpmetrics.ag d;

    public void <init>(android.content.Context, java.lang.String)
    {
        com.mixpanel.android.b.d $r0;
        android.content.Context $r1;
        java.lang.String $r2, varReplacer888;
        java.lang.StringBuilder $r3;
        com.mixpanel.android.b.c $r4;

        nop;

        $r0 := @this: com.mixpanel.android.b.d;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer888 = "MixpanelAPI.Images.";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer888);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new com.mixpanel.android.b.c;

        specialinvoke $r4.<com.mixpanel.android.b.c: void <init>()>();

        specialinvoke $r0.<com.mixpanel.android.b.d: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.b.g)>($r1, $r2, $r4);

        return;
    }

    public void <init>(android.content.Context, java.lang.String, com.mixpanel.android.b.g)
    {
        com.mixpanel.android.b.d $r0;
        android.content.Context $r1;
        java.lang.String $r2, varReplacer890, varReplacer891, varReplacer892;
        com.mixpanel.android.b.g $r3;
        java.io.File $r4;
        com.mixpanel.android.mpmetrics.ag $r5;
        java.security.MessageDigest $r6;
        java.lang.Throwable $r7;
        int varReplacer889;

        nop;

        $r0 := @this: com.mixpanel.android.b.d;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: com.mixpanel.android.b.g;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer889 = 0;

        $r4 = virtualinvoke $r1.<android.content.Context: java.io.File getDir(java.lang.String,int)>($r2, varReplacer889);

        $r0.<com.mixpanel.android.b.d: java.io.File a> = $r4;

        $r0.<com.mixpanel.android.b.d: com.mixpanel.android.b.g b> = $r3;

        $r5 = staticinvoke <com.mixpanel.android.mpmetrics.ag: com.mixpanel.android.mpmetrics.ag a(android.content.Context)>($r1);

        $r0.<com.mixpanel.android.b.d: com.mixpanel.android.mpmetrics.ag d> = $r5;

     label1:
        varReplacer890 = "SHA1";

        $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer890);

     label2:
        $r0.<com.mixpanel.android.b.d: java.security.MessageDigest c> = $r6;

        return;

     label3:
        $r7 := @caughtexception;

        varReplacer891 = "MixpanelAPI.ImageStore";

        varReplacer892 = "Images won\'t be stored because this platform doesn\'t supply a SHA1 hash function";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer891, varReplacer892);

        $r6 = null;

        goto label2;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private java.io.File c(java.lang.String)
    {
        com.mixpanel.android.b.d $r0;
        java.lang.String $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.lang.StringBuilder $r4;
        java.io.File $r5, $r6;

        $r0 := @this: com.mixpanel.android.b.d;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.mixpanel.android.b.d: java.security.MessageDigest c>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = $r0.<com.mixpanel.android.b.d: java.security.MessageDigest c>;

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MP_IMG_");

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, 10);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.io.File;

        $r6 = $r0.<com.mixpanel.android.b.d: java.io.File a>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r1);

        return $r5;
    }

    public android.graphics.Bitmap a(java.lang.String)
    {
        com.mixpanel.android.b.d $r0;
        java.lang.String $r1;
        java.io.FileOutputStream $r2, $r8;
        java.io.File $r3;
        boolean $z0;
        com.mixpanel.android.mpmetrics.ag $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        com.mixpanel.android.b.g $r6;
        byte[] $r7;
        int $i0;
        android.graphics.Bitmap $r9;
        com.mixpanel.android.b.e $r10;
        java.lang.Throwable $r11, $r13, $r14, $r15, $r16, $r17;
        com.mixpanel.android.b.h $r12;

        $r0 := @this: com.mixpanel.android.b.d;

        $r1 := @parameter0: java.lang.String;

        $r2 = null;

        $r3 = specialinvoke $r0.<com.mixpanel.android.b.d: java.io.File c(java.lang.String)>($r1);

        if $r3 == null goto label01;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label28;

     label01:
        $r4 = $r0.<com.mixpanel.android.b.d: com.mixpanel.android.mpmetrics.ag d>;

     label02:
        $r5 = virtualinvoke $r4.<com.mixpanel.android.mpmetrics.ag: javax.net.ssl.SSLSocketFactory s()>();

     label03:
        $r6 = $r0.<com.mixpanel.android.b.d: com.mixpanel.android.b.g b>;

     label04:
        $r7 = interfaceinvoke $r6.<com.mixpanel.android.b.g: byte[] a(java.lang.String,java.util.List,javax.net.ssl.SSLSocketFactory)>($r1, null, $r5);

     label05:
        if $r7 == null goto label25;

        if $r3 == null goto label11;

        $i0 = lengthof $r7;

        if $i0 >= 10000000 goto label11;

     label06:
        $r8 = new java.io.FileOutputStream;

     label07:
        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

     label08:
        virtualinvoke $r8.<java.io.OutputStream: void write(byte[])>($r7);

     label09:
        if $r8 == null goto label11;

     label10:
        virtualinvoke $r8.<java.io.OutputStream: void close()>();

     label11:
        $i0 = lengthof $r7;

        $r9 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>($r7, 0, $i0);

        if $r9 != null goto label29;

        $r10 = new com.mixpanel.android.b.e;

        specialinvoke $r10.<com.mixpanel.android.b.e: void <init>(java.lang.String)>("Downloaded data could not be interpreted as a bitmap");

        throw $r10;

     label12:
        $r11 := @caughtexception;

        $r10 = new com.mixpanel.android.b.e;

        specialinvoke $r10.<com.mixpanel.android.b.e: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t download bitmap", $r11);

        throw $r10;

     label13:
        $r12 := @caughtexception;

        $r10 = new com.mixpanel.android.b.e;

        specialinvoke $r10.<com.mixpanel.android.b.e: void <init>(java.lang.String,java.lang.Throwable)>("Couldn\'t download image due to service availability", $r12);

        throw $r10;

     label14:
        $r13 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MixpanelAPI.ImageStore", "Problem closing output file", $r13);

        goto label11;

     label15:
        $r14 := @caughtexception;

        $r8 = null;

     label16:
        $r10 = new com.mixpanel.android.b.e;

        specialinvoke $r10.<com.mixpanel.android.b.e: void <init>(java.lang.String,java.lang.Throwable)>("It appears that ImageStore is misconfigured, or disk storage is unavailable- can\'t write to bitmap directory", $r14);

        throw $r10;

     label17:
        $r15 := @caughtexception;

        $r2 = $r8;

     label18:
        if $r2 == null goto label20;

     label19:
        virtualinvoke $r2.<java.io.OutputStream: void close()>();

     label20:
        throw $r15;

     label21:
        $r16 := @caughtexception;

     label22:
        $r10 = new com.mixpanel.android.b.e;

        specialinvoke $r10.<com.mixpanel.android.b.e: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t store bitmap", $r16);

        throw $r10;

     label23:
        $r15 := @caughtexception;

        goto label18;

     label24:
        $r17 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MixpanelAPI.ImageStore", "Problem closing output file", $r17);

        goto label20;

     label25:
        $r1 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>($r1);

        if $r9 != null goto label29;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        $r10 = new com.mixpanel.android.b.e;

        specialinvoke $r10.<com.mixpanel.android.b.e: void <init>(java.lang.String)>("Bitmap on disk can\'t be opened or was corrupt");

        throw $r10;

     label26:
        $r16 := @caughtexception;

        $r2 = $r8;

        goto label22;

     label27:
        $r14 := @caughtexception;

        goto label16;

     label28:
        $r7 = null;

        goto label05;

     label29:
        return $r9;

        catch java.io.IOException from label02 to label03 with label12;
        catch java.io.IOException from label04 to label05 with label12;
        catch com.mixpanel.android.b.h from label02 to label03 with label13;
        catch com.mixpanel.android.b.h from label04 to label05 with label13;
        catch java.io.FileNotFoundException from label07 to label08 with label15;
        catch java.io.IOException from label07 to label08 with label21;
        catch java.lang.Throwable from label06 to label08 with label23;
        catch java.io.FileNotFoundException from label08 to label09 with label27;
        catch java.io.IOException from label08 to label09 with label26;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.io.IOException from label19 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label23;
    }

    public void a()
    {
        com.mixpanel.android.b.d $r0;
        int $i0, $i1;
        java.io.File $r1;
        java.io.File[] $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @this: com.mixpanel.android.b.d;

        $r1 = $r0.<com.mixpanel.android.b.d: java.io.File a>;

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r2[$i1];

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("MP_IMG_");

        if $z0 == 0 goto label2;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void b(java.lang.String)
    {
        com.mixpanel.android.b.d $r0;
        java.lang.String $r1;
        java.io.File $r2;

        $r0 := @this: com.mixpanel.android.b.d;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke $r0.<com.mixpanel.android.b.d: java.io.File c(java.lang.String)>($r1);

        if $r2 == null goto label1;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label1:
        return;
    }
}
