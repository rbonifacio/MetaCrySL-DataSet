Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.glykka.easysign-005BE13BEC2C2EF82386AA93F44BBED8EE566D921AB2D20FAF06C2EB29595599.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer1588)
		Method: <com.freshdesk.mobihelp.e.ag: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 931158d5dde6d3488d1c0d78929e6d5c949da2fc01635c509c6b3b8bc2878665
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.glykka.easysign.billing_v3.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3600)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 644975adedcd524844d2b687dbed4dd8635c5c1f95e7502c87d4864f11001
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12261)
		Method: <com.dropbox.client2.android.AuthActivity: java.lang.String getConsumerSig()>
		SHA-256: 4303a700899f5105e45492fba6116f56c94d5b579481734dce1a19f86dea347e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.glykka.easysign.util.EasySignUtil: java.lang.String toSHA256String(java.lang.String)>
		SHA-256: a0faa87def59f3f308355fcda0669643f6420e80f2aaf9ee9e9046fbdbb426c5
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer1587)
		Method: <com.freshdesk.mobihelp.e.ag: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 6b05daf35a8642b738d52566606a9f5745513bccd3ca2a2ec8590eddc016d97b
		Secure: false
	Object:
		Variable: varReplacer1675
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1675)
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String ag(java.lang.String)>
		SHA-256: 4130f6e94eacab03e5f64e30fd7c4164dab276f8cf24397c7319bbd6a04cd9a5
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dropbox.client2.android.AuthActivity: java.lang.String getConsumerSig()>
		SHA-256: 815dacb7c65f684a53529072c52965e5b68ad33ff4f77dfacb77bc4bf6d13449
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1328)
		Method: <com.mixpanel.android.mpmetrics.MPConfig: void <init>(android.os.Bundle,android.content.Context)>
		SHA-256: f013c8436d372e085767b8b9d2fefef93b58b0d4b8c31b23d5a0faf773aa7c40
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1582, varReplacer1583)
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String ah(java.lang.String)>
		SHA-256: a664033acc6f55698cf4be655cadcbc68b0765088229ccab3ed882b26d1fd4be
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1577)
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String ah(java.lang.String)>
		SHA-256: f785df4f772eca64c40b4805e29a14c831d3e7685ba9149705027783519eaeac
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String cy()>
		SHA-256: 40356e0ba1306601c7a920f7e4c6219c9cf11c5668d1c550ebd412de6fbbe0bf
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String ah(java.lang.String)>
		SHA-256: 7e654fc726668183f15cddf2e82550cac78f2f8223294aa0c3f1b02183431166
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <com.glykka.easysign.billing.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 2a272c4a3e98f7dcd7a8ff5e653af0b991c3e6be8340943f2dc47f8b1d922e8
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.microsoft.aad.adal.PackageHelper: java.lang.String getCurrentSignatureForPackage(java.lang.String)>
		SHA-256: 918ef502012532dfbef616d31c2d106d0f096969a80eb5d5c8cd0c855eb9f971
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1464)
		Method: <com.mixpanel.android.util.ImageStore: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.util.RemoteService)>
		SHA-256: 5cfa4cc28b53bde67d4b732b495b6032dcfb5190539e4fd4203dd11df7caa373
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1568)
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String cy()>
		SHA-256: e03027bc4a774798812e4d7f022f3b139864eefa3c9fbd2d59d5a7ad500daeb0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String cy()>
		SHA-256: 470667b5a808d3cb0e1958d5473f64774250d3aabff957c2cd50d2cbc6541058
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer12818)
		Method: <com.glykka.easysign.billing.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 14f1fb56b6eb5bd17d93227ab531054e51b68de930eda8400717611a9e175074
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17481)
		Method: <com.evernote.client.android.EvernoteUtil: byte[] hash(java.io.InputStream)>
		SHA-256: 13048d74f1fa5cdb04112634c33398ca91c7f8b3d9744e16f9ca8e5e03e0aee5
		Secure: false
	Object:
		Variable: varReplacer1588
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer1588)
		Method: <com.freshdesk.mobihelp.e.ag: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 784f94c60923012f9c8ba0d4e56dfa92c7ce0a6d1618955533ee89899658439e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.evernote.client.android.EvernoteUtil: byte[] hash(java.io.InputStream)>
		SHA-256: 9cb79236a130da63ec31076c909321853fc0ee1c32fbfeb3c0e2486a7553453d
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3609)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzblv()>
		SHA-256: 83c079bf7ac2408fec6e17847d1b671ef908e95c5f61261e7fe61fff96dfb61b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11850)
		Method: <com.glykka.easysign.util.EasySignUtil: java.lang.String toSHA256String(java.lang.String)>
		SHA-256: 54fc946852792a95c48e821386bbe31a3e22d7b1531c2b8a5b4901fc00ccbc90
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String cy()>
		SHA-256: 35aa0f56c6759d39e77725df04985085c40da591cc91f5248be1b0be73b8b03b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzblv()>
		SHA-256: 112022bca94cdaa98ec8bb4e28d641de4a8f23ab1fc0b368e2d06d6a02e13c6a
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: de23b6b43bf61a151236ba121fe635998ae5701838c416d3d6732f9c02675d0b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1675)
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String ag(java.lang.String)>
		SHA-256: 4f5bf26d1d73fe031e80b430bc208174815ea59825970e6d9d3b7c863fd0e6a3
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.glykka.easysign.billing.Security: void <clinit>()>
		SHA-256: 91c37ad2be5d4dbbfef8f15d8c3a1f10810340f28211f7a5794c4e13e621501c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1681, varReplacer1682)
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String ag(java.lang.String)>
		SHA-256: bec92684169cc08c0b58f0fac3e90cc2ece1462fbcf04a0e460568419619a5b9
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzkk(java.lang.String)>
		SHA-256: f768922fa43b6517f5cbb7b5c0e8dff878a97528e590f1df3666b51af353f078
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10088)
		Method: <com.microsoft.aad.adal.PackageHelper: java.lang.String getCurrentSignatureForPackage(java.lang.String)>
		SHA-256: 38ced800283b85aace3a8af805bba9773d0f57f321306d771902375a88b4a900
		Secure: false
	Object:
		Variable: varReplacer1577
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1577)
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String ah(java.lang.String)>
		SHA-256: 32ea7e77a84738e99d9bd905879d325415569d810f2c50ce84095f3acdb2db56
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.freshdesk.mobihelp.e.ag: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: b5f9c7db428175ba7e77501f48e86f9342310f6544ce567216b227a60d3a9196
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer17314)
		Method: <com.glykka.easysign.billing_v3.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 6488c8eaf9923f590ec3c48ef185e14bc4c0d5c7fe6a3602f3d8ee116385587f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.freshdesk.mobihelp.e.ag: java.lang.String ag(java.lang.String)>
		SHA-256: f8d3aa8f39335be23b71818d6b988f1ace10b5e58976bd72c1519b3b4928e7a9
		Secure: false

Findings in Java Class: com.mixpanel.android.util.ImageStore

	 in Method: void <init>(android.content.Context,java.lang.String,com.mixpanel.android.util.RemoteService)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5cfa4cc28b53bde67d4b732b495b6032dcfb5190539e4fd4203dd11df7caa373)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1464)


Findings in Java Class: com.mixpanel.android.mpmetrics.AnalyticsMessages

	 in Method: void <init>(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5cfa4cc28b53bde67d4b732b495b6032dcfb5190539e4fd4203dd11df7caa373)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker createWorker()>()


Findings in Java Class: com.freshdesk.mobihelp.e.ag

	 in Method: java.lang.String ah(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a664033acc6f55698cf4be655cadcbc68b0765088229ccab3ed882b26d1fd4be)
			First parameter (with value "AES") should be any of AES/{CBC, CTR}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1582, varReplacer1583)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1577)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1584, $r3)


	 in Method: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #6b05daf35a8642b738d52566606a9f5745513bccd3ca2a2ec8590eddc016d97b)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithSHAAND192BITAES-CBC-BC, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer1587)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #931158d5dde6d3488d1c0d78929e6d5c949da2fc01635c509c6b3b8bc2878665)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer1588)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #6b05daf35a8642b738d52566606a9f5745513bccd3ca2a2ec8590eddc016d97b)
			First parameter (with value "PBEWithMD5AndDES") should be any of {PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithSHAAND192BITAES-CBC-BC, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer1587)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #931158d5dde6d3488d1c0d78929e6d5c949da2fc01635c509c6b3b8bc2878665)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer1588)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #931158d5dde6d3488d1c0d78929e6d5c949da2fc01635c509c6b3b8bc2878665)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer1588)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


	 in Method: java.lang.String ag(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #bec92684169cc08c0b58f0fac3e90cc2ece1462fbcf04a0e460568419619a5b9)
			First parameter (with value "AES") should be any of AES/{CBC, CTR}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1681, varReplacer1682)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1677, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1675)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #644975adedcd524844d2b687dbed4dd8635c5c1f95e7502c87d4864f11001)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3600)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.microsoft.aad.adal.PackageHelper

	 in Method: java.lang.String getCurrentSignatureForPackage(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #38ced800283b85aace3a8af805bba9773d0f57f321306d771902375a88b4a900)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10088)


Findings in Java Class: com.dropbox.client2.android.AuthActivity

	 in Method: java.lang.String getConsumerSig()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4303a700899f5105e45492fba6116f56c94d5b579481734dce1a19f86dea347e)
			First parameter (with value "SHA-1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12261)


Findings in Java Class: com.glykka.easysign.billing.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #14f1fb56b6eb5bd17d93227ab531054e51b68de930eda8400717611a9e175074)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer12818)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.glykka.easysign.billing_v3.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #6488c8eaf9923f590ec3c48ef185e14bc4c0d5c7fe6a3602f3d8ee116385587f)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer17314)


Findings in Java Class: com.evernote.client.android.EvernoteUtil

	 in Method: byte[] hash(java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #13048d74f1fa5cdb04112634c33398ca91c7f8b3d9744e16f9ca8e5e03e0aee5)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17481)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #13048d74f1fa5cdb04112634c33398ca91c7f8b3d9744e16f9ca8e5e03e0aee5)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.mixpanel.android.mpmetrics.MPConfig

	 in Method: void <init>(android.os.Bundle,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1344, varReplacer1344, varReplacer1344)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1344, varReplacer1344, varReplacer1344)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 41

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 13
	IncompleteOperationError: 2
	NeverTypeOfError: 1
	TypestateError: 1
	RequiredPredicateError: 11
=====================================================================
