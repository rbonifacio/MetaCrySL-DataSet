Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.mobiqu.mathgames.multiplication-044A1B369C8AE56CB82952D09CECBAE97483CA61290A82CAED86300006C1948F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer790)
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String c()>
		SHA-256: d83bada2f4368ee72f2c6109c75e749c5b980ec16d022c2c54b518dba849fc4
		Secure: true
	Object:
		Variable: varReplacer805
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer804, varReplacer805)
		Method: <com.mobiqu.mathgames.multiplication.bq: javax.crypto.SecretKey a(char[],byte[],java.lang.String)>
		SHA-256: 5cfcae5ff04d681ad748e2cf3422281081a6c75947b786f75a7ac015df723925
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.c.bqi: java.lang.String a(java.lang.String)>
		SHA-256: 792f2eae48d1344173230fa469e442fa5cec2eab1f70e48b36342ccaf23dcb61
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer518)
		Method: <com.google.android.gms.c.bqi: java.lang.String a(java.lang.String)>
		SHA-256: 7aee3bf6986070ce44853cbb7a57e04852ec15366a594a70a02485792b78537f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer802)
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String c(java.lang.String)>
		SHA-256: aa9a9e872e6e8fb126affc5f507988e98d5099ec706aed4ce35c0c13329d633f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String c(java.lang.String)>
		SHA-256: 3d3e4202f1770af02f86ebba2d380255502b9928d80ca5ddb0a027c0f39396ae
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String c()>
		SHA-256: c049fa33b7ecee2689855d3a46ae421a4175c7108643dd4273e07a5a8f7ceb98
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String c()>
		SHA-256: d43065456e361e9c68b1146ce0aaba7441b94505bdcfe77932975b3c10e99718
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer800, varReplacer801)
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String c(java.lang.String)>
		SHA-256: 1e967095fc408739b3a8db88a933a9190a64c74b2af4be71b6bf43decd2389ee
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer261)
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String b(java.lang.String)>
		SHA-256: 920e4143266849896a3b044d0d76a7c04d18800b378b843882170c0d2b02e6b3
		Secure: false
	Object:
		Variable: varReplacer261
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer261)
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String b(java.lang.String)>
		SHA-256: a9ddf3761abac2f64d7965288da8bff460ff80d8560154ebaec81179082604f3
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.a.a.a.a.l: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 13282012f1b4d4b078ae4a70d74861df420636ff06b5fae32898e3eac41ad37a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer803)
		Method: <com.mobiqu.mathgames.multiplication.bq: javax.crypto.SecretKey a(char[],byte[],java.lang.String)>
		SHA-256: 12ac35108cd6bb5026b0b1894f2a26c5704ef047c4aef81282a8e6a703d9e119
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String c()>
		SHA-256: 2c357e0491efb11a7a7b9fdfd84152ee2210dff358a064df467eb23b9225f2ab
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String b(java.lang.String)>
		SHA-256: 26d8ca68e2d92492bf1c8c5f44ca752d61bedc1a08a02b43db710d6d991d32fb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer264, varReplacer265)
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String b(java.lang.String)>
		SHA-256: 423da0b98a51c90a1d43e171179a66ebfc2eb4f8f4df54b07d2b89c5354cda44
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer804, varReplacer805)
		Method: <com.mobiqu.mathgames.multiplication.bq: javax.crypto.SecretKey a(char[],byte[],java.lang.String)>
		SHA-256: e6d6715fbaae544b4d7d764b3da1466017a8a1c8546c4d5e8d94e0dd7de20bb0
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1441)
		Method: <com.a.a.a.a.l: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: b8fd4aafb087c4907b7e8749ac404fb432875b2671801c95effba168f4a562fe
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobiqu.mathgames.multiplication.bq: javax.crypto.SecretKey a(char[],byte[],java.lang.String)>
		SHA-256: 5bb998f7c838eb7e3d496b7abff19c3bf65f24d206286b651df4c6e42a9a5485
		Secure: false
	Object:
		Variable: varReplacer802
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer802)
		Method: <com.mobiqu.mathgames.multiplication.bq: java.lang.String c(java.lang.String)>
		SHA-256: e08bd34f73240e3bf0dea881000340ba2101b0be9a84a0d30b2256506dd33a8d
		Secure: false

Findings in Java Class: com.mobiqu.mathgames.multiplication.bq

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #423da0b98a51c90a1d43e171179a66ebfc2eb4f8f4df54b07d2b89c5354cda44)
			First parameter (with value "AES") should be any of AES/{CBC, CTR}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer264, varReplacer265)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer262, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer261)


	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1e967095fc408739b3a8db88a933a9190a64c74b2af4be71b6bf43decd2389ee)
			First parameter (with value "AES") should be any of AES/{CBC, CTR}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer800, varReplacer801)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer802)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer798, $r3)


	 in Method: javax.crypto.SecretKey a(char[],byte[],java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #12ac35108cd6bb5026b0b1894f2a26c5704ef047c4aef81282a8e6a703d9e119)
			First parameter (with value "PBEWithMD5AndDES") should be any of {PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithSHAAND192BITAES-CBC-BC, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer803)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #12ac35108cd6bb5026b0b1894f2a26c5704ef047c4aef81282a8e6a703d9e119)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithSHAAND192BITAES-CBC-BC, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer803)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e6d6715fbaae544b4d7d764b3da1466017a8a1c8546c4d5e8d94e0dd7de20bb0)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer804, varReplacer805)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e6d6715fbaae544b4d7d764b3da1466017a8a1c8546c4d5e8d94e0dd7de20bb0)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer804, varReplacer805)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e6d6715fbaae544b4d7d764b3da1466017a8a1c8546c4d5e8d94e0dd7de20bb0)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer804, varReplacer805)


Findings in Java Class: com.google.android.gms.c.bqi

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7aee3bf6986070ce44853cbb7a57e04852ec15366a594a70a02485792b78537f)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer518)


Findings in Java Class: com.a.a.a.a.l

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #b8fd4aafb087c4907b7e8749ac404fb432875b2671801c95effba168f4a562fe)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1441)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 20

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 7
	NeverTypeOfError: 1
	IncompleteOperationError: 1
	RequiredPredicateError: 7
=====================================================================
