Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.monitise.mea.android.fortebank-00A80ADD4A0DA78AF807F1A8DCD52BD3ABE3B80C501145CE721EE1ED3C1E4CCB.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 1f31580920da22d100f3b9cef3e133c521a496cf62e80f4549eef22de5b1121e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7184)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: ddeac14d639219735aa39f943da4bf9a0924fc867a0b908b60fcaef4ed812f2c
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.SSLContext
		Statement: $r11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4717)
		Method: <cjp: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: f523616273ec0740f84c7b9470bc70c260aff1ecf05e690472ad4bd5925699a3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 3d3773e338a654191a74de599eb2819d59784a2d15c025cf6fe97e29ab369e8a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2584)
		Method: <dou: javax.crypto.SecretKey b(android.content.Context,java.lang.String)>
		SHA-256: 39be81f91c57f66f32e45b7b979be133a56b05d418b26d4b01f550a7ed155136
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 4eca516dc04a7ed2480676f09198d61a3fe719ea8d12579aeb90711e46c517bf
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer4522, varReplacer4523)
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 59f6a5a029e62cb8572a50da254b26e96cd630e1d7fbf5fa3b838a68109d57f3
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5633)
		Method: <dma: void <init>(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 7bba2ce23019173a32fd1eed9afb011221db08a922159ccf4af926469e552daa
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4549)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 8092e8ad743003e5dcbcce3304b671bd69b28858ec6d4f7208f3d749d6a4093e
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 4eca516dc04a7ed2480676f09198d61a3fe719ea8d12579aeb90711e46c517bf
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4465)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: a835be776b04ed06995853a6268491d78e9f44363bf02ae09879d5449f294f6b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 9e47b02dfb9c74f4866b9ad191499bf3082889c11a77e7a84cbb518717bbb724
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7777)
		Method: <dqc: eba a(eba)>
		SHA-256: 6d2ab5c6554c208445c00455604db19270fa99e15d290a46621da5a3e1add14
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5629)
		Method: <cjr: void <init>(javax.net.ssl.X509TrustManager)>
		SHA-256: ff32cc81968eac90b22f9fbe50fc2ecf778a454f044885bba573253094de91c5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <dqc: eba a(eba)>
		SHA-256: 68556c691895e27efc8c701610b9f972620ea36fe781e4724210714adb5e8ab2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 782f4e675b92efede98451fc8ebd6de41ac730c9a36441054aa76b8a166d5b9e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 9e47b02dfb9c74f4866b9ad191499bf3082889c11a77e7a84cbb518717bbb724
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: ce63b0eb57c5924f1ea668bf881e59bc358571b8e793c42cbaec361fced1670e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2555)
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: a823090b60fcb3c03e6e321a14cade2ec8c2d6de4df2100419e0842db0862f02
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2557)
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: 9d2195b211f8f2f2f65087952e1a7d68a066ba017e1e638b228b65f82a75a1dc
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4466)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 587779269d0308a22a3f7b33127155fa61a1f4c2698615ed23e2f53ffa7180af
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 5ec7a47afe1ae562d4d7cdd8eeb5c1da1ec966e36f2da6ce6d5e32fc9471f9ac
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: b72db40b68a9b6afef97b3af64d64c426e3ea36307107ee4a3ddab23b771981e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2580)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 2af427fd30f2ac771148fae046cc10b4cbb094ca1dcf3b5ee6e65a612c299dc8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 4c016cfc9356af9e0e52bb7c385984e2d0d9792c594b9ed26282b859a7f1d31c
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4455)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 516b34a17eabf0bb1f21daf55189724b459be938bae69d0024cc8e6844022830
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 47049074634b680d5aecb4d23434c3ac695c34d9853a0c465f98359cd6ec2c2d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer4531)
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: c135a67e7d2f936a2d44a6cb52e2a1793a8a1866994c8b49c441ec2f8208e46
		Secure: false

Findings in Java Class: dou

	 in Method: void a(android.content.Context,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #a823090b60fcb3c03e6e321a14cade2ec8c2d6de4df2100419e0842db0862f02)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer2554, $r6)


	 in Method: byte[] a(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2579, $r0, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2af427fd30f2ac771148fae046cc10b4cbb094ca1dcf3b5ee6e65a612c299dc8)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2580)


	 in Method: javax.crypto.SecretKey b(android.content.Context,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #39be81f91c57f66f32e45b7b979be133a56b05d418b26d4b01f550a7ed155136)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #39be81f91c57f66f32e45b7b979be133a56b05d418b26d4b01f550a7ed155136)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r10 = virtualinvoke $r5.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer2583, $r9)


	 in Method: byte[] b(javax.crypto.SecretKey,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8092e8ad743003e5dcbcce3304b671bd69b28858ec6d4f7208f3d749d6a4093e)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4549)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4552, $r0, $r5)


Findings in Java Class: djx

	 in Method: java.lang.String b(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #a835be776b04ed06995853a6268491d78e9f44363bf02ae09879d5449f294f6b)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r13 = virtualinvoke $r12.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer4462, varReplacer4463)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initSign(java.security.PrivateKey)>($r10)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initSign(java.security.PrivateKey)>($r10)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #516b34a17eabf0bb1f21daf55189724b459be938bae69d0024cc8e6844022830)
			First parameter (with value "SHA512WithRSAEncryption") should be any of {SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA}
			at statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4455)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #587779269d0308a22a3f7b33127155fa61a1f4c2698615ed23e2f53ffa7180af)
			First parameter (with value "SHA512WithRSAEncryption") should be any of {SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA}
			at statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4466)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #a835be776b04ed06995853a6268491d78e9f44363bf02ae09879d5449f294f6b)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4465)


	 in Method: java.lang.String d(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>(r17)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #c135a67e7d2f936a2d44a6cb52e2a1793a8a1866994c8b49c441ec2f8208e46)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer4527)


Findings in Java Class: cjp

	 in Method: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4719, r23, varReplacer4719)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f523616273ec0740f84c7b9470bc70c260aff1ecf05e690472ad4bd5925699a3)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4717)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4719, r23, varReplacer4719)


Findings in Java Class: dma

	 in Method: void <init>(android.content.Context,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #7bba2ce23019173a32fd1eed9afb011221db08a922159ccf4af926469e552daa)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r8)


Findings in Java Class: dqc

	 in Method: eba a(eba)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6d2ab5c6554c208445c00455604db19270fa99e15d290a46621da5a3e1add14)
			First parameter (with value "SHA-1") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7777)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7185, varReplacer7185, varReplacer7185)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7185, varReplacer7185, varReplacer7185)


Findings in Java Class: cjr

	 in Method: void <init>(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5627, $r2, varReplacer5627)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5627, $r2, varReplacer5627)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 28

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 8
	IncompleteOperationError: 2
	RequiredPredicateError: 12
	NeverTypeOfError: 3
=====================================================================
