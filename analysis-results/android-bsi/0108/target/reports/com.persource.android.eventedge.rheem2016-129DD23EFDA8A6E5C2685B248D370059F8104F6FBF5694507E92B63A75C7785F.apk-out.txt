Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.persource.android.eventedge.rheem2016-129DD23EFDA8A6E5C2685B248D370059F8104F6FBF5694507E92B63A75C7785F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.persource.android.http.AES256Cipher: void initKey()>
		SHA-256: 4d7c6baab5c92f0db662144587ecd1ce39344dbb6502d372fd0860823b5cfdcf
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.persource.android.http.AES256Cipher: void initKey()>
		SHA-256: 58945049af25493fa4c9a708d69544768011046cd739b70e90787171c410f785
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11596)
		Method: <com.persource.android.http.RSAEncryption: java.lang.String encryptData(java.lang.String,byte[])>
		SHA-256: 34e45208a8fde08cb3b98e5a7ed28d077a424a213aa5aab67f83fe551ec0215f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.persource.android.http.RSAEncryption: java.lang.String encryptData(java.lang.String,byte[])>
		SHA-256: 2881a0a2ab51d5bce6e3d5f009fa39f2e0a738e7cae86b31809d4ea8571a5e
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer11543)
		Method: <com.persource.android.http.RSAEncryption: void initKey()>
		SHA-256: 7d37d52e91e4df25112f2117b719d33584173a69bcb2f3394735a6dd59f2fb19
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.PublicKey
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.persource.android.http.RSAEncryption: void initKey()>
		SHA-256: 1dd1f463b1f0efd532a31a37b178c8eda60fa45019bf280d819add2e7a2cef81
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10228)
		Method: <com.artifex.mupdflib.MD5: java.lang.String MD5Hash(java.lang.String)>
		SHA-256: f748a990cca5e7948e4b95087533f757e8aec0fb06091386a74da1035aabaf4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.PrivateKey
		Statement: $r3 = virtualinvoke $r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.persource.android.http.RSAEncryption: void initKey()>
		SHA-256: defe66733c44ad0d8403120a2b5368b4593ea0f4bb35ad9f55a1d23d6a087d58
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11891)
		Method: <com.android.volley.cache.DiskLruBasedCache: java.lang.String hashKeyForDisk(java.lang.String)>
		SHA-256: c68569e458b8f825e2fe7ff0bace11707d727e8d7ecfe7cdec2a0065a5f9dd87
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.cache.DiskLruBasedCache: java.lang.String hashKeyForDisk(java.lang.String)>
		SHA-256: e236356c1577350a1f1979be2851a5eca4f1f9acb30bae5eb400fadf4a2c03df
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer11547)
		Method: <com.persource.android.http.AES256Cipher: void initKey()>
		SHA-256: 6bb346151d6c7a69093396c256ad855cda7ded1b71b08f665e83f6717a7a6c26
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.artifex.mupdflib.MD5: java.lang.String MD5Hash(java.lang.String)>
		SHA-256: 7e73f53e23936ccefc713221689603bf8069f07dd1b7d8aa141cf7c47e3e3744
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.persource.android.http.RSAEncryption: void initKey()>
		SHA-256: 2a3381d89b81c1649b3e72ee669f197104a161fb408148354740d17b5cf3c19b
		Secure: true

Findings in Java Class: com.artifex.mupdflib.MD5

	 in Method: java.lang.String MD5Hash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f748a990cca5e7948e4b95087533f757e8aec0fb06091386a74da1035aabaf4)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10228)


Findings in Java Class: com.persource.android.http.RSAEncryption

	 in Method: java.lang.String encryptData(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #34e45208a8fde08cb3b98e5a7ed28d077a424a213aa5aab67f83fe551ec0215f)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11596)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer11595, $r4)


Findings in Java Class: com.android.volley.cache.DiskLruBasedCache

	 in Method: java.lang.String hashKeyForDisk(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c68569e458b8f825e2fe7ff0bace11707d727e8d7ecfe7cdec2a0065a5f9dd87)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11891)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 1
	ConstraintError: 3
=====================================================================
