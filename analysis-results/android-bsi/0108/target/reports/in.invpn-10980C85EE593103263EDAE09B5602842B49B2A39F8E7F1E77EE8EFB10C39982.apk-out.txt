Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/in.invpn-10980C85EE593103263EDAE09B5602842B49B2A39F8E7F1E77EE8EFB10C39982.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 29413  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 9bec08917d8c17d6308fce1047325c6c7c3f151094e6e268fc8e7d3e89e5beab
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.message.proguard.g: java.lang.String a(java.lang.String)>
		SHA-256: 5e2682cfd2c13b1e4c2b93bbabc0edfebe2b204bd2e9981461b509e1f710b2bb
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1755)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 24b981643ec757494b92e4d737f236c66f4233d52183f10782e2a96e5d4ce160
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer447)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: b090000c6eadda1fa548f42cc512333eba30fdc7e8295be550266dd0c917890f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: a496e81fbb4fcdc5e03a647a323f9f888baa3ef5d73648a3e0b5a3b467ddbd1
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.bu: java.lang.String u(android.content.Context)>
		SHA-256: 1d1f3b46065db65eaa6e4315e336477b906480c9d2bfb51d4daac0f28b0c7d84
		Secure: false
	Object:
		Variable: varReplacer798
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer798)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: ff8cbc424975888c18078b5aae35dc818faa6608e5f124054521499b90334e84
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: dfdfbc12720b58582472a369ee7126d2c89ffccd15b06b641717c7d7a71ba579
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: c5a57e32c0226a86444337cd105d2e743b580d87ce60e2157049afb4d2848a9a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer800)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 6f90aab7227499dfc6d1ff03b77b7f2643c61b09cebb4a590bc143d05d3a16a0
		Secure: false
	Object:
		Variable: varReplacer5554
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5554)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: e624f863b63e007473f4ec1c3dc108fbf0216f1afed65f6ef889cc9cbe26904b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 4ff8afa2916954f9a0d986129d899a15493555d793f466f2b9548afac2d34340
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer383)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 60e466e8063c9ce825df646ccb83dce8ec77328a3952d3d3bc9702c838c92a10
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String a(java.lang.String)>
		SHA-256: 64952f407c2bedce75dcceb24702a41abce96cabc0d752a1f2e028ee54dbf6a9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6783)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 349ff9820b3d81b1260a00137777b0fec451e3f53b831e6447bde97e142bea28
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1846)
		Method: <u.aly.bv: java.lang.String a(java.lang.String)>
		SHA-256: 12df0b4883abc948d529e2fdacf34bcb89dad844e925195a417edb7d8c56fafa
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.android.agoo.common.c: byte[] a(byte[],javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: 8f2e7913c00617921e7d852b9a31479fa9f5aae33209b7f9e78a25b1061dfac
		Secure: false
	Object:
		Variable: varReplacer383
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer383)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: bff3fa28a63e6e909f8af93248c527479ed31937200ae1e4fbfe26d90ee519d6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 266ce8ef6af251212529e05fd6070ced123a10d0494f7eae63a9e8bb332a6b13
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer798)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 5b3c212f56de0f1fb5bda9b16b7a265d6135b85b3956539a52e18e098e7e86e2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1750)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 4a483c4f93cc70793d3c537463ccd96603f82fe1f0064a94f88fb513d9ca9221
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: 2622e8e202780ec97e101af4c20cdab6b6f238313cd27df17198d0a43f138bc4
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer384)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 65d7c3490b3bb9c4f72df69f465bf63eb383f4a3ed7d3d299f4950b3530a09a3
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 9cfd93e16e92695722f1605f9722d0827a7d09b24ac41bd14056584a47c8b9b9
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: ce27a79f159a0b0e9d5beb5b86a8d9d0630db56327d0e0bd86801b701d7f64e7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6376)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: ac06fcc33e074e06dfbfcba7bda236db80cd44623df8b48c1fad8ac583255a99
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 114e16caa40e734a0e255361d38b3835adb74935128fc69bdb16f1ab64dce330
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1754)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: a0d6cd39f89b78a013a71cfaea45f1a712e177aca7806a0c9d3a504762ba1a6b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer388, varReplacer389)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 95808ca5331abbc4fa70c07e64f57862ffef4538fa9a9370313e7a29e6c75f90
		Secure: true
	Object:
		Variable: varReplacer6374
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6374)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 7e4e6e8ed6755353f34a05a2385b79e52da17064fc2ef3458f95f6ea382669f0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5548)
		Method: <org.android.agoo.common.c: byte[] a(byte[])>
		SHA-256: 87f5b27901494e7039957774a2d1145799a3ab8bcece52389f3ee4d7182425c6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bs: java.lang.String c(java.lang.String)>
		SHA-256: bbe0b8ef84642ecfe2d0251874077e3b23da2170e4f2fb08bea07ceb3b40eade
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2483)
		Method: <u.aly.bv: java.lang.String b(java.lang.String)>
		SHA-256: 93a646dae20010b4c26e74c15d7e1eda8ca1a21899ce81392abb214688dbc4d8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bs: byte[] b(byte[])>
		SHA-256: cd668ef0203059225c7fe4838b35d39e7cc4381f86a7a04e2a93d5acf93d338e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 53e689f0838acc09cc36cef29f7f79a88f3727bc41513a6f98273796d8efc71d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <org.android.agoo.common.c: void <clinit>()>
		SHA-256: 2705022dbbf2fad58b29aa7b832e91827679edd40f99b8f72f776b0057153b67
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5568)
		Method: <org.android.agoo.common.c: javax.crypto.Cipher a()>
		SHA-256: e303c74d68e73f33434eaa836bf900b35b6fd6f1b3202f86b9c66ea72575bbc5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <u.aly.aw: void a()>
		SHA-256: 6839d53c5c853cf50908053a93d66c4ab720e87bbff149d04df2410de8242ab0
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6899)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String a(java.lang.String)>
		SHA-256: 3fb4a7a98b81aa1a04d564b99a8125b2fd7e864140a82c9c651f45d37e46e3b2
		Secure: false
	Object:
		Variable: varReplacer1752
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1752)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: d654585fb07025932bc5703a4d48275e6e4dfeafe87cee32a9bd9f2e28ee60d1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 480d62b2174afc77ea171637c712e1afce063fa35eb4849bf29d0ae0c68791d8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bv: java.lang.String a(java.lang.String)>
		SHA-256: 81836eb1764e02ee1ad035dda512a6ee91d642cbd6df353b9f948f1dce8d087c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.android.agoo.common.c: byte[] a(byte[])>
		SHA-256: 80ac997c05895a17381f441b983207814c35e4f423937420f8639f745f05e612
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 6eeb388f9f05d7f3e8f96664808a2e18b13430fbe401cac4e442507aee164771
		Secure: false
	Object:
		Variable: varReplacer5505
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5505)
		Method: <org.android.agoo.control.AgooFactory: java.lang.String parseEncryptedMsg(java.lang.String)>
		SHA-256: bc8f085d88a265560a67280c8cf8b8db58c938e4a09e960b1d127fd05f4add40
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 7a5b6ff3104b0c697c70f8001151345e86e1c53eed3860aed8f6f84bad7a619c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2180)
		Method: <u.aly.bs: java.lang.String c(java.lang.String)>
		SHA-256: 146775a5674497bdc979c23a9a19511196b9b2ddfa0f5823daa9deb47ff519b8
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5505)
		Method: <org.android.agoo.control.AgooFactory: java.lang.String parseEncryptedMsg(java.lang.String)>
		SHA-256: 86349ec63728a69012c27d4605a95aad3d4ad8a73c115062a872e05dc321e324
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1752)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: cfb1f95cdd7e76e6ca74f7755d9c6b91945331f171ed65b09683a5f95c75907d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5554)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: 3b743854b9af8069f4339e65aa244f2920e96bdb4d4c8c82e714c336d0f9b7d2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer707)
		Method: <com.umeng.message.proguard.g: java.lang.String a(java.lang.String)>
		SHA-256: ab1a637354fd7f39cd523747e7d5774811d956454aeb538c35ac1d26696e54e4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 34aa3b6ee6c7ba7ca161fa3e216f9558d03e22fe0bd8369b62d3fa741d32e768
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6052)
		Method: <u.aly.bb: void <init>(java.security.KeyStore)>
		SHA-256: d04b9bb360060e82280b2b8f90b28452312b2f4b97ec8d233f8bd704b8d4e936
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2488)
		Method: <u.aly.bs: byte[] b(byte[])>
		SHA-256: ee6fbaedd9b6501fd1afbfbce303e370e071cbf9452483bec0bc371776e2832a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.android.agoo.common.c: void <clinit>()>
		SHA-256: 1cfaf2cb7506204331ef3ecc4990394b16071f06c77b1b96aef866a09c9d21cc
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 382adf1b0fac42d9d61d9c6b9042b1f93af2f0858a3839c6573a5314bd75df54
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: 1789220487afbf43e7a2c6f31c710f7aef4548d774d3db1a700c238ff3a5ca82
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <org.android.agoo.common.c: javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,byte[],int)>
		SHA-256: 3d1c29f9a6a16f7cacfdcd66eb1c08940e0808e6b96f4e756037ca7ac8bac0b2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6898)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String b(java.lang.String)>
		SHA-256: 5f7b41b0b9e674b7dc97d9ca75c1d2a36e4c46d260f2699da16a45445a13ac30
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: fe4914d27207d10c29fb8add6f3ab29f45f4aa1bcd1ada7e0be72688e5f766d8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5553)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: 542a21b9c9c4fdd978fad6426e25e83dcc018b26a07047502ec2d2419bcff1c8
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bv: java.lang.String b(java.lang.String)>
		SHA-256: d3541bde90e91bc74d0adec229e023ba52ba9fb8fec87305cfb70a0c419633cc
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2690)
		Method: <u.aly.bu: java.lang.String u(android.content.Context)>
		SHA-256: d1dd1291fceacbfe553673b3f3615b79d721830e8d4418efabcd5bb555cc7a55
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer386)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 87dca14d9f967ff55fc486f14e3db0b5474e1e6c36da1440deb1989282b0931c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String b(java.lang.String)>
		SHA-256: 76c238b127f0dc616e39488c530b32fcba1af40805ec7fc0872956a83a6da782
		Secure: false
	Object:
		Variable: varReplacer1755
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1755)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 4238fc54c90979a9a06bea45fe33037255f160ba787cd71cf4361cb0ac89e32b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: a82afbb0761a6034a969f37b27432ebbeb3f0ad07c0c9c757c6dc182b3a5c0b2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6374)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: ac58a984e540a921a29c69895f012e7042cb6343b0520e4c6445858d85d97299
		Secure: false

Findings in Java Class: com.ta.utdid2.b.a.a

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer382, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #65d7c3490b3bb9c4f72df69f465bf63eb383f4a3ed7d3d299f4950b3530a09a3)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer384)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer383)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6375, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6374)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ac06fcc33e074e06dfbfcba7bda236db80cd44623df8b48c1fad8ac583255a99)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6376)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6375, $r3, $r2)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer387, $r2)


Findings in Java Class: com.ta.utdid2.device.c

	 in Method: java.lang.String b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #b090000c6eadda1fa548f42cc512333eba30fdc7e8295be550266dd0c917890f)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer447)


Findings in Java Class: com.umeng.message.proguard.g

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ab1a637354fd7f39cd523747e7d5774811d956454aeb538c35ac1d26696e54e4)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer707)


Findings in Java Class: com.umeng.message.proguard.b

	 in Method: java.lang.String a(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer799, $r6, $r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6f90aab7227499dfc6d1ff03b77b7f2643c61b09cebb4a590bc143d05d3a16a0)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer800)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer799, $r6, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer798)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: u.aly.bs

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1751, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1751, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1752)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4a483c4f93cc70793d3c537463ccd96603f82fe1f0064a94f88fb513d9ca9221)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1750)


	 in Method: byte[] b(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a0d6cd39f89b78a013a71cfaea45f1a712e177aca7806a0c9d3a504762ba1a6b)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1754)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1755)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1753, $r2, $r4)


	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #146775a5674497bdc979c23a9a19511196b9b2ddfa0f5823daa9deb47ff519b8)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2180)


	 in Method: byte[] b(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ee6fbaedd9b6501fd1afbfbce303e370e071cbf9452483bec0bc371776e2832a)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2488)


Findings in Java Class: u.aly.bv

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #12df0b4883abc948d529e2fdacf34bcb89dad844e925195a417edb7d8c56fafa)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1846)


	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #93a646dae20010b4c26e74c15d7e1eda8ca1a21899ce81392abb214688dbc4d8)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2483)


Findings in Java Class: u.aly.bu

	 in Method: java.lang.String u(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d1dd1291fceacbfe553673b3f3615b79d721830e8d4418efabcd5bb555cc7a55)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2690)


Findings in Java Class: org.android.agoo.common.c

	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #87f5b27901494e7039957774a2d1145799a3ab8bcece52389f3ee4d7182425c6)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5548)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5554)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #542a21b9c9c4fdd978fad6426e25e83dcc018b26a07047502ec2d2419bcff1c8)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5553)


	 in Method: javax.crypto.Cipher a()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e303c74d68e73f33434eaa836bf900b35b6fd6f1b3202f86b9c66ea72575bbc5)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5568)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Fourth parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer5560, $r0, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer5560, $r0, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator

	 in Method: byte[] getMD5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #349ff9820b3d81b1260a00137777b0fec451e3f53b831e6447bde97e142bea28)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6783)


Findings in Java Class: com.alibaba.sdk.android.httpdns.g

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5f7b41b0b9e674b7dc97d9ca75c1d2a36e4c46d260f2699da16a45445a13ac30)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6898)


	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3fb4a7a98b81aa1a04d564b99a8125b2fd7e864140a82c9c651f45d37e46e3b2)
			First parameter (with value "md5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6899)


Findings in Java Class: org.android.agoo.control.AgooFactory

	 in Method: java.lang.String parseEncryptedMsg(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5505)


Findings in Java Class: u.aly.bb

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6053, r7, varReplacer6053)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6053, r7, varReplacer6053)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 68

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 18
	RequiredPredicateError: 28
=====================================================================
