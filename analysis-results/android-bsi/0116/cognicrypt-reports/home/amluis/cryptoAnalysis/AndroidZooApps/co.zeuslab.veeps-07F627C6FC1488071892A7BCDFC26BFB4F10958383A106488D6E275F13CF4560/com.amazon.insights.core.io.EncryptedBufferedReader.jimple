public class com.amazon.insights.core.io.EncryptedBufferedReader extends java.io.BufferedReader
{
    private static final int BUFFER_SIZE;
    private javax.crypto.Cipher cipher;
    private final java.io.BufferedReader reader;

    public void <init>(java.io.BufferedReader, javax.crypto.SecretKey)
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.io.BufferedReader $r1;
        javax.crypto.SecretKey $r2;
        java.lang.String $r3;
        javax.crypto.Cipher $r4;
        java.lang.Throwable $r5, $r7, $r8;
        java.lang.IllegalArgumentException $r6;
        null_type varReplacer1230, varReplacer1231, varReplacer1233;
        int varReplacer1232;

        nop;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 := @parameter0: java.io.BufferedReader;

        $r2 := @parameter1: javax.crypto.SecretKey;

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader> = $r1;

     label1:
        $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3);

     label2:
        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher> = $r4;

        $r4 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher>;

     label3:
        varReplacer1232 = 2;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1232, $r2);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        varReplacer1231 = null;

        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher> = varReplacer1231;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer1233 = null;

        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher> = varReplacer1233;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r6;

     label7:
        $r8 := @caughtexception;

        varReplacer1230 = null;

        $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher> = varReplacer1230;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r8);

        throw $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
        catch javax.crypto.NoSuchPaddingException from label3 to label4 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
    }

    public void close()
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.io.BufferedReader $r1;

        nop;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader>;

        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

        return;
    }

    public void mark(int)
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        int $i0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $i0 := @parameter0: int;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the mark(int) method");

        throw $r1;
    }

    public boolean markSupported()
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        return 0;
    }

    public int read()
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the read() method");

        throw $r1;
    }

    public int read(java.nio.CharBuffer)
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.nio.CharBuffer $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 := @parameter0: java.nio.CharBuffer;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the read(CharBuffer) method");

        throw $r2;
    }

    public int read(char[])
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        char[] $r1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 := @parameter0: char[];

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the read(char[]) method");

        throw $r2;
    }

    public int read(char[], int, int)
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        char[] $r1;
        int $i0, $i1;
        java.lang.UnsupportedOperationException $r2;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the read(char[],int,int) method");

        throw $r2;
    }

    public java.lang.String readLine()
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        javax.crypto.Cipher $r1;
        java.io.IOException $r2, r28;
        java.io.BufferedReader $r3;
        java.lang.String $r4, r32, varReplacer2717, varReplacer2720, varReplacer2721;
        byte[] $r5;
        java.io.ByteArrayInputStream $r6, r29;
        java.io.ByteArrayOutputStream $r7, r30;
        java.util.zip.GZIPInputStream $r8, r31;
        int $i0, varReplacer2718;
        java.lang.Exception $r9, $r16, $r17, $r21, $r22, $r27;
        com.amazon.insights.core.io.DecryptionException $r10, $r15, $r23;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r18, $r19, $r20, $r24, $r25, $r26;
        null_type varReplacer2719;

        nop;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher>;

        if $r1 != null goto label01;

        r28 = new java.io.IOException;

        varReplacer2717 = "Could not build a Cipher to decrpyt the underlying writer";

        specialinvoke r28.<java.io.IOException: void <init>(java.lang.String)>(varReplacer2717);

        throw r28;

     label01:
        $r3 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader>;

     label02:
        $r4 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label03:
        if $r4 != null goto label06;

        goto label04;

     label04:
        goto label05;

     label05:
        goto label65;

     label06:
        $r1 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: javax.crypto.Cipher cipher>;

     label07:
        varReplacer2721 = "UTF-8";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2721);

        $r5 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] decodeBase64(byte[])>($r5);

        $r5 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label08:
        r29 = new java.io.ByteArrayInputStream;

     label09:
        $r6 = r29;

     label10:
        specialinvoke r29.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

     label11:
        r30 = new java.io.ByteArrayOutputStream;

     label12:
        $r7 = r30;

     label13:
        specialinvoke r30.<java.io.ByteArrayOutputStream: void <init>()>();

     label14:
        $r5 = newarray (byte)[1024];

     label15:
        r31 = new java.util.zip.GZIPInputStream;

     label16:
        $r8 = r31;

     label17:
        specialinvoke r31.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r6);

     label18:
        $i0 = virtualinvoke $r8.<java.util.zip.GZIPInputStream: int read(byte[])>($r5);

     label19:
        if $i0 <= 0 goto label36;

     label20:
        varReplacer2718 = 0;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r5, varReplacer2718, $i0);

     label21:
        goto label18;

     label22:
        $r9 := @caughtexception;

     label23:
        $r23 = new com.amazon.insights.core.io.DecryptionException;

     label24:
        $r10 = $r23;

     label25:
        specialinvoke $r23.<com.amazon.insights.core.io.DecryptionException: void <init>(java.lang.Exception)>($r9);

     label26:
        throw $r10;

     label27:
        $r11 := @caughtexception;

     label28:
        $r23 = new com.amazon.insights.core.io.DecryptionException;

     label29:
        $r10 = $r23;

     label30:
        $r9 = (java.lang.Exception) $r11;

        specialinvoke $r23.<com.amazon.insights.core.io.DecryptionException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label31:
        $r12 := @caughtexception;

     label32:
        if $r8 == null goto label33;

        virtualinvoke $r8.<java.util.zip.GZIPInputStream: void close()>();

     label33:
        if $r6 == null goto label34;

        virtualinvoke $r6.<java.io.ByteArrayInputStream: void close()>();

     label34:
        if $r7 == null goto label35;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void close()>();

     label35:
        throw $r12;

     label36:
        r32 = new java.lang.String;

     label37:
        $r4 = r32;

     label38:
        $r5 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        varReplacer2720 = "UTF-8";

        specialinvoke r32.<java.lang.String: void <init>(byte[],java.lang.String)>($r5, varReplacer2720);

     label39:
        if $r8 == null goto label40;

        virtualinvoke $r8.<java.util.zip.GZIPInputStream: void close()>();

     label40:
        if $r6 == null goto label41;

        virtualinvoke $r6.<java.io.ByteArrayInputStream: void close()>();

     label41:
        if $r7 == null goto label66;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void close()>();

        return $r4;

     label42:
        $r13 := @caughtexception;

        $r7 = null;

        $r6 = null;

        $r8 = null;

        $r14 = $r13;

     label43:
        $r23 = new com.amazon.insights.core.io.DecryptionException;

     label44:
        $r10 = $r23;

     label45:
        $r9 = (java.lang.Exception) $r14;

        specialinvoke $r23.<com.amazon.insights.core.io.DecryptionException: void <init>(java.lang.Exception)>($r9);

        throw $r10;

     label46:
        $r10 := @caughtexception;

        $r7 = null;

        $r6 = null;

        $r8 = null;

        $r15 = $r10;

     label47:
        throw $r15;

     label48:
        $r16 := @caughtexception;

        $r7 = null;

        $r6 = null;

        $r8 = null;

        $r17 = $r16;

     label49:
        r28 = new java.io.IOException;

     label50:
        $r2 = r28;

     label51:
        $r4 = virtualinvoke $r17.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke r28.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label52:
        $r18 := @caughtexception;

        $r7 = null;

        $r6 = null;

        $r8 = null;

        $r12 = $r18;

        goto label32;

     label53:
        $r19 := @caughtexception;

        $r7 = null;

        $r12 = $r19;

        $r8 = null;

        goto label32;

     label54:
        $r20 := @caughtexception;

        $r8 = null;

        $r12 = $r20;

        goto label32;

     label55:
        $r21 := @caughtexception;

        $r7 = null;

        $r17 = $r21;

        $r8 = null;

        goto label49;

     label56:
        $r22 := @caughtexception;

        $r8 = null;

        $r17 = $r22;

        goto label49;

     label57:
        $r17 := @caughtexception;

        goto label49;

     label58:
        $r23 := @caughtexception;

        $r7 = null;

        $r15 = $r23;

        $r8 = null;

        goto label47;

     label59:
        $r15 := @caughtexception;

        goto label47;

     label60:
        $r24 := @caughtexception;

        $r7 = null;

        $r14 = $r24;

        $r8 = null;

        goto label43;

     label61:
        $r14 := @caughtexception;

        goto label43;

     label62:
        $r25 := @caughtexception;

        $r7 = null;

        $r6 = null;

        $r8 = null;

        $r11 = $r25;

        goto label28;

     label63:
        $r26 := @caughtexception;

        $r7 = null;

        $r11 = $r26;

        $r8 = null;

        goto label28;

     label64:
        $r27 := @caughtexception;

        $r8 = null;

        $r9 = $r27;

        goto label23;

     label65:
        varReplacer2719 = null;

        return varReplacer2719;

     label66:
        return $r4;

        catch javax.crypto.IllegalBlockSizeException from label02 to label03 with label62;
        catch javax.crypto.BadPaddingException from label02 to label03 with label42;
        catch com.amazon.insights.core.io.DecryptionException from label02 to label03 with label46;
        catch java.lang.Exception from label01 to label03 with label48;
        catch java.lang.Throwable from label01 to label03 with label52;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label62;
        catch javax.crypto.IllegalBlockSizeException from label10 to label11 with label62;
        catch javax.crypto.BadPaddingException from label07 to label08 with label42;
        catch javax.crypto.BadPaddingException from label10 to label11 with label42;
        catch com.amazon.insights.core.io.DecryptionException from label07 to label08 with label46;
        catch com.amazon.insights.core.io.DecryptionException from label10 to label11 with label46;
        catch java.lang.Exception from label06 to label08 with label48;
        catch java.lang.Exception from label10 to label11 with label48;
        catch java.lang.Throwable from label06 to label09 with label52;
        catch java.lang.Throwable from label10 to label11 with label52;
        catch javax.crypto.IllegalBlockSizeException from label13 to label14 with label63;
        catch javax.crypto.BadPaddingException from label13 to label14 with label60;
        catch com.amazon.insights.core.io.DecryptionException from label13 to label14 with label58;
        catch java.lang.Exception from label13 to label14 with label55;
        catch java.lang.Throwable from label11 to label12 with label53;
        catch java.lang.Throwable from label13 to label14 with label53;
        catch java.lang.Exception from label14 to label15 with label56;
        catch java.lang.Exception from label17 to label18 with label64;
        catch java.lang.Throwable from label15 to label16 with label54;
        catch java.lang.Throwable from label17 to label18 with label54;
        catch java.lang.Exception from label18 to label19 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
        catch java.lang.Throwable from label18 to label19 with label31;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch javax.crypto.IllegalBlockSizeException from label25 to label26 with label27;
        catch javax.crypto.BadPaddingException from label25 to label26 with label61;
        catch com.amazon.insights.core.io.DecryptionException from label25 to label27 with label59;
        catch java.lang.Exception from label25 to label27 with label57;
        catch java.lang.Throwable from label23 to label24 with label31;
        catch java.lang.Throwable from label25 to label27 with label31;
        catch java.lang.Throwable from label28 to label29 with label31;
        catch java.lang.Throwable from label30 to label31 with label31;
        catch javax.crypto.IllegalBlockSizeException from label38 to label39 with label27;
        catch javax.crypto.BadPaddingException from label38 to label39 with label61;
        catch com.amazon.insights.core.io.DecryptionException from label38 to label39 with label59;
        catch java.lang.Exception from label38 to label39 with label57;
        catch java.lang.Throwable from label36 to label37 with label31;
        catch java.lang.Throwable from label38 to label39 with label31;
        catch java.lang.Throwable from label43 to label44 with label31;
        catch java.lang.Throwable from label45 to label46 with label31;
        catch java.lang.Throwable from label47 to label48 with label31;
        catch java.lang.Throwable from label49 to label50 with label31;
        catch java.lang.Throwable from label51 to label52 with label31;
    }

    public boolean ready()
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        boolean $z0;
        java.io.BufferedReader $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader>;

        $z0 = virtualinvoke $r1.<java.io.BufferedReader: boolean ready()>();

        return $z0;
    }

    public void reset()
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        java.io.BufferedReader $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $r1 = $r0.<com.amazon.insights.core.io.EncryptedBufferedReader: java.io.BufferedReader reader>;

        virtualinvoke $r1.<java.io.BufferedReader: void reset()>();

        return;
    }

    public long skip(long)
    {
        com.amazon.insights.core.io.EncryptedBufferedReader $r0;
        long $l0;
        java.lang.UnsupportedOperationException $r1;

        $r0 := @this: com.amazon.insights.core.io.EncryptedBufferedReader;

        $l0 := @parameter0: long;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This writer does not support the skip(long) method");

        throw $r1;
    }
}
