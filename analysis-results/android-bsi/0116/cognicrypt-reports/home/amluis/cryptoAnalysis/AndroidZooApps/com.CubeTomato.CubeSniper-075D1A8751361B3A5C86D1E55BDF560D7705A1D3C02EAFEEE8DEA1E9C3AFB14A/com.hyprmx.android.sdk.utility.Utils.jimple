public class com.hyprmx.android.sdk.utility.Utils extends java.lang.Object
{
    private static float a;

    static void <clinit>()
    {
        float varReplacer260;

        nop;

        varReplacer260 = -1.0F;

        <com.hyprmx.android.sdk.utility.Utils: float a> = varReplacer260;

        return;
    }

    private void <init>()
    {
        com.hyprmx.android.sdk.utility.Utils $r0;
        java.lang.AssertionError $r1;

        $r0 := @this: com.hyprmx.android.sdk.utility.Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>("No instances.");

        throw $r1;
    }

    private static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, $r1, $r5, varReplacer262;
        int $i0, $i1;
        java.lang.Thread $r2;
        java.lang.StackTraceElement[] $r3;
        java.lang.StackTraceElement $r4;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

        $i0 = -1;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $i1 = lengthof $r3;

        if $i1 <= 4 goto label2;

        $r4 = $r3[4];

        $r5 = virtualinvoke $r4.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r1 = virtualinvoke $r4.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $i0 = virtualinvoke $r4.<java.lang.StackTraceElement: int getLineNumber()>();

     label1:
        $r6 = newarray (java.lang.Object)[5];

        $r6[0] = $r5;

        $r6[1] = $r0;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r0 = virtualinvoke $r2.<java.lang.Thread: java.lang.String getName()>();

        $r6[2] = $r0;

        $r6[3] = $r1;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r6[4] = $r7;

        varReplacer262 = "Method %s must called on the %s Thread. But was calling on the %s thread. Class: %s, line: %d";

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer262, $r6);

        return $r0;

     label2:
        $r5 = null;

        goto label1;
    }

    public static void assertRunningOnBackgroundThread()
    {
        android.os.Looper $r0, $r1;
        boolean $z0;
        com.hyprmx.android.sdk.utility.ApiHelper $r2;
        com.hyprmx.android.sdk.utility.HyprMXErrorType $r3;
        java.lang.String $r4, varReplacer5482;

        nop;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <com.hyprmx.android.sdk.utility.ApiHelper: com.hyprmx.android.sdk.utility.ApiHelper getInstance()>();

        $r3 = <com.hyprmx.android.sdk.utility.HyprMXErrorType: com.hyprmx.android.sdk.utility.HyprMXErrorType HYPRErrorTypeSDKInternalError>;

        $r4 = staticinvoke <com.hyprmx.android.sdk.utility.HyprMXLog: java.lang.String getLoggedMessages()>();

        varReplacer5482 = "Cannot call this method on the main thread.";

        virtualinvoke $r2.<com.hyprmx.android.sdk.utility.ApiHelper: void sendClientError(com.hyprmx.android.sdk.utility.HyprMXErrorType,java.lang.String,java.lang.String)>($r3, varReplacer5482, $r4);

     label1:
        return;
    }

    public static void assertRunningOnMainThread()
    {
        com.hyprmx.android.sdk.utility.HyprMXErrorType $r0;
        android.os.Looper $r1, $r2;
        boolean $z0;
        java.lang.String $r3, $r5, varReplacer261;
        com.hyprmx.android.sdk.utility.ApiHelper $r4;

        nop;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r2 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        varReplacer261 = "Main";

        $r3 = staticinvoke <com.hyprmx.android.sdk.utility.Utils: java.lang.String a(java.lang.String)>(varReplacer261);

        $r4 = staticinvoke <com.hyprmx.android.sdk.utility.ApiHelper: com.hyprmx.android.sdk.utility.ApiHelper getInstance()>();

        $r0 = <com.hyprmx.android.sdk.utility.HyprMXErrorType: com.hyprmx.android.sdk.utility.HyprMXErrorType HYPRErrorTypeSDKInternalError>;

        $r5 = staticinvoke <com.hyprmx.android.sdk.utility.HyprMXLog: java.lang.String getLoggedMessages()>();

        virtualinvoke $r4.<com.hyprmx.android.sdk.utility.ApiHelper: void sendClientError(com.hyprmx.android.sdk.utility.HyprMXErrorType,java.lang.String,java.lang.String)>($r0, $r3, $r5);

     label1:
        return;
    }

    public static void assertRunningOnThreadName(java.lang.String)
    {
        java.lang.String $r0, $r3;
        com.hyprmx.android.sdk.utility.HyprMXErrorType $r1;
        java.lang.Thread $r2;
        boolean $z0;
        com.hyprmx.android.sdk.utility.ApiHelper $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.String getName()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r0 = staticinvoke <com.hyprmx.android.sdk.utility.Utils: java.lang.String a(java.lang.String)>($r0);

        $r4 = staticinvoke <com.hyprmx.android.sdk.utility.ApiHelper: com.hyprmx.android.sdk.utility.ApiHelper getInstance()>();

        $r1 = <com.hyprmx.android.sdk.utility.HyprMXErrorType: com.hyprmx.android.sdk.utility.HyprMXErrorType HYPRErrorTypeSDKInternalError>;

        $r3 = staticinvoke <com.hyprmx.android.sdk.utility.HyprMXLog: java.lang.String getLoggedMessages()>();

        virtualinvoke $r4.<com.hyprmx.android.sdk.utility.ApiHelper: void sendClientError(com.hyprmx.android.sdk.utility.HyprMXErrorType,java.lang.String,java.lang.String)>($r1, $r0, $r3);

     label1:
        return;
    }

    public static void assertThisShouldNeverBeCalled(java.lang.String)
    {
        java.lang.String $r0, $r4, varReplacer7290;
        com.hyprmx.android.sdk.utility.HyprMXErrorType $r1;
        com.hyprmx.android.sdk.utility.ApiHelper $r2;
        java.lang.StringBuilder $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.hyprmx.android.sdk.utility.ApiHelper: com.hyprmx.android.sdk.utility.ApiHelper getInstance()>();

        $r1 = <com.hyprmx.android.sdk.utility.HyprMXErrorType: com.hyprmx.android.sdk.utility.HyprMXErrorType HYPRErrorTypeSDKInternalError>;

        $r3 = new java.lang.StringBuilder;

        varReplacer7290 = "THIS SHOULD NEVER BE CALLED! ";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer7290);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <com.hyprmx.android.sdk.utility.HyprMXLog: java.lang.String getLoggedMessages()>();

        virtualinvoke $r2.<com.hyprmx.android.sdk.utility.ApiHelper: void sendClientError(com.hyprmx.android.sdk.utility.HyprMXErrorType,java.lang.String,java.lang.String)>($r1, $r0, $r4);

        return;
    }

    public static java.lang.String bodyToString(com.squareup.okhttp.hyprmx.RequestBody)
    {
        com.squareup.okhttp.hyprmx.RequestBody $r0;
        java.lang.String $r1, varReplacer3670;
        okio.hyprmx.Buffer $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: com.squareup.okhttp.hyprmx.RequestBody;

        $r2 = new okio.hyprmx.Buffer;

     label1:
        specialinvoke $r2.<okio.hyprmx.Buffer: void <init>()>();

        virtualinvoke $r0.<com.squareup.okhttp.hyprmx.RequestBody: void writeTo(okio.hyprmx.BufferedSink)>($r2);

        $r1 = virtualinvoke $r2.<okio.hyprmx.Buffer: java.lang.String readUtf8()>();

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        varReplacer3670 = "bodyToString: Caught exception while reading the request body.";

        return varReplacer3670;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void checkRunningOnMainThread()
    {
        android.os.Looper $r0, $r1;
        boolean $z0;
        java.lang.String $r2;
        android.os.Handler $r3;
        com.hyprmx.android.sdk.utility.Utils$1 $r4;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r2 = staticinvoke <com.hyprmx.android.sdk.utility.Utils: java.lang.String a(java.lang.String)>("Main");

        $r3 = new android.os.Handler;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r3.<android.os.Handler: void <init>(android.os.Looper)>($r0);

        $r4 = new com.hyprmx.android.sdk.utility.Utils$1;

        specialinvoke $r4.<com.hyprmx.android.sdk.utility.Utils$1: void <init>(java.lang.String)>($r2);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r4);

     label1:
        return;
    }

    public static boolean compareObjects(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        if $r0 == $r1 goto label1;

        if $r0 == null goto label2;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static java.lang.String convertToMD5(java.lang.String)
    {
        java.lang.String $r0, varReplacer7405, varReplacer7407, varReplacer7408;
        java.lang.StringBuilder $r1;
        int $i0, $i1, varReplacer7406;
        java.security.MessageDigest $r2;
        byte[] $r3;
        byte $b2;
        short $s3;
        java.lang.Exception $r4;
        null_type varReplacer7404;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer7405 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7405);

        varReplacer7407 = "UTF-8";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7407);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

     label02:
        $r1 = new java.lang.StringBuilder;

     label03:
        $i0 = lengthof $r3;

     label04:
        $i0 = $i0 * 2;

     label05:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = lengthof $r3;

     label06:
        $i1 = 0;

     label07:
        if $i1 >= $i0 goto label13;

     label08:
        $b2 = $r3[$i1];

     label09:
        $s3 = $b2 & 255;

        if $s3 >= 16 goto label11;

     label10:
        varReplacer7406 = 48;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer7406);

     label11:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label12:
        $i1 = $i1 + 1;

        goto label07;

     label13:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

     label14:
        return $r0;

     label15:
        $r4 := @caughtexception;

        varReplacer7408 = "convertToMD5";

        staticinvoke <com.hyprmx.android.sdk.utility.HyprMXLog: void e(java.lang.String,java.lang.Throwable)>(varReplacer7408, $r4);

        varReplacer7404 = null;

        return varReplacer7404;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public static java.lang.String getActivityNetworkErrorMsg(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;
        java.lang.String varReplacer4481, varReplacer4482;

        nop;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.hyprmx.android.sdk.utility.Utils: boolean isNetworkAvailable(android.content.Context)>($r0);

        if $z0 != 0 goto label1;

        varReplacer4482 = "Sorry! Without a live internet connection, you cannot view this offer.";

        return varReplacer4482;

     label1:
        varReplacer4481 = "There was an error displaying the offer.";

        return varReplacer4481;
    }

    public static long getAvailableInternalMemorySpace()
    {
        android.os.StatFs $r0;
        long $l0, $l2;
        java.io.File $r1;
        java.lang.String $r2;
        int $i1;

        $r1 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r0 = new android.os.StatFs;

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r0.<android.os.StatFs: void <init>(java.lang.String)>($r2);

        $i1 = virtualinvoke $r0.<android.os.StatFs: int getBlockSize()>();

        $l0 = (long) $i1;

        $i1 = virtualinvoke $r0.<android.os.StatFs: int getAvailableBlocks()>();

        $l2 = (long) $i1;

        $l0 = $l2 * $l0;

        return $l0;
    }

    public static java.lang.String getCurrentDateAsString()
    {
        java.util.Locale $r0;
        java.text.SimpleDateFormat $r1;
        java.util.TimeZone $r2;
        java.util.Date $r3;
        java.lang.String $r4;

        $r1 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy-MM-dd HH:mm:ss Z", $r0);

        $r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $r4 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r3);

        return $r4;
    }

    public static android.graphics.Bitmap getScaledBitmap(com.hyprmx.android.sdk.graphics.BitmapDrawables, int, android.app.Activity)
    {
        com.hyprmx.android.sdk.graphics.BitmapDrawables $r0;
        int $i0, $i1, $i2;
        android.app.Activity $r1;
        android.util.DisplayMetrics $r2;
        android.view.WindowManager $r3;
        android.view.Display $r4;
        android.graphics.Bitmap $r5;

        $r0 := @parameter0: com.hyprmx.android.sdk.graphics.BitmapDrawables;

        $i0 := @parameter1: int;

        $r1 := @parameter2: android.app.Activity;

        $r2 = new android.util.DisplayMetrics;

        specialinvoke $r2.<android.util.DisplayMetrics: void <init>()>();

        $r3 = virtualinvoke $r1.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r4 = interfaceinvoke $r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r4.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r2);

        $r5 = virtualinvoke $r0.<com.hyprmx.android.sdk.graphics.BitmapDrawables: android.graphics.Bitmap getBitmap()>();

        $i1 = $r2.<android.util.DisplayMetrics: int heightPixels>;

        $i0 = $i1 * $i0;

        $i0 = $i0 / 100;

        $i1 = virtualinvoke $r5.<android.graphics.Bitmap: int getWidth()>();

        $i1 = $i1 * $i0;

        $i2 = virtualinvoke $r5.<android.graphics.Bitmap: int getHeight()>();

        $i1 = $i1 / $i2;

        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r5, $i1, $i0, 0);

        return $r5;
    }

    public static float getTrackingProbability()
    {
        float f0;

        nop;

        f0 = <com.hyprmx.android.sdk.utility.Utils: float a>;

        return f0;
    }

    public static boolean isBuildVersionUnsupported()
    {
        int $i0, varReplacer3650, varReplacer3651;

        nop;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label1;

        varReplacer3650 = 1;

        return varReplacer3650;

     label1:
        varReplacer3651 = 0;

        return varReplacer3651;
    }

    public static boolean isMediaSupported(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        android.net.Uri $r2;
        android.media.MediaPlayer $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        $r3 = staticinvoke <android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>($r0, $r2);

        virtualinvoke $r3.<android.media.MediaPlayer: void release()>();

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isNetworkAvailable(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        boolean $z0;
        java.lang.String varReplacer4483;
        int varReplacer4484, varReplacer4485;

        nop;

        $r0 := @parameter0: android.content.Context;

        varReplacer4483 = "connectivity";

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer4483);

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label1;

        varReplacer4484 = 1;

        return varReplacer4484;

     label1:
        varReplacer4485 = 0;

        return varReplacer4485;
    }

    public static boolean readBooleanFromParcel(android.os.Parcel)
    {
        android.os.Parcel $r0;
        byte $b0;

        $r0 := @parameter0: android.os.Parcel;

        $b0 = virtualinvoke $r0.<android.os.Parcel: byte readByte()>();

        if $b0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.Object readFromParcel(android.os.Parcel, java.lang.Class)
    {
        android.os.Parcel $r0;
        java.lang.Class $r1;
        boolean $z0;
        byte $b0;
        java.lang.ClassLoader $r2;
        android.os.Parcelable $r3;
        java.lang.Object $r4;

        $r0 := @parameter0: android.os.Parcel;

        $r1 := @parameter1: java.lang.Class;

        $z0 = 1;

        $b0 = virtualinvoke $r0.<android.os.Parcel: byte readByte()>();

        if $b0 != 1 goto label2;

     label1:
        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r3 = virtualinvoke $r0.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>($r2);

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r3);

        return $r4;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return null;
    }

    public static java.lang.String readStringFromParcel(android.os.Parcel)
    {
        android.os.Parcel $r0;
        boolean $z0;
        int $i0;
        java.lang.String $r1;
        null_type varReplacer4272;

        nop;

        $r0 := @parameter0: android.os.Parcel;

        $z0 = 1;

        $i0 = virtualinvoke $r0.<android.os.Parcel: int readInt()>();

        if $i0 != 1 goto label2;

     label1:
        if $z0 == 0 goto label3;

        $r1 = virtualinvoke $r0.<android.os.Parcel: java.lang.String readString()>();

        return $r1;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        varReplacer4272 = null;

        return varReplacer4272;
    }

    public static void setTrackingProbability(int)
    {
        int $i0;
        float $f0;

        $i0 := @parameter0: int;

        $f0 = (float) $i0;

        $f0 = $f0 / 100.0F;

        <com.hyprmx.android.sdk.utility.Utils: float a> = $f0;

        return;
    }

    public static void writeBooleanToParcel(android.os.Parcel, boolean)
    {
        android.os.Parcel $r0;
        boolean $z0;
        byte $b0;

        $r0 := @parameter0: android.os.Parcel;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $z0 = 1;

     label1:
        $b0 = (byte) $z0;

        virtualinvoke $r0.<android.os.Parcel: void writeByte(byte)>($b0);

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public static void writeStringToParcel(android.os.Parcel, java.lang.String)
    {
        android.os.Parcel $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.os.Parcel;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r0.<android.os.Parcel: void writeString(java.lang.String)>($r1);

        return;
    }

    public static void writeToParcel(android.os.Parcel, android.os.Parcelable, int)
    {
        android.os.Parcel $r0;
        android.os.Parcelable $r1;
        int $i0;

        $r0 := @parameter0: android.os.Parcel;

        $r1 := @parameter1: android.os.Parcelable;

        $i0 := @parameter2: int;

        if $r1 != null goto label1;

        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(0);

        return;

     label1:
        virtualinvoke $r0.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke $r0.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r1, $i0);

        return;
    }
}
