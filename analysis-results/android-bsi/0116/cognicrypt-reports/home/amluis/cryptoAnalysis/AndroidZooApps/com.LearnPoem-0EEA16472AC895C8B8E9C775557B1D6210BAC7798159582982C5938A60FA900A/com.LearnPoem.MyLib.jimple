public class com.LearnPoem.MyLib extends java.lang.Object
{
    public static java.lang.String TAG;
    static int downloadedSize;
    private static long l;
    static java.util.ArrayList listFiles;
    static int totalSize;

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        int varReplacer689, varReplacer692;
        long varReplacer690;
        java.lang.String varReplacer691;

        nop;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.LearnPoem.MyLib: java.util.ArrayList listFiles> = $r0;

        varReplacer691 = "Hearing.mem";

        <com.LearnPoem.MyLib: java.lang.String TAG> = varReplacer691;

        varReplacer689 = 0;

        <com.LearnPoem.MyLib: int downloadedSize> = varReplacer689;

        varReplacer692 = 0;

        <com.LearnPoem.MyLib: int totalSize> = varReplacer692;

        varReplacer690 = 0L;

        <com.LearnPoem.MyLib: long l> = varReplacer690;

        return;
    }

    public void <init>()
    {
        com.LearnPoem.MyLib $r0;

        $r0 := @this: com.LearnPoem.MyLib;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void DeleteDirRecursively(java.io.File)
    {
        java.io.File $r0, $r1;
        int $i0, $i1;
        boolean $z0;
        java.io.File[] $r2;

        $r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label3;

     label2:
        virtualinvoke $r0.<java.io.File: boolean delete()>();

        return;

     label3:
        $r1 = $r2[$i1];

        staticinvoke <com.LearnPoem.MyLib: void DeleteDirRecursively(java.io.File)>($r1);

        $i1 = $i1 + 1;

        goto label1;
    }

    public static boolean checkFileInsideZip(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        net.lingala.zip4j.core.ZipFile $r3, r9;
        boolean $z0;
        net.lingala.zip4j.model.FileHeader $r4;
        net.lingala.zip4j.io.ZipInputStream $r5;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7, r10;
        net.lingala.zip4j.exception.ZipException $r8;
        java.io.IOException r11;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r9 = new net.lingala.zip4j.core.ZipFile;

        $r3 = r9;

     label01:
        specialinvoke r9.<net.lingala.zip4j.core.ZipFile: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r3.<net.lingala.zip4j.core.ZipFile: boolean isEncrypted()>();

     label02:
        if $z0 == 0 goto label04;

     label03:
        virtualinvoke $r3.<net.lingala.zip4j.core.ZipFile: void setPassword(java.lang.String)>($r1);

     label04:
        $r4 = virtualinvoke $r3.<net.lingala.zip4j.core.ZipFile: net.lingala.zip4j.model.FileHeader getFileHeader(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<net.lingala.zip4j.core.ZipFile: net.lingala.zip4j.io.ZipInputStream getInputStream(net.lingala.zip4j.model.FileHeader)>($r4);

     label05:
        staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r5);

     label06:
        return 1;

     label07:
        $r6 := @caughtexception;

        r10 = new java.lang.StringBuilder;

        $r7 = r10;

     label08:
        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("error reading file inside zip ");

     label09:
        r11 = (java.io.IOException) $r6;

     label10:
        $r0 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r0);

     label11:
        return 0;

     label12:
        $r8 := @caughtexception;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Zip extract error: ");

        $r0 = virtualinvoke $r8.<net.lingala.zip4j.exception.ZipException: java.lang.String getMessage()>();

        $r7 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r0);

        return 0;

        catch net.lingala.zip4j.exception.ZipException from label01 to label02 with label12;
        catch net.lingala.zip4j.exception.ZipException from label03 to label05 with label12;
        catch java.io.IOException from label05 to label06 with label07;
        catch net.lingala.zip4j.exception.ZipException from label05 to label06 with label12;
        catch net.lingala.zip4j.exception.ZipException from label08 to label09 with label12;
        catch net.lingala.zip4j.exception.ZipException from label10 to label11 with label12;
    }

    public static boolean checkIfFileExists(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r0 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, "checkIfFileExists = DOESNT exists");

        return 0;
    }

    public static boolean checkIfMainPackExists(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        $r3 = staticinvoke <com.LearnPoem.MyLib: java.lang.String getExpansionSaveFilePath(android.content.Context)>($r0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("main.");

        $i0 = staticinvoke <com.LearnPoem.MyLib: int getAppVersionCode(android.content.Context)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".obb");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean checkIfPatchPackExists(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        $r3 = staticinvoke <com.LearnPoem.MyLib: java.lang.String getExpansionSaveFilePath(android.content.Context)>($r0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("patch.");

        $i0 = staticinvoke <com.LearnPoem.MyLib: int getAppVersionCode(android.content.Context)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".obb");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r3);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void copyAssetFileToLocalStorage(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, varReplacer2571, varReplacer2572, varReplacer2573, varReplacer2575;
        byte[] $r3;
        java.lang.Throwable $r4, $r5;
        java.io.File $r6, r12;
        java.io.FileOutputStream $r7, r13;
        boolean $z0;
        java.io.InputStream $r8, $r10;
        android.content.res.AssetManager $r9;
        int $i0, varReplacer2574;
        java.lang.StringBuilder $r11, r14;
        java.io.IOException r15;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        varReplacer2573 = ".";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer2573);

        if $z0 != 0 goto label01;

        r12 = new java.io.File;

        $r6 = r12;

        specialinvoke r12.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label18;

        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

        return;

     label01:
        $r8 = null;

        r13 = new java.io.FileOutputStream;

        $r7 = r13;

     label02:
        specialinvoke r13.<java.io.FileOutputStream: void <init>(java.lang.String)>($r2);

        $r9 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label03:
        $r10 = virtualinvoke $r9.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label04:
        $r8 = $r10;

     label05:
        $r3 = newarray (byte)[1024];

     label06:
        $i0 = virtualinvoke $r8.<java.io.InputStream: int read(byte[])>($r3);

     label07:
        if $i0 != -1 goto label16;

     label08:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

        virtualinvoke $r7.<java.io.OutputStream: void flush()>();

        virtualinvoke $r7.<java.io.OutputStream: void close()>();

     label09:
        return;

     label10:
        $r4 := @caughtexception;

        $r1 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r14 = new java.lang.StringBuilder;

        varReplacer2575 = "copyAssetFileToLocalStorage: ";

        specialinvoke r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2575);

        r15 = (java.io.IOException) $r4;

        $r2 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>();

        $r11 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2);

        return;

     label11:
        $r5 := @caughtexception;

        $r2 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r14 = new java.lang.StringBuilder;

        $r11 = r14;

     label12:
        varReplacer2571 = "Error opening asset file (";

        specialinvoke r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2571);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2572 = "). Error: ";

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2572);

     label13:
        r15 = (java.io.IOException) $r5;

     label14:
        $r1 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r1);

     label15:
        goto label05;

     label16:
        varReplacer2574 = 0;

        virtualinvoke $r7.<java.io.OutputStream: void write(byte[],int,int)>($r3, varReplacer2574, $i0);

     label17:
        goto label06;

     label18:
        return;

        catch java.io.IOException from label02 to label03 with label10;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label12 to label13 with label10;
        catch java.io.IOException from label14 to label15 with label10;
        catch java.io.IOException from label16 to label17 with label10;
    }

    public static void copyFile(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File $r0, $r1;
        byte[] $r2;
        java.io.FileInputStream $r3;
        java.io.FileOutputStream $r4;
        int $i0;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.io.File;

        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        $r2 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 > 0 goto label2;

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

        return;

     label2:
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label1;
    }

    public static void copyFilePaths(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r1;
        byte[] $r2;
        java.io.File $r3, $r6;
        java.io.FileInputStream $r4;
        java.io.FileOutputStream $r5;
        int $i0;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r0);

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r1);

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r6);

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

        $r2 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[])>($r2);

        if $i0 > 0 goto label2;

        virtualinvoke $r4.<java.io.InputStream: void close()>();

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

        $r1 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("copyFilePaths: file [");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] copied to [");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r0);

        return;

     label2:
        virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        goto label1;
    }

    public static boolean doesFileExist(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    public static boolean downloadRangeFile(android.app.Activity, java.lang.String, java.lang.String, java.lang.String, java.lang.String, android.app.ProgressDialog)
    {
        android.app.Activity $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        android.app.ProgressDialog $r5;
        byte[] $r6;
        java.io.File $r7, $r9, r21;
        java.io.FileOutputStream $r8, r22;
        java.net.URL $r10, r19;
        java.net.URLConnection $r11;
        java.net.HttpURLConnection $r12;
        java.lang.StringBuilder $r13, r20;
        boolean $z0;
        java.io.InputStream $r14;
        int $i0, $i1;
        com.LearnPoem.MyLib$1 $r15, r23;
        java.lang.Throwable $r16, $r17;
        java.lang.Exception $r18;
        java.net.MalformedURLException r24;
        java.io.IOException r25;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $r5 := @parameter5: android.app.ProgressDialog;

        r19 = new java.net.URL;

        $r10 = r19;

     label01:
        specialinvoke r19.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r11 = virtualinvoke $r10.<java.net.URL: java.net.URLConnection openConnection()>();

     label02:
        $r12 = (java.net.HttpURLConnection) $r11;

     label03:
        r20 = new java.lang.StringBuilder;

        $r13 = r20;

     label04:
        specialinvoke r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("bytes=");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Range", $r1);

        virtualinvoke $r12.<java.net.HttpURLConnection: void connect()>();

     label05:
        $r9 = new java.io.File;

        $r7 = $r9;

     label06:
        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

     label07:
        if $z0 != 0 goto label09;

     label08:
        virtualinvoke $r7.<java.io.File: boolean mkdirs()>();

     label09:
        r21 = new java.io.File;

        $r9 = r21;

     label10:
        specialinvoke r21.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r3);

     label11:
        r22 = new java.io.FileOutputStream;

        $r8 = r22;

     label12:
        specialinvoke r22.<java.io.FileOutputStream: void <init>(java.io.File)>($r9);

        $r14 = virtualinvoke $r12.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label13:
        <com.LearnPoem.MyLib: int downloadedSize> = 0;

     label14:
        $i0 = virtualinvoke $r12.<java.net.HttpURLConnection: int getContentLength()>();

     label15:
        <com.LearnPoem.MyLib: int totalSize> = $i0;

        $r1 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r20 = new java.lang.StringBuilder;

        $r13 = r20;

     label16:
        specialinvoke r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("downloadRangeFile. totalSize = ");

     label17:
        $i0 = <com.LearnPoem.MyLib: int totalSize>;

     label18:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2);

     label19:
        if $r5 == null goto label21;

        $i0 = <com.LearnPoem.MyLib: int totalSize>;

     label20:
        virtualinvoke $r5.<android.app.ProgressDialog: void setMax(int)>($i0);

     label21:
        $r6 = newarray (byte)[1024];

     label22:
        $i0 = virtualinvoke $r14.<java.io.InputStream: int read(byte[])>($r6);

     label23:
        if $i0 > 0 goto label28;

        $r1 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r20 = new java.lang.StringBuilder;

        $r13 = r20;

     label24:
        specialinvoke r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("downloadRangeFile.DOWNLOADED ");

     label25:
        $i0 = <com.LearnPoem.MyLib: int downloadedSize>;

     label26:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2);

        virtualinvoke $r5.<android.app.ProgressDialog: void dismiss()>();

        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

     label27:
        return 1;

     label28:
        virtualinvoke $r8.<java.io.FileOutputStream: void write(byte[],int,int)>($r6, 0, $i0);

     label29:
        $i1 = <com.LearnPoem.MyLib: int downloadedSize>;

        $i0 = $i1 + $i0;

        <com.LearnPoem.MyLib: int downloadedSize> = $i0;

        if $r5 == null goto label22;

        r23 = new com.LearnPoem.MyLib$1;

        $r15 = r23;

     label30:
        specialinvoke r23.<com.LearnPoem.MyLib$1: void <init>(android.app.ProgressDialog)>($r5);

        virtualinvoke $r0.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r15);

     label31:
        goto label22;

     label32:
        $r16 := @caughtexception;

        $r1 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("downloadRangeFile.Error : MalformedURLException ");

        $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2);

        r24 = (java.net.MalformedURLException) $r16;

        virtualinvoke r24.<java.net.MalformedURLException: void printStackTrace()>();

     label33:
        return 0;

     label34:
        $r17 := @caughtexception;

        $r1 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("downloadRangeFile.Error : IOException ");

        $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2);

        r25 = (java.io.IOException) $r17;

        virtualinvoke r25.<java.io.IOException: void printStackTrace()>();

        goto label33;

     label35:
        $r18 := @caughtexception;

        $r1 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>(java.lang.String)>("downloadRangeFile.Error : Please check your internet connection ");

        $r13 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r2);

        goto label33;

        catch java.net.MalformedURLException from label01 to label02 with label32;
        catch java.net.MalformedURLException from label04 to label05 with label32;
        catch java.net.MalformedURLException from label06 to label07 with label32;
        catch java.net.MalformedURLException from label08 to label09 with label32;
        catch java.net.MalformedURLException from label10 to label11 with label32;
        catch java.net.MalformedURLException from label12 to label13 with label32;
        catch java.net.MalformedURLException from label14 to label15 with label32;
        catch java.net.MalformedURLException from label16 to label17 with label32;
        catch java.net.MalformedURLException from label18 to label19 with label32;
        catch java.net.MalformedURLException from label20 to label21 with label32;
        catch java.net.MalformedURLException from label22 to label23 with label32;
        catch java.net.MalformedURLException from label24 to label25 with label32;
        catch java.net.MalformedURLException from label26 to label27 with label32;
        catch java.net.MalformedURLException from label28 to label29 with label32;
        catch java.net.MalformedURLException from label30 to label31 with label32;
        catch java.io.IOException from label01 to label02 with label34;
        catch java.io.IOException from label04 to label05 with label34;
        catch java.io.IOException from label06 to label07 with label34;
        catch java.io.IOException from label08 to label09 with label34;
        catch java.io.IOException from label10 to label11 with label34;
        catch java.io.IOException from label12 to label13 with label34;
        catch java.io.IOException from label14 to label15 with label34;
        catch java.io.IOException from label16 to label17 with label34;
        catch java.io.IOException from label18 to label19 with label34;
        catch java.io.IOException from label20 to label21 with label34;
        catch java.io.IOException from label22 to label23 with label34;
        catch java.io.IOException from label24 to label25 with label34;
        catch java.io.IOException from label26 to label27 with label34;
        catch java.io.IOException from label28 to label29 with label34;
        catch java.io.IOException from label30 to label31 with label34;
        catch java.lang.Exception from label01 to label03 with label35;
        catch java.lang.Exception from label04 to label05 with label35;
        catch java.lang.Exception from label06 to label07 with label35;
        catch java.lang.Exception from label08 to label09 with label35;
        catch java.lang.Exception from label10 to label11 with label35;
        catch java.lang.Exception from label12 to label13 with label35;
        catch java.lang.Exception from label14 to label15 with label35;
        catch java.lang.Exception from label16 to label17 with label35;
        catch java.lang.Exception from label18 to label19 with label35;
        catch java.lang.Exception from label20 to label23 with label35;
        catch java.lang.Exception from label24 to label25 with label35;
        catch java.lang.Exception from label26 to label27 with label35;
        catch java.lang.Exception from label28 to label29 with label35;
        catch java.lang.Exception from label30 to label31 with label35;
    }

    public static int dp2px(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        float $f0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $f0 = (float) $i0;

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r2);

        $i0 = (int) $f0;

        return $i0;
    }

    public static int getAppVersionCode(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;
        int i0, varReplacer1336, varReplacer1337;
        android.content.pm.PackageManager$NameNotFoundException r5;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

     label1:
        varReplacer1336 = 0;

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, varReplacer1336);

     label2:
        i0 = $r4.<android.content.pm.PackageInfo: int versionCode>;

        return i0;

     label3:
        $r1 := @caughtexception;

        r5 = (android.content.pm.PackageManager$NameNotFoundException) $r1;

        virtualinvoke r5.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        varReplacer1337 = -1;

        return varReplacer1337;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String getAppVersionName(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, varReplacer688;
        android.content.pm.PackageInfo $r4;
        android.content.pm.PackageManager$NameNotFoundException r5;
        int varReplacer687;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

     label1:
        varReplacer687 = 0;

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, varReplacer687);

     label2:
        $r3 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r3;

     label3:
        $r1 := @caughtexception;

        r5 = (android.content.pm.PackageManager$NameNotFoundException) $r1;

        virtualinvoke r5.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        varReplacer688 = "not available";

        return varReplacer688;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String getExpansionSaveFilePath(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = new java.lang.StringBuilder;

        $r3 = <java.io.File: java.lang.String separator>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Android");

        $r3 = <java.io.File: java.lang.String separator>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("obb");

        $r3 = <java.io.File: java.lang.String separator>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.util.ArrayList getFilesListRecursive(java.io.File)
    {
        java.io.File $r0;
        java.util.ArrayList r1;

        $r0 := @parameter0: java.io.File;

        staticinvoke <com.LearnPoem.MyLib: void walk(java.io.File)>($r0);

        r1 = <com.LearnPoem.MyLib: java.util.ArrayList listFiles>;

        return r1;
    }

    public static java.lang.String getMainExpansionFileAbsPath(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.StringBuilder;

        $r2 = staticinvoke <com.LearnPoem.MyLib: java.lang.String getExpansionSaveFilePath(android.content.Context)>($r0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("main.");

        $i0 = staticinvoke <com.LearnPoem.MyLib: int getAppVersionCode(android.content.Context)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".obb");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getMp3FromZipBase64(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        net.lingala.zip4j.core.ZipFile $r3;
        boolean $z0;
        net.lingala.zip4j.model.FileHeader $r4;
        net.lingala.zip4j.io.ZipInputStream $r5;
        byte[] $r6, $r7;
        java.lang.StringBuilder $r8;
        int $i0;
        java.lang.Exception $r9, $r10;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new net.lingala.zip4j.core.ZipFile;

     label01:
        specialinvoke $r3.<net.lingala.zip4j.core.ZipFile: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r3.<net.lingala.zip4j.core.ZipFile: boolean isEncrypted()>();

     label02:
        if $z0 == 0 goto label04;

     label03:
        virtualinvoke $r3.<net.lingala.zip4j.core.ZipFile: void setPassword(java.lang.String)>($r1);

     label04:
        $r4 = virtualinvoke $r3.<net.lingala.zip4j.core.ZipFile: net.lingala.zip4j.model.FileHeader getFileHeader(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<net.lingala.zip4j.core.ZipFile: net.lingala.zip4j.io.ZipInputStream getInputStream(net.lingala.zip4j.model.FileHeader)>($r4);

     label05:
        $r6 = null;

     label06:
        $r7 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r5);

        virtualinvoke $r5.<net.lingala.zip4j.io.ZipInputStream: void close()>();

        staticinvoke <com.LearnPoem.MyLib: void start(java.lang.String)>("encode byte[] to base64");

        $r7 = staticinvoke <org.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[])>($r7);

     label07:
        $r6 = $r7;

        $r8 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("encode byte[] to base64, length=");

        $i0 = lengthof $r7;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MyLib: void stop(java.lang.String)>($r0);

     label09:
        $r0 = "data:audio/mp3;base64,";

        $r1 = new java.lang.String;

     label10:
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r6);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String concat(java.lang.String)>($r1);

     label11:
        return $r0;

     label12:
        $r9 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("error reading zipped file ");

        $r0 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r0);

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label14:
        goto label09;

     label15:
        $r10 := @caughtexception;

        $r0 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Zip extract error: ");

        $r1 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1);

        virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public static java.lang.String getPatchExpansionFileAbsPath(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.StringBuilder;

        $r2 = staticinvoke <com.LearnPoem.MyLib: java.lang.String getExpansionSaveFilePath(android.content.Context)>($r0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("patch.");

        $i0 = staticinvoke <com.LearnPoem.MyLib: int getAppVersionCode(android.content.Context)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".obb");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static void loadObjectFromFile(java.lang.String)
    {
        java.lang.String $r0;
        java.io.ObjectInputStream $r1, r15;
        java.io.FileInputStream $r2, r14;
        java.lang.Object $r3;
        com.LearnPoem.Model.AudioBrain $r4;
        java.lang.StringBuilder $r5, r16;
        java.util.TreeMap $r6;
        int $i0;
        java.lang.Integer $r7;
        com.LearnPoem.Model.Language $r8;
        com.LearnPoem.Model.Author $r9;
        com.LearnPoem.Model.Poem $r10;
        java.lang.ClassNotFoundException $r11;
        java.lang.Throwable $r12, $r13;
        java.io.FileNotFoundException r17;
        java.io.IOException r18;

        $r0 := @parameter0: java.lang.String;

        r15 = new java.io.ObjectInputStream;

        $r1 = r15;

        r14 = new java.io.FileInputStream;

        $r2 = r14;

     label01:
        specialinvoke r14.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

        specialinvoke r15.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r2);

     label02:
        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label03:
        $r4 = (com.LearnPoem.Model.AudioBrain) $r3;

        r16 = new java.lang.StringBuilder;

        $r5 = r16;

     label04:
        specialinvoke r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("l size ");

     label05:
        $r6 = $r4.<com.LearnPoem.Model.AudioBrain: java.util.TreeMap languages>;

     label06:
        $i0 = virtualinvoke $r6.<java.util.TreeMap: int size()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lang0 ");

     label07:
        $r6 = $r4.<com.LearnPoem.Model.AudioBrain: java.util.TreeMap languages>;

     label08:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

     label09:
        $r8 = (com.LearnPoem.Model.Language) $r3;

     label10:
        $r0 = virtualinvoke $r8.<com.LearnPoem.Model.Language: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r0);

     label11:
        r16 = new java.lang.StringBuilder;

        $r5 = r16;

     label12:
        specialinvoke r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("a size ");

     label13:
        $r6 = $r4.<com.LearnPoem.Model.AudioBrain: java.util.TreeMap languages>;

     label14:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

     label15:
        $r8 = (com.LearnPoem.Model.Language) $r3;

        $r6 = $r8.<com.LearnPoem.Model.Language: java.util.TreeMap authors>;

     label16:
        $i0 = virtualinvoke $r6.<java.util.TreeMap: int size()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", auth0 ");

     label17:
        $r6 = $r4.<com.LearnPoem.Model.AudioBrain: java.util.TreeMap languages>;

     label18:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

     label19:
        $r8 = (com.LearnPoem.Model.Language) $r3;

        $r6 = $r8.<com.LearnPoem.Model.Language: java.util.TreeMap authors>;

     label20:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

     label21:
        $r9 = (com.LearnPoem.Model.Author) $r3;

     label22:
        $r0 = virtualinvoke $r9.<com.LearnPoem.Model.Author: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r0);

     label23:
        r16 = new java.lang.StringBuilder;

        $r5 = r16;

     label24:
        specialinvoke r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("p size ");

     label25:
        $r6 = $r4.<com.LearnPoem.Model.AudioBrain: java.util.TreeMap languages>;

     label26:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

     label27:
        $r8 = (com.LearnPoem.Model.Language) $r3;

        $r6 = $r8.<com.LearnPoem.Model.Language: java.util.TreeMap authors>;

     label28:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

     label29:
        $r9 = (com.LearnPoem.Model.Author) $r3;

        $r6 = $r9.<com.LearnPoem.Model.Author: java.util.TreeMap poems>;

     label30:
        $i0 = virtualinvoke $r6.<java.util.TreeMap: int size()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", auth0 ");

     label31:
        $r6 = $r4.<com.LearnPoem.Model.AudioBrain: java.util.TreeMap languages>;

     label32:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

     label33:
        $r8 = (com.LearnPoem.Model.Language) $r3;

        $r6 = $r8.<com.LearnPoem.Model.Language: java.util.TreeMap authors>;

     label34:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

     label35:
        $r9 = (com.LearnPoem.Model.Author) $r3;

        $r6 = $r9.<com.LearnPoem.Model.Author: java.util.TreeMap poems>;

     label36:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = virtualinvoke $r6.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r7);

     label37:
        $r10 = (com.LearnPoem.Model.Poem) $r3;

     label38:
        $r0 = virtualinvoke $r10.<com.LearnPoem.Model.Poem: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r0);

     label39:
        virtualinvoke $r1.<java.io.ObjectInputStream: void close()>();

     label40:
        return;

     label41:
        $r11 := @caughtexception;

     label42:
        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>("class not found");

        virtualinvoke $r11.<java.lang.ClassNotFoundException: void printStackTrace()>();

     label43:
        goto label39;

     label44:
        $r12 := @caughtexception;

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>("file not found");

        r17 = (java.io.FileNotFoundException) $r12;

        virtualinvoke r17.<java.io.FileNotFoundException: void printStackTrace()>();

        return;

     label45:
        $r13 := @caughtexception;

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>("reading error");

        r18 = (java.io.IOException) $r13;

        virtualinvoke r18.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.FileNotFoundException from label01 to label02 with label44;
        catch java.io.IOException from label01 to label02 with label45;
        catch java.lang.ClassNotFoundException from label02 to label03 with label41;
        catch java.lang.ClassNotFoundException from label04 to label05 with label41;
        catch java.lang.ClassNotFoundException from label06 to label07 with label41;
        catch java.lang.ClassNotFoundException from label08 to label09 with label41;
        catch java.lang.ClassNotFoundException from label10 to label11 with label41;
        catch java.lang.ClassNotFoundException from label12 to label13 with label41;
        catch java.lang.ClassNotFoundException from label14 to label15 with label41;
        catch java.lang.ClassNotFoundException from label16 to label17 with label41;
        catch java.lang.ClassNotFoundException from label18 to label19 with label41;
        catch java.lang.ClassNotFoundException from label20 to label21 with label41;
        catch java.lang.ClassNotFoundException from label22 to label23 with label41;
        catch java.lang.ClassNotFoundException from label24 to label25 with label41;
        catch java.lang.ClassNotFoundException from label26 to label27 with label41;
        catch java.lang.ClassNotFoundException from label28 to label29 with label41;
        catch java.lang.ClassNotFoundException from label30 to label31 with label41;
        catch java.lang.ClassNotFoundException from label32 to label33 with label41;
        catch java.lang.ClassNotFoundException from label34 to label35 with label41;
        catch java.lang.ClassNotFoundException from label36 to label37 with label41;
        catch java.lang.ClassNotFoundException from label38 to label39 with label41;
        catch java.io.FileNotFoundException from label02 to label03 with label44;
        catch java.io.FileNotFoundException from label04 to label05 with label44;
        catch java.io.FileNotFoundException from label06 to label07 with label44;
        catch java.io.FileNotFoundException from label08 to label09 with label44;
        catch java.io.FileNotFoundException from label10 to label11 with label44;
        catch java.io.FileNotFoundException from label12 to label13 with label44;
        catch java.io.FileNotFoundException from label14 to label15 with label44;
        catch java.io.FileNotFoundException from label16 to label17 with label44;
        catch java.io.FileNotFoundException from label18 to label19 with label44;
        catch java.io.FileNotFoundException from label20 to label21 with label44;
        catch java.io.FileNotFoundException from label22 to label23 with label44;
        catch java.io.FileNotFoundException from label24 to label25 with label44;
        catch java.io.FileNotFoundException from label26 to label27 with label44;
        catch java.io.FileNotFoundException from label28 to label29 with label44;
        catch java.io.FileNotFoundException from label30 to label31 with label44;
        catch java.io.FileNotFoundException from label32 to label33 with label44;
        catch java.io.FileNotFoundException from label34 to label35 with label44;
        catch java.io.FileNotFoundException from label36 to label37 with label44;
        catch java.io.FileNotFoundException from label38 to label39 with label44;
        catch java.io.IOException from label02 to label03 with label45;
        catch java.io.IOException from label04 to label05 with label45;
        catch java.io.IOException from label06 to label07 with label45;
        catch java.io.IOException from label08 to label09 with label45;
        catch java.io.IOException from label10 to label11 with label45;
        catch java.io.IOException from label12 to label13 with label45;
        catch java.io.IOException from label14 to label15 with label45;
        catch java.io.IOException from label16 to label17 with label45;
        catch java.io.IOException from label18 to label19 with label45;
        catch java.io.IOException from label20 to label21 with label45;
        catch java.io.IOException from label22 to label23 with label45;
        catch java.io.IOException from label24 to label25 with label45;
        catch java.io.IOException from label26 to label27 with label45;
        catch java.io.IOException from label28 to label29 with label45;
        catch java.io.IOException from label30 to label31 with label45;
        catch java.io.IOException from label32 to label33 with label45;
        catch java.io.IOException from label34 to label35 with label45;
        catch java.io.IOException from label36 to label37 with label45;
        catch java.io.IOException from label38 to label39 with label45;
        catch java.io.FileNotFoundException from label39 to label40 with label44;
        catch java.io.FileNotFoundException from label42 to label43 with label44;
        catch java.io.IOException from label39 to label40 with label45;
        catch java.io.IOException from label42 to label43 with label45;
    }

    public static boolean readRangeBytesFromAssetFile(android.content.Context, java.lang.String, int, int, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r9;
        int $i0, $i1;
        byte[] $r3;
        java.io.FileOutputStream $r4, r12;
        java.io.InputStream $r5, $r7;
        android.content.res.AssetManager $r6;
        long $l2;
        java.lang.Throwable $r8, $r11;
        java.lang.StringBuilder $r10, r13;
        java.io.IOException r14;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 := @parameter4: java.lang.String;

        $r5 = null;

     label01:
        $r6 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label02:
        $r7 = virtualinvoke $r6.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label03:
        $r5 = $r7;

     label04:
        r12 = new java.io.FileOutputStream;

        $r4 = r12;

     label05:
        specialinvoke r12.<java.io.FileOutputStream: void <init>(java.lang.String)>($r2);

     label06:
        $r3 = newarray (byte)[$i1];

        $l2 = (long) $i0;

     label07:
        virtualinvoke $r5.<java.io.InputStream: long skip(long)>($l2);

        virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>($r3, 0, $i1);

        virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r3);

        virtualinvoke $r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label08:
        return 1;

     label09:
        $r8 := @caughtexception;

        $r9 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r13 = new java.lang.StringBuilder;

        $r10 = r13;

     label10:
        specialinvoke r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("readRangeBytesFromAssetFile(), Error opening asset file (");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Error: ");

     label11:
        r14 = (java.io.IOException) $r8;

     label12:
        $r1 = virtualinvoke r14.<java.io.IOException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r9, $r1);

     label13:
        goto label04;

     label14:
        $r11 := @caughtexception;

        $r1 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>(java.lang.String)>("readRangeBytesFromAssetFile(). Error: ");

        r14 = (java.io.IOException) $r11;

        $r2 = virtualinvoke r14.<java.io.IOException: java.lang.String getMessage()>();

        $r10 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r2);

        return 0;

        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label02 to label03 with label09;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label10 to label11 with label14;
        catch java.io.IOException from label12 to label13 with label14;
    }

    public static boolean readRangeBytesFromFile(java.lang.String, int, int, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        byte[] $r2;
        java.lang.Throwable $r3;
        java.io.FileOutputStream $r4, r7;
        java.io.RandomAccessFile $r5, r8;
        long $l2;
        java.lang.StringBuilder $r6, r9;
        java.io.IOException r10;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.String;

        r7 = new java.io.FileOutputStream;

        $r4 = r7;

     label1:
        specialinvoke r7.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

     label2:
        r8 = new java.io.RandomAccessFile;

        $r5 = r8;

     label3:
        specialinvoke r8.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r0, "r");

     label4:
        $l2 = (long) $i0;

     label5:
        virtualinvoke $r5.<java.io.RandomAccessFile: void seek(long)>($l2);

     label6:
        $r2 = newarray (byte)[$i1];

     label7:
        virtualinvoke $r5.<java.io.RandomAccessFile: int read(byte[],int,int)>($r2, 0, $i1);

        virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[])>($r2);

        virtualinvoke $r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r5.<java.io.RandomAccessFile: void close()>();

     label8:
        return 1;

     label9:
        $r3 := @caughtexception;

        $r0 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("readRangeBytesFromFile. Error: ");

        r10 = (java.io.IOException) $r3;

        $r1 = virtualinvoke r10.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1);

        return 0;

        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.io.IOException from label5 to label6 with label9;
        catch java.io.IOException from label7 to label8 with label9;
    }

    public static java.lang.String readTextFile(java.lang.String, boolean)
    {
        java.lang.String $r0, $r5;
        boolean $z0;
        java.io.ByteArrayOutputStream $r1, r10;
        java.io.File $r2, r8;
        java.io.FileInputStream $r3, r9;
        int $i0;
        java.lang.Throwable $r4, $r7;
        java.lang.StringBuilder $r6, r11;
        java.io.IOException r12;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r3 = null;

        r8 = new java.io.File;

        $r2 = r8;

        specialinvoke r8.<java.io.File: void <init>(java.lang.String)>($r0);

        r9 = new java.io.FileInputStream;

     label01:
        specialinvoke r9.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label02:
        $r3 = r9;

     label03:
        r10 = new java.io.ByteArrayOutputStream;

        $r1 = r10;

        specialinvoke r10.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $i0 = virtualinvoke $r3.<java.io.FileInputStream: int read()>();

     label05:
        if $i0 != -1 goto label10;

     label06:
        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label07:
        $r0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r0;

     label08:
        $r4 := @caughtexception;

        if $z0 == 0 goto label09;

        $r5 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error opening local file (");

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Error: ");

        r12 = (java.io.IOException) $r4;

        $r0 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r0);

        r12 = (java.io.IOException) $r4;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        goto label03;

     label09:
        return "";

     label10:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i0);

        $i0 = virtualinvoke $r3.<java.io.FileInputStream: int read()>();

     label11:
        goto label05;

     label12:
        $r7 := @caughtexception;

        r12 = (java.io.IOException) $r7;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        goto label07;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label10 to label11 with label12;
    }

    public static java.lang.String readTextFromAssetFile(android.content.Context, java.lang.String, boolean)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r7;
        boolean $z0;
        java.io.ByteArrayOutputStream $r2, r10;
        java.io.InputStream $r3, $r5;
        android.content.res.AssetManager $r4;
        int $i0;
        java.lang.Throwable $r6, $r9;
        java.lang.StringBuilder $r8, r11;
        java.io.IOException r12;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = null;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label01:
        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

     label02:
        $r3 = $r5;

     label03:
        r10 = new java.io.ByteArrayOutputStream;

        $r2 = r10;

        specialinvoke r10.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read()>();

     label05:
        if $i0 != -1 goto label10;

     label06:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label07:
        $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        return $r1;

     label08:
        $r6 := @caughtexception;

        if $z0 == 0 goto label09;

        $r7 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error opening asset file (");

        $r8 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Error: ");

        r12 = (java.io.IOException) $r6;

        $r1 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, $r1);

        r12 = (java.io.IOException) $r6;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        goto label03;

     label09:
        return "";

     label10:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(int)>($i0);

        $i0 = virtualinvoke $r3.<java.io.InputStream: int read()>();

     label11:
        goto label05;

     label12:
        $r9 := @caughtexception;

        r12 = (java.io.IOException) $r9;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        goto label07;

        catch java.io.IOException from label01 to label02 with label08;
        catch java.io.IOException from label04 to label05 with label12;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.io.IOException from label10 to label11 with label12;
    }

    public static java.lang.String readZipPwdTxtFile(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r7, varReplacer1986, varReplacer1987, varReplacer1988, varReplacer1989, varReplacer1990, varReplacer1991, varReplacer1992, varReplacer1993;
        java.lang.Exception $r3, $r11;
        net.lingala.zip4j.core.ZipFile $r4, $r5;
        java.lang.StringBuilder $r6;
        net.lingala.zip4j.model.FileHeader $r8;
        net.lingala.zip4j.io.ZipInputStream $r9;
        byte[] $r10;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        varReplacer1990 = "started readZipTxtFile";

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>(varReplacer1990);

        $r5 = null;

        $r6 = new java.lang.StringBuilder;

     label01:
        varReplacer1991 = "INSIDE UNZIP: file: ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1991);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1992 = ", pwd: ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1992);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r7);

     label02:
        $r4 = new net.lingala.zip4j.core.ZipFile;

     label03:
        specialinvoke $r4.<net.lingala.zip4j.core.ZipFile: void <init>(java.lang.String)>($r0);

     label04:
        virtualinvoke $r4.<net.lingala.zip4j.core.ZipFile: void setPassword(java.lang.String)>($r1);

        $r8 = virtualinvoke $r4.<net.lingala.zip4j.core.ZipFile: net.lingala.zip4j.model.FileHeader getFileHeader(java.lang.String)>($r2);

        $r9 = virtualinvoke $r4.<net.lingala.zip4j.core.ZipFile: net.lingala.zip4j.io.ZipInputStream getInputStream(net.lingala.zip4j.model.FileHeader)>($r8);

        $r10 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r9);

        virtualinvoke $r9.<net.lingala.zip4j.io.ZipInputStream: void close()>();

     label05:
        $r1 = new java.lang.String;

     label06:
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r10);

     label07:
        return $r1;

     label08:
        $r11 := @caughtexception;

     label09:
        $r6 = new java.lang.StringBuilder;

        varReplacer1989 = "Zip extract [p] error, trying next pOld[";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1989);

        $r1 = <com.LearnPoem.MainActivity: java.lang.String oldP>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer1987 = "]: ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1987);

        $r1 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r1);

        $r1 = <com.LearnPoem.MainActivity: java.lang.String oldP>;

     label10:
        virtualinvoke $r5.<net.lingala.zip4j.core.ZipFile: void setPassword(java.lang.String)>($r1);

        $r8 = virtualinvoke $r5.<net.lingala.zip4j.core.ZipFile: net.lingala.zip4j.model.FileHeader getFileHeader(java.lang.String)>($r2);

        $r9 = virtualinvoke $r5.<net.lingala.zip4j.core.ZipFile: net.lingala.zip4j.io.ZipInputStream getInputStream(net.lingala.zip4j.model.FileHeader)>($r8);

        $r10 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>($r9);

        virtualinvoke $r9.<net.lingala.zip4j.io.ZipInputStream: void close()>();

     label11:
        $r1 = new java.lang.String;

     label12:
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r10);

     label13:
        return $r1;

     label14:
        $r3 := @caughtexception;

        $r1 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        varReplacer1993 = "Zip extract [oldP error] ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1993);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1986 = ": ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1986);

        $r0 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r1, $r0);

        varReplacer1988 = "";

        return varReplacer1988;

     label15:
        $r11 := @caughtexception;

        $r5 = $r4;

        goto label09;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public static void removeZeroBytesInFile(java.lang.String)
    {
        java.lang.String $r0, $r5, $r7;
        byte[] $r1;
        java.lang.Throwable $r2;
        java.io.FileInputStream $r3, r10;
        java.io.FileOutputStream $r4, r11;
        boolean $z0;
        java.lang.StringBuilder $r6, r9;
        int $i0, $i1;
        byte $b2;
        java.io.File r8;
        java.io.IOException r12;

        $r0 := @parameter0: java.lang.String;

        r8 = new java.io.File;

        specialinvoke r8.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke r8.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label01;

        $r5 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("file ");

        $r6 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesnt exist.");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, $r0);

        return;

     label01:
        r10 = new java.io.FileInputStream;

        $r3 = r10;

     label02:
        specialinvoke r10.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

     label03:
        r11 = new java.io.FileOutputStream;

        $r4 = r11;

        r9 = new java.lang.StringBuilder;

        $r6 = r9;

     label04:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".zip");

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r11.<java.io.FileOutputStream: void <init>(java.lang.String)>($r5);

     label05:
        $r1 = newarray (byte)[2097152];

     label06:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r1);

        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label07:
        $r5 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r9 = new java.lang.StringBuilder;

        $r6 = r9;

     label08:
        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("copied to array, bytes=");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, $r7);

     label09:
        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

     label10:
        if $i0 >= 0 goto label21;

     label11:
        $r5 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r9 = new java.lang.StringBuilder;

        $r6 = r9;

     label12:
        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("checked, new size +4 = ");

     label13:
        $i1 = $i0 + 4;

     label14:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, $r7);

     label15:
        $i0 = $i0 + 4;

     label16:
        virtualinvoke $r4.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i0);

        virtualinvoke $r4.<java.io.OutputStream: void flush()>();

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

     label17:
        $r5 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        r9 = new java.lang.StringBuilder;

        $r6 = r9;

     label18:
        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("file created: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".zip");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, $r0);

     label19:
        return;

     label20:
        $r2 := @caughtexception;

        r12 = (java.io.IOException) $r2;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        return;

     label21:
        $b2 = $r1[$i0];

        if $b2 != 0 goto label11;

        $i0 = $i0 + -1;

        goto label10;

        catch java.io.IOException from label02 to label03 with label20;
        catch java.io.IOException from label04 to label05 with label20;
        catch java.io.IOException from label06 to label07 with label20;
        catch java.io.IOException from label08 to label09 with label20;
        catch java.io.IOException from label12 to label13 with label20;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.io.IOException from label18 to label19 with label20;
    }

    public static void saveObjectToFile(com.LearnPoem.Model.AudioBrain, java.lang.String)
    {
        com.LearnPoem.Model.AudioBrain $r0;
        java.lang.String $r1, $r5;
        java.io.ObjectOutputStream $r2, r9;
        java.io.FileOutputStream $r3, r8;
        java.lang.StringBuilder $r4, r10;
        java.lang.Throwable $r6, $r7;
        java.io.FileNotFoundException r11;
        java.io.IOException r12;

        $r0 := @parameter0: com.LearnPoem.Model.AudioBrain;

        $r1 := @parameter1: java.lang.String;

        r9 = new java.io.ObjectOutputStream;

        $r2 = r9;

        r8 = new java.io.FileOutputStream;

        $r3 = r8;

     label1:
        specialinvoke r8.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

        specialinvoke r9.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r3);

        virtualinvoke $r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0);

        virtualinvoke $r2.<java.io.ObjectOutputStream: void close()>();

     label2:
        r10 = new java.lang.StringBuilder;

        $r4 = r10;

     label3:
        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("saveObjectToFile, Object saved to file [");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r5);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error, saveObjectToFile, file [");

        $r4 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not found");

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r1);

        r11 = (java.io.FileNotFoundException) $r6;

        virtualinvoke r11.<java.io.FileNotFoundException: void printStackTrace()>();

        return;

     label6:
        $r7 := @caughtexception;

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error, saveObjectToFile, Msg: ");

        r12 = (java.io.IOException) $r7;

        $r1 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>();

        $r4 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r1);

        r12 = (java.io.IOException) $r7;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.FileNotFoundException from label1 to label2 with label5;
        catch java.io.FileNotFoundException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }

    public static void start(java.lang.String)
    {
        java.lang.String $r0, varReplacer2579, varReplacer2580;
        java.lang.StringBuilder $r1;
        long $l0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        varReplacer2579 = "Action [";

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2579);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer2580 = "] started.";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2580);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r0);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        <com.LearnPoem.MyLib: long l> = $l0;

        return;
    }

    public static void stop(java.lang.String)
    {
        java.lang.String $r0, varReplacer2576, varReplacer2577, varReplacer2578;
        long $l0, $l1;
        java.lang.StringBuilder $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        varReplacer2577 = "Action [";

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2577);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer2578 = "] elapsed: ";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2578);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = <com.LearnPoem.MyLib: long l>;

        $l0 = $l1 - $l0;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        varReplacer2576 = "ms";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2576);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r0);

        return;
    }

    public static boolean unzipPwd(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r7, varReplacer3077, varReplacer3078, varReplacer3080, varReplacer3081, varReplacer3082, varReplacer3084;
        net.lingala.zip4j.exception.ZipException $r3, $r8;
        net.lingala.zip4j.core.ZipFile $r4, $r5;
        java.lang.StringBuilder $r6;
        int varReplacer3079, varReplacer3083, varReplacer3085;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r5 = null;

        $r6 = new java.lang.StringBuilder;

     label01:
        varReplacer3080 = "INSIDE UNZIP: file: ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3080);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer3078 = ", pwd: ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3078);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r7);

     label02:
        $r4 = new net.lingala.zip4j.core.ZipFile;

     label03:
        specialinvoke $r4.<net.lingala.zip4j.core.ZipFile: void <init>(java.lang.String)>($r0);

     label04:
        virtualinvoke $r4.<net.lingala.zip4j.core.ZipFile: void setPassword(java.lang.String)>($r1);

        virtualinvoke $r4.<net.lingala.zip4j.core.ZipFile: void extractAll(java.lang.String)>($r2);

        varReplacer3081 = "unzip, extracted";

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>(varReplacer3081);

     label05:
        varReplacer3079 = 1;

        return varReplacer3079;

     label06:
        $r8 := @caughtexception;

     label07:
        $r0 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        varReplacer3084 = "Zip extract p error, trying pOld[";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3084);

        $r1 = <com.LearnPoem.MainActivity: java.lang.String oldP>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer3082 = "]: ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3082);

        $r1 = virtualinvoke $r8.<net.lingala.zip4j.exception.ZipException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1);

        $r0 = <com.LearnPoem.MainActivity: java.lang.String oldP>;

     label08:
        virtualinvoke $r5.<net.lingala.zip4j.core.ZipFile: void setPassword(java.lang.String)>($r0);

        virtualinvoke $r5.<net.lingala.zip4j.core.ZipFile: void extractAll(java.lang.String)>($r2);

     label09:
        varReplacer3083 = 1;

        return varReplacer3083;

     label10:
        $r3 := @caughtexception;

        $r0 = <com.LearnPoem.MyLib: java.lang.String TAG>;

        $r6 = new java.lang.StringBuilder;

        varReplacer3077 = "Zip extract oldP error: ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3077);

        $r1 = virtualinvoke $r3.<net.lingala.zip4j.exception.ZipException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1);

        varReplacer3085 = 0;

        return varReplacer3085;

     label11:
        $r8 := @caughtexception;

        $r5 = $r4;

        goto label07;

        catch net.lingala.zip4j.exception.ZipException from label01 to label02 with label06;
        catch net.lingala.zip4j.exception.ZipException from label03 to label04 with label06;
        catch net.lingala.zip4j.exception.ZipException from label04 to label05 with label11;
        catch net.lingala.zip4j.exception.ZipException from label08 to label09 with label10;
    }

    static void walk(java.io.File)
    {
        java.io.File $r0;
        int $i0, $i1;
        java.io.File[] $r1;
        boolean $z0;
        java.util.ArrayList $r2;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label5;

        $r0 = $r1[$i1];

        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        $r2 = <com.LearnPoem.MyLib: java.util.ArrayList listFiles>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        staticinvoke <com.LearnPoem.MyLib: void walk(java.io.File)>($r0);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r2 = <com.LearnPoem.MyLib: java.util.ArrayList listFiles>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r0);

        goto label3;

     label5:
        return;
    }

    public static void writeTextFile(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        java.io.File $r3, r6;
        java.nio.charset.Charset $r4;
        java.lang.StringBuilder $r5, r7;
        java.io.IOException r8;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r6 = new java.io.File;

        $r3 = r6;

     label1:
        specialinvoke r6.<java.io.File: void <init>(java.lang.String)>($r0);

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("utf-8");

        staticinvoke <org.apache.commons.io.FileUtils: void writeStringToFile(java.io.File,java.lang.String,java.nio.charset.Charset)>($r3, $r1, $r4);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("error in writeTextFile: ");

        r8 = (java.io.IOException) $r2;

        $r0 = virtualinvoke r8.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.LearnPoem.MainActivity: void L(java.lang.String)>($r0);

        r8 = (java.io.IOException) $r2;

        virtualinvoke r8.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
