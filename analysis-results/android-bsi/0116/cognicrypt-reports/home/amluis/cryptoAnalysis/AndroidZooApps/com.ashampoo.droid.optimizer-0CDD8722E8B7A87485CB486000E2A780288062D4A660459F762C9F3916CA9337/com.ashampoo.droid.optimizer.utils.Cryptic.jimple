public class com.ashampoo.droid.optimizer.utils.Cryptic extends java.lang.Object
{
    private static byte[] iv;
    private static byte[] key;

    static void <clinit>()
    {
        java.lang.String $r0;
        byte[] $r1;

        nop;

        $r0 = "kamineko";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.ashampoo.droid.optimizer.utils.Cryptic: byte[] key> = $r1;

        $r0 = "29021988";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.ashampoo.droid.optimizer.utils.Cryptic: byte[] iv> = $r1;

        return;
    }

    public void <init>()
    {
        com.ashampoo.droid.optimizer.utils.Cryptic $r0;

        $r0 := @this: com.ashampoo.droid.optimizer.utils.Cryptic;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String decrypt(java.lang.String)
    {
        java.lang.String $r0, $r5, varReplacer561, varReplacer564, varReplacer565;
        java.io.ByteArrayOutputStream $r1;
        java.lang.Exception $r2;
        javax.crypto.spec.IvParameterSpec $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        byte[] $r6;
        javax.crypto.Cipher $r7;
        int varReplacer562, varReplacer563;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r3 = new javax.crypto.spec.IvParameterSpec;

        $r6 = <com.ashampoo.droid.optimizer.utils.Cryptic: byte[] iv>;

     label1:
        specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6);

     label2:
        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r6 = <com.ashampoo.droid.optimizer.utils.Cryptic: byte[] key>;

     label3:
        varReplacer561 = "DES";

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer561);

        varReplacer564 = "DES/CBC/PKCS7Padding";

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer564);

        varReplacer562 = 2;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer562, $r4, $r3);

        varReplacer563 = 0;

        $r6 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer563);

     label4:
        $r1 = new java.io.ByteArrayOutputStream;

     label5:
        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r6 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[])>($r6);

        $r6 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label6:
        $r5 = new java.lang.String;

     label7:
        varReplacer565 = "UTF8";

        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r6, varReplacer565);

     label8:
        return $r5;

     label9:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        return $r0;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public static java.lang.String encrypt(java.lang.String)
    {
        java.lang.String $r0, varReplacer568, varReplacer570, varReplacer571;
        java.lang.Exception $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        byte[] $r4;
        javax.crypto.Cipher $r5;
        int varReplacer567, varReplacer569;

        nop;

        $r0 := @parameter0: java.lang.String;

        virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r4 = <com.ashampoo.droid.optimizer.utils.Cryptic: byte[] iv>;

     label1:
        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

     label2:
        $r3 = new javax.crypto.spec.SecretKeySpec;

        $r4 = <com.ashampoo.droid.optimizer.utils.Cryptic: byte[] key>;

     label3:
        varReplacer571 = "DES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer571);

        varReplacer570 = "DES/CBC/PKCS7Padding";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer570);

        varReplacer569 = 1;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer569, $r3, $r2);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        varReplacer567 = 0;

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r4, varReplacer567);

     label4:
        return $r0;

     label5:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        varReplacer568 = "";

        return varReplacer568;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
