Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 9d5e522b3f5f1b99d3101a97677bfe6e2f742689f66c9f1624c6b3179b3e8045
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: c9324f008248c2c970dbb485d485919e922bd7f99c929b778d6182bd5a8c3023
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer11350)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 2bcb75bb5544f7645a06b3e5513fd0db26b289205ae91866cbeac37c3d2063db
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.paypal.android.a.c: java.lang.String j(java.lang.String)>
		SHA-256: bdb06fcbe01c26f790651ec33b813b446f6a0d4381da50e45e7d289f446a44d9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10715)
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: d6d2a6f624e12758118157c0f516dad9bb6225858f16efca2c10262ae9789421
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7737)
		Method: <com.asperstudio.asma.social.n: void a(android.app.Activity)>
		SHA-256: b65b24d0a0e16eb0aa64bcfffa3aebaf986ccfd16930c59af366306c575c5606
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4491)
		Method: <com.paypal.android.a.e: void <init>()>
		SHA-256: 6c31eb22a76b5b5e237f81ea64e9689dbe47239d906341d4da5e3ada569fbf05
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer11347)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: a7dcade768136b56cc446a5fd3485d701283104f0d6e82d3e951280eedd18dc0
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.asperstudio.asma.model.hs: java.lang.String l(java.lang.String)>
		SHA-256: 84868eb2bd4866995fd660c5a8952bc99e68a04ad06490b0a6427cb87ea655aa
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 1bd65c7e3ef7c5880ee054dd01ba963cb9b0d277e32cad1c7526c867dab34e4b
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.asperstudio.asma.social.n: void a(android.app.Activity)>
		SHA-256: cb485ec694aa13eb358bce54a563c38bfa530e45b7918838a00bc56614c7dc28
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)
		Method: <com.paypal.android.a.c: java.lang.String j(java.lang.String)>
		SHA-256: 38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: bece1140c0577cf6f297d91e1b0ca43d0606b323d3d9a50af430d2391ba581cd
		Secure: false
	Object:
		Variable: varReplacer11350
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer11350)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 44f948b28773010956134218a990c9592d66a66f3f7b944f74192915e3699395
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11136)
		Method: <com.asperstudio.asma.model.hs: java.lang.String l(java.lang.String)>
		SHA-256: 494fda91c67c06dc7dcd446f293fe9fdbd2b422d5e77f380325b02468fc5e8ad
		Secure: false

Findings in Java Class: com.facebook.internal.Utility

	 in Method: java.lang.String hashWithAlgorithm(java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9d5e522b3f5f1b99d3101a97677bfe6e2f742689f66c9f1624c6b3179b3e8045)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9d5e522b3f5f1b99d3101a97677bfe6e2f742689f66c9f1624c6b3179b3e8045)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: com.asperstudio.asma.social.n

	 in Method: void a(android.app.Activity)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b65b24d0a0e16eb0aa64bcfffa3aebaf986ccfd16930c59af366306c575c5606)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7737)


Findings in Java Class: com.paypal.android.a.c

	 in Method: java.lang.String j(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9377, $r9)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38aead7f0a9a1e8937ef8aedb8fe9d06673ac19a591be05023f209e7be15c267)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPPadding, NoPadding}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9388)


Findings in Java Class: com.google.android.gms.ads.internal.util.client.a

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d6d2a6f624e12758118157c0f516dad9bb6225858f16efca2c10262ae9789421)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10715)


Findings in Java Class: com.asperstudio.asma.model.hs

	 in Method: java.lang.String l(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #494fda91c67c06dc7dcd446f293fe9fdbd2b422d5e77f380325b02468fc5e8ad)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11136)


Findings in Java Class: oauth.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #a7dcade768136b56cc446a5fd3485d701283104f0d6e82d3e951280eedd18dc0)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer11347)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer11350)


Findings in Java Class: com.paypal.android.a.e

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4489, r9, varReplacer4489)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4489, r9, varReplacer4489)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 15
=====================================================================