public class com.amazon.identity.auth.device.framework.AESCipher extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final javax.crypto.spec.SecretKeySpec mKeySpec;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        nop;

        $r1 = class "Lcom/amazon/identity/auth/device/framework/AESCipher;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>(byte[])
    {
        com.amazon.identity.auth.device.framework.AESCipher $r0;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        java.lang.String varReplacer7251, varReplacer7252;

        nop;

        $r0 := @this: com.amazon.identity.auth.device.framework.AESCipher;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer7252 = "encryption key was null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer7252);

        throw $r2;

     label1:
        $r3 = new javax.crypto.spec.SecretKeySpec;

        varReplacer7251 = "AES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7251);

        $r0.<com.amazon.identity.auth.device.framework.AESCipher: javax.crypto.spec.SecretKeySpec mKeySpec> = $r3;

        return;
    }

    private javax.crypto.Cipher createAESCipher(int, java.lang.String, java.security.spec.AlgorithmParameterSpec)
    {
        com.amazon.identity.auth.device.framework.AESCipher $r0;
        int $i0, varReplacer7247;
        java.lang.String $r1, varReplacer7243, varReplacer7244, varReplacer7245, varReplacer7246, varReplacer7249;
        java.security.spec.AlgorithmParameterSpec $r2;
        javax.crypto.Cipher $r3, $r4;
        javax.crypto.spec.SecretKeySpec $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9;
        null_type varReplacer7248;

        nop;

        $r0 := @this: com.amazon.identity.auth.device.framework.AESCipher;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        $r4 = null;

     label1:
        varReplacer7246 = "AES";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7246);

     label2:
        $r4 = $r3;

        $r5 = $r0.<com.amazon.identity.auth.device.framework.AESCipher: javax.crypto.spec.SecretKeySpec mKeySpec>;

     label3:
        varReplacer7247 = 2;

        varReplacer7248 = null;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7247, $r5, varReplacer7248);

     label4:
        return $r3;

     label5:
        $r6 := @caughtexception;

        $r1 = <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String TAG>;

        varReplacer7243 = "Aborting cipher creation";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer7243, $r6);

        return $r4;

     label6:
        $r7 := @caughtexception;

        $r1 = <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String TAG>;

        varReplacer7244 = "Aborting cipher creation";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer7244, $r7);

        return $r4;

     label7:
        $r8 := @caughtexception;

        $r1 = <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String TAG>;

        varReplacer7245 = "Aborting cipher creation because the key was invalid";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer7245, $r8);

        return $r4;

     label8:
        $r9 := @caughtexception;

        $r1 = <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String TAG>;

        varReplacer7249 = "Aborting cipher creation due to the occurrence of invalid algorithm parameters.";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer7249, $r9);

        return $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
        catch javax.crypto.NoSuchPaddingException from label3 to label4 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label8;
        catch java.security.InvalidAlgorithmParameterException from label3 to label4 with label8;
    }

    public static java.lang.String generateAesSecureStorageKey()
    {
        javax.crypto.KeyGenerator $r0;
        javax.crypto.SecretKey $r1;
        byte[] $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;

     label1:
        $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES");

        virtualinvoke $r0.<javax.crypto.KeyGenerator: void init(int)>(128);

        $r1 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r2 = interfaceinvoke $r1.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r3 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r2, 0);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r3 = <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String TAG>;

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r3, "Could not generate a symmetric key for algorithm AES");

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String generateAesSecureStorageKeyForDevice(com.amazon.identity.auth.device.framework.SSODeviceInfo)
    {
        com.amazon.identity.auth.device.framework.SSODeviceInfo $r0;
        javax.crypto.spec.PBEKeySpec $r1;
        java.lang.String $r2, $r3;
        javax.crypto.SecretKeyFactory $r4;
        char[] $r5;
        byte[] $r6;
        javax.crypto.SecretKey $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: com.amazon.identity.auth.device.framework.SSODeviceInfo;

        $r2 = virtualinvoke $r0.<com.amazon.identity.auth.device.framework.SSODeviceInfo: java.lang.String getDeviceSecret()>();

        if $r2 == null goto label6;

        $r3 = virtualinvoke $r0.<com.amazon.identity.auth.device.framework.SSODeviceInfo: java.lang.String getDeviceSerialNumber()>();

        if $r3 == null goto label6;

     label1:
        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("PBKDF2WithHmacSHA1");

     label2:
        $r1 = new javax.crypto.spec.PBEKeySpec;

     label3:
        $r5 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        $r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r6, 1000, 128);

        $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1);

        $r6 = interfaceinvoke $r7.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r6, 0);

     label4:
        return $r2;

     label5:
        $r8 := @caughtexception;

        $r2 = <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String TAG>;

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r2, "Could not generate a symmetric key with PBKDF2");

     label6:
        $r2 = staticinvoke <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String generateAesSecureStorageKey()>();

        return $r2;

        catch java.security.GeneralSecurityException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label5;
    }

    protected static byte[] performCipherOperation(javax.crypto.Cipher, byte[], int, int)
    {
        javax.crypto.Cipher $r0;
        byte[] $r1;
        int $i0, $i1, varReplacer7239;
        java.lang.Exception $r2;
        java.lang.String $r3, varReplacer7240;
        null_type varReplacer7241, varReplacer7242;

        nop;

        $r0 := @parameter0: javax.crypto.Cipher;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        if $r0 != null goto label1;

        varReplacer7242 = null;

        return varReplacer7242;

     label1:
        varReplacer7239 = 0;

        $r1 = virtualinvoke $r0.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r1, varReplacer7239, $i1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String TAG>;

        varReplacer7240 = "Encrypting / Decrypting failed with the given key. Aborting!";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, varReplacer7240, $r2);

        varReplacer7241 = null;

        return varReplacer7241;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public byte[] concat(byte[], byte[])
    {
        com.amazon.identity.auth.device.framework.AESCipher $r0;
        byte[] $r1, $r2, $r4;
        java.lang.Exception $r3;
        int $i0;
        java.lang.String $r5;

        $r0 := @this: com.amazon.identity.auth.device.framework.AESCipher;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

     label1:
        $i0 = lengthof $r2;

     label2:
        $i0 = $i0 + 16;

     label3:
        $r4 = newarray (byte)[$i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r4, 0, 16);

        $i0 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r4, 16, $i0);

     label4:
        return $r4;

     label5:
        $r3 := @caughtexception;

        $r5 = <com.amazon.identity.auth.device.framework.AESCipher: java.lang.String TAG>;

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Exception happended during concatenating the initialization vectors and the cipher text", $r3);

        return null;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public byte[] decryptCBCMode(byte[])
    {
        com.amazon.identity.auth.device.framework.AESCipher $r0;
        byte[] $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        java.lang.IllegalArgumentException $r3;
        javax.crypto.Cipher $r4;
        int $i0;

        $r0 := @this: com.amazon.identity.auth.device.framework.AESCipher;

        $r1 := @parameter0: byte[];

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dataToDecrypt is null");

        throw $r3;

     label1:
        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, 0, 16);

        $r4 = specialinvoke $r0.<com.amazon.identity.auth.device.framework.AESCipher: javax.crypto.Cipher createAESCipher(int,java.lang.String,java.security.spec.AlgorithmParameterSpec)>(2, "AES/CBC/PKCS7Padding", $r2);

        $i0 = lengthof $r1;

        $i0 = $i0 + -16;

        $r1 = staticinvoke <com.amazon.identity.auth.device.framework.AESCipher: byte[] performCipherOperation(javax.crypto.Cipher,byte[],int,int)>($r4, $r1, 16, $i0);

        return $r1;
    }

    public byte[] decryptECBMode(byte[])
    {
        com.amazon.identity.auth.device.framework.AESCipher $r0;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;
        javax.crypto.Cipher $r3;
        int $i0, varReplacer7235, varReplacer7236;
        java.lang.String varReplacer7234, varReplacer7237;
        null_type varReplacer7238;

        nop;

        $r0 := @this: com.amazon.identity.auth.device.framework.AESCipher;

        $r1 := @parameter0: byte[];

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer7234 = "dataToDecrypt is null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer7234);

        throw $r2;

     label1:
        varReplacer7236 = 2;

        varReplacer7237 = "AES";

        varReplacer7238 = null;

        $r3 = specialinvoke $r0.<com.amazon.identity.auth.device.framework.AESCipher: javax.crypto.Cipher createAESCipher(int,java.lang.String,java.security.spec.AlgorithmParameterSpec)>(varReplacer7236, varReplacer7237, varReplacer7238);

        $i0 = lengthof $r1;

        varReplacer7235 = 0;

        $r1 = staticinvoke <com.amazon.identity.auth.device.framework.AESCipher: byte[] performCipherOperation(javax.crypto.Cipher,byte[],int,int)>($r3, $r1, varReplacer7235, $i0);

        return $r1;
    }

    public byte[] encryptCBCMode(byte[])
    {
        com.amazon.identity.auth.device.framework.AESCipher $r0;
        byte[] $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        java.security.SecureRandom $r4;
        javax.crypto.spec.IvParameterSpec $r5;
        javax.crypto.Cipher $r6;
        int $i0;

        $r0 := @this: com.amazon.identity.auth.device.framework.AESCipher;

        $r1 := @parameter0: byte[];

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dataToEncrypt is null");

        throw $r3;

     label1:
        $r4 = new java.security.SecureRandom;

        specialinvoke $r4.<java.security.SecureRandom: void <init>()>();

        $r2 = newarray (byte)[16];

        virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r2);

        $r5 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2);

        $r6 = specialinvoke $r0.<com.amazon.identity.auth.device.framework.AESCipher: javax.crypto.Cipher createAESCipher(int,java.lang.String,java.security.spec.AlgorithmParameterSpec)>(1, "AES/CBC/PKCS7Padding", $r5);

        $i0 = lengthof $r1;

        $r1 = staticinvoke <com.amazon.identity.auth.device.framework.AESCipher: byte[] performCipherOperation(javax.crypto.Cipher,byte[],int,int)>($r6, $r1, 0, $i0);

        $r1 = virtualinvoke $r0.<com.amazon.identity.auth.device.framework.AESCipher: byte[] concat(byte[],byte[])>($r2, $r1);

        return $r1;
    }

    public byte[] encryptECBMode(byte[])
    {
        com.amazon.identity.auth.device.framework.AESCipher $r0;
        byte[] $r1;
        java.lang.IllegalArgumentException $r2;
        javax.crypto.Cipher $r3;
        int $i0;

        $r0 := @this: com.amazon.identity.auth.device.framework.AESCipher;

        $r1 := @parameter0: byte[];

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dataToEncrypt is null");

        throw $r2;

     label1:
        $r3 = specialinvoke $r0.<com.amazon.identity.auth.device.framework.AESCipher: javax.crypto.Cipher createAESCipher(int,java.lang.String,java.security.spec.AlgorithmParameterSpec)>(1, "AES", null);

        $i0 = lengthof $r1;

        $r1 = staticinvoke <com.amazon.identity.auth.device.framework.AESCipher: byte[] performCipherOperation(javax.crypto.Cipher,byte[],int,int)>($r3, $r1, 0, $i0);

        return $r1;
    }
}
