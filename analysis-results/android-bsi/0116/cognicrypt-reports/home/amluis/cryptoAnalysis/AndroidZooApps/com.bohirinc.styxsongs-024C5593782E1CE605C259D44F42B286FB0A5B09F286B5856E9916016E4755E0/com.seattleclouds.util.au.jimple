public class com.seattleclouds.util.au extends java.lang.Object
{

    public static java.lang.String a(char, int)
    {
        char $c0;
        int $i1;
        java.lang.String $r0;
        char[] $r1;

        $c0 := @parameter0: char;

        $i1 := @parameter1: int;

        $r1 = newarray (char)[$i1];

        staticinvoke <java.util.Arrays: void fill(char[],char)>($r1, $c0);

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r1);

        return $r0;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, varReplacer1501, varReplacer1502;
        int $i0, varReplacer1503;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer1501 = "/";

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer1501);

        if $i0 == -1 goto label1;

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label1:
        varReplacer1502 = "?";

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(varReplacer1502);

        if $i0 == -1 goto label2;

        varReplacer1503 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1503, $i0);

     label2:
        return $r0;
    }

    public static java.lang.String a(java.lang.String, int)
    {
        java.lang.String $r0, $r1, $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = "";

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

        return "";

     label1:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 == 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("\n");

        if $i1 == -1 goto label2;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i1 = $i1 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        goto label1;

     label2:
        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        goto label1;

     label3:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= $i0 goto label5;

        if $i0 <= 3 goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = $i0 + -2;

        $r0 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label4:
        goto label1;

     label5:
        return $r1;
    }

    public static transient java.lang.String a(java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
    {
        java.lang.String $r0, $r1, $r2;
        java.lang.String[] $r3;
        java.lang.StringBuilder $r4, $r5;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String[];

        $r4 = new java.lang.StringBuilder;

        $i0 = lengthof $r3;

        $i0 = $i0 * 50;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i0);

        if $r0 == null goto label1;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label1:
        $i0 = lengthof $r3;

        if $i0 <= 0 goto label3;

        $r0 = $r3[0];

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $i0 = 1;

     label2:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label3;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = $r3[$i0];

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        if $r1 == null goto label4;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label4:
        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static transient java.lang.String a(java.lang.String, java.lang.String[])
    {
        java.lang.String $r0;
        java.lang.String[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $r0 = staticinvoke <com.seattleclouds.util.au: java.lang.String a(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(null, null, $r0, $r1);

        return $r0;
    }

    public static boolean a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label1:
        if $r1 != null goto label2;

        return 1;

     label2:
        return 0;
    }

    public static char[] a(android.text.GetChars)
    {
        android.text.GetChars $r0;
        int $i0;
        char[] $r1;

        $r0 := @parameter0: android.text.GetChars;

        if $r0 != null goto label1;

        $r1 = newarray (char)[0];

        return $r1;

     label1:
        $i0 = interfaceinvoke $r0.<android.text.GetChars: int length()>();

        $r1 = newarray (char)[$i0];

        interfaceinvoke $r0.<android.text.GetChars: void getChars(int,int,char[],int)>(0, $i0, $r1, 0);

        return $r1;
    }

    public static boolean b(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        int varReplacer691, varReplacer692;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        varReplacer692 = 1;

        return varReplacer692;

     label2:
        varReplacer691 = 0;

        return varReplacer691;
    }

    public static boolean c(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, varReplacer1450, varReplacer1451;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = staticinvoke <android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>($r0);

        if $i0 != 0 goto label2;

     label1:
        varReplacer1450 = 1;

        return varReplacer1450;

     label2:
        varReplacer1451 = 0;

        return varReplacer1451;
    }

    public static java.lang.String d(java.lang.String)
    {
        java.lang.String $r0, varReplacer709;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        return $r0;

     label1:
        varReplacer709 = "";

        return varReplacer709;
    }

    public static java.lang.String e(java.lang.String)
    {
        int $i0, $i1, varReplacer729, varReplacer731;
        java.lang.StringBuilder $r0, r6;
        java.lang.String $r1, $r4, varReplacer730;
        java.security.MessageDigest $r2;
        byte[] $r3;
        byte $b2;
        short $s3;
        char $c4;
        java.lang.Throwable $r5;
        java.security.NoSuchAlgorithmException r7;

        nop;

        $r1 := @parameter0: java.lang.String;

     label01:
        varReplacer730 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer730);

        virtualinvoke $r2.<java.security.MessageDigest: void reset()>();

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $i0 = lengthof $r3;

        r6 = new java.lang.StringBuilder;

        $r0 = r6;

        $i1 = $i0 << 1;

     label03:
        specialinvoke r6.<java.lang.StringBuilder: void <init>(int)>($i1);

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label10;

        $b2 = $r3[$i1];

        $s3 = $b2 & 240;

        $s3 = $s3 >> 4;

     label06:
        varReplacer729 = 16;

        $c4 = staticinvoke <java.lang.Character: char forDigit(int,int)>($s3, varReplacer729);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

     label07:
        $b2 = $r3[$i1];

        $b2 = $b2 & 15;

     label08:
        varReplacer731 = 16;

        $c4 = staticinvoke <java.lang.Character: char forDigit(int,int)>($b2, varReplacer731);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

     label09:
        $i1 = $i1 + 1;

        goto label05;

     label10:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        return $r4;

     label12:
        $r5 := @caughtexception;

        r7 = (java.security.NoSuchAlgorithmException) $r5;

        virtualinvoke r7.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return $r1;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label12;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label12;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label12;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label12;
    }
}
