public final class com.appflood.e.a extends java.lang.Object
{
    private static byte[] a;

    static void <clinit>()
    {
        byte[] $r0;

        nop;

        $r0 = newarray (byte)[0];

        <com.appflood.e.a: byte[] a> = $r0;

        return;
    }

    public static java.io.InputStream a(java.net.URLConnection) throws java.lang.Exception
    {
        java.net.URLConnection $r0;
        java.io.InputStream $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.util.zip.GZIPInputStream $r4;
        java.util.zip.InflaterInputStream $r5;

        $r0 := @parameter0: java.net.URLConnection;

        $r1 = virtualinvoke $r0.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        $r2 = virtualinvoke $r0.<java.net.URLConnection: java.lang.String getContentEncoding()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("gzip");

        if $z0 == 0 goto label1;

        $r4 = new java.util.zip.GZIPInputStream;

        specialinvoke $r4.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r1);

        return $r4;

     label1:
        if $r2 == null goto label2;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("deflate");

        if $z0 == 0 goto label2;

        $r5 = new java.util.zip.InflaterInputStream;

        specialinvoke $r5.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r1);

        return $r5;

     label2:
        return $r1;
    }

    public static java.lang.String a(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r1 = staticinvoke <com.appflood.e.a: java.lang.String c(android.content.Context,java.lang.String)>($r0, $r1);

        return $r1;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, varReplacer2532, varReplacer2533, varReplacer2534;
        int $i0, $i1, $i4, varReplacer2529, varReplacer2530, varReplacer2531;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.StringBuffer $r3, r6;
        byte $b2;
        short $s3;
        java.lang.Throwable $r4, $r5;
        java.io.UnsupportedEncodingException r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label01:
        varReplacer2533 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2533);

        varReplacer2532 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2532);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        varReplacer2529 = 0;

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r2, varReplacer2529, $i1);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

     label02:
        r6 = new java.lang.StringBuffer;

        $r3 = r6;

     label03:
        specialinvoke r6.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i1 = lengthof $r2;

     label05:
        if $i0 >= $i1 goto label08;

        $b2 = $r2[$i0];

        $s3 = $b2 & 255;

        $i4 = $s3 + 256;

     label06:
        varReplacer2530 = 16;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i4, varReplacer2530);

        varReplacer2531 = 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(varReplacer2531);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        $r0 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        return $r0;

     label10:
        $r4 := @caughtexception;

        r7 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke r7.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label11:
        varReplacer2534 = "";

        return varReplacer2534;

     label12:
        $r5 := @caughtexception;

        goto label11;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label12;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label12;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label12;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label10;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label10;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label10;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
    }

    private static java.lang.String a(java.util.Map)
    {
        java.util.Map $r0;
        java.lang.StringBuilder $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.String $r6, varReplacer1053, varReplacer1054;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1054 = "=";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1054);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (java.lang.String) $r4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1053 = "\n";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1053);

        goto label1;

     label2:
        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private static java.lang.String a(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1, $r4;
        java.security.MessageDigest $r2;
        int $i0, $i1, varReplacer2547;
        byte $b2;
        short $s3;
        java.lang.String $r3, varReplacer2548, varReplacer2550;
        java.lang.Throwable $r5;
        null_type varReplacer2549;

        nop;

        $r0 := @parameter0: byte[];

     label01:
        varReplacer2550 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2550);

        virtualinvoke $r2.<java.security.MessageDigest: void reset()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r1 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label13;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

     label06:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

     label07:
        if $i1 <= 1 goto label10;

     label08:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label09:
        $i0 = $i0 + 1;

        goto label05;

     label10:
        varReplacer2547 = 48;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer2547);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label11:
        goto label09;

     label12:
        $r5 := @caughtexception;

        varReplacer2548 = "Failed to compute md5";

        staticinvoke <com.appflood.e.j: void b(java.lang.Throwable,java.lang.String)>($r5, varReplacer2548);

        varReplacer2549 = null;

        return varReplacer2549;

     label13:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        return $r3;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label12;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label12;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label12;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label12;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label12;
    }

    private static java.util.Map a(java.io.InputStream, java.util.Map)
    {
        java.io.InputStream $r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.io.BufferedReader $r3, r12;
        java.io.InputStreamReader $r4, r11;
        java.lang.String $r5, $r6, varReplacer1055, varReplacer1057, varReplacer1058;
        boolean $z0;
        int $i0, varReplacer1056, varReplacer1059;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8, r13;
        java.lang.Throwable $r9;
        java.util.HashMap r10;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.util.Map;

        if $r1 != null goto label27;

        r10 = new java.util.HashMap;

        $r2 = r10;

        specialinvoke r10.<java.util.HashMap: void <init>()>();

     label01:
        if $r0 != null goto label02;

        $r1 = (java.util.Map) $r2;

        return $r1;

     label02:
        r12 = new java.io.BufferedReader;

     label03:
        $r3 = r12;

     label04:
        r11 = new java.io.InputStreamReader;

     label05:
        $r4 = r11;

     label06:
        varReplacer1055 = "UTF-8";

        specialinvoke r11.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r0, varReplacer1055);

        specialinvoke r12.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

     label07:
        $r5 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        if $r5 == null goto label22;

     label09:
        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        varReplacer1058 = "#";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer1058);

     label10:
        if $z0 != 0 goto label07;

     label11:
        varReplacer1056 = 61;

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(varReplacer1056);

     label12:
        if $i0 == -1 goto label07;

     label13:
        varReplacer1059 = 0;

        $r5 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1059, $i0);

     label14:
        $i0 = $i0 + 1;

     label15:
        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i0);

        $r1 = (java.util.Map) $r2;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

     label16:
        goto label07;

     label17:
        $r7 := @caughtexception;

     label18:
        r13 = new java.lang.StringBuilder;

     label19:
        $r8 = r13;

     label20:
        varReplacer1057 = "Faied to load string resources: ";

        specialinvoke r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1057);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.appflood.e.j: void e(java.lang.String)>($r5);

     label21:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r3);

        $r1 = (java.util.Map) $r2;

        return $r1;

     label22:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r3);

        $r1 = (java.util.Map) $r2;

        return $r1;

     label23:
        $r9 := @caughtexception;

        $r3 = null;

     label24:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r3);

        throw $r9;

     label25:
        $r9 := @caughtexception;

        goto label24;

     label26:
        $r7 := @caughtexception;

        $r3 = null;

        goto label18;

     label27:
        $r2 = $r1;

        goto label01;

        catch java.lang.Exception from label06 to label07 with label26;
        catch java.lang.Throwable from label02 to label03 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label09 to label10 with label25;
        catch java.lang.Throwable from label11 to label12 with label25;
        catch java.lang.Throwable from label13 to label14 with label25;
        catch java.lang.Throwable from label15 to label16 with label25;
        catch java.lang.Throwable from label18 to label19 with label25;
        catch java.lang.Throwable from label20 to label21 with label25;
    }

    public static void a(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        staticinvoke <com.appflood.e.a: int b(android.content.Context,java.lang.String,java.lang.String)>($r0, $r1, $r2);

        return;
    }

    public static boolean a(java.io.Closeable)
    {
        java.io.Closeable $r0;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, varReplacer1052;
        int varReplacer1049, varReplacer1050, varReplacer1051;

        nop;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 == null goto label4;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        varReplacer1050 = 1;

        return varReplacer1050;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        varReplacer1052 = "Failed to close IO";

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1052);

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r1, $r3);

        varReplacer1049 = 0;

        return varReplacer1049;

     label4:
        varReplacer1051 = 1;

        return varReplacer1051;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean a(java.io.File, byte[])
    {
        java.io.File $r0;
        byte[] $r1;
        java.io.FileOutputStream $r2;
        java.lang.Throwable $r3, $r6;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, varReplacer1611;
        int varReplacer1608, varReplacer1609, varReplacer1610, varReplacer1612;

        nop;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: byte[];

        if $r0 == null goto label10;

        if $r1 != null goto label01;

        varReplacer1610 = 0;

        return varReplacer1610;

     label01:
        $r2 = new java.io.FileOutputStream;

        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

     label02:
        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r1);

     label03:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r2);

        varReplacer1609 = 1;

        return varReplacer1609;

     label04:
        $r3 := @caughtexception;

        $r2 = null;

     label05:
        $r4 = new java.lang.StringBuilder;

        varReplacer1611 = "failed to write bytes ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1611);

        $r5 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r3, $r5);

     label06:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r2);

        varReplacer1612 = 0;

        return varReplacer1612;

     label07:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r2);

        throw $r6;

     label08:
        $r6 := @caughtexception;

        goto label07;

     label09:
        $r3 := @caughtexception;

        goto label05;

     label10:
        varReplacer1608 = 0;

        return varReplacer1608;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label05 to label06 with label08;
    }

    public static byte[] a(java.io.File)
    {
        java.io.File $r0;
        boolean $z0;
        java.io.FileInputStream $r1;
        byte[] $r2;
        java.lang.Throwable $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, varReplacer1582;
        null_type varReplacer1581, varReplacer1583;

        nop;

        $r0 := @parameter0: java.io.File;

        if $r0 == null goto label4;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        varReplacer1583 = null;

        return varReplacer1583;

     label1:
        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        $r2 = staticinvoke <com.appflood.e.a: byte[] a(java.io.InputStream)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        varReplacer1582 = "failed to load dataFromFile ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1582);

        $r5 = virtualinvoke $r0.<java.io.File: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r3, $r5);

     label4:
        varReplacer1581 = null;

        return varReplacer1581;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static byte[] a(java.io.InputStream)
    {
        java.io.InputStream $r0;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2;
        int $i0, varReplacer1591;
        java.lang.Throwable $r3, $r4;
        java.lang.String varReplacer1590;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        if $r0 != null goto label01;

        $r2 = <com.appflood.e.a: byte[] a>;

        return $r2;

     label01:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = newarray (byte)[1024];

     label02:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r2);

     label03:
        if $i0 == -1 goto label09;

     label04:
        varReplacer1591 = 0;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, varReplacer1591, $i0);

     label05:
        goto label02;

     label06:
        $r3 := @caughtexception;

     label07:
        varReplacer1590 = "failed to load dataFromStream";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r3, varReplacer1590);

     label08:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r0);

        $r2 = <com.appflood.e.a: byte[] a>;

        return $r2;

     label09:
        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label10:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r0);

        return $r2;

     label11:
        $r4 := @caughtexception;

        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r0);

        throw $r4;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label06;
    }

    public static int b(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer2313;
        int $i0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        varReplacer2313 = "google_refer";

        $i0 = staticinvoke <com.appflood.e.a: int d(android.content.Context,java.lang.String)>($r0, varReplacer2313);

        return $i0;
    }

    private static int b(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r7, varReplacer1032, varReplacer1036, varReplacer1037, varReplacer1038, varReplacer1039, varReplacer1041, varReplacer1043, varReplacer1045, varReplacer1046, varReplacer1047, varReplacer1048;
        java.nio.channels.FileLock $r3, $r12;
        java.io.File $r4, $r5;
        java.lang.StringBuilder $r6;
        boolean $z0;
        java.util.HashMap $r8;
        java.io.FileInputStream $r9;
        java.io.FileOutputStream $r10;
        java.nio.channels.FileChannel $r11;
        java.lang.Throwable $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r22;
        byte[] $r17;
        int varReplacer1033, varReplacer1034, varReplacer1035, varReplacer1040, varReplacer1042, varReplacer1044;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = null;

        $r4 = staticinvoke <com.appflood.c.e: java.io.File e()>();

        $r5 = $r4;

        if $r4 != null goto label01;

        if $r0 == null goto label01;

        varReplacer1032 = "com_appflood_provider_file";

        $r5 = virtualinvoke $r0.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>(varReplacer1032);

     label01:
        if $r5 != null goto label02;

        $r6 = new java.lang.StringBuilder;

        varReplacer1045 = " file is null key = ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1045);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.appflood.e.j: void e(java.lang.String)>($r1);

        varReplacer1044 = 0;

        return varReplacer1044;

     label02:
        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label11;

        $r6 = new java.lang.StringBuilder;

        varReplacer1041 = "the provider file is NOT exist!! path = ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1041);

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.appflood.e.j: void a()>();

     label03:
        staticinvoke <com.appflood.e.j: void a()>();

     label04:
        if $r5 == null goto label10;

     label05:
        $r4 = virtualinvoke $r5.<java.io.File: java.io.File getParentFile()>();

     label06:
        if $r4 == null goto label10;

     label07:
        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label08:
        if $z0 != 0 goto label10;

     label09:
        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

     label10:
        virtualinvoke $r5.<java.io.File: boolean createNewFile()>();

     label11:
        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

     label12:
        $r9 = new java.io.FileInputStream;

     label13:
        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

     label14:
        staticinvoke <com.appflood.e.a: java.util.Map a(java.io.InputStream,java.util.Map)>($r9, $r8);

     label15:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r9);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

     label16:
        $r10 = new java.io.FileOutputStream;

     label17:
        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

     label18:
        $r11 = virtualinvoke $r10.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

        $r12 = virtualinvoke $r11.<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()>();

     label19:
        $r3 = $r12;

        if $r12 != null goto label31;

     label20:
        virtualinvoke $r11.<java.nio.channels.FileChannel: void close()>();

        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r10);

     label21:
        if $r12 == null goto label23;

     label22:
        virtualinvoke $r12.<java.nio.channels.FileLock: void release()>();

     label23:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r10);

        varReplacer1035 = 0;

        return varReplacer1035;

     label24:
        $r13 := @caughtexception;

        varReplacer1047 = "error in create new file";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r13, varReplacer1047);

        varReplacer1042 = 0;

        return varReplacer1042;

     label25:
        $r14 := @caughtexception;

        $r9 = null;

     label26:
        varReplacer1048 = "error in read file";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r14, varReplacer1048);

     label27:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r9);

        varReplacer1033 = 0;

        return varReplacer1033;

     label28:
        $r15 := @caughtexception;

        $r9 = null;

     label29:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r9);

        throw $r15;

     label30:
        $r16 := @caughtexception;

        varReplacer1037 = "io erro in filelock release";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r16, varReplacer1037);

        goto label23;

     label31:
        $r1 = staticinvoke <com.appflood.e.a: java.lang.String a(java.util.Map)>($r8);

        varReplacer1036 = "UTF-8";

        $r17 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1036);

        virtualinvoke $r10.<java.io.FileOutputStream: void write(byte[])>($r17);

     label32:
        if $r12 == null goto label34;

     label33:
        virtualinvoke $r12.<java.nio.channels.FileLock: void release()>();

     label34:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r10);

        varReplacer1040 = 1;

        return varReplacer1040;

     label35:
        $r18 := @caughtexception;

        varReplacer1039 = "io erro in filelock release";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r18, varReplacer1039);

        goto label34;

     label36:
        $r19 := @caughtexception;

        $r10 = null;

     label37:
        varReplacer1046 = "error in outputstream";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r19, varReplacer1046);

     label38:
        if $r3 == null goto label40;

     label39:
        virtualinvoke $r3.<java.nio.channels.FileLock: void release()>();

     label40:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r10);

        varReplacer1034 = 0;

        return varReplacer1034;

     label41:
        $r20 := @caughtexception;

        varReplacer1043 = "io erro in filelock release";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r20, varReplacer1043);

        goto label40;

     label42:
        $r21 := @caughtexception;

        $r10 = null;

     label43:
        if $r3 == null goto label45;

     label44:
        virtualinvoke $r3.<java.nio.channels.FileLock: void release()>();

     label45:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r10);

        throw $r21;

     label46:
        $r22 := @caughtexception;

        varReplacer1038 = "io erro in filelock release";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r22, varReplacer1038);

        goto label45;

     label47:
        $r21 := @caughtexception;

        goto label43;

     label48:
        $r19 := @caughtexception;

        goto label37;

     label49:
        $r15 := @caughtexception;

        goto label29;

     label50:
        $r14 := @caughtexception;

        goto label26;

        catch java.io.IOException from label03 to label04 with label24;
        catch java.io.IOException from label05 to label06 with label24;
        catch java.io.IOException from label07 to label08 with label24;
        catch java.io.IOException from label09 to label11 with label24;
        catch java.io.FileNotFoundException from label13 to label14 with label25;
        catch java.lang.Throwable from label12 to label14 with label28;
        catch java.io.FileNotFoundException from label14 to label15 with label50;
        catch java.lang.Throwable from label14 to label15 with label49;
        catch java.io.IOException from label17 to label18 with label36;
        catch java.lang.Throwable from label16 to label18 with label42;
        catch java.io.IOException from label18 to label19 with label48;
        catch java.io.IOException from label20 to label21 with label48;
        catch java.lang.Throwable from label18 to label19 with label47;
        catch java.lang.Throwable from label20 to label21 with label47;
        catch java.io.IOException from label22 to label23 with label30;
        catch java.lang.Throwable from label26 to label27 with label49;
        catch java.io.IOException from label31 to label32 with label48;
        catch java.lang.Throwable from label31 to label32 with label47;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.lang.Throwable from label37 to label38 with label47;
        catch java.io.IOException from label39 to label40 with label41;
        catch java.io.IOException from label44 to label45 with label46;
    }

    public static java.lang.String b(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.appflood.e.j: byte[] b(java.lang.String)>($r0);

        $r0 = staticinvoke <com.appflood.e.a: java.lang.String a(byte[])>($r1);

        return $r0;
    }

    private static java.lang.String c(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer1592, varReplacer1593, varReplacer1594, varReplacer1595, varReplacer1596, varReplacer1597, varReplacer1598;
        java.io.File $r2, $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;
        java.io.FileInputStream $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.appflood.c.e: java.io.File e()>();

        $r3 = $r2;

        if $r2 != null goto label01;

        if $r0 == null goto label01;

        varReplacer1598 = "com_appflood_provider_file";

        $r3 = virtualinvoke $r0.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>(varReplacer1598);

     label01:
        if $r3 != null goto label02;

        $r4 = new java.lang.StringBuilder;

        varReplacer1595 = " file is null key = ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1595);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.appflood.e.j: void e(java.lang.String)>($r1);

        varReplacer1596 = "";

        return varReplacer1596;

     label02:
        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        varReplacer1592 = "";

        return varReplacer1592;

     label03:
        $r5 = new java.io.FileInputStream;

     label04:
        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

     label05:
        $r6 = new java.util.HashMap;

     label06:
        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        staticinvoke <com.appflood.e.a: java.util.Map a(java.io.InputStream,java.util.Map)>($r5, $r6);

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

     label07:
        if $z0 == 0 goto label14;

     label08:
        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

     label09:
        $r1 = (java.lang.String) $r7;

     label10:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label11:
        return $r1;

     label12:
        $r8 := @caughtexception;

     label13:
        varReplacer1597 = "error in read file";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r8, varReplacer1597);

        return $r1;

     label14:
        varReplacer1593 = "";

        return varReplacer1593;

     label15:
        $r9 := @caughtexception;

        $r1 = "";

        $r10 = $r9;

     label16:
        varReplacer1594 = "error in inputstrame";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r10, varReplacer1594);

        return $r1;

     label17:
        $r10 := @caughtexception;

        goto label16;

     label18:
        $r11 := @caughtexception;

        $r1 = "";

        $r8 = $r11;

        goto label13;

        catch java.io.FileNotFoundException from label04 to label05 with label18;
        catch java.io.FileNotFoundException from label06 to label07 with label18;
        catch java.io.FileNotFoundException from label08 to label09 with label18;
        catch java.io.IOException from label04 to label05 with label15;
        catch java.io.IOException from label06 to label07 with label15;
        catch java.io.IOException from label08 to label09 with label15;
        catch java.io.FileNotFoundException from label10 to label11 with label12;
        catch java.io.IOException from label10 to label11 with label17;
    }

    private static int d(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer2314, varReplacer2316, varReplacer2317, varReplacer2320, varReplacer2323, varReplacer2324, varReplacer2325, varReplacer2326, varReplacer2328, varReplacer2329, varReplacer2330, varReplacer2332, varReplacer2333;
        java.nio.channels.FileLock $r2, $r10;
        java.io.File $r3, $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;
        java.util.HashMap $r6;
        java.io.FileInputStream $r7;
        java.io.FileOutputStream $r8;
        java.nio.channels.FileChannel $r9;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20;
        byte[] $r15;
        int varReplacer2315, varReplacer2318, varReplacer2319, varReplacer2321, varReplacer2322, varReplacer2327, varReplacer2331;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = null;

        $r3 = staticinvoke <com.appflood.c.e: java.io.File e()>();

        $r4 = $r3;

        if $r3 != null goto label01;

        if $r0 == null goto label01;

        varReplacer2330 = "com_appflood_provider_file";

        $r4 = virtualinvoke $r0.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>(varReplacer2330);

     label01:
        if $r4 != null goto label02;

        $r5 = new java.lang.StringBuilder;

        varReplacer2326 = " file is null key = ";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2326);

        varReplacer2332 = "google_refer";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2332);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.appflood.e.j: void e(java.lang.String)>($r1);

        varReplacer2322 = 0;

        return varReplacer2322;

     label02:
        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label04;

     label03:
        staticinvoke <com.appflood.e.j: void a()>();

        virtualinvoke $r4.<java.io.File: boolean createNewFile()>();

     label04:
        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

     label05:
        $r7 = new java.io.FileInputStream;

     label06:
        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r4);

     label07:
        staticinvoke <com.appflood.e.a: java.util.Map a(java.io.InputStream,java.util.Map)>($r7, $r6);

     label08:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r7);

        varReplacer2333 = "google_refer";

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(varReplacer2333);

        if $z0 == 0 goto label23;

        varReplacer2323 = "google_refer";

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(varReplacer2323);

     label09:
        $r8 = new java.io.FileOutputStream;

     label10:
        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

     label11:
        $r9 = virtualinvoke $r8.<java.io.FileOutputStream: java.nio.channels.FileChannel getChannel()>();

        $r10 = virtualinvoke $r9.<java.nio.channels.FileChannel: java.nio.channels.FileLock tryLock()>();

     label12:
        $r2 = $r10;

        if $r10 != null goto label25;

     label13:
        virtualinvoke $r9.<java.nio.channels.FileChannel: void close()>();

        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r8);

     label14:
        if $r10 == null goto label16;

     label15:
        virtualinvoke $r10.<java.nio.channels.FileLock: void release()>();

     label16:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r8);

        varReplacer2315 = 0;

        return varReplacer2315;

     label17:
        $r11 := @caughtexception;

        varReplacer2324 = "error in create new file";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r11, varReplacer2324);

        varReplacer2319 = 0;

        return varReplacer2319;

     label18:
        $r12 := @caughtexception;

        $r7 = null;

     label19:
        varReplacer2317 = "error in read file";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r12, varReplacer2317);

     label20:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r7);

        varReplacer2331 = 0;

        return varReplacer2331;

     label21:
        $r13 := @caughtexception;

        $r7 = null;

     label22:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r7);

        throw $r13;

     label23:
        varReplacer2327 = -1;

        return varReplacer2327;

     label24:
        $r14 := @caughtexception;

        varReplacer2316 = "io erro in filelock release";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r14, varReplacer2316);

        goto label16;

     label25:
        $r1 = staticinvoke <com.appflood.e.a: java.lang.String a(java.util.Map)>($r6);

        varReplacer2320 = "UTF-8";

        $r15 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2320);

        virtualinvoke $r8.<java.io.FileOutputStream: void write(byte[])>($r15);

     label26:
        if $r10 == null goto label28;

     label27:
        virtualinvoke $r10.<java.nio.channels.FileLock: void release()>();

     label28:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r8);

        varReplacer2321 = 1;

        return varReplacer2321;

     label29:
        $r16 := @caughtexception;

        varReplacer2329 = "io erro in filelock release";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r16, varReplacer2329);

        goto label28;

     label30:
        $r17 := @caughtexception;

        $r8 = null;

     label31:
        varReplacer2325 = "error in outputstream";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r17, varReplacer2325);

     label32:
        if $r2 == null goto label34;

     label33:
        virtualinvoke $r2.<java.nio.channels.FileLock: void release()>();

     label34:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r8);

        varReplacer2318 = 0;

        return varReplacer2318;

     label35:
        $r18 := @caughtexception;

        varReplacer2328 = "io erro in filelock release";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r18, varReplacer2328);

        goto label34;

     label36:
        $r19 := @caughtexception;

        $r8 = null;

     label37:
        if $r2 == null goto label39;

     label38:
        virtualinvoke $r2.<java.nio.channels.FileLock: void release()>();

     label39:
        staticinvoke <com.appflood.e.a: boolean a(java.io.Closeable)>($r8);

        throw $r19;

     label40:
        $r20 := @caughtexception;

        varReplacer2314 = "io erro in filelock release";

        staticinvoke <com.appflood.e.j: void a(java.lang.Throwable,java.lang.String)>($r20, varReplacer2314);

        goto label39;

     label41:
        $r19 := @caughtexception;

        goto label37;

     label42:
        $r17 := @caughtexception;

        goto label31;

     label43:
        $r13 := @caughtexception;

        goto label22;

     label44:
        $r12 := @caughtexception;

        goto label19;

        catch java.io.IOException from label03 to label04 with label17;
        catch java.io.FileNotFoundException from label06 to label07 with label18;
        catch java.lang.Throwable from label05 to label07 with label21;
        catch java.io.FileNotFoundException from label07 to label08 with label44;
        catch java.lang.Throwable from label07 to label08 with label43;
        catch java.io.IOException from label10 to label11 with label30;
        catch java.lang.Throwable from label09 to label11 with label36;
        catch java.io.IOException from label11 to label12 with label42;
        catch java.io.IOException from label13 to label14 with label42;
        catch java.lang.Throwable from label11 to label12 with label41;
        catch java.lang.Throwable from label13 to label14 with label41;
        catch java.io.IOException from label15 to label16 with label24;
        catch java.lang.Throwable from label19 to label20 with label43;
        catch java.io.IOException from label25 to label26 with label42;
        catch java.lang.Throwable from label25 to label26 with label41;
        catch java.io.IOException from label27 to label28 with label29;
        catch java.lang.Throwable from label31 to label32 with label41;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.io.IOException from label38 to label39 with label40;
    }
}
