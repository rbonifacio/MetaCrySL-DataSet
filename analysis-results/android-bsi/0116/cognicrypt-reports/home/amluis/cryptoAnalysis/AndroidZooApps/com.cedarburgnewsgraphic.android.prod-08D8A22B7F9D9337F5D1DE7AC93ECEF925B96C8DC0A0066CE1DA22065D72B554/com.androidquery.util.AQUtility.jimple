public class com.androidquery.util.AQUtility extends java.lang.Object
{
    private static final int IO_BUFFER_SIZE;
    private static java.io.File cacheDir;
    private static android.content.Context context;
    private static boolean debug;
    private static java.lang.Thread$UncaughtExceptionHandler eh;
    private static android.os.Handler handler;
    private static java.io.File pcacheDir;
    private static java.util.concurrent.ScheduledExecutorService storeExe;
    private static java.util.Map times;
    private static java.lang.Object wait;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        int varReplacer744;

        nop;

        varReplacer744 = 0;

        <com.androidquery.util.AQUtility: boolean debug> = varReplacer744;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.androidquery.util.AQUtility: java.util.Map times> = $r0;

        return;
    }

    public void <init>()
    {
        com.androidquery.util.AQUtility $r0;

        $r0 := @this: com.androidquery.util.AQUtility;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void apply(android.content.SharedPreferences$Editor)
    {
        android.content.SharedPreferences$Editor $r0;
        int $i0;

        $r0 := @parameter0: android.content.SharedPreferences$Editor;

        $i0 = <com.androidquery.AQuery: int SDK_INT>;

        if $i0 < 9 goto label1;

        staticinvoke <com.androidquery.util.AQUtility: java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Object[])>($r0, "apply", 0, 1, null, null);

        return;

     label1:
        interfaceinvoke $r0.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static void cleanCache(java.io.File, long, long)
    {
        java.io.File $r0;
        long $l0, $l1;
        java.lang.Exception $r1;
        java.io.File[] $r2;
        com.androidquery.util.Common $r3;
        boolean $z0;

        $r0 := @parameter0: java.io.File;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

     label01:
        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

     label02:
        if $r2 != null goto label03;

        return;

     label03:
        $r3 = new com.androidquery.util.Common;

     label04:
        specialinvoke $r3.<com.androidquery.util.Common: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r2, $r3);

        $z0 = staticinvoke <com.androidquery.util.AQUtility: boolean testCleanNeeded(java.io.File[],long)>($r2, $l0);

     label05:
        if $z0 == 0 goto label07;

     label06:
        staticinvoke <com.androidquery.util.AQUtility: void cleanCache(java.io.File[],long)>($r2, $l1);

     label07:
        $r0 = staticinvoke <com.androidquery.util.AQUtility: java.io.File getTempDir()>();

     label08:
        if $r0 == null goto label14;

     label09:
        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

     label10:
        if $z0 == 0 goto label14;

     label11:
        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        staticinvoke <com.androidquery.util.AQUtility: void cleanCache(java.io.File[],long)>($r2, 0L);

     label12:
        return;

     label13:
        $r1 := @caughtexception;

        staticinvoke <com.androidquery.util.AQUtility: void report(java.lang.Throwable)>($r1);

     label14:
        return;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    private static void cleanCache(java.io.File[], long)
    {
        java.io.File[] $r0;
        long $l0, $l1, $l5;
        java.io.File $r1;
        int $i2, $i3, $i4;
        boolean $z0;
        byte $b6;
        java.lang.Integer $r2;

        $r0 := @parameter0: java.io.File[];

        $l0 := @parameter1: long;

        $l1 = 0L;

        $i2 = 0;

        $i3 = 0;

     label1:
        $i4 = lengthof $r0;

        if $i3 >= $i4 goto label4;

        $r1 = $r0[$i3];

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label2;

        $l5 = virtualinvoke $r1.<java.io.File: long length()>();

        $l1 = $l1 + $l5;

        $b6 = $l1 cmp $l0;

        if $b6 >= 0 goto label3;

     label2:
        $i3 = $i3 + 1;

        goto label1;

     label3:
        virtualinvoke $r1.<java.io.File: boolean delete()>();

        $i2 = $i2 + 1;

        goto label2;

     label4:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        staticinvoke <com.androidquery.util.AQUtility: void debug(java.lang.Object,java.lang.Object)>("deleted", $r2);

        return;
    }

    public static void cleanCacheAsync(android.content.Context)
    {
        android.content.Context $r0;

        $r0 := @parameter0: android.content.Context;

        staticinvoke <com.androidquery.util.AQUtility: void cleanCacheAsync(android.content.Context,long,long)>($r0, 3000000L, 2000000L);

        return;
    }

    public static void cleanCacheAsync(android.content.Context, long, long)
    {
        android.content.Context $r0;
        long $l0, $l1;
        java.lang.Exception $r1;
        java.io.File $r2;
        com.androidquery.util.Common $r3;
        java.lang.Object[] $r4;
        java.lang.Long $r5;
        java.util.concurrent.ScheduledExecutorService $r6;
        java.util.concurrent.TimeUnit $r7;

        $r0 := @parameter0: android.content.Context;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

     label1:
        $r2 = staticinvoke <com.androidquery.util.AQUtility: java.io.File getCacheDir(android.content.Context)>($r0);

     label2:
        $r3 = new com.androidquery.util.Common;

     label3:
        specialinvoke $r3.<com.androidquery.util.Common: void <init>()>();

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = $r2;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r4[1] = $r5;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4[2] = $r5;

        $r3 = virtualinvoke $r3.<com.androidquery.util.Common: com.androidquery.util.Common method(int,java.lang.Object[])>(2, $r4);

        $r6 = staticinvoke <com.androidquery.util.AQUtility: java.util.concurrent.ScheduledExecutorService getFileStoreExecutor()>();

     label4:
        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

     label5:
        interfaceinvoke $r6.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r3, 0L, $r7);

     label6:
        return;

     label7:
        $r1 := @caughtexception;

        staticinvoke <com.androidquery.util.AQUtility: void report(java.lang.Throwable)>($r1);

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static void close(java.io.Closeable)
    {
        java.io.Closeable $r0;
        java.lang.Exception $r1;

        nop;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 == null goto label4;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        int varReplacer926;
        null_type varReplacer927;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        varReplacer926 = 0;

        varReplacer927 = null;

        staticinvoke <com.androidquery.util.AQUtility: void copy(java.io.InputStream,java.io.OutputStream,int,com.androidquery.util.Progress)>($r0, $r1, varReplacer926, varReplacer927);

        return;
    }

    public static void copy(java.io.InputStream, java.io.OutputStream, int, com.androidquery.util.Progress) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        int $i0, varReplacer928;
        com.androidquery.util.Progress $r2;
        byte[] $r3;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        $i0 := @parameter2: int;

        $r2 := @parameter3: com.androidquery.util.Progress;

        if $r2 == null goto label1;

        virtualinvoke $r2.<com.androidquery.util.Progress: void reset()>();

        virtualinvoke $r2.<com.androidquery.util.Progress: void setBytes(int)>($i0);

     label1:
        $r3 = newarray (byte)[4096];

     label2:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r3);

        if $i0 == -1 goto label3;

        varReplacer928 = 0;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, varReplacer928, $i0);

        if $r2 == null goto label2;

        virtualinvoke $r2.<com.androidquery.util.Progress: void increment(int)>($i0);

        goto label2;

     label3:
        if $r2 == null goto label4;

        virtualinvoke $r2.<com.androidquery.util.Progress: void done()>();

     label4:
        return;
    }

    public static void debug(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, varReplacer856, varReplacer857;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $z0 = <com.androidquery.util.AQUtility: boolean debug>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        varReplacer856 = "";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer856);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer857 = "AQuery";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer857, $r2);

     label1:
        return;
    }

    public static void debug(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, varReplacer747, varReplacer748;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $z0 = <com.androidquery.util.AQUtility: boolean debug>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        varReplacer748 = ":";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer748);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer747 = "AQuery";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer747, $r3);

     label1:
        return;
    }

    public static void debug(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.lang.String $r1, varReplacer786;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.lang.Throwable;

        $z0 = <com.androidquery.util.AQUtility: boolean debug>;

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r0);

        varReplacer786 = "AQuery";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer786, $r1);

     label1:
        return;
    }

    public static void debugNotify()
    {
        java.lang.Object $r0, $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        nop;

        $z0 = <com.androidquery.util.AQUtility: boolean debug>;

        if $z0 == 0 goto label6;

        $r0 = <com.androidquery.util.AQUtility: java.lang.Object wait>;

        if $r0 != null goto label1;

        return;

     label1:
        $r0 = <com.androidquery.util.AQUtility: java.lang.Object wait>;

        entermonitor $r0;

     label2:
        $r1 = <com.androidquery.util.AQUtility: java.lang.Object wait>;

        virtualinvoke $r1.<java.lang.Object: void notifyAll()>();

        exitmonitor $r0;

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        exitmonitor $r0;

     label5:
        throw $r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void debugWait(long)
    {
        long $l0;
        java.lang.Throwable $r0, $r3;
        java.lang.Object $r1, $r2;
        boolean $z0;
        java.lang.InterruptedException r4;

        $l0 := @parameter0: long;

        $z0 = <com.androidquery.util.AQUtility: boolean debug>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r1 = <com.androidquery.util.AQUtility: java.lang.Object wait>;

        if $r1 != null goto label02;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.androidquery.util.AQUtility: java.lang.Object wait> = $r2;

     label02:
        $r1 = <com.androidquery.util.AQUtility: java.lang.Object wait>;

        entermonitor $r1;

     label03:
        $r2 = <com.androidquery.util.AQUtility: java.lang.Object wait>;

     label04:
        virtualinvoke $r2.<java.lang.Object: void wait(long)>($l0);

     label05:
        exitmonitor $r1;

     label06:
        return;

     label07:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label08:
        throw $r3;

     label09:
        $r0 := @caughtexception;

     label10:
        r4 = (java.lang.InterruptedException) $r0;

        virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();

     label11:
        goto label05;

        catch java.lang.InterruptedException from label04 to label05 with label09;
        catch java.lang.Throwable from label03 to label05 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Throwable from label10 to label11 with label07;
    }

    public static int dip2pixel(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0;
        int $i0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, $f0, $r2);

        $i0 = (int) $f0;

        return $i0;
    }

    public static void ensureUIThread()
    {
        boolean $z0;
        java.lang.IllegalStateException $r0;

        $z0 = staticinvoke <com.androidquery.util.AQUtility: boolean isUIThread()>();

        if $z0 != 0 goto label1;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Not UI Thread");

        staticinvoke <com.androidquery.util.AQUtility: void report(java.lang.Throwable)>($r0);

     label1:
        return;
    }

    public static java.io.File getCacheDir(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1, $r2;
        java.lang.String varReplacer774;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.androidquery.util.AQUtility: java.io.File cacheDir>;

        if $r1 != null goto label1;

        $r2 = new java.io.File;

        $r1 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        varReplacer774 = "aquery";

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, varReplacer774);

        <com.androidquery.util.AQUtility: java.io.File cacheDir> = $r2;

        $r1 = <com.androidquery.util.AQUtility: java.io.File cacheDir>;

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

     label1:
        $r1 = <com.androidquery.util.AQUtility: java.io.File cacheDir>;

        return $r1;
    }

    public static java.io.File getCacheDir(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        java.io.File $r1, $r2;
        java.lang.String varReplacer766;

        nop;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        if $i0 != 1 goto label2;

        $r1 = <com.androidquery.util.AQUtility: java.io.File pcacheDir>;

        if $r1 == null goto label1;

        $r1 = <com.androidquery.util.AQUtility: java.io.File pcacheDir>;

        return $r1;

     label1:
        $r1 = staticinvoke <com.androidquery.util.AQUtility: java.io.File getCacheDir(android.content.Context)>($r0);

        $r2 = new java.io.File;

        varReplacer766 = "persistent";

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, varReplacer766);

        <com.androidquery.util.AQUtility: java.io.File pcacheDir> = $r2;

        $r1 = <com.androidquery.util.AQUtility: java.io.File pcacheDir>;

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        $r1 = <com.androidquery.util.AQUtility: java.io.File pcacheDir>;

        return $r1;

     label2:
        $r1 = staticinvoke <com.androidquery.util.AQUtility: java.io.File getCacheDir(android.content.Context)>($r0);

        return $r1;
    }

    public static java.io.File getCacheFile(java.io.File, java.lang.String)
    {
        java.io.File $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        null_type varReplacer810;

        nop;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        varReplacer810 = null;

        return varReplacer810;

     label1:
        $r2 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>($r1);

        return $r0;

     label2:
        $r1 = staticinvoke <com.androidquery.util.AQUtility: java.lang.String getCacheFileName(java.lang.String)>($r1);

        $r0 = staticinvoke <com.androidquery.util.AQUtility: java.io.File makeCacheFile(java.io.File,java.lang.String)>($r0, $r1);

        return $r0;
    }

    private static java.lang.String getCacheFileName(java.lang.String)
    {
        java.lang.String $r0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.androidquery.util.AQUtility: java.lang.String getMD5Hex(java.lang.String)>($r0);

        return $r0;
    }

    public static android.content.Context getContext()
    {
        android.content.Context $r0;
        java.lang.IllegalStateException $r1;

        $r0 = <com.androidquery.util.AQUtility: android.content.Context context>;

        if $r0 != null goto label1;

        staticinvoke <com.androidquery.util.AQUtility: void warn(java.lang.Object,java.lang.Object)>("warn", "getContext with null");

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        staticinvoke <com.androidquery.util.AQUtility: void debug(java.lang.Throwable)>($r1);

     label1:
        $r0 = <com.androidquery.util.AQUtility: android.content.Context context>;

        return $r0;
    }

    public static java.io.File getExistedCacheByUrl(java.io.File, java.lang.String)
    {
        java.io.File $r0;
        java.lang.String $r1;
        boolean $z0;
        null_type varReplacer997;

        nop;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <com.androidquery.util.AQUtility: java.io.File getCacheFile(java.io.File,java.lang.String)>($r0, $r1);

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

     label1:
        varReplacer997 = null;

        return varReplacer997;

     label2:
        return $r0;
    }

    public static java.io.File getExistedCacheByUrlSetAccess(java.io.File, java.lang.String)
    {
        java.io.File $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <com.androidquery.util.AQUtility: java.io.File getExistedCacheByUrl(java.io.File,java.lang.String)>($r0, $r1);

        if $r0 == null goto label1;

        staticinvoke <com.androidquery.util.AQUtility: void lastAccess(java.io.File)>($r0);

     label1:
        return $r0;
    }

    private static java.util.concurrent.ScheduledExecutorService getFileStoreExecutor()
    {
        java.util.concurrent.ScheduledExecutorService $r0;

        nop;

        $r0 = <com.androidquery.util.AQUtility: java.util.concurrent.ScheduledExecutorService storeExe>;

        if $r0 != null goto label1;

        $r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ScheduledExecutorService newSingleThreadScheduledExecutor()>();

        <com.androidquery.util.AQUtility: java.util.concurrent.ScheduledExecutorService storeExe> = $r0;

     label1:
        $r0 = <com.androidquery.util.AQUtility: java.util.concurrent.ScheduledExecutorService storeExe>;

        return $r0;
    }

    public static android.os.Handler getHandler()
    {
        android.os.Looper $r0;
        android.os.Handler $r1;

        nop;

        $r1 = <com.androidquery.util.AQUtility: android.os.Handler handler>;

        if $r1 != null goto label1;

        $r1 = new android.os.Handler;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r1.<android.os.Handler: void <init>(android.os.Looper)>($r0);

        <com.androidquery.util.AQUtility: android.os.Handler handler> = $r1;

     label1:
        $r1 = <com.androidquery.util.AQUtility: android.os.Handler handler>;

        return $r1;
    }

    private static byte[] getMD5(byte[])
    {
        byte[] $r0;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        java.lang.String varReplacer814;
        null_type varReplacer815;

        nop;

        $r0 := @parameter0: byte[];

     label1:
        varReplacer814 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer814);

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <com.androidquery.util.AQUtility: void report(java.lang.Throwable)>($r1);

        varReplacer815 = null;

        return varReplacer815;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private static java.lang.String getMD5Hex(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;
        java.math.BigInteger $r2;
        int varReplacer813;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>($r1);

        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(byte[])>($r1);

        $r2 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger abs()>();

        varReplacer813 = 36;

        $r0 = virtualinvoke $r2.<java.math.BigInteger: java.lang.String toString(int)>(varReplacer813);

        return $r0;
    }

    public static java.io.File getTempDir()
    {
        java.io.File $r0, $r1;
        boolean $z0;
        null_type varReplacer972;
        java.lang.String varReplacer973;

        nop;

        $r0 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r1 = new java.io.File;

        varReplacer973 = "aquery/temp";

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, varReplacer973);

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r1.<java.io.File: boolean canWrite()>();

        if $z0 != 0 goto label2;

     label1:
        varReplacer972 = null;

        return varReplacer972;

     label2:
        return $r1;
    }

    public static transient java.lang.Object invokeHandler(java.lang.Object, java.lang.String, boolean, boolean, java.lang.Class[], java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        boolean $z0, $z1;
        java.lang.Class[] $r2, $r3;
        java.lang.Object[] $r4;
        java.lang.Exception $r5;
        int varReplacer784;
        null_type varReplacer785;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r2 := @parameter4: java.lang.Class[];

        $r3 := @parameter5: java.lang.Class[];

        $r4 := @parameter6: java.lang.Object[];

     label1:
        varReplacer784 = 1;

        $r0 = staticinvoke <com.androidquery.util.AQUtility: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[])>($r0, $r1, varReplacer784, $r2, $r3, $r4);

     label2:
        return $r0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <com.androidquery.util.AQUtility: void report(java.lang.Throwable)>($r5);

        varReplacer785 = null;

        return varReplacer785;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static transient java.lang.Object invokeHandler(java.lang.Object, java.lang.String, boolean, boolean, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        boolean $z0, $z1;
        java.lang.Class[] $r2;
        java.lang.Object[] $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $r2 := @parameter4: java.lang.Class[];

        $r3 := @parameter5: java.lang.Object[];

        $r0 = staticinvoke <com.androidquery.util.AQUtility: java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[])>($r0, $r1, $z0, $z1, $r2, null, $r3);

        return $r0;
    }

    private static transient java.lang.Object invokeMethod(java.lang.Object, java.lang.String, boolean, java.lang.Class[], java.lang.Class[], java.lang.Object[]) throws java.lang.Exception
    {
        java.lang.Object $r0, $r7;
        java.lang.String $r1;
        boolean $z0;
        java.lang.Class[] $r2, $r4;
        java.lang.Object[] $r3;
        java.lang.Class $r5;
        java.lang.reflect.Method $r6;
        java.lang.Throwable $r8, $r9;
        null_type varReplacer787, varReplacer788;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r4 := @parameter3: java.lang.Class[];

        $r2 := @parameter4: java.lang.Class[];

        $r3 := @parameter5: java.lang.Object[];

        if $r0 == null goto label14;

        if $r1 != null goto label01;

        varReplacer787 = null;

        return varReplacer787;

     label01:
        if $r4 != null goto label02;

        $r4 = newarray (java.lang.Class)[0];

     label02:
        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r4);

        $r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r3);

     label03:
        return $r7;

     label04:
        $r8 := @caughtexception;

        if $r2 != null goto label11;

     label05:
        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

     label06:
        $r4 = newarray (java.lang.Class)[0];

     label07:
        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r4);

     label08:
        $r3 = newarray (java.lang.Object)[0];

     label09:
        $r0 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r3);

     label10:
        return $r0;

     label11:
        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r2);

        $r0 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r3);

     label12:
        return $r0;

     label13:
        $r9 := @caughtexception;

     label14:
        varReplacer788 = null;

        return varReplacer788;

        catch java.lang.NoSuchMethodException from label02 to label03 with label04;
        catch java.lang.NoSuchMethodException from label05 to label06 with label13;
        catch java.lang.NoSuchMethodException from label07 to label08 with label13;
        catch java.lang.NoSuchMethodException from label09 to label10 with label13;
        catch java.lang.NoSuchMethodException from label11 to label12 with label13;
    }

    public static boolean isDebug()
    {
        boolean z0;

        z0 = <com.androidquery.util.AQUtility: boolean debug>;

        return z0;
    }

    public static boolean isUIThread()
    {
        android.os.Looper $r0;
        java.lang.Thread $r1;
        long $l0, $l1;
        byte $b2;
        int varReplacer764, varReplacer765;

        nop;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r1 = virtualinvoke $r0.<android.os.Looper: java.lang.Thread getThread()>();

        $l0 = virtualinvoke $r1.<java.lang.Thread: long getId()>();

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l1 = virtualinvoke $r1.<java.lang.Thread: long getId()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        varReplacer764 = 1;

        return varReplacer764;

     label1:
        varReplacer765 = 0;

        return varReplacer765;
    }

    private static void lastAccess(java.io.File)
    {
        java.io.File $r0;
        long $l0;

        $r0 := @parameter0: java.io.File;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r0.<java.io.File: boolean setLastModified(long)>($l0);

        return;
    }

    private static java.io.File makeCacheFile(java.io.File, java.lang.String)
    {
        java.io.File $r0, $r2;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public static float pixel2dip(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0, $f1;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 / 160.0F;

        $f0 = $f0 / $f1;

        return $f0;
    }

    public static void post(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.Class[] $r2;
        java.lang.Object[] $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.Class)[0];

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.androidquery.util.AQUtility: void post(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[])>($r0, $r1, $r2, $r3);

        return;
    }

    public static transient void post(java.lang.Object, java.lang.String, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.Class[] $r2;
        java.lang.Object[] $r3;
        com.androidquery.util.AQUtility$1 $r4;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class[];

        $r3 := @parameter3: java.lang.Object[];

        $r4 = new com.androidquery.util.AQUtility$1;

        specialinvoke $r4.<com.androidquery.util.AQUtility$1: void <init>(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[])>($r0, $r1, $r2, $r3);

        staticinvoke <com.androidquery.util.AQUtility: void post(java.lang.Runnable)>($r4);

        return;
    }

    public static void post(java.lang.Runnable)
    {
        java.lang.Runnable $r0;
        android.os.Handler $r1;

        nop;

        $r0 := @parameter0: java.lang.Runnable;

        $r1 = staticinvoke <com.androidquery.util.AQUtility: android.os.Handler getHandler()>();

        virtualinvoke $r1.<android.os.Handler: boolean post(java.lang.Runnable)>($r0);

        return;
    }

    public static void postAsync(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.Class[] $r2;
        java.lang.Object[] $r3;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.Class)[0];

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.androidquery.util.AQUtility: void postAsync(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[])>($r0, $r1, $r2, $r3);

        return;
    }

    public static transient void postAsync(java.lang.Object, java.lang.String, java.lang.Class[], java.lang.Object[])
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.Class[] $r2;
        java.lang.Object[] $r3;
        com.androidquery.util.AQUtility$3 $r4;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class[];

        $r3 := @parameter3: java.lang.Object[];

        $r4 = new com.androidquery.util.AQUtility$3;

        specialinvoke $r4.<com.androidquery.util.AQUtility$3: void <init>(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[])>($r0, $r1, $r2, $r3);

        staticinvoke <com.androidquery.util.AQUtility: void postAsync(java.lang.Runnable)>($r4);

        return;
    }

    public static void postAsync(java.lang.Runnable)
    {
        java.lang.Runnable $r0;
        com.androidquery.util.AQUtility$2 $r1;
        java.lang.Void[] $r2;

        $r0 := @parameter0: java.lang.Runnable;

        $r1 = new com.androidquery.util.AQUtility$2;

        specialinvoke $r1.<com.androidquery.util.AQUtility$2: void <init>(java.lang.Runnable)>($r0);

        $r2 = newarray (java.lang.Void)[0];

        virtualinvoke $r1.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        return;
    }

    public static void postDelayed(java.lang.Runnable, long)
    {
        java.lang.Runnable $r0;
        long $l0;
        android.os.Handler $r1;

        $r0 := @parameter0: java.lang.Runnable;

        $l0 := @parameter1: long;

        $r1 = staticinvoke <com.androidquery.util.AQUtility: android.os.Handler getHandler()>();

        virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r0, $l0);

        return;
    }

    public static void removePost(java.lang.Runnable)
    {
        java.lang.Runnable $r0;
        android.os.Handler $r1;

        $r0 := @parameter0: java.lang.Runnable;

        $r1 = staticinvoke <com.androidquery.util.AQUtility: android.os.Handler getHandler()>();

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r0);

        return;
    }

    public static void report(java.lang.Throwable)
    {
        java.lang.Throwable $r0;
        java.lang.Exception $r1;
        java.lang.String $r2, varReplacer783;
        java.lang.Thread$UncaughtExceptionHandler $r3;
        java.lang.Thread $r4;

        nop;

        $r0 := @parameter0: java.lang.Throwable;

        if $r0 != null goto label1;

        return;

     label1:
        $r2 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r0);

        varReplacer783 = "reporting";

        staticinvoke <com.androidquery.util.AQUtility: void warn(java.lang.Object,java.lang.Object)>(varReplacer783, $r2);

     label2:
        $r3 = <com.androidquery.util.AQUtility: java.lang.Thread$UncaughtExceptionHandler eh>;

        if $r3 == null goto label6;

        $r3 = <com.androidquery.util.AQUtility: java.lang.Thread$UncaughtExceptionHandler eh>;

     label3:
        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        interfaceinvoke $r3.<java.lang.Thread$UncaughtExceptionHandler: void uncaughtException(java.lang.Thread,java.lang.Throwable)>($r4, $r0);

     label4:
        return;

     label5:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static void setAlpha(android.view.View, float)
    {
        android.view.View $r0;
        float $f0;
        android.view.animation.AlphaAnimation $r1;
        byte $b0;

        $r0 := @parameter0: android.view.View;

        $f0 := @parameter1: float;

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label1;

        virtualinvoke $r0.<android.view.View: void clearAnimation()>();

        return;

     label1:
        $r1 = new android.view.animation.AlphaAnimation;

        specialinvoke $r1.<android.view.animation.AlphaAnimation: void <init>(float,float)>($f0, $f0);

        virtualinvoke $r1.<android.view.animation.AlphaAnimation: void setDuration(long)>(0L);

        virtualinvoke $r1.<android.view.animation.AlphaAnimation: void setFillAfter(boolean)>(1);

        virtualinvoke $r0.<android.view.View: void startAnimation(android.view.animation.Animation)>($r1);

        return;
    }

    public static void setCacheDir(java.io.File)
    {
        java.io.File $r0;

        $r0 := @parameter0: java.io.File;

        <com.androidquery.util.AQUtility: java.io.File cacheDir> = $r0;

        $r0 = <com.androidquery.util.AQUtility: java.io.File cacheDir>;

        if $r0 == null goto label1;

        $r0 = <com.androidquery.util.AQUtility: java.io.File cacheDir>;

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

     label1:
        return;
    }

    public static void setContext(android.app.Application)
    {
        android.app.Application $r0;
        android.content.Context $r1;

        $r0 := @parameter0: android.app.Application;

        $r1 = virtualinvoke $r0.<android.app.Application: android.content.Context getApplicationContext()>();

        <com.androidquery.util.AQUtility: android.content.Context context> = $r1;

        return;
    }

    public static void setDebug(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.androidquery.util.AQUtility: boolean debug> = $z0;

        return;
    }

    public static void setExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)
    {
        java.lang.Thread$UncaughtExceptionHandler $r0;

        $r0 := @parameter0: java.lang.Thread$UncaughtExceptionHandler;

        <com.androidquery.util.AQUtility: java.lang.Thread$UncaughtExceptionHandler eh> = $r0;

        return;
    }

    public static void store(java.io.File, byte[])
    {
        java.io.File $r0;
        byte[] $r1;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: byte[];

        if $r0 == null goto label4;

     label1:
        staticinvoke <com.androidquery.util.AQUtility: void write(java.io.File,byte[])>($r0, $r1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        staticinvoke <com.androidquery.util.AQUtility: void report(java.lang.Throwable)>($r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void storeAsync(java.io.File, byte[], long)
    {
        java.io.File $r0;
        byte[] $r1;
        long $l0, varReplacer812;
        java.util.concurrent.ScheduledExecutorService $r2;
        com.androidquery.util.Common $r3;
        java.lang.Object[] $r4;
        java.util.concurrent.TimeUnit $r5;
        int varReplacer811;

        nop;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: byte[];

        $l0 := @parameter2: long;

        $r2 = staticinvoke <com.androidquery.util.AQUtility: java.util.concurrent.ScheduledExecutorService getFileStoreExecutor()>();

        $r3 = new com.androidquery.util.Common;

        specialinvoke $r3.<com.androidquery.util.Common: void <init>()>();

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r0;

        $r4[1] = $r1;

        varReplacer811 = 1;

        $r3 = virtualinvoke $r3.<com.androidquery.util.Common: com.androidquery.util.Common method(int,java.lang.Object[])>(varReplacer811, $r4);

        $r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        varReplacer812 = 0L;

        interfaceinvoke $r2.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>($r3, varReplacer812, $r5);

        return;
    }

    private static boolean testCleanNeeded(java.io.File[], long)
    {
        java.io.File[] $r0;
        long $l0, $l2, $l3;
        java.io.File $r1;
        int $i1, $i4;
        byte $b5;

        $r0 := @parameter0: java.io.File[];

        $l0 := @parameter1: long;

        $l3 = 0L;

        $i1 = lengthof $r0;

        $i4 = 0;

     label1:
        if $i4 >= $i1 goto label3;

        $r1 = $r0[$i4];

        $l2 = virtualinvoke $r1.<java.io.File: long length()>();

        $l3 = $l3 + $l2;

        $b5 = $l3 cmp $l0;

        if $b5 <= 0 goto label2;

        return 1;

     label2:
        $i4 = $i4 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static void time(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Map $r1;
        long $l0;
        java.lang.Long $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.androidquery.util.AQUtility: java.util.Map times>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r2);

        return;
    }

    public static long timeEnd(java.lang.String, long)
    {
        java.lang.String $r0;
        long $l0, $l1, $l2;
        java.util.Map $r1;
        java.lang.Object $r2;
        java.lang.Long $r3;
        byte $b3;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r1 = <com.androidquery.util.AQUtility: java.util.Map times>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (java.lang.Long) $r2;

        if $r3 != null goto label1;

        return 0L;

     label1:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $l1 = $l1 - $l2;

        $b3 = $l0 cmp 0L;

        if $b3 == 0 goto label2;

        $b3 = $l1 cmp $l0;

        if $b3 <= 0 goto label3;

     label2:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        staticinvoke <com.androidquery.util.AQUtility: void debug(java.lang.Object,java.lang.Object)>($r0, $r3);

     label3:
        return $l1;
    }

    public static byte[] toBytes(java.io.InputStream)
    {
        java.io.InputStream $r0;
        java.io.ByteArrayOutputStream $r1;
        java.lang.Throwable $r2;
        byte[] $r3, $r4;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r4 = null;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        staticinvoke <com.androidquery.util.AQUtility: void copy(java.io.InputStream,java.io.OutputStream)>($r0, $r1);

        $r3 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label2:
        $r4 = $r3;

     label3:
        staticinvoke <com.androidquery.util.AQUtility: void close(java.io.Closeable)>($r0);

        return $r4;

     label4:
        $r2 := @caughtexception;

        staticinvoke <com.androidquery.util.AQUtility: void report(java.lang.Throwable)>($r2);

        goto label3;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public static void transparent(android.view.View, boolean)
    {
        android.view.View $r0;
        boolean $z0;
        float $f0;

        $r0 := @parameter0: android.view.View;

        $z0 := @parameter1: boolean;

        $f0 = 1.0F;

        if $z0 == 0 goto label1;

        $f0 = 0.5F;

     label1:
        staticinvoke <com.androidquery.util.AQUtility: void setAlpha(android.view.View,float)>($r0, $f0);

        return;
    }

    public static void warn(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, varReplacer745, varReplacer746;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        varReplacer745 = ":";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer745);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer746 = "AQuery";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer746, $r3);

        return;
    }

    public static void write(java.io.File, byte[])
    {
        java.io.File $r0;
        byte[] $r1;
        java.io.FileOutputStream $r2;
        boolean $z0;
        java.lang.Exception $r3, $r4;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: byte[];

     label01:
        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

     label02:
        if $z0 != 0 goto label04;

     label03:
        virtualinvoke $r0.<java.io.File: boolean createNewFile()>();

     label04:
        $r2 = new java.io.FileOutputStream;

     label05:
        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r0);

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r1);

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

     label06:
        return;

     label07:
        $r3 := @caughtexception;

     label08:
        staticinvoke <com.androidquery.util.AQUtility: void debug(java.lang.Object,java.lang.Object)>("file create fail", $r0);

        staticinvoke <com.androidquery.util.AQUtility: void report(java.lang.Throwable)>($r3);

     label09:
        goto label04;

     label10:
        $r4 := @caughtexception;

        staticinvoke <com.androidquery.util.AQUtility: void report(java.lang.Throwable)>($r4);

        return;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
}
