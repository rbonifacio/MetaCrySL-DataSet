public class com.darksummoner.util.crypto.Aes extends java.lang.Object
{

    public void <init>()
    {
        com.darksummoner.util.crypto.Aes $r0;

        $r0 := @this: com.darksummoner.util.crypto.Aes;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] crypto(byte[], java.security.Key, int) throws com.darksummoner.util.crypto.DarknessCryptoException
    {
        byte[] $r0, $r4;
        java.security.Key $r1;
        int $i0;
        javax.crypto.Cipher $r2;
        javax.crypto.spec.IvParameterSpec $r3, r11;
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10;
        com.darksummoner.util.crypto.DarknessCryptoException r12;
        java.lang.Exception r13;
        java.lang.String varReplacer6845;
        null_type varReplacer6846;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.security.Key;

        $i0 := @parameter2: int;

     label01:
        varReplacer6845 = "AES/CBC/PKCS5Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6845);

     label02:
        r11 = new javax.crypto.spec.IvParameterSpec;

        $r3 = r11;

        $r4 = newarray (byte)[16];

        $r4[0] = 105;

        $r4[1] = -126;

        $r4[2] = -70;

        $r4[3] = -48;

        $r4[4] = -121;

        $r4[5] = 67;

        $r4[6] = -73;

        $r4[7] = -53;

        $r4[8] = 2;

        $r4[9] = 36;

        $r4[10] = -119;

        $r4[11] = -1;

        $r4[12] = -38;

        $r4[13] = -20;

        $r4[14] = -81;

        $r4[15] = -92;

     label03:
        specialinvoke r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r1, $r3);

        $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label04:
        return $r0;

     label05:
        $r5 := @caughtexception;

        r13 = (java.lang.Exception) $r5;

        staticinvoke <jp.co.a_tm.util.LogUtil: void e(java.lang.Exception)>(r13);

     label06:
        varReplacer6846 = null;

        return varReplacer6846;

     label07:
        $r6 := @caughtexception;

        r13 = (java.lang.Exception) $r6;

        staticinvoke <jp.co.a_tm.util.LogUtil: void e(java.lang.Exception)>(r13);

        goto label06;

     label08:
        $r7 := @caughtexception;

        r12 = new com.darksummoner.util.crypto.DarknessCryptoException;

        specialinvoke r12.<com.darksummoner.util.crypto.DarknessCryptoException: void <init>(java.lang.Throwable)>($r7);

        throw r12;

     label09:
        $r8 := @caughtexception;

        r12 = new com.darksummoner.util.crypto.DarknessCryptoException;

        specialinvoke r12.<com.darksummoner.util.crypto.DarknessCryptoException: void <init>(java.lang.Throwable)>($r8);

        throw r12;

     label10:
        $r9 := @caughtexception;

        r12 = new com.darksummoner.util.crypto.DarknessCryptoException;

        specialinvoke r12.<com.darksummoner.util.crypto.DarknessCryptoException: void <init>(java.lang.Throwable)>($r9);

        throw r12;

     label11:
        $r10 := @caughtexception;

        r12 = new com.darksummoner.util.crypto.DarknessCryptoException;

        specialinvoke r12.<com.darksummoner.util.crypto.DarknessCryptoException: void <init>(java.lang.Throwable)>($r10);

        throw r12;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label07;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label07;
        catch java.security.InvalidKeyException from label01 to label02 with label08;
        catch java.security.InvalidKeyException from label03 to label04 with label08;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label09;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label09;
        catch javax.crypto.BadPaddingException from label01 to label02 with label10;
        catch javax.crypto.BadPaddingException from label03 to label04 with label10;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label11;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label11;
    }

    public static byte[] decrypt(byte[], java.security.Key) throws com.darksummoner.util.crypto.DarknessCryptoException
    {
        byte[] $r0;
        java.security.Key $r1;
        int varReplacer6844;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.security.Key;

        varReplacer6844 = 2;

        $r0 = staticinvoke <com.darksummoner.util.crypto.Aes: byte[] crypto(byte[],java.security.Key,int)>($r0, $r1, varReplacer6844);

        return $r0;
    }

    public static byte[] encrypt(byte[], java.security.Key) throws com.darksummoner.util.crypto.DarknessCryptoException
    {
        byte[] $r0;
        java.security.Key $r1;
        int varReplacer6882;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.security.Key;

        varReplacer6882 = 1;

        $r0 = staticinvoke <com.darksummoner.util.crypto.Aes: byte[] crypto(byte[],java.security.Key,int)>($r0, $r1, varReplacer6882);

        return $r0;
    }

    public static javax.crypto.SecretKey generateSecretKey(android.content.Context)
    {
        android.content.Context $r0;
        javax.crypto.spec.PBEKeySpec $r1, r11;
        java.lang.StringBuilder $r2, r10;
        java.lang.String $r3, varReplacer6847;
        char[] $r4;
        byte[] $r5;
        javax.crypto.SecretKeyFactory $r6;
        javax.crypto.SecretKey $r7;
        java.lang.Throwable $r8, $r9;
        java.lang.Exception r12;
        int varReplacer6848, varReplacer6849, varReplacer6850;
        null_type varReplacer6851, varReplacer6852;

        nop;

        $r0 := @parameter0: android.content.Context;

        r11 = new javax.crypto.spec.PBEKeySpec;

        $r1 = r11;

        r10 = new java.lang.StringBuilder;

        $r2 = r10;

     label1:
        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <jp.co.a_tm.util.DeviceUtil: java.lang.String getAndroidId(android.content.Context)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer6848 = 58;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer6848);

        $r3 = staticinvoke <jp.co.a_tm.util.DeviceUtil: java.lang.String getMacAddress(android.content.Context)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <jp.co.a_tm.util.TextUtil: java.lang.String sha1(java.lang.String)>($r3);

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

     label2:
        $r5 = newarray (byte)[11];

        $r5[0] = 2;

        $r5[1] = -12;

        $r5[2] = -99;

        $r5[3] = 1;

        $r5[4] = 93;

        $r5[5] = -31;

        $r5[6] = -77;

        $r5[7] = -123;

        $r5[8] = 22;

        $r5[9] = 0;

        $r5[10] = 14;

     label3:
        varReplacer6849 = 1024;

        varReplacer6850 = 256;

        specialinvoke r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer6849, varReplacer6850);

        varReplacer6847 = "PBEWITHSHAAND256BITAES-CBC-BC";

        $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6847);

        $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1);

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        r12 = (java.lang.Exception) $r8;

        staticinvoke <jp.co.a_tm.util.LogUtil: void e(java.lang.Exception)>(r12);

        varReplacer6852 = null;

        return varReplacer6852;

     label6:
        $r9 := @caughtexception;

        r12 = (java.lang.Exception) $r9;

        staticinvoke <jp.co.a_tm.util.LogUtil: void e(java.lang.Exception)>(r12);

        varReplacer6851 = null;

        return varReplacer6851;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
    }
}
