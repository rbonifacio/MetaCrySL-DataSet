Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer264)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: dad3c647c4c9ab40f7ff551899f231fb86629e15829c504bc70fce50707604f0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer263)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: 871d25f0a86ec2413e38527eb22d5913b5d16560f9854c6c9bc4bf4b4539234d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <do: java.lang.String b(java.lang.String)>
		SHA-256: aa3e576a72b625cc4259811ccc09f803b929b333ee696e9ca985995a25b2b03a
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer262)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: 99aa8874bd6d3f839401dbd2798427b87a85e003f0afc08b255d6bb157a8a511
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer265)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: da0503d5031e85ee70004003cf9a1441ed3f0e8532cf2c839b26d85cf7659670
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer733)
		Method: <do: java.lang.String b(java.lang.String)>
		SHA-256: 9d4a3693b0a48d06c89b93448319010d9b6714ea3419890c10bb5add6508c490
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3264)
		Method: <com.esri.core.internal.io.handler.m: javax.net.ssl.SSLContext a()>
		SHA-256: c091b2f43c9fff5f38d8a482f91bb5bf0569de8a10746c170c2530746592d4f3
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <kw: void a(char[],byte[],int)>
		SHA-256: b994bb6bdf191dc97e1140a507efd8d7379a90191de60b22230315488b73ef1f
		Secure: false

Findings in Java Class: kw

	 in Method: void a(char[],byte[],int)
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #99aa8874bd6d3f839401dbd2798427b87a85e003f0afc08b255d6bb157a8a511)
			First parameter (with value "PBEWithMD5AndDES/CBC/PKCS5Padding") should be any of {AES, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer262)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #871d25f0a86ec2413e38527eb22d5913b5d16560f9854c6c9bc4bf4b4539234d)
			First parameter (with value "PBEWithMD5AndDES/CBC/PKCS5Padding") should be any of {AES, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer263)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #da0503d5031e85ee70004003cf9a1441ed3f0e8532cf2c839b26d85cf7659670)
			Second parameter (with value 1023)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer265)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #dad3c647c4c9ab40f7ff551899f231fb86629e15829c504bc70fce50707604f0)
			First parameter (with value "PBEWithMD5AndDES") should be any of {PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithSHAAND192BITAES-CBC-BC, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer264)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer265)


Findings in Java Class: do

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9d4a3693b0a48d06c89b93448319010d9b6714ea3419890c10bb5add6508c490)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer733)


Findings in Java Class: com.esri.core.internal.io.handler.m

	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3262, r7, varReplacer3262)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3262, r7, varReplacer3262)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 5
	ForbiddenMethodError: 1
=====================================================================