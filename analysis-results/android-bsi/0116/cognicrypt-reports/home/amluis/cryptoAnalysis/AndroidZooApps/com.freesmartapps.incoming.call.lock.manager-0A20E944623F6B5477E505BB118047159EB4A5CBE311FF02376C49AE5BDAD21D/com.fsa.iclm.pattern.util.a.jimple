public class com.fsa.iclm.pattern.util.a extends java.lang.Object
{
    private static java.io.File a;
    private static final java.util.concurrent.atomic.AtomicBoolean b;
    private static android.os.FileObserver c;

    static void <clinit>()
    {
        java.util.concurrent.atomic.AtomicBoolean $r0;
        int varReplacer1311;

        nop;

        $r0 = new java.util.concurrent.atomic.AtomicBoolean;

        varReplacer1311 = 0;

        specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(varReplacer1311);

        <com.fsa.iclm.pattern.util.a: java.util.concurrent.atomic.AtomicBoolean b> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.fsa.iclm.pattern.util.a $r0;
        android.content.Context $r1;
        java.io.File $r2;
        java.lang.String $r3, varReplacer2319;
        java.util.concurrent.atomic.AtomicBoolean $r4;
        long $l0;
        byte $b1;
        boolean $z0;
        com.fsa.iclm.pattern.util.b $r5;
        android.os.FileObserver $r6;
        int varReplacer2318;

        nop;

        $r0 := @this: com.fsa.iclm.pattern.util.a;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = <com.fsa.iclm.pattern.util.a: java.io.File a>;

        if $r2 != null goto label3;

        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getFilesDir()>();

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = new java.io.File;

        varReplacer2319 = "gesture.key";

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, varReplacer2319);

        <com.fsa.iclm.pattern.util.a: java.io.File a> = $r2;

        $r4 = <com.fsa.iclm.pattern.util.a: java.util.concurrent.atomic.AtomicBoolean b>;

        $r2 = <com.fsa.iclm.pattern.util.a: java.io.File a>;

        $l0 = virtualinvoke $r2.<java.io.File: long length()>();

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label2;

        $z0 = 1;

     label1:
        virtualinvoke $r4.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>($z0);

        $r5 = new com.fsa.iclm.pattern.util.b;

        varReplacer2318 = 904;

        specialinvoke $r5.<com.fsa.iclm.pattern.util.b: void <init>(java.lang.String,int)>($r3, varReplacer2318);

        <com.fsa.iclm.pattern.util.a: android.os.FileObserver c> = $r5;

        $r6 = <com.fsa.iclm.pattern.util.a: android.os.FileObserver c>;

        virtualinvoke $r6.<android.os.FileObserver: void startWatching()>();

        return;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        return;
    }

    public static java.lang.String a(java.util.List)
    {
        java.util.List $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2, varReplacer1312;
        java.lang.Object $r3;
        com.fsa.iclm.pattern.util.c $r4;
        byte $b4;

        nop;

        $r0 := @parameter0: java.util.List;

        if $r0 != null goto label1;

        varReplacer1312 = "";

        return varReplacer1312;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r1);

        return $r2;

     label3:
        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (com.fsa.iclm.pattern.util.c) $r3;

        $i2 = virtualinvoke $r4.<com.fsa.iclm.pattern.util.c: int a()>();

        $i2 = $i2 * 3;

        $i3 = virtualinvoke $r4.<com.fsa.iclm.pattern.util.c: int b()>();

        $i2 = $i3 + $i2;

        $b4 = (byte) $i2;

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label2;
    }

    public static java.util.List a(java.lang.String)
    {
        java.lang.String $r0;
        java.util.ArrayList $r1;
        int $i0, $i1, $i3;
        byte[] $r2;
        byte $b2;
        com.fsa.iclm.pattern.util.c $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i1 = 0;

     label1:
        $i0 = lengthof $r2;

        if $i1 < $i0 goto label2;

        return $r1;

     label2:
        $b2 = $r2[$i1];

        $i0 = $b2 / 3;

        $i3 = $b2 % 3;

        $r3 = staticinvoke <com.fsa.iclm.pattern.util.c: com.fsa.iclm.pattern.util.c a(int,int)>($i0, $i3);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 1;

        goto label1;
    }

    static java.util.concurrent.atomic.AtomicBoolean b()
    {
        java.util.concurrent.atomic.AtomicBoolean r0;

        r0 = <com.fsa.iclm.pattern.util.a: java.util.concurrent.atomic.AtomicBoolean b>;

        return r0;
    }

    static java.io.File c()
    {
        java.io.File r0;

        r0 = <com.fsa.iclm.pattern.util.a: java.io.File a>;

        return r0;
    }

    private static byte[] d(java.util.List)
    {
        java.util.List $r0;
        byte[] $r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.security.MessageDigest $r2;
        java.lang.Object $r4;
        com.fsa.iclm.pattern.util.c $r5;
        byte $b4;
        java.lang.Throwable $r6;
        java.lang.String varReplacer2328;
        null_type varReplacer2329;

        nop;

        $r0 := @parameter0: java.util.List;

        if $r0 != null goto label1;

        varReplacer2329 = null;

        return varReplacer2329;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label5;

     label3:
        varReplacer2328 = "SHA-1";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2328);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1);

     label4:
        return $r3;

     label5:
        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (com.fsa.iclm.pattern.util.c) $r4;

        $i2 = virtualinvoke $r5.<com.fsa.iclm.pattern.util.c: int a()>();

        $i2 = $i2 * 3;

        $i3 = virtualinvoke $r5.<com.fsa.iclm.pattern.util.c: int b()>();

        $i2 = $i3 + $i2;

        $b4 = (byte) $i2;

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label2;

     label6:
        $r6 := @caughtexception;

        return $r1;

        catch java.security.NoSuchAlgorithmException from label3 to label4 with label6;
    }

    public boolean a()
    {
        com.fsa.iclm.pattern.util.a $r0;
        boolean $z0;
        java.util.concurrent.atomic.AtomicBoolean $r1;

        nop;

        $r0 := @this: com.fsa.iclm.pattern.util.a;

        $r1 = <com.fsa.iclm.pattern.util.a: java.util.concurrent.atomic.AtomicBoolean b>;

        $z0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();

        return $z0;
    }

    public void b(java.util.List)
    {
        com.fsa.iclm.pattern.util.a $r0;
        java.util.List $r1;
        byte[] $r2;
        java.io.RandomAccessFile $r3;
        java.io.File $r4;
        int $i0, varReplacer2323;
        java.lang.Throwable $r5, $r8;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, varReplacer2321, varReplacer2322, varReplacer2325, varReplacer2326, varReplacer2327;
        long varReplacer2324;

        nop;

        $r0 := @this: com.fsa.iclm.pattern.util.a;

        $r1 := @parameter0: java.util.List;

        $r2 = staticinvoke <com.fsa.iclm.pattern.util.a: byte[] d(java.util.List)>($r1);

        $r3 = new java.io.RandomAccessFile;

        $r4 = <com.fsa.iclm.pattern.util.a: java.io.File a>;

     label01:
        varReplacer2327 = "rwd";

        specialinvoke $r3.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r4, varReplacer2327);

     label02:
        if $r1 != null goto label06;

     label03:
        varReplacer2324 = 0L;

        virtualinvoke $r3.<java.io.RandomAccessFile: void setLength(long)>(varReplacer2324);

     label04:
        virtualinvoke $r3.<java.io.RandomAccessFile: void close()>();

     label05:
        return;

     label06:
        $i0 = lengthof $r2;

     label07:
        varReplacer2323 = 0;

        virtualinvoke $r3.<java.io.RandomAccessFile: void write(byte[],int,int)>($r2, varReplacer2323, $i0);

     label08:
        goto label04;

     label09:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        varReplacer2326 = "Unable to save lock pattern to ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2326);

        $r4 = <com.fsa.iclm.pattern.util.a: java.io.File a>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2325 = "LockPatternUtils";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2325, $r7);

        return;

     label10:
        $r8 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        varReplacer2322 = "Unable to save lock pattern to ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2322);

        $r4 = <com.fsa.iclm.pattern.util.a: java.io.File a>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2321 = "LockPatternUtils";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2321, $r7);

        return;

        catch java.io.FileNotFoundException from label01 to label02 with label09;
        catch java.io.FileNotFoundException from label03 to label05 with label09;
        catch java.io.FileNotFoundException from label07 to label08 with label09;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label05 with label10;
        catch java.io.IOException from label07 to label08 with label10;
    }

    public boolean c(java.util.List)
    {
        com.fsa.iclm.pattern.util.a $r0;
        java.util.List $r1;
        int $i0;
        java.io.RandomAccessFile $r2;
        java.io.File $r3;
        long $l1;
        byte[] $r4, $r5;
        boolean $z0;
        java.lang.Throwable $r6, $r7;

        $r0 := @this: com.fsa.iclm.pattern.util.a;

        $r1 := @parameter0: java.util.List;

        $r2 = new java.io.RandomAccessFile;

        $r3 = <com.fsa.iclm.pattern.util.a: java.io.File a>;

     label1:
        specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r3, "r");

        $l1 = virtualinvoke $r2.<java.io.RandomAccessFile: long length()>();

     label2:
        $i0 = (int) $l1;

        $r4 = newarray (byte)[$i0];

        $i0 = lengthof $r4;

     label3:
        $i0 = virtualinvoke $r2.<java.io.RandomAccessFile: int read(byte[],int,int)>($r4, 0, $i0);

        virtualinvoke $r2.<java.io.RandomAccessFile: void close()>();

     label4:
        if $i0 > 0 goto label5;

        return 1;

     label5:
        $r5 = staticinvoke <com.fsa.iclm.pattern.util.a: byte[] d(java.util.List)>($r1);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r5);

     label6:
        return $z0;

     label7:
        $r6 := @caughtexception;

        return 1;

     label8:
        $r7 := @caughtexception;

        return 1;

        catch java.io.FileNotFoundException from label1 to label2 with label8;
        catch java.io.FileNotFoundException from label3 to label4 with label8;
        catch java.io.FileNotFoundException from label5 to label6 with label8;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }
}
