Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer8643
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8643)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 4240d81173ca09873a1b56ecdad513feaa42a4caefe2308aedc5ad4c6dc63afe
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3450)
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: 87ff3ac93a7b451b5344334cca975cacf586340d2068474aa0e200f7367d23a8
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8643)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 37d6bdf64189f19e56f7e0271dcf6bd3b4296e90a819ca569ab5284f31ca71d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.baidu.location.f.a.c: java.lang.String a(byte[],boolean)>
		SHA-256: a8c75d72c4e68846339c9dabce3390287a664288805e8e26b4aef0c8da50cf16
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cd: java.lang.String b(java.lang.String)>
		SHA-256: 5c110319dc7d1bd7837daf3feccd0e81febe5ee38692487b07c8eb8ceaf9dae1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1267)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: 8504128b4b44454944de300101bbc3b364bf9fa43a81bf5fa35e8a7222a06830
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.upd.n: java.lang.String a(java.io.File)>
		SHA-256: b7c6810eed35c57e27e7c7037f177fe522f741ff2c886ca321d39a53b9cf0228
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: 47d6482b646d129f902efacb8cf4d55effb2a29b8f1cde136e88a11dffef1390
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2047)
		Method: <com.baidu.location.b.m$a: void <init>(java.security.KeyStore)>
		SHA-256: fb462599c6f4159843ca756de6820e0f7512d11d88e57ae8a235dbe8be206d44
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7307)
		Method: <u.aly.cd: java.lang.String a(java.lang.String)>
		SHA-256: b44b69f7c35dd8712ef039a4fe16e23975ead50a309e68b6043a2e67d9cd8174
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7065)
		Method: <u.upd.n: java.lang.String a(java.lang.String)>
		SHA-256: 11075d68aff1e9e054538f58fa0a12c5dd79740f922d7abc7dc0447b24a8bf4a
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer3452)
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: 7bdacba68961136b8f46a954b0bd83cdd58e83815976b47cfce1e9b10b69b4d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1252)
		Method: <com.baidu.location.f.a.c: java.lang.String a(byte[],boolean)>
		SHA-256: 89a36806b51faa58106b2f06fbc2dea59196071226c6340af0a59eca0787b8f3
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3440)
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: 6538a3cdb3a43d45727d2041dcb106d74cd01a75582e9be87fdaf0789255a943
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3867)
		Method: <u.upd.n: java.lang.String b(java.lang.String)>
		SHA-256: 941193efab6071b91aedf39739d262d8d7ae78897ca1f46049569ca18860d403
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3457)
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: 955dd9255d67426d0f46dfd910a494d92dccccc8e052b05e5538d8805f5d9d5e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9046)
		Method: <com.baidu.location.b.j: byte[] a(byte[])>
		SHA-256: ab39204cc071e3b6487828f106931cfd170291849359f73877c431238e39e9b9
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1269)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: 801e2dc82fd2eafcc44353aaf564eddd83fbec0195d540275724e641a7def74b
		Secure: false
	Object:
		Variable: varReplacer1274
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1274)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 3709bc968f12cdfc847469f3843974889d859e575d12f9cfe1cca2dae109b51a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.upd.n: java.lang.String a(java.lang.String)>
		SHA-256: b7c6810eed35c57e27e7c7037f177fe522f741ff2c886ca321d39a53b9cf0228
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.baidu.location.b.j: byte[] a(byte[])>
		SHA-256: 15b8623f6a9850846e1bb5b240a633d392f8a7c412b22aa26cde142cfc254534
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1274)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 9ac721178573acfa1348b7e3a595efcadaa7e4e4b8d5768756c7b417a8ea32a1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2756)
		Method: <io.xlink.wifi.sdk.util.b: byte[] a(int)>
		SHA-256: 74f072e2f6eb8d0b3a6b5f78919c899a1b83ac16c44a44b9a6d81f76f88b0de9
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 150bd5b7f4fa98bd7d19b4334335a3f364b812a82990b17162c6a447c071634b
		Secure: false
	Object:
		Variable: varReplacer1267
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1267)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: 935a05f6618af113ce0934d030c72316840f631c0be7183b83a871aa39562b97
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.baidu.location.b.k: java.lang.String 'if'(java.io.File)>
		SHA-256: db66747b9277f793dcd88d087f50c6459596c93bb6dfd96627ba61aa37cd6ead
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.upd.n: java.lang.String b(java.lang.String)>
		SHA-256: bac11cf34adc6aac836737d9e183cecc1c96f965bb9cf22dd2e5b70d7453cfbc
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1136)
		Method: <com.baidu.location.b.k: java.lang.String 'if'(java.io.File)>
		SHA-256: aca7fde4fd1afc3b13235614eb54d274f0dc3d7902095f420ebf7cfdf506dd2d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 55ef35a9e5361367b650b4092a4c8bc3d3e07ff15f333dd8e7f8138f9d5309a5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.xlink.wifi.sdk.util.b: byte[] a(int)>
		SHA-256: 2ff6104740f0cf3df9503f5e20da4faa48fd4ac78a7c1482ee51fe2eded07846
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1272)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 2f94e1ff9cca6ba11eb84db569980e1693ac00d859bea83bfe75de01cf44875f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3714)
		Method: <u.aly.cd: java.lang.String b(java.lang.String)>
		SHA-256: 6465a8e38cd76ba0b8c5cfac229bc1738d5fce947d404fee3338dc90919d3a03
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.baidu.location.f.b.a: byte[] 'if'(java.lang.String,java.lang.String,byte[])>
		SHA-256: 54800dff0bb6e766eb4162281a69aabd6f6b14628251ecc63b0124d57439446
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.baidu.location.f.b.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: d0f6f4706546c156ee289b202709825e5df53f7e4f36e0982c154eb3536bcb6c
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.xlink.wifi.sdk.XlinkTcpService$4: void run()>
		SHA-256: 8269fa4a58e666ba40031be7993cd6bb89dc5390406f46345dbfe0d670eec1a5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.xlink.wifi.sdk.util.b: byte[] a(java.lang.String)>
		SHA-256: 251ebbb0a4e1a1cac8a3332aa4dc678df1e859daa8abae34f09964d889a50d1c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cd: java.lang.String a(java.lang.String)>
		SHA-256: efc863d34f8ef54de3c71abdfc804b55e242c06fc97ff9d67417c5edb734a076
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8645)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 1331e1133e27ee77bdbf0174dff0450c327e00754cbfff0f09f57e5b692c0cf1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3888)
		Method: <u.upd.n: java.lang.String a(java.io.File)>
		SHA-256: ba8d92c0458618b6864e05c59a8510ef51336d1b55a1b82db40e5c546e087e10
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8647)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: e83e7594eeb59771b6c70d3000ade6ce964f99418aafafb3e6c403ed3db0a7f9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2903)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 1dc1f1778b28406f33be6f11fcc063563bce2b3a7f4cb6bc48e7992796bfef5d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2714)
		Method: <io.xlink.wifi.sdk.util.b: byte[] a(java.lang.String)>
		SHA-256: 4c03893ebc8cd4a1c4d248ce9722bb03079b463c71a719bc040f6b7d49a39789
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.baidu.location.b.m: org.apache.http.client.HttpClient 'if'(org.apache.http.params.HttpParams)>
		SHA-256: b90ea4e6ccdfcb9cf556068e1ab227f531b0a17a6e6470df46089b9a5b8eeeba
		Secure: true

Findings in Java Class: com.baidu.location.b.k

	 in Method: java.lang.String 'if'(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #aca7fde4fd1afc3b13235614eb54d274f0dc3d7902095f420ebf7cfdf506dd2d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #aca7fde4fd1afc3b13235614eb54d274f0dc3d7902095f420ebf7cfdf506dd2d)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1136)


Findings in Java Class: com.baidu.location.f.a.c

	 in Method: java.lang.String a(byte[],boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #89a36806b51faa58106b2f06fbc2dea59196071226c6340af0a59eca0787b8f3)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1252)


Findings in Java Class: com.baidu.location.f.b.a

	 in Method: byte[] 'if'(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #801e2dc82fd2eafcc44353aaf564eddd83fbec0195d540275724e641a7def74b)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1269)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1268, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1268, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1267)


	 in Method: byte[] a(java.lang.String,java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2f94e1ff9cca6ba11eb84db569980e1693ac00d859bea83bfe75de01cf44875f)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1272)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1274)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1273, $r3, $r6)


Findings in Java Class: io.xlink.wifi.sdk.util.b

	 in Method: byte[] a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4c03893ebc8cd4a1c4d248ce9722bb03079b463c71a719bc040f6b7d49a39789)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2714)


	 in Method: byte[] a(int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #74f072e2f6eb8d0b3a6b5f78919c899a1b83ac16c44a44b9a6d81f76f88b0de9)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2756)


Findings in Java Class: io.xlink.wifi.sdk.XlinkTcpService$4

	 in Method: void run()
		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #7bdacba68961136b8f46a954b0bd83cdd58e83815976b47cfce1e9b10b69b4d)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r11 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer3452)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r14, varReplacer3443)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #7bdacba68961136b8f46a954b0bd83cdd58e83815976b47cfce1e9b10b69b4d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r14, varReplacer3443)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #87ff3ac93a7b451b5344334cca975cacf586340d2068474aa0e200f7367d23a8)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r8, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r10)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #955dd9255d67426d0f46dfd910a494d92dccccc8e052b05e5538d8805f5d9d5e)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r10)


Findings in Java Class: u.aly.cd

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6465a8e38cd76ba0b8c5cfac229bc1738d5fce947d404fee3338dc90919d3a03)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3714)


	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b44b69f7c35dd8712ef039a4fe16e23975ead50a309e68b6043a2e67d9cd8174)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7307)


Findings in Java Class: u.upd.n

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #941193efab6071b91aedf39739d262d8d7ae78897ca1f46049569ca18860d403)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3867)


	 in Method: java.lang.String a(java.io.File)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ba8d92c0458618b6864e05c59a8510ef51336d1b55a1b82db40e5c546e087e10)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3888)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ba8d92c0458618b6864e05c59a8510ef51336d1b55a1b82db40e5c546e087e10)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #11075d68aff1e9e054538f58fa0a12c5dd79740f922d7abc7dc0447b24a8bf4a)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7065)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1331e1133e27ee77bdbf0174dff0450c327e00754cbfff0f09f57e5b692c0cf1)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8645)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8644, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8643)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8644, $r2, $r4)


	 in Method: byte[] b(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e83e7594eeb59771b6c70d3000ade6ce964f99418aafafb3e6c403ed3db0a7f9)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8647)


Findings in Java Class: com.baidu.location.b.j

	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ab39204cc071e3b6487828f106931cfd170291849359f73877c431238e39e9b9)
			First parameter (with value "SHA1") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9046)


Findings in Java Class: com.baidu.location.b.m$a

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2045, r5, varReplacer2045)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2045, r5, varReplacer2045)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2904, r5, varReplacer2904)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2904, r5, varReplacer2904)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 46

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 18
	ConstraintError: 15
	IncompleteOperationError: 1
	NeverTypeOfError: 2
	TypestateError: 2
=====================================================================