public final class com.skobbler.ngx.SKMaps extends java.lang.Object
{
    public static final byte CONNECTIVITY_MODE_OFFLINE;
    public static final byte CONNECTIVITY_MODE_ONLINE;
    private static com.skobbler.ngx.SKMaps a;
    private boolean b;
    private java.lang.String c;
    private com.skobbler.ngx.SKMapsInitSettings d;
    private com.skobbler.ngx.SKMapsDownloadListener e;
    private java.lang.String f;
    private java.lang.String g;
    private android.os.Handler h;

    static void <clinit>()
    {
        java.lang.String varReplacer3072;

        nop;

        varReplacer3072 = "ngnative";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>(varReplacer3072);

        return;
    }

    private void <init>()
    {
        com.skobbler.ngx.SKMaps $r0;
        android.os.Looper $r1;
        android.os.Handler $r2;
        java.lang.String varReplacer3430, varReplacer3431;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer3430 = "com/skobbler/ngx/SKMaps";

        varReplacer3431 = "downloadcallback";

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: int setdownloadcallbacks(java.lang.String,java.lang.String)>(varReplacer3430, varReplacer3431);

        $r2 = new android.os.Handler;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r1);

        $r0.<com.skobbler.ngx.SKMaps: android.os.Handler h> = $r2;

        return;
    }

    static com.skobbler.ngx.SKMapsDownloadListener a(com.skobbler.ngx.SKMaps)
    {
        com.skobbler.ngx.SKMaps $r0;
        com.skobbler.ngx.SKMapsDownloadListener r1;

        $r0 := @parameter0: com.skobbler.ngx.SKMaps;

        r1 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsDownloadListener e>;

        return r1;
    }

    private static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, varReplacer3271, varReplacer3272;
        java.lang.StringBuffer $r1, r5;
        java.security.MessageDigest $r2;
        byte[] $r3;
        int $i0, $i1;
        byte $b2;
        short $s3;
        java.lang.Throwable $r4;
        java.security.NoSuchAlgorithmException r6;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer3272 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3272);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label02:
        r5 = new java.lang.StringBuffer;

        $r1 = r5;

     label03:
        specialinvoke r5.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label08;

        $b2 = $r3[$i0];

        $s3 = $b2 & 255;

     label06:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        return $r0;

     label10:
        $r4 := @caughtexception;

        r6 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer3271 = "";

        return varReplacer3271;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label10;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label10;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label10;
    }

    private void downloadcallback(boolean, boolean)
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0, $z1;
        com.skobbler.ngx.SKMapsDownloadListener $r1;
        android.os.Handler $r2;
        com.skobbler.ngx.SKMaps$1 $r3;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r1 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsDownloadListener e>;

        if $r1 == null goto label1;

        $r2 = $r0.<com.skobbler.ngx.SKMaps: android.os.Handler h>;

        $r3 = new com.skobbler.ngx.SKMaps$1;

        specialinvoke $r3.<com.skobbler.ngx.SKMaps$1: void <init>(com.skobbler.ngx.SKMaps,boolean,boolean)>($r0, $z0, $z1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;

     label1:
        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>("SKmaps", "No SKMapsDownloadListener was set !!! ", 1);

        return;
    }

    private native boolean enableproxy(int, boolean);

    private native boolean finalizelibrary();

    public static com.skobbler.ngx.SKMaps getInstance()
    {
        com.skobbler.ngx.SKMaps $r0;

        nop;

        $r0 = <com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMaps a>;

        if $r0 != null goto label1;

        $r0 = new com.skobbler.ngx.SKMaps;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void <init>()>();

        <com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMaps a> = $r0;

     label1:
        $r0 = <com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMaps a>;

        return $r0;
    }

    private native int getdefaultmaprepokey();

    private native java.lang.String getdeveloperkey();

    private native boolean getonline();

    private native void init(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float, int, int, boolean, int, boolean, int, java.lang.String, int, java.lang.String, int, int, int, java.lang.String, boolean, java.lang.String, int);

    private native void initadvisor(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String);

    private native void initfcd(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String);

    private native void registercoredump(java.lang.String);

    private native int revisionnumber();

    private native boolean setcachelimit(long);

    private native void setdeveloperkey(java.lang.String);

    private native int setdownloadcallbacks(java.lang.String, java.lang.String);

    private native void setneedonlineconnectiondelay(int);

    private native void setonline(boolean);

    private native boolean setproxy(int, java.lang.String, java.lang.String, int, boolean, java.lang.String, java.lang.String);

    private native void setrequestparameters(java.lang.String[], java.lang.String[]);

    private native void setsearchfromfiles(boolean);

    private native int unzipfile(java.lang.String, java.lang.String);

    private native boolean updatemapversion(int);

    public final void destroySKMaps()
    {
        com.skobbler.ngx.SKMaps $r0;
        int varReplacer3425;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        varReplacer3425 = 0;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = varReplacer3425;

        return;
    }

    public final void enableProxy(boolean)
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0, $z1;
        com.skobbler.ngx.SKMapsInitializationException $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 := @parameter0: boolean;

        $z1 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z1 == 0 goto label1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean enableproxy(int,boolean)>(0, $z0);

        return;

     label1:
        $r1 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r1.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r1;
    }

    public final boolean finalizeLibrary()
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean finalizelibrary()>();

        return $z0;

     label1:
        return 0;
    }

    public final java.lang.String getApiKey()
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        r1 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String c>;

        return r1;
    }

    public final byte getConnectivityMode()
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0;
        com.skobbler.ngx.SKMapsInitializationException $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label2;

        $z0 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean getonline()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 2;

     label2:
        $r1 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r1.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r1;
    }

    public final com.skobbler.ngx.SKMapsInitSettings getMapInitSettings()
    {
        com.skobbler.ngx.SKMaps $r0;
        com.skobbler.ngx.SKMapsInitSettings r1;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        r1 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        return r1;
    }

    public final java.lang.String getObfuscatedApiKey()
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: java.lang.String getdeveloperkey()>();

        return $r1;
    }

    public final java.lang.String getSDKVersion()
    {
        com.skobbler.ngx.SKMaps $r0;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        return "2.5";
    }

    public final java.lang.String getUserId()
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        r1 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String g>;

        return r1;
    }

    public final void initializeSKMaps(android.content.Context, com.skobbler.ngx.SKMapsInitSettings)
    {
        com.skobbler.ngx.SKMaps $r0;
        android.content.Context $r1;
        com.skobbler.ngx.SKMapsInitSettings $r2, $r35;
        java.lang.String $r3, $r12, $r13, $r15, $r16, $r21, $r22, $r23, $r51, varReplacer3138, varReplacer3140, varReplacer3141, varReplacer3142, varReplacer3144, varReplacer3145, varReplacer3146, varReplacer3147, varReplacer3149, varReplacer3150, varReplacer3151, varReplacer3152, varReplacer3153, varReplacer3154, varReplacer3156, varReplacer3158, varReplacer3159, varReplacer3161, varReplacer3162, varReplacer3164, varReplacer3165, varReplacer3166, varReplacer3167, varReplacer3169, varReplacer3170, varReplacer3171, varReplacer3172, varReplacer3173, varReplacer3174, varReplacer3176, varReplacer3177, varReplacer3178, varReplacer3180, varReplacer3183, varReplacer3184, varReplacer3187, varReplacer3188, varReplacer3189, varReplacer3191, varReplacer3192, varReplacer3193, varReplacer3194, varReplacer3195, varReplacer3196, varReplacer3198, varReplacer3199, varReplacer3201, varReplacer3202, varReplacer3203, varReplacer3205, varReplacer3206, varReplacer3207, varReplacer3208, varReplacer3210, varReplacer3211, varReplacer3213, varReplacer3220, varReplacer3223, varReplacer3225, varReplacer3227, varReplacer3228, varReplacer3230, varReplacer3231, varReplacer3232, varReplacer3233, varReplacer3234, varReplacer3235, varReplacer3237, varReplacer3238, varReplacer3239, varReplacer3240, varReplacer3241, varReplacer3242, varReplacer3243, varReplacer3244, varReplacer3245, varReplacer3246, varReplacer3247, varReplacer3248, varReplacer3249, varReplacer3250, varReplacer3252, varReplacer3253, varReplacer3254, varReplacer3256, varReplacer3257, varReplacer3258, varReplacer3259, varReplacer3260, varReplacer3261, varReplacer3262, varReplacer3263, varReplacer3264, varReplacer3265, varReplacer3266, varReplacer3267, varReplacer3269;
        android.content.pm.PackageManager $r4;
        android.content.pm.ApplicationInfo $r5;
        android.os.Bundle $r6;
        boolean $z0;
        java.lang.Throwable $r7, $r34, $r36, $r37, $r43, $r46, $r53, $r54;
        com.skobbler.ngx.map.SKMapViewStyle $r8;
        java.lang.StringBuilder $r9, $r30, r57;
        com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail $r10, $r17;
        com.skobbler.ngx.navigation.SKAdvisorSettings $r11;
        com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage $r14;
        int $i0, $i1, $i2, $i3, varReplacer3137, varReplacer3139, varReplacer3143, varReplacer3148, varReplacer3155, varReplacer3157, varReplacer3160, varReplacer3163, varReplacer3168, varReplacer3175, varReplacer3179, varReplacer3181, varReplacer3182, varReplacer3185, varReplacer3186, varReplacer3190, varReplacer3197, varReplacer3200, varReplacer3204, varReplacer3209, varReplacer3212, varReplacer3215, varReplacer3216, varReplacer3217, varReplacer3218, varReplacer3219, varReplacer3221, varReplacer3222, varReplacer3224, varReplacer3226, varReplacer3229, varReplacer3236, varReplacer3251, varReplacer3255, varReplacer3268;
        com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity $r18;
        android.content.res.Resources $r19;
        android.util.DisplayMetrics $r20, r63;
        float $f0, varReplacer3214;
        com.skobbler.ngx.SKProxySettings $r24, r56;
        long $l4;
        java.lang.Object $r25;
        android.telephony.TelephonyManager $r26;
        android.net.wifi.WifiManager $r27;
        android.net.wifi.WifiInfo $r28;
        android.content.ContentResolver $r29;
        java.lang.String[] $r31, $r32;
        android.content.pm.PackageInfo $r33;
        java.io.File $r38, $r41;
        java.util.UUID $r39;
        java.io.FileWriter $r40, r59;
        java.io.BufferedWriter $r42, r60;
        java.io.FileReader $r44, r61;
        java.io.BufferedReader $r45, r62;
        android.view.WindowManager $r47;
        android.view.Display $r48;
        com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType $r49;
        java.util.Locale $r50;
        com.skobbler.ngx.routing.SKRouteManager $r52;
        com.skobbler.ngx.SKDeveloperKeyException r55;
        com.skobbler.ngx.SKMapsInitializationException r58;
        com.skobbler.ngx.SKMapsPathsNotInitializedException r64;
        android.content.pm.PackageManager$NameNotFoundException r65;
        java.lang.SecurityException r66;
        java.io.IOException r67;
        android.content.res.Resources$NotFoundException r68;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.skobbler.ngx.SKMapsInitSettings;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String c>;

        if $r3 != null goto label011;

     label001:
        $r4 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer3139 = 128;

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, varReplacer3139);

     label002:
        $r6 = $r5.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r6 == null goto label052;

     label003:
        varReplacer3141 = "com.skobbler.ngx.API_KEY";

        $r3 = virtualinvoke $r6.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer3141);

     label004:
        if $r3 == null goto label007;

     label005:
        varReplacer3194 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3194);

     label006:
        if $z0 == 0 goto label049;

     label007:
        r55 = new com.skobbler.ngx.SKDeveloperKeyException;

     label008:
        specialinvoke r55.<com.skobbler.ngx.SKDeveloperKeyException: void <init>()>();

     label009:
        throw r55;

     label010:
        $r7 := @caughtexception;

        r65 = (android.content.pm.PackageManager$NameNotFoundException) $r7;

        $r3 = virtualinvoke r65.<android.content.pm.PackageManager$NameNotFoundException: java.lang.String getMessage()>();

        varReplacer3156 = "SKmaps";

        varReplacer3157 = 2;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3156, $r3, varReplacer3157);

     label011:
        $z0 = $r0.<com.skobbler.ngx.SKMaps: boolean b>;

        if $z0 != 0 goto label103;

        $r8 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: com.skobbler.ngx.map.SKMapViewStyle getCurrentMapViewStyle()>();

        if $r2 == null goto label098;

        $r3 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        if $r3 == null goto label098;

        $r3 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        varReplacer3206 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3206);

        if $z0 != 0 goto label098;

        $r3 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: java.lang.String getResourceFolderPath()>();

        if $r3 == null goto label098;

        $r3 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: java.lang.String getResourceFolderPath()>();

        varReplacer3241 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3241);

        if $z0 != 0 goto label098;

        $r3 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: java.lang.String getStyleFileName()>();

        if $r3 == null goto label098;

        $r3 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: java.lang.String getStyleFileName()>();

        varReplacer3248 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3248);

        if $z0 != 0 goto label098;

        $r3 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapsPath()>();

        if $r3 == null goto label098;

        $r3 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapsPath()>();

        varReplacer3244 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3244);

        if $z0 != 0 goto label098;

        varReplacer3182 = 1;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = varReplacer3182;

        $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d> = $r2;

        $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d> = $r2;

        varReplacer3198 = "SKmaps";

        varReplacer3199 = " INITIALIZE SK MAPS WITH SETTINGS ";

        varReplacer3200 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3198, varReplacer3199, varReplacer3200);

        $r3 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getCoreDumpPath()>();

        if $r3 == null goto label012;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void registercoredump(java.lang.String)>($r3);

     label012:
        $r30 = new java.lang.StringBuilder;

        varReplacer3202 = "versionFileName = ";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3202);

        varReplacer3183 = "version3_public_sdk_android_2_5_1.txt";

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3183);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3142 = "SKmaps";

        varReplacer3143 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3142, $r3, varReplacer3143);

        $r8 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: com.skobbler.ngx.map.SKMapViewStyle getCurrentMapViewStyle()>();

        if $r8 == null goto label103;

        $r10 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail getStyleDetail()>();

        if $r10 != null goto label055;

        $r10 = staticinvoke <com.skobbler.ngx.util.SKUtils: com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail getStyleDetailForDevice()>();

     label013:
        $r11 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: com.skobbler.ngx.navigation.SKAdvisorSettings getAdvisorSettings()>();

        $r30 = new java.lang.StringBuilder;

        varReplacer3263 = "initializeLibraryWithSettings - SKAdvisorSettings =  ";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3263);

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3211 = "SKmaps";

        varReplacer3212 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3211, $r3, varReplacer3212);

        if $r11 == null goto label058;

        $r3 = virtualinvoke $r11.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getResourcePath()>();

        if $r3 == null goto label057;

        $r30 = new java.lang.StringBuilder;

        $r3 = virtualinvoke $r11.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getResourcePath()>();

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r11.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getAdvisorVoice()>();

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer3233 = "/advisor_configfiles/";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3233);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getAdvisorConfigPath()>();

        if $r12 == null goto label056;

        $r30 = new java.lang.StringBuilder;

        $r12 = virtualinvoke $r11.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getAdvisorConfigPath()>();

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);

        varReplacer3173 = "Visual/";

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3173);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getAdvisorConfigPath()>();

        $r14 = virtualinvoke $r11.<com.skobbler.ngx.navigation.SKAdvisorSettings: com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage getLanguage()>();

        $r15 = virtualinvoke $r14.<com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage: java.lang.String getValue()>();

        varReplacer3204 = 0;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void initadvisor(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>($r3, $r13, $r12, varReplacer3204, $r15);

     label014:
        $r30 = new java.lang.StringBuilder;

        $r3 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        varReplacer3210 = "/.Common/";

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3210);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: java.lang.String getResourceFolderPath()>();

        $r16 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: java.lang.String getStyleFileName()>();

        $r30 = new java.lang.StringBuilder;

        varReplacer3149 = "Map style json file ";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3149);

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        varReplacer3191 = " styleDetail = ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3191);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3225 = "SKmaps";

        varReplacer3226 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3225, $r13, varReplacer3226);

        $r17 = <com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail: com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail HIGH>;

        if $r10 != $r17 goto label059;

        $i0 = 96468992;

     label015:
        $r30 = new java.lang.StringBuilder;

        varReplacer3164 = "Style detail = ";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3164);

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        varReplacer3188 = " Road Cache ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3188);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer3252 = " POI cache = 4194304  SHAPE CACHE 50331648";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3252);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3162 = "SKmaps";

        varReplacer3163 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3162, $r13, varReplacer3163);

        $r30 = new java.lang.StringBuilder;

        $r13 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        varReplacer3169 = "/.Routing/";

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3169);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = new java.lang.StringBuilder;

        $r15 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>($r15);

        varReplacer3150 = "/.Shaders/";

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3150);

        $r15 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapDetailLevel()>();

        $r18 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity getDisplayPixelDensity()>();

        if $r18 != null goto label060;

        $r19 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r20 = virtualinvoke $r19.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r20.<android.util.DisplayMetrics: float density>;

        $r18 = staticinvoke <com.skobbler.ngx.util.SKUtils: com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity getDisplayDensity(float)>($f0);

     label016:
        $r21 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getPreinstalledMapsPath()>();

        if $r21 == null goto label017;

        $r21 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getPreinstalledMapsPath()>();

        varReplacer3238 = "";

        $z0 = virtualinvoke $r21.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer3238);

        if $z0 == 0 goto label017;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        varReplacer3151 = "/PreinstalledMaps";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3151);

        $r21 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: void setPreinstalledMapsPath(java.lang.String)>($r21);

     label017:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer3184 = "/";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3184);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapsPath()>();

        $r22 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getPreinstalledMapsPath()>();

        $r30 = new java.lang.StringBuilder;

        varReplacer3140 = "http://cache.sko.fm/ngxmaps/versioned/";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3140);

        $r23 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapDetailLevel()>();

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r23 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r10.<com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail: int getValue()>();

        $i2 = virtualinvoke $r10.<com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail: int getValue()>();

        $i3 = virtualinvoke $r18.<com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity: int getValue()>();

        varReplacer3214 = 1.0F;

        varReplacer3215 = 0;

        varReplacer3216 = 0;

        varReplacer3217 = 1;

        varReplacer3218 = 7;

        varReplacer3219 = 1;

        varReplacer3220 = "OSM.txt";

        varReplacer3221 = 50331648;

        varReplacer3222 = 4194304;

        varReplacer3223 = "version3_public_sdk_android_2_5_1.txt";

        varReplacer3224 = 1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void init(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,int,int,boolean,int,boolean,int,java.lang.String,int,java.lang.String,int,int,int,java.lang.String,boolean,java.lang.String,int)>($r3, $r12, $r16, $r21, $r22, $r23, varReplacer3214, varReplacer3215, varReplacer3215, varReplacer3217, varReplacer3218, varReplacer3217, $i1, $r13, $i2, varReplacer3220, $i0, varReplacer3221, varReplacer3222, varReplacer3223, varReplacer3217, $r15, $i3);

        $r30 = new java.lang.StringBuilder;

        varReplacer3201 = " commonResourcesPath:";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3201);

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3189 = "Resurse";

        varReplacer3190 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3189, $r3, varReplacer3190);

        varReplacer3264 = "http.proxyHost";

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer3264);

        varReplacer3246 = "http.proxyPort";

        $r12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer3246);

        varReplacer3170 = "http.proxyUser";

        $r13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer3170);

        varReplacer3165 = "http.proxyPassword";

        $r15 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer3165);

        if $r3 == null goto label061;

        varReplacer3245 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3245);

        if $z0 != 0 goto label061;

        r56 = new com.skobbler.ngx.SKProxySettings;

        $r24 = r56;

        specialinvoke r56.<com.skobbler.ngx.SKProxySettings: void <init>()>();

        if $r12 == null goto label018;

        varReplacer3262 = "";

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3262);

        if $z0 != 0 goto label018;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        virtualinvoke $r24.<com.skobbler.ngx.SKProxySettings: void setPort(int)>($i0);

     label018:
        virtualinvoke $r24.<com.skobbler.ngx.SKProxySettings: void setIp(java.lang.String)>($r3);

        virtualinvoke $r24.<com.skobbler.ngx.SKProxySettings: void setAuthentication(java.lang.String,java.lang.String)>($r13, $r15);

     label019:
        if $r24 == null goto label063;

        $r3 = virtualinvoke $r24.<com.skobbler.ngx.SKProxySettings: java.lang.String getUser()>();

        varReplacer3250 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3250);

        if $z0 != 0 goto label062;

        $r3 = virtualinvoke $r24.<com.skobbler.ngx.SKProxySettings: java.lang.String getPassword()>();

        varReplacer3171 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3171);

        if $z0 != 0 goto label062;

        $z0 = 1;

     label020:
        $r3 = virtualinvoke $r24.<com.skobbler.ngx.SKProxySettings: java.lang.String getIp()>();

        $i0 = virtualinvoke $r24.<com.skobbler.ngx.SKProxySettings: int getPort()>();

        $r12 = virtualinvoke $r24.<com.skobbler.ngx.SKProxySettings: java.lang.String getUser()>();

        $r13 = virtualinvoke $r24.<com.skobbler.ngx.SKProxySettings: java.lang.String getPassword()>();

        varReplacer3268 = 0;

        varReplacer3269 = "";

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean setproxy(int,java.lang.String,java.lang.String,int,boolean,java.lang.String,java.lang.String)>(varReplacer3268, varReplacer3269, $r3, $i0, $z0, $r12, $r13);

     label021:
        $l4 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: long getCacheLimit()>();

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean setcachelimit(long)>($l4);

        $i0 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: int getConnectivityMode()>();

        if $i0 != 1 goto label064;

        $z0 = 1;

     label022:
        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setonline(boolean)>($z0);

        varReplacer3234 = "phone";

        $r25 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer3234);

        $r26 = (android.telephony.TelephonyManager) $r25;

        $r3 = null;

     label023:
        varReplacer3232 = "wifi";

        $r25 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer3232);

     label024:
        $r27 = (android.net.wifi.WifiManager) $r25;

        if $r27 == null goto label029;

     label025:
        $r28 = virtualinvoke $r27.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

     label026:
        if $r28 == null goto label029;

     label027:
        $r28 = virtualinvoke $r27.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r12 = virtualinvoke $r28.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

     label028:
        $r0.<com.skobbler.ngx.SKMaps: java.lang.String f> = $r12;

     label029:
        if $r26 == null goto label102;

     label030:
        $r12 = virtualinvoke $r26.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label031:
        $r13 = virtualinvoke $r26.<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>();

     label032:
        $r3 = $r13;

     label033:
        $r15 = null;

     label034:
        $r29 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer3207 = "android_id";

        $r13 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r29, varReplacer3207);

        $r30 = new java.lang.StringBuilder;

        $r9 = $r30;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r16 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String f>;

        if $r16 == null goto label035;

        $r16 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String f>;

        $i0 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i0 <= 0 goto label035;

        $r16 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String f>;

        $r16 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r16);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label035:
        varReplacer3172 = ";";

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3172);

        if $r15 == null goto label087;

        $r3 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r15);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label036:
        varReplacer3260 = ";";

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3260);

        if $r13 == null goto label037;

        varReplacer3174 = "9774d56d682e549c";

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3174);

        if $z0 != 0 goto label037;

        $i0 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i0 <= 0 goto label037;

        $r3 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r13);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label037:
        r57 = new java.lang.StringBuilder;

        varReplacer3138 = "UID = ";

        specialinvoke r57.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3138);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r30 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3208 = "SKmaps";

        varReplacer3209 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3208, $r3, varReplacer3209);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<com.skobbler.ngx.SKMaps: java.lang.String g> = $r3;

        $r31 = newarray (java.lang.String)[5];

        $r32 = newarray (java.lang.String)[5];

        $r31[0] = "osName";

        $r31[1] = "osVer";

        $r31[2] = "appName";

        $r31[3] = "appVer";

        $r32[0] = "android";

        $r3 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r32[1] = $r3;

     label038:
        $r5 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

     label039:
        $i0 = $r5.<android.content.pm.ApplicationInfo: int labelRes>;

     label040:
        $r3 = virtualinvoke $r1.<android.content.Context: java.lang.String getString(int)>($i0);

     label041:
        $r4 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r12 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer3251 = 0;

        $r33 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r12, varReplacer3251);

     label042:
        $r12 = $r33.<android.content.pm.PackageInfo: java.lang.String versionName>;

        if $r12 != null goto label047;

        r58 = new com.skobbler.ngx.SKMapsInitializationException;

     label043:
        varReplacer3203 = " SKMaps was not initialized. Please add in AndroidManifest.xml  android:versionName !!!! ";

        specialinvoke r58.<com.skobbler.ngx.SKMapsInitializationException: void <init>(java.lang.String)>(varReplacer3203);

     label044:
        throw r58;

     label045:
        $r34 := @caughtexception;

     label046:
        r65 = (android.content.pm.PackageManager$NameNotFoundException) $r34;

        virtualinvoke r65.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

     label047:
        $r35 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        virtualinvoke $r35.<com.skobbler.ngx.SKMapsInitSettings: void setAppName(java.lang.String)>($r3);

        $r35 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        virtualinvoke $r35.<com.skobbler.ngx.SKMapsInitSettings: void setAppVersion(java.lang.String)>($r12);

        $r32[2] = $r3;

        $r32[3] = $r12;

        $r31[4] = "uid";

        $r3 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String g>;

        $r32[4] = $r3;

        $i0 = 0;

     label048:
        if $i0 >= 5 goto label090;

        $r30 = new java.lang.StringBuilder;

        varReplacer3152 = "i =  ";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3152);

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer3261 = " key = ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3261);

        $r3 = $r31[$i0];

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer3256 = " , value = ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3256);

        $r3 = $r32[$i0];

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3235 = "SKmaps";

        varReplacer3236 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3235, $r3, varReplacer3236);

        $i0 = $i0 + 1;

        goto label048;

     label049:
        $r0.<com.skobbler.ngx.SKMaps: java.lang.String c> = $r3;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String c>;

     label050:
        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setdeveloperkey(java.lang.String)>($r3);

     label051:
        goto label011;

     label052:
        r55 = new com.skobbler.ngx.SKDeveloperKeyException;

     label053:
        specialinvoke r55.<com.skobbler.ngx.SKDeveloperKeyException: void <init>()>();

     label054:
        throw r55;

     label055:
        $r10 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail getStyleDetail()>();

        goto label013;

     label056:
        varReplacer3195 = "SKmaps";

        varReplacer3196 = "@initializeLibraryWithSettings - advisorConfigPath was not set for SKAdvisorSettings ";

        varReplacer3197 = 1;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3195, varReplacer3196, varReplacer3197);

        goto label014;

     label057:
        varReplacer3227 = "SKmaps";

        varReplacer3228 = "@initializeLibraryWithSettings - resourcesPath was not set for SKAdvisorSettings ";

        varReplacer3229 = 1;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3227, varReplacer3228, varReplacer3229);

        goto label014;

     label058:
        varReplacer3177 = "SKmaps";

        varReplacer3178 = "@initializeLibraryWithSettings - Advisor could not be initialized. Check if advisorSettings was set in SKMapInitSettings ";

        varReplacer3179 = 1;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3177, varReplacer3178, varReplacer3179);

        goto label014;

     label059:
        $i0 = 67108864;

        goto label015;

     label060:
        $r18 = virtualinvoke $r8.<com.skobbler.ngx.map.SKMapViewStyle: com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity getDisplayPixelDensity()>();

        goto label016;

     label061:
        $r30 = new java.lang.StringBuilder;

        varReplacer3144 = "found proxyUser: ";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3144);

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        varReplacer3145 = ", proxyPassword: ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3145);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3159 = "SKmaps";

        varReplacer3160 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3159, $r3, varReplacer3160);

        $r24 = null;

        goto label019;

     label062:
        $z0 = 0;

        goto label020;

     label063:
        varReplacer3185 = 0;

        varReplacer3186 = 0;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean enableproxy(int,boolean)>(varReplacer3185, varReplacer3185);

        goto label021;

     label064:
        $z0 = 0;

        goto label022;

     label065:
        $r36 := @caughtexception;

        varReplacer3166 = "SKmaps";

        varReplacer3167 = "The app doesn\'t have android.permission.ACCESS_WIFI_STATE in manifest";

        varReplacer3168 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3166, varReplacer3167, varReplacer3168);

        goto label029;

     label066:
        $r37 := @caughtexception;

        $r12 = null;

     label067:
        $r30 = new java.lang.StringBuilder;

        varReplacer3158 = " SecurityException ";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3158);

        r66 = (java.lang.SecurityException) $r37;

        $r13 = virtualinvoke r66.<java.lang.SecurityException: java.lang.String getLocalizedMessage()>();

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3180 = "SKmaps";

        varReplacer3181 = 2;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3180, $r13, varReplacer3181);

        $r30 = new java.lang.StringBuilder;

        $r9 = $r30;

        $r35 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

     label068:
        $r13 = virtualinvoke $r35.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        varReplacer3237 = "/.Common/";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3237);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label069:
        $r41 = new java.io.File;

        $r38 = $r41;

        $r30 = new java.lang.StringBuilder;

        $r9 = $r30;

     label070:
        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        varReplacer3153 = "/.randomId.txt";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3153);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.io.File: void <init>(java.lang.String)>($r13);

        $z0 = virtualinvoke $r38.<java.io.File: boolean exists()>();

     label071:
        if $z0 != 0 goto label080;

     label072:
        $r39 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r13 = virtualinvoke $r39.<java.util.UUID: java.lang.String toString()>();

     label073:
        $r15 = $r13;

        r59 = new java.io.FileWriter;

        $r40 = r59;

     label074:
        $r41 = virtualinvoke $r38.<java.io.File: java.io.File getAbsoluteFile()>();

        specialinvoke r59.<java.io.FileWriter: void <init>(java.io.File)>($r41);

     label075:
        r60 = new java.io.BufferedWriter;

        $r42 = r60;

     label076:
        specialinvoke r60.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r40);

        virtualinvoke $r42.<java.io.BufferedWriter: void write(java.lang.String)>($r13);

        virtualinvoke $r42.<java.io.BufferedWriter: void close()>();

        virtualinvoke $r38.<java.io.File: boolean createNewFile()>();

     label077:
        goto label034;

     label078:
        $r43 := @caughtexception;

     label079:
        r67 = (java.io.IOException) $r43;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        varReplacer3146 = "SKmaps";

        varReplacer3147 = "Failed installing files";

        varReplacer3148 = 2;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3146, varReplacer3147, varReplacer3148);

        goto label034;

     label080:
        r61 = new java.io.FileReader;

        $r44 = r61;

     label081:
        specialinvoke r61.<java.io.FileReader: void <init>(java.io.File)>($r38);

     label082:
        r62 = new java.io.BufferedReader;

        $r45 = r62;

     label083:
        specialinvoke r62.<java.io.BufferedReader: void <init>(java.io.Reader)>($r44);

        $r13 = virtualinvoke $r45.<java.io.BufferedReader: java.lang.String readLine()>();

     label084:
        $r15 = $r13;

     label085:
        virtualinvoke $r44.<java.io.FileReader: void close()>();

     label086:
        goto label034;

     label087:
        if $r12 == null goto label088;

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i0 <= 0 goto label088;

        $r12 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r12);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label088:
        varReplacer3249 = ";";

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3249);

        if $r3 == null goto label036;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label036;

        $r3 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r3);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label036;

     label089:
        $r46 := @caughtexception;

        r68 = (android.content.res.Resources$NotFoundException) $r46;

        virtualinvoke r68.<android.content.res.Resources$NotFoundException: void printStackTrace()>();

        r58 = new com.skobbler.ngx.SKMapsInitializationException;

        varReplacer3242 = " SKMaps was not initialized. Please add in strings.xml app_name key !!!! ";

        specialinvoke r58.<com.skobbler.ngx.SKMapsInitializationException: void <init>(java.lang.String)>(varReplacer3242);

        throw r58;

     label090:
        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setrequestparameters(java.lang.String[],java.lang.String[])>($r31, $r32);

        $r17 = <com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail: com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail HIGH>;

        if $r10 == $r17 goto label091;

        varReplacer3137 = 1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setsearchfromfiles(boolean)>(varReplacer3137);

     label091:
        staticinvoke <com.skobbler.ngx.versioning.SKVersioningManager: com.skobbler.ngx.versioning.SKVersioningManager getInstance()>();

        varReplacer3175 = 3;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean updatemapversion(int)>(varReplacer3175);

        $r35 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r3 = virtualinvoke $r35.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getAppName()>();

        $r35 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r12 = virtualinvoke $r35.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getAppVersion()>();

        $r13 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String g>;

        r63 = new android.util.DisplayMetrics;

        specialinvoke r63.<android.util.DisplayMetrics: void <init>()>();

        varReplacer3257 = "window";

        $r25 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer3257);

        $r47 = (android.view.WindowManager) $r25;

        $r48 = interfaceinvoke $r47.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r48.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r63);

        $r48 = interfaceinvoke $r47.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r48.<android.view.Display: int getRotation()>();

        lookupswitch($i0)
        {
            case 0: goto label094;
            case 1: goto label095;
            case 2: goto label096;
            case 3: goto label097;
            default: goto label092;
        };

     label092:
        $r49 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType UNKNOWN>;

        $i0 = virtualinvoke $r49.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

     label093:
        $r15 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r16 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r21 = <android.os.Build: java.lang.String MODEL>;

        $r50 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r22 = virtualinvoke $r50.<java.util.Locale: java.lang.String getLanguage()>();

        $r35 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r23 = virtualinvoke $r35.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        $r30 = new java.lang.StringBuilder;

        varReplacer3230 = "INITIALIZE FCD  accountKey=";

        specialinvoke $r30.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3230);

        varReplacer3259 = "";

        $r9 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3259);

        varReplacer3205 = " locale= ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3205);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        varReplacer3240 = " macAddress=";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3240);

        $r51 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String f>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        varReplacer3192 = " osName=";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3192);

        varReplacer3247 = "android";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3247);

        varReplacer3258 = " osVersion=";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3258);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        varReplacer3213 = " deviceMaker =";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3213);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        varReplacer3187 = " deviceModel=";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3187);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        varReplacer3239 = " orientation= ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3239);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer3161 = "  appid=";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3161);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        varReplacer3193 = " appName=";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3193);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer3231 = " appVersion=";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3231);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer3243 = " serverUrl=";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3243);

        varReplacer3176 = "http://tor.skobbler.net/tor";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3176);

        $r51 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3154 = "SKmaps";

        varReplacer3155 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3154, $r51, varReplacer3155);

        $r51 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String g>;

        varReplacer3265 = "";

        varReplacer3266 = "http://tor.skobbler.net/tor";

        varReplacer3267 = "android";

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void initfcd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(varReplacer3265, $r22, $r23, varReplacer3266, $r51, varReplacer3267, $r15, $r16, $r21, $i0, $r13, $r3, $r12);

        $r52 = staticinvoke <com.skobbler.ngx.routing.SKRouteManager: com.skobbler.ngx.routing.SKRouteManager getInstance()>();

        $r11 = virtualinvoke $r2.<com.skobbler.ngx.SKMapsInitSettings: com.skobbler.ngx.navigation.SKAdvisorSettings getAdvisorSettings()>();

        virtualinvoke $r52.<com.skobbler.ngx.routing.SKRouteManager: boolean setAudioAdvisorSettings(com.skobbler.ngx.navigation.SKAdvisorSettings)>($r11);

        varReplacer3253 = "SKmaps";

        varReplacer3254 = "PASSED INITALIZE WITH SETTINGS";

        varReplacer3255 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer3253, varReplacer3254, varReplacer3255);

        return;

     label094:
        $r49 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType PORTRAIT>;

        $i0 = virtualinvoke $r49.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

        goto label093;

     label095:
        $r49 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType LANDSCAPE_RIGHT>;

        $i0 = virtualinvoke $r49.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

        goto label093;

     label096:
        $r49 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType PORTRAIT_UPSIDEDOWN>;

        $i0 = virtualinvoke $r49.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

        goto label093;

     label097:
        $r49 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType LANDSCAPE_LEFT>;

        $i0 = virtualinvoke $r49.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

        goto label093;

     label098:
        r64 = new com.skobbler.ngx.SKMapsPathsNotInitializedException;

        specialinvoke r64.<com.skobbler.ngx.SKMapsPathsNotInitializedException: void <init>()>();

        throw r64;

     label099:
        $r53 := @caughtexception;

        $r12 = "";

        $r34 = $r53;

        goto label046;

     label100:
        $r54 := @caughtexception;

        $r43 = $r54;

        $r15 = null;

        goto label079;

     label101:
        $r37 := @caughtexception;

        goto label067;

     label102:
        $r3 = null;

        $r12 = null;

        goto label033;

     label103:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label001 to label002 with label010;
        catch android.content.pm.PackageManager$NameNotFoundException from label003 to label004 with label010;
        catch android.content.pm.PackageManager$NameNotFoundException from label005 to label006 with label010;
        catch android.content.pm.PackageManager$NameNotFoundException from label008 to label009 with label010;
        catch java.lang.SecurityException from label023 to label024 with label065;
        catch java.lang.SecurityException from label025 to label026 with label065;
        catch java.lang.SecurityException from label027 to label028 with label065;
        catch java.lang.SecurityException from label030 to label031 with label066;
        catch java.lang.SecurityException from label031 to label032 with label101;
        catch android.content.res.Resources$NotFoundException from label038 to label039 with label089;
        catch android.content.res.Resources$NotFoundException from label040 to label041 with label089;
        catch android.content.pm.PackageManager$NameNotFoundException from label041 to label042 with label099;
        catch android.content.pm.PackageManager$NameNotFoundException from label043 to label044 with label045;
        catch android.content.pm.PackageManager$NameNotFoundException from label050 to label051 with label010;
        catch android.content.pm.PackageManager$NameNotFoundException from label053 to label054 with label010;
        catch java.io.IOException from label068 to label069 with label100;
        catch java.io.IOException from label070 to label071 with label100;
        catch java.io.IOException from label072 to label073 with label100;
        catch java.io.IOException from label074 to label075 with label078;
        catch java.io.IOException from label076 to label077 with label078;
        catch java.io.IOException from label081 to label082 with label100;
        catch java.io.IOException from label083 to label084 with label100;
        catch java.io.IOException from label085 to label086 with label078;
    }

    public final boolean isSKMapsInitialized()
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean z0;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        z0 = $r0.<com.skobbler.ngx.SKMaps: boolean b>;

        return z0;
    }

    public final void setApiKey(java.lang.String)
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        com.skobbler.ngx.SKDeveloperKeyException $r2;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label2;

     label1:
        $r2 = new com.skobbler.ngx.SKDeveloperKeyException;

        specialinvoke $r2.<com.skobbler.ngx.SKDeveloperKeyException: void <init>()>();

        throw $r2;

     label2:
        $r3 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String c>;

        if $r3 != null goto label3;

        $r0.<com.skobbler.ngx.SKMaps: java.lang.String c> = $r1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setdeveloperkey(java.lang.String)>($r1);

        return;

     label3:
        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>("SKmaps", "The Developer key is already set!", 2);

        return;
    }

    public final void setConnectivityMode(byte)
    {
        com.skobbler.ngx.SKMaps $r0;
        byte $b0;
        boolean $z0;
        com.skobbler.ngx.SKMapsInitializationException $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $b0 := @parameter0: byte;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label2;

        if $b0 != 1 goto label1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setonline(boolean)>(1);

        return;

     label1:
        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setonline(boolean)>(0);

        return;

     label2:
        $r1 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r1.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r1;
    }

    public final void setDownloadListener(com.skobbler.ngx.SKMapsDownloadListener)
    {
        com.skobbler.ngx.SKMaps $r0;
        com.skobbler.ngx.SKMapsDownloadListener $r1;
        boolean $z0;
        com.skobbler.ngx.SKMapsInitializationException $r2;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: com.skobbler.ngx.SKMapsDownloadListener;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label1;

        $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsDownloadListener e> = $r1;

        return;

     label1:
        $r2 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r2.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r2;
    }

    public final void setOnlineConnectionNotificationDelay(int)
    {
        com.skobbler.ngx.SKMaps $r0;
        int $i0;
        boolean $z0;
        com.skobbler.ngx.SKMapsInitializationException $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setneedonlineconnectiondelay(int)>($i0);

        return;

     label1:
        $r1 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r1.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r1;
    }

    public final boolean setProxy(com.skobbler.ngx.SKProxySettings)
    {
        com.skobbler.ngx.SKMaps $r0;
        com.skobbler.ngx.SKProxySettings $r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r4, $r5;
        int $i0, $i1;
        com.skobbler.ngx.SKMapsInitializationException $r6;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: com.skobbler.ngx.SKProxySettings;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getUser()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getPassword()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        $i0 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: int getProxyType()>();

        $r2 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getMask()>();

        $r3 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getIp()>();

        $i1 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: int getPort()>();

        $r4 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getUser()>();

        $r5 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getPassword()>();

        $z0 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean setproxy(int,java.lang.String,java.lang.String,int,boolean,java.lang.String,java.lang.String)>($i0, $r2, $r3, $i1, $z0, $r4, $r5);

        return $z0;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $r6 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r6.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r6;
    }

    public final int unzipFile(java.lang.String, java.lang.String)
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String $r1, $r2;
        int $i0;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: int unzipfile(java.lang.String,java.lang.String)>($r1, $r2);

        return $i0;
    }
}
