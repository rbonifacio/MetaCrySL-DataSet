public class com.iLivery.Util.GoogleBusiness extends java.lang.Object
{
    private static byte[] key;
    private static java.lang.String keyString;
    private static java.lang.String urlString;

    public void <init>()
    {
        com.iLivery.Util.GoogleBusiness $r0;

        nop;

        $r0 := @this: com.iLivery.Util.GoogleBusiness;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String returnURL(java.lang.String, java.lang.String, java.lang.String)
    {
        com.iLivery.Util.GoogleBusiness $r0;
        java.lang.String $r1, $r2, $r3, varReplacer5241, varReplacer5249, varReplacer5253, varReplacer5254, varReplacer5255, varReplacer5256, varReplacer5257;
        java.lang.Exception $r4;
        javax.crypto.spec.SecretKeySpec $r5;
        java.net.URL $r6;
        java.lang.StringBuilder $r7;
        byte[] $r8;
        javax.crypto.Mac $r9;
        int varReplacer5242, varReplacer5243, varReplacer5244, varReplacer5245, varReplacer5246, varReplacer5247, varReplacer5248, varReplacer5250, varReplacer5251, varReplacer5252, varReplacer5258;

        nop;

        $r0 := @this: com.iLivery.Util.GoogleBusiness;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        <com.iLivery.Util.GoogleBusiness: java.lang.String keyString> = $r3;

        $r7 = new java.lang.StringBuilder;

     label01:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        varReplacer5253 = "&client=";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5253);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        <com.iLivery.Util.GoogleBusiness: java.lang.String urlString> = $r1;

        $r6 = new java.net.URL;

        $r1 = <com.iLivery.Util.GoogleBusiness: java.lang.String urlString>;

     label03:
        specialinvoke $r6.<java.net.URL: void <init>(java.lang.String)>($r1);

     label04:
        $r1 = <com.iLivery.Util.GoogleBusiness: java.lang.String keyString>;

     label05:
        varReplacer5247 = 45;

        varReplacer5248 = 43;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(varReplacer5247, varReplacer5248);

        varReplacer5245 = 95;

        varReplacer5246 = 47;

        virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(varReplacer5245, varReplacer5246);

     label06:
        $r1 = <com.iLivery.Util.GoogleBusiness: java.lang.String keyString>;

     label07:
        varReplacer5258 = 1;

        $r8 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, varReplacer5258);

     label08:
        <com.iLivery.Util.GoogleBusiness: byte[] key> = $r8;

        $r7 = new java.lang.StringBuilder;

     label09:
        $r1 = virtualinvoke $r6.<java.net.URL: java.lang.String getPath()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        varReplacer5244 = 63;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer5244);

        $r1 = virtualinvoke $r6.<java.net.URL: java.lang.String getQuery()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r5 = new javax.crypto.spec.SecretKeySpec;

        $r8 = <com.iLivery.Util.GoogleBusiness: byte[] key>;

     label11:
        varReplacer5241 = "HmacSHA1";

        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer5241);

        varReplacer5255 = "HmacSHA1";

        $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5255);

        virtualinvoke $r9.<javax.crypto.Mac: void init(java.security.Key)>($r5);

        $r8 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r8 = virtualinvoke $r9.<javax.crypto.Mac: byte[] doFinal(byte[])>($r8);

        varReplacer5250 = 0;

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r8, varReplacer5250);

        varReplacer5242 = 43;

        varReplacer5243 = 45;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(varReplacer5242, varReplacer5243);

        varReplacer5251 = 47;

        varReplacer5252 = 95;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(varReplacer5251, varReplacer5252);

     label12:
        $r7 = new java.lang.StringBuilder;

     label13:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        varReplacer5249 = "&signature=";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5249);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $r7 = new java.lang.StringBuilder;

     label15:
        $r2 = virtualinvoke $r6.<java.net.URL: java.lang.String getProtocol()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        varReplacer5254 = "://";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5254);

        $r2 = virtualinvoke $r6.<java.net.URL: java.lang.String getHost()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        return $r1;

     label17:
        $r4 := @caughtexception;

        $r1 = virtualinvoke $r4.<java.lang.Exception: java.lang.String toString()>();

        varReplacer5256 = "iLivery";

        staticinvoke <com.iLivery.Util.MyLog: void e(java.lang.String,java.lang.String)>(varReplacer5256, $r1);

        varReplacer5257 = "";

        return varReplacer5257;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    public java.lang.String signRequest(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.io.UnsupportedEncodingException, java.net.URISyntaxException
    {
        com.iLivery.Util.GoogleBusiness $r0;
        java.lang.String $r1, $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        java.lang.StringBuilder $r4;
        byte[] $r5;
        javax.crypto.Mac $r6;

        $r0 := @this: com.iLivery.Util.GoogleBusiness;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new javax.crypto.spec.SecretKeySpec;

        $r5 = <com.iLivery.Util.GoogleBusiness: byte[] key>;

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, "HmacSHA1");

        $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacSHA1");

        virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r3);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r5 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5);

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r5, 0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(43, 45);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(47, 95);

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&signature=");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
