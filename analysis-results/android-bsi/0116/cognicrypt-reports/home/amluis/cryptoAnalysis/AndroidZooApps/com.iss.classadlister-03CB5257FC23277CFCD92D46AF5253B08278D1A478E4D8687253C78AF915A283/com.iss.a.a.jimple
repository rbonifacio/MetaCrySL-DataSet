public class com.iss.a.a extends java.lang.Object
{
    private java.lang.String a;
    private java.lang.String b;
    private java.lang.String c;
    private java.lang.String d;
    private javax.crypto.spec.SecretKeySpec e;
    private javax.crypto.Mac f;

    private void <init>()
    {
        com.iss.a.a $r0;
        null_type varReplacer630, varReplacer631, varReplacer632, varReplacer634, varReplacer635;
        java.lang.String varReplacer633;

        nop;

        $r0 := @this: com.iss.a.a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer633 = "";

        $r0.<com.iss.a.a: java.lang.String a> = varReplacer633;

        varReplacer632 = null;

        $r0.<com.iss.a.a: java.lang.String b> = varReplacer632;

        varReplacer634 = null;

        $r0.<com.iss.a.a: java.lang.String c> = varReplacer634;

        varReplacer635 = null;

        $r0.<com.iss.a.a: java.lang.String d> = varReplacer635;

        varReplacer630 = null;

        $r0.<com.iss.a.a: javax.crypto.spec.SecretKeySpec e> = varReplacer630;

        varReplacer631 = null;

        $r0.<com.iss.a.a: javax.crypto.Mac f> = varReplacer631;

        return;
    }

    public static com.iss.a.a a(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3, varReplacer584, varReplacer585, varReplacer586, varReplacer587, varReplacer588, varReplacer589, varReplacer590;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        com.iss.a.a $r5;
        byte[] $r6;
        javax.crypto.spec.SecretKeySpec $r7;
        javax.crypto.Mac $r8;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        varReplacer587 = "endpoint is null or empty";

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer587);

        throw $r4;

     label1:
        if $r2 == null goto label2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        varReplacer588 = "awsAccessKeyId is null or empty";

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer588);

        throw $r4;

     label3:
        if $r3 == null goto label4;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label5;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        varReplacer590 = "awsSecretKey is null or empty";

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer590);

        throw $r4;

     label5:
        if $r1 != null goto label6;

        $r4 = new java.lang.IllegalArgumentException;

        varReplacer586 = "requestUri is null";

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer586);

        throw $r4;

     label6:
        $r5 = new com.iss.a.a;

        specialinvoke $r5.<com.iss.a.a: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r5.<com.iss.a.a: java.lang.String b> = $r0;

        $r5.<com.iss.a.a: java.lang.String c> = $r2;

        $r5.<com.iss.a.a: java.lang.String d> = $r3;

        $r5.<com.iss.a.a: java.lang.String a> = $r1;

        $r0 = $r5.<com.iss.a.a: java.lang.String d>;

        varReplacer585 = "UTF-8";

        $r6 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer585);

        $r7 = new javax.crypto.spec.SecretKeySpec;

        varReplacer584 = "HmacSHA256";

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer584);

        $r5.<com.iss.a.a: javax.crypto.spec.SecretKeySpec e> = $r7;

        varReplacer589 = "HmacSHA256";

        $r8 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer589);

        $r5.<com.iss.a.a: javax.crypto.Mac f> = $r8;

        $r8 = $r5.<com.iss.a.a: javax.crypto.Mac f>;

        $r7 = $r5.<com.iss.a.a: javax.crypto.spec.SecretKeySpec e>;

        virtualinvoke $r8.<javax.crypto.Mac: void init(java.security.Key)>($r7);

        return $r5;
    }

    private java.lang.String a()
    {
        com.iss.a.a $r0;
        java.text.SimpleDateFormat $r1;
        java.util.Calendar $r2;
        java.util.TimeZone $r3;
        java.util.Date $r4;
        java.lang.String $r5, varReplacer607, varReplacer608;

        nop;

        $r0 := @this: com.iss.a.a;

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r1 = new java.text.SimpleDateFormat;

        varReplacer608 = "yyyy-MM-dd\'T\'HH:mm:ss\'Z\'";

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(varReplacer608);

        varReplacer607 = "GMT";

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(varReplacer607);

        virtualinvoke $r1.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r3);

        $r4 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        $r5 = virtualinvoke $r1.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r4);

        return $r5;
    }

    private java.lang.String a(java.util.SortedMap)
    {
        com.iss.a.a $r0;
        java.util.SortedMap $r1;
        java.lang.StringBuffer $r2;
        boolean $z0;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.String $r5, varReplacer609, varReplacer610, varReplacer611;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;

        nop;

        $r0 := @this: com.iss.a.a;

        $r1 := @parameter0: java.util.SortedMap;

        $z0 = interfaceinvoke $r1.<java.util.SortedMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        varReplacer611 = "";

        return varReplacer611;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.SortedMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;

     label3:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r6;

        $r5 = specialinvoke $r0.<com.iss.a.a: java.lang.String c(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        varReplacer610 = "=";

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer610);

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.lang.String) $r6;

        $r5 = specialinvoke $r0.<com.iss.a.a: java.lang.String c(java.lang.String)>($r5);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        varReplacer609 = "&";

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer609);

        goto label2;
    }

    private java.lang.String b(java.lang.String)
    {
        com.iss.a.a $r0;
        java.lang.String $r1, varReplacer612, varReplacer613;
        byte[] $r2;
        javax.crypto.Mac $r3;
        org.apache.commons.codec.binary.Base64 $r4;
        java.lang.Throwable $r5;
        java.lang.RuntimeException $r6;

        nop;

        $r0 := @this: com.iss.a.a;

        $r1 := @parameter0: java.lang.String;

     label1:
        varReplacer613 = "UTF-8";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer613);

     label2:
        $r3 = $r0.<com.iss.a.a: javax.crypto.Mac f>;

     label3:
        $r2 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2);

     label4:
        $r4 = new org.apache.commons.codec.binary.Base64;

     label5:
        specialinvoke $r4.<org.apache.commons.codec.binary.Base64: void <init>()>();

     label6:
        $r1 = new java.lang.String;

     label7:
        $r2 = virtualinvoke $r4.<org.apache.commons.codec.binary.Base64: byte[] encode(byte[])>($r2);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

     label8:
        return $r1;

     label9:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        varReplacer612 = "UTF-8 is unsupported!";

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer612, $r5);

        throw $r6;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label9;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label9;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label9;
        catch java.io.UnsupportedEncodingException from label7 to label8 with label9;
    }

    private java.lang.String c(java.lang.String)
    {
        com.iss.a.a $r0;
        java.lang.String $r1, $r2, varReplacer614, varReplacer615, varReplacer616, varReplacer617, varReplacer618, varReplacer619, varReplacer620;
        java.lang.Throwable $r3;

        nop;

        $r0 := @this: com.iss.a.a;

        $r1 := @parameter0: java.lang.String;

     label1:
        varReplacer620 = "UTF-8";

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, varReplacer620);

        varReplacer614 = "+";

        varReplacer615 = "%20";

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer614, varReplacer615);

        varReplacer618 = "*";

        varReplacer619 = "%2A";

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer618, varReplacer619);

        varReplacer616 = "%7E";

        varReplacer617 = "~";

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer616, varReplacer617);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private java.util.Map d(java.lang.String)
    {
        com.iss.a.a $r0;
        java.lang.String $r1, $r5, varReplacer592, varReplacer593, varReplacer594, varReplacer596, varReplacer598;
        java.util.HashMap $r2;
        int $i0, $i1, $i2, $i3, varReplacer595, varReplacer597;
        java.lang.String[] $r3, $r4;
        char $c4;
        java.lang.Throwable $r6;

        nop;

        $r0 := @this: com.iss.a.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        varReplacer596 = "&";

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer596);

        $i0 = lengthof $r3;

        $i1 = 0;

     label01:
        if $i1 < $i0 goto label02;

        return $r2;

     label02:
        $r1 = $r3[$i1];

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i2 >= 1 goto label04;

     label03:
        $i1 = $i1 + 1;

        goto label01;

     label04:
        varReplacer594 = "=";

        varReplacer595 = 2;

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(varReplacer594, varReplacer595);

        $i2 = 0;

     label05:
        $i3 = lengthof $r4;

        if $i2 < $i3 goto label08;

        $i2 = lengthof $r4;

        lookupswitch($i2)
        {
            case 1: goto label07;
            case 2: goto label13;
            default: goto label06;
        };

     label06:
        goto label03;

     label07:
        varReplacer597 = 0;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(varReplacer597);

        if $c4 != 61 goto label12;

        $r1 = $r4[0];

        varReplacer592 = "";

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer592, $r1);

        goto label03;

     label08:
        $r5 = $r4[$i2];

     label09:
        varReplacer593 = "UTF-8";

        $r5 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r5, varReplacer593);

     label10:
        $r4[$i2] = $r5;

     label11:
        $i2 = $i2 + 1;

        goto label05;

     label12:
        $r1 = $r4[0];

        varReplacer598 = "";

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, varReplacer598);

        goto label03;

     label13:
        $r1 = $r4[0];

        $r5 = $r4[1];

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

        goto label03;

     label14:
        $r6 := @caughtexception;

        goto label11;

        catch java.io.UnsupportedEncodingException from label09 to label10 with label14;
    }

    public java.lang.String a(java.lang.String)
    {
        com.iss.a.a $r0;
        java.lang.String $r1;
        java.util.Map $r2;

        nop;

        $r0 := @this: com.iss.a.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke $r0.<com.iss.a.a: java.util.Map d(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<com.iss.a.a: java.lang.String a(java.util.Map)>($r2);

        return $r1;
    }

    public java.lang.String a(java.util.Map)
    {
        com.iss.a.a $r0;
        java.util.Map $r1;
        java.lang.String $r2, $r5, $r6, varReplacer599, varReplacer600, varReplacer601, varReplacer602, varReplacer603, varReplacer604, varReplacer605, varReplacer606;
        java.util.TreeMap $r3;
        java.lang.StringBuilder $r4;

        nop;

        $r0 := @this: com.iss.a.a;

        $r1 := @parameter0: java.util.Map;

        $r2 = $r0.<com.iss.a.a: java.lang.String c>;

        varReplacer601 = "AWSAccessKeyId";

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer601, $r2);

        $r2 = specialinvoke $r0.<com.iss.a.a: java.lang.String a()>();

        varReplacer603 = "Timestamp";

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer603, $r2);

        $r3 = new java.util.TreeMap;

        specialinvoke $r3.<java.util.TreeMap: void <init>(java.util.Map)>($r1);

        $r2 = specialinvoke $r0.<com.iss.a.a: java.lang.String a(java.util.SortedMap)>($r3);

        $r4 = new java.lang.StringBuilder;

        varReplacer606 = "GET\n";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer606);

        $r5 = $r0.<com.iss.a.a: java.lang.String b>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer599 = "\n";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer599);

        $r5 = $r0.<com.iss.a.a: java.lang.String a>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer600 = "\n";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer600);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = specialinvoke $r0.<com.iss.a.a: java.lang.String b(java.lang.String)>($r5);

        $r5 = specialinvoke $r0.<com.iss.a.a: java.lang.String c(java.lang.String)>($r5);

        $r4 = new java.lang.StringBuilder;

        varReplacer604 = "https://";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer604);

        $r6 = $r0.<com.iss.a.a: java.lang.String b>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = $r0.<com.iss.a.a: java.lang.String a>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer605 = "?";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer605);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer602 = "&Signature=";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer602);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
