class com.treasuredata.android.TDJsonHandler extends java.lang.Object implements io.keen.client.java.KeenJsonHandler
{
    private static final com.treasuredata.android.TDJsonHandler$Base64Encoder DEFAULT_BASE64_ENCODER;
    private static final java.lang.String TAG;
    private static final java.nio.charset.Charset UTF8;
    private final com.treasuredata.android.TDJsonHandler$Base64Encoder base64Encoder;
    private final javax.crypto.Cipher cipher;
    private final com.c.a.b.a.a json;
    private javax.crypto.spec.SecretKeySpec secretKeySpec;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1, varReplacer3947;
        com.treasuredata.android.TDJsonHandler$1 $r2;
        java.nio.charset.Charset $r3;

        nop;

        $r0 = class "Lcom/treasuredata/android/TDJsonHandler;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.treasuredata.android.TDJsonHandler: java.lang.String TAG> = $r1;

        $r2 = new com.treasuredata.android.TDJsonHandler$1;

        specialinvoke $r2.<com.treasuredata.android.TDJsonHandler$1: void <init>()>();

        <com.treasuredata.android.TDJsonHandler: com.treasuredata.android.TDJsonHandler$Base64Encoder DEFAULT_BASE64_ENCODER> = $r2;

        varReplacer3947 = "UTF-8";

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(varReplacer3947);

        <com.treasuredata.android.TDJsonHandler: java.nio.charset.Charset UTF8> = $r3;

        return;
    }

    void <init>()
    {
        com.treasuredata.android.TDJsonHandler $r0;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        specialinvoke $r0.<com.treasuredata.android.TDJsonHandler: void <init>(java.lang.String)>(null);

        return;
    }

    void <init>(java.lang.String)
    {
        com.treasuredata.android.TDJsonHandler $r0;
        java.lang.String $r1;
        null_type varReplacer3948;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: java.lang.String;

        varReplacer3948 = null;

        specialinvoke $r0.<com.treasuredata.android.TDJsonHandler: void <init>(java.lang.String,com.treasuredata.android.TDJsonHandler$Base64Encoder)>($r1, varReplacer3948);

        return;
    }

    void <init>(java.lang.String, com.treasuredata.android.TDJsonHandler$Base64Encoder)
    {
        com.treasuredata.android.TDJsonHandler $r0;
        java.lang.String $r1, varReplacer3949, varReplacer3951, varReplacer3952;
        com.treasuredata.android.TDJsonHandler$Base64Encoder $r2;
        javax.crypto.Cipher $r3, $r8;
        java.security.MessageDigest $r4;
        byte[] $r5, $r6;
        int $i0, varReplacer3950;
        javax.crypto.spec.SecretKeySpec $r7;
        com.treasuredata.android.CustomizedJSON $r9;
        java.lang.Exception $r10, $r11;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.treasuredata.android.TDJsonHandler$Base64Encoder;

        $r3 = null;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        if $r1 == null goto label10;

     label01:
        varReplacer3949 = "MD5";

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3949);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r6;

        varReplacer3950 = 0;

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r5, varReplacer3950, $i0);

     label02:
        $r7 = new javax.crypto.spec.SecretKeySpec;

     label03:
        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        varReplacer3952 = "AES";

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3952);

     label04:
        varReplacer3951 = "AES/ECB/PKCS5Padding";

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3951);

     label05:
        $r3 = $r8;

     label06:
        $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.spec.SecretKeySpec secretKeySpec> = $r7;

        $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.Cipher cipher> = $r3;

        $r2 = <com.treasuredata.android.TDJsonHandler: com.treasuredata.android.TDJsonHandler$Base64Encoder DEFAULT_BASE64_ENCODER>;

        $r0.<com.treasuredata.android.TDJsonHandler: com.treasuredata.android.TDJsonHandler$Base64Encoder base64Encoder> = $r2;

        $r9 = new com.treasuredata.android.CustomizedJSON;

        specialinvoke $r9.<com.treasuredata.android.CustomizedJSON: void <init>()>();

        $r0.<com.treasuredata.android.TDJsonHandler: com.c.a.b.a.a json> = $r9;

        return;

     label07:
        $r10 := @caughtexception;

        $r11 = $r10;

        $r7 = null;

     label08:
        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

        goto label06;

     label09:
        $r11 := @caughtexception;

        goto label08;

     label10:
        $r7 = null;

        goto label06;

        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label04 to label05 with label09;
    }

    private byte[] decrypt(byte[]) throws java.security.InvalidKeyException, javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException
    {
        com.treasuredata.android.TDJsonHandler $r0;
        byte[] $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        int varReplacer9650;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: byte[];

        $r3 = $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.Cipher cipher>;

        $r2 = $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.spec.SecretKeySpec secretKeySpec>;

        varReplacer9650 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9650, $r2);

        $r3 = $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.Cipher cipher>;

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    private byte[] encrypt(byte[]) throws java.security.InvalidKeyException, javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException
    {
        com.treasuredata.android.TDJsonHandler $r0;
        byte[] $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        int varReplacer8020;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: byte[];

        $r3 = $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.Cipher cipher>;

        $r2 = $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.spec.SecretKeySpec secretKeySpec>;

        varReplacer8020 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8020, $r2);

        $r3 = $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.Cipher cipher>;

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    private java.util.Map readJson(java.io.Reader, boolean) throws java.io.IOException
    {
        com.treasuredata.android.TDJsonHandler $r0;
        java.io.Reader $r1;
        boolean $z0;
        java.nio.charset.Charset $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        com.c.a.b.a.a $r4;
        java.util.Map $r5;
        java.lang.Exception $r6, $r14, $r15;
        java.lang.String $r7, $r12, varReplacer9643, varReplacer9644, varReplacer9645, varReplacer9646;
        java.io.BufferedReader $r8;
        java.lang.StringBuilder $r9, $r13;
        com.treasuredata.android.TDJsonHandler$Base64Encoder $r10;
        byte[] $r11;
        null_type varReplacer9647, varReplacer9648;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: java.io.Reader;

        $z0 := @parameter1: boolean;

        if $z0 != 0 goto label01;

        $r3 = $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.spec.SecretKeySpec secretKeySpec>;

        if $r3 != null goto label04;

     label01:
        $r4 = $r0.<com.treasuredata.android.TDJsonHandler: com.c.a.b.a.a json>;

        $r5 = virtualinvoke $r4.<com.c.a.b.a.a: java.util.Map mapFrom(java.lang.Object)>($r1);

     label02:
        return $r5;

     label03:
        $r6 := @caughtexception;

        $r7 = <com.treasuredata.android.TDJsonHandler: java.lang.String TAG>;

        varReplacer9643 = "This event can\'t be handled as a plain";

        staticinvoke <org.a.a.a.a: void a(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, varReplacer9643, $r6);

        varReplacer9648 = null;

        return varReplacer9648;

     label04:
        $r8 = new java.io.BufferedReader;

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

     label05:
        $r7 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r7 != null goto label10;

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r10 = $r0.<com.treasuredata.android.TDJsonHandler: com.treasuredata.android.TDJsonHandler$Base64Encoder base64Encoder>;

        $r11 = interfaceinvoke $r10.<com.treasuredata.android.TDJsonHandler$Base64Encoder: byte[] decode(java.lang.String)>($r7);

        $r11 = specialinvoke $r0.<com.treasuredata.android.TDJsonHandler: byte[] decrypt(byte[])>($r11);

        $r4 = $r0.<com.treasuredata.android.TDJsonHandler: com.c.a.b.a.a json>;

     label07:
        $r12 = new java.lang.String;

        $r2 = <com.treasuredata.android.TDJsonHandler: java.nio.charset.Charset UTF8>;

     label08:
        specialinvoke $r12.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r11, $r2);

        $r5 = virtualinvoke $r4.<com.c.a.b.a.a: java.util.Map mapFrom(java.lang.Object)>($r12);

     label09:
        return $r5;

     label10:
        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer9644 = "\n";

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9644);

        goto label05;

     label11:
        $r14 := @caughtexception;

        $r12 = <com.treasuredata.android.TDJsonHandler: java.lang.String TAG>;

        varReplacer9645 = "Decryption failed. Trying to handle this event as a plain";

        staticinvoke <org.a.a.a.a: void a(java.lang.String,java.lang.String,java.lang.Throwable)>($r12, varReplacer9645, $r14);

     label12:
        $r4 = $r0.<com.treasuredata.android.TDJsonHandler: com.c.a.b.a.a json>;

        $r5 = virtualinvoke $r4.<com.c.a.b.a.a: java.util.Map mapFrom(java.lang.Object)>($r7);

     label13:
        return $r5;

     label14:
        $r15 := @caughtexception;

        $r7 = <com.treasuredata.android.TDJsonHandler: java.lang.String TAG>;

        varReplacer9646 = "This event can\'t be handled as a plain";

        staticinvoke <org.a.a.a.a: void a(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, varReplacer9646, $r15);

        varReplacer9647 = null;

        return varReplacer9647;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label08 to label09 with label11;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    private void writeJson(java.io.Writer, java.util.Map, boolean) throws java.io.IOException
    {
        com.treasuredata.android.TDJsonHandler $r0;
        java.io.Writer $r1;
        java.util.Map $r2;
        boolean $z0;
        javax.crypto.spec.SecretKeySpec $r3;
        com.c.a.b.a.a $r4;
        java.lang.String $r5, varReplacer8017;
        java.io.ByteArrayOutputStream $r6;
        java.io.BufferedWriter $r7;
        java.io.OutputStreamWriter $r8;
        byte[] $r9;
        com.treasuredata.android.TDJsonHandler$Base64Encoder $r10;
        java.lang.Exception $r11;
        null_type varReplacer8018;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: java.io.Writer;

        $r2 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        if $z0 != 0 goto label1;

        $r3 = $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.spec.SecretKeySpec secretKeySpec>;

        if $r3 != null goto label3;

     label1:
        $r4 = $r0.<com.treasuredata.android.TDJsonHandler: com.c.a.b.a.a json>;

        $r5 = virtualinvoke $r4.<com.c.a.b.a.a: java.lang.String asString(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r5);

     label2:
        virtualinvoke $r1.<java.io.Writer: void close()>();

        return;

     label3:
        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        $r7 = new java.io.BufferedWriter;

        $r8 = new java.io.OutputStreamWriter;

        specialinvoke $r8.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r6);

        specialinvoke $r7.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r8);

        $r4 = $r0.<com.treasuredata.android.TDJsonHandler: com.c.a.b.a.a json>;

        $r5 = virtualinvoke $r4.<com.c.a.b.a.a: java.lang.String asString(java.lang.Object)>($r2);

        virtualinvoke $r7.<java.io.BufferedWriter: java.io.Writer append(java.lang.CharSequence)>($r5);

        virtualinvoke $r7.<java.io.BufferedWriter: void close()>();

     label4:
        $r9 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r9 = specialinvoke $r0.<com.treasuredata.android.TDJsonHandler: byte[] encrypt(byte[])>($r9);

        $r10 = $r0.<com.treasuredata.android.TDJsonHandler: com.treasuredata.android.TDJsonHandler$Base64Encoder base64Encoder>;

        $r5 = interfaceinvoke $r10.<com.treasuredata.android.TDJsonHandler$Base64Encoder: java.lang.String encode(byte[])>($r9);

        virtualinvoke $r1.<java.io.Writer: void write(java.lang.String)>($r5);

     label5:
        goto label2;

     label6:
        $r11 := @caughtexception;

        $r5 = <com.treasuredata.android.TDJsonHandler: java.lang.String TAG>;

        varReplacer8017 = "Encryption failed. Storing this event as a plain";

        staticinvoke <org.a.a.a.a: void a(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, varReplacer8017, $r11);

        varReplacer8018 = null;

        $r0.<com.treasuredata.android.TDJsonHandler: javax.crypto.spec.SecretKeySpec secretKeySpec> = varReplacer8018;

        $r4 = $r0.<com.treasuredata.android.TDJsonHandler: com.c.a.b.a.a json>;

        $r5 = virtualinvoke $r4.<com.c.a.b.a.a: java.lang.String asString(java.lang.Object)>($r2);

        virtualinvoke $r1.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>($r5);

        goto label2;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public java.util.Map readJson(java.io.Reader) throws java.io.IOException
    {
        com.treasuredata.android.TDJsonHandler $r0;
        java.io.Reader $r1;
        java.util.Map $r2;
        int varReplacer10427;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: java.io.Reader;

        varReplacer10427 = 0;

        $r2 = specialinvoke $r0.<com.treasuredata.android.TDJsonHandler: java.util.Map readJson(java.io.Reader,boolean)>($r1, varReplacer10427);

        return $r2;
    }

    public java.util.Map readJsonWithoutDecryption(java.io.Reader) throws java.io.IOException
    {
        com.treasuredata.android.TDJsonHandler $r0;
        java.io.Reader $r1;
        java.util.Map $r2;
        int varReplacer9642;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: java.io.Reader;

        varReplacer9642 = 1;

        $r2 = specialinvoke $r0.<com.treasuredata.android.TDJsonHandler: java.util.Map readJson(java.io.Reader,boolean)>($r1, varReplacer9642);

        return $r2;
    }

    public void writeJson(java.io.Writer, java.util.Map) throws java.io.IOException
    {
        com.treasuredata.android.TDJsonHandler $r0;
        java.io.Writer $r1;
        java.util.Map $r2;
        int varReplacer8016;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: java.io.Writer;

        $r2 := @parameter1: java.util.Map;

        varReplacer8016 = 0;

        specialinvoke $r0.<com.treasuredata.android.TDJsonHandler: void writeJson(java.io.Writer,java.util.Map,boolean)>($r1, $r2, varReplacer8016);

        return;
    }

    public void writeJsonWithoutEncryption(java.io.Writer, java.util.Map) throws java.io.IOException
    {
        com.treasuredata.android.TDJsonHandler $r0;
        java.io.Writer $r1;
        java.util.Map $r2;
        int varReplacer10424;

        nop;

        $r0 := @this: com.treasuredata.android.TDJsonHandler;

        $r1 := @parameter0: java.io.Writer;

        $r2 := @parameter1: java.util.Map;

        varReplacer10424 = 1;

        specialinvoke $r0.<com.treasuredata.android.TDJsonHandler: void writeJson(java.io.Writer,java.util.Map,boolean)>($r1, $r2, varReplacer10424);

        return;
    }
}
