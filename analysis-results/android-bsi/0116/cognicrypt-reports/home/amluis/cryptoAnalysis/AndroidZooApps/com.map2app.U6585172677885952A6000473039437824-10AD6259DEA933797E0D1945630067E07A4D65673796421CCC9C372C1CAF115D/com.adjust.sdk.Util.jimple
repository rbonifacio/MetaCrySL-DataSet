public class com.adjust.sdk.Util extends java.lang.Object
{
    private static final java.lang.String DATE_FORMAT;
    public static final java.text.DecimalFormat SecondsDisplayFormat;
    private static java.text.SimpleDateFormat dateFormat;
    private static final java.lang.String fieldReadErrorMessage;

    static void <clinit>()
    {
        java.text.DecimalFormat $r0;
        java.lang.String varReplacer4571;

        nop;

        $r0 = new java.text.DecimalFormat;

        varReplacer4571 = "0.0";

        specialinvoke $r0.<java.text.DecimalFormat: void <init>(java.lang.String)>(varReplacer4571);

        <com.adjust.sdk.Util: java.text.DecimalFormat SecondsDisplayFormat> = $r0;

        return;
    }

    public void <init>()
    {
        com.adjust.sdk.Util $r0;

        $r0 := @this: com.adjust.sdk.Util;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean checkPermission(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        int $i0, varReplacer4618, varReplacer4619;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>($r1);

        if $i0 != 0 goto label1;

        varReplacer4618 = 1;

        return varReplacer4618;

     label1:
        varReplacer4619 = 0;

        return varReplacer4619;
    }

    public static java.lang.String convertToHex(byte[])
    {
        byte[] $r0;
        java.math.BigInteger $r1;
        java.lang.StringBuilder $r2;
        int $i0, varReplacer8388;
        java.lang.String $r3, varReplacer8386, varReplacer8387;
        java.util.Locale $r4;
        java.lang.Object[] $r5;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.math.BigInteger;

        varReplacer8388 = 1;

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(varReplacer8388, $r0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer8386 = "%0";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8386);

        $i0 = lengthof $r0;

        $i0 = $i0 << 1;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer8387 = "x";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8387);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = <java.util.Locale: java.util.Locale US>;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r1;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, $r3, $r5);

        return $r3;
    }

    public static com.adjust.sdk.AdjustFactory$URLGetConnection createGETHttpsURLConnection(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0, $r1;
        javax.net.ssl.HttpsURLConnection $r2;
        java.net.URL $r3;
        com.adjust.sdk.AdjustFactory$URLGetConnection $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = new java.net.URL;

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r4 = staticinvoke <com.adjust.sdk.AdjustFactory: com.adjust.sdk.AdjustFactory$URLGetConnection getHttpsURLGetConnection(java.net.URL)>($r3);

        $r2 = $r4.<com.adjust.sdk.AdjustFactory$URLGetConnection: javax.net.ssl.HttpsURLConnection httpsURLConnection>;

        staticinvoke <com.adjust.sdk.Util: void setDefaultHttpsUrlConnectionProperties(javax.net.ssl.HttpsURLConnection,java.lang.String)>($r2, $r1);

        virtualinvoke $r2.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>("GET");

        return $r4;
    }

    public static javax.net.ssl.HttpsURLConnection createPOSTHttpsURLConnection(java.lang.String, java.lang.String, java.util.Map, int) throws java.io.IOException
    {
        java.lang.String $r0, $r1, varReplacer9920;
        java.util.Map $r2;
        int $i0, varReplacer9921, varReplacer9922, varReplacer9923;
        java.net.URL $r3;
        java.io.DataOutputStream $r4;
        javax.net.ssl.HttpsURLConnection $r5;
        java.io.OutputStream $r6;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.util.Map;

        $i0 := @parameter3: int;

        $r3 = new java.net.URL;

        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r5 = staticinvoke <com.adjust.sdk.AdjustFactory: javax.net.ssl.HttpsURLConnection getHttpsURLConnection(java.net.URL)>($r3);

        staticinvoke <com.adjust.sdk.Util: void setDefaultHttpsUrlConnectionProperties(javax.net.ssl.HttpsURLConnection,java.lang.String)>($r5, $r1);

        varReplacer9920 = "POST";

        virtualinvoke $r5.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>(varReplacer9920);

        varReplacer9923 = 0;

        virtualinvoke $r5.<javax.net.ssl.HttpsURLConnection: void setUseCaches(boolean)>(varReplacer9923);

        varReplacer9921 = 1;

        virtualinvoke $r5.<javax.net.ssl.HttpsURLConnection: void setDoInput(boolean)>(varReplacer9921);

        varReplacer9922 = 1;

        virtualinvoke $r5.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>(varReplacer9922);

        $r4 = new java.io.DataOutputStream;

        $r6 = virtualinvoke $r5.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r4.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

        $r0 = staticinvoke <com.adjust.sdk.Util: java.lang.String getPostDataString(java.util.Map,int)>($r2, $i0);

        virtualinvoke $r4.<java.io.DataOutputStream: void writeBytes(java.lang.String)>($r0);

        virtualinvoke $r4.<java.io.DataOutputStream: void flush()>();

        virtualinvoke $r4.<java.io.DataOutputStream: void close()>();

        return $r5;
    }

    protected static java.lang.String createUuid()
    {
        java.util.UUID $r0;
        java.lang.String $r1;

        nop;

        $r0 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r1 = virtualinvoke $r0.<java.util.UUID: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String dateFormat(long)
    {
        long $l0;
        java.util.Locale $r0;
        java.text.SimpleDateFormat $r1;
        java.lang.Long $r2;
        java.lang.String $r3, varReplacer7529;

        nop;

        $l0 := @parameter0: long;

        $r1 = <com.adjust.sdk.Util: java.text.SimpleDateFormat dateFormat>;

        if $r1 != null goto label1;

        $r1 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

        varReplacer7529 = "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'Z";

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(varReplacer7529, $r0);

        <com.adjust.sdk.Util: java.text.SimpleDateFormat dateFormat> = $r1;

     label1:
        $r1 = <com.adjust.sdk.Util: java.text.SimpleDateFormat dateFormat>;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>($r2);

        return $r3;
    }

    public static boolean equalBoolean(java.lang.Boolean, java.lang.Boolean)
    {
        java.lang.Boolean $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Boolean;

        $r1 := @parameter1: java.lang.Boolean;

        $z0 = staticinvoke <com.adjust.sdk.Util: boolean equalObject(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $z0;
    }

    public static boolean equalEnum(java.lang.Enum, java.lang.Enum)
    {
        java.lang.Enum $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Enum;

        $r1 := @parameter1: java.lang.Enum;

        $z0 = staticinvoke <com.adjust.sdk.Util: boolean equalObject(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $z0;
    }

    public static boolean equalInt(java.lang.Integer, java.lang.Integer)
    {
        java.lang.Integer $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Integer;

        $r1 := @parameter1: java.lang.Integer;

        $z0 = staticinvoke <com.adjust.sdk.Util: boolean equalObject(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $z0;
    }

    public static boolean equalLong(java.lang.Long, java.lang.Long)
    {
        java.lang.Long $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Long;

        $r1 := @parameter1: java.lang.Long;

        $z0 = staticinvoke <com.adjust.sdk.Util: boolean equalObject(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $z0;
    }

    public static boolean equalObject(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        if $r0 == null goto label1;

        if $r1 != null goto label3;

     label1:
        if $r0 != null goto label2;

        if $r1 != null goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        return $z0;
    }

    public static boolean equalString(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.adjust.sdk.Util: boolean equalObject(java.lang.Object,java.lang.Object)>($r0, $r1);

        return $z0;
    }

    public static boolean equalsDouble(java.lang.Double, java.lang.Double)
    {
        java.lang.Double $r0, $r1;
        double $d0;
        long $l0, $l1;
        byte $b2;

        $r0 := @parameter0: java.lang.Double;

        $r1 := @parameter1: java.lang.Double;

        if $r0 == null goto label1;

        if $r1 != null goto label3;

     label1:
        if $r0 != null goto label2;

        if $r1 != null goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $d0 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $l1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d0);

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public static boolean equalsMap(java.util.Map, java.util.Map)
    {
        java.util.Map $r0, $r1;
        java.util.Set $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Map;

        if $r0 == null goto label1;

        if $r1 != null goto label3;

     label1:
        if $r0 != null goto label2;

        if $r1 != null goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public static java.lang.String getAndroidId(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.adjust.sdk.Reflection: java.lang.String getAndroidId(android.content.Context)>($r0);

        return $r1;
    }

    public static java.lang.String getCpuAbi()
    {
        java.lang.String $r0;

        nop;

        $r0 = staticinvoke <com.adjust.sdk.Reflection: java.lang.String getCpuAbi()>();

        return $r0;
    }

    public static void getGoogleAdId(android.content.Context, com.adjust.sdk.OnDeviceIdsRead)
    {
        android.content.Context $r0;
        com.adjust.sdk.OnDeviceIdsRead $r1;
        com.adjust.sdk.ILogger $r2;
        android.os.Looper $r3, $r4;
        java.lang.Object[] $r5;
        java.lang.String $r6, $r8;
        java.lang.StringBuilder $r7;
        com.adjust.sdk.Util$1 $r9;
        android.content.Context[] $r10;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.adjust.sdk.OnDeviceIdsRead;

        $r2 = staticinvoke <com.adjust.sdk.AdjustFactory: com.adjust.sdk.ILogger getLogger()>();

        $r3 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        $r4 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        if $r3 == $r4 goto label1;

        $r5 = newarray (java.lang.Object)[0];

        interfaceinvoke $r2.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>("GoogleAdId being read in the background", $r5);

        $r6 = staticinvoke <com.adjust.sdk.Util: java.lang.String getPlayAdId(android.content.Context)>($r0);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GoogleAdId read ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = newarray (java.lang.Object)[0];

        interfaceinvoke $r2.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>($r8, $r5);

        interfaceinvoke $r1.<com.adjust.sdk.OnDeviceIdsRead: void onGoogleAdIdRead(java.lang.String)>($r6);

        return;

     label1:
        $r5 = newarray (java.lang.Object)[0];

        interfaceinvoke $r2.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>("GoogleAdId being read in the foreground", $r5);

        $r9 = new com.adjust.sdk.Util$1;

        specialinvoke $r9.<com.adjust.sdk.Util$1: void <init>(com.adjust.sdk.OnDeviceIdsRead)>($r1);

        $r10 = newarray (android.content.Context)[1];

        $r10[0] = $r0;

        virtualinvoke $r9.<com.adjust.sdk.Util$1: android.os.AsyncTask execute(java.lang.Object[])>($r10);

        return;
    }

    private static com.adjust.sdk.ILogger getLogger()
    {
        com.adjust.sdk.ILogger $r0;

        nop;

        $r0 = staticinvoke <com.adjust.sdk.AdjustFactory: com.adjust.sdk.ILogger getLogger()>();

        return $r0;
    }

    public static java.lang.String getMacAddress(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.adjust.sdk.Reflection: java.lang.String getMacAddress(android.content.Context)>($r0);

        return $r1;
    }

    public static java.lang.String getPlayAdId(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.adjust.sdk.Reflection: java.lang.String getPlayAdId(android.content.Context)>($r0);

        return $r1;
    }

    public static java.util.Map getPluginKeys(android.content.Context)
    {
        android.content.Context $r0;
        java.util.Map $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.adjust.sdk.Reflection: java.util.Map getPluginKeys(android.content.Context)>($r0);

        return $r1;
    }

    private static java.lang.String getPostDataString(java.util.Map, int) throws java.io.UnsupportedEncodingException
    {
        java.util.Map $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r8;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.String $r6, $r7, varReplacer9924, varReplacer9925, varReplacer9926, varReplacer9927, varReplacer9928, varReplacer9929, varReplacer9930, varReplacer9931, varReplacer9932, varReplacer9933, varReplacer9934, varReplacer9935, varReplacer9936, varReplacer9937, varReplacer9938;
        long $l2;

        nop;

        $r0 := @parameter0: java.util.Map;

        $i0 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r4;

        varReplacer9932 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, varReplacer9932);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r4;

        if $r7 == null goto label4;

        varReplacer9936 = "UTF-8";

        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r7, varReplacer9936);

     label2:
        $i1 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label3;

        varReplacer9928 = "&";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9928);

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer9938 = "=";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9938);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label1;

     label4:
        $r7 = "";

        goto label2;

     label5:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = staticinvoke <com.adjust.sdk.Util: java.lang.String dateFormat(long)>($l2);

        varReplacer9931 = "&";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9931);

        varReplacer9934 = "sent_at";

        varReplacer9935 = "UTF-8";

        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(varReplacer9934, varReplacer9935);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer9937 = "=";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9937);

        varReplacer9933 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, varReplacer9933);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer9930 = "&";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9930);

        varReplacer9925 = "queue_size";

        varReplacer9926 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(varReplacer9925, varReplacer9926);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer9929 = "=";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9929);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer9927 = "";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9927);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9924 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, varReplacer9924);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String getReasonString(java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, varReplacer9945, varReplacer9946;
        java.lang.Throwable $r1;
        java.util.Locale $r2;
        java.lang.Object[] $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Throwable;

        if $r1 == null goto label1;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r0;

        $r3[1] = $r1;

        varReplacer9946 = "%s: %s";

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, varReplacer9946, $r3);

        return $r0;

     label1:
        $r2 = <java.util.Locale: java.util.Locale US>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r0;

        varReplacer9945 = "%s";

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, varReplacer9945, $r3);

        return $r0;
    }

    public static java.lang.String[] getSupportedAbis()
    {
        java.lang.String[] $r0;

        nop;

        $r0 = staticinvoke <com.adjust.sdk.Reflection: java.lang.String[] getSupportedAbis()>();

        return $r0;
    }

    public static long getWaitingTime(int, com.adjust.sdk.BackoffStrategy)
    {
        int $i0, $i2;
        com.adjust.sdk.BackoffStrategy $r0;
        long $l1, $l3, varReplacer9072;
        double $d0, $d1, varReplacer9073;

        nop;

        $i0 := @parameter0: int;

        $r0 := @parameter1: com.adjust.sdk.BackoffStrategy;

        $i2 = $r0.<com.adjust.sdk.BackoffStrategy: int minRetries>;

        if $i0 >= $i2 goto label1;

        varReplacer9072 = 0L;

        return varReplacer9072;

     label1:
        $i2 = $r0.<com.adjust.sdk.BackoffStrategy: int minRetries>;

        $i0 = $i0 - $i2;

        $d0 = (double) $i0;

        varReplacer9073 = 2.0;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(varReplacer9073, $d0);

        $l1 = (long) $d0;

        $l3 = $r0.<com.adjust.sdk.BackoffStrategy: long milliSecondMultiplier>;

        $l1 = $l1 * $l3;

        $l3 = $r0.<com.adjust.sdk.BackoffStrategy: long maxWait>;

        $l1 = staticinvoke <java.lang.Math: long min(long,long)>($l1, $l3);

        $d0 = $r0.<com.adjust.sdk.BackoffStrategy: double minRange>;

        $d1 = $r0.<com.adjust.sdk.BackoffStrategy: double maxRange>;

        $d0 = staticinvoke <com.adjust.sdk.Util: double randomInRange(double,double)>($d0, $d1);

        $d1 = (double) $l1;

        $d0 = $d1 * $d0;

        $l1 = (long) $d0;

        return $l1;
    }

    public static java.lang.String hash(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer8377;
        int $i0, varReplacer8376;
        byte[] $r2;
        java.security.MessageDigest $r3;
        java.lang.Exception $r4;
        null_type varReplacer8375;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        varReplacer8377 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer8377);

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1);

        $i0 = lengthof $r2;

        varReplacer8376 = 0;

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[],int,int)>($r2, varReplacer8376, $i0);

        $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.adjust.sdk.Util: java.lang.String convertToHex(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        varReplacer8375 = null;

        return varReplacer8375;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int hashBoolean(java.lang.Boolean)
    {
        java.lang.Boolean $r0;
        int $i0;

        $r0 := @parameter0: java.lang.Boolean;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.Boolean: int hashCode()>();

        return $i0;
    }

    public static int hashEnum(java.lang.Enum)
    {
        java.lang.Enum $r0;
        int $i0;

        $r0 := @parameter0: java.lang.Enum;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.Enum: int hashCode()>();

        return $i0;
    }

    public static int hashLong(java.lang.Long)
    {
        java.lang.Long $r0;
        int $i0;

        $r0 := @parameter0: java.lang.Long;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.Long: int hashCode()>();

        return $i0;
    }

    public static int hashMap(java.util.Map)
    {
        java.util.Map $r0;
        java.util.Set $r1;
        int $i0;

        $r0 := @parameter0: java.util.Map;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $i0 = interfaceinvoke $r1.<java.util.Set: int hashCode()>();

        return $i0;
    }

    public static int hashString(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public static java.lang.Boolean isPlayTrackingEnabled(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Boolean $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.adjust.sdk.Reflection: java.lang.Boolean isPlayTrackingEnabled(android.content.Context)>($r0);

        return $r1;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer8368;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer8368 = "MD5";

        $r0 = staticinvoke <com.adjust.sdk.Util: java.lang.String hash(java.lang.String,java.lang.String)>($r0, varReplacer8368);

        return $r0;
    }

    public static java.lang.String quote(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;
        java.util.Locale $r3;
        java.lang.Object[] $r4;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s");

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = $r0;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "\'%s\'", $r4);

     label2:
        return $r0;
    }

    private static double randomInRange(double, double)
    {
        double $d0, $d1, $d2;
        java.util.Random $r0;

        nop;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        $d1 = $d1 - $d0;

        $d2 = virtualinvoke $r0.<java.util.Random: double nextDouble()>();

        $d1 = $d2 * $d1;

        $d0 = $d1 + $d0;

        return $d0;
    }

    public static boolean readBooleanField(java.io.ObjectInputStream$GetField, java.lang.String, boolean)
    {
        java.io.ObjectInputStream$GetField $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        boolean $z0, $z1;
        com.adjust.sdk.ILogger $r3;
        java.lang.Object[] $r4;

        $r0 := @parameter0: java.io.ObjectInputStream$GetField;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

     label1:
        $z1 = virtualinvoke $r0.<java.io.ObjectInputStream$GetField: boolean get(java.lang.String,boolean)>($r1, $z0);

     label2:
        return $z1;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r1 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r4[1] = $r1;

        interfaceinvoke $r3.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>("Unable to read \'%s\' field in migration device with message (%s)", $r4);

        return $z0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static com.adjust.sdk.ResponseData readHttpResponse(javax.net.ssl.HttpsURLConnection, com.adjust.sdk.ActivityPackage) throws java.lang.Exception
    {
        javax.net.ssl.HttpsURLConnection $r0;
        com.adjust.sdk.ActivityPackage $r1;
        java.io.BufferedReader $r2;
        java.io.InputStreamReader $r3;
        org.json.JSONObject $r4, $r14;
        java.lang.StringBuffer $r5;
        com.adjust.sdk.ILogger $r6;
        int $i0, varReplacer9908;
        java.lang.Integer $r7;
        java.io.InputStream $r8;
        java.lang.String $r9, $r15, $r16, varReplacer9909, varReplacer9910, varReplacer9911, varReplacer9913, varReplacer9914, varReplacer9916, varReplacer9917, varReplacer9919;
        java.lang.Exception $r10;
        java.lang.Object[] $r11;
        java.lang.Throwable $r12;
        com.adjust.sdk.ResponseData $r13;
        org.json.JSONException $r17;
        null_type varReplacer9912, varReplacer9915, varReplacer9918;

        nop;

        $r0 := @parameter0: javax.net.ssl.HttpsURLConnection;

        $r1 := @parameter1: com.adjust.sdk.ActivityPackage;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

     label01:
        $i0 = virtualinvoke $r0.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

     label02:
        if $i0 < 400 goto label16;

     label03:
        $r8 = virtualinvoke $r0.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getErrorStream()>();

     label04:
        $r3 = new java.io.InputStreamReader;

     label05:
        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r8);

     label06:
        $r2 = new java.io.BufferedReader;

     label07:
        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);

     label08:
        $r9 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label09:
        if $r9 == null goto label18;

     label10:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label11:
        goto label08;

     label12:
        $r10 := @caughtexception;

     label13:
        $r11 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke $r10.<java.lang.Exception: java.lang.String getMessage()>();

        $r11[0] = $r9;

        varReplacer9909 = "Failed to read response. (%s)";

        interfaceinvoke $r6.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer9909, $r11);

        throw $r10;

     label14:
        $r12 := @caughtexception;

        if $r0 == null goto label15;

        virtualinvoke $r0.<javax.net.ssl.HttpsURLConnection: void disconnect()>();

     label15:
        throw $r12;

     label16:
        $r8 = virtualinvoke $r0.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();

     label17:
        goto label04;

     label18:
        if $r0 == null goto label19;

        virtualinvoke $r0.<javax.net.ssl.HttpsURLConnection: void disconnect()>();

     label19:
        $r13 = staticinvoke <com.adjust.sdk.ResponseData: com.adjust.sdk.ResponseData buildResponseData(com.adjust.sdk.ActivityPackage)>($r1);

        $r9 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r9;

        varReplacer9916 = "Response: %s";

        interfaceinvoke $r6.<com.adjust.sdk.ILogger: void verbose(java.lang.String,java.lang.Object[])>(varReplacer9916, $r11);

        if $r9 == null goto label27;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 != 0 goto label20;

        return $r13;

     label20:
        $r14 = null;

        $r4 = new org.json.JSONObject;

     label21:
        specialinvoke $r4.<org.json.JSONObject: void <init>(java.lang.String)>($r9);

     label22:
        $r14 = $r4;

     label23:
        if $r14 == null goto label27;

        $r13.<com.adjust.sdk.ResponseData: org.json.JSONObject jsonResponse> = $r14;

        varReplacer9917 = "message";

        varReplacer9918 = null;

        $r9 = virtualinvoke $r14.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer9917, varReplacer9918);

        $r15 = $r9;

        $r13.<com.adjust.sdk.ResponseData: java.lang.String message> = $r9;

        varReplacer9914 = "timestamp";

        varReplacer9915 = null;

        $r16 = virtualinvoke $r14.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer9914, varReplacer9915);

        $r13.<com.adjust.sdk.ResponseData: java.lang.String timestamp> = $r16;

        varReplacer9911 = "adid";

        varReplacer9912 = null;

        $r16 = virtualinvoke $r14.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer9911, varReplacer9912);

        $r13.<com.adjust.sdk.ResponseData: java.lang.String adid> = $r16;

        if $r9 != null goto label24;

        $r15 = "No message found";

     label24:
        if $r7 == null goto label26;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        if $i0 != 200 goto label26;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r15;

        varReplacer9919 = "%s";

        interfaceinvoke $r6.<com.adjust.sdk.ILogger: void info(java.lang.String,java.lang.Object[])>(varReplacer9919, $r11);

        varReplacer9908 = 1;

        $r13.<com.adjust.sdk.ResponseData: boolean success> = varReplacer9908;

        return $r13;

     label25:
        $r17 := @caughtexception;

        $r11 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke $r17.<org.json.JSONException: java.lang.String getMessage()>();

        $r11[0] = $r9;

        varReplacer9913 = "Failed to parse json response. (%s)";

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer9913, $r11);

        $r11 = newarray (java.lang.Object)[0];

        interfaceinvoke $r6.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>($r9, $r11);

        $r13.<com.adjust.sdk.ResponseData: java.lang.String message> = $r9;

        goto label23;

     label26:
        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r15;

        varReplacer9910 = "%s";

        interfaceinvoke $r6.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer9910, $r11);

     label27:
        return $r13;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label04 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label13 to label14 with label14;
        catch java.lang.Exception from label16 to label17 with label12;
        catch java.lang.Throwable from label16 to label17 with label14;
        catch org.json.JSONException from label21 to label22 with label25;
    }

    public static int readIntField(java.io.ObjectInputStream$GetField, java.lang.String, int)
    {
        java.io.ObjectInputStream$GetField $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        int $i0, $i1;
        com.adjust.sdk.ILogger $r3;
        java.lang.Object[] $r4;

        $r0 := @parameter0: java.io.ObjectInputStream$GetField;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

     label1:
        $i1 = virtualinvoke $r0.<java.io.ObjectInputStream$GetField: int get(java.lang.String,int)>($r1, $i0);

     label2:
        return $i1;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r1 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r4[1] = $r1;

        interfaceinvoke $r3.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>("Unable to read \'%s\' field in migration device with message (%s)", $r4);

        return $i0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static long readLongField(java.io.ObjectInputStream$GetField, java.lang.String, long)
    {
        java.io.ObjectInputStream$GetField $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        long $l0, $l1;
        com.adjust.sdk.ILogger $r3;
        java.lang.Object[] $r4;

        $r0 := @parameter0: java.io.ObjectInputStream$GetField;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

     label1:
        $l1 = virtualinvoke $r0.<java.io.ObjectInputStream$GetField: long get(java.lang.String,long)>($r1, $l0);

     label2:
        return $l1;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = $r1;

        $r1 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r4[1] = $r1;

        interfaceinvoke $r3.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>("Unable to read \'%s\' field in migration device with message (%s)", $r4);

        return $l0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.Object readObject(android.content.Context, java.lang.String, java.lang.String, java.lang.Class)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, varReplacer4580, varReplacer4581, varReplacer4582, varReplacer4583, varReplacer4584, varReplacer4585, varReplacer4586;
        java.lang.Class $r3;
        java.io.BufferedInputStream $r4, r18;
        java.io.ObjectInputStream $r5, r19;
        java.lang.Object $r6, $r7, $r9;
        java.io.FileInputStream $r8;
        com.adjust.sdk.ILogger $r10;
        java.lang.Object[] $r11;
        java.lang.ClassNotFoundException $r12;
        java.lang.Throwable $r13;
        java.lang.ClassCastException $r14;
        java.lang.Exception $r15, $r16, $r17;
        java.io.Closeable r20;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.Class;

        $r6 = null;

        $r7 = null;

     label01:
        $r8 = virtualinvoke $r0.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>($r1);

     label02:
        $r6 = $r8;

        r18 = new java.io.BufferedInputStream;

        $r4 = r18;

     label03:
        specialinvoke r18.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r8);

     label04:
        $r6 = $r4;

        r19 = new java.io.ObjectInputStream;

        $r5 = r19;

     label05:
        specialinvoke r19.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r4);

     label06:
        $r6 = $r5;

     label07:
        $r9 = virtualinvoke $r5.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r9 = virtualinvoke $r3.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r9);

     label08:
        $r7 = $r9;

     label09:
        $r10 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

     label10:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r2;

        $r11[1] = $r9;

     label11:
        varReplacer4581 = "Read %s: %s";

        interfaceinvoke $r10.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>(varReplacer4581, $r11);

     label12:
        if $r6 == null goto label39;

     label13:
        r20 = (java.io.Closeable) $r6;

        interfaceinvoke r20.<java.io.Closeable: void close()>();

     label14:
        return $r7;

     label15:
        $r12 := @caughtexception;

     label16:
        $r10 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

     label17:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r2;

     label18:
        $r1 = virtualinvoke $r12.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

     label19:
        $r11[1] = $r1;

     label20:
        varReplacer4582 = "Failed to find %s class (%s)";

        interfaceinvoke $r10.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer4582, $r11);

     label21:
        goto label12;

     label22:
        $r13 := @caughtexception;

        $r10 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = $r2;

        varReplacer4580 = "%s file not found";

        interfaceinvoke $r10.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>(varReplacer4580, $r11);

        goto label12;

     label23:
        $r14 := @caughtexception;

     label24:
        $r10 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

     label25:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r2;

     label26:
        $r1 = virtualinvoke $r14.<java.lang.ClassCastException: java.lang.String getMessage()>();

     label27:
        $r11[1] = $r1;

     label28:
        varReplacer4585 = "Failed to cast %s object (%s)";

        interfaceinvoke $r10.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer4585, $r11);

     label29:
        goto label12;

     label30:
        $r15 := @caughtexception;

        $r10 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r2;

        $r11[1] = $r15;

        varReplacer4583 = "Failed to open %s file for reading (%s)";

        interfaceinvoke $r10.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer4583, $r11);

        goto label12;

     label31:
        $r16 := @caughtexception;

     label32:
        $r10 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

     label33:
        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r2;

     label34:
        $r1 = virtualinvoke $r16.<java.lang.Exception: java.lang.String getMessage()>();

     label35:
        $r11[1] = $r1;

     label36:
        varReplacer4584 = "Failed to read %s object (%s)";

        interfaceinvoke $r10.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer4584, $r11);

     label37:
        goto label12;

     label38:
        $r17 := @caughtexception;

        $r10 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r11 = newarray (java.lang.Object)[2];

        $r11[0] = $r2;

        $r11[1] = $r17;

        varReplacer4586 = "Failed to close %s file for reading (%s)";

        interfaceinvoke $r10.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer4586, $r11);

     label39:
        return $r7;

        catch java.io.FileNotFoundException from label01 to label02 with label22;
        catch java.io.FileNotFoundException from label03 to label04 with label22;
        catch java.io.FileNotFoundException from label05 to label06 with label22;
        catch java.lang.Exception from label01 to label02 with label30;
        catch java.lang.Exception from label03 to label04 with label30;
        catch java.lang.Exception from label05 to label06 with label30;
        catch java.lang.ClassNotFoundException from label07 to label08 with label15;
        catch java.lang.ClassNotFoundException from label09 to label10 with label15;
        catch java.lang.ClassNotFoundException from label11 to label12 with label15;
        catch java.lang.ClassCastException from label07 to label08 with label23;
        catch java.lang.ClassCastException from label09 to label10 with label23;
        catch java.lang.ClassCastException from label11 to label12 with label23;
        catch java.lang.Exception from label07 to label08 with label31;
        catch java.lang.Exception from label09 to label12 with label31;
        catch java.lang.Exception from label13 to label14 with label38;
        catch java.io.FileNotFoundException from label16 to label17 with label22;
        catch java.io.FileNotFoundException from label18 to label19 with label22;
        catch java.io.FileNotFoundException from label20 to label21 with label22;
        catch java.lang.Exception from label16 to label21 with label30;
        catch java.io.FileNotFoundException from label24 to label25 with label22;
        catch java.io.FileNotFoundException from label26 to label27 with label22;
        catch java.io.FileNotFoundException from label28 to label29 with label22;
        catch java.lang.Exception from label24 to label29 with label30;
        catch java.io.FileNotFoundException from label32 to label33 with label22;
        catch java.io.FileNotFoundException from label34 to label35 with label22;
        catch java.io.FileNotFoundException from label36 to label37 with label22;
        catch java.lang.Exception from label32 to label37 with label30;
    }

    public static java.lang.Object readObjectField(java.io.ObjectInputStream$GetField, java.lang.String, java.lang.Object)
    {
        java.io.ObjectInputStream$GetField $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        java.lang.Object $r3, $r4;
        com.adjust.sdk.ILogger $r5;
        java.lang.Object[] $r6;

        $r0 := @parameter0: java.io.ObjectInputStream$GetField;

        $r1 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.Object;

     label1:
        $r4 = virtualinvoke $r0.<java.io.ObjectInputStream$GetField: java.lang.Object get(java.lang.String,java.lang.Object)>($r1, $r3);

     label2:
        return $r4;

     label3:
        $r2 := @caughtexception;

        $r5 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r1;

        $r1 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r6[1] = $r1;

        interfaceinvoke $r5.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>("Unable to read \'%s\' field in migration device with message (%s)", $r6);

        return $r3;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String readStringField(java.io.ObjectInputStream$GetField, java.lang.String, java.lang.String)
    {
        java.io.ObjectInputStream$GetField $r0;
        java.lang.String $r1, $r2;
        java.lang.Object $r3;

        $r0 := @parameter0: java.io.ObjectInputStream$GetField;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <com.adjust.sdk.Util: java.lang.Object readObjectField(java.io.ObjectInputStream$GetField,java.lang.String,java.lang.Object)>($r0, $r1, $r2);

        $r1 = (java.lang.String) $r3;

        return $r1;
    }

    public static void setDefaultHttpsUrlConnectionProperties(javax.net.ssl.HttpsURLConnection, java.lang.String)
    {
        javax.net.ssl.HttpsURLConnection $r0;
        java.lang.String $r1, varReplacer9940;
        int varReplacer9939, varReplacer9941;

        nop;

        $r0 := @parameter0: javax.net.ssl.HttpsURLConnection;

        $r1 := @parameter1: java.lang.String;

        varReplacer9940 = "Client-SDK";

        virtualinvoke $r0.<javax.net.ssl.HttpsURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer9940, $r1);

        varReplacer9939 = 60000;

        virtualinvoke $r0.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>(varReplacer9939);

        varReplacer9941 = 60000;

        virtualinvoke $r0.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>(varReplacer9941);

        return;
    }

    public static java.lang.String sha1(java.lang.String)
    {
        java.lang.String $r0, varReplacer8367;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer8367 = "SHA-1";

        $r0 = staticinvoke <com.adjust.sdk.Util: java.lang.String hash(java.lang.String,java.lang.String)>($r0, varReplacer8367);

        return $r0;
    }

    public static void writeObject(java.lang.Object, android.content.Context, java.lang.String, java.lang.String)
    {
        java.lang.Object $r0, $r6;
        android.content.Context $r1;
        java.lang.String $r2, $r3, varReplacer9036, varReplacer9038, varReplacer9039, varReplacer9040;
        java.io.BufferedOutputStream $r4, r13;
        java.io.ObjectOutputStream $r5, r14;
        java.io.FileOutputStream $r7;
        com.adjust.sdk.ILogger $r8;
        java.lang.Object[] $r9;
        java.lang.Throwable $r10;
        java.lang.Exception $r11, $r12;
        java.io.Closeable r15;
        int varReplacer9037;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: android.content.Context;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r6 = null;

     label01:
        varReplacer9037 = 0;

        $r7 = virtualinvoke $r1.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>($r2, varReplacer9037);

     label02:
        $r6 = $r7;

        r13 = new java.io.BufferedOutputStream;

        $r4 = r13;

     label03:
        specialinvoke r13.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r7);

     label04:
        $r6 = $r4;

        r14 = new java.io.ObjectOutputStream;

        $r5 = r14;

     label05:
        specialinvoke r14.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r4);

     label06:
        $r6 = $r5;

     label07:
        virtualinvoke $r5.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0);

        $r8 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

     label08:
        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r3;

        $r9[1] = $r0;

     label09:
        varReplacer9038 = "Wrote %s: %s";

        interfaceinvoke $r8.<com.adjust.sdk.ILogger: void debug(java.lang.String,java.lang.Object[])>(varReplacer9038, $r9);

     label10:
        if $r6 == null goto label18;

     label11:
        r15 = (java.io.Closeable) $r6;

        interfaceinvoke r15.<java.io.Closeable: void close()>();

     label12:
        return;

     label13:
        $r10 := @caughtexception;

     label14:
        $r8 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = $r3;

        varReplacer9040 = "Failed to serialize %s";

        interfaceinvoke $r8.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer9040, $r9);

     label15:
        goto label10;

     label16:
        $r11 := @caughtexception;

        $r8 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r3;

        $r9[1] = $r11;

        varReplacer9036 = "Failed to open %s for writing (%s)";

        interfaceinvoke $r8.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer9036, $r9);

        goto label10;

     label17:
        $r12 := @caughtexception;

        $r8 = staticinvoke <com.adjust.sdk.Util: com.adjust.sdk.ILogger getLogger()>();

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = $r3;

        $r9[1] = $r12;

        varReplacer9039 = "Failed to close %s file for writing (%s)";

        interfaceinvoke $r8.<com.adjust.sdk.ILogger: void error(java.lang.String,java.lang.Object[])>(varReplacer9039, $r9);

     label18:
        return;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.io.NotSerializableException from label07 to label08 with label13;
        catch java.io.NotSerializableException from label09 to label10 with label13;
        catch java.lang.Exception from label07 to label10 with label16;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label14 to label15 with label16;
    }
}
