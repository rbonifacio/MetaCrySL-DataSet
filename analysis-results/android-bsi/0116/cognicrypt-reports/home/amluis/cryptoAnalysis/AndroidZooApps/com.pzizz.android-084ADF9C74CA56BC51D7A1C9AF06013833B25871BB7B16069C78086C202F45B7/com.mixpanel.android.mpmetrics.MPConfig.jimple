public class com.mixpanel.android.mpmetrics.MPConfig extends java.lang.Object
{
    public static boolean DEBUG;
    private static final java.lang.String LOGTAG;
    static final int MAX_NOTIFICATION_CACHE_COUNT;
    static final java.lang.String REFERRER_PREFS_NAME;
    public static final int UI_FEATURES_MIN_API;
    public static final java.lang.String VERSION;
    private static com.mixpanel.android.mpmetrics.MPConfig sInstance;
    private static final java.lang.Object sInstanceLock;
    private final boolean mAutoShowMixpanelUpdates;
    private final int mBulkUploadLimit;
    private final int mDataExpiration;
    private final java.lang.String mDecideEndpoint;
    private final java.lang.String mDecideFallbackEndpoint;
    private final boolean mDisableAppOpenEvent;
    private final boolean mDisableDecideChecker;
    private final boolean mDisableEmulatorBindingUI;
    private final boolean mDisableFallback;
    private final boolean mDisableGestureBindingUI;
    private final boolean mDisableViewCrawler;
    private final java.lang.String mEditorUrl;
    private final java.lang.String mEventsEndpoint;
    private final java.lang.String mEventsFallbackEndpoint;
    private final int mFlushInterval;
    private final int mMinimumDatabaseLimit;
    private final java.lang.String mPeopleEndpoint;
    private final java.lang.String mPeopleFallbackEndpoint;
    private final java.lang.String mResourcePackageName;
    private javax.net.ssl.SSLSocketFactory mSSLSocketFactory;
    private final boolean mTestMode;

    static void <clinit>()
    {
        java.lang.Object $r0;
        int varReplacer1324;

        nop;

        varReplacer1324 = 0;

        <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG> = varReplacer1324;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.mixpanel.android.mpmetrics.MPConfig: java.lang.Object sInstanceLock> = $r0;

        return;
    }

    void <init>(android.os.Bundle, android.content.Context)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        android.os.Bundle $r1;
        android.content.Context $r2;
        java.lang.Throwable $r3;
        javax.net.ssl.SSLContext $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        boolean $z0, $z1;
        int $i0, varReplacer1334, varReplacer1341, varReplacer1344, varReplacer1347, varReplacer1349, varReplacer1351, varReplacer1357, varReplacer1379, varReplacer1391, varReplacer1397, varReplacer1400, varReplacer1405, varReplacer1410, varReplacer1412;
        java.lang.String $r6, $r7, varReplacer1328, varReplacer1329, varReplacer1330, varReplacer1331, varReplacer1332, varReplacer1333, varReplacer1335, varReplacer1336, varReplacer1337, varReplacer1338, varReplacer1339, varReplacer1340, varReplacer1342, varReplacer1343, varReplacer1345, varReplacer1346, varReplacer1348, varReplacer1350, varReplacer1352, varReplacer1353, varReplacer1354, varReplacer1355, varReplacer1356, varReplacer1358, varReplacer1359, varReplacer1360, varReplacer1361, varReplacer1362, varReplacer1363, varReplacer1364, varReplacer1365, varReplacer1366, varReplacer1367, varReplacer1368, varReplacer1372, varReplacer1373, varReplacer1374, varReplacer1375, varReplacer1376, varReplacer1377, varReplacer1378, varReplacer1380, varReplacer1381, varReplacer1382, varReplacer1383, varReplacer1384, varReplacer1385, varReplacer1386, varReplacer1387, varReplacer1388, varReplacer1389, varReplacer1390, varReplacer1392, varReplacer1393, varReplacer1394, varReplacer1395, varReplacer1396, varReplacer1398, varReplacer1399, varReplacer1401, varReplacer1402, varReplacer1403, varReplacer1404, varReplacer1406, varReplacer1407, varReplacer1408, varReplacer1409, varReplacer1411, varReplacer1413, varReplacer1414, varReplacer1415, varReplacer1416;
        java.lang.StringBuilder $r8;
        null_type varReplacer1369, varReplacer1370, varReplacer1371;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

     label01:
        varReplacer1339 = "TLS";

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1339);

        varReplacer1369 = null;

        varReplacer1370 = null;

        varReplacer1371 = null;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1369, varReplacer1369, varReplacer1369);

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label02:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory> = $r5;

        varReplacer1343 = "com.mixpanel.android.MPConfig.EnableDebugLogging";

        varReplacer1344 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1343, varReplacer1344);

        <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG> = $z0;

        varReplacer1402 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys";

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>(varReplacer1402);

        if $z0 == 0 goto label03;

        varReplacer1359 = "MixpanelAPI.Conf";

        varReplacer1360 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys has been deprecated in favor of com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates. Please update this key as soon as possible.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer1359, varReplacer1360);

     label03:
        varReplacer1392 = "com.mixpanel.android.MPConfig.DebugFlushInterval";

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>(varReplacer1392);

        if $z0 == 0 goto label04;

        varReplacer1372 = "MixpanelAPI.Conf";

        varReplacer1373 = "We do not support com.mixpanel.android.MPConfig.DebugFlushInterval anymore. There will only be one flush interval. Please, update your AndroidManifest.xml.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer1372, varReplacer1373);

     label04:
        varReplacer1348 = "com.mixpanel.android.MPConfig.BulkUploadLimit";

        varReplacer1349 = 40;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1348, varReplacer1349);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mBulkUploadLimit> = $i0;

        varReplacer1404 = "com.mixpanel.android.MPConfig.FlushInterval";

        varReplacer1405 = 60000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1404, varReplacer1405);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mFlushInterval> = $i0;

        varReplacer1409 = "com.mixpanel.android.MPConfig.DataExpiration";

        varReplacer1410 = 432000000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1409, varReplacer1410);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDataExpiration> = $i0;

        varReplacer1396 = "com.mixpanel.android.MPConfig.MinimumDatabaseLimit";

        varReplacer1397 = 20971520;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer1396, varReplacer1397);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mMinimumDatabaseLimit> = $i0;

        varReplacer1350 = "com.mixpanel.android.MPConfig.DisableFallback";

        varReplacer1351 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1350, varReplacer1351);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableFallback> = $z0;

        varReplacer1365 = "com.mixpanel.android.MPConfig.ResourcePackageName";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1365);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mResourcePackageName> = $r6;

        varReplacer1346 = "com.mixpanel.android.MPConfig.DisableGestureBindingUI";

        varReplacer1347 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1346, varReplacer1347);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableGestureBindingUI> = $z0;

        varReplacer1378 = "com.mixpanel.android.MPConfig.DisableEmulatorBindingUI";

        varReplacer1379 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1378, varReplacer1379);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableEmulatorBindingUI> = $z0;

        varReplacer1411 = "com.mixpanel.android.MPConfig.DisableAppOpenEvent";

        varReplacer1412 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1411, varReplacer1412);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableAppOpenEvent> = $z0;

        varReplacer1333 = "com.mixpanel.android.MPConfig.DisableViewCrawler";

        varReplacer1334 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1333, varReplacer1334);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableViewCrawler> = $z0;

        varReplacer1390 = "com.mixpanel.android.MPConfig.DisableDecideChecker";

        varReplacer1391 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1390, varReplacer1391);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableDecideChecker> = $z0;

        varReplacer1356 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys";

        varReplacer1357 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1356, varReplacer1357);

        varReplacer1340 = "com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates";

        varReplacer1341 = 1;

        $z1 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1340, varReplacer1341);

        if $z0 == 0 goto label14;

        if $z1 == 0 goto label14;

        $z0 = 1;

     label05:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mAutoShowMixpanelUpdates> = $z0;

        varReplacer1399 = "com.mixpanel.android.MPConfig.TestMode";

        varReplacer1400 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer1399, varReplacer1400);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mTestMode> = $z0;

        varReplacer1336 = "com.mixpanel.android.MPConfig.EventsEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1336);

        $r7 = $r6;

        if $r6 != null goto label06;

        $r7 = "https://api.mixpanel.com/track?ip=1";

     label06:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsEndpoint> = $r7;

        varReplacer1353 = "com.mixpanel.android.MPConfig.EventsFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1353);

        $r7 = $r6;

        if $r6 != null goto label07;

        $r7 = "http://api.mixpanel.com/track?ip=1";

     label07:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsFallbackEndpoint> = $r7;

        varReplacer1413 = "com.mixpanel.android.MPConfig.PeopleEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1413);

        $r7 = $r6;

        if $r6 != null goto label08;

        $r7 = "https://api.mixpanel.com/engage";

     label08:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleEndpoint> = $r7;

        varReplacer1338 = "com.mixpanel.android.MPConfig.PeopleFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1338);

        $r7 = $r6;

        if $r6 != null goto label09;

        $r7 = "http://api.mixpanel.com/engage";

     label09:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleFallbackEndpoint> = $r7;

        varReplacer1385 = "com.mixpanel.android.MPConfig.DecideEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1385);

        $r7 = $r6;

        if $r6 != null goto label10;

        $r7 = "https://decide.mixpanel.com/decide";

     label10:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideEndpoint> = $r7;

        varReplacer1393 = "com.mixpanel.android.MPConfig.DecideFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1393);

        $r7 = $r6;

        if $r6 != null goto label11;

        $r7 = "http://decide.mixpanel.com/decide";

     label11:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideFallbackEndpoint> = $r7;

        varReplacer1375 = "com.mixpanel.android.MPConfig.EditorUrl";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1375);

        $r7 = $r6;

        if $r6 != null goto label12;

        $r7 = "wss://switchboard.mixpanel.com/connect/";

     label12:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEditorUrl> = $r7;

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        if $z0 == 0 goto label15;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer1386 = "Mixpanel configured with:\n    AutoShowMixpanelUpdates ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1386);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getAutoShowMixpanelUpdates()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1383 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1383);

        varReplacer1367 = "    BulkUploadLimit ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1367);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getBulkUploadLimit()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1387 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1387);

        varReplacer1384 = "    FlushInterval ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1384);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getFlushInterval()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1342 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1342);

        varReplacer1352 = "    DataExpiration ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1352);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getDataExpiration()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1395 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1395);

        varReplacer1403 = "    MinimumDatabaseLimit ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1403);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getMinimumDatabaseLimit()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1355 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1355);

        varReplacer1380 = "    DisableFallback ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1380);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableFallback()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1398 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1398);

        varReplacer1401 = "    DisableAppOpenEvent ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1401);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableAppOpenEvent()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1330 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1330);

        varReplacer1354 = "    DisableViewCrawler ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1354);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableViewCrawler()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1415 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1415);

        varReplacer1361 = "    DisableDeviceUIBinding ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1361);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableGestureBindingUI()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1374 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1374);

        varReplacer1414 = "    DisableEmulatorUIBinding ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1414);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableEmulatorBindingUI()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1363 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1363);

        varReplacer1408 = "    EnableDebugLogging ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1408);

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1364 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1364);

        varReplacer1358 = "    TestMode ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1358);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getTestMode()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1406 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1406);

        varReplacer1376 = "    EventsEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1376);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEventsEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1362 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1362);

        varReplacer1381 = "    PeopleEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1381);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getPeopleEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1328 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1328);

        varReplacer1382 = "    DecideEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1382);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getDecideEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1366 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1366);

        varReplacer1337 = "    EventsFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1337);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEventsFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1368 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1368);

        varReplacer1345 = "    PeopleFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1345);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getPeopleFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1335 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1335);

        varReplacer1407 = "    DecideFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1407);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getDecideFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1416 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1416);

        varReplacer1394 = "    EditorUrl ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1394);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEditorUrl()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer1329 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1329);

        varReplacer1377 = "    DisableDecideChecker ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1377);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableDecideChecker()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer1389 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1389);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1388 = "MixpanelAPI.Conf";

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(varReplacer1388, $r6);

        return;

     label13:
        $r3 := @caughtexception;

        varReplacer1331 = "MixpanelAPI.Conf";

        varReplacer1332 = "System has no SSL support. Built-in events editor will not be available";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1331, varReplacer1332, $r3);

        $r5 = null;

        goto label02;

     label14:
        $z0 = 0;

        goto label05;

     label15:
        return;

        catch java.security.GeneralSecurityException from label01 to label02 with label13;
    }

    public static com.mixpanel.android.mpmetrics.MPConfig getInstance(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        com.mixpanel.android.mpmetrics.MPConfig $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.mixpanel.android.mpmetrics.MPConfig: java.lang.Object sInstanceLock>;

        entermonitor $r1;

     label1:
        $r2 = <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance>;

        if $r2 != null goto label2;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = staticinvoke <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig readConfig(android.content.Context)>($r0);

        <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance> = $r2;

     label2:
        exitmonitor $r1;

     label3:
        $r2 = <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance>;

        return $r2;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor $r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static com.mixpanel.android.mpmetrics.MPConfig readConfig(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, varReplacer1326;
        android.content.pm.PackageManager $r3;
        android.content.pm.ApplicationInfo $r4;
        android.os.Bundle $r5;
        com.mixpanel.android.mpmetrics.MPConfig $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8;
        int varReplacer1325;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        varReplacer1325 = 128;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, varReplacer1325);

     label2:
        $r5 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r5 != null goto label4;

        $r5 = new android.os.Bundle;

     label3:
        specialinvoke $r5.<android.os.Bundle: void <init>()>();

     label4:
        $r6 = new com.mixpanel.android.mpmetrics.MPConfig;

     label5:
        specialinvoke $r6.<com.mixpanel.android.mpmetrics.MPConfig: void <init>(android.os.Bundle,android.content.Context)>($r5, $r0);

     label6:
        return $r6;

     label7:
        $r1 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer1326 = "Can\'t configure Mixpanel with package name ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1326);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r1);

        throw $r7;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label7;
    }

    public boolean getAutoShowMixpanelUpdates()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mAutoShowMixpanelUpdates>;

        return z0;
    }

    public int getBulkUploadLimit()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mBulkUploadLimit>;

        return i0;
    }

    public int getDataExpiration()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDataExpiration>;

        return i0;
    }

    public java.lang.String getDecideEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideEndpoint>;

        return r1;
    }

    public java.lang.String getDecideFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideFallbackEndpoint>;

        return r1;
    }

    public boolean getDisableAppOpenEvent()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableAppOpenEvent>;

        return z0;
    }

    public boolean getDisableDecideChecker()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableDecideChecker>;

        return z0;
    }

    public boolean getDisableEmulatorBindingUI()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableEmulatorBindingUI>;

        return z0;
    }

    public boolean getDisableFallback()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableFallback>;

        return z0;
    }

    public boolean getDisableGestureBindingUI()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableGestureBindingUI>;

        return z0;
    }

    public boolean getDisableViewCrawler()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableViewCrawler>;

        return z0;
    }

    public java.lang.String getEditorUrl()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEditorUrl>;

        return r1;
    }

    public java.lang.String getEventsEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsEndpoint>;

        return r1;
    }

    public java.lang.String getEventsFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsFallbackEndpoint>;

        return r1;
    }

    public int getFlushInterval()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mFlushInterval>;

        return i0;
    }

    public int getMinimumDatabaseLimit()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mMinimumDatabaseLimit>;

        return i0;
    }

    public java.lang.String getPeopleEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleEndpoint>;

        return r1;
    }

    public java.lang.String getPeopleFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleFallbackEndpoint>;

        return r1;
    }

    public java.lang.String getResourcePackageName()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mResourcePackageName>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.Throwable $r1;
        javax.net.ssl.SSLSocketFactory r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        entermonitor $r0;

     label1:
        r2 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean getTestMode()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mTestMode>;

        return z0;
    }

    public void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        javax.net.ssl.SSLSocketFactory $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        entermonitor $r0;

     label1:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
