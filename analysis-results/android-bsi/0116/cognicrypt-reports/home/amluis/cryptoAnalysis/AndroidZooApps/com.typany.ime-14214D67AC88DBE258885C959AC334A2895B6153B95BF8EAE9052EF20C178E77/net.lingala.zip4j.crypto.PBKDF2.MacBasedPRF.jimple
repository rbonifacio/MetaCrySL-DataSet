public class net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF extends java.lang.Object implements net.lingala.zip4j.crypto.PBKDF2.PRF
{
    protected javax.crypto.Mac a;
    protected int b;
    protected java.lang.String c;

    public void <init>(java.lang.String)
    {
        net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF $r0;
        java.lang.String $r1;
        java.lang.RuntimeException $r2;
        javax.crypto.Mac $r3;
        int $i0;
        java.lang.Throwable $r4;

        nop;

        $r0 := @this: net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: java.lang.String c> = $r1;

     label1:
        $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r1);

     label2:
        $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: javax.crypto.Mac a> = $r3;

        $r3 = $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: javax.crypto.Mac a>;

     label3:
        $i0 = virtualinvoke $r3.<javax.crypto.Mac: int getMacLength()>();

     label4:
        $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: int b> = $i0;

        return;

     label5:
        $r4 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r2;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
    }

    public final void a(byte[], int, int)
    {
        net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF $r0;
        byte[] $r1;
        int $i0, $i1;
        java.lang.RuntimeException $r2;
        javax.crypto.Mac $r3;
        java.lang.Throwable $r4;

        nop;

        $r0 := @this: net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r3 = $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: javax.crypto.Mac a>;

     label1:
        virtualinvoke $r3.<javax.crypto.Mac: void update(byte[],int,int)>($r1, $i0, $i1);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r2;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }

    public final byte[] a()
    {
        net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF $r0;
        byte[] $r1;
        javax.crypto.Mac $r2;

        nop;

        $r0 := @this: net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF;

        $r2 = $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: javax.crypto.Mac a>;

        $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal()>();

        return $r1;
    }

    public final byte[] a(byte[])
    {
        net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF $r0;
        byte[] $r1;
        javax.crypto.Mac $r2;

        nop;

        $r0 := @this: net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: javax.crypto.Mac a>;

        $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    public final int b()
    {
        net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF $r0;
        int i0;

        nop;

        $r0 := @this: net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF;

        i0 = $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: int b>;

        return i0;
    }

    public final void b(byte[])
    {
        net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF $r0;
        byte[] $r1;
        java.lang.String $r2;
        javax.crypto.Mac $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        java.lang.Throwable $r5;
        java.lang.RuntimeException $r6;

        nop;

        $r0 := @this: net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF;

        $r1 := @parameter0: byte[];

        $r3 = $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: javax.crypto.Mac a>;

        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r2 = $r0.<net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: java.lang.String c>;

     label1:
        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r2);

        virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r4);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.security.InvalidKeyException from label1 to label2 with label3;
    }
}
