Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <org.jsoup.helper.HttpConnection$Response: void initUnSecureTSL()>
		SHA-256: 13995045b6fe88ac1e570f57460505d4fec052026d8ba6f5f48c1982d4a554c7
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer5308)
		Method: <com.google.firebase.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: fe8ecec38163524cfdbd38546326564f33ba5dfb86fcfd00039fc554985a995d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.firebase.iid.FirebaseInstanceId: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 6b168157f32a9a8a3931f5946fc7b5abc4944acb80b1a05acff5eb19d13bd407
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: specialinvoke $r4.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r11)
		Method: <com.google.firebase.iid.zzh: java.security.KeyPair zzeM(java.lang.String)>
		SHA-256: 269133afb074843ad22838474675e95ae8e2a1a4f8822f1f4628fbd29942f4e6
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.PrivateKey
		Statement: $r9 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.firebase.iid.zzh: java.security.KeyPair zzjA(java.lang.String)>
		SHA-256: 1a9f8944dbdaed38912ce71b848c17bc547452c319953e795212d836cdffeef4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1166)
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: 87d5f3b181238736d7d49299622ea2c79444e163340c5a8fe3f388830be39388
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.firebase.iid.FirebaseInstanceId: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 664461452cee5d717d69c4da272c76a871784c59e06a6ee2855fff1323b1ed08
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.firebase.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: 92352f365af81b6cd93aec5685485ef79e11ee652b7e2f3af45cc5e33bb8d7b9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5291)
		Method: <com.google.firebase.iid.FirebaseInstanceId: java.lang.String zza(java.security.KeyPair)>
		SHA-256: a2ae2aff59d226c0370e98a60401fc28eb48aa3ee1f1593eaace7304dcff8335
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1871)
		Method: <org.jsoup.helper.HttpConnection$Response: void initUnSecureTSL()>
		SHA-256: d43a2d304fb9291852e39b4610a016a9d9e7a85b9c0e8d48c98df38394036429
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.internal.zzaue: void zzmr()>
		SHA-256: 12135212daed4e6f8b392897b2db7b008c88d6c4537bf2dde916dab07153041c
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: bdbb92e6f960385509aefd190497c89a8c421e1717a727a6ba55a04508029dc2
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.firebase.iid.zzh: java.security.KeyPair zzjA(java.lang.String)>
		SHA-256: 6eeeb38a5fb440661fa9ade50c476246ff54083bea555bbd7a5664acb3487299
		Secure: true

Findings in Java Class: com.google.android.gms.internal.zzpx

	 in Method: java.lang.String zzbb(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #87d5f3b181238736d7d49299622ea2c79444e163340c5a8fe3f388830be39388)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1166)


Findings in Java Class: com.google.firebase.iid.FirebaseInstanceId

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a2ae2aff59d226c0370e98a60401fc28eb48aa3ee1f1593eaace7304dcff8335)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5291)


Findings in Java Class: org.jsoup.helper.HttpConnection$Response

	 in Method: void initUnSecureTSL()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1870, r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1870, r10, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
	ConstraintError: 2
=====================================================================