class com.mixpanel.android.mpmetrics.AnalyticsMessages extends java.lang.Object
{
    private static final int ENQUEUE_EVENTS;
    private static final int ENQUEUE_PEOPLE;
    private static final int FLUSH_QUEUE;
    private static final int INSTALL_DECIDE_CHECK;
    private static final int KILL_WORKER;
    private static final java.lang.String LOGTAG;
    private static final int REGISTER_FOR_GCM;
    private static final java.util.Map sInstances;
    protected final com.mixpanel.android.mpmetrics.MPConfig mConfig;
    protected final android.content.Context mContext;
    private final com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker;

    static void <clinit>()
    {
        java.util.HashMap $r0;

        nop;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.mixpanel.android.mpmetrics.AnalyticsMessages: java.util.Map sInstances> = $r0;

        return;
    }

    void <init>(android.content.Context)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        android.content.Context $r1;
        com.mixpanel.android.mpmetrics.MPConfig $r2;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r3;
        com.mixpanel.android.util.RemoteService $r4;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: android.content.Context mContext> = $r1;

        $r2 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.MPConfig getConfig(android.content.Context)>($r1);

        $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.MPConfig mConfig> = $r2;

        $r3 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker createWorker()>();

        $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker> = $r3;

        $r4 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.util.RemoteService getPoster()>();

        interfaceinvoke $r4.<com.mixpanel.android.util.RemoteService: void checkIsMixpanelBlocked()>();

        return;
    }

    static void access$000(com.mixpanel.android.mpmetrics.AnalyticsMessages, java.lang.String)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: void logAboutMessageToMixpanel(java.lang.String)>($r1);

        return;
    }

    static void access$500(com.mixpanel.android.mpmetrics.AnalyticsMessages, java.lang.String, java.lang.Throwable)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        specialinvoke $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: void logAboutMessageToMixpanel(java.lang.String,java.lang.Throwable)>($r1, $r2);

        return;
    }

    public static com.mixpanel.android.mpmetrics.AnalyticsMessages getInstance(android.content.Context)
    {
        android.content.Context $r0;
        java.util.Map $r1, $r2;
        boolean $z0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.mixpanel.android.mpmetrics.AnalyticsMessages: java.util.Map sInstances>;

        entermonitor $r1;

     label1:
        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = <com.mixpanel.android.mpmetrics.AnalyticsMessages: java.util.Map sInstances>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

        if $z0 != 0 goto label4;

        $r3 = new com.mixpanel.android.mpmetrics.AnalyticsMessages;

        specialinvoke $r3.<com.mixpanel.android.mpmetrics.AnalyticsMessages: void <init>(android.content.Context)>($r0);

        $r2 = <com.mixpanel.android.mpmetrics.AnalyticsMessages: java.util.Map sInstances>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r3);

     label2:
        exitmonitor $r1;

     label3:
        return $r3;

     label4:
        $r2 = <com.mixpanel.android.mpmetrics.AnalyticsMessages: java.util.Map sInstances>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r3 = (com.mixpanel.android.mpmetrics.AnalyticsMessages) $r4;

        goto label2;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    private void logAboutMessageToMixpanel(java.lang.String)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        java.lang.String $r1, varReplacer1201, varReplacer1202, varReplacer1203;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.Thread $r3;
        long $l0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter0: java.lang.String;

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer1201 = " (Thread ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1201);

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l0 = virtualinvoke $r3.<java.lang.Thread: long getId()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        varReplacer1202 = ")";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1202);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1203 = "MixpanelAPI.Messages";

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(varReplacer1203, $r1);

     label1:
        return;
    }

    private void logAboutMessageToMixpanel(java.lang.String, java.lang.Throwable)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.Thread $r4;
        long $l0;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Thread ");

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $l0 = virtualinvoke $r4.<java.lang.Thread: long getId()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("MixpanelAPI.Messages", $r1, $r2);

     label1:
        return;
    }

    protected com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker createWorker()
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 = new com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker;

        specialinvoke $r1.<com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker: void <init>(com.mixpanel.android.mpmetrics.AnalyticsMessages)>($r0);

        return $r1;
    }

    public void eventsMessage(com.mixpanel.android.mpmetrics.AnalyticsMessages$EventDescription)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$EventDescription $r1;
        android.os.Message $r2;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r3;
        int varReplacer1199;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter0: com.mixpanel.android.mpmetrics.AnalyticsMessages$EventDescription;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        varReplacer1199 = 1;

        $r2.<android.os.Message: int what> = varReplacer1199;

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        $r3 = $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker>;

        virtualinvoke $r3.<com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker: void runMessage(android.os.Message)>($r2);

        return;
    }

    protected com.mixpanel.android.mpmetrics.MPConfig getConfig(android.content.Context)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        android.content.Context $r1;
        com.mixpanel.android.mpmetrics.MPConfig $r2;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig getInstance(android.content.Context)>($r1);

        return $r2;
    }

    protected com.mixpanel.android.util.RemoteService getPoster()
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        com.mixpanel.android.util.HttpService $r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 = new com.mixpanel.android.util.HttpService;

        specialinvoke $r1.<com.mixpanel.android.util.HttpService: void <init>()>();

        return $r1;
    }

    public long getTrackEngageRetryAfter()
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r1;
        android.os.Handler $r2;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler $r3;
        long $l0;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker>;

        $r2 = staticinvoke <com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker: android.os.Handler access$400(com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker)>($r1);

        $r3 = (com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler) $r2;

        $l0 = virtualinvoke $r3.<com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker$AnalyticsMessageHandler: long getTrackEngageRetryAfter()>();

        return $l0;
    }

    public void hardKill()
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        android.os.Message $r1;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r1.<android.os.Message: int what> = 5;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker>;

        virtualinvoke $r2.<com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker: void runMessage(android.os.Message)>($r1);

        return;
    }

    public void installDecideCheck(com.mixpanel.android.mpmetrics.DecideMessages)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        com.mixpanel.android.mpmetrics.DecideMessages $r1;
        android.os.Message $r2;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r3;
        int varReplacer1198;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter0: com.mixpanel.android.mpmetrics.DecideMessages;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        varReplacer1198 = 12;

        $r2.<android.os.Message: int what> = varReplacer1198;

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        $r3 = $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker>;

        virtualinvoke $r3.<com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker: void runMessage(android.os.Message)>($r2);

        return;
    }

    boolean isDead()
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        boolean $z0;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r1;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 = $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker>;

        $z0 = virtualinvoke $r1.<com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker: boolean isDead()>();

        return $z0;
    }

    protected com.mixpanel.android.mpmetrics.MPDbAdapter makeDbAdapter(android.content.Context)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        android.content.Context $r1;
        com.mixpanel.android.mpmetrics.MPDbAdapter $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter0: android.content.Context;

        $r2 = new com.mixpanel.android.mpmetrics.MPDbAdapter;

        specialinvoke $r2.<com.mixpanel.android.mpmetrics.MPDbAdapter: void <init>(android.content.Context)>($r1);

        return $r2;
    }

    public void peopleMessage(org.json.JSONObject)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        org.json.JSONObject $r1;
        android.os.Message $r2;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r3;
        int varReplacer1839;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        varReplacer1839 = 0;

        $r2.<android.os.Message: int what> = varReplacer1839;

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        $r3 = $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker>;

        virtualinvoke $r3.<com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker: void runMessage(android.os.Message)>($r2);

        return;
    }

    public void postToServer()
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        android.os.Message $r1;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r2;
        int varReplacer1846;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        varReplacer1846 = 2;

        $r1.<android.os.Message: int what> = varReplacer1846;

        $r2 = $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker>;

        virtualinvoke $r2.<com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker: void runMessage(android.os.Message)>($r1);

        return;
    }

    public void registerForGCM(java.lang.String)
    {
        com.mixpanel.android.mpmetrics.AnalyticsMessages $r0;
        java.lang.String $r1;
        android.os.Message $r2;
        com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker $r3;

        $r0 := @this: com.mixpanel.android.mpmetrics.AnalyticsMessages;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r2.<android.os.Message: int what> = 13;

        $r2.<android.os.Message: java.lang.Object obj> = $r1;

        $r3 = $r0.<com.mixpanel.android.mpmetrics.AnalyticsMessages: com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker mWorker>;

        virtualinvoke $r3.<com.mixpanel.android.mpmetrics.AnalyticsMessages$Worker: void runMessage(android.os.Message)>($r2);

        return;
    }
}
