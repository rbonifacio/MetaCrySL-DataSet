Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r26
		Type: java.security.MessageDigest
		Statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5161)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: b68749dac9e9fecf205b33d6c6e887c2c0b0a50b46cc4bd5573f280017e9d4cd
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r3.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r2, $r11)
		Method: <com.google.bitcoin.core.CheckpointManager: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)>
		SHA-256: b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2899)
		Method: <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>
		SHA-256: f7b088a9128c063de9a2a60a9a3582bfa50d97abf612f4da51133e56e3002119
		Secure: true
	Object:
		Variable: r50
		Type: java.security.cert.PKIXParameters
		Statement: specialinvoke r50.<java.security.cert.PKIXParameters: void <init>(java.security.KeyStore)>($r23)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: c91c5c04f9ad4493017b9698b5414d54240b894f945aec5970e752f66e428e43
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <de.schildbach.wallet.util.Crypto: void <clinit>()>
		SHA-256: 85d47204815d2c880a4f9340a728bff586b271e476d0c85901ff5549e19af52b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6499)
		Method: <com.hashengineering.crypto.Skein: void <clinit>()>
		SHA-256: bbc19ad71218db7c69e7d363f1dec73a8526c2a93a6458f58ee853859d611870
		Secure: true
	Object:
		Variable: varReplacer6592
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6592)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: 2622a5e76b68cc5a9f8622637c2d1f4958aef5a1b4be823d4a3cd80a41126d5b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3852)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 8219b61f3f01807a9e73ced5383e9eeafd2ebbe8bb6ff11c5483da49b22db394
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 8e31e01138be74028ef3a6b58db86216562b93149a95d68d64b87e6f3437ab3b
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1167)
		Method: <com.google.bitcoin.core.CheckpointManager: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)>
		SHA-256: 892c6fd33d1dc8041776a129128c0c64aa8bdeb2bb142964a121a4340de37302
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6546)
		Method: <com.hashengineering.crypto.Groestl: void <clinit>()>
		SHA-256: 974ef506d7bd933e340f2d5676eeecd84b05f40a59a8fd73116a7ed61c6d76dd
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 1cbe63703d8dcb7bcc9a63ef04be35fce4fb3c8940944a5ffe8650363e1a9897
		Secure: false
	Object:
		Variable: $r28
		Type: java.security.Signature
		Statement: $r28 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: d3c7b83e7486f02ed3737d00a2cac468af662a3672495cefd4612607b0a6eeed
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3851)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 856b7c6854391f6517711a0f6c5420d2fb9ade455a3bf082236ccac311c83e1e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.bitcoin.crypto.KeyCrypterScrypt: void <clinit>()>
		SHA-256: fdba3ff09a29f7bd6f734efc4217ade56b46c6431eddfac7a2866238eec414d5
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.bitcoin.core.ECKey: void <clinit>()>
		SHA-256: b8182c8b806eae893d66be9f5681d586425e17587ba497b9aa5ad2da95e1152
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: c802f952b3f7fbd04b9e61c85189101cdaa4ba6bbac327aa4fbf07b49ff3fc88
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer629)
		Method: <com.google.bitcoin.core.Utils: void <clinit>()>
		SHA-256: d6c57550e8124220b8d8f510c6647ff9638594ad8870c88b272653f716c26a66
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>
		SHA-256: 546d290a2432772f7d77fd096aafe14fd3233a466aced47ca28eb87d03674bd9
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6593)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: c5d4d687adfe40e2536a8377a20113c3bc26c37e3628ad30c09e3bc290d256e3
		Secure: false
	Object:
		Variable: $r30
		Type: byte[]
		Statement: $z0 = virtualinvoke $r28.<java.security.Signature: boolean verify(byte[])>($r30)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: 23ab06d7af157d4146cea1b1243ee9d40e5e853ed562861ee8ccf78940d8de6b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 42405f43c07d0cd9ac87f0e4cabacd6c6d8859ff772f57160ec37ce6ebdf0f30
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r4, varReplacer6606)
		Method: <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>
		SHA-256: 65d0bbbc260606e52c628bdf63be98e7141b23b655ca8d846b494ccaca2da51e
		Secure: true
	Object:
		Variable: $r26
		Type: java.security.MessageDigest
		Statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5163)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 3e10163536809e19e979dab297196644ed41d47c6f3554bd0f3dea433b42d6f0
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6592)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: fd0865e187c5c16656631ff27534ee540b118a279abd4b580a9c87cce09d09f4
		Secure: false

Findings in Java Class: com.google.bitcoin.core.CheckpointManager

	 in Method: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #892c6fd33d1dc8041776a129128c0c64aa8bdeb2bb142964a121a4340de37302)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r2, $r11)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #892c6fd33d1dc8041776a129128c0c64aa8bdeb2bb142964a121a4340de37302)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()

		ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer1170)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer1161)

		ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer1161)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer1170)


Findings in Java Class: com.google.bitcoin.protocols.payments.PaymentSession

	 in Method: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r28.<java.security.Signature: void initVerify(java.security.PublicKey)>($r27)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #d3c7b83e7486f02ed3737d00a2cac468af662a3672495cefd4612607b0a6eeed)
			First parameter (with value "SHA1withRSA") should be any of {RSASSA-PSS, SHA256withDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, DSS}
			at statement: $r28 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)


	 in Method: java.security.KeyStore createKeyStore(java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #42405f43c07d0cd9ac87f0e4cabacd6c6d8859ff772f57160ec37ce6ebdf0f30)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r5)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #c802f952b3f7fbd04b9e61c85189101cdaa4ba6bbac327aa4fbf07b49ff3fc88)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r5)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #856b7c6854391f6517711a0f6c5420d2fb9ade455a3bf082236ccac311c83e1e)
			First parameter (with value "JKS") should be any of {BKS, PKCS12, BouncyCastle, AndroidCAStore}
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3851)


Findings in Java Class: com.google.bitcoin.script.Script

	 in Method: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b68749dac9e9fecf205b33d6c6e887c2c0b0a50b46cc4bd5573f280017e9d4cd)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5161)


Findings in Java Class: com.lambdaworks.crypto.PBKDF

	 in Method: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)
		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Mac
			Constraint length(output1) + 0 > outOffset + 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r4, varReplacer6606)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #c5d4d687adfe40e2536a8377a20113c3bc26c37e3628ad30c09e3bc290d256e3)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r4)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #c5d4d687adfe40e2536a8377a20113c3bc26c37e3628ad30c09e3bc290d256e3)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #c5d4d687adfe40e2536a8377a20113c3bc26c37e3628ad30c09e3bc290d256e3)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i3 = virtualinvoke $r0.<javax.crypto.Mac: int getMacLength()>()


Findings in Java Class: com.lambdaworks.crypto.SCrypt

	 in Method: byte[] scryptJ(byte[],byte[],int,int,int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6592)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #c5d4d687adfe40e2536a8377a20113c3bc26c37e3628ad30c09e3bc290d256e3)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: staticinvoke <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>($r5, $r0, varReplacer6594, $r4, varReplacer6595)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 5
	RequiredPredicateError: 2
	TypestateError: 3
	ConstraintError: 3
	NeverTypeOfError: 2
	ForbiddenMethodError: 2
	ImpreciseValueExtractionError: 1
=====================================================================