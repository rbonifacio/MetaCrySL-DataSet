public final class hr.asseco.android.b.a extends java.lang.Object
{
    static java.util.Random a;
    static java.lang.String b;

    static void <clinit>()
    {
        java.security.SecureRandom $r0, r2;
        java.lang.Throwable $r1;
        java.security.NoSuchAlgorithmException r3;
        java.lang.String varReplacer771, varReplacer772;

        nop;

        varReplacer771 = "UTF-8";

        <hr.asseco.android.b.a: java.lang.String b> = varReplacer771;

     label1:
        varReplacer772 = "SHA1PRNG";

        $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer772);

     label2:
        <hr.asseco.android.b.a: java.util.Random a> = $r0;

        return;

     label3:
        $r1 := @caughtexception;

        r3 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r3.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        r2 = new java.security.SecureRandom;

        specialinvoke r2.<java.security.SecureRandom: void <init>()>();

        <hr.asseco.android.b.a: java.util.Random a> = r2;

        return;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static byte[] a(java.lang.String)
    {
        java.lang.String $r0, varReplacer764, varReplacer770;
        java.security.MessageDigest $r1;
        byte[] $r2, $r3;
        java.lang.Throwable $r4;
        java.security.NoSuchAlgorithmException r5;
        int varReplacer765, varReplacer766, varReplacer767, varReplacer768;
        null_type varReplacer769;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer764 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer764);

        $r2 = staticinvoke <hr.asseco.android.utils.k: byte[] a(java.lang.CharSequence)>($r0);

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        varReplacer765 = 0;

        varReplacer766 = 8;

        $r2 = staticinvoke <hr.asseco.android.utils.c: byte[] a(byte[],int,int)>($r3, varReplacer765, varReplacer766);

        varReplacer767 = 8;

        varReplacer768 = 8;

        $r3 = staticinvoke <hr.asseco.android.utils.c: byte[] a(byte[],int,int)>($r3, varReplacer767, varReplacer767);

        $r2 = staticinvoke <hr.asseco.android.utils.c: byte[] a(byte[],byte[])>($r2, $r3);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        r5 = (java.security.NoSuchAlgorithmException) $r4;

        $r0 = virtualinvoke r5.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        varReplacer770 = "CRYPTO_UTILS";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer770, $r0, $r4);

        varReplacer769 = null;

        return varReplacer769;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static byte[] a(byte[])
    {
        byte[] $r0, $r1;
        int $i0, $i1, varReplacer845, varReplacer846;
        java.util.Random $r2;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i0 = $i0 + 16;

        $i1 = lengthof $r0;

        $i1 = $i1 % 16;

        $i0 = $i0 - $i1;

        $r1 = newarray (byte)[$i0];

        $r2 = <hr.asseco.android.b.a: java.util.Random a>;

        virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>($r1);

        $i0 = lengthof $r0;

        varReplacer845 = 0;

        varReplacer846 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, varReplacer845, $r1, varReplacer845, $i0);

        return $r1;
    }

    public static byte[] a(byte[], byte[])
    {
        byte[] $r0, $r1;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r0 = staticinvoke <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>($r0, $r1, 0);

        return $r0;
    }

    public static byte[] a(byte[], byte[], boolean)
    {
        byte[] $r0, $r1;
        boolean $z0;
        javax.crypto.Cipher $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        java.lang.Exception $r4;
        java.lang.RuntimeException $r5;
        java.lang.String varReplacer842, varReplacer843;
        int varReplacer844;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $z0 := @parameter2: boolean;

        goto label4;

     label1:
        $r3 = new javax.crypto.spec.SecretKeySpec;

     label2:
        varReplacer843 = "AES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer843);

        varReplacer844 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer844, $r3);

        $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label3:
        return $r0;

     label4:
        varReplacer842 = "AES/ECB/NoPadding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer842);

     label5:
        goto label1;

     label6:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label1 with label6;
        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static byte[][] a()
    {
        java.util.Random $r0;
        long $l0, $l1, $l2, $l3;
        java.lang.String $r1;
        byte[] $r2, $r3, $r4;
        byte[][] $r5;

        $r0 = <hr.asseco.android.b.a: java.util.Random a>;

        $l0 = virtualinvoke $r0.<java.util.Random: long nextLong()>();

        $r0 = <hr.asseco.android.b.a: java.util.Random a>;

        $l1 = virtualinvoke $r0.<java.util.Random: long nextLong()>();

        $r0 = <hr.asseco.android.b.a: java.util.Random a>;

        $l2 = virtualinvoke $r0.<java.util.Random: long nextLong()>();

        $r0 = <hr.asseco.android.b.a: java.util.Random a>;

        $l3 = virtualinvoke $r0.<java.util.Random: long nextLong()>();

        $r1 = staticinvoke <hr.asseco.android.utils.j: java.lang.String a(long)>($l0);

        $r2 = staticinvoke <hr.asseco.android.utils.j: byte[] a(java.lang.String)>($r1);

        $r1 = staticinvoke <hr.asseco.android.utils.j: java.lang.String a(long)>($l1);

        $r3 = staticinvoke <hr.asseco.android.utils.j: byte[] a(java.lang.String)>($r1);

        $r2 = staticinvoke <hr.asseco.android.utils.c: byte[] a(byte[],byte[])>($r2, $r3);

        $r1 = staticinvoke <hr.asseco.android.utils.j: java.lang.String a(long)>($l2);

        $r3 = staticinvoke <hr.asseco.android.utils.j: byte[] a(java.lang.String)>($r1);

        $r1 = staticinvoke <hr.asseco.android.utils.j: java.lang.String a(long)>($l3);

        $r4 = staticinvoke <hr.asseco.android.utils.j: byte[] a(java.lang.String)>($r1);

        $r3 = staticinvoke <hr.asseco.android.utils.c: byte[] a(byte[],byte[])>($r3, $r4);

        $r5 = newarray (byte[])[2];

        $r5[0] = $r2;

        $r5[1] = $r3;

        return $r5;
    }

    public static byte[] b(java.lang.String)
    {
        java.lang.String $r0;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Throwable $r3;
        java.security.NoSuchAlgorithmException r4;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        $r2 = staticinvoke <hr.asseco.android.utils.k: byte[] a(java.lang.CharSequence)>($r0);

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r2 = staticinvoke <hr.asseco.android.utils.c: byte[] a(byte[],int,int)>($r2, 0, 16);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r3;

        $r0 = virtualinvoke r4.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("CRYPTO_UTILS", $r0, $r3);

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static byte[] b(byte[], byte[])
    {
        byte[] $r0, $r1;
        int varReplacer834;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        varReplacer834 = 0;

        $r0 = staticinvoke <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>($r0, $r1, varReplacer834);

        return $r0;
    }

    public static byte[] b(byte[], byte[], boolean)
    {
        byte[] $r0, $r1;
        boolean $z0;
        javax.crypto.Cipher $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        java.lang.Exception $r4;
        java.lang.RuntimeException $r5;
        java.lang.String varReplacer831, varReplacer832;
        int varReplacer833;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $z0 := @parameter2: boolean;

        goto label4;

     label1:
        $r3 = new javax.crypto.spec.SecretKeySpec;

     label2:
        varReplacer831 = "AES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer831);

        varReplacer833 = 2;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer833, $r3);

        $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label3:
        return $r0;

     label4:
        varReplacer832 = "AES/ECB/NoPadding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer832);

     label5:
        goto label1;

     label6:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label1 with label6;
        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static byte[] c(byte[], byte[])
    {
        byte[] $r0, $r1;
        int $i0;
        java.lang.RuntimeException $r2;
        javax.crypto.Cipher $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        java.lang.Exception $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r0;

        if $i0 == 16 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("3DES key must be 128 bits length");

        throw $r2;

     label1:
        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DESede/ECB/NoPadding");

     label2:
        $r4 = new javax.crypto.spec.SecretKeySpec;

     label3:
        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "DESede");

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r4);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label4:
        return $r0;

     label5:
        $r5 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r2;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static byte[] d(byte[], byte[])
    {
        byte[] $r0, $r1;
        int $i0;
        java.lang.RuntimeException $r2;
        javax.crypto.Cipher $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        java.lang.Exception $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r0;

        if $i0 == 16 goto label1;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("3DES key must be 128 bits long");

        throw $r2;

     label1:
        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DESede/ECB/NoPadding");

     label2:
        $r4 = new javax.crypto.spec.SecretKeySpec;

     label3:
        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "DESede");

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r4);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label4:
        return $r0;

     label5:
        $r5 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r2;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
