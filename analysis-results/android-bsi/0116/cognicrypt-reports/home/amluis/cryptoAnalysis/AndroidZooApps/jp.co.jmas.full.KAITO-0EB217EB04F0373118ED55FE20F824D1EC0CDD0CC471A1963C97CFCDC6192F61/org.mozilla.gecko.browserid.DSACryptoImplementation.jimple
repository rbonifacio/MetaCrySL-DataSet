public class org.mozilla.gecko.browserid.DSACryptoImplementation extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        nop;

        $r1 = class "Lorg/mozilla/gecko/browserid/DSACryptoImplementation;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <org.mozilla.gecko.browserid.DSACryptoImplementation: java.lang.String LOG_TAG> = $r0;

        return;
    }

    public void <init>()
    {
        org.mozilla.gecko.browserid.DSACryptoImplementation $r0;

        $r0 := @this: org.mozilla.gecko.browserid.DSACryptoImplementation;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String access$000()
    {
        java.lang.String r0;

        r0 = <org.mozilla.gecko.browserid.DSACryptoImplementation: java.lang.String LOG_TAG>;

        return r0;
    }

    private static org.mozilla.gecko.browserid.SigningPrivateKey createPrivateKey(org.mozilla.gecko.sync.ExtendedJSONObject) throws java.security.spec.InvalidKeySpecException, java.security.NoSuchAlgorithmException
    {
        org.mozilla.gecko.sync.ExtendedJSONObject $r0;
        java.lang.String $r1, $r2, varReplacer12637, varReplacer12638, varReplacer12639, varReplacer12640, varReplacer12641, varReplacer12642, varReplacer12643, varReplacer12644, varReplacer12646, varReplacer12647, varReplacer12649, varReplacer12652;
        boolean $z0;
        java.security.spec.InvalidKeySpecException $r3;
        java.lang.StringBuilder $r4;
        java.math.BigInteger $r5, $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.NullPointerException $r10;
        java.lang.Throwable $r11;
        java.security.spec.DSAPrivateKeySpec $r12;
        java.security.KeyFactory $r13;
        java.security.PrivateKey $r14;
        java.security.interfaces.DSAPrivateKey $r15;
        org.mozilla.gecko.browserid.DSACryptoImplementation$DSASigningPrivateKey $r16;
        int varReplacer12645, varReplacer12648, varReplacer12650, varReplacer12651;

        nop;

        $r0 := @parameter0: org.mozilla.gecko.sync.ExtendedJSONObject;

        varReplacer12649 = "algorithm";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12649);

        $r2 = "DS";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label01;

        $r3 = new java.security.spec.InvalidKeySpecException;

        $r4 = new java.lang.StringBuilder;

        varReplacer12647 = "algorithm must equal DS, was ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer12647);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label01:
        $r5 = new java.math.BigInteger;

     label02:
        varReplacer12639 = "x";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12639);

        varReplacer12648 = 16;

        specialinvoke $r5.<java.math.BigInteger: void <init>(java.lang.String,int)>($r1, varReplacer12648);

     label03:
        $r6 = new java.math.BigInteger;

     label04:
        varReplacer12642 = "p";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12642);

        varReplacer12650 = 16;

        specialinvoke $r6.<java.math.BigInteger: void <init>(java.lang.String,int)>($r1, varReplacer12650);

     label05:
        $r7 = new java.math.BigInteger;

     label06:
        varReplacer12652 = "q";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12652);

        varReplacer12651 = 16;

        specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String,int)>($r1, varReplacer12651);

     label07:
        $r8 = new java.math.BigInteger;

     label08:
        varReplacer12643 = "g";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12643);

        varReplacer12645 = 16;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String,int)>($r1, varReplacer12645);

     label09:
        if $r5 != null goto label13;

        $r9 = new java.lang.IllegalArgumentException;

     label10:
        varReplacer12646 = "x must not be null";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12646);

        throw $r9;

     label11:
        $r10 := @caughtexception;

     label12:
        $r3 = new java.security.spec.InvalidKeySpecException;

        varReplacer12637 = "x, p, q, and g must be integers encoded as strings, base 16";

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>(varReplacer12637);

        throw $r3;

     label13:
        if $r6 != null goto label16;

        $r9 = new java.lang.IllegalArgumentException;

     label14:
        varReplacer12644 = "p must not be null";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12644);

        throw $r9;

     label15:
        $r11 := @caughtexception;

        goto label12;

     label16:
        if $r7 != null goto label18;

        $r9 = new java.lang.IllegalArgumentException;

     label17:
        varReplacer12641 = "q must not be null";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12641);

        throw $r9;

     label18:
        if $r8 != null goto label20;

        $r9 = new java.lang.IllegalArgumentException;

     label19:
        varReplacer12640 = "g must not be null";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12640);

        throw $r9;

     label20:
        $r12 = new java.security.spec.DSAPrivateKeySpec;

     label21:
        specialinvoke $r12.<java.security.spec.DSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r6, $r7, $r8);

        varReplacer12638 = "DSA";

        $r13 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer12638);

        $r14 = virtualinvoke $r13.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12);

     label22:
        $r15 = (java.security.interfaces.DSAPrivateKey) $r14;

        $r16 = new org.mozilla.gecko.browserid.DSACryptoImplementation$DSASigningPrivateKey;

     label23:
        specialinvoke $r16.<org.mozilla.gecko.browserid.DSACryptoImplementation$DSASigningPrivateKey: void <init>(java.security.interfaces.DSAPrivateKey)>($r15);

     label24:
        return $r16;

        catch java.lang.NullPointerException from label02 to label03 with label11;
        catch java.lang.NullPointerException from label04 to label05 with label11;
        catch java.lang.NullPointerException from label06 to label07 with label11;
        catch java.lang.NullPointerException from label08 to label09 with label11;
        catch java.lang.NullPointerException from label10 to label11 with label11;
        catch java.lang.NumberFormatException from label02 to label03 with label15;
        catch java.lang.NumberFormatException from label04 to label05 with label15;
        catch java.lang.NumberFormatException from label06 to label07 with label15;
        catch java.lang.NumberFormatException from label08 to label09 with label15;
        catch java.lang.NumberFormatException from label10 to label11 with label15;
        catch java.lang.NullPointerException from label14 to label15 with label11;
        catch java.lang.NullPointerException from label17 to label18 with label11;
        catch java.lang.NullPointerException from label19 to label20 with label11;
        catch java.lang.NullPointerException from label21 to label22 with label11;
        catch java.lang.NullPointerException from label23 to label24 with label11;
        catch java.lang.NumberFormatException from label14 to label15 with label15;
        catch java.lang.NumberFormatException from label17 to label18 with label15;
        catch java.lang.NumberFormatException from label19 to label20 with label15;
        catch java.lang.NumberFormatException from label21 to label22 with label15;
        catch java.lang.NumberFormatException from label23 to label24 with label15;
    }

    private static org.mozilla.gecko.browserid.VerifyingPublicKey createPublicKey(org.mozilla.gecko.sync.ExtendedJSONObject) throws java.security.spec.InvalidKeySpecException, java.security.NoSuchAlgorithmException
    {
        org.mozilla.gecko.sync.ExtendedJSONObject $r0;
        java.lang.String $r1, $r2, varReplacer12621, varReplacer12622, varReplacer12624, varReplacer12625, varReplacer12626, varReplacer12627, varReplacer12628, varReplacer12629, varReplacer12630, varReplacer12632, varReplacer12633, varReplacer12636;
        boolean $z0;
        java.security.spec.InvalidKeySpecException $r3;
        java.lang.StringBuilder $r4;
        java.math.BigInteger $r5, $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.NullPointerException $r10;
        java.lang.Throwable $r11;
        java.security.spec.DSAPublicKeySpec $r12;
        java.security.KeyFactory $r13;
        java.security.PublicKey $r14;
        java.security.interfaces.DSAPublicKey $r15;
        org.mozilla.gecko.browserid.DSACryptoImplementation$DSAVerifyingPublicKey $r16;
        int varReplacer12623, varReplacer12631, varReplacer12634, varReplacer12635;

        nop;

        $r0 := @parameter0: org.mozilla.gecko.sync.ExtendedJSONObject;

        varReplacer12622 = "algorithm";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12622);

        $r2 = "DS";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label01;

        $r3 = new java.security.spec.InvalidKeySpecException;

        $r4 = new java.lang.StringBuilder;

        varReplacer12632 = "algorithm must equal DS, was ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer12632);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label01:
        $r5 = new java.math.BigInteger;

     label02:
        varReplacer12627 = "y";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12627);

        varReplacer12631 = 16;

        specialinvoke $r5.<java.math.BigInteger: void <init>(java.lang.String,int)>($r1, varReplacer12631);

     label03:
        $r6 = new java.math.BigInteger;

     label04:
        varReplacer12621 = "p";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12621);

        varReplacer12634 = 16;

        specialinvoke $r6.<java.math.BigInteger: void <init>(java.lang.String,int)>($r1, varReplacer12634);

     label05:
        $r7 = new java.math.BigInteger;

     label06:
        varReplacer12633 = "q";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12633);

        varReplacer12623 = 16;

        specialinvoke $r7.<java.math.BigInteger: void <init>(java.lang.String,int)>($r1, varReplacer12623);

     label07:
        $r8 = new java.math.BigInteger;

     label08:
        varReplacer12629 = "g";

        $r1 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: java.lang.String getString(java.lang.String)>(varReplacer12629);

        varReplacer12635 = 16;

        specialinvoke $r8.<java.math.BigInteger: void <init>(java.lang.String,int)>($r1, varReplacer12635);

     label09:
        if $r5 != null goto label13;

        $r9 = new java.lang.IllegalArgumentException;

     label10:
        varReplacer12626 = "n must not be null";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12626);

        throw $r9;

     label11:
        $r10 := @caughtexception;

     label12:
        $r3 = new java.security.spec.InvalidKeySpecException;

        varReplacer12630 = "y, p, q, and g must be integers encoded as strings, base 16";

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>(varReplacer12630);

        throw $r3;

     label13:
        if $r6 != null goto label16;

        $r9 = new java.lang.IllegalArgumentException;

     label14:
        varReplacer12636 = "p must not be null";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12636);

        throw $r9;

     label15:
        $r11 := @caughtexception;

        goto label12;

     label16:
        if $r7 != null goto label18;

        $r9 = new java.lang.IllegalArgumentException;

     label17:
        varReplacer12624 = "q must not be null";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12624);

        throw $r9;

     label18:
        if $r8 != null goto label20;

        $r9 = new java.lang.IllegalArgumentException;

     label19:
        varReplacer12628 = "g must not be null";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12628);

        throw $r9;

     label20:
        $r12 = new java.security.spec.DSAPublicKeySpec;

     label21:
        specialinvoke $r12.<java.security.spec.DSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r6, $r7, $r8);

        varReplacer12625 = "DSA";

        $r13 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer12625);

        $r14 = virtualinvoke $r13.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12);

     label22:
        $r15 = (java.security.interfaces.DSAPublicKey) $r14;

        $r16 = new org.mozilla.gecko.browserid.DSACryptoImplementation$DSAVerifyingPublicKey;

     label23:
        specialinvoke $r16.<org.mozilla.gecko.browserid.DSACryptoImplementation$DSAVerifyingPublicKey: void <init>(java.security.interfaces.DSAPublicKey)>($r15);

     label24:
        return $r16;

        catch java.lang.NullPointerException from label02 to label03 with label11;
        catch java.lang.NullPointerException from label04 to label05 with label11;
        catch java.lang.NullPointerException from label06 to label07 with label11;
        catch java.lang.NullPointerException from label08 to label09 with label11;
        catch java.lang.NullPointerException from label10 to label11 with label11;
        catch java.lang.NumberFormatException from label02 to label03 with label15;
        catch java.lang.NumberFormatException from label04 to label05 with label15;
        catch java.lang.NumberFormatException from label06 to label07 with label15;
        catch java.lang.NumberFormatException from label08 to label09 with label15;
        catch java.lang.NumberFormatException from label10 to label11 with label15;
        catch java.lang.NullPointerException from label14 to label15 with label11;
        catch java.lang.NullPointerException from label17 to label18 with label11;
        catch java.lang.NullPointerException from label19 to label20 with label11;
        catch java.lang.NullPointerException from label21 to label22 with label11;
        catch java.lang.NullPointerException from label23 to label24 with label11;
        catch java.lang.NumberFormatException from label14 to label15 with label15;
        catch java.lang.NumberFormatException from label17 to label18 with label15;
        catch java.lang.NumberFormatException from label19 to label20 with label15;
        catch java.lang.NumberFormatException from label21 to label22 with label15;
        catch java.lang.NumberFormatException from label23 to label24 with label15;
    }

    public static org.mozilla.gecko.browserid.BrowserIDKeyPair fromJSONObject(org.mozilla.gecko.sync.ExtendedJSONObject) throws java.security.spec.InvalidKeySpecException, java.security.NoSuchAlgorithmException
    {
        org.mozilla.gecko.sync.ExtendedJSONObject $r0, $r2;
        org.mozilla.gecko.browserid.BrowserIDKeyPair $r1;
        java.security.spec.InvalidKeySpecException $r3;
        org.mozilla.gecko.sync.NonObjectJSONException $r4;
        org.mozilla.gecko.browserid.SigningPrivateKey $r5;
        org.mozilla.gecko.browserid.VerifyingPublicKey $r6;
        java.lang.String varReplacer12596, varReplacer12597, varReplacer12598, varReplacer12599, varReplacer12600;

        nop;

        $r0 := @parameter0: org.mozilla.gecko.sync.ExtendedJSONObject;

     label01:
        varReplacer12597 = "privateKey";

        $r2 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: org.mozilla.gecko.sync.ExtendedJSONObject getObject(java.lang.String)>(varReplacer12597);

        varReplacer12596 = "publicKey";

        $r0 = virtualinvoke $r0.<org.mozilla.gecko.sync.ExtendedJSONObject: org.mozilla.gecko.sync.ExtendedJSONObject getObject(java.lang.String)>(varReplacer12596);

     label02:
        if $r2 != null goto label06;

        $r3 = new java.security.spec.InvalidKeySpecException;

     label03:
        varReplacer12598 = "privateKey must not be null";

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>(varReplacer12598);

     label04:
        throw $r3;

     label05:
        $r4 := @caughtexception;

        $r3 = new java.security.spec.InvalidKeySpecException;

        varReplacer12599 = "privateKey and publicKey must be JSON objects";

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>(varReplacer12599);

        throw $r3;

     label06:
        if $r0 != null goto label09;

        $r3 = new java.security.spec.InvalidKeySpecException;

     label07:
        varReplacer12600 = "publicKey must not be null";

        specialinvoke $r3.<java.security.spec.InvalidKeySpecException: void <init>(java.lang.String)>(varReplacer12600);

     label08:
        throw $r3;

     label09:
        $r1 = new org.mozilla.gecko.browserid.BrowserIDKeyPair;

     label10:
        $r5 = staticinvoke <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.SigningPrivateKey createPrivateKey(org.mozilla.gecko.sync.ExtendedJSONObject)>($r2);

        $r6 = staticinvoke <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.VerifyingPublicKey createPublicKey(org.mozilla.gecko.sync.ExtendedJSONObject)>($r0);

        specialinvoke $r1.<org.mozilla.gecko.browserid.BrowserIDKeyPair: void <init>(org.mozilla.gecko.browserid.SigningPrivateKey,org.mozilla.gecko.browserid.VerifyingPublicKey)>($r5, $r6);

     label11:
        return $r1;

        catch org.mozilla.gecko.sync.NonObjectJSONException from label01 to label02 with label05;
        catch org.mozilla.gecko.sync.NonObjectJSONException from label03 to label04 with label05;
        catch org.mozilla.gecko.sync.NonObjectJSONException from label07 to label08 with label05;
        catch org.mozilla.gecko.sync.NonObjectJSONException from label10 to label11 with label05;
    }

    public static org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int) throws java.security.NoSuchAlgorithmException
    {
        int $i0, varReplacer12548;
        org.mozilla.gecko.browserid.BrowserIDKeyPair $r0;
        org.mozilla.gecko.browserid.DSACryptoImplementation$DSASigningPrivateKey $r1;
        java.security.KeyPairGenerator $r2;
        java.security.KeyPair $r3;
        java.security.PrivateKey $r4;
        java.security.interfaces.DSAPrivateKey $r5;
        java.security.PublicKey $r6;
        java.security.interfaces.DSAPublicKey $r7;
        org.mozilla.gecko.browserid.DSACryptoImplementation$DSAVerifyingPublicKey $r8;
        java.lang.String varReplacer12549;

        nop;

        $i0 := @parameter0: int;

        varReplacer12549 = "DSA";

        $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer12549);

        varReplacer12548 = 1024;

        virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer12548);

        $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r4 = virtualinvoke $r3.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r5 = (java.security.interfaces.DSAPrivateKey) $r4;

        $r6 = virtualinvoke $r3.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r7 = (java.security.interfaces.DSAPublicKey) $r6;

        $r0 = new org.mozilla.gecko.browserid.BrowserIDKeyPair;

        $r1 = new org.mozilla.gecko.browserid.DSACryptoImplementation$DSASigningPrivateKey;

        specialinvoke $r1.<org.mozilla.gecko.browserid.DSACryptoImplementation$DSASigningPrivateKey: void <init>(java.security.interfaces.DSAPrivateKey)>($r5);

        $r8 = new org.mozilla.gecko.browserid.DSACryptoImplementation$DSAVerifyingPublicKey;

        specialinvoke $r8.<org.mozilla.gecko.browserid.DSACryptoImplementation$DSAVerifyingPublicKey: void <init>(java.security.interfaces.DSAPublicKey)>($r7);

        specialinvoke $r0.<org.mozilla.gecko.browserid.BrowserIDKeyPair: void <init>(org.mozilla.gecko.browserid.SigningPrivateKey,org.mozilla.gecko.browserid.VerifyingPublicKey)>($r1, $r8);

        return $r0;
    }
}
