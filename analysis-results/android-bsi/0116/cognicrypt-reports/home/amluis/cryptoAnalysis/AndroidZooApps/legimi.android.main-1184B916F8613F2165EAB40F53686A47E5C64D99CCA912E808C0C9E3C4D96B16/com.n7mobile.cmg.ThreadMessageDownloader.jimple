public class com.n7mobile.cmg.ThreadMessageDownloader extends java.lang.Thread
{
    private static final java.lang.String TAG;
    public com.n7mobile.cmg.ToastCallback callback;
    private android.content.Context context;
    private java.lang.String mMessageUrl;
    private java.lang.String mMsgId;

    public void <init>(android.content.Context, java.lang.String, java.lang.String)
    {
        com.n7mobile.cmg.ThreadMessageDownloader $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r3;

        nop;

        $r0 := @this: com.n7mobile.cmg.ThreadMessageDownloader;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context> = $r1;

        $r0.<com.n7mobile.cmg.ThreadMessageDownloader: java.lang.String mMsgId> = $r3;

        $r0.<com.n7mobile.cmg.ThreadMessageDownloader: java.lang.String mMessageUrl> = $r2;

        return;
    }

    private java.lang.String downloadJson(java.lang.String, boolean)
    {
        com.n7mobile.cmg.ThreadMessageDownloader $r0;
        java.lang.String $r1, $r8, $r9, $r13, $r14, varReplacer1144, varReplacer1145, varReplacer1146, varReplacer1147, varReplacer1148, varReplacer1149, varReplacer1151, varReplacer1152, varReplacer1153, varReplacer1154, varReplacer1155, varReplacer1156, varReplacer1157, varReplacer1159, varReplacer1160, varReplacer1161, varReplacer1162, varReplacer1163, varReplacer1164, varReplacer1167, varReplacer1169, varReplacer1170, varReplacer1171, varReplacer1173, varReplacer1174, varReplacer1175, varReplacer1176, varReplacer1177, varReplacer1178, varReplacer1179, varReplacer1180, varReplacer1181, varReplacer1182, varReplacer1184, varReplacer1185;
        boolean $z0;
        com.n7mobile.crypto.Cryptographer $r2, r34;
        org.apache.http.Header $r3;
        org.apache.http.params.BasicHttpParams $r4, r35;
        org.apache.http.client.methods.HttpPost $r5, r37;
        org.apache.http.impl.client.DefaultHttpClient $r6, r36;
        java.util.ArrayList $r7, r38;
        android.content.Context $r10;
        com.n7mobile.cmg.common.CmgConfigData $r11;
        java.lang.StringBuilder $r12, r33;
        com.n7mobile.cmg.CMG$CMG_STATUS $r15;
        org.apache.http.client.entity.UrlEncodedFormEntity $r16, r40;
        org.apache.http.HttpResponse $r17;
        org.apache.http.StatusLine $r18;
        int $i0, $i1, varReplacer1143, varReplacer1150, varReplacer1165, varReplacer1166;
        com.n7mobile.cmg.ToastCallback $r19;
        org.apache.http.Header[] $r20;
        org.apache.http.HttpEntity $r21;
        java.io.InputStream $r22;
        byte[] $r23, $r24;
        char[] $r25;
        byte $b2;
        java.security.Signature $r26;
        java.security.PublicKey $r27;
        java.lang.Throwable $r28, $r29, $r30, $r31, $r32;
        org.apache.http.message.BasicNameValuePair r39;
        org.apache.http.client.ClientProtocolException r41;
        java.io.IOException r42;
        java.security.NoSuchAlgorithmException r43;
        java.security.InvalidKeyException r44;
        java.security.SignatureException r45;
        null_type varReplacer1158, varReplacer1168, varReplacer1172, varReplacer1183;

        nop;

        $r0 := @this: com.n7mobile.cmg.ThreadMessageDownloader;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r8 = specialinvoke $r0.<com.n7mobile.cmg.ThreadMessageDownloader: java.lang.String getImsi()>();

        $r9 = $r8;

        if $r8 != null goto label01;

        $r9 = "0";

     label01:
        $r10 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

        $r11 = staticinvoke <com.n7mobile.cmg.common.PrefsAgent: com.n7mobile.cmg.common.CmgConfigData getCmgConfigData(android.content.Context)>($r10);

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        varReplacer1175 = "application_id=";

        $r12 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1175);

        $r8 = $r11.<com.n7mobile.cmg.common.CmgConfigData: java.lang.String appId>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer1169 = ";";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1169);

        varReplacer1149 = "message_id=";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1149);

        $r8 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: java.lang.String mMsgId>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer1150 = 4;

        $r8 = staticinvoke <com.n7mobile.crypto.Cryptographer: java.lang.String generateRandomCharacters(int)>(varReplacer1150);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = $r13;

        $r14 = $r11.<com.n7mobile.cmg.common.CmgConfigData: java.lang.String msisdn>;

        if $r14 == null goto label03;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        varReplacer1159 = "msisdn=";

        $r12 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1159);

        $r9 = $r11.<com.n7mobile.cmg.common.CmgConfigData: java.lang.String msisdn>;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer1155 = ";";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1155);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r8 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        varReplacer1146 = "data: ";

        $r12 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1146);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1181 = "ThreadMessageDownloader";

        staticinvoke <com.n7mobile.cmg.common.Logz: void d(java.lang.String,java.lang.String)>(varReplacer1181, $r9);

        r34 = new com.n7mobile.crypto.Cryptographer;

        $r2 = r34;

        specialinvoke r34.<com.n7mobile.crypto.Cryptographer: void <init>()>();

        $r10 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

        virtualinvoke $r2.<com.n7mobile.crypto.Cryptographer: void loadRsaPublicKey(android.content.Context)>($r10);

        $z0 = virtualinvoke $r2.<com.n7mobile.crypto.Cryptographer: boolean isCertificateLoaded()>();

        if $z0 != 0 goto label04;

        $r15 = <com.n7mobile.cmg.CMG$CMG_STATUS: com.n7mobile.cmg.CMG$CMG_STATUS ERROR_CERTIFICATE>;

        varReplacer1148 = "Certificate loading error- aborting registration";

        staticinvoke <com.n7mobile.cmg.CMG: void notifyClientStatusChanged(com.n7mobile.cmg.CMG$CMG_STATUS,java.lang.String)>($r15, varReplacer1148);

        varReplacer1158 = null;

        return varReplacer1158;

     label03:
        if $r9 == null goto label02;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        varReplacer1184 = "imsi=";

        $r12 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1184);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer1147 = ";";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1147);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r8 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label04:
        $r10 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

        virtualinvoke $r2.<com.n7mobile.crypto.Cryptographer: void generateAesKey(android.content.Context)>($r10);

        $r9 = virtualinvoke $r2.<com.n7mobile.crypto.Cryptographer: java.lang.String getRsaEncryptedAesKey()>();

        $r8 = virtualinvoke $r2.<com.n7mobile.crypto.Cryptographer: java.lang.String encryptAes(java.lang.String)>($r8);

        r35 = new org.apache.http.params.BasicHttpParams;

        $r4 = r35;

        specialinvoke r35.<org.apache.http.params.BasicHttpParams: void <init>()>();

        varReplacer1143 = 4000;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r4, varReplacer1143);

        r36 = new org.apache.http.impl.client.DefaultHttpClient;

        $r6 = r36;

        specialinvoke r36.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.params.HttpParams)>($r4);

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        varReplacer1145 = "fetch url: ";

        $r12 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1145);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1171 = "ThreadMessageDownloader";

        staticinvoke <com.n7mobile.cmg.common.Logz: void d(java.lang.String,java.lang.String)>(varReplacer1171, $r13);

        r37 = new org.apache.http.client.methods.HttpPost;

        $r5 = r37;

        specialinvoke r37.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r1);

        r38 = new java.util.ArrayList;

        $r7 = r38;

        specialinvoke r38.<java.util.ArrayList: void <init>()>();

        r39 = new org.apache.http.message.BasicNameValuePair;

        varReplacer1177 = "data";

        specialinvoke r39.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(varReplacer1177, $r8);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r39);

        r39 = new org.apache.http.message.BasicNameValuePair;

        varReplacer1153 = "key";

        specialinvoke r39.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(varReplacer1153, $r9);

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r39);

        $r1 = null;

        r40 = new org.apache.http.client.entity.UrlEncodedFormEntity;

        $r16 = r40;

     label05:
        specialinvoke r40.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List)>($r7);

        virtualinvoke $r5.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r16);

        $r17 = interfaceinvoke $r6.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r5);

        $r18 = interfaceinvoke $r17.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r18.<org.apache.http.StatusLine: int getStatusCode()>();

     label06:
        $r19 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: com.n7mobile.cmg.ToastCallback callback>;

     label07:
        varReplacer1180 = "com.n7mobile.cmg.downloadMessage";

        interfaceinvoke $r19.<com.n7mobile.cmg.ToastCallback: void toastStatus(int,java.lang.String)>($i0, varReplacer1180);

     label08:
        if $i0 == 200 goto label09;

        varReplacer1168 = null;

        return varReplacer1168;

     label09:
        $r20 = interfaceinvoke $r17.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

     label10:
        $i0 = lengthof $r20;

        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label18;

        $r3 = $r20[$i1];

     label12:
        $r9 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getName()>();

        varReplacer1185 = "json-signature";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer1185);

     label13:
        if $z0 == 0 goto label17;

     label14:
        varReplacer1160 = "ThreadMessageDownloader";

        varReplacer1161 = "header \'json-signature\' found ";

        staticinvoke <com.n7mobile.cmg.common.Logz: void d(java.lang.String,java.lang.String)>(varReplacer1160, varReplacer1161);

        $r1 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getValue()>();

     label15:
        r33 = new java.lang.StringBuilder;

        $r12 = r33;

     label16:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        varReplacer1179 = "header-signature rsa :";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1179);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1164 = "ThreadMessageDownloader";

        staticinvoke <com.n7mobile.cmg.common.Logz: void d(java.lang.String,java.lang.String)>(varReplacer1164, $r9);

     label17:
        $i1 = $i1 + 1;

        goto label11;

     label18:
        if $r1 != null goto label19;

        varReplacer1172 = null;

        return varReplacer1172;

     label19:
        $r21 = interfaceinvoke $r17.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label20:
        if $r21 == null goto label39;

     label21:
        $r22 = interfaceinvoke $r21.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r23 = staticinvoke <com.n7mobile.cmg.ThreadMessageDownloader: byte[] readBytes(java.io.InputStream)>($r22);

     label22:
        $r24 = $r23;

     label23:
        $r25 = staticinvoke <com.n7mobile.crypto.Base64Coder: char[] encode(byte[])>($r23);

        $r9 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();

        varReplacer1144 = "ThreadMessageDownloader";

        staticinvoke <com.n7mobile.cmg.common.Logz: void d(java.lang.String,java.lang.String)>(varReplacer1144, $r9);

     label24:
        $r8 = new java.lang.String;

        $r9 = $r8;

     label25:
        varReplacer1162 = "UTF-8";

        specialinvoke $r8.<java.lang.String: void <init>(byte[],java.lang.String)>($r23, varReplacer1162);

        virtualinvoke $r22.<java.io.InputStream: void close()>();

     label26:
        $i0 = lengthof $r23;

        $i0 = $i0 + -1;

        $b2 = $r23[$i0];

        if $b2 != 10 goto label28;

        $i0 = lengthof $r23;

        $i0 = $i0 + -1;

        $r24 = newarray (byte)[$i0];

        $i0 = lengthof $r23;

        $i0 = $i0 + -1;

     label27:
        varReplacer1165 = 0;

        varReplacer1166 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, varReplacer1165, $r24, varReplacer1165, $i0);

     label28:
        $r8 = virtualinvoke $r2.<com.n7mobile.crypto.Cryptographer: java.lang.String hashUsingSha1(byte[])>($r24);

     label29:
        r33 = new java.lang.StringBuilder;

        $r12 = r33;

     label30:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        varReplacer1170 = "header-signature :";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1170);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1167 = "ThreadMessageDownloader";

        staticinvoke <com.n7mobile.cmg.common.Logz: void d(java.lang.String,java.lang.String)>(varReplacer1167, $r13);

     label31:
        r33 = new java.lang.StringBuilder;

        $r12 = r33;

     label32:
        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        varReplacer1163 = "json-signature   :";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1163);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1178 = "ThreadMessageDownloader";

        staticinvoke <com.n7mobile.cmg.common.Logz: void d(java.lang.String,java.lang.String)>(varReplacer1178, $r8);

        varReplacer1176 = "SHA1WithRSA";

        $r26 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1176);

     label33:
        $r27 = $r2.<com.n7mobile.crypto.Cryptographer: java.security.PublicKey mRsaPublicKey>;

     label34:
        virtualinvoke $r26.<java.security.Signature: void initVerify(java.security.PublicKey)>($r27);

        virtualinvoke $r26.<java.security.Signature: void update(byte[])>($r24);

        $z0 = specialinvoke $r0.<com.n7mobile.cmg.ThreadMessageDownloader: boolean verifyCertificate(com.n7mobile.crypto.Cryptographer,byte[],java.lang.String)>($r2, $r24, $r1);

     label35:
        if $z0 == 0 goto label40;

     label36:
        varReplacer1156 = "ThreadMessageDownloader";

        varReplacer1157 = "signature matches the hashed json ";

        staticinvoke <com.n7mobile.cmg.common.Logz: void d(java.lang.String,java.lang.String)>(varReplacer1156, varReplacer1157);

     label37:
        return $r9;

     label38:
        $r28 := @caughtexception;

        r41 = (org.apache.http.client.ClientProtocolException) $r28;

        virtualinvoke r41.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();

        $r15 = <com.n7mobile.cmg.CMG$CMG_STATUS: com.n7mobile.cmg.CMG$CMG_STATUS ERROR_FETCH_URL_NOT_RESPONDING>;

        varReplacer1154 = "Couldn\'t download json.";

        staticinvoke <com.n7mobile.cmg.CMG: void notifyClientStatusChanged(com.n7mobile.cmg.CMG$CMG_STATUS,java.lang.String)>($r15, varReplacer1154);

     label39:
        varReplacer1183 = null;

        return varReplacer1183;

     label40:
        $r10 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label41:
        virtualinvoke $r2.<com.n7mobile.crypto.Cryptographer: void deleteCertificate(android.content.Context)>($r10);

     label42:
        $r10 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label43:
        virtualinvoke $r2.<com.n7mobile.crypto.Cryptographer: boolean downloadCertificate(android.content.Context)>($r10);

        $z0 = specialinvoke $r0.<com.n7mobile.cmg.ThreadMessageDownloader: boolean verifyCertificate(com.n7mobile.crypto.Cryptographer,byte[],java.lang.String)>($r2, $r24, $r1);

     label44:
        if $z0 == 0 goto label48;

     label45:
        varReplacer1151 = "ThreadMessageDownloader";

        varReplacer1152 = "New certificate matches the hashed json ";

        staticinvoke <com.n7mobile.cmg.common.Logz: void d(java.lang.String,java.lang.String)>(varReplacer1151, varReplacer1152);

     label46:
        return $r9;

     label47:
        $r29 := @caughtexception;

        r42 = (java.io.IOException) $r29;

        virtualinvoke r42.<java.io.IOException: void printStackTrace()>();

        $r15 = <com.n7mobile.cmg.CMG$CMG_STATUS: com.n7mobile.cmg.CMG$CMG_STATUS ERROR_FETCH_URL_NOT_RESPONDING>;

        varReplacer1173 = "Couldn\'t download json.";

        staticinvoke <com.n7mobile.cmg.CMG: void notifyClientStatusChanged(com.n7mobile.cmg.CMG$CMG_STATUS,java.lang.String)>($r15, varReplacer1173);

        goto label39;

     label48:
        $r10 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label49:
        varReplacer1182 = "BAD_SIGNATURE: JSON signature doesn\'t match certificate";

        staticinvoke <com.n7mobile.cmg.ThreadErrorReporter: void reportError(java.lang.String,android.content.Context)>(varReplacer1182, $r10);

     label50:
        $r15 = <com.n7mobile.cmg.CMG$CMG_STATUS: com.n7mobile.cmg.CMG$CMG_STATUS ERROR_CERTIFICATE>;

     label51:
        varReplacer1174 = "Signatures doesn\'t match despite downloading new certificate";

        staticinvoke <com.n7mobile.cmg.CMG: void notifyClientStatusChanged(com.n7mobile.cmg.CMG$CMG_STATUS,java.lang.String)>($r15, varReplacer1174);

     label52:
        goto label39;

     label53:
        $r30 := @caughtexception;

        r43 = (java.security.NoSuchAlgorithmException) $r30;

        virtualinvoke r43.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label39;

     label54:
        $r31 := @caughtexception;

        r44 = (java.security.InvalidKeyException) $r31;

        virtualinvoke r44.<java.security.InvalidKeyException: void printStackTrace()>();

        goto label39;

     label55:
        $r32 := @caughtexception;

        r45 = (java.security.SignatureException) $r32;

        virtualinvoke r45.<java.security.SignatureException: void printStackTrace()>();

        goto label39;

        catch org.apache.http.client.ClientProtocolException from label05 to label06 with label38;
        catch org.apache.http.client.ClientProtocolException from label07 to label08 with label38;
        catch org.apache.http.client.ClientProtocolException from label09 to label10 with label38;
        catch org.apache.http.client.ClientProtocolException from label12 to label13 with label38;
        catch org.apache.http.client.ClientProtocolException from label14 to label15 with label38;
        catch org.apache.http.client.ClientProtocolException from label16 to label17 with label38;
        catch org.apache.http.client.ClientProtocolException from label19 to label20 with label38;
        catch org.apache.http.client.ClientProtocolException from label21 to label22 with label38;
        catch org.apache.http.client.ClientProtocolException from label23 to label24 with label38;
        catch org.apache.http.client.ClientProtocolException from label25 to label26 with label38;
        catch org.apache.http.client.ClientProtocolException from label27 to label28 with label38;
        catch org.apache.http.client.ClientProtocolException from label28 to label29 with label38;
        catch org.apache.http.client.ClientProtocolException from label30 to label31 with label38;
        catch org.apache.http.client.ClientProtocolException from label32 to label33 with label38;
        catch org.apache.http.client.ClientProtocolException from label34 to label35 with label38;
        catch org.apache.http.client.ClientProtocolException from label36 to label37 with label38;
        catch java.io.IOException from label05 to label06 with label47;
        catch java.io.IOException from label07 to label08 with label47;
        catch java.io.IOException from label09 to label10 with label47;
        catch java.io.IOException from label12 to label13 with label47;
        catch java.io.IOException from label14 to label15 with label47;
        catch java.io.IOException from label16 to label17 with label47;
        catch java.io.IOException from label19 to label20 with label47;
        catch java.io.IOException from label21 to label22 with label47;
        catch java.io.IOException from label23 to label24 with label47;
        catch java.io.IOException from label25 to label26 with label47;
        catch java.io.IOException from label27 to label28 with label47;
        catch java.io.IOException from label28 to label29 with label47;
        catch java.io.IOException from label30 to label31 with label47;
        catch java.io.IOException from label32 to label33 with label47;
        catch java.io.IOException from label34 to label35 with label47;
        catch java.io.IOException from label36 to label37 with label47;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label53;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label53;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label53;
        catch java.security.NoSuchAlgorithmException from label12 to label13 with label53;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label53;
        catch java.security.NoSuchAlgorithmException from label16 to label17 with label53;
        catch java.security.NoSuchAlgorithmException from label19 to label20 with label53;
        catch java.security.NoSuchAlgorithmException from label21 to label22 with label53;
        catch java.security.NoSuchAlgorithmException from label23 to label24 with label53;
        catch java.security.NoSuchAlgorithmException from label25 to label26 with label53;
        catch java.security.NoSuchAlgorithmException from label27 to label28 with label53;
        catch java.security.NoSuchAlgorithmException from label28 to label29 with label53;
        catch java.security.NoSuchAlgorithmException from label30 to label31 with label53;
        catch java.security.NoSuchAlgorithmException from label32 to label33 with label53;
        catch java.security.NoSuchAlgorithmException from label34 to label35 with label53;
        catch java.security.NoSuchAlgorithmException from label36 to label37 with label53;
        catch java.security.InvalidKeyException from label05 to label06 with label54;
        catch java.security.InvalidKeyException from label07 to label08 with label54;
        catch java.security.InvalidKeyException from label09 to label10 with label54;
        catch java.security.InvalidKeyException from label12 to label13 with label54;
        catch java.security.InvalidKeyException from label14 to label15 with label54;
        catch java.security.InvalidKeyException from label16 to label17 with label54;
        catch java.security.InvalidKeyException from label19 to label20 with label54;
        catch java.security.InvalidKeyException from label21 to label22 with label54;
        catch java.security.InvalidKeyException from label23 to label24 with label54;
        catch java.security.InvalidKeyException from label25 to label26 with label54;
        catch java.security.InvalidKeyException from label27 to label28 with label54;
        catch java.security.InvalidKeyException from label28 to label29 with label54;
        catch java.security.InvalidKeyException from label30 to label31 with label54;
        catch java.security.InvalidKeyException from label32 to label33 with label54;
        catch java.security.InvalidKeyException from label34 to label35 with label54;
        catch java.security.InvalidKeyException from label36 to label37 with label54;
        catch java.security.SignatureException from label05 to label06 with label55;
        catch java.security.SignatureException from label07 to label08 with label55;
        catch java.security.SignatureException from label09 to label10 with label55;
        catch java.security.SignatureException from label12 to label13 with label55;
        catch java.security.SignatureException from label14 to label15 with label55;
        catch java.security.SignatureException from label16 to label17 with label55;
        catch java.security.SignatureException from label19 to label20 with label55;
        catch java.security.SignatureException from label21 to label22 with label55;
        catch java.security.SignatureException from label23 to label24 with label55;
        catch java.security.SignatureException from label25 to label26 with label55;
        catch java.security.SignatureException from label27 to label28 with label55;
        catch java.security.SignatureException from label28 to label29 with label55;
        catch java.security.SignatureException from label30 to label31 with label55;
        catch java.security.SignatureException from label32 to label33 with label55;
        catch java.security.SignatureException from label34 to label35 with label55;
        catch java.security.SignatureException from label36 to label37 with label55;
        catch org.apache.http.client.ClientProtocolException from label41 to label42 with label38;
        catch org.apache.http.client.ClientProtocolException from label43 to label44 with label38;
        catch org.apache.http.client.ClientProtocolException from label45 to label46 with label38;
        catch java.io.IOException from label41 to label42 with label47;
        catch java.io.IOException from label43 to label44 with label47;
        catch java.io.IOException from label45 to label46 with label47;
        catch java.security.NoSuchAlgorithmException from label41 to label42 with label53;
        catch java.security.NoSuchAlgorithmException from label43 to label44 with label53;
        catch java.security.NoSuchAlgorithmException from label45 to label46 with label53;
        catch java.security.InvalidKeyException from label41 to label42 with label54;
        catch java.security.InvalidKeyException from label43 to label44 with label54;
        catch java.security.InvalidKeyException from label45 to label46 with label54;
        catch java.security.SignatureException from label41 to label42 with label55;
        catch java.security.SignatureException from label43 to label44 with label55;
        catch java.security.SignatureException from label45 to label46 with label55;
        catch org.apache.http.client.ClientProtocolException from label49 to label50 with label38;
        catch org.apache.http.client.ClientProtocolException from label51 to label52 with label38;
        catch java.io.IOException from label49 to label50 with label47;
        catch java.io.IOException from label51 to label52 with label47;
        catch java.security.NoSuchAlgorithmException from label49 to label50 with label53;
        catch java.security.NoSuchAlgorithmException from label51 to label52 with label53;
        catch java.security.InvalidKeyException from label49 to label50 with label54;
        catch java.security.InvalidKeyException from label51 to label52 with label54;
        catch java.security.SignatureException from label49 to label50 with label55;
        catch java.security.SignatureException from label51 to label52 with label55;
    }

    private java.lang.String getImsi()
    {
        com.n7mobile.cmg.ThreadMessageDownloader $r0;
        android.content.Context $r1;
        int $i0;
        java.lang.Object $r2;
        android.telephony.TelephonyManager $r3;
        java.lang.String $r4, varReplacer1197, varReplacer1199;
        null_type varReplacer1198;

        nop;

        $r0 := @this: com.n7mobile.cmg.ThreadMessageDownloader;

        $r1 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

        varReplacer1197 = "android.permission.READ_PHONE_STATE";

        $i0 = staticinvoke <android.support.v4.content.PermissionChecker: int checkCallingOrSelfPermission(android.content.Context,java.lang.String)>($r1, varReplacer1197);

        if $i0 != 0 goto label1;

        $r1 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

        varReplacer1199 = "phone";

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1199);

        $r3 = (android.telephony.TelephonyManager) $r2;

        $r4 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>();

        return $r4;

     label1:
        varReplacer1198 = null;

        return varReplacer1198;
    }

    private org.json.JSONObject parseJson(java.lang.String)
    {
        com.n7mobile.cmg.ThreadMessageDownloader $r0;
        java.lang.String $r1;
        org.json.JSONException $r2;
        org.json.JSONObject $r3;
        com.n7mobile.cmg.CMG$CMG_STATUS $r4;

        $r0 := @this: com.n7mobile.cmg.ThreadMessageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r3 = new org.json.JSONObject;

     label1:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

     label2:
        return $r3;

     label3:
        $r2 := @caughtexception;

        $r4 = <com.n7mobile.cmg.CMG$CMG_STATUS: com.n7mobile.cmg.CMG$CMG_STATUS ERROR_PARSING_JSON>;

        staticinvoke <com.n7mobile.cmg.CMG: void notifyClientStatusChanged(com.n7mobile.cmg.CMG$CMG_STATUS,java.lang.String)>($r4, "Couldn\'t parse json file.");

        virtualinvoke $r2.<org.json.JSONException: void printStackTrace()>();

        return null;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    public static byte[] readBytes(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        byte[] $r1;
        java.io.ByteArrayOutputStream $r2;
        int $i0, varReplacer794;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = newarray (byte)[1024];

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r1);

        if $i0 == -1 goto label2;

        varReplacer794 = 0;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r1, varReplacer794, $i0);

        goto label1;

     label2:
        $r1 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r1;
    }

    private boolean verifyCertificate(com.n7mobile.crypto.Cryptographer, byte[], java.lang.String)
    {
        com.n7mobile.cmg.ThreadMessageDownloader $r0;
        com.n7mobile.crypto.Cryptographer $r1;
        byte[] $r2;
        java.lang.String $r3, varReplacer1200;
        java.security.Signature $r4;
        java.security.PublicKey $r5;
        boolean $z0;
        java.lang.Throwable $r6, $r7, $r8;
        java.security.NoSuchAlgorithmException r9;
        java.security.InvalidKeyException r10;
        java.security.SignatureException r11;
        int varReplacer1201;

        nop;

        $r0 := @this: com.n7mobile.cmg.ThreadMessageDownloader;

        $r1 := @parameter0: com.n7mobile.crypto.Cryptographer;

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: java.lang.String;

     label1:
        varReplacer1200 = "SHA1WithRSA";

        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1200);

     label2:
        $r5 = $r1.<com.n7mobile.crypto.Cryptographer: java.security.PublicKey mRsaPublicKey>;

     label3:
        virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5);

        virtualinvoke $r4.<java.security.Signature: void update(byte[])>($r2);

        $r2 = staticinvoke <com.n7mobile.crypto.Base64Coder: byte[] decode(java.lang.String)>($r3);

        $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2);

     label4:
        return $z0;

     label5:
        $r6 := @caughtexception;

        r9 = (java.security.NoSuchAlgorithmException) $r6;

        virtualinvoke r9.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label6:
        varReplacer1201 = 0;

        return varReplacer1201;

     label7:
        $r7 := @caughtexception;

        r10 = (java.security.InvalidKeyException) $r7;

        virtualinvoke r10.<java.security.InvalidKeyException: void printStackTrace()>();

        goto label6;

     label8:
        $r8 := @caughtexception;

        r11 = (java.security.SignatureException) $r8;

        virtualinvoke r11.<java.security.SignatureException: void printStackTrace()>();

        goto label6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.SignatureException from label1 to label2 with label8;
        catch java.security.SignatureException from label3 to label4 with label8;
    }

    public void run()
    {
        com.n7mobile.cmg.ThreadMessageDownloader $r0;
        com.n7mobile.cmg.analytics.Analytics$AnalyticsData $r1;
        com.google.gson.stream.MalformedJsonException $r2;
        android.content.Context $r3;
        com.n7mobile.cmg.analytics.Analytics $r4;
        com.n7mobile.cmg.analytics.ActivityFetch $r5;
        java.lang.String $r6, varReplacer877, varReplacer878, varReplacer882, varReplacer884;
        com.n7mobile.cmg.model.CmgResponse $r7;
        com.n7mobile.cmg.CMG$NOTIFICATION_STATUS $r8;
        boolean $z0;
        int $i0, varReplacer881, varReplacer887;
        com.n7mobile.cmg.scheduler.Scheduler $r9;
        java.lang.Throwable $r10;
        null_type varReplacer879, varReplacer880, varReplacer883, varReplacer885, varReplacer886;

        nop;

        $r0 := @this: com.n7mobile.cmg.ThreadMessageDownloader;

        specialinvoke $r0.<java.lang.Thread: void run()>();

        staticinvoke <android.os.Looper: void prepare()>();

     label01:
        $r1 = new com.n7mobile.cmg.analytics.Analytics$AnalyticsData;

        $r3 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label02:
        specialinvoke $r1.<com.n7mobile.cmg.analytics.Analytics$AnalyticsData: void <init>(android.content.Context)>($r3);

     label03:
        $r3 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label04:
        $r4 = staticinvoke <com.n7mobile.cmg.analytics.Analytics: com.n7mobile.cmg.analytics.Analytics getInst(android.content.Context)>($r3);

        virtualinvoke $r4.<com.n7mobile.cmg.analytics.Analytics: void reportAppStart()>();

     label05:
        $r3 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label06:
        $r4 = staticinvoke <com.n7mobile.cmg.analytics.Analytics: com.n7mobile.cmg.analytics.Analytics getInst(android.content.Context)>($r3);

     label07:
        $r5 = new com.n7mobile.cmg.analytics.ActivityFetch;

     label08:
        specialinvoke $r5.<com.n7mobile.cmg.analytics.ActivityFetch: void <init>()>();

        virtualinvoke $r4.<com.n7mobile.cmg.analytics.Analytics: void reportScreenHit(android.app.Activity,com.n7mobile.cmg.analytics.Analytics$AnalyticsData)>($r5, $r1);

     label09:
        $r6 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: java.lang.String mMessageUrl>;

     label10:
        varReplacer887 = 0;

        $r6 = specialinvoke $r0.<com.n7mobile.cmg.ThreadMessageDownloader: java.lang.String downloadJson(java.lang.String,boolean)>($r6, varReplacer887);

        $r7 = staticinvoke <com.n7mobile.cmg.model.ModelTools: com.n7mobile.cmg.model.CmgResponse parseJson(java.lang.String)>($r6);

     label11:
        if $r7 != null goto label17;

     label12:
        $r3 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label13:
        $r4 = staticinvoke <com.n7mobile.cmg.analytics.Analytics: com.n7mobile.cmg.analytics.Analytics getInst(android.content.Context)>($r3);

     label14:
        $r3 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label15:
        varReplacer881 = 0;

        virtualinvoke $r4.<com.n7mobile.cmg.analytics.Analytics: void sendFetchEvent(android.content.Context,boolean)>($r3, varReplacer881);

     label16:
        varReplacer880 = null;

        $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context> = varReplacer880;

        return;

     label17:
        $r8 = <com.n7mobile.cmg.CMG$NOTIFICATION_STATUS: com.n7mobile.cmg.CMG$NOTIFICATION_STATUS DOWNLOADED>;

     label18:
        staticinvoke <com.n7mobile.cmg.CMG: void notifyNotificationStatus(com.n7mobile.cmg.model.CmgResponse,com.n7mobile.cmg.CMG$NOTIFICATION_STATUS)>($r7, $r8);

     label19:
        $r6 = $r7.<com.n7mobile.cmg.model.CmgResponse: java.lang.String actionType>;

     label20:
        varReplacer882 = "SEND_SMS";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer882);

     label21:
        if $z0 == 0 goto label27;

     label22:
        $r3 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label23:
        varReplacer884 = "android.permission.SEND_SMS";

        $i0 = virtualinvoke $r3.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>(varReplacer884);

     label24:
        if $i0 != -1 goto label27;

     label25:
        varReplacer877 = "ThreadMessageDownloader";

        varReplacer878 = "Action SEND_SMS is invalid if the permission android.permission.SEND_SMS is not granted";

        staticinvoke <com.n7mobile.cmg.common.Logz: void e(java.lang.String,java.lang.String)>(varReplacer877, varReplacer878);

     label26:
        varReplacer883 = null;

        $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context> = varReplacer883;

        return;

     label27:
        $r3 = $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context>;

     label28:
        $r9 = staticinvoke <com.n7mobile.cmg.scheduler.Scheduler: com.n7mobile.cmg.scheduler.Scheduler getInstance(android.content.Context)>($r3);

        virtualinvoke $r9.<com.n7mobile.cmg.scheduler.Scheduler: void schedule(com.n7mobile.cmg.model.CmgResponse,com.n7mobile.cmg.analytics.Analytics$AnalyticsData)>($r7, $r1);

     label29:
        varReplacer879 = null;

        $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context> = varReplacer879;

        return;

     label30:
        $r2 := @caughtexception;

     label31:
        virtualinvoke $r2.<com.google.gson.stream.MalformedJsonException: void printStackTrace()>();

     label32:
        varReplacer886 = null;

        $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context> = varReplacer886;

        return;

     label33:
        $r10 := @caughtexception;

        varReplacer885 = null;

        $r0.<com.n7mobile.cmg.ThreadMessageDownloader: android.content.Context context> = varReplacer885;

        throw $r10;

        catch com.google.gson.stream.MalformedJsonException from label02 to label03 with label30;
        catch com.google.gson.stream.MalformedJsonException from label04 to label05 with label30;
        catch com.google.gson.stream.MalformedJsonException from label06 to label07 with label30;
        catch com.google.gson.stream.MalformedJsonException from label08 to label09 with label30;
        catch com.google.gson.stream.MalformedJsonException from label10 to label11 with label30;
        catch com.google.gson.stream.MalformedJsonException from label13 to label14 with label30;
        catch com.google.gson.stream.MalformedJsonException from label15 to label16 with label30;
        catch java.lang.Throwable from label01 to label11 with label33;
        catch java.lang.Throwable from label12 to label16 with label33;
        catch com.google.gson.stream.MalformedJsonException from label18 to label19 with label30;
        catch com.google.gson.stream.MalformedJsonException from label20 to label21 with label30;
        catch com.google.gson.stream.MalformedJsonException from label23 to label24 with label30;
        catch com.google.gson.stream.MalformedJsonException from label25 to label26 with label30;
        catch java.lang.Throwable from label17 to label21 with label33;
        catch java.lang.Throwable from label22 to label24 with label33;
        catch java.lang.Throwable from label25 to label26 with label33;
        catch com.google.gson.stream.MalformedJsonException from label28 to label29 with label30;
        catch java.lang.Throwable from label27 to label29 with label33;
        catch java.lang.Throwable from label31 to label32 with label33;
    }
}
