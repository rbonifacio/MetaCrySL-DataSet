Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cammsys.blacksys-1477F86983103C60929D98C1B61930CD76D7F691847A19BBD9C71597BB28B180.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <framework.crypto.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: 7c0c9ca7154bc34176c069b54dbb78838e719a47537622753b7b6c909c00fb14
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer3248, varReplacer3249)
		Method: <framework.crypto.SimpleCrypto: byte[] getRawKey(byte[])>
		SHA-256: bf86e0238dcad1b9eead866ba0f429615ca6a6aeef0dfdf0be2e79865a0e4afc
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3254)
		Method: <framework.crypto.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: 5af144bfa0da00edeb783b7b3426d08ea639faa95cfcd2954e5ad5dbb1522501
		Secure: false
	Object:
		Variable: varReplacer3252
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3252)
		Method: <framework.crypto.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: 805df9db8b305ad9bb4063a2ce624f58aa6a935986b684fe221b89f8dfe796bd
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <framework.crypto.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: b0defa380405c35d7eff497766c37abdf3a263ecb8a85047606d3e778de0021c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <framework.crypto.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: 6d07de88a8a09b6d90eb4c26217c83992b6506788b7cbc9e4e056e0d7014ae72
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <framework.crypto.SimpleCrypto: byte[] getRawKey(byte[])>
		SHA-256: d5e8aa7851969c1ecc30218af1ee38e6c7433934b7fd6bb0da825f36638bf049
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3247)
		Method: <framework.crypto.SimpleCrypto: byte[] getRawKey(byte[])>
		SHA-256: 94f46914fad47e688fd826448e308316aeb7a070d662660ee7d0f0da535f685
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3252)
		Method: <framework.crypto.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: a8f8d585afad3b98f7d080054692367feaecb367196903728681ccc00e9c045e
		Secure: false

Findings in Java Class: framework.crypto.SimpleCrypto

	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3252)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5af144bfa0da00edeb783b7b3426d08ea639faa95cfcd2954e5ad5dbb1522501)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3254)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3253, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3253, $r3, $r4)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer3250, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 9

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 5
=====================================================================
