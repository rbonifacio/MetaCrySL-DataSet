public class com.sz.fspmobile.util.AESHelper extends java.lang.Object
{
    private static java.lang.String MODE;

    static void <clinit>()
    {
        java.lang.String varReplacer363;

        nop;

        varReplacer363 = "AES/ECB/PKCS5Padding";

        <com.sz.fspmobile.util.AESHelper: java.lang.String MODE> = varReplacer363;

        return;
    }

    public void <init>()
    {
        com.sz.fspmobile.util.AESHelper $r0;

        $r0 := @this: com.sz.fspmobile.util.AESHelper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String decrypt(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r1;
        byte[] $r2, $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r2 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>($r2);

        $r3 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] toByte(java.lang.String)>($r1);

        $r2 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>($r2, $r3);

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r2);

        return $r0;
    }

    public static byte[] decrypt(java.lang.String, byte[]) throws java.lang.Exception
    {
        java.lang.String $r0;
        byte[] $r1, $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r2 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>($r2);

        $r1 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>($r2, $r1);

        return $r1;
    }

    private static byte[] decrypt(byte[], byte[]) throws java.lang.Exception
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        java.lang.String $r3, varReplacer367;
        javax.crypto.Cipher $r4;
        int varReplacer368;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer367 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer367);

        $r3 = <com.sz.fspmobile.util.AESHelper: java.lang.String MODE>;

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3);

        varReplacer368 = 2;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer368, $r2);

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String encrypt(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r1;
        byte[] $r2, $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r2 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>($r2);

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r2 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>($r2, $r3);

        $r0 = staticinvoke <com.sz.fspmobile.util.AESHelper: java.lang.String toHex(byte[])>($r2);

        return $r0;
    }

    private static byte[] encrypt(byte[], byte[]) throws java.lang.Exception
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        java.lang.String $r3, varReplacer378;
        javax.crypto.Cipher $r4;
        int varReplacer377;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer378 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer378);

        $r3 = <com.sz.fspmobile.util.AESHelper: java.lang.String MODE>;

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3);

        varReplacer377 = 1;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer377, $r2);

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;
    }

    public static byte[] encryptByte(java.lang.String, byte[]) throws java.lang.Exception
    {
        java.lang.String $r0;
        byte[] $r1, $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r2 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>($r2);

        $r1 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>($r2, $r1);

        return $r1;
    }

    public static java.lang.String fromHex(java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.String;

        $r2 = staticinvoke <com.sz.fspmobile.util.AESHelper: byte[] toByte(java.lang.String)>($r0);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;
    }

    private static byte[] getRawKey(byte[]) throws java.lang.Exception
    {
        byte[] $r0;
        javax.crypto.spec.SecretKeySpec $r1;
        java.lang.String $r2, varReplacer369;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new javax.crypto.spec.SecretKeySpec;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r0);

        $r2 = staticinvoke <com.sz.fspmobile.util.AESHelper: java.lang.String padding16(java.lang.String)>($r2);

        $r0 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        varReplacer369 = "AES";

        specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer369);

        $r0 = virtualinvoke $r1.<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>();

        return $r0;
    }

    private static java.lang.String padding16(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1, $r2;
        int $i0, $i1;
        byte $b2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = newarray (byte)[16];

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label4;

        $i1 = lengthof $r2;

        if $i1 <= $i0 goto label3;

        $b2 = $r2[$i0];

        $r1[$i0] = $b2;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r1[$i0] = 0;

        goto label2;

     label4:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r1);

        return $r0;
    }

    public static byte[] toByte(java.lang.String)
    {
        java.lang.String $r0, $r2, r4;
        byte[] $r1;
        java.lang.Throwable $r3;
        java.io.IOException r5;
        null_type varReplacer1184;

        nop;

        $r0 := @parameter0: java.lang.String;

        r4 = new java.lang.String;

        $r2 = r4;

     label1:
        specialinvoke r4.<java.lang.String: void <init>(java.lang.String)>($r0);

        $r1 = staticinvoke <com.sz.fspmobile.util.Base64: byte[] decode(java.lang.String)>($r2);

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

        r5 = (java.io.IOException) $r3;

        virtualinvoke r5.<java.io.IOException: void printStackTrace()>();

        varReplacer1184 = null;

        return varReplacer1184;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String toHex(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r0 = staticinvoke <com.sz.fspmobile.util.AESHelper: java.lang.String toHex(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String toHex(byte[])
    {
        byte[] $r0;
        java.lang.String $r1, $r2, varReplacer762;

        nop;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        varReplacer762 = "";

        return varReplacer762;

     label1:
        $r2 = new java.lang.String;

        $r1 = staticinvoke <com.sz.fspmobile.util.Base64: java.lang.String encodeBytes(byte[])>($r0);

        specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>($r1);

        return $r2;
    }
}
