public class com.sz.fspmobile.util.RSAHelper extends java.lang.Object
{

    public void <init>()
    {
        com.sz.fspmobile.util.RSAHelper $r0;

        $r0 := @this: com.sz.fspmobile.util.RSAHelper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String decrypt(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r1;
        java.security.PrivateKey $r2;
        byte[] $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.sz.fspmobile.util.RSAHelper: java.security.PrivateKey getPrivateKey(java.lang.String)>($r0);

        $r3 = staticinvoke <com.sz.fspmobile.util.Base64: byte[] decode(java.lang.String)>($r1);

        $r0 = staticinvoke <com.sz.fspmobile.util.RSAHelper: java.lang.String decrypt(java.security.PrivateKey,byte[])>($r2, $r3);

        return $r0;
    }

    public static java.lang.String decrypt(java.security.PrivateKey, java.lang.String) throws java.lang.Exception
    {
        java.security.PrivateKey $r0;
        java.lang.String $r1;
        byte[] $r2;

        $r0 := @parameter0: java.security.PrivateKey;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.sz.fspmobile.util.Base64: byte[] decode(java.lang.String)>($r1);

        $r1 = staticinvoke <com.sz.fspmobile.util.RSAHelper: java.lang.String decrypt(java.security.PrivateKey,byte[])>($r0, $r2);

        return $r1;
    }

    public static java.lang.String decrypt(java.security.PrivateKey, byte[]) throws java.lang.Exception
    {
        java.security.PrivateKey $r0;
        byte[] $r1;
        javax.crypto.Cipher $r2;
        java.lang.String $r3, varReplacer2090;
        int varReplacer2088;
        null_type varReplacer2089;

        nop;

        $r0 := @parameter0: java.security.PrivateKey;

        $r1 := @parameter1: byte[];

        if $r0 != null goto label1;

        varReplacer2089 = null;

        return varReplacer2089;

     label1:
        varReplacer2090 = "RSA/ECB/PKCS1Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2090);

        varReplacer2088 = 2;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2088, $r0);

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r1);

        return $r3;
    }

    public static byte[] decryptByte(java.lang.String, byte[]) throws java.lang.Exception
    {
        java.lang.String $r0;
        byte[] $r1;
        java.security.PrivateKey $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = staticinvoke <com.sz.fspmobile.util.RSAHelper: java.security.PrivateKey getPrivateKey(java.lang.String)>($r0);

        $r1 = staticinvoke <com.sz.fspmobile.util.RSAHelper: byte[] decryptByte(java.security.PrivateKey,byte[])>($r2, $r1);

        return $r1;
    }

    public static byte[] decryptByte(java.security.PrivateKey, byte[]) throws java.lang.Exception
    {
        java.security.PrivateKey $r0;
        byte[] $r1;
        javax.crypto.Cipher $r2;

        $r0 := @parameter0: java.security.PrivateKey;

        $r1 := @parameter1: byte[];

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/ECB/PKCS1Padding");

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r0);

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    public static java.lang.String encrypt(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r1;
        java.security.PublicKey $r2;
        byte[] $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.sz.fspmobile.util.RSAHelper: java.security.PublicKey getPublicKey(java.lang.String)>($r0);

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r0 = staticinvoke <com.sz.fspmobile.util.RSAHelper: java.lang.String encrypt(java.security.PublicKey,byte[])>($r2, $r3);

        return $r0;
    }

    public static java.lang.String encrypt(java.security.PublicKey, java.lang.String) throws java.lang.Exception
    {
        java.security.PublicKey $r0;
        java.lang.String $r1;
        byte[] $r2;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <com.sz.fspmobile.util.RSAHelper: java.lang.String encrypt(java.security.PublicKey,byte[])>($r0, $r2);

        return $r1;
    }

    public static java.lang.String encrypt(java.security.PublicKey, byte[]) throws java.lang.Exception
    {
        java.security.PublicKey $r0;
        byte[] $r1;
        javax.crypto.Cipher $r2;
        java.lang.String $r3, varReplacer2096;
        int varReplacer2097;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: byte[];

        varReplacer2096 = "RSA/ECB/PKCS1Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2096);

        varReplacer2097 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2097, $r0);

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        $r3 = staticinvoke <com.sz.fspmobile.util.Base64: java.lang.String encodeBytes(byte[])>($r1);

        return $r3;
    }

    public static byte[] encryptByte(java.lang.String, byte[]) throws java.lang.Exception
    {
        java.lang.String $r0;
        byte[] $r1;
        java.security.PublicKey $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = staticinvoke <com.sz.fspmobile.util.RSAHelper: java.security.PublicKey getPublicKey(java.lang.String)>($r0);

        $r1 = staticinvoke <com.sz.fspmobile.util.RSAHelper: byte[] encryptByte(java.security.PublicKey,byte[])>($r2, $r1);

        return $r1;
    }

    public static byte[] encryptByte(java.security.PublicKey, byte[]) throws java.lang.Exception
    {
        java.security.PublicKey $r0;
        byte[] $r1;
        javax.crypto.Cipher $r2;
        java.lang.String varReplacer375;
        int varReplacer376;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: byte[];

        varReplacer375 = "RSA/ECB/PKCS1Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer375);

        varReplacer376 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer376, $r0);

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    public static java.security.PrivateKey getPrivateKey(java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer2091, varReplacer2093, varReplacer2095;
        int $i0, varReplacer2092;
        java.math.BigInteger $r2, $r4;
        byte[] $r3;
        java.security.spec.RSAPrivateKeySpec $r5;
        java.security.KeyFactory $r6;
        java.security.PrivateKey $r7;
        java.lang.Exception $r8;
        java.lang.RuntimeException $r9;
        null_type varReplacer2094;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer2093 = ":";

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(varReplacer2093);

        if $i0 != -1 goto label1;

        varReplacer2094 = null;

        return varReplacer2094;

     label1:
        varReplacer2092 = 0;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2092, $i0);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = new java.math.BigInteger;

     label2:
        $r3 = staticinvoke <com.sz.fspmobile.util.Base64: byte[] decode(java.lang.String)>($r1);

        specialinvoke $r2.<java.math.BigInteger: void <init>(byte[])>($r3);

     label3:
        $r4 = new java.math.BigInteger;

     label4:
        $r3 = staticinvoke <com.sz.fspmobile.util.Base64: byte[] decode(java.lang.String)>($r0);

        specialinvoke $r4.<java.math.BigInteger: void <init>(byte[])>($r3);

     label5:
        $r5 = new java.security.spec.RSAPrivateKeySpec;

     label6:
        specialinvoke $r5.<java.security.spec.RSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r4);

        varReplacer2091 = "RSA";

        $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer2091);

        $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r5);

     label7:
        return $r7;

     label8:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        varReplacer2095 = "RSA PrivateKeyCreate failed.";

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2095, $r8);

        throw $r9;

        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static java.security.PublicKey getPublicKey(java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer371, varReplacer373, varReplacer374;
        int $i0, varReplacer370;
        java.math.BigInteger $r2, $r4;
        byte[] $r3;
        java.security.spec.RSAPublicKeySpec $r5;
        java.security.KeyFactory $r6;
        java.security.PublicKey $r7;
        java.lang.Exception $r8;
        java.lang.RuntimeException $r9;
        null_type varReplacer372;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer374 = ":";

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(varReplacer374);

        if $i0 != -1 goto label1;

        varReplacer372 = null;

        return varReplacer372;

     label1:
        varReplacer370 = 0;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer370, $i0);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = new java.math.BigInteger;

     label2:
        $r3 = staticinvoke <com.sz.fspmobile.util.Base64: byte[] decode(java.lang.String)>($r1);

        specialinvoke $r2.<java.math.BigInteger: void <init>(byte[])>($r3);

     label3:
        $r4 = new java.math.BigInteger;

     label4:
        $r3 = staticinvoke <com.sz.fspmobile.util.Base64: byte[] decode(java.lang.String)>($r0);

        specialinvoke $r4.<java.math.BigInteger: void <init>(byte[])>($r3);

     label5:
        $r5 = new java.security.spec.RSAPublicKeySpec;

     label6:
        specialinvoke $r5.<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r4);

        varReplacer371 = "RSA";

        $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer371);

        $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5);

     label7:
        return $r7;

     label8:
        $r8 := @caughtexception;

        $r9 = new java.lang.RuntimeException;

        varReplacer373 = "RSA PublicKeyCreate failed.";

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer373, $r8);

        throw $r9;

        catch java.lang.Exception from label2 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static java.lang.String[] getRSAKey()
    {
        java.lang.String[] $r0;
        java.security.KeyPairGenerator $r1;
        java.security.KeyPair $r2;
        java.security.PublicKey $r3;
        java.security.PrivateKey $r4;
        java.security.KeyFactory $r5;
        java.security.spec.KeySpec $r6;
        java.security.spec.RSAPublicKeySpec $r7;
        java.lang.String $r8, $r11, $r12, varReplacer2083, varReplacer2084, varReplacer2085, varReplacer2087;
        java.math.BigInteger $r9;
        byte[] $r10;
        java.lang.StringBuilder $r13;
        java.security.spec.RSAPrivateKeySpec $r14;
        java.lang.Exception $r15;
        int varReplacer2086;

        nop;

        $r0 = newarray (java.lang.String)[2];

     label01:
        varReplacer2087 = "RSA";

        $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2087);

        varReplacer2086 = 1024;

        virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer2086);

        $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r3 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r4 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        varReplacer2084 = "RSA";

        $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer2084);

        $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)>($r3, class "Ljava/security/spec/RSAPublicKeySpec;");

        $r7 = (java.security.spec.RSAPublicKeySpec) $r6;

     label02:
        $r8 = new java.lang.String;

     label03:
        $r9 = virtualinvoke $r7.<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getModulus()>();

        $r10 = virtualinvoke $r9.<java.math.BigInteger: byte[] toByteArray()>();

        $r11 = staticinvoke <com.sz.fspmobile.util.Base64: java.lang.String encodeBytes(byte[])>($r10);

        specialinvoke $r8.<java.lang.String: void <init>(java.lang.String)>($r11);

     label04:
        $r11 = new java.lang.String;

     label05:
        $r9 = virtualinvoke $r7.<java.security.spec.RSAPublicKeySpec: java.math.BigInteger getPublicExponent()>();

        $r10 = virtualinvoke $r9.<java.math.BigInteger: byte[] toByteArray()>();

        $r12 = staticinvoke <com.sz.fspmobile.util.Base64: java.lang.String encodeBytes(byte[])>($r10);

        specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>($r12);

     label06:
        $r13 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer2085 = ":";

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2085);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[0] = $r8;

        $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.spec.KeySpec getKeySpec(java.security.Key,java.lang.Class)>($r4, class "Ljava/security/spec/RSAPrivateKeySpec;");

        $r14 = (java.security.spec.RSAPrivateKeySpec) $r6;

     label08:
        $r8 = new java.lang.String;

     label09:
        $r9 = virtualinvoke $r14.<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getModulus()>();

        $r10 = virtualinvoke $r9.<java.math.BigInteger: byte[] toByteArray()>();

        $r11 = staticinvoke <com.sz.fspmobile.util.Base64: java.lang.String encodeBytes(byte[])>($r10);

        specialinvoke $r8.<java.lang.String: void <init>(java.lang.String)>($r11);

     label10:
        $r11 = new java.lang.String;

     label11:
        $r9 = virtualinvoke $r14.<java.security.spec.RSAPrivateKeySpec: java.math.BigInteger getPrivateExponent()>();

        $r10 = virtualinvoke $r9.<java.math.BigInteger: byte[] toByteArray()>();

        $r12 = staticinvoke <com.sz.fspmobile.util.Base64: java.lang.String encodeBytes(byte[])>($r10);

        specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>($r12);

     label12:
        $r13 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer2083 = ":";

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2083);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[1] = $r8;

     label14:
        return $r0;

     label15:
        $r15 := @caughtexception;

        virtualinvoke $r15.<java.lang.Exception: void printStackTrace()>();

        return $r0;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }
}
