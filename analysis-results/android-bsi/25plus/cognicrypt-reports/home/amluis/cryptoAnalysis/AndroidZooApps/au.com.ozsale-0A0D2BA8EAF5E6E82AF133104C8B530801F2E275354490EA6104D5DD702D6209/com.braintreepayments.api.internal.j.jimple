public class com.braintreepayments.api.internal.j extends javax.net.ssl.SSLSocketFactory
{
    private javax.net.ssl.SSLSocketFactory a;

    public void <init>() throws javax.net.ssl.SSLException
    {
        com.braintreepayments.api.internal.j $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4, varReplacer2004;
        javax.net.ssl.SSLException r5;
        java.security.GeneralSecurityException r6;
        null_type varReplacer2005, varReplacer2006, varReplacer2007;

        nop;

        $r0 := @this: com.braintreepayments.api.internal.j;

        specialinvoke $r0.<javax.net.ssl.SSLSocketFactory: void <init>()>();

     label1:
        varReplacer2004 = "TLS";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2004);

        varReplacer2005 = null;

        varReplacer2006 = null;

        varReplacer2007 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2005, varReplacer2005, varReplacer2005);

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label2:
        $r0.<com.braintreepayments.api.internal.j: javax.net.ssl.SSLSocketFactory a> = $r2;

        return;

     label3:
        $r3 := @caughtexception;

     label4:
        r5 = new javax.net.ssl.SSLException;

        r6 = (java.security.GeneralSecurityException) $r3;

        $r4 = virtualinvoke r6.<java.security.GeneralSecurityException: java.lang.String getMessage()>();

        specialinvoke r5.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r4);

        throw r5;

     label5:
        $r3 := @caughtexception;

        goto label4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.KeyManagementException from label1 to label2 with label5;
    }

    public void <init>(java.io.InputStream) throws javax.net.ssl.SSLException
    {
        com.braintreepayments.api.internal.j $r0;
        java.io.InputStream $r1;
        java.lang.String $r2, varReplacer1998, varReplacer1999;
        java.security.KeyStore $r3;
        java.security.cert.CertificateFactory $r4;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.security.cert.Certificate $r8;
        java.security.cert.X509Certificate $r9;
        java.security.Principal $r10;
        java.lang.Exception $r11;
        javax.net.ssl.SSLException $r12;
        java.lang.Throwable $r13, $r18, $r20;
        javax.net.ssl.TrustManagerFactory $r14;
        javax.net.ssl.SSLContext $r15;
        javax.net.ssl.TrustManager[] $r16;
        javax.net.ssl.SSLSocketFactory $r17;
        java.lang.NullPointerException $r19, $r21;
        null_type varReplacer1994, varReplacer1995, varReplacer1996, varReplacer1997;

        nop;

        $r0 := @this: com.braintreepayments.api.internal.j;

        $r1 := @parameter0: java.io.InputStream;

        specialinvoke $r0.<javax.net.ssl.SSLSocketFactory: void <init>()>();

     label01:
        $r2 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2);

        varReplacer1996 = null;

        varReplacer1997 = null;

        virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer1996, varReplacer1996);

        varReplacer1999 = "X.509";

        $r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer1999);

        $r5 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r1);

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label14;

     label04:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.security.cert.Certificate) $r7;

     label05:
        $z0 = $r8 instanceof java.security.cert.X509Certificate;

     label06:
        if $z0 == 0 goto label02;

     label07:
        $r9 = (java.security.cert.X509Certificate) $r8;

        $r10 = virtualinvoke $r9.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r2 = interfaceinvoke $r10.<java.security.Principal: java.lang.String getName()>();

        virtualinvoke $r3.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>($r2, $r8);

     label08:
        goto label02;

     label09:
        $r11 := @caughtexception;

     label10:
        $r12 = new javax.net.ssl.SSLException;

        $r2 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r12.<javax.net.ssl.SSLException: void <init>(java.lang.String)>($r2);

        throw $r12;

     label11:
        $r13 := @caughtexception;

     label12:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label13:
        throw $r13;

     label14:
        $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r14 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2);

        virtualinvoke $r14.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3);

        varReplacer1998 = "TLS";

        $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1998);

        $r16 = virtualinvoke $r14.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        varReplacer1994 = null;

        varReplacer1995 = null;

        virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1994, $r16, varReplacer1994);

        $r17 = virtualinvoke $r15.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r0.<com.braintreepayments.api.internal.j: javax.net.ssl.SSLSocketFactory a> = $r17;

     label15:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label16:
        return;

     label17:
        $r18 := @caughtexception;

        return;

     label18:
        $r19 := @caughtexception;

        return;

     label19:
        $r20 := @caughtexception;

        goto label13;

     label20:
        $r21 := @caughtexception;

        goto label13;

        catch java.lang.Exception from label01 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.Throwable from label04 to label06 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
        catch java.io.IOException from label12 to label13 with label19;
        catch java.lang.NullPointerException from label12 to label13 with label20;
        catch java.lang.Exception from label14 to label15 with label09;
        catch java.lang.Throwable from label14 to label15 with label11;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.NullPointerException from label15 to label16 with label18;
    }

    private java.net.Socket a(java.net.Socket)
    {
        com.braintreepayments.api.internal.j $r0;
        java.net.Socket $r1;
        boolean $z0;
        java.util.ArrayList $r2;
        javax.net.ssl.SSLSocket $r3;
        java.lang.String[] $r4;
        java.util.List $r5;
        int $i0;
        java.lang.Object[] $r6;

        $r0 := @this: com.braintreepayments.api.internal.j;

        $r1 := @parameter0: java.net.Socket;

        $z0 = $r1 instanceof javax.net.ssl.SSLSocket;

        if $z0 == 0 goto label1;

        $r2 = new java.util.ArrayList;

        $r3 = (javax.net.ssl.SSLSocket) $r1;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedProtocols()>();

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "TLSv1.2";

        $r4[1] = "TLSv1.1";

        $r4[2] = "TLSv1";

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        virtualinvoke $r2.<java.util.ArrayList: boolean retainAll(java.util.Collection)>($r5);

        $r3 = (javax.net.ssl.SSLSocket) $r1;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r6 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r4 = (java.lang.String[]) $r6;

        virtualinvoke $r3.<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>($r4);

     label1:
        return $r1;
    }

    public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException
    {
        com.braintreepayments.api.internal.j $r0;
        java.lang.String $r1;
        int $i0;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;

        $r0 := @this: com.braintreepayments.api.internal.j;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.braintreepayments.api.internal.j: javax.net.ssl.SSLSocketFactory a>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r1, $i0);

        $r3 = specialinvoke $r0.<com.braintreepayments.api.internal.j: java.net.Socket a(java.net.Socket)>($r3);

        return $r3;
    }

    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException
    {
        com.braintreepayments.api.internal.j $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.net.InetAddress $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Socket $r4;

        $r0 := @this: com.braintreepayments.api.internal.j;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 = $r0.<com.braintreepayments.api.internal.j: javax.net.ssl.SSLSocketFactory a>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        $r4 = specialinvoke $r0.<com.braintreepayments.api.internal.j: java.net.Socket a(java.net.Socket)>($r4);

        return $r4;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int) throws java.io.IOException
    {
        com.braintreepayments.api.internal.j $r0;
        java.net.InetAddress $r1;
        int $i0;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;

        $r0 := @this: com.braintreepayments.api.internal.j;

        $r1 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        $r2 = $r0.<com.braintreepayments.api.internal.j: javax.net.ssl.SSLSocketFactory a>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>($r1, $i0);

        $r3 = specialinvoke $r0.<com.braintreepayments.api.internal.j: java.net.Socket a(java.net.Socket)>($r3);

        return $r3;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int) throws java.io.IOException
    {
        com.braintreepayments.api.internal.j $r0;
        java.net.InetAddress $r1, $r2;
        int $i0, $i1;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Socket $r4;

        $r0 := @this: com.braintreepayments.api.internal.j;

        $r1 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 = $r0.<com.braintreepayments.api.internal.j: javax.net.ssl.SSLSocketFactory a>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        $r4 = specialinvoke $r0.<com.braintreepayments.api.internal.j: java.net.Socket a(java.net.Socket)>($r4);

        return $r4;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException
    {
        com.braintreepayments.api.internal.j $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLSocketFactory $r3;

        $r0 := @this: com.braintreepayments.api.internal.j;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<com.braintreepayments.api.internal.j: javax.net.ssl.SSLSocketFactory a>;

        $r1 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        $r1 = specialinvoke $r0.<com.braintreepayments.api.internal.j: java.net.Socket a(java.net.Socket)>($r1);

        return $r1;
    }

    public java.lang.String[] getDefaultCipherSuites()
    {
        com.braintreepayments.api.internal.j $r0;
        java.lang.String[] $r1;
        javax.net.ssl.SSLSocketFactory $r2;

        $r0 := @this: com.braintreepayments.api.internal.j;

        $r2 = $r0.<com.braintreepayments.api.internal.j: javax.net.ssl.SSLSocketFactory a>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.lang.String[] getDefaultCipherSuites()>();

        return $r1;
    }

    public java.lang.String[] getSupportedCipherSuites()
    {
        com.braintreepayments.api.internal.j $r0;
        java.lang.String[] $r1;
        javax.net.ssl.SSLSocketFactory $r2;

        $r0 := @this: com.braintreepayments.api.internal.j;

        $r2 = $r0.<com.braintreepayments.api.internal.j: javax.net.ssl.SSLSocketFactory a>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.lang.String[] getSupportedCipherSuites()>();

        return $r1;
    }
}
