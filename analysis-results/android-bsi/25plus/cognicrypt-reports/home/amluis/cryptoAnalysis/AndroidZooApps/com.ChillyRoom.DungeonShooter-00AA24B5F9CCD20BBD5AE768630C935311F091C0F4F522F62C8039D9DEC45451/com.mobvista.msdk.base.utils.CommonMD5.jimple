public class com.mobvista.msdk.base.utils.CommonMD5 extends java.lang.Object implements com.mobvista.msdk.config.system.NoProGuard
{
    public static final java.lang.String TAG;

    public void <init>()
    {
        com.mobvista.msdk.base.utils.CommonMD5 $r0;

        $r0 := @this: com.mobvista.msdk.base.utils.CommonMD5;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String ByteArrayToHexString(byte[])
    {
        byte[] $r0, $r1, $r2;
        int $i0, $i1;
        java.math.BigInteger $r3;
        java.lang.String $r4;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return "";

     label1:
        $i0 = lengthof $r0;

        if $i0 != 0 goto label2;

        return "";

     label2:
        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        $r1 = newarray (byte)[$i0];

        $i0 = 0;

     label3:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label4;

        $r1[$i0] = 48;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $i0 = lengthof $r0;

        $i0 = $i0 + 1;

        $r2 = newarray (byte)[$i0];

        $r2[0] = 0;

        $i0 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r2, 1, $i0);

        $r3 = new java.math.BigInteger;

        specialinvoke $r3.<java.math.BigInteger: void <init>(byte[])>($r2);

        $r4 = virtualinvoke $r3.<java.math.BigInteger: java.lang.String toString(int)>(16);

        $r0 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r1;

        $i1 = lengthof $r0;

        $i0 = $i0 - $i1;

        $i1 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r1, $i0, $i1);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>($r1);

        return $r4;
    }

    private static java.lang.String HexEncode(byte[])
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        byte $b2;
        short $s3;
        java.lang.String $r2;
        java.util.Locale $r3;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $s3 = $b2 & 240;

        $s3 = $s3 >>> 4;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $b2 = $b2 & 15;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        return $r2;
    }

    private static java.lang.String UpHexEncode(byte[])
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        byte $b2;
        short $s3;
        java.lang.String $r2;
        java.util.Locale $r3;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $s3 = $b2 & 240;

        $s3 = $s3 >>> 4;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $b2 = $b2 & 15;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r3);

        return $r2;
    }

    public static java.lang.String getMD5(java.lang.String)
    {
        java.lang.String $r0, varReplacer5360, varReplacer5361, varReplacer5362;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Throwable $r3;
        java.security.NoSuchAlgorithmException r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer5362 = "MD5";

        staticinvoke <com.mobvista.msdk.base.utils.f: void a(java.lang.String,java.lang.String)>(varReplacer5362, $r0);

        varReplacer5360 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5360);

        virtualinvoke $r1.<java.security.MessageDigest: void reset()>();

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String HexEncode(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r3;

        virtualinvoke r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer5361 = "";

        return varReplacer5361;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String getQftJSMD5(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1, $r3;
        byte[] $r2;
        java.security.MessageDigest $r4;
        byte $b4, $b5;
        char $c6;
        java.lang.Exception $r5;

        $r0 := @parameter0: java.lang.String;

        $i2 = 0;

     label01:
        $r2 = staticinvoke <com.mobvista.msdk.base.utils.CommonMD5: byte[] getQftJSMD5Bytes(java.lang.String)>($r0);

        $r3 = newarray (char)[16];

        $r3[0] = 48;

        $r3[1] = 49;

        $r3[2] = 50;

        $r3[3] = 51;

        $r3[4] = 52;

        $r3[5] = 53;

        $r3[6] = 54;

        $r3[7] = 55;

        $r3[8] = 56;

        $r3[9] = 57;

        $r3[10] = 97;

        $r3[11] = 98;

        $r3[12] = 99;

        $r3[13] = 100;

        $r3[14] = 101;

        $r3[15] = 102;

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        $i0 = lengthof $r2;

     label02:
        $i1 = $i0 * 2;

     label03:
        $r1 = newarray (char)[$i1];

     label04:
        $i3 = 0;

     label05:
        if $i2 >= $i0 goto label12;

     label06:
        $b4 = $r2[$i2];

     label07:
        $i1 = $i3 + 1;

        $b5 = $b4 >>> 4;

        $b5 = $b5 & 15;

     label08:
        $c6 = $r3[$b5];

        $r1[$i3] = $c6;

     label09:
        $i3 = $i1 + 1;

        $b4 = $b4 & 15;

     label10:
        $c6 = $r3[$b4];

        $r1[$i1] = $c6;

     label11:
        $i2 = $i2 + 1;

        goto label05;

     label12:
        $r0 = new java.lang.String;

     label13:
        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r1);

     label14:
        return $r0;

     label15:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return "";

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public static byte[] getQftJSMD5Bytes(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0;
        int $i0, $i1, $i2, $i3;
        byte[] $r1, $r3;
        java.lang.StringBuilder $r2;
        byte $b4;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-16LE");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("b = ");

        $r0 = staticinvoke <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String ByteArrayToHexString(byte[])>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mobvista.msdk.base.utils.f: void b(java.lang.String,java.lang.String)>("----", $r0);

        $r3 = newarray (byte)[$i1];

        $i2 = 0;

     label1:
        $i3 = lengthof $r1;

        if $i2 >= $i3 goto label3;

        $b4 = $r1[$i2];

        if $b4 == -1 goto label2;

        $b4 = $r1[$i2];

        if $b4 == -2 goto label2;

        $b4 = $r1[$i2];

        $r3[$i0] = $b4;

        $i0 = $i0 + 1;

        if $i0 == $i1 goto label3;

     label2:
        $i2 = $i2 + 2;

        goto label1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("source = ");

        $r0 = staticinvoke <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String ByteArrayToHexString(byte[])>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.mobvista.msdk.base.utils.f: void b(java.lang.String,java.lang.String)>("----", $r0);

        return $r3;
    }

    public static java.lang.String getUPMD5(java.lang.String)
    {
        java.lang.String $r0, varReplacer8759, varReplacer8760, varReplacer8761;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Throwable $r3;
        java.security.NoSuchAlgorithmException r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer8760 = "MD5";

        staticinvoke <com.mobvista.msdk.base.utils.f: void a(java.lang.String,java.lang.String)>(varReplacer8760, $r0);

        varReplacer8761 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8761);

        virtualinvoke $r1.<java.security.MessageDigest: void reset()>();

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String UpHexEncode(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r3;

        virtualinvoke r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer8759 = "";

        return varReplacer8759;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
}
