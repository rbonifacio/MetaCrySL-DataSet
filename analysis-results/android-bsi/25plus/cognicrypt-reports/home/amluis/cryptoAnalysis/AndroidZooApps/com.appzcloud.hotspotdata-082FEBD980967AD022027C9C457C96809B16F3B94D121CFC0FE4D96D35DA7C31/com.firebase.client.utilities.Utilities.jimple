public class com.firebase.client.utilities.Utilities extends java.lang.Object
{

    public void <init>()
    {
        com.firebase.client.utilities.Utilities $r0;

        $r0 := @this: com.firebase.client.utilities.Utilities;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object castOrNull(java.lang.Object, java.lang.Class)
    {
        java.lang.Class $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        null_type varReplacer1363;

        nop;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        varReplacer1363 = null;

        return varReplacer1363;
    }

    public static int compareInts(int, int)
    {
        int $i0, $i1, varReplacer5980, varReplacer5981, varReplacer5982;

        nop;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 >= $i1 goto label1;

        varReplacer5980 = -1;

        return varReplacer5980;

     label1:
        if $i0 != $i1 goto label2;

        varReplacer5981 = 0;

        return varReplacer5981;

     label2:
        varReplacer5982 = 1;

        return varReplacer5982;
    }

    public static int compareLongs(long, long)
    {
        long $l0, $l1;
        byte $b2;
        int varReplacer5971, varReplacer5972, varReplacer5973;

        nop;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label1;

        varReplacer5973 = -1;

        return varReplacer5973;

     label1:
        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        varReplacer5971 = 0;

        return varReplacer5971;

     label2:
        varReplacer5972 = 1;

        return varReplacer5972;
    }

    public static java.lang.String doubleToHashString(double)
    {
        double $d0;
        byte[] $r0;
        java.lang.StringBuilder $r1;
        java.nio.ByteBuffer $r2;
        int $i0, varReplacer6886;
        java.lang.Object[] $r3;
        byte $b1;
        java.lang.Byte $r4;
        java.lang.String $r5, varReplacer6887;

        nop;

        $d0 := @parameter0: double;

        $r1 = new java.lang.StringBuilder;

        varReplacer6886 = 16;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(varReplacer6886);

        $r0 = newarray (byte)[8];

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r0);

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d0);

        $i0 = 0;

     label1:
        if $i0 >= 8 goto label2;

        $r3 = newarray (java.lang.Object)[1];

        $b1 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3[0] = $r4;

        varReplacer6887 = "%02x";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer6887, $r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.Object getOrNull(java.lang.Object, java.lang.String, java.lang.Class)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        java.util.Map $r3;
        null_type varReplacer1361, varReplacer1362;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class;

        if $r0 != null goto label1;

        varReplacer1361 = null;

        return varReplacer1361;

     label1:
        $r0 = staticinvoke <com.firebase.client.utilities.Utilities: java.lang.Object castOrNull(java.lang.Object,java.lang.Class)>($r0, class "Ljava/util/Map;");

        $r3 = (java.util.Map) $r0;

        $r0 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r0 == null goto label2;

        $r0 = staticinvoke <com.firebase.client.utilities.Utilities: java.lang.Object castOrNull(java.lang.Object,java.lang.Class)>($r0, $r2);

        return $r0;

     label2:
        varReplacer1362 = null;

        return varReplacer1362;
    }

    public static void hardAssert(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        staticinvoke <com.firebase.client.utilities.Utilities: void hardAssert(boolean,java.lang.String)>($z0, "");

        return;
    }

    public static void hardAssert(boolean, java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0, varReplacer1491;
        java.lang.AssertionError $r1;
        java.lang.StringBuilder $r2;

        nop;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer1491 = "hardAssert failed: ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1491);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r0);

        throw $r1;

     label1:
        return;
    }

    public static java.lang.Long longFromObject(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        java.lang.Integer $r1;
        int $i0;
        long $l1;
        java.lang.Long $r2;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.Integer) $r0;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $l1 = (long) $i0;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;

     label1:
        $z0 = $r0 instanceof java.lang.Long;

        if $z0 == 0 goto label2;

        $r2 = (java.lang.Long) $r0;

        return $r2;

     label2:
        return null;
    }

    public static com.firebase.client.utilities.ParsedUrl parseUrl(java.lang.String) throws com.firebase.client.FirebaseException
    {
        java.lang.String $r0, $r6, $r10, varReplacer1282, varReplacer1283, varReplacer1284, varReplacer1285, varReplacer1287, varReplacer1288, varReplacer1289, varReplacer1290, varReplacer1291, varReplacer1292, varReplacer1294, varReplacer1295, varReplacer1296, varReplacer1297, varReplacer1298;
        java.lang.StringBuilder $r1, $r12;
        com.firebase.client.utilities.ParsedUrl $r2;
        com.firebase.client.core.Path $r3;
        com.firebase.client.core.RepoInfo $r4;
        java.net.URI $r5;
        int $i0, $i1, $i2, varReplacer1286, varReplacer1293;
        java.net.URISyntaxException $r7;
        java.lang.Throwable $r8, $r13;
        com.firebase.client.FirebaseException $r9;
        java.lang.String[] $r11;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r6 = "https://resplendent-torch-2945.firebaseio.com/";

     label01:
        varReplacer1288 = "//";

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(varReplacer1288);

     label02:
        if $i0 != -1 goto label06;

        $r7 = new java.net.URISyntaxException;

     label03:
        varReplacer1289 = "https://resplendent-torch-2945.firebaseio.com/";

        varReplacer1290 = "Invalid scheme specified";

        specialinvoke $r7.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>(varReplacer1289, varReplacer1290);

     label04:
        throw $r7;

     label05:
        $r8 := @caughtexception;

        $r9 = new com.firebase.client.FirebaseException;

        varReplacer1283 = "Invalid Firebase url specified";

        specialinvoke $r9.<com.firebase.client.FirebaseException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer1283, $r8);

        throw $r9;

     label06:
        $i1 = $i0 + 2;

     label07:
        $r10 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        varReplacer1294 = "/";

        $i1 = virtualinvoke $r10.<java.lang.String: int indexOf(java.lang.String)>(varReplacer1294);

     label08:
        if $i1 == -1 goto label23;

        $i0 = $i0 + 2;

        $i0 = $i1 + $i0;

     label09:
        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        varReplacer1291 = "/";

        $r11 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1291);

     label10:
        $r1 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label12:
        $i1 = 0;

     label13:
        $i2 = lengthof $r11;

        if $i1 >= $i2 goto label20;

        $r6 = $r11[$i1];

     label14:
        varReplacer1297 = "";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1297);

     label15:
        if $z0 != 0 goto label19;

     label16:
        varReplacer1292 = "/";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1292);

     label17:
        $r6 = $r11[$i1];

     label18:
        varReplacer1295 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, varReplacer1295);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label19:
        $i1 = $i1 + 1;

        goto label13;

     label20:
        $r12 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer1293 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1293, $i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label22:
        $r6 = $r0;

     label23:
        $r5 = new java.net.URI;

     label24:
        specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r6);

        $r0 = virtualinvoke $r5.<java.net.URI: java.lang.String getPath()>();

        varReplacer1284 = "+";

        varReplacer1285 = " ";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1284, varReplacer1285);

        staticinvoke <com.firebase.client.utilities.Validation: void validateRootPathString(java.lang.String)>($r0);

     label25:
        $r3 = new com.firebase.client.core.Path;

     label26:
        specialinvoke $r3.<com.firebase.client.core.Path: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.net.URI: java.lang.String getScheme()>();

     label27:
        $r4 = new com.firebase.client.core.RepoInfo;

     label28:
        specialinvoke $r4.<com.firebase.client.core.RepoInfo: void <init>()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String getHost()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

     label29:
        $r4.<com.firebase.client.core.RepoInfo: java.lang.String host> = $r6;

     label30:
        $i0 = virtualinvoke $r5.<java.net.URI: int getPort()>();

     label31:
        if $i0 == -1 goto label45;

     label32:
        varReplacer1282 = "https";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1282);

     label33:
        $r4.<com.firebase.client.core.RepoInfo: boolean secure> = $z0;

        $r1 = new java.lang.StringBuilder;

     label34:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label35:
        $r0 = $r4.<com.firebase.client.core.RepoInfo: java.lang.String host>;

     label36:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1298 = ":";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1298);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label37:
        $r4.<com.firebase.client.core.RepoInfo: java.lang.String host> = $r0;

     label38:
        $r0 = $r4.<com.firebase.client.core.RepoInfo: java.lang.String host>;

     label39:
        varReplacer1296 = "\\.";

        $r11 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1296);

     label40:
        $r0 = $r11[0];

     label41:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

     label42:
        $r4.<com.firebase.client.core.RepoInfo: java.lang.String namespace> = $r0;

        $r0 = $r4.<com.firebase.client.core.RepoInfo: java.lang.String host>;

        $r4.<com.firebase.client.core.RepoInfo: java.lang.String internalHost> = $r0;

        $r2 = new com.firebase.client.utilities.ParsedUrl;

     label43:
        specialinvoke $r2.<com.firebase.client.utilities.ParsedUrl: void <init>()>();

     label44:
        $r2.<com.firebase.client.utilities.ParsedUrl: com.firebase.client.core.Path path> = $r3;

        $r2.<com.firebase.client.utilities.ParsedUrl: com.firebase.client.core.RepoInfo repoInfo> = $r4;

        return $r2;

     label45:
        varReplacer1286 = 1;

        $r4.<com.firebase.client.core.RepoInfo: boolean secure> = varReplacer1286;

        goto label38;

     label46:
        $r13 := @caughtexception;

        $r9 = new com.firebase.client.FirebaseException;

        varReplacer1287 = "Failed to URLEncode the path";

        specialinvoke $r9.<com.firebase.client.FirebaseException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer1287, $r13);

        throw $r9;

        catch java.net.URISyntaxException from label01 to label02 with label05;
        catch java.net.URISyntaxException from label03 to label05 with label05;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label46;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label46;
        catch java.net.URISyntaxException from label07 to label08 with label05;
        catch java.net.URISyntaxException from label09 to label10 with label05;
        catch java.net.URISyntaxException from label11 to label12 with label05;
        catch java.net.URISyntaxException from label14 to label15 with label05;
        catch java.net.URISyntaxException from label16 to label17 with label05;
        catch java.net.URISyntaxException from label18 to label19 with label05;
        catch java.net.URISyntaxException from label21 to label22 with label05;
        catch java.net.URISyntaxException from label24 to label25 with label05;
        catch java.net.URISyntaxException from label26 to label27 with label05;
        catch java.net.URISyntaxException from label28 to label29 with label05;
        catch java.net.URISyntaxException from label30 to label31 with label05;
        catch java.net.URISyntaxException from label32 to label33 with label05;
        catch java.net.URISyntaxException from label34 to label35 with label05;
        catch java.net.URISyntaxException from label36 to label37 with label05;
        catch java.net.URISyntaxException from label39 to label40 with label05;
        catch java.net.URISyntaxException from label41 to label42 with label05;
        catch java.net.URISyntaxException from label43 to label44 with label05;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label46;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label46;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label46;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label46;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label46;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label46;
        catch java.io.UnsupportedEncodingException from label21 to label22 with label46;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label46;
        catch java.io.UnsupportedEncodingException from label26 to label27 with label46;
        catch java.io.UnsupportedEncodingException from label28 to label29 with label46;
        catch java.io.UnsupportedEncodingException from label30 to label31 with label46;
        catch java.io.UnsupportedEncodingException from label32 to label33 with label46;
        catch java.io.UnsupportedEncodingException from label34 to label35 with label46;
        catch java.io.UnsupportedEncodingException from label36 to label37 with label46;
        catch java.io.UnsupportedEncodingException from label39 to label40 with label46;
        catch java.io.UnsupportedEncodingException from label41 to label42 with label46;
        catch java.io.UnsupportedEncodingException from label43 to label44 with label46;
    }

    public static java.lang.String sha1HexDigest(java.lang.String)
    {
        java.lang.String $r0, varReplacer6562, varReplacer6563, varReplacer6564, varReplacer6565;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Throwable $r3, $r5;
        java.lang.RuntimeException $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer6565 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6565);

        varReplacer6563 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer6563);

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.firebase.client.utilities.Base64: java.lang.String encodeBytes(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        varReplacer6564 = "Missing SHA-1 MessageDigest provider.";

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer6564, $r3);

        throw $r4;

     label4:
        $r5 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        varReplacer6562 = "UTF-8 encoding is required for Firebase to run!";

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer6562);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static java.lang.String[] splitIntoFrames(java.lang.String, int)
    {
        java.lang.String $r0, $r3;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r1;
        java.lang.String[] $r2;
        java.lang.Object[] $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 > 16384 goto label1;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = $r0;

        return $r2;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i1 = 0;

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label3;

        $i2 = $i1 + 16384;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 16384;

        goto label2;

     label3:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r4 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r2 = (java.lang.String[]) $r4;

        return $r2;
    }

    public static java.lang.String stringHashV2Representation(java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer6594, varReplacer6595, varReplacer6598, varReplacer6599;
        int $i0, varReplacer6596, varReplacer6597, varReplacer6600, varReplacer6601;
        java.lang.StringBuilder $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = $r0;

        varReplacer6596 = 92;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(varReplacer6596);

        if $i0 == -1 goto label1;

        varReplacer6598 = "\\";

        varReplacer6599 = "\\\\";

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer6598, varReplacer6599);

     label1:
        varReplacer6597 = 34;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(varReplacer6597);

        if $i0 == -1 goto label2;

        varReplacer6594 = "\"";

        varReplacer6595 = "\\\"";

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer6594, varReplacer6595);

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer6600 = 34;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer6600);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer6601 = 34;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer6601);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.Integer tryParseInt(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i3, varReplacer1318;
        boolean $z0;
        char $c1;
        long $l2, $l4;
        byte $b5;
        java.lang.Integer $r1;
        null_type varReplacer1319, varReplacer1320;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 > 11 goto label6;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        varReplacer1320 = null;

        return varReplacer1320;

     label1:
        $i0 = 0;

        $z0 = 0;

        varReplacer1318 = 0;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(varReplacer1318);

        if $c1 != 45 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 1 goto label6;

        $z0 = 1;

        $i0 = 1;

     label2:
        $l2 = 0L;

     label3:
        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i3 goto label4;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c1 < 48 goto label6;

        if $c1 > 57 goto label6;

        $l2 = 10L * $l2;

        $i3 = $c1 + -48;

        $l4 = (long) $i3;

        $l2 = $l2 + $l4;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        if $z0 == 0 goto label5;

        $l4 = neg $l2;

        $b5 = $l4 cmp -2147483648L;

        if $b5 < 0 goto label6;

        $l2 = neg $l2;

        $i0 = (int) $l2;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;

     label5:
        $b5 = $l2 cmp 2147483647L;

        if $b5 > 0 goto label6;

        $i0 = (int) $l2;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;

     label6:
        varReplacer1319 = null;

        return varReplacer1319;
    }
}
