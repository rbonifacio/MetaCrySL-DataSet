public final class com.aquafadas.dp.connection.utils.CertificateUtils extends java.lang.Object
{
    private static final java.lang.String CERTIFICATE_DEFAULT_LOCATION;
    private static final int KEY_SIZE_AES256;
    private static final java.lang.String WEAK_KEY;

    private void <init>()
    {
        com.aquafadas.dp.connection.utils.CertificateUtils $r0;

        $r0 := @this: com.aquafadas.dp.connection.utils.CertificateUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.io.InputStream getCertificateInputStream(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer754;
        java.io.File $r2, r5;
        java.lang.Throwable $r3;
        boolean $z0;
        java.io.InputStream $r4;
        java.io.FileInputStream r6;
        java.io.FileNotFoundException r7;
        null_type varReplacer752, varReplacer753;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label4;

        r5 = new java.io.File;

        $r2 = r5;

        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label5;

        r6 = new java.io.FileInputStream;

     label1:
        specialinvoke r6.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        r7 = (java.io.FileNotFoundException) $r3;

        virtualinvoke r7.<java.io.FileNotFoundException: void printStackTrace()>();

        varReplacer752 = null;

        return varReplacer752;

     label4:
        varReplacer754 = "com/aquafadas/dp/connection/resources/certificat.aveapp";

        $r4 = staticinvoke <com.aquafadas.utils.ResourceUtils: java.io.InputStream getInputStream(android.content.Context,java.lang.Class,java.lang.String)>($r0, class "Lcom/aquafadas/dp/connection/utils/CertificateUtils;", varReplacer754);

        return $r4;

     label5:
        varReplacer753 = null;

        return varReplacer753;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    public static com.aquafadas.dp.connection.model.certificate.CertificateInfo init(android.content.Context) throws com.aquafadas.dp.connection.exception.CertificateNotFoundException
    {
        android.content.Context $r0;
        com.aquafadas.dp.connection.model.certificate.CertificateInfo $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.aquafadas.dp.connection.utils.CertificateUtils: com.aquafadas.dp.connection.model.certificate.CertificateInfo initWithPath(android.content.Context,java.lang.String)>($r0, null);

        return $r1;
    }

    public static com.aquafadas.dp.connection.model.certificate.CertificateInfo initWithPath(android.content.Context, java.lang.String) throws com.aquafadas.dp.connection.exception.CertificateNotFoundException
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer748, varReplacer749, varReplacer750;
        com.aquafadas.dp.connection.parser.CertificateParser $r2;
        java.io.InputStream $r3;
        com.aquafadas.dp.connection.model.certificate.CertificateInfo $r4;
        com.aquafadas.dp.connection.exception.CertificateNotFoundException $r5;
        java.lang.StringBuilder $r6;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.aquafadas.dp.connection.utils.CertificateUtils: java.io.InputStream getCertificateInputStream(android.content.Context,java.lang.String)>($r0, $r1);

        if $r3 == null goto label1;

        $r2 = new com.aquafadas.dp.connection.parser.CertificateParser;

        specialinvoke $r2.<com.aquafadas.dp.connection.parser.CertificateParser: void <init>()>();

        virtualinvoke $r2.<com.aquafadas.dp.connection.parser.CertificateParser: void parseDocument(java.io.InputStream)>($r3);

        $r4 = virtualinvoke $r2.<com.aquafadas.dp.connection.parser.CertificateParser: com.aquafadas.dp.connection.model.certificate.CertificateInfo getCertificateInfo()>();

        if $r4 == null goto label1;

        virtualinvoke $r4.<com.aquafadas.dp.connection.model.certificate.CertificateInfo: void decode()>();

        return $r4;

     label1:
        if $r1 == null goto label2;

        $r5 = new com.aquafadas.dp.connection.exception.CertificateNotFoundException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer749 = "Can\'t find file : ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer749);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer750 = ", please download the certificate file from www.avepublishing.com";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer750);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.aquafadas.dp.connection.exception.CertificateNotFoundException: void <init>(java.lang.String)>($r1);

        throw $r5;

     label2:
        $r5 = new com.aquafadas.dp.connection.exception.CertificateNotFoundException;

        varReplacer748 = "Can\'t find file : certificat.aveapp in package \"com/aquafadas/dp/connection/resources/certificat.aveapp\", please download the certificate file from www.avepublishing.com";

        specialinvoke $r5.<com.aquafadas.dp.connection.exception.CertificateNotFoundException: void <init>(java.lang.String)>(varReplacer748);

        throw $r5;
    }

    public static java.lang.String stringWithData(byte[])
    {
        byte[] $r0, $r1, $r4;
        javax.crypto.spec.SecretKeySpec $r2;
        java.lang.String $r3, varReplacer901;
        int $i0, varReplacer900, varReplacer902, varReplacer903;
        null_type varReplacer904;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = newarray (byte)[32];

        $r3 = "ceciestlaclemaisjepensequeelleestbeaucouptroplonguepourpasser";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        varReplacer902 = 32;

        staticinvoke <com.aquafadas.utils.StringUtils: void strcpy(byte[],byte[],int)>($r1, $r4, varReplacer902);

        $r2 = new javax.crypto.spec.SecretKeySpec;

        $i0 = lengthof $r1;

        varReplacer900 = 0;

        varReplacer901 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer900, $i0, varReplacer901);

        varReplacer903 = 2;

        $r0 = staticinvoke <com.aquafadas.dp.connection.utils.CertificateUtils: byte[] symmetricalTransform(int,byte[],javax.crypto.SecretKey)>(varReplacer903, $r0, $r2);

        if $r0 != null goto label1;

        varReplacer904 = null;

        return varReplacer904;

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r0);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        return $r3;
    }

    private static byte[] symmetricalTransform(int, byte[], javax.crypto.SecretKey)
    {
        int $i0, varReplacer907;
        byte[] $r0;
        javax.crypto.SecretKey $r1;
        java.lang.Exception $r2;
        javax.crypto.Cipher $r3;
        null_type varReplacer905;
        java.lang.String varReplacer906;

        nop;

        $i0 := @parameter0: int;

        $r0 := @parameter1: byte[];

        $r1 := @parameter2: javax.crypto.SecretKey;

     label1:
        varReplacer906 = "AES/ECB/NoPadding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer906);

        varReplacer907 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer907, $r1);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        varReplacer905 = null;

        return varReplacer905;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
