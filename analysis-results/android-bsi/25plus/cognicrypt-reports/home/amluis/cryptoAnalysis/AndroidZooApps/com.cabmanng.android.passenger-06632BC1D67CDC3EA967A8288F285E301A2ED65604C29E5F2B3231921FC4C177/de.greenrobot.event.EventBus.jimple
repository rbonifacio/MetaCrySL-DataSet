public class de.greenrobot.event.EventBus extends java.lang.Object
{
    private static final de.greenrobot.event.EventBusBuilder DEFAULT_BUILDER;
    public static java.lang.String TAG;
    static volatile de.greenrobot.event.EventBus defaultInstance;
    private static final java.util.Map eventTypesCache;
    private final de.greenrobot.event.AsyncPoster asyncPoster;
    private final de.greenrobot.event.BackgroundPoster backgroundPoster;
    private final java.lang.ThreadLocal currentPostingThreadState;
    private final boolean eventInheritance;
    private final java.util.concurrent.ExecutorService executorService;
    private final boolean logNoSubscriberMessages;
    private final boolean logSubscriberExceptions;
    private final de.greenrobot.event.HandlerPoster mainThreadPoster;
    private final boolean sendNoSubscriberEvent;
    private final boolean sendSubscriberExceptionEvent;
    private final java.util.Map stickyEvents;
    private final de.greenrobot.event.SubscriberMethodFinder subscriberMethodFinder;
    private final java.util.Map subscriptionsByEventType;
    private final boolean throwSubscriberException;
    private final java.util.Map typesBySubscriber;

    static void <clinit>()
    {
        de.greenrobot.event.EventBusBuilder $r0;
        java.util.HashMap $r1;
        java.lang.String varReplacer778;

        nop;

        varReplacer778 = "Event";

        <de.greenrobot.event.EventBus: java.lang.String TAG> = varReplacer778;

        $r0 = new de.greenrobot.event.EventBusBuilder;

        specialinvoke $r0.<de.greenrobot.event.EventBusBuilder: void <init>()>();

        <de.greenrobot.event.EventBus: de.greenrobot.event.EventBusBuilder DEFAULT_BUILDER> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <de.greenrobot.event.EventBus: java.util.Map eventTypesCache> = $r1;

        return;
    }

    public void <init>()
    {
        de.greenrobot.event.EventBus $r0;
        de.greenrobot.event.EventBusBuilder $r1;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 = <de.greenrobot.event.EventBus: de.greenrobot.event.EventBusBuilder DEFAULT_BUILDER>;

        specialinvoke $r0.<de.greenrobot.event.EventBus: void <init>(de.greenrobot.event.EventBusBuilder)>($r1);

        return;
    }

    void <init>(de.greenrobot.event.EventBusBuilder)
    {
        de.greenrobot.event.EventBus $r0;
        de.greenrobot.event.EventBusBuilder $r1;
        android.os.Looper $r2;
        de.greenrobot.event.EventBus$1 $r3;
        java.util.HashMap $r4;
        java.util.concurrent.ConcurrentHashMap $r5;
        de.greenrobot.event.HandlerPoster $r6;
        de.greenrobot.event.BackgroundPoster $r7;
        de.greenrobot.event.AsyncPoster $r8;
        de.greenrobot.event.SubscriberMethodFinder $r9;
        java.util.List $r10;
        boolean $z0;
        java.util.concurrent.ExecutorService $r11;
        int varReplacer828;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: de.greenrobot.event.EventBusBuilder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new de.greenrobot.event.EventBus$1;

        specialinvoke $r3.<de.greenrobot.event.EventBus$1: void <init>(de.greenrobot.event.EventBus)>($r0);

        $r0.<de.greenrobot.event.EventBus: java.lang.ThreadLocal currentPostingThreadState> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<de.greenrobot.event.EventBus: java.util.Map subscriptionsByEventType> = $r4;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r0.<de.greenrobot.event.EventBus: java.util.Map typesBySubscriber> = $r4;

        $r5 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r5.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents> = $r5;

        $r6 = new de.greenrobot.event.HandlerPoster;

        $r2 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        varReplacer828 = 10;

        specialinvoke $r6.<de.greenrobot.event.HandlerPoster: void <init>(de.greenrobot.event.EventBus,android.os.Looper,int)>($r0, $r2, varReplacer828);

        $r0.<de.greenrobot.event.EventBus: de.greenrobot.event.HandlerPoster mainThreadPoster> = $r6;

        $r7 = new de.greenrobot.event.BackgroundPoster;

        specialinvoke $r7.<de.greenrobot.event.BackgroundPoster: void <init>(de.greenrobot.event.EventBus)>($r0);

        $r0.<de.greenrobot.event.EventBus: de.greenrobot.event.BackgroundPoster backgroundPoster> = $r7;

        $r8 = new de.greenrobot.event.AsyncPoster;

        specialinvoke $r8.<de.greenrobot.event.AsyncPoster: void <init>(de.greenrobot.event.EventBus)>($r0);

        $r0.<de.greenrobot.event.EventBus: de.greenrobot.event.AsyncPoster asyncPoster> = $r8;

        $r9 = new de.greenrobot.event.SubscriberMethodFinder;

        $r10 = $r1.<de.greenrobot.event.EventBusBuilder: java.util.List skipMethodVerificationForClasses>;

        specialinvoke $r9.<de.greenrobot.event.SubscriberMethodFinder: void <init>(java.util.List)>($r10);

        $r0.<de.greenrobot.event.EventBus: de.greenrobot.event.SubscriberMethodFinder subscriberMethodFinder> = $r9;

        $z0 = $r1.<de.greenrobot.event.EventBusBuilder: boolean logSubscriberExceptions>;

        $r0.<de.greenrobot.event.EventBus: boolean logSubscriberExceptions> = $z0;

        $z0 = $r1.<de.greenrobot.event.EventBusBuilder: boolean logNoSubscriberMessages>;

        $r0.<de.greenrobot.event.EventBus: boolean logNoSubscriberMessages> = $z0;

        $z0 = $r1.<de.greenrobot.event.EventBusBuilder: boolean sendSubscriberExceptionEvent>;

        $r0.<de.greenrobot.event.EventBus: boolean sendSubscriberExceptionEvent> = $z0;

        $z0 = $r1.<de.greenrobot.event.EventBusBuilder: boolean sendNoSubscriberEvent>;

        $r0.<de.greenrobot.event.EventBus: boolean sendNoSubscriberEvent> = $z0;

        $z0 = $r1.<de.greenrobot.event.EventBusBuilder: boolean throwSubscriberException>;

        $r0.<de.greenrobot.event.EventBus: boolean throwSubscriberException> = $z0;

        $z0 = $r1.<de.greenrobot.event.EventBusBuilder: boolean eventInheritance>;

        $r0.<de.greenrobot.event.EventBus: boolean eventInheritance> = $z0;

        $r11 = $r1.<de.greenrobot.event.EventBusBuilder: java.util.concurrent.ExecutorService executorService>;

        $r0.<de.greenrobot.event.EventBus: java.util.concurrent.ExecutorService executorService> = $r11;

        return;
    }

    static void addInterfaces(java.util.List, java.lang.Class[])
    {
        java.util.List $r0;
        java.lang.Class[] $r1, $r3;
        int $i0, $i1;
        java.lang.Class $r2;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.Class[];

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r1[$i1];

        $z0 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        staticinvoke <de.greenrobot.event.EventBus: void addInterfaces(java.util.List,java.lang.Class[])>($r0, $r3);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static de.greenrobot.event.EventBusBuilder builder()
    {
        de.greenrobot.event.EventBusBuilder $r0;

        $r0 = new de.greenrobot.event.EventBusBuilder;

        specialinvoke $r0.<de.greenrobot.event.EventBusBuilder: void <init>()>();

        return $r0;
    }

    public static void clearCaches()
    {
        java.util.Map $r0;

        staticinvoke <de.greenrobot.event.SubscriberMethodFinder: void clearCaches()>();

        $r0 = <de.greenrobot.event.EventBus: java.util.Map eventTypesCache>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        return;
    }

    public static de.greenrobot.event.EventBus getDefault()
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Throwable $r1;

        nop;

        $r0 = <de.greenrobot.event.EventBus: de.greenrobot.event.EventBus defaultInstance>;

        if $r0 != null goto label3;

        entermonitor class "Lde/greenrobot/event/EventBus;";

     label1:
        $r0 = <de.greenrobot.event.EventBus: de.greenrobot.event.EventBus defaultInstance>;

        if $r0 != null goto label2;

        $r0 = new de.greenrobot.event.EventBus;

        specialinvoke $r0.<de.greenrobot.event.EventBus: void <init>()>();

        <de.greenrobot.event.EventBus: de.greenrobot.event.EventBus defaultInstance> = $r0;

     label2:
        exitmonitor class "Lde/greenrobot/event/EventBus;";

     label3:
        $r0 = <de.greenrobot.event.EventBus: de.greenrobot.event.EventBus defaultInstance>;

        return $r0;

     label4:
        $r1 := @caughtexception;

     label5:
        exitmonitor class "Lde/greenrobot/event/EventBus;";

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private void handleSubscriberException(de.greenrobot.event.Subscription, java.lang.Object, java.lang.Throwable)
    {
        de.greenrobot.event.EventBus $r0;
        de.greenrobot.event.Subscription $r1;
        java.lang.Throwable $r2;
        java.lang.Object $r3, $r6;
        boolean $z0;
        java.lang.String $r4, $r8, varReplacer797, varReplacer798, varReplacer799, varReplacer800, varReplacer801, varReplacer802, varReplacer803;
        java.lang.StringBuilder $r5;
        java.lang.Class $r7;
        de.greenrobot.event.SubscriberExceptionEvent $r9;
        de.greenrobot.event.EventBusException $r10;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: de.greenrobot.event.Subscription;

        $r3 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Throwable;

        $z0 = $r3 instanceof de.greenrobot.event.SubscriberExceptionEvent;

        if $z0 == 0 goto label1;

        $z0 = $r0.<de.greenrobot.event.EventBus: boolean logSubscriberExceptions>;

        if $z0 == 0 goto label4;

        $r4 = <de.greenrobot.event.EventBus: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer797 = "SubscriberExceptionEvent subscriber ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer797);

        $r6 = $r1.<de.greenrobot.event.Subscription: java.lang.Object subscriber>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        varReplacer802 = " threw an exception";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer802);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r8, $r2);

        $r9 = (de.greenrobot.event.SubscriberExceptionEvent) $r3;

        $r4 = <de.greenrobot.event.EventBus: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer803 = "Initial event ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer803);

        $r3 = $r9.<de.greenrobot.event.SubscriberExceptionEvent: java.lang.Object causingEvent>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        varReplacer800 = " caused exception in ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer800);

        $r3 = $r9.<de.greenrobot.event.SubscriberExceptionEvent: java.lang.Object causingSubscriber>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = $r9.<de.greenrobot.event.SubscriberExceptionEvent: java.lang.Throwable throwable>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r8, $r2);

        return;

     label1:
        $z0 = $r0.<de.greenrobot.event.EventBus: boolean throwSubscriberException>;

        if $z0 == 0 goto label2;

        $r10 = new de.greenrobot.event.EventBusException;

        varReplacer801 = "Invoking subscriber failed";

        specialinvoke $r10.<de.greenrobot.event.EventBusException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer801, $r2);

        throw $r10;

     label2:
        $z0 = $r0.<de.greenrobot.event.EventBus: boolean logSubscriberExceptions>;

        if $z0 == 0 goto label3;

        $r4 = <de.greenrobot.event.EventBus: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer798 = "Could not dispatch event: ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer798);

        $r7 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        varReplacer799 = " to subscribing class ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer799);

        $r6 = $r1.<de.greenrobot.event.Subscription: java.lang.Object subscriber>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r8, $r2);

     label3:
        $z0 = $r0.<de.greenrobot.event.EventBus: boolean sendSubscriberExceptionEvent>;

        if $z0 == 0 goto label4;

        $r9 = new de.greenrobot.event.SubscriberExceptionEvent;

        $r6 = $r1.<de.greenrobot.event.Subscription: java.lang.Object subscriber>;

        specialinvoke $r9.<de.greenrobot.event.SubscriberExceptionEvent: void <init>(de.greenrobot.event.EventBus,java.lang.Throwable,java.lang.Object,java.lang.Object)>($r0, $r2, $r3, $r6);

        virtualinvoke $r0.<de.greenrobot.event.EventBus: void post(java.lang.Object)>($r9);

     label4:
        return;
    }

    private java.util.List lookupAllEventTypes(java.lang.Class)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Class $r1, $r5;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.Class[] $r6;
        java.lang.Throwable $r7;
        java.util.ArrayList r8;
        java.util.List r9;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Class;

        $r2 = <de.greenrobot.event.EventBus: java.util.Map eventTypesCache>;

        entermonitor $r2;

     label1:
        $r3 = <de.greenrobot.event.EventBus: java.util.Map eventTypesCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.List) $r4;

        if $r4 != null goto label4;

        r8 = new java.util.ArrayList;

        $r4 = r8;

        specialinvoke r8.<java.util.ArrayList: void <init>()>();

        $r5 = $r1;

     label2:
        if $r5 == null goto label3;

        r9 = (java.util.List) $r4;

        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        r9 = (java.util.List) $r4;

        staticinvoke <de.greenrobot.event.EventBus: void addInterfaces(java.util.List,java.lang.Class[])>(r9, $r6);

        $r5 = virtualinvoke $r5.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label2;

     label3:
        $r3 = <de.greenrobot.event.EventBus: java.util.Map eventTypesCache>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label4:
        exitmonitor $r2;

        r9 = (java.util.List) $r4;

     label5:
        return r9;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void postSingleEvent(java.lang.Object, de.greenrobot.event.EventBus$PostingThreadState)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1, $r5;
        de.greenrobot.event.EventBus$PostingThreadState $r2;
        java.lang.Class $r3, $r6;
        boolean $z0, $z1;
        java.util.List $r4;
        int $i0, $i1;
        java.lang.String $r7, $r9, varReplacer813;
        java.lang.StringBuilder $r8;
        de.greenrobot.event.NoSubscriberEvent $r10;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: de.greenrobot.event.EventBus$PostingThreadState;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = $r0.<de.greenrobot.event.EventBus: boolean eventInheritance>;

        if $z0 == 0 goto label4;

        $r4 = specialinvoke $r0.<de.greenrobot.event.EventBus: java.util.List lookupAllEventTypes(java.lang.Class)>($r3);

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = 0;

        $z0 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = (java.lang.Class) $r5;

        $z1 = specialinvoke $r0.<de.greenrobot.event.EventBus: boolean postSingleEventForEventType(java.lang.Object,de.greenrobot.event.EventBus$PostingThreadState,java.lang.Class)>($r1, $r2, $r6);

        $z0 = $z0 | $z1;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $z0 != 0 goto label5;

        $z0 = $r0.<de.greenrobot.event.EventBus: boolean logNoSubscriberMessages>;

        if $z0 == 0 goto label3;

        $r7 = <de.greenrobot.event.EventBus: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer813 = "No subscribers registered for event ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer813);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, $r9);

     label3:
        $z0 = $r0.<de.greenrobot.event.EventBus: boolean sendNoSubscriberEvent>;

        if $z0 == 0 goto label5;

        if $r3 == class "Lde/greenrobot/event/NoSubscriberEvent;" goto label5;

        if $r3 == class "Lde/greenrobot/event/SubscriberExceptionEvent;" goto label5;

        $r10 = new de.greenrobot.event.NoSubscriberEvent;

        specialinvoke $r10.<de.greenrobot.event.NoSubscriberEvent: void <init>(de.greenrobot.event.EventBus,java.lang.Object)>($r0, $r1);

        virtualinvoke $r0.<de.greenrobot.event.EventBus: void post(java.lang.Object)>($r10);

        return;

     label4:
        $z0 = specialinvoke $r0.<de.greenrobot.event.EventBus: boolean postSingleEventForEventType(java.lang.Object,de.greenrobot.event.EventBus$PostingThreadState,java.lang.Class)>($r1, $r2, $r3);

        goto label2;

     label5:
        return;
    }

    private boolean postSingleEventForEventType(java.lang.Object, de.greenrobot.event.EventBus$PostingThreadState, java.lang.Class)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1, $r5;
        de.greenrobot.event.EventBus$PostingThreadState $r2;
        java.lang.Class $r3;
        boolean $z0;
        java.util.Map $r4;
        java.util.concurrent.CopyOnWriteArrayList $r6;
        java.util.Iterator $r7;
        de.greenrobot.event.Subscription $r8;
        java.lang.Throwable $r9, $r10;
        null_type varReplacer815, varReplacer817, varReplacer820, varReplacer821;
        int varReplacer816, varReplacer818, varReplacer819, varReplacer822;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: de.greenrobot.event.EventBus$PostingThreadState;

        $r3 := @parameter2: java.lang.Class;

        entermonitor $r0;

     label01:
        $r4 = $r0.<de.greenrobot.event.EventBus: java.util.Map subscriptionsByEventType>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r6 = (java.util.concurrent.CopyOnWriteArrayList) $r5;

        exitmonitor $r0;

     label02:
        if $r6 == null goto label11;

        $z0 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        $r7 = virtualinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (de.greenrobot.event.Subscription) $r5;

        $r2.<de.greenrobot.event.EventBus$PostingThreadState: java.lang.Object event> = $r1;

        $r2.<de.greenrobot.event.EventBus$PostingThreadState: de.greenrobot.event.Subscription subscription> = $r8;

     label04:
        $z0 = $r2.<de.greenrobot.event.EventBus$PostingThreadState: boolean isMainThread>;

        specialinvoke $r0.<de.greenrobot.event.EventBus: void postToSubscription(de.greenrobot.event.Subscription,java.lang.Object,boolean)>($r8, $r1, $z0);

        $z0 = $r2.<de.greenrobot.event.EventBus$PostingThreadState: boolean canceled>;

     label05:
        varReplacer817 = null;

        $r2.<de.greenrobot.event.EventBus$PostingThreadState: java.lang.Object event> = varReplacer817;

        varReplacer821 = null;

        $r2.<de.greenrobot.event.EventBus$PostingThreadState: de.greenrobot.event.Subscription subscription> = varReplacer821;

        varReplacer816 = 0;

        $r2.<de.greenrobot.event.EventBus$PostingThreadState: boolean canceled> = varReplacer816;

        if $z0 == 0 goto label03;

     label06:
        varReplacer822 = 1;

        return varReplacer822;

     label07:
        $r9 := @caughtexception;

     label08:
        exitmonitor $r0;

     label09:
        throw $r9;

     label10:
        $r10 := @caughtexception;

        varReplacer820 = null;

        $r2.<de.greenrobot.event.EventBus$PostingThreadState: java.lang.Object event> = varReplacer820;

        varReplacer815 = null;

        $r2.<de.greenrobot.event.EventBus$PostingThreadState: de.greenrobot.event.Subscription subscription> = varReplacer815;

        varReplacer818 = 0;

        $r2.<de.greenrobot.event.EventBus$PostingThreadState: boolean canceled> = varReplacer818;

        throw $r10;

     label11:
        varReplacer819 = 0;

        return varReplacer819;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label07;
    }

    private void postToSubscription(de.greenrobot.event.Subscription, java.lang.Object, boolean)
    {
        de.greenrobot.event.EventBus $r0;
        de.greenrobot.event.Subscription $r1;
        java.lang.Object $r2;
        boolean $z0;
        int[] $r3;
        de.greenrobot.event.SubscriberMethod $r4;
        de.greenrobot.event.ThreadMode $r5;
        int $i0;
        java.lang.IllegalStateException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r8, varReplacer787;
        de.greenrobot.event.HandlerPoster $r9;
        de.greenrobot.event.BackgroundPoster $r10;
        de.greenrobot.event.AsyncPoster $r11;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: de.greenrobot.event.Subscription;

        $r2 := @parameter1: java.lang.Object;

        $z0 := @parameter2: boolean;

        $r3 = <de.greenrobot.event.EventBus$2: int[] $SwitchMap$de$greenrobot$event$ThreadMode>;

        $r4 = $r1.<de.greenrobot.event.Subscription: de.greenrobot.event.SubscriberMethod subscriberMethod>;

        $r5 = $r4.<de.greenrobot.event.SubscriberMethod: de.greenrobot.event.ThreadMode threadMode>;

        $i0 = virtualinvoke $r5.<de.greenrobot.event.ThreadMode: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label5;
            case 4: goto label7;
            default: goto label1;
        };

     label1:
        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer787 = "Unknown thread mode: ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer787);

        $r4 = $r1.<de.greenrobot.event.Subscription: de.greenrobot.event.SubscriberMethod subscriberMethod>;

        $r5 = $r4.<de.greenrobot.event.SubscriberMethod: de.greenrobot.event.ThreadMode threadMode>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label2:
        virtualinvoke $r0.<de.greenrobot.event.EventBus: void invokeSubscriber(de.greenrobot.event.Subscription,java.lang.Object)>($r1, $r2);

        return;

     label3:
        if $z0 == 0 goto label4;

        virtualinvoke $r0.<de.greenrobot.event.EventBus: void invokeSubscriber(de.greenrobot.event.Subscription,java.lang.Object)>($r1, $r2);

        return;

     label4:
        $r9 = $r0.<de.greenrobot.event.EventBus: de.greenrobot.event.HandlerPoster mainThreadPoster>;

        virtualinvoke $r9.<de.greenrobot.event.HandlerPoster: void enqueue(de.greenrobot.event.Subscription,java.lang.Object)>($r1, $r2);

        return;

     label5:
        if $z0 == 0 goto label6;

        $r10 = $r0.<de.greenrobot.event.EventBus: de.greenrobot.event.BackgroundPoster backgroundPoster>;

        virtualinvoke $r10.<de.greenrobot.event.BackgroundPoster: void enqueue(de.greenrobot.event.Subscription,java.lang.Object)>($r1, $r2);

        return;

     label6:
        virtualinvoke $r0.<de.greenrobot.event.EventBus: void invokeSubscriber(de.greenrobot.event.Subscription,java.lang.Object)>($r1, $r2);

        return;

     label7:
        $r11 = $r0.<de.greenrobot.event.EventBus: de.greenrobot.event.AsyncPoster asyncPoster>;

        virtualinvoke $r11.<de.greenrobot.event.AsyncPoster: void enqueue(de.greenrobot.event.Subscription,java.lang.Object)>($r1, $r2);

        return;
    }

    private void register(java.lang.Object, boolean, int)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1, $r6;
        boolean $z0, $z1;
        int $i0, varReplacer781;
        de.greenrobot.event.SubscriberMethodFinder $r2;
        java.lang.Class $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        de.greenrobot.event.SubscriberMethod $r7;
        java.lang.Throwable $r8;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $i0 := @parameter2: int;

        entermonitor $r0;

     label1:
        $r2 = $r0.<de.greenrobot.event.EventBus: de.greenrobot.event.SubscriberMethodFinder subscriberMethodFinder>;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<de.greenrobot.event.SubscriberMethodFinder: java.util.List findSubscriberMethods(java.lang.Class)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (de.greenrobot.event.SubscriberMethod) $r6;

        varReplacer781 = 0;

        specialinvoke $r0.<de.greenrobot.event.EventBus: void subscribe(java.lang.Object,de.greenrobot.event.SubscriberMethod,boolean,int)>($r1, $r7, $z0, varReplacer781);

     label3:
        goto label2;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r0;

        throw $r8;

     label5:
        exitmonitor $r0;

        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private void subscribe(java.lang.Object, de.greenrobot.event.SubscriberMethod, boolean, int)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1, $r6;
        de.greenrobot.event.SubscriberMethod $r2;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, varReplacer783;
        java.lang.Class $r3, $r13;
        de.greenrobot.event.Subscription $r4, $r8;
        java.util.Map $r5, $r9;
        java.util.concurrent.CopyOnWriteArrayList $r7, r16;
        android.os.Looper $r10, $r11;
        java.lang.StringBuilder $r12, r18;
        java.lang.String $r14, varReplacer782, varReplacer784;
        java.lang.Throwable $r15;
        java.util.ArrayList r17;
        de.greenrobot.event.EventBusException r19;
        java.util.List r20;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: de.greenrobot.event.SubscriberMethod;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r3 = $r2.<de.greenrobot.event.SubscriberMethod: java.lang.Class eventType>;

        $r5 = $r0.<de.greenrobot.event.EventBus: java.util.Map subscriptionsByEventType>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r7 = (java.util.concurrent.CopyOnWriteArrayList) $r6;

        $r8 = new de.greenrobot.event.Subscription;

        $r4 = $r8;

        varReplacer783 = 0;

        specialinvoke $r8.<de.greenrobot.event.Subscription: void <init>(java.lang.Object,de.greenrobot.event.SubscriberMethod,int)>($r1, $r2, varReplacer783);

        if $r7 != null goto label09;

        r16 = new java.util.concurrent.CopyOnWriteArrayList;

        $r7 = r16;

        specialinvoke r16.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        $r5 = $r0.<de.greenrobot.event.EventBus: java.util.Map subscriptionsByEventType>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7);

     label01:
        $i0 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

        $i2 = 0;

     label02:
        if $i2 > $i0 goto label04;

        if $i2 == $i0 goto label03;

        $i1 = $r4.<de.greenrobot.event.Subscription: int priority>;

        $r6 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>($i2);

        $r8 = (de.greenrobot.event.Subscription) $r6;

        $i3 = $r8.<de.greenrobot.event.Subscription: int priority>;

        if $i1 <= $i3 goto label10;

     label03:
        virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>($i2, $r4);

     label04:
        $r5 = $r0.<de.greenrobot.event.EventBus: java.util.Map typesBySubscriber>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r6 = (java.util.List) $r6;

        if $r6 != null goto label05;

        r17 = new java.util.ArrayList;

        $r6 = r17;

        specialinvoke r17.<java.util.ArrayList: void <init>()>();

        $r5 = $r0.<de.greenrobot.event.EventBus: java.util.Map typesBySubscriber>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r6);

     label05:
        r20 = (java.util.List) $r6;

        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>($r3);

        if $z0 == 0 goto label16;

        $r5 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        entermonitor $r5;

     label06:
        $r9 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        $r1 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        exitmonitor $r5;

     label07:
        if $r1 == null goto label16;

        $r10 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r11 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r10 != $r11 goto label14;

        $z0 = 1;

     label08:
        specialinvoke $r0.<de.greenrobot.event.EventBus: void postToSubscription(de.greenrobot.event.Subscription,java.lang.Object,boolean)>($r4, $r1, $z0);

        return;

     label09:
        $z1 = virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: boolean contains(java.lang.Object)>($r4);

        if $z1 == 0 goto label15;

        r19 = new de.greenrobot.event.EventBusException;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        varReplacer784 = "Subscriber ";

        $r12 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer784);

        $r13 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        varReplacer782 = " already registered to event ";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer782);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<de.greenrobot.event.EventBusException: void <init>(java.lang.String)>($r14);

        throw r19;

     label10:
        $i2 = $i2 + 1;

        goto label02;

     label11:
        $r15 := @caughtexception;

     label12:
        exitmonitor $r5;

     label13:
        throw $r15;

     label14:
        $z0 = 0;

        goto label08;

     label15:
        goto label01;

     label16:
        return;

        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    private void unubscribeByEventType(java.lang.Object, java.lang.Class)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1, $r3;
        java.lang.Class $r2;
        java.util.Map $r4;
        java.util.List $r5;
        int $i0, $i1, varReplacer3928;
        de.greenrobot.event.Subscription $r6;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Class;

        $r4 = $r0.<de.greenrobot.event.EventBus: java.util.Map subscriptionsByEventType>;

        $r3 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.util.List) $r3;

        if $r5 == null goto label3;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label5;

        $r3 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = (de.greenrobot.event.Subscription) $r3;

        $r3 = $r6.<de.greenrobot.event.Subscription: java.lang.Object subscriber>;

        if $r3 != $r1 goto label4;

        varReplacer3928 = 0;

        $r6.<de.greenrobot.event.Subscription: boolean active> = varReplacer3928;

        interfaceinvoke $r5.<java.util.List: java.lang.Object remove(int)>($i1);

        $i1 = $i1 + -1;

        $i0 = $i0 + -1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;

     label4:
        goto label2;

     label5:
        return;
    }

    public void cancelEventDelivery(java.lang.Object)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1, $r3;
        de.greenrobot.event.ThreadMode $r2, $r9;
        java.lang.ThreadLocal $r4;
        de.greenrobot.event.EventBus$PostingThreadState $r5;
        boolean $z0;
        de.greenrobot.event.EventBusException $r6;
        de.greenrobot.event.Subscription $r7;
        de.greenrobot.event.SubscriberMethod $r8;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $r4 = $r0.<de.greenrobot.event.EventBus: java.lang.ThreadLocal currentPostingThreadState>;

        $r3 = virtualinvoke $r4.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r5 = (de.greenrobot.event.EventBus$PostingThreadState) $r3;

        $z0 = $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean isPosting>;

        if $z0 != 0 goto label1;

        $r6 = new de.greenrobot.event.EventBusException;

        specialinvoke $r6.<de.greenrobot.event.EventBusException: void <init>(java.lang.String)>("This method may only be called from inside event handling methods on the posting thread");

        throw $r6;

     label1:
        if $r1 != null goto label2;

        $r6 = new de.greenrobot.event.EventBusException;

        specialinvoke $r6.<de.greenrobot.event.EventBusException: void <init>(java.lang.String)>("Event may not be null");

        throw $r6;

     label2:
        $r3 = $r5.<de.greenrobot.event.EventBus$PostingThreadState: java.lang.Object event>;

        if $r3 == $r1 goto label3;

        $r6 = new de.greenrobot.event.EventBusException;

        specialinvoke $r6.<de.greenrobot.event.EventBusException: void <init>(java.lang.String)>("Only the currently handled event may be aborted");

        throw $r6;

     label3:
        $r7 = $r5.<de.greenrobot.event.EventBus$PostingThreadState: de.greenrobot.event.Subscription subscription>;

        $r8 = $r7.<de.greenrobot.event.Subscription: de.greenrobot.event.SubscriberMethod subscriberMethod>;

        $r9 = $r8.<de.greenrobot.event.SubscriberMethod: de.greenrobot.event.ThreadMode threadMode>;

        $r2 = <de.greenrobot.event.ThreadMode: de.greenrobot.event.ThreadMode PostThread>;

        if $r9 == $r2 goto label4;

        $r6 = new de.greenrobot.event.EventBusException;

        specialinvoke $r6.<de.greenrobot.event.EventBusException: void <init>(java.lang.String)>(" event handlers may only abort the incoming event");

        throw $r6;

     label4:
        $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean canceled> = 1;

        return;
    }

    java.util.concurrent.ExecutorService getExecutorService()
    {
        de.greenrobot.event.EventBus $r0;
        java.util.concurrent.ExecutorService r1;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        r1 = $r0.<de.greenrobot.event.EventBus: java.util.concurrent.ExecutorService executorService>;

        return r1;
    }

    public java.lang.Object getStickyEvent(java.lang.Class)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Class $r1;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Class;

        $r2 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r4);

        exitmonitor $r2;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean hasSubscriberForEvent(java.lang.Class)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Class $r1;
        java.util.Map $r2;
        java.util.List $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        java.util.concurrent.CopyOnWriteArrayList $r5;
        boolean $z0;
        java.lang.Throwable $r6;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Class;

        $r3 = specialinvoke $r0.<de.greenrobot.event.EventBus: java.util.List lookupAllEventTypes(java.lang.Class)>($r1);

        if $r3 == null goto label8;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label8;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r1 = (java.lang.Class) $r4;

        entermonitor $r0;

     label2:
        $r2 = $r0.<de.greenrobot.event.EventBus: java.util.Map subscriptionsByEventType>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.concurrent.CopyOnWriteArrayList) $r4;

        exitmonitor $r0;

     label3:
        if $r5 == null goto label7;

        $z0 = virtualinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        return 1;

     label4:
        $r6 := @caughtexception;

     label5:
        exitmonitor $r0;

     label6:
        throw $r6;

     label7:
        $i1 = $i1 + 1;

        goto label1;

     label8:
        return 0;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void invokeSubscriber(de.greenrobot.event.PendingPost)
    {
        de.greenrobot.event.EventBus $r0;
        de.greenrobot.event.PendingPost $r1;
        java.lang.Object $r2;
        de.greenrobot.event.Subscription $r3;
        boolean $z0;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: de.greenrobot.event.PendingPost;

        $r2 = $r1.<de.greenrobot.event.PendingPost: java.lang.Object event>;

        $r3 = $r1.<de.greenrobot.event.PendingPost: de.greenrobot.event.Subscription subscription>;

        staticinvoke <de.greenrobot.event.PendingPost: void releasePendingPost(de.greenrobot.event.PendingPost)>($r1);

        $z0 = $r3.<de.greenrobot.event.Subscription: boolean active>;

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<de.greenrobot.event.EventBus: void invokeSubscriber(de.greenrobot.event.Subscription,java.lang.Object)>($r3, $r2);

     label1:
        return;
    }

    void invokeSubscriber(de.greenrobot.event.Subscription, java.lang.Object)
    {
        de.greenrobot.event.EventBus $r0;
        de.greenrobot.event.Subscription $r1;
        java.lang.Object $r2, $r6;
        java.lang.Throwable $r3, $r8;
        de.greenrobot.event.SubscriberMethod $r4;
        java.lang.reflect.Method $r5;
        java.lang.Object[] $r7;
        java.lang.IllegalStateException r9;
        java.lang.reflect.InvocationTargetException r10;
        java.lang.String varReplacer796;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: de.greenrobot.event.Subscription;

        $r2 := @parameter1: java.lang.Object;

        $r4 = $r1.<de.greenrobot.event.Subscription: de.greenrobot.event.SubscriberMethod subscriberMethod>;

        $r5 = $r4.<de.greenrobot.event.SubscriberMethod: java.lang.reflect.Method method>;

        $r6 = $r1.<de.greenrobot.event.Subscription: java.lang.Object subscriber>;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = $r2;

     label1:
        virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r6, $r7);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        r10 = (java.lang.reflect.InvocationTargetException) $r3;

        $r3 = virtualinvoke r10.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        specialinvoke $r0.<de.greenrobot.event.EventBus: void handleSubscriberException(de.greenrobot.event.Subscription,java.lang.Object,java.lang.Throwable)>($r1, $r2, $r3);

        return;

     label4:
        $r8 := @caughtexception;

        r9 = new java.lang.IllegalStateException;

        varReplacer796 = "Unexpected exception";

        specialinvoke r9.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer796, $r8);

        throw r9;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
    }

    public boolean isRegistered(java.lang.Object)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1;
        boolean $z0;
        java.util.Map $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        entermonitor $r0;

     label1:
        $r2 = $r0.<de.greenrobot.event.EventBus: java.util.Map typesBySubscriber>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

     label2:
        exitmonitor $r0;

        return $z0;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void post(java.lang.Object)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1, $r4;
        java.util.List $r2;
        java.lang.ThreadLocal $r3;
        de.greenrobot.event.EventBus$PostingThreadState $r5;
        boolean $z0;
        android.os.Looper $r6, $r7;
        de.greenrobot.event.EventBusException $r8;
        java.lang.Throwable $r9;
        int varReplacer806, varReplacer807, varReplacer808, varReplacer809, varReplacer811, varReplacer812;
        java.lang.String varReplacer810;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $r3 = $r0.<de.greenrobot.event.EventBus: java.lang.ThreadLocal currentPostingThreadState>;

        $r4 = virtualinvoke $r3.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r5 = (de.greenrobot.event.EventBus$PostingThreadState) $r4;

        $r2 = $r5.<de.greenrobot.event.EventBus$PostingThreadState: java.util.List eventQueue>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $z0 = $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean isPosting>;

        if $z0 != 0 goto label9;

        $r6 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r7 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r6 != $r7 goto label2;

        $z0 = 1;

     label1:
        $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean isMainThread> = $z0;

        varReplacer809 = 1;

        $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean isPosting> = varReplacer809;

        $z0 = $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean canceled>;

        if $z0 == 0 goto label3;

        $r8 = new de.greenrobot.event.EventBusException;

        varReplacer810 = "Internal error. Abort state was not reset";

        specialinvoke $r8.<de.greenrobot.event.EventBusException: void <init>(java.lang.String)>(varReplacer810);

        throw $r8;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

     label4:
        if $z0 != 0 goto label8;

     label5:
        varReplacer807 = 0;

        $r1 = interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>(varReplacer807);

        specialinvoke $r0.<de.greenrobot.event.EventBus: void postSingleEvent(java.lang.Object,de.greenrobot.event.EventBus$PostingThreadState)>($r1, $r5);

     label6:
        goto label3;

     label7:
        $r9 := @caughtexception;

        varReplacer806 = 0;

        $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean isPosting> = varReplacer806;

        varReplacer811 = 0;

        $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean isMainThread> = varReplacer811;

        throw $r9;

     label8:
        varReplacer808 = 0;

        $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean isPosting> = varReplacer808;

        varReplacer812 = 0;

        $r5.<de.greenrobot.event.EventBus$PostingThreadState: boolean isMainThread> = varReplacer812;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void postSticky(java.lang.Object)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1;
        java.util.Map $r2, $r4;
        java.lang.Class $r3;
        java.lang.Throwable $r5;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

        exitmonitor $r2;

     label2:
        virtualinvoke $r0.<de.greenrobot.event.EventBus: void post(java.lang.Object)>($r1);

        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor $r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void register(java.lang.Object)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1;
        int varReplacer1743, varReplacer1744;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        varReplacer1743 = 0;

        varReplacer1744 = 0;

        specialinvoke $r0.<de.greenrobot.event.EventBus: void register(java.lang.Object,boolean,int)>($r1, varReplacer1743, varReplacer1743);

        return;
    }

    public void register(java.lang.Object, int)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1;
        int $i0;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        specialinvoke $r0.<de.greenrobot.event.EventBus: void register(java.lang.Object,boolean,int)>($r1, 0, $i0);

        return;
    }

    public void registerSticky(java.lang.Object)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1;
        int varReplacer779, varReplacer780;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        varReplacer779 = 1;

        varReplacer780 = 0;

        specialinvoke $r0.<de.greenrobot.event.EventBus: void register(java.lang.Object,boolean,int)>($r1, varReplacer779, varReplacer780);

        return;
    }

    public void registerSticky(java.lang.Object, int)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1;
        int $i0;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        specialinvoke $r0.<de.greenrobot.event.EventBus: void register(java.lang.Object,boolean,int)>($r1, 1, $i0);

        return;
    }

    public void removeAllStickyEvents()
    {
        de.greenrobot.event.EventBus $r0;
        java.util.Map $r1, $r2;
        java.lang.Throwable $r3;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        exitmonitor $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object removeStickyEvent(java.lang.Class)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Class $r1;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Class;

        $r2 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r4);

        exitmonitor $r2;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean removeStickyEvent(java.lang.Object)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1, $r5;
        java.util.Map $r2, $r4;
        java.lang.Class $r3;
        boolean $z0;
        java.lang.Throwable $r6;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        entermonitor $r2;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        $r4 = $r0.<de.greenrobot.event.EventBus: java.util.Map stickyEvents>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        exitmonitor $r2;

     label2:
        return 1;

     label3:
        exitmonitor $r2;

     label4:
        return 0;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void unregister(java.lang.Object)
    {
        de.greenrobot.event.EventBus $r0;
        java.lang.Object $r1, $r3;
        java.util.Map $r2;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Class $r6;
        java.lang.Throwable $r7;
        java.lang.String $r8, $r10, varReplacer3927;
        java.lang.StringBuilder $r9;

        nop;

        $r0 := @this: de.greenrobot.event.EventBus;

        $r1 := @parameter0: java.lang.Object;

        entermonitor $r0;

     label1:
        $r2 = $r0.<de.greenrobot.event.EventBus: java.util.Map typesBySubscriber>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.List) $r3;

        if $r4 == null goto label7;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.Class) $r3;

        specialinvoke $r0.<de.greenrobot.event.EventBus: void unubscribeByEventType(java.lang.Object,java.lang.Class)>($r1, $r6);

     label3:
        goto label2;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r0;

        throw $r7;

     label5:
        $r2 = $r0.<de.greenrobot.event.EventBus: java.util.Map typesBySubscriber>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r1);

     label6:
        exitmonitor $r0;

        return;

     label7:
        $r8 = <de.greenrobot.event.EventBus: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        varReplacer3927 = "Subscriber to unregister was not registered before: ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3927);

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, $r10);

     label8:
        goto label6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
        catch java.lang.Throwable from label7 to label8 with label4;
    }
}
