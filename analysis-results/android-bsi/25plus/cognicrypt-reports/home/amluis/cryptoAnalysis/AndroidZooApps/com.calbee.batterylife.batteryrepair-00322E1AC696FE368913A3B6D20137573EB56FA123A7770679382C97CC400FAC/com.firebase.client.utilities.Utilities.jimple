public class com.firebase.client.utilities.Utilities extends java.lang.Object
{

    public void <init>()
    {
        com.firebase.client.utilities.Utilities $r0;

        $r0 := @this: com.firebase.client.utilities.Utilities;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object castOrNull(java.lang.Object, java.lang.Class)
    {
        java.lang.Class $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        null_type varReplacer2029;

        nop;

        $r1 := @parameter0: java.lang.Object;

        $r0 := @parameter1: java.lang.Class;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r2);

        if $z0 == 0 goto label1;

        return $r1;

     label1:
        varReplacer2029 = null;

        return varReplacer2029;
    }

    public static int compareInts(int, int)
    {
        int $i0, $i1, varReplacer6054, varReplacer6055, varReplacer6056;

        nop;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 >= $i1 goto label1;

        varReplacer6054 = -1;

        return varReplacer6054;

     label1:
        if $i0 != $i1 goto label2;

        varReplacer6056 = 0;

        return varReplacer6056;

     label2:
        varReplacer6055 = 1;

        return varReplacer6055;
    }

    public static int compareLongs(long, long)
    {
        long $l0, $l1;
        byte $b2;
        int varReplacer6147, varReplacer6148, varReplacer6149;

        nop;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label1;

        varReplacer6149 = -1;

        return varReplacer6149;

     label1:
        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        varReplacer6148 = 0;

        return varReplacer6148;

     label2:
        varReplacer6147 = 1;

        return varReplacer6147;
    }

    public static java.lang.String doubleToHashString(double)
    {
        double $d0;
        java.lang.StringBuilder $r0;
        byte[] $r1;
        java.nio.ByteBuffer $r2;
        int $i0, varReplacer7152;
        java.lang.Object[] $r3;
        byte $b1;
        java.lang.Byte $r4;
        java.lang.String $r5, varReplacer7151;

        nop;

        $d0 := @parameter0: double;

        $r0 = new java.lang.StringBuilder;

        varReplacer7152 = 16;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(varReplacer7152);

        $r1 = newarray (byte)[8];

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r1);

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d0);

        $i0 = 0;

     label1:
        if $i0 >= 8 goto label2;

        $r3 = newarray (java.lang.Object)[1];

        $b1 = $r1[$i0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3[0] = $r4;

        varReplacer7151 = "%02x";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer7151, $r3);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.Object getOrNull(java.lang.Object, java.lang.String, java.lang.Class)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        java.util.Map $r3;
        null_type varReplacer2028;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class;

        if $r0 != null goto label2;

     label1:
        varReplacer2028 = null;

        return varReplacer2028;

     label2:
        $r0 = staticinvoke <com.firebase.client.utilities.Utilities: java.lang.Object castOrNull(java.lang.Object,java.lang.Class)>($r0, class "Ljava/util/Map;");

        $r3 = (java.util.Map) $r0;

        $r0 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        if $r0 == null goto label1;

        $r0 = staticinvoke <com.firebase.client.utilities.Utilities: java.lang.Object castOrNull(java.lang.Object,java.lang.Class)>($r0, $r2);

        return $r0;
    }

    public static void hardAssert(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        staticinvoke <com.firebase.client.utilities.Utilities: void hardAssert(boolean,java.lang.String)>($z0, "");

        return;
    }

    public static void hardAssert(boolean, java.lang.String)
    {
        boolean $z0;
        java.lang.String $r0, varReplacer6159;
        java.lang.AssertionError $r1;
        java.lang.StringBuilder $r2;

        nop;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.String;

        if $z0 != 0 goto label1;

        $r1 = new java.lang.AssertionError;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer6159 = "hardAssert failed: ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6159);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.Object)>($r0);

        throw $r1;

     label1:
        return;
    }

    public static java.lang.Long longFromObject(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        java.lang.Integer $r1;
        int $i0;
        long $l1;
        java.lang.Long $r2;
        null_type varReplacer7338;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.Integer) $r0;

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        $l1 = (long) $i0;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        return $r2;

     label1:
        $z0 = $r0 instanceof java.lang.Long;

        if $z0 == 0 goto label2;

        $r2 = (java.lang.Long) $r0;

        return $r2;

     label2:
        varReplacer7338 = null;

        return varReplacer7338;
    }

    public static com.firebase.client.utilities.ParsedUrl parseUrl(java.lang.String)
    {
        java.lang.String $r0, $r4, varReplacer1977, varReplacer1978, varReplacer1979, varReplacer1980, varReplacer1981, varReplacer1982, varReplacer1984, varReplacer1985, varReplacer1986, varReplacer1987, varReplacer1988, varReplacer1989, varReplacer1991, varReplacer1992;
        int $i0, $i1, $i2, varReplacer1983, varReplacer1990;
        java.net.URISyntaxException $r1;
        java.lang.Throwable $r2, $r12;
        com.firebase.client.FirebaseException $r3;
        java.lang.String[] $r5;
        java.lang.StringBuilder $r6, $r7;
        boolean $z0;
        java.net.URI $r8;
        com.firebase.client.core.Path $r9;
        com.firebase.client.core.RepoInfo $r10;
        com.firebase.client.utilities.ParsedUrl $r11;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label01:
        varReplacer1985 = "//";

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(varReplacer1985);

     label02:
        if $i1 != -1 goto label06;

        $r1 = new java.net.URISyntaxException;

     label03:
        varReplacer1982 = "Invalid scheme specified";

        specialinvoke $r1.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>($r0, varReplacer1982);

     label04:
        throw $r1;

     label05:
        $r2 := @caughtexception;

        $r3 = new com.firebase.client.FirebaseException;

        varReplacer1988 = "Invalid Firebase url specified";

        specialinvoke $r3.<com.firebase.client.FirebaseException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer1988, $r2);

        throw $r3;

     label06:
        $i2 = $i1 + 2;

     label07:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i2);

        varReplacer1992 = "/";

        $i2 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>(varReplacer1992);

     label08:
        if $i2 == -1 goto label21;

        $i1 = $i1 + 2;

        $i1 = $i1 + $i2;

     label09:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        varReplacer1987 = "/";

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1987);

     label10:
        $r6 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

     label12:
        $i2 = lengthof $r5;

        if $i0 >= $i2 goto label19;

        $r4 = $r5[$i0];

     label13:
        varReplacer1978 = "";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1978);

     label14:
        if $z0 != 0 goto label18;

     label15:
        varReplacer1977 = "/";

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1977);

     label16:
        $r4 = $r5[$i0];

     label17:
        varReplacer1986 = "UTF-8";

        $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, varReplacer1986);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label18:
        $i0 = $i0 + 1;

        goto label12;

     label19:
        $r7 = new java.lang.StringBuilder;

     label20:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer1983 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1983, $i1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        $r8 = new java.net.URI;

     label22:
        specialinvoke $r8.<java.net.URI: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r8.<java.net.URI: java.lang.String getPath()>();

        varReplacer1980 = "+";

        varReplacer1981 = " ";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1980, varReplacer1981);

        staticinvoke <com.firebase.client.utilities.Validation: void validateRootPathString(java.lang.String)>($r0);

     label23:
        $r9 = new com.firebase.client.core.Path;

     label24:
        specialinvoke $r9.<com.firebase.client.core.Path: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r8.<java.net.URI: java.lang.String getScheme()>();

     label25:
        $r10 = new com.firebase.client.core.RepoInfo;

     label26:
        specialinvoke $r10.<com.firebase.client.core.RepoInfo: void <init>()>();

        $r4 = virtualinvoke $r8.<java.net.URI: java.lang.String getHost()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toLowerCase()>();

     label27:
        $r10.<com.firebase.client.core.RepoInfo: java.lang.String host> = $r4;

     label28:
        $i0 = virtualinvoke $r8.<java.net.URI: int getPort()>();

     label29:
        if $i0 == -1 goto label43;

     label30:
        varReplacer1984 = "https";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1984);

     label31:
        $r10.<com.firebase.client.core.RepoInfo: boolean secure> = $z0;

        $r6 = new java.lang.StringBuilder;

     label32:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

     label33:
        $r0 = $r10.<com.firebase.client.core.RepoInfo: java.lang.String host>;

     label34:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1989 = ":";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1989);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label35:
        $r10.<com.firebase.client.core.RepoInfo: java.lang.String host> = $r0;

     label36:
        $r0 = $r10.<com.firebase.client.core.RepoInfo: java.lang.String host>;

     label37:
        varReplacer1979 = "\\.";

        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1979);

     label38:
        $r0 = $r5[0];

     label39:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

     label40:
        $r10.<com.firebase.client.core.RepoInfo: java.lang.String namespace> = $r0;

        $r0 = $r10.<com.firebase.client.core.RepoInfo: java.lang.String host>;

        $r10.<com.firebase.client.core.RepoInfo: java.lang.String internalHost> = $r0;

        $r11 = new com.firebase.client.utilities.ParsedUrl;

     label41:
        specialinvoke $r11.<com.firebase.client.utilities.ParsedUrl: void <init>()>();

     label42:
        $r11.<com.firebase.client.utilities.ParsedUrl: com.firebase.client.core.Path path> = $r9;

        $r11.<com.firebase.client.utilities.ParsedUrl: com.firebase.client.core.RepoInfo repoInfo> = $r10;

        return $r11;

     label43:
        varReplacer1990 = 1;

        $r10.<com.firebase.client.core.RepoInfo: boolean secure> = varReplacer1990;

        goto label36;

     label44:
        $r12 := @caughtexception;

        $r3 = new com.firebase.client.FirebaseException;

        varReplacer1991 = "Failed to URLEncode the path";

        specialinvoke $r3.<com.firebase.client.FirebaseException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer1991, $r12);

        throw $r3;

        catch java.net.URISyntaxException from label01 to label02 with label05;
        catch java.net.URISyntaxException from label03 to label05 with label05;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label44;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label44;
        catch java.net.URISyntaxException from label07 to label08 with label05;
        catch java.net.URISyntaxException from label09 to label10 with label05;
        catch java.net.URISyntaxException from label11 to label12 with label05;
        catch java.net.URISyntaxException from label13 to label14 with label05;
        catch java.net.URISyntaxException from label15 to label16 with label05;
        catch java.net.URISyntaxException from label17 to label18 with label05;
        catch java.net.URISyntaxException from label20 to label21 with label05;
        catch java.net.URISyntaxException from label22 to label23 with label05;
        catch java.net.URISyntaxException from label24 to label25 with label05;
        catch java.net.URISyntaxException from label26 to label27 with label05;
        catch java.net.URISyntaxException from label28 to label29 with label05;
        catch java.net.URISyntaxException from label30 to label31 with label05;
        catch java.net.URISyntaxException from label32 to label33 with label05;
        catch java.net.URISyntaxException from label34 to label35 with label05;
        catch java.net.URISyntaxException from label37 to label38 with label05;
        catch java.net.URISyntaxException from label39 to label40 with label05;
        catch java.net.URISyntaxException from label41 to label42 with label05;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label44;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label44;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label44;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label44;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label44;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label44;
        catch java.io.UnsupportedEncodingException from label20 to label21 with label44;
        catch java.io.UnsupportedEncodingException from label22 to label23 with label44;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label44;
        catch java.io.UnsupportedEncodingException from label26 to label27 with label44;
        catch java.io.UnsupportedEncodingException from label28 to label29 with label44;
        catch java.io.UnsupportedEncodingException from label30 to label31 with label44;
        catch java.io.UnsupportedEncodingException from label32 to label33 with label44;
        catch java.io.UnsupportedEncodingException from label34 to label35 with label44;
        catch java.io.UnsupportedEncodingException from label37 to label38 with label44;
        catch java.io.UnsupportedEncodingException from label39 to label40 with label44;
        catch java.io.UnsupportedEncodingException from label41 to label42 with label44;
    }

    public static java.lang.String sha1HexDigest(java.lang.String)
    {
        java.lang.String $r0, varReplacer7109, varReplacer7110, varReplacer7111, varReplacer7112;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Throwable $r3, $r5;
        java.lang.RuntimeException $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer7109 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7109);

        varReplacer7110 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7110);

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.firebase.client.utilities.Base64: java.lang.String encodeBytes(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        varReplacer7112 = "Missing SHA-1 MessageDigest provider.";

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer7112, $r3);

        throw $r4;

     label4:
        $r5 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        varReplacer7111 = "UTF-8 encoding is required for Firebase to run!";

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer7111);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static java.lang.String[] splitIntoFrames(java.lang.String, int)
    {
        java.lang.String $r0, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String[] $r1;
        java.util.ArrayList $r2;
        java.lang.Object[] $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 = 0;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 > 16384 goto label1;

        $r1 = newarray (java.lang.String)[1];

        $r1[0] = $r0;

        return $r1;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label3;

        $i2 = $i1 + 16384;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 16384;

        goto label2;

     label3:
        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        $r1 = newarray (java.lang.String)[$i0];

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r1 = (java.lang.String[]) $r4;

        return $r1;
    }

    public static java.lang.Integer tryParseInt(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        int $i0, $i1, varReplacer1680;
        char $c2;
        long $l3, $l4;
        byte $b5;
        java.lang.Integer $r1;
        null_type varReplacer1681;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = 0;

        $i0 = 1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 > 11 goto label1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label2;

     label1:
        varReplacer1681 = null;

        return varReplacer1681;

     label2:
        varReplacer1680 = 0;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(varReplacer1680);

        if $c2 != 45 goto label7;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 == 1 goto label1;

        $z0 = 1;

     label3:
        $l3 = 0L;

     label4:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label5;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 < 48 goto label1;

        if $c2 > 57 goto label1;

        $l3 = $l3 * 10L;

        $i1 = $c2 + -48;

        $l4 = (long) $i1;

        $l3 = $l3 + $l4;

        $i0 = $i0 + 1;

        goto label4;

     label5:
        if $z0 == 0 goto label6;

        $l4 = neg $l3;

        $b5 = $l4 cmp -2147483648L;

        if $b5 < 0 goto label1;

        $l3 = neg $l3;

        $i0 = (int) $l3;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;

     label6:
        $b5 = $l3 cmp 2147483647L;

        if $b5 > 0 goto label1;

        $i0 = (int) $l3;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r1;

     label7:
        $i0 = 0;

        goto label3;
    }
}
