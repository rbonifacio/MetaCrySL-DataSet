public class com.logentries.misc.Utils extends java.lang.Object
{
    private static final java.util.regex.Pattern HOSTNAME_REGEX;
    private static final java.lang.String TAG;
    private static java.lang.String hostName;
    private static java.lang.String traceID;

    static void <clinit>()
    {
        java.lang.Throwable $r0, $r4;
        java.util.regex.Pattern $r1;
        java.lang.String $r2, varReplacer2113, varReplacer2114, varReplacer2115, varReplacer2116, varReplacer2117, varReplacer2118, varReplacer2119, varReplacer2120;
        boolean $z0;
        java.net.InetAddress $r3;

        nop;

        varReplacer2117 = "[$/\\\"&+,:;=?#|<>_* \\[\\]]";

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(varReplacer2117);

        <com.logentries.misc.Utils: java.util.regex.Pattern HOSTNAME_REGEX> = $r1;

        varReplacer2118 = "";

        <com.logentries.misc.Utils: java.lang.String traceID> = varReplacer2118;

        varReplacer2114 = "";

        <com.logentries.misc.Utils: java.lang.String hostName> = varReplacer2114;

     label01:
        $r2 = staticinvoke <com.logentries.misc.Utils: java.lang.String computeTraceID()>();

     label02:
        <com.logentries.misc.Utils: java.lang.String traceID> = $r2;

     label03:
        varReplacer2113 = "net.hostname";

        $r2 = staticinvoke <com.logentries.misc.Utils: java.lang.String getProp(java.lang.String)>(varReplacer2113);

     label04:
        <com.logentries.misc.Utils: java.lang.String hostName> = $r2;

        $r2 = <com.logentries.misc.Utils: java.lang.String hostName>;

     label05:
        varReplacer2120 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer2120);

     label06:
        if $z0 == 0 goto label11;

     label07:
        $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();

        $r2 = virtualinvoke $r3.<java.net.InetAddress: java.lang.String getHostName()>();

     label08:
        <com.logentries.misc.Utils: java.lang.String hostName> = $r2;

        return;

     label09:
        $r0 := @caughtexception;

        varReplacer2115 = "LogentriesAndroidLogger";

        varReplacer2116 = "Cannot get traceID from device\'s properties!";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2115, varReplacer2116);

        varReplacer2119 = "unknown";

        <com.logentries.misc.Utils: java.lang.String traceID> = varReplacer2119;

        goto label03;

     label10:
        $r4 := @caughtexception;

     label11:
        return;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label09;
        catch java.net.UnknownHostException from label03 to label04 with label10;
        catch java.net.UnknownHostException from label05 to label06 with label10;
        catch java.net.UnknownHostException from label07 to label08 with label10;
    }

    public void <init>()
    {
        com.logentries.misc.Utils $r0;

        $r0 := @this: com.logentries.misc.Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean checkIfHostNameValid(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.logentries.misc.Utils: java.util.regex.Pattern HOSTNAME_REGEX>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean checkValidUUID(java.lang.String)
    {
        java.lang.String $r0, varReplacer2122;
        java.lang.Throwable $r1;
        boolean $z0;
        int varReplacer2121, varReplacer2123;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label4;

     label1:
        varReplacer2122 = "38356f7b-c91f-4713-b6f9-f7720c496ae7";

        staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>(varReplacer2122);

     label2:
        varReplacer2123 = 1;

        return varReplacer2123;

     label3:
        $r1 := @caughtexception;

     label4:
        varReplacer2121 = 0;

        return varReplacer2121;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private static java.lang.String computeTraceID() throws java.security.NoSuchAlgorithmException
    {
        byte $b0;
        java.lang.StringBuilder $r0, $r11;
        int $i1, $i2, varReplacer2137, varReplacer2140, varReplacer2141;
        java.lang.String $r1, $r2, $r3, $r4, $r5, varReplacer2130, varReplacer2131, varReplacer2132, varReplacer2133, varReplacer2134, varReplacer2135, varReplacer2136, varReplacer2138, varReplacer2139, varReplacer2142, varReplacer2143;
        java.security.MessageDigest $r6;
        boolean $z0, $z1;
        double $d0;
        java.lang.Double $r7;
        byte[] $r8;
        java.lang.Object[] $r9;
        short $s3;
        java.lang.Integer $r10;

        nop;

        varReplacer2131 = "ro.build.fingerprint";

        $r1 = staticinvoke <com.logentries.misc.Utils: java.lang.String getProp(java.lang.String)>(varReplacer2131);

        varReplacer2143 = "ro.build.display.id";

        $r2 = staticinvoke <com.logentries.misc.Utils: java.lang.String getProp(java.lang.String)>(varReplacer2143);

        varReplacer2136 = "ro.hardware";

        $r3 = staticinvoke <com.logentries.misc.Utils: java.lang.String getProp(java.lang.String)>(varReplacer2136);

        varReplacer2138 = "ro.product.device";

        $r4 = staticinvoke <com.logentries.misc.Utils: java.lang.String getProp(java.lang.String)>(varReplacer2138);

        varReplacer2139 = "ril.IMEI";

        $r5 = staticinvoke <com.logentries.misc.Utils: java.lang.String getProp(java.lang.String)>(varReplacer2139);

        varReplacer2142 = "MD5";

        $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2142);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        $z0 = $z0 & $z1;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

        $z0 = $z0 & $z1;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        $z0 = $z0 & $z1;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>();

        $z0 = $z0 & $z1;

        if $z0 == 0 goto label5;

        varReplacer2132 = "LogentriesAndroidLogger";

        varReplacer2133 = "Cannot obtain any of device\'s properties - will use default Trace ID source.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2132, varReplacer2133);

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 + 3.141592653589793;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1 = virtualinvoke $r7.<java.lang.Double: java.lang.String toString()>();

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 + 3.141592653589793;

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.Double: java.lang.String toString()>();

        varReplacer2134 = ".";

        varReplacer2135 = "";

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer2134, varReplacer2135);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 < 36 goto label4;

        varReplacer2140 = 2;

        varReplacer2141 = 34;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2140, varReplacer2141);

     label1:
        $r8 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r6.<java.security.MessageDigest: void update(byte[])>($r8);

     label2:
        $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i1 = lengthof $r8;

        $i2 = 0;

     label3:
        if $i2 >= $i1 goto label6;

        $b0 = $r8[$i2];

        $r9 = newarray (java.lang.Object)[1];

        $s3 = $b0 & 255;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($s3);

        $r9[0] = $r10;

        varReplacer2130 = "%02x";

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer2130, $r9);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $i2 = $i2 + 1;

        goto label3;

     label4:
        varReplacer2137 = 2;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(varReplacer2137);

        goto label1;

     label5:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r6.<java.security.MessageDigest: void update(byte[])>($r8);

        goto label2;

     label6:
        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String formatMessage(java.lang.String, boolean, boolean)
    {
        java.lang.String $r0, $r2, varReplacer2168, varReplacer2169, varReplacer2170, varReplacer2171, varReplacer2172, varReplacer2173, varReplacer2174, varReplacer2175;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r3;
        long $l0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        if $z1 == 0 goto label01;

        varReplacer2171 = "{\"event\": {";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2171);

     label01:
        if $z0 == 0 goto label03;

        $r2 = staticinvoke <com.logentries.misc.Utils: java.lang.String getFormattedHostName(boolean)>($z1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        if $z1 == 0 goto label07;

        $r2 = ", ";

     label02:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label03:
        $r2 = staticinvoke <com.logentries.misc.Utils: java.lang.String getFormattedTraceID(boolean)>($z1);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer2172 = " ";

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2172);

        if $z1 == 0 goto label08;

        $r2 = ", ";

     label04:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if $z1 == 0 goto label09;

        varReplacer2175 = "\"Timestamp\": ";

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2175);

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer2168 = ", ";

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2168);

     label05:
        if $z1 == 0 goto label10;

        varReplacer2174 = "\"Message\": \"";

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2174);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer2173 = "\"}}";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2173);

     label06:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label07:
        $r2 = " ";

        goto label02;

     label08:
        $r2 = " ";

        goto label04;

     label09:
        varReplacer2169 = "Timestamp=";

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2169);

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer2170 = " ";

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2170);

        goto label05;

     label10:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        goto label06;
    }

    public static java.lang.String getFormattedHostName(boolean)
    {
        boolean $z0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, varReplacer2179, varReplacer2180, varReplacer2181;

        nop;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        varReplacer2181 = "\"Host\": \"";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2181);

        $r1 = <com.logentries.misc.Utils: java.lang.String hostName>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2180 = "\"";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2180);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        varReplacer2179 = "Host=";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2179);

        $r1 = <com.logentries.misc.Utils: java.lang.String hostName>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String getFormattedTraceID(boolean)
    {
        boolean $z0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, varReplacer2176, varReplacer2177, varReplacer2178;

        nop;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        varReplacer2176 = "\"TraceID\": \"";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2176);

        $r1 = <com.logentries.misc.Utils: java.lang.String traceID>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2178 = "\"";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2178);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        varReplacer2177 = "TraceID=";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2177);

        $r1 = <com.logentries.misc.Utils: java.lang.String traceID>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String getHostName()
    {
        java.lang.String r0;

        r0 = <com.logentries.misc.Utils: java.lang.String hostName>;

        return r0;
    }

    private static java.lang.String getProp(java.lang.String)
    {
        java.lang.String $r0, varReplacer2124, varReplacer2125, varReplacer2126, varReplacer2128;
        java.lang.Exception $r1;
        boolean $z0;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        null_type varReplacer2127;
        int varReplacer2129;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        varReplacer2125 = "";

        return varReplacer2125;

     label2:
        $r2 = class "Landroid/os/Build;";

     label3:
        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "Ljava/lang/String;";

        varReplacer2126 = "getString";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(varReplacer2126, $r3);

        varReplacer2129 = 1;

        virtualinvoke $r4.<java.lang.reflect.Method: void setAccessible(boolean)>(varReplacer2129);

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r0;

        varReplacer2127 = null;

        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(varReplacer2127, $r5);

        $r0 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

     label4:
        return $r0;

     label5:
        $r1 := @caughtexception;

        $r0 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        varReplacer2128 = "LogentriesAndroidLogger";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2128, $r0);

        varReplacer2124 = "";

        return varReplacer2124;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String getTraceID()
    {
        java.lang.String r0;

        r0 = <com.logentries.misc.Utils: java.lang.String traceID>;

        return r0;
    }

    public static java.lang.String[] splitStringToChunks(java.lang.String, int)
    {
        java.lang.String $r0, $r4;
        int $i0, $i1, $i2, $i4, $i5;
        java.util.ArrayList $r1;
        byte $b3;
        java.lang.IllegalArgumentException $r2;
        java.lang.String[] $r3;
        java.lang.Object[] $r5;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $b3 = 1;

        goto label1;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 > 65536 goto label2;

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = $r0;

        return $r3;

     label2:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i1 = $i2 / 65536;

        $i2 = $i2 % 65536;

        if $i2 <= 0 goto label6;

     label3:
        $i1 = $i1 + $b3;

        $i2 = 0;

        $i4 = 0;

     label4:
        if $i4 >= $i1 goto label8;

        $i5 = $i1 + -1;

        if $i4 >= $i5 goto label7;

        $i5 = $i2 + 65536;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i5);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label5:
        $i2 = $i2 + 65536;

        $i4 = $i4 + 1;

        goto label4;

     label6:
        $b3 = 0;

        goto label3;

     label7:
        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        goto label5;

     label8:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r3 = newarray (java.lang.String)[$i0];

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r3 = (java.lang.String[]) $r5;

        return $r3;
    }
}
