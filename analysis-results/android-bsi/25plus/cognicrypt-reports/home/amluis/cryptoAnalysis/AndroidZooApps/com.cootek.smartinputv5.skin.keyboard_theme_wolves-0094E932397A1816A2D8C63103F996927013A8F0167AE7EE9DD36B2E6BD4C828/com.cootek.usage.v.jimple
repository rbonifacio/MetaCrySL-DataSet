final class com.cootek.usage.v extends java.lang.Object
{
    private static final long a;
    private static final java.lang.String b;
    private static final java.lang.String c;
    private static final java.lang.String d;
    private static final int k;
    private static final double l;
    private static final int m;
    private static final int n;
    private static final int o;
    private static final int p;
    private com.cootek.usage.AbsUsageAssist e;
    private android.os.HandlerThread f;
    private android.os.Handler g;
    private java.util.Random h;
    private com.cootek.usage.g i;
    private java.lang.String j;

    void <init>(com.cootek.usage.AbsUsageAssist)
    {
        com.cootek.usage.v $r0;
        com.cootek.usage.AbsUsageAssist $r1;
        android.os.HandlerThread $r2;
        com.cootek.usage.x $r3;
        android.os.Looper $r4;
        java.util.Random $r5;
        com.cootek.usage.g $r6;
        android.content.Context $r7;
        java.lang.Object $r8;
        android.app.AlarmManager $r9;
        android.content.Intent $r10;
        java.lang.String $r11, varReplacer434, varReplacer438, varReplacer439;
        android.app.PendingIntent $r12;
        long $l0, varReplacer436, varReplacer437;
        int varReplacer432, varReplacer433, varReplacer435;

        nop;

        $r0 := @this: com.cootek.usage.v;

        $r1 := @parameter0: com.cootek.usage.AbsUsageAssist;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e> = $r1;

        $r2 = new android.os.HandlerThread;

        varReplacer434 = "usage";

        specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>(varReplacer434);

        $r0.<com.cootek.usage.v: android.os.HandlerThread f> = $r2;

        $r2 = $r0.<com.cootek.usage.v: android.os.HandlerThread f>;

        virtualinvoke $r2.<android.os.HandlerThread: void start()>();

        $r3 = new com.cootek.usage.x;

        $r2 = $r0.<com.cootek.usage.v: android.os.HandlerThread f>;

        $r4 = virtualinvoke $r2.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r3.<com.cootek.usage.x: void <init>(com.cootek.usage.v,android.os.Looper)>($r0, $r4);

        $r0.<com.cootek.usage.v: android.os.Handler g> = $r3;

        $r5 = new java.util.Random;

        specialinvoke $r5.<java.util.Random: void <init>()>();

        $r0.<com.cootek.usage.v: java.util.Random h> = $r5;

        $r6 = new com.cootek.usage.g;

        $r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        specialinvoke $r6.<com.cootek.usage.g: void <init>(com.cootek.usage.AbsUsageAssist)>($r1);

        $r0.<com.cootek.usage.v: com.cootek.usage.g i> = $r6;

        $r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r7 = virtualinvoke $r1.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        varReplacer438 = "alarm";

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer438);

        $r9 = (android.app.AlarmManager) $r8;

        $r10 = new android.content.Intent;

        varReplacer439 = "com.cootek.usage.alarm_operation";

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>(varReplacer439);

        $r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r7 = virtualinvoke $r1.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $r11 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r10.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r11);

        $r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r7 = virtualinvoke $r1.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        varReplacer432 = 0;

        varReplacer433 = 134217728;

        $r12 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r7, varReplacer432, $r10, varReplacer433);

        $r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $l0 = 3600000L;

        varReplacer435 = 1;

        varReplacer436 = 0L;

        varReplacer437 = 3600000L;

        virtualinvoke $r9.<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>(varReplacer435, varReplacer436, varReplacer437, $r12);

        return;
    }

    private static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bak");

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    private void a(com.cootek.usage.UsageData)
    {
        com.cootek.usage.v $r0;
        com.cootek.usage.UsageData $r1;
        java.io.FileOutputStream $r2, r35;
        com.cootek.usage.s $r3;
        java.lang.String $r4, $r6;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r5, r32;
        java.util.Random $r7;
        java.io.File $r8, $r10, r33;
        com.cootek.usage.AbsUsageAssist $r9;
        com.cootek.usage.u $r11;
        java.io.File[] $r12;
        long $l2, $l4;
        byte $b3;
        double $d0, $d1;
        java.util.HashMap $r13, r34;
        java.lang.Long $r14;
        java.io.ObjectOutputStream $r15, $r17, r37;
        javax.crypto.Cipher $r16;
        javax.crypto.CipherOutputStream $r18, r36;
        java.lang.Throwable $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        java.io.IOException r38;
        java.io.FileNotFoundException r39;
        java.security.InvalidKeyException r40;
        java.security.NoSuchAlgorithmException r41;
        javax.crypto.NoSuchPaddingException r42;

        $r0 := @this: com.cootek.usage.v;

        $r1 := @parameter0: com.cootek.usage.UsageData;

        $r3 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $r4 = $r1.<com.cootek.usage.UsageData: java.lang.String path>;

        $i0 = virtualinvoke $r3.<com.cootek.usage.s: int a(java.lang.String)>($r4);

        $r3 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $r4 = $r1.<com.cootek.usage.UsageData: java.lang.String path>;

        $r4 = virtualinvoke $r3.<com.cootek.usage.s: java.lang.String b(java.lang.String)>($r4);

        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

        if $z0 == 0 goto label01;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("saving path: ");

        $r6 = $r1.<com.cootek.usage.UsageData: java.lang.String path>;

        $r5 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", sampling: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", strategy: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", $r6);

     label01:
        $r7 = $r0.<com.cootek.usage.v: java.util.Random h>;

        $i1 = virtualinvoke $r7.<java.util.Random: int nextInt(int)>(99);

        if $i1 < $i0 goto label02;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>(java.lang.String)>("path: ");

        $r4 = $r1.<com.cootek.usage.UsageData: java.lang.String path>;

        $r5 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not saved for p = ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", $r4);

        return;

     label02:
        r33 = new java.io.File;

        $r8 = r33;

        $r9 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r10 = virtualinvoke $r9.<com.cootek.usage.AbsUsageAssist: java.io.File getFolder()>();

        specialinvoke r33.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r4);

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        virtualinvoke $r8.<java.io.File: boolean mkdirs()>();

     label03:
        $r3 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $r11 = virtualinvoke $r3.<com.cootek.usage.s: com.cootek.usage.u c(java.lang.String)>($r4);

        $r12 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles()>();

        if $r12 == null goto label05;

        $l2 = $r11.<com.cootek.usage.u: long e>;

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label05;

        $l2 = $r11.<com.cootek.usage.u: long e>;

        $d0 = (double) $l2;

        $d0 = $d0 * 1.1;

        $i0 = lengthof $r12;

        $d1 = (double) $i0;

        $b3 = $d0 cmpg $d1;

        if $b3 > 0 goto label05;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r12);

        $i0 = lengthof $r12;

        $l2 = (long) $i0;

        $l4 = $r11.<com.cootek.usage.u: long e>;

        $l2 = $l2 - $l4;

        $i0 = 0;

     label04:
        $l4 = (long) $i0;

        $b3 = $l4 cmp $l2;

        if $b3 <= 0 goto label18;

        r34 = new java.util.HashMap;

        $r13 = r34;

        specialinvoke r34.<java.util.HashMap: void <init>()>();

        $r4 = $r11.<com.cootek.usage.u: java.lang.String a>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("strategy", $r4);

        $l4 = $r11.<com.cootek.usage.u: long e>;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("count", $r14);

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("delete_count", $r14);

        staticinvoke <com.cootek.usage.UsageRecorder: void record(java.lang.String,java.lang.String,java.util.Map)>("noah_usage_inner", "path_noah_usage_delete", $r13);

     label05:
        $r15 = null;

        $r8 = staticinvoke <com.cootek.usage.v: java.io.File b(java.io.File)>($r8);

     label06:
        $r4 = specialinvoke $r0.<com.cootek.usage.v: java.lang.String d()>();

        $r16 = staticinvoke <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>($r4, 1);

     label07:
        r37 = new java.io.ObjectOutputStream;

     label08:
        $r17 = r37;

     label09:
        r36 = new javax.crypto.CipherOutputStream;

     label10:
        $r18 = r36;

     label11:
        r35 = new java.io.FileOutputStream;

     label12:
        $r2 = r35;

     label13:
        specialinvoke r35.<java.io.FileOutputStream: void <init>(java.io.File)>($r8);

        specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16);

        specialinvoke r37.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r18);

     label14:
        virtualinvoke $r17.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1);

        virtualinvoke $r17.<java.io.ObjectOutputStream: void flush()>();

     label15:
        virtualinvoke $r17.<java.io.ObjectOutputStream: void close()>();

     label16:
        return;

     label17:
        $r19 := @caughtexception;

        r38 = (java.io.IOException) $r19;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label18:
        $r10 = $r12[$i0];

        virtualinvoke $r10.<java.io.File: boolean delete()>();

        $i0 = $i0 + 1;

        goto label04;

     label19:
        $r20 := @caughtexception;

        $r17 = null;

     label20:
        r39 = (java.io.FileNotFoundException) $r20;

        virtualinvoke r39.<java.io.FileNotFoundException: void printStackTrace()>();

     label21:
        if $r17 == null goto label60;

     label22:
        virtualinvoke $r17.<java.io.ObjectOutputStream: void close()>();

     label23:
        return;

     label24:
        $r21 := @caughtexception;

        r38 = (java.io.IOException) $r21;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label25:
        $r22 := @caughtexception;

     label26:
        r38 = (java.io.IOException) $r22;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

     label27:
        if $r15 == null goto label60;

     label28:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label29:
        return;

     label30:
        $r23 := @caughtexception;

        r38 = (java.io.IOException) $r23;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label31:
        $r24 := @caughtexception;

     label32:
        r40 = (java.security.InvalidKeyException) $r24;

        virtualinvoke r40.<java.security.InvalidKeyException: void printStackTrace()>();

     label33:
        if $r15 == null goto label60;

     label34:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label35:
        return;

     label36:
        $r25 := @caughtexception;

        r38 = (java.io.IOException) $r25;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label37:
        $r26 := @caughtexception;

     label38:
        r41 = (java.security.NoSuchAlgorithmException) $r26;

        virtualinvoke r41.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label39:
        if $r15 == null goto label60;

     label40:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label41:
        return;

     label42:
        $r27 := @caughtexception;

        r38 = (java.io.IOException) $r27;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label43:
        $r28 := @caughtexception;

     label44:
        r42 = (javax.crypto.NoSuchPaddingException) $r28;

        virtualinvoke r42.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

     label45:
        if $r15 == null goto label60;

     label46:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label47:
        return;

     label48:
        $r29 := @caughtexception;

        r38 = (java.io.IOException) $r29;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label49:
        $r30 := @caughtexception;

     label50:
        if $r15 == null goto label52;

     label51:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label52:
        throw $r30;

     label53:
        $r31 := @caughtexception;

        r38 = (java.io.IOException) $r31;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        goto label52;

     label54:
        $r30 := @caughtexception;

        $r15 = $r17;

        goto label50;

     label55:
        $r28 := @caughtexception;

        $r15 = $r17;

        goto label44;

     label56:
        $r26 := @caughtexception;

        $r15 = $r17;

        goto label38;

     label57:
        $r24 := @caughtexception;

        $r15 = $r17;

        goto label32;

     label58:
        $r22 := @caughtexception;

        $r15 = $r17;

        goto label26;

     label59:
        $r20 := @caughtexception;

        goto label20;

     label60:
        return;

        catch java.io.FileNotFoundException from label06 to label07 with label19;
        catch java.io.FileNotFoundException from label13 to label14 with label19;
        catch java.io.IOException from label06 to label07 with label25;
        catch java.io.IOException from label13 to label14 with label25;
        catch java.security.InvalidKeyException from label06 to label07 with label31;
        catch java.security.InvalidKeyException from label13 to label14 with label31;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label37;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label37;
        catch javax.crypto.NoSuchPaddingException from label06 to label07 with label43;
        catch javax.crypto.NoSuchPaddingException from label13 to label14 with label43;
        catch java.lang.Throwable from label06 to label08 with label49;
        catch java.lang.Throwable from label09 to label10 with label49;
        catch java.lang.Throwable from label11 to label12 with label49;
        catch java.lang.Throwable from label13 to label14 with label49;
        catch java.io.FileNotFoundException from label14 to label15 with label59;
        catch java.io.IOException from label14 to label15 with label58;
        catch java.security.InvalidKeyException from label14 to label15 with label57;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label56;
        catch javax.crypto.NoSuchPaddingException from label14 to label15 with label55;
        catch java.lang.Throwable from label14 to label15 with label54;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label20 to label21 with label54;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Throwable from label26 to label27 with label49;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.lang.Throwable from label32 to label33 with label49;
        catch java.io.IOException from label34 to label35 with label36;
        catch java.lang.Throwable from label38 to label39 with label49;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.lang.Throwable from label44 to label45 with label49;
        catch java.io.IOException from label46 to label47 with label48;
        catch java.io.IOException from label51 to label52 with label53;
    }

    static void a(com.cootek.usage.v)
    {
        com.cootek.usage.v $r0;
        java.util.ArrayList $r1, $r2, $r7, $r8;
        int $i0, $i2, $i3, varReplacer5827, varReplacer5830;
        com.cootek.usage.AbsUsageAssist $r3;
        android.content.Context $r4;
        boolean $z0, $z1, $z2;
        long $l1, $l4, $l5, $l6;
        java.io.File $r5;
        java.io.File[] $r6;
        java.lang.String $r9, $r13, varReplacer5826, varReplacer5828, varReplacer5829, varReplacer5831, varReplacer5832, varReplacer5833, varReplacer5834, varReplacer5835, varReplacer5836;
        com.cootek.usage.s $r10;
        com.cootek.usage.u $r11;
        java.lang.StringBuilder $r12;
        com.cootek.usage.r $r14;
        byte $b7;

        nop;

        $r0 := @parameter0: com.cootek.usage.v;

        $r3 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r4 = virtualinvoke $r3.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $z0 = staticinvoke <com.cootek.usage.g: boolean a(android.content.Context)>($r4);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r5 = virtualinvoke $r3.<com.cootek.usage.AbsUsageAssist: java.io.File getFolder()>();

        $r6 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>();

        $i2 = 0;

     label01:
        if $i2 < 2 goto label02;

        return;

     label02:
        if $i2 != 0 goto label07;

        $z1 = 1;

     label03:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r6;

        $i3 = 0;

     label04:
        if $i3 < $i0 goto label08;

        $z2 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label05;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r8.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r1);

        virtualinvoke $r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r2);

        varReplacer5827 = 1;

        specialinvoke $r0.<com.cootek.usage.v: void a(boolean,java.util.ArrayList,java.util.ArrayList,boolean)>(varReplacer5827, $r8, $r7, $z1);

     label05:
        $z2 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label06;

        varReplacer5830 = 0;

        specialinvoke $r0.<com.cootek.usage.v: void a(boolean,java.util.ArrayList,java.util.ArrayList,boolean)>(varReplacer5830, $r1, $r2, $z1);

     label06:
        $i2 = $i2 + 1;

        goto label01;

     label07:
        $z1 = 0;

        goto label03;

     label08:
        $r5 = $r6[$i3];

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getName()>();

        $r10 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $r11 = virtualinvoke $r10.<com.cootek.usage.s: com.cootek.usage.u c(java.lang.String)>($r9);

        $z2 = $r11.<com.cootek.usage.u: boolean d>;

        if $z2 != $z1 goto label10;

        $z2 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

        if $z2 == 0 goto label09;

        $r12 = new java.lang.StringBuilder;

        varReplacer5834 = "folder: ";

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5834);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer5828 = ", strategy: ";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5828);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5831 = "Usage/UsageProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5831, $r13);

     label09:
        $r14 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $r13 = $r11.<com.cootek.usage.u: java.lang.String a>;

        $l4 = virtualinvoke $r14.<com.cootek.usage.r: long a(java.lang.String)>($r13);

        $r14 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $r13 = $r11.<com.cootek.usage.u: java.lang.String a>;

        $l5 = virtualinvoke $r14.<com.cootek.usage.r: long a(java.lang.String)>($r13);

        $l6 = $r11.<com.cootek.usage.u: long c>;

        $b7 = $l6 cmp 0L;

        if $b7 < 0 goto label11;

        $l4 = $l1 - $l4;

        $l6 = $r11.<com.cootek.usage.u: long c>;

        $b7 = $l4 cmp $l6;

        if $b7 <= 0 goto label11;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = new java.lang.StringBuilder;

        varReplacer5832 = "folder: ";

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5832);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer5833 = " may send by mobile";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5833);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5836 = "Usage/UsageProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5836, $r9);

     label10:
        $i3 = $i3 + 1;

        goto label04;

     label11:
        $l4 = $r11.<com.cootek.usage.u: long b>;

        $b7 = $l4 cmp 0L;

        if $b7 < 0 goto label10;

        if $z0 == 0 goto label10;

        $l5 = $l1 - $l5;

        $l4 = $r11.<com.cootek.usage.u: long b>;

        $b7 = $l5 cmp $l4;

        if $b7 <= 0 goto label10;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = new java.lang.StringBuilder;

        varReplacer5835 = "folder: ";

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5835);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer5829 = " may send by wifi";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5829);

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5826 = "Usage/UsageProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5826, $r9);

        goto label10;
    }

    static void a(com.cootek.usage.v, com.cootek.usage.UsageData)
    {
        com.cootek.usage.v $r0;
        com.cootek.usage.UsageData $r1;
        java.io.FileOutputStream $r2, r35;
        com.cootek.usage.s $r3;
        java.lang.String $r4, $r6, varReplacer5812, varReplacer5814, varReplacer5815, varReplacer5816, varReplacer5817, varReplacer5818, varReplacer5819, varReplacer5820, varReplacer5821, varReplacer5823, varReplacer5824, varReplacer5825;
        int $i0, $i1, varReplacer5813, varReplacer5822;
        boolean $z0;
        java.lang.StringBuilder $r5, r32;
        java.util.Random $r7;
        java.io.File $r8, $r10, r33;
        com.cootek.usage.AbsUsageAssist $r9;
        com.cootek.usage.u $r11;
        java.io.File[] $r12;
        long $l2, $l4;
        byte $b3;
        double $d0, $d1;
        java.util.HashMap $r13, r34;
        java.lang.Long $r14;
        java.io.ObjectOutputStream $r15, $r17, r37;
        javax.crypto.Cipher $r16;
        javax.crypto.CipherOutputStream $r18, r36;
        java.lang.Throwable $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;
        java.io.IOException r38;
        java.io.FileNotFoundException r39;
        java.security.InvalidKeyException r40;
        java.security.NoSuchAlgorithmException r41;
        javax.crypto.NoSuchPaddingException r42;

        nop;

        $r0 := @parameter0: com.cootek.usage.v;

        $r1 := @parameter1: com.cootek.usage.UsageData;

        $r3 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $r4 = $r1.<com.cootek.usage.UsageData: java.lang.String path>;

        $i0 = virtualinvoke $r3.<com.cootek.usage.s: int a(java.lang.String)>($r4);

        $r3 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $r4 = $r1.<com.cootek.usage.UsageData: java.lang.String path>;

        $r4 = virtualinvoke $r3.<com.cootek.usage.s: java.lang.String b(java.lang.String)>($r4);

        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

        if $z0 == 0 goto label01;

        r32 = new java.lang.StringBuilder;

        varReplacer5825 = "saving path: ";

        specialinvoke r32.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5825);

        $r6 = $r1.<com.cootek.usage.UsageData: java.lang.String path>;

        $r5 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer5812 = ", sampling: ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5812);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer5823 = ", strategy: ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5823);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5815 = "Usage/UsageProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5815, $r6);

     label01:
        $r7 = $r0.<com.cootek.usage.v: java.util.Random h>;

        varReplacer5813 = 99;

        $i1 = virtualinvoke $r7.<java.util.Random: int nextInt(int)>(varReplacer5813);

        if $i1 < $i0 goto label02;

        r32 = new java.lang.StringBuilder;

        varReplacer5816 = "path: ";

        specialinvoke r32.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5816);

        $r4 = $r1.<com.cootek.usage.UsageData: java.lang.String path>;

        $r5 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5824 = " not saved for p = ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5824);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5817 = "Usage/UsageProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5817, $r4);

        return;

     label02:
        r33 = new java.io.File;

        $r8 = r33;

        $r9 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r10 = virtualinvoke $r9.<com.cootek.usage.AbsUsageAssist: java.io.File getFolder()>();

        specialinvoke r33.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r4);

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label03;

        virtualinvoke $r8.<java.io.File: boolean mkdirs()>();

     label03:
        $r3 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $r11 = virtualinvoke $r3.<com.cootek.usage.s: com.cootek.usage.u c(java.lang.String)>($r4);

        $r12 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles()>();

        if $r12 == null goto label05;

        $l2 = $r11.<com.cootek.usage.u: long e>;

        $b3 = $l2 cmp 0L;

        if $b3 <= 0 goto label05;

        $l2 = $r11.<com.cootek.usage.u: long e>;

        $d0 = (double) $l2;

        $d0 = $d0 * 1.1;

        $i0 = lengthof $r12;

        $d1 = (double) $i0;

        $b3 = $d0 cmpg $d1;

        if $b3 > 0 goto label05;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r12);

        $i0 = lengthof $r12;

        $l2 = (long) $i0;

        $l4 = $r11.<com.cootek.usage.u: long e>;

        $l2 = $l2 - $l4;

        $i0 = 0;

     label04:
        $l4 = (long) $i0;

        $b3 = $l4 cmp $l2;

        if $b3 <= 0 goto label18;

        r34 = new java.util.HashMap;

        $r13 = r34;

        specialinvoke r34.<java.util.HashMap: void <init>()>();

        $r4 = $r11.<com.cootek.usage.u: java.lang.String a>;

        varReplacer5818 = "strategy";

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer5818, $r4);

        $l4 = $r11.<com.cootek.usage.u: long e>;

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        varReplacer5814 = "count";

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer5814, $r14);

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        varReplacer5821 = "delete_count";

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer5821, $r14);

        varReplacer5819 = "noah_usage_inner";

        varReplacer5820 = "path_noah_usage_delete";

        staticinvoke <com.cootek.usage.UsageRecorder: void record(java.lang.String,java.lang.String,java.util.Map)>(varReplacer5819, varReplacer5820, $r13);

     label05:
        $r15 = null;

        $r8 = staticinvoke <com.cootek.usage.v: java.io.File b(java.io.File)>($r8);

     label06:
        $r4 = specialinvoke $r0.<com.cootek.usage.v: java.lang.String d()>();

        varReplacer5822 = 1;

        $r16 = staticinvoke <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>($r4, varReplacer5822);

     label07:
        r37 = new java.io.ObjectOutputStream;

     label08:
        $r17 = r37;

     label09:
        r36 = new javax.crypto.CipherOutputStream;

     label10:
        $r18 = r36;

     label11:
        r35 = new java.io.FileOutputStream;

     label12:
        $r2 = r35;

     label13:
        specialinvoke r35.<java.io.FileOutputStream: void <init>(java.io.File)>($r8);

        specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16);

        specialinvoke r37.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r18);

     label14:
        virtualinvoke $r17.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r1);

        virtualinvoke $r17.<java.io.ObjectOutputStream: void flush()>();

     label15:
        virtualinvoke $r17.<java.io.ObjectOutputStream: void close()>();

     label16:
        return;

     label17:
        $r19 := @caughtexception;

        r38 = (java.io.IOException) $r19;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label18:
        $r10 = $r12[$i0];

        virtualinvoke $r10.<java.io.File: boolean delete()>();

        $i0 = $i0 + 1;

        goto label04;

     label19:
        $r20 := @caughtexception;

        $r17 = null;

     label20:
        r39 = (java.io.FileNotFoundException) $r20;

        virtualinvoke r39.<java.io.FileNotFoundException: void printStackTrace()>();

     label21:
        if $r17 == null goto label60;

     label22:
        virtualinvoke $r17.<java.io.ObjectOutputStream: void close()>();

     label23:
        return;

     label24:
        $r21 := @caughtexception;

        r38 = (java.io.IOException) $r21;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label25:
        $r22 := @caughtexception;

     label26:
        r38 = (java.io.IOException) $r22;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

     label27:
        if $r15 == null goto label60;

     label28:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label29:
        return;

     label30:
        $r23 := @caughtexception;

        r38 = (java.io.IOException) $r23;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label31:
        $r24 := @caughtexception;

     label32:
        r40 = (java.security.InvalidKeyException) $r24;

        virtualinvoke r40.<java.security.InvalidKeyException: void printStackTrace()>();

     label33:
        if $r15 == null goto label60;

     label34:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label35:
        return;

     label36:
        $r25 := @caughtexception;

        r38 = (java.io.IOException) $r25;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label37:
        $r26 := @caughtexception;

     label38:
        r41 = (java.security.NoSuchAlgorithmException) $r26;

        virtualinvoke r41.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label39:
        if $r15 == null goto label60;

     label40:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label41:
        return;

     label42:
        $r27 := @caughtexception;

        r38 = (java.io.IOException) $r27;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label43:
        $r28 := @caughtexception;

     label44:
        r42 = (javax.crypto.NoSuchPaddingException) $r28;

        virtualinvoke r42.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

     label45:
        if $r15 == null goto label60;

     label46:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label47:
        return;

     label48:
        $r29 := @caughtexception;

        r38 = (java.io.IOException) $r29;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        return;

     label49:
        $r30 := @caughtexception;

     label50:
        if $r15 == null goto label52;

     label51:
        virtualinvoke $r15.<java.io.ObjectOutputStream: void close()>();

     label52:
        throw $r30;

     label53:
        $r31 := @caughtexception;

        r38 = (java.io.IOException) $r31;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        goto label52;

     label54:
        $r30 := @caughtexception;

        $r15 = $r17;

        goto label50;

     label55:
        $r28 := @caughtexception;

        $r15 = $r17;

        goto label44;

     label56:
        $r26 := @caughtexception;

        $r15 = $r17;

        goto label38;

     label57:
        $r24 := @caughtexception;

        $r15 = $r17;

        goto label32;

     label58:
        $r22 := @caughtexception;

        $r15 = $r17;

        goto label26;

     label59:
        $r20 := @caughtexception;

        goto label20;

     label60:
        return;

        catch java.io.FileNotFoundException from label06 to label07 with label19;
        catch java.io.FileNotFoundException from label13 to label14 with label19;
        catch java.io.IOException from label06 to label07 with label25;
        catch java.io.IOException from label13 to label14 with label25;
        catch java.security.InvalidKeyException from label06 to label07 with label31;
        catch java.security.InvalidKeyException from label13 to label14 with label31;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label37;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label37;
        catch javax.crypto.NoSuchPaddingException from label06 to label07 with label43;
        catch javax.crypto.NoSuchPaddingException from label13 to label14 with label43;
        catch java.lang.Throwable from label06 to label08 with label49;
        catch java.lang.Throwable from label09 to label10 with label49;
        catch java.lang.Throwable from label11 to label12 with label49;
        catch java.lang.Throwable from label13 to label14 with label49;
        catch java.io.FileNotFoundException from label14 to label15 with label59;
        catch java.io.IOException from label14 to label15 with label58;
        catch java.security.InvalidKeyException from label14 to label15 with label57;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label56;
        catch javax.crypto.NoSuchPaddingException from label14 to label15 with label55;
        catch java.lang.Throwable from label14 to label15 with label54;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.lang.Throwable from label20 to label21 with label54;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.lang.Throwable from label26 to label27 with label49;
        catch java.io.IOException from label28 to label29 with label30;
        catch java.lang.Throwable from label32 to label33 with label49;
        catch java.io.IOException from label34 to label35 with label36;
        catch java.lang.Throwable from label38 to label39 with label49;
        catch java.io.IOException from label40 to label41 with label42;
        catch java.lang.Throwable from label44 to label45 with label49;
        catch java.io.IOException from label46 to label47 with label48;
        catch java.io.IOException from label51 to label52 with label53;
    }

    static void a(com.cootek.usage.v, java.io.File)
    {
        com.cootek.usage.v $r0;
        java.io.File $r1, $r5, $r8;
        com.cootek.usage.AbsUsageAssist $r2;
        android.content.Context $r3;
        java.lang.String $r4, $r7, varReplacer5802, varReplacer5803, varReplacer5804, varReplacer5805, varReplacer5806, varReplacer5808, varReplacer5809, varReplacer5810, varReplacer5811;
        boolean $z0;
        java.lang.StringBuilder $r6, r11;
        com.cootek.usage.s $r9;
        java.lang.Throwable $r10;
        java.io.IOException r12;
        int varReplacer5801, varReplacer5807;

        nop;

        $r0 := @parameter0: com.cootek.usage.v;

        $r1 := @parameter1: java.io.File;

        if $r1 == null goto label10;

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r4 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getStrategyFileName()>();

        $r5 = virtualinvoke $r3.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>($r4);

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: boolean isDebugMode()>();

        if $z0 == 0 goto label01;

        r11 = new java.lang.StringBuilder;

        varReplacer5808 = "Old strategy file path: ";

        specialinvoke r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5808);

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5802 = "Usage/UsageProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5802, $r4);

        r11 = new java.lang.StringBuilder;

        varReplacer5809 = "New strategy file path: ";

        specialinvoke r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5809);

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5804 = "Usage/UsageProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5804, $r4);

     label01:
        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label10;

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r4 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getStrategyFileName()>();

        if $r4 != null goto label08;

        $r4 = null;

     label02:
        $r8 = virtualinvoke $r3.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>($r4);

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label04;

     label03:
        virtualinvoke $r8.<java.io.File: boolean createNewFile()>();

     label04:
        staticinvoke <com.cootek.usage.f: void a(java.io.File,java.io.File)>($r5, $r8);

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: boolean isDebugMode()>();

        if $z0 == 0 goto label05;

        varReplacer5805 = "Usage/UsageProcessor";

        varReplacer5806 = "strategy file: backup succeed.";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5805, varReplacer5806);

     label05:
        staticinvoke <com.cootek.usage.f: void a(java.io.File,java.io.File)>($r1, $r5);

        $r9 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $z0 = virtualinvoke $r9.<com.cootek.usage.s: boolean b()>();

        if $z0 != 0 goto label07;

        staticinvoke <com.cootek.usage.f: void a(java.io.File,java.io.File)>($r8, $r5);

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: boolean isDebugMode()>();

        if $z0 == 0 goto label06;

        varReplacer5810 = "Usage/UsageProcessor";

        varReplacer5811 = "Update the strategy failed, revert strategy.";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5810, varReplacer5811);

     label06:
        $r9 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        virtualinvoke $r9.<com.cootek.usage.s: boolean b()>();

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        varReplacer5807 = 0;

        virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: void onStrategyUpdate(boolean)>(varReplacer5807);

     label07:
        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        varReplacer5801 = 1;

        virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: void onStrategyUpdate(boolean)>(varReplacer5801);

        return;

     label08:
        r11 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        varReplacer5803 = ".bak";

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5803);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label02;

     label09:
        $r10 := @caughtexception;

        r12 = (java.io.IOException) $r10;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        goto label04;

     label10:
        return;

        catch java.io.IOException from label03 to label04 with label09;
    }

    private void a(boolean, java.util.ArrayList, java.util.ArrayList, boolean)
    {
        com.cootek.usage.v $r0;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r1, $r2, $r20, r64;
        java.util.HashMap $r3, $r4, r59;
        java.util.Iterator $r5, $r23;
        java.util.Set $r6;
        java.lang.Object $r7;
        java.io.File $r8;
        java.io.File[] $r9;
        int $i0, $i1, $i2;
        java.io.ObjectInputStream $r10, $r13, r62;
        java.lang.String $r11;
        javax.crypto.Cipher $r12;
        javax.crypto.CipherInputStream $r14, r61;
        java.io.FileInputStream $r15, r60;
        com.cootek.usage.UsageData $r16;
        java.lang.Integer $r17;
        java.lang.StringBuilder $r18, r63;
        android.util.Pair $r19, r65;
        long $l3;
        byte $b4;
        com.cootek.usage.p $r21, r66;
        com.cootek.usage.AbsUsageAssist $r22;
        java.lang.Throwable $r24, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r40, $r41, $r42, $r44, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55;
        java.lang.ClassNotFoundException $r29, $r39;
        java.lang.RuntimeException $r43;
        java.lang.Error $r45;
        java.util.Map$Entry $r56;
        com.cootek.usage.u $r57;
        com.cootek.usage.r $r58;
        java.io.IOException r67;
        java.io.StreamCorruptedException r68;
        java.io.FileNotFoundException r69;
        java.security.InvalidKeyException r70;
        java.security.NoSuchAlgorithmException r71;
        javax.crypto.NoSuchPaddingException r72;

        $r0 := @this: com.cootek.usage.v;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: java.util.ArrayList;

        $z1 := @parameter3: boolean;

        $r4 = new java.util.HashMap;

        $r3 = $r4;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r59 = new java.util.HashMap;

        $r4 = r59;

        specialinvoke r59.<java.util.HashMap: void <init>()>();

        $r5 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label001:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label004;

        $r6 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

        $z2 = 1;

     label002:
        $z3 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label183;

        if $z2 == 0 goto label221;

        $r5 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label003:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label187;

        return;

     label004:
        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.io.File) $r7;

        $r9 = virtualinvoke $r8.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r9;

        $i1 = 0;

     label005:
        if $i1 >= $i0 goto label001;

        $r8 = $r9[$i1];

        $r10 = null;

     label006:
        $r11 = specialinvoke $r0.<com.cootek.usage.v: java.lang.String d()>();

        $r12 = staticinvoke <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>($r11, 2);

     label007:
        r62 = new java.io.ObjectInputStream;

     label008:
        $r13 = r62;

     label009:
        r61 = new javax.crypto.CipherInputStream;

     label010:
        $r14 = r61;

     label011:
        r60 = new java.io.FileInputStream;

     label012:
        $r15 = r60;

     label013:
        specialinvoke r60.<java.io.FileInputStream: void <init>(java.io.File)>($r8);

        specialinvoke r61.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r15, $r12);

        specialinvoke r62.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r14);

     label014:
        $r7 = virtualinvoke $r13.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label015:
        $r16 = (com.cootek.usage.UsageData) $r7;

     label016:
        virtualinvoke $r13.<java.io.ObjectInputStream: void close()>();

     label017:
        if $r16 != null goto label220;

     label018:
        $r13 = new java.io.ObjectInputStream;

     label019:
        $r10 = $r13;

     label020:
        r60 = new java.io.FileInputStream;

     label021:
        $r15 = r60;

     label022:
        specialinvoke r60.<java.io.FileInputStream: void <init>(java.io.File)>($r8);

        specialinvoke $r13.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r15);

     label023:
        $r7 = virtualinvoke $r10.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label024:
        $r16 = (com.cootek.usage.UsageData) $r7;

     label025:
        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

     label026:
        $z2 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r11);

     label027:
        if $z2 != 0 goto label030;

     label028:
        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

     label029:
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r17);

     label030:
        r63 = new java.lang.StringBuilder;

     label031:
        $r18 = r63;

     label032:
        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

     label033:
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11);

        specialinvoke r63.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

     label034:
        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

     label035:
        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

     label036:
        $r19 = (android.util.Pair) $r7;

     label037:
        if $r19 != null goto label219;

     label038:
        $r20 = new java.util.ArrayList;

     label039:
        $r1 = $r20;

     label040:
        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

     label041:
        r64 = new java.util.ArrayList;

     label042:
        $r20 = r64;

     label043:
        specialinvoke r64.<java.util.ArrayList: void <init>()>();

     label044:
        r65 = new android.util.Pair;

     label045:
        $r19 = r65;

     label046:
        specialinvoke r65.<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r20);

     label047:
        r63 = new java.lang.StringBuilder;

     label048:
        $r18 = r63;

     label049:
        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

     label050:
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11);

        specialinvoke r63.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

     label051:
        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

     label052:
        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r19);

     label053:
        $r7 = $r19.<android.util.Pair: java.lang.Object first>;

        $r1 = (java.util.ArrayList) $r7;

     label054:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label055:
        $r7 = $r19.<android.util.Pair: java.lang.Object second>;

        $r1 = (java.util.ArrayList) $r7;

     label056:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label057:
        $r7 = $r19.<android.util.Pair: java.lang.Object first>;

        $r1 = (java.util.ArrayList) $r7;

     label058:
        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

     label059:
        $l3 = (long) $i2;

        $b4 = $l3 cmp 2000L;

        if $b4 < 0 goto label080;

     label060:
        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

     label061:
        $r7 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r11);

     label062:
        $r17 = (java.lang.Integer) $r7;

     label063:
        $i2 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

     label064:
        r66 = new com.cootek.usage.p;

     label065:
        $r21 = r66;

     label066:
        $r22 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

        $r7 = $r19.<android.util.Pair: java.lang.Object first>;

        $r1 = (java.util.ArrayList) $r7;

     label067:
        specialinvoke r66.<com.cootek.usage.p: void <init>(com.cootek.usage.AbsUsageAssist,boolean,java.lang.String,java.util.ArrayList,boolean)>($r22, $z0, $r11, $r1, $z1);

        $z2 = virtualinvoke $r21.<com.cootek.usage.p: boolean a()>();

     label068:
        if $z2 == 0 goto label073;

     label069:
        $r7 = $r19.<android.util.Pair: java.lang.Object second>;

        $r1 = (java.util.ArrayList) $r7;

     label070:
        $r23 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label071:
        $z2 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

     label072:
        if $z2 != 0 goto label148;

     label073:
        r63 = new java.lang.StringBuilder;

     label074:
        $r18 = r63;

     label075:
        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

     label076:
        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r11);

        specialinvoke r63.<java.lang.StringBuilder: void <init>(java.lang.String)>($r11);

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r11);

     label077:
        $i2 = $i2 + 1;

     label078:
        $r11 = $r16.<com.cootek.usage.UsageData: java.lang.String type>;

     label079:
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r17);

     label080:
        if $r10 == null goto label082;

     label081:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label082:
        $i1 = $i1 + 1;

        goto label005;

     label083:
        $r24 := @caughtexception;

        $r13 = null;

     label084:
        r67 = (java.io.IOException) $r24;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

     label085:
        if $r13 == null goto label087;

     label086:
        virtualinvoke $r13.<java.io.ObjectInputStream: void close()>();

     label087:
        $r16 = null;

        goto label017;

     label088:
        $r25 := @caughtexception;

     label089:
        r67 = (java.io.IOException) $r25;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

     label090:
        $r16 = null;

        goto label017;

     label091:
        $r26 := @caughtexception;

        $r10 = null;

     label092:
        throw $r26;

     label093:
        $r27 := @caughtexception;

     label094:
        r68 = (java.io.StreamCorruptedException) $r27;

        virtualinvoke r68.<java.io.StreamCorruptedException: void printStackTrace()>();

     label095:
        if $r10 == null goto label082;

     label096:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label097:
        goto label082;

     label098:
        $r28 := @caughtexception;

        r67 = (java.io.IOException) $r28;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label099:
        $r29 := @caughtexception;

     label100:
        virtualinvoke $r29.<java.lang.ClassNotFoundException: void printStackTrace()>();

     label101:
        if $r10 == null goto label103;

     label102:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label103:
        $r16 = null;

        goto label017;

     label104:
        $r30 := @caughtexception;

     label105:
        r67 = (java.io.IOException) $r30;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

     label106:
        $r16 = null;

        goto label017;

     label107:
        $r31 := @caughtexception;

        $r10 = null;

     label108:
        throw $r31;

     label109:
        $r32 := @caughtexception;

        $r10 = null;

     label110:
        r69 = (java.io.FileNotFoundException) $r32;

        virtualinvoke r69.<java.io.FileNotFoundException: void printStackTrace()>();

     label111:
        if $r10 == null goto label082;

     label112:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label113:
        goto label082;

     label114:
        $r33 := @caughtexception;

        r67 = (java.io.IOException) $r33;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label115:
        $r34 := @caughtexception;

     label116:
        if $r10 == null goto label118;

     label117:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label118:
        $r10 = null;

     label119:
        throw $r34;

     label120:
        $r35 := @caughtexception;

        $r10 = null;

     label121:
        r67 = (java.io.IOException) $r35;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

     label122:
        if $r10 == null goto label082;

     label123:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label124:
        goto label082;

     label125:
        $r36 := @caughtexception;

        r67 = (java.io.IOException) $r36;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label126:
        $r37 := @caughtexception;

     label127:
        r67 = (java.io.IOException) $r37;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

     label128:
        $r10 = null;

        goto label119;

     label129:
        $r38 := @caughtexception;

        $r10 = null;

     label130:
        throw $r38;

     label131:
        $r39 := @caughtexception;

        $r10 = null;

     label132:
        virtualinvoke $r39.<java.lang.ClassNotFoundException: void printStackTrace()>();

     label133:
        if $r10 == null goto label082;

     label134:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label135:
        goto label082;

     label136:
        $r40 := @caughtexception;

        r67 = (java.io.IOException) $r40;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label137:
        $r41 := @caughtexception;

     label138:
        r67 = (java.io.IOException) $r41;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

     label139:
        goto label017;

     label140:
        $r42 := @caughtexception;

        $r10 = null;

     label141:
        throw $r42;

     label142:
        $r43 := @caughtexception;

        $r10 = null;

     label143:
        virtualinvoke $r43.<java.lang.RuntimeException: void printStackTrace()>();

     label144:
        if $r10 == null goto label082;

     label145:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label146:
        goto label082;

     label147:
        $r44 := @caughtexception;

        r67 = (java.io.IOException) $r44;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label148:
        $r7 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

     label149:
        $r8 = (java.io.File) $r7;

     label150:
        virtualinvoke $r8.<java.io.File: boolean delete()>();

     label151:
        goto label071;

     label152:
        $r27 := @caughtexception;

        goto label094;

     label153:
        $r45 := @caughtexception;

        $r10 = null;

     label154:
        virtualinvoke $r45.<java.lang.Error: void printStackTrace()>();

     label155:
        if $r10 == null goto label082;

     label156:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label157:
        goto label082;

     label158:
        $r46 := @caughtexception;

        r67 = (java.io.IOException) $r46;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label159:
        $r47 := @caughtexception;

        $r10 = null;

     label160:
        r70 = (java.security.InvalidKeyException) $r47;

        virtualinvoke r70.<java.security.InvalidKeyException: void printStackTrace()>();

     label161:
        if $r10 == null goto label082;

     label162:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label163:
        goto label082;

     label164:
        $r48 := @caughtexception;

        r67 = (java.io.IOException) $r48;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label165:
        $r49 := @caughtexception;

        $r10 = null;

     label166:
        r71 = (java.security.NoSuchAlgorithmException) $r49;

        virtualinvoke r71.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label167:
        if $r10 == null goto label082;

     label168:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label169:
        goto label082;

     label170:
        $r50 := @caughtexception;

        r67 = (java.io.IOException) $r50;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label171:
        $r51 := @caughtexception;

        $r10 = null;

     label172:
        r72 = (javax.crypto.NoSuchPaddingException) $r51;

        virtualinvoke r72.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

     label173:
        if $r10 == null goto label082;

     label174:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label175:
        goto label082;

     label176:
        $r52 := @caughtexception;

        r67 = (java.io.IOException) $r52;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label177:
        $r53 := @caughtexception;

        $r10 = null;

     label178:
        if $r10 == null goto label180;

     label179:
        virtualinvoke $r10.<java.io.ObjectInputStream: void close()>();

     label180:
        throw $r53;

     label181:
        $r54 := @caughtexception;

        r67 = (java.io.IOException) $r54;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label180;

     label182:
        $r55 := @caughtexception;

        r67 = (java.io.IOException) $r55;

        virtualinvoke r67.<java.io.IOException: void printStackTrace()>();

        goto label082;

     label183:
        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r56 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r56.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r11 = (java.lang.String) $r7;

        $i0 = virtualinvoke $r11.<java.lang.String: int lastIndexOf(java.lang.String)>("_");

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r7 = interfaceinvoke $r56.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (android.util.Pair) $r7;

        r66 = new com.cootek.usage.p;

        $r22 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r7 = $r19.<android.util.Pair: java.lang.Object first>;

        $r1 = (java.util.ArrayList) $r7;

        specialinvoke r66.<com.cootek.usage.p: void <init>(com.cootek.usage.AbsUsageAssist,boolean,java.lang.String,java.util.ArrayList,boolean)>($r22, $z0, $r11, $r1, $z1);

        $z3 = virtualinvoke r66.<com.cootek.usage.p: boolean a()>();

        $z2 = $z2 & $z3;

        if $z3 == 0 goto label185;

        $r7 = $r19.<android.util.Pair: java.lang.Object second>;

        $r1 = (java.util.ArrayList) $r7;

        $r23 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label184:
        $z3 = interfaceinvoke $r23.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label186;

     label185:
        goto label002;

     label186:
        $r7 = interfaceinvoke $r23.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.io.File) $r7;

        virtualinvoke $r8.<java.io.File: boolean delete()>();

        goto label184;

     label187:
        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r57 = (com.cootek.usage.u) $r7;

        $r58 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $r11 = $r57.<com.cootek.usage.u: java.lang.String a>;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r58.<com.cootek.usage.r: void a(java.lang.String,long)>($r11, $l3);

        goto label003;

     label188:
        $r53 := @caughtexception;

        goto label178;

     label189:
        $r53 := @caughtexception;

        goto label178;

     label190:
        $r53 := @caughtexception;

        $r10 = null;

        goto label178;

     label191:
        $r51 := @caughtexception;

        goto label172;

     label192:
        $r51 := @caughtexception;

        $r10 = null;

        goto label172;

     label193:
        $r51 := @caughtexception;

        goto label172;

     label194:
        $r49 := @caughtexception;

        goto label166;

     label195:
        $r49 := @caughtexception;

        $r10 = null;

        goto label166;

     label196:
        $r49 := @caughtexception;

        goto label166;

     label197:
        $r47 := @caughtexception;

        goto label160;

     label198:
        $r47 := @caughtexception;

        $r10 = null;

        goto label160;

     label199:
        $r47 := @caughtexception;

        goto label160;

     label200:
        $r45 := @caughtexception;

        goto label154;

     label201:
        $r45 := @caughtexception;

        $r10 = null;

        goto label154;

     label202:
        $r45 := @caughtexception;

        goto label154;

     label203:
        $r43 := @caughtexception;

        goto label143;

     label204:
        $r43 := @caughtexception;

        $r10 = null;

        goto label143;

     label205:
        $r43 := @caughtexception;

        goto label143;

     label206:
        $r39 := @caughtexception;

        goto label132;

     label207:
        $r39 := @caughtexception;

        $r10 = null;

        goto label132;

     label208:
        $r39 := @caughtexception;

        goto label132;

     label209:
        $r35 := @caughtexception;

        goto label121;

     label210:
        $r35 := @caughtexception;

        $r10 = null;

        goto label121;

     label211:
        $r35 := @caughtexception;

        goto label121;

     label212:
        $r32 := @caughtexception;

        goto label110;

     label213:
        $r32 := @caughtexception;

        $r10 = null;

        goto label110;

     label214:
        $r32 := @caughtexception;

        goto label110;

     label215:
        $r27 := @caughtexception;

        $r10 = null;

        goto label094;

     label216:
        $r34 := @caughtexception;

        $r10 = $r13;

        goto label116;

     label217:
        $r29 := @caughtexception;

        $r10 = $r13;

        goto label100;

     label218:
        $r24 := @caughtexception;

        goto label084;

     label219:
        goto label053;

     label220:
        $r10 = null;

        goto label025;

     label221:
        return;

        catch java.io.StreamCorruptedException from label006 to label007 with label093;
        catch java.io.FileNotFoundException from label006 to label007 with label109;
        catch java.io.IOException from label006 to label007 with label120;
        catch java.lang.ClassNotFoundException from label006 to label007 with label131;
        catch java.lang.RuntimeException from label006 to label007 with label142;
        catch java.lang.Error from label006 to label007 with label153;
        catch java.security.InvalidKeyException from label006 to label007 with label159;
        catch java.security.NoSuchAlgorithmException from label006 to label007 with label165;
        catch javax.crypto.NoSuchPaddingException from label006 to label007 with label171;
        catch java.lang.Throwable from label006 to label007 with label177;
        catch java.io.IOException from label013 to label014 with label083;
        catch java.lang.ClassNotFoundException from label013 to label014 with label099;
        catch java.lang.Throwable from label007 to label008 with label115;
        catch java.lang.Throwable from label009 to label010 with label115;
        catch java.lang.Throwable from label011 to label012 with label115;
        catch java.lang.Throwable from label013 to label014 with label115;
        catch java.io.IOException from label014 to label015 with label218;
        catch java.lang.ClassNotFoundException from label014 to label015 with label217;
        catch java.lang.Throwable from label014 to label016 with label216;
        catch java.io.IOException from label016 to label017 with label137;
        catch java.lang.Throwable from label016 to label017 with label140;
        catch java.io.StreamCorruptedException from label022 to label023 with label215;
        catch java.io.FileNotFoundException from label022 to label023 with label213;
        catch java.io.IOException from label022 to label023 with label210;
        catch java.lang.ClassNotFoundException from label022 to label023 with label207;
        catch java.lang.RuntimeException from label022 to label023 with label204;
        catch java.lang.Error from label018 to label019 with label201;
        catch java.lang.Error from label020 to label021 with label201;
        catch java.lang.Error from label022 to label023 with label201;
        catch java.security.InvalidKeyException from label022 to label023 with label198;
        catch java.security.NoSuchAlgorithmException from label022 to label023 with label195;
        catch javax.crypto.NoSuchPaddingException from label022 to label023 with label192;
        catch java.lang.Throwable from label022 to label023 with label190;
        catch java.io.StreamCorruptedException from label023 to label024 with label093;
        catch java.io.FileNotFoundException from label023 to label024 with label214;
        catch java.io.IOException from label023 to label024 with label211;
        catch java.lang.ClassNotFoundException from label023 to label024 with label208;
        catch java.lang.RuntimeException from label023 to label025 with label205;
        catch java.lang.Error from label023 to label025 with label202;
        catch java.security.InvalidKeyException from label023 to label024 with label199;
        catch java.security.NoSuchAlgorithmException from label023 to label024 with label196;
        catch javax.crypto.NoSuchPaddingException from label023 to label024 with label193;
        catch java.lang.Throwable from label023 to label024 with label189;
        catch java.io.StreamCorruptedException from label026 to label027 with label152;
        catch java.io.StreamCorruptedException from label029 to label030 with label152;
        catch java.io.StreamCorruptedException from label033 to label034 with label152;
        catch java.io.StreamCorruptedException from label035 to label036 with label152;
        catch java.io.StreamCorruptedException from label040 to label041 with label152;
        catch java.io.StreamCorruptedException from label043 to label044 with label152;
        catch java.io.StreamCorruptedException from label046 to label047 with label152;
        catch java.io.StreamCorruptedException from label050 to label051 with label152;
        catch java.io.StreamCorruptedException from label052 to label053 with label152;
        catch java.io.StreamCorruptedException from label054 to label055 with label152;
        catch java.io.StreamCorruptedException from label056 to label057 with label152;
        catch java.io.StreamCorruptedException from label058 to label059 with label152;
        catch java.io.StreamCorruptedException from label061 to label062 with label152;
        catch java.io.StreamCorruptedException from label063 to label064 with label152;
        catch java.io.StreamCorruptedException from label067 to label068 with label152;
        catch java.io.StreamCorruptedException from label070 to label072 with label152;
        catch java.io.StreamCorruptedException from label076 to label077 with label152;
        catch java.io.StreamCorruptedException from label079 to label080 with label152;
        catch java.io.FileNotFoundException from label026 to label027 with label212;
        catch java.io.FileNotFoundException from label029 to label030 with label212;
        catch java.io.FileNotFoundException from label033 to label034 with label212;
        catch java.io.FileNotFoundException from label035 to label036 with label212;
        catch java.io.FileNotFoundException from label040 to label041 with label212;
        catch java.io.FileNotFoundException from label043 to label044 with label212;
        catch java.io.FileNotFoundException from label046 to label047 with label212;
        catch java.io.FileNotFoundException from label050 to label051 with label212;
        catch java.io.FileNotFoundException from label052 to label053 with label212;
        catch java.io.FileNotFoundException from label054 to label055 with label212;
        catch java.io.FileNotFoundException from label056 to label057 with label212;
        catch java.io.FileNotFoundException from label058 to label059 with label212;
        catch java.io.FileNotFoundException from label061 to label062 with label212;
        catch java.io.FileNotFoundException from label063 to label064 with label212;
        catch java.io.FileNotFoundException from label067 to label068 with label212;
        catch java.io.FileNotFoundException from label070 to label072 with label212;
        catch java.io.FileNotFoundException from label076 to label077 with label212;
        catch java.io.FileNotFoundException from label079 to label080 with label212;
        catch java.io.IOException from label026 to label027 with label209;
        catch java.io.IOException from label029 to label030 with label209;
        catch java.io.IOException from label033 to label034 with label209;
        catch java.io.IOException from label035 to label036 with label209;
        catch java.io.IOException from label040 to label041 with label209;
        catch java.io.IOException from label043 to label044 with label209;
        catch java.io.IOException from label046 to label047 with label209;
        catch java.io.IOException from label050 to label051 with label209;
        catch java.io.IOException from label052 to label053 with label209;
        catch java.io.IOException from label054 to label055 with label209;
        catch java.io.IOException from label056 to label057 with label209;
        catch java.io.IOException from label058 to label059 with label209;
        catch java.io.IOException from label061 to label062 with label209;
        catch java.io.IOException from label063 to label064 with label209;
        catch java.io.IOException from label067 to label068 with label209;
        catch java.io.IOException from label070 to label072 with label209;
        catch java.io.IOException from label076 to label077 with label209;
        catch java.io.IOException from label079 to label080 with label209;
        catch java.lang.ClassNotFoundException from label026 to label027 with label206;
        catch java.lang.ClassNotFoundException from label029 to label030 with label206;
        catch java.lang.ClassNotFoundException from label033 to label034 with label206;
        catch java.lang.ClassNotFoundException from label035 to label036 with label206;
        catch java.lang.ClassNotFoundException from label040 to label041 with label206;
        catch java.lang.ClassNotFoundException from label043 to label044 with label206;
        catch java.lang.ClassNotFoundException from label046 to label047 with label206;
        catch java.lang.ClassNotFoundException from label050 to label051 with label206;
        catch java.lang.ClassNotFoundException from label052 to label053 with label206;
        catch java.lang.ClassNotFoundException from label054 to label055 with label206;
        catch java.lang.ClassNotFoundException from label056 to label057 with label206;
        catch java.lang.ClassNotFoundException from label058 to label059 with label206;
        catch java.lang.ClassNotFoundException from label061 to label062 with label206;
        catch java.lang.ClassNotFoundException from label063 to label064 with label206;
        catch java.lang.ClassNotFoundException from label067 to label068 with label206;
        catch java.lang.ClassNotFoundException from label070 to label072 with label206;
        catch java.lang.ClassNotFoundException from label076 to label077 with label206;
        catch java.lang.ClassNotFoundException from label079 to label080 with label206;
        catch java.lang.RuntimeException from label025 to label027 with label203;
        catch java.lang.RuntimeException from label028 to label030 with label203;
        catch java.lang.RuntimeException from label032 to label037 with label203;
        catch java.lang.RuntimeException from label040 to label041 with label203;
        catch java.lang.RuntimeException from label043 to label044 with label203;
        catch java.lang.RuntimeException from label046 to label047 with label203;
        catch java.lang.RuntimeException from label049 to label053 with label203;
        catch java.lang.RuntimeException from label053 to label059 with label203;
        catch java.lang.RuntimeException from label060 to label064 with label203;
        catch java.lang.RuntimeException from label066 to label068 with label203;
        catch java.lang.RuntimeException from label069 to label072 with label203;
        catch java.lang.RuntimeException from label075 to label077 with label203;
        catch java.lang.RuntimeException from label078 to label080 with label203;
        catch java.lang.Error from label025 to label027 with label200;
        catch java.lang.Error from label028 to label031 with label200;
        catch java.lang.Error from label032 to label037 with label200;
        catch java.lang.Error from label038 to label039 with label200;
        catch java.lang.Error from label040 to label042 with label200;
        catch java.lang.Error from label043 to label045 with label200;
        catch java.lang.Error from label046 to label048 with label200;
        catch java.lang.Error from label049 to label053 with label200;
        catch java.lang.Error from label053 to label059 with label200;
        catch java.lang.Error from label060 to label065 with label200;
        catch java.lang.Error from label066 to label068 with label200;
        catch java.lang.Error from label069 to label072 with label200;
        catch java.lang.Error from label073 to label074 with label200;
        catch java.lang.Error from label075 to label077 with label200;
        catch java.lang.Error from label078 to label080 with label200;
        catch java.security.InvalidKeyException from label026 to label027 with label197;
        catch java.security.InvalidKeyException from label029 to label030 with label197;
        catch java.security.InvalidKeyException from label033 to label034 with label197;
        catch java.security.InvalidKeyException from label035 to label036 with label197;
        catch java.security.InvalidKeyException from label040 to label041 with label197;
        catch java.security.InvalidKeyException from label043 to label044 with label197;
        catch java.security.InvalidKeyException from label046 to label047 with label197;
        catch java.security.InvalidKeyException from label050 to label051 with label197;
        catch java.security.InvalidKeyException from label052 to label053 with label197;
        catch java.security.InvalidKeyException from label054 to label055 with label197;
        catch java.security.InvalidKeyException from label056 to label057 with label197;
        catch java.security.InvalidKeyException from label058 to label059 with label197;
        catch java.security.InvalidKeyException from label061 to label062 with label197;
        catch java.security.InvalidKeyException from label063 to label064 with label197;
        catch java.security.InvalidKeyException from label067 to label068 with label197;
        catch java.security.InvalidKeyException from label070 to label072 with label197;
        catch java.security.InvalidKeyException from label076 to label077 with label197;
        catch java.security.InvalidKeyException from label079 to label080 with label197;
        catch java.security.NoSuchAlgorithmException from label026 to label027 with label194;
        catch java.security.NoSuchAlgorithmException from label029 to label030 with label194;
        catch java.security.NoSuchAlgorithmException from label033 to label034 with label194;
        catch java.security.NoSuchAlgorithmException from label035 to label036 with label194;
        catch java.security.NoSuchAlgorithmException from label040 to label041 with label194;
        catch java.security.NoSuchAlgorithmException from label043 to label044 with label194;
        catch java.security.NoSuchAlgorithmException from label046 to label047 with label194;
        catch java.security.NoSuchAlgorithmException from label050 to label051 with label194;
        catch java.security.NoSuchAlgorithmException from label052 to label053 with label194;
        catch java.security.NoSuchAlgorithmException from label054 to label055 with label194;
        catch java.security.NoSuchAlgorithmException from label056 to label057 with label194;
        catch java.security.NoSuchAlgorithmException from label058 to label059 with label194;
        catch java.security.NoSuchAlgorithmException from label061 to label062 with label194;
        catch java.security.NoSuchAlgorithmException from label063 to label064 with label194;
        catch java.security.NoSuchAlgorithmException from label067 to label068 with label194;
        catch java.security.NoSuchAlgorithmException from label070 to label072 with label194;
        catch java.security.NoSuchAlgorithmException from label076 to label077 with label194;
        catch java.security.NoSuchAlgorithmException from label079 to label080 with label194;
        catch javax.crypto.NoSuchPaddingException from label026 to label027 with label191;
        catch javax.crypto.NoSuchPaddingException from label029 to label030 with label191;
        catch javax.crypto.NoSuchPaddingException from label033 to label034 with label191;
        catch javax.crypto.NoSuchPaddingException from label035 to label036 with label191;
        catch javax.crypto.NoSuchPaddingException from label040 to label041 with label191;
        catch javax.crypto.NoSuchPaddingException from label043 to label044 with label191;
        catch javax.crypto.NoSuchPaddingException from label046 to label047 with label191;
        catch javax.crypto.NoSuchPaddingException from label050 to label051 with label191;
        catch javax.crypto.NoSuchPaddingException from label052 to label053 with label191;
        catch javax.crypto.NoSuchPaddingException from label054 to label055 with label191;
        catch javax.crypto.NoSuchPaddingException from label056 to label057 with label191;
        catch javax.crypto.NoSuchPaddingException from label058 to label059 with label191;
        catch javax.crypto.NoSuchPaddingException from label061 to label062 with label191;
        catch javax.crypto.NoSuchPaddingException from label063 to label064 with label191;
        catch javax.crypto.NoSuchPaddingException from label067 to label068 with label191;
        catch javax.crypto.NoSuchPaddingException from label070 to label072 with label191;
        catch javax.crypto.NoSuchPaddingException from label076 to label077 with label191;
        catch javax.crypto.NoSuchPaddingException from label079 to label080 with label191;
        catch java.lang.Throwable from label026 to label027 with label188;
        catch java.lang.Throwable from label029 to label030 with label188;
        catch java.lang.Throwable from label033 to label034 with label188;
        catch java.lang.Throwable from label035 to label036 with label188;
        catch java.lang.Throwable from label040 to label041 with label188;
        catch java.lang.Throwable from label043 to label044 with label188;
        catch java.lang.Throwable from label046 to label047 with label188;
        catch java.lang.Throwable from label050 to label051 with label188;
        catch java.lang.Throwable from label052 to label053 with label188;
        catch java.lang.Throwable from label054 to label055 with label188;
        catch java.lang.Throwable from label056 to label057 with label188;
        catch java.lang.Throwable from label058 to label059 with label188;
        catch java.lang.Throwable from label061 to label062 with label188;
        catch java.lang.Throwable from label063 to label064 with label188;
        catch java.lang.Throwable from label067 to label068 with label188;
        catch java.lang.Throwable from label070 to label072 with label188;
        catch java.lang.Throwable from label076 to label077 with label188;
        catch java.lang.Throwable from label079 to label080 with label188;
        catch java.io.IOException from label081 to label082 with label182;
        catch java.lang.Throwable from label084 to label085 with label216;
        catch java.io.IOException from label086 to label087 with label088;
        catch java.lang.Throwable from label086 to label087 with label091;
        catch java.lang.Throwable from label089 to label090 with label091;
        catch java.io.StreamCorruptedException from label092 to label093 with label093;
        catch java.io.FileNotFoundException from label092 to label093 with label109;
        catch java.io.IOException from label092 to label093 with label120;
        catch java.lang.ClassNotFoundException from label092 to label093 with label131;
        catch java.lang.RuntimeException from label092 to label093 with label142;
        catch java.lang.Error from label092 to label093 with label153;
        catch java.security.InvalidKeyException from label092 to label093 with label159;
        catch java.security.NoSuchAlgorithmException from label092 to label093 with label165;
        catch javax.crypto.NoSuchPaddingException from label092 to label093 with label171;
        catch java.lang.Throwable from label092 to label093 with label177;
        catch java.lang.Throwable from label094 to label095 with label189;
        catch java.io.IOException from label096 to label097 with label098;
        catch java.lang.Throwable from label100 to label101 with label115;
        catch java.io.IOException from label102 to label103 with label104;
        catch java.lang.Throwable from label102 to label103 with label107;
        catch java.lang.Throwable from label105 to label106 with label107;
        catch java.io.StreamCorruptedException from label108 to label109 with label093;
        catch java.io.FileNotFoundException from label108 to label109 with label109;
        catch java.io.IOException from label108 to label109 with label120;
        catch java.lang.ClassNotFoundException from label108 to label109 with label131;
        catch java.lang.RuntimeException from label108 to label109 with label142;
        catch java.lang.Error from label108 to label109 with label153;
        catch java.security.InvalidKeyException from label108 to label109 with label159;
        catch java.security.NoSuchAlgorithmException from label108 to label109 with label165;
        catch javax.crypto.NoSuchPaddingException from label108 to label109 with label171;
        catch java.lang.Throwable from label108 to label109 with label177;
        catch java.lang.Throwable from label110 to label111 with label188;
        catch java.io.IOException from label112 to label113 with label114;
        catch java.io.IOException from label117 to label118 with label126;
        catch java.lang.Throwable from label117 to label118 with label129;
        catch java.io.StreamCorruptedException from label119 to label120 with label093;
        catch java.io.FileNotFoundException from label119 to label120 with label109;
        catch java.io.IOException from label119 to label120 with label120;
        catch java.lang.ClassNotFoundException from label119 to label120 with label131;
        catch java.lang.RuntimeException from label119 to label120 with label142;
        catch java.lang.Error from label119 to label120 with label153;
        catch java.security.InvalidKeyException from label119 to label120 with label159;
        catch java.security.NoSuchAlgorithmException from label119 to label120 with label165;
        catch javax.crypto.NoSuchPaddingException from label119 to label120 with label171;
        catch java.lang.Throwable from label119 to label120 with label177;
        catch java.lang.Throwable from label121 to label122 with label188;
        catch java.io.IOException from label123 to label124 with label125;
        catch java.lang.Throwable from label127 to label128 with label129;
        catch java.io.StreamCorruptedException from label130 to label131 with label093;
        catch java.io.FileNotFoundException from label130 to label131 with label109;
        catch java.io.IOException from label130 to label131 with label120;
        catch java.lang.ClassNotFoundException from label130 to label131 with label131;
        catch java.lang.RuntimeException from label130 to label131 with label142;
        catch java.lang.Error from label130 to label131 with label153;
        catch java.security.InvalidKeyException from label130 to label131 with label159;
        catch java.security.NoSuchAlgorithmException from label130 to label131 with label165;
        catch javax.crypto.NoSuchPaddingException from label130 to label131 with label171;
        catch java.lang.Throwable from label130 to label131 with label177;
        catch java.lang.Throwable from label132 to label133 with label188;
        catch java.io.IOException from label134 to label135 with label136;
        catch java.lang.Throwable from label138 to label139 with label140;
        catch java.io.StreamCorruptedException from label141 to label142 with label093;
        catch java.io.FileNotFoundException from label141 to label142 with label109;
        catch java.io.IOException from label141 to label142 with label120;
        catch java.lang.ClassNotFoundException from label141 to label142 with label131;
        catch java.lang.RuntimeException from label141 to label142 with label142;
        catch java.lang.Error from label141 to label142 with label153;
        catch java.security.InvalidKeyException from label141 to label142 with label159;
        catch java.security.NoSuchAlgorithmException from label141 to label142 with label165;
        catch javax.crypto.NoSuchPaddingException from label141 to label142 with label171;
        catch java.lang.Throwable from label141 to label142 with label177;
        catch java.lang.Throwable from label143 to label144 with label188;
        catch java.io.IOException from label145 to label146 with label147;
        catch java.io.StreamCorruptedException from label148 to label149 with label152;
        catch java.io.StreamCorruptedException from label150 to label151 with label152;
        catch java.io.FileNotFoundException from label148 to label149 with label212;
        catch java.io.FileNotFoundException from label150 to label151 with label212;
        catch java.io.IOException from label148 to label149 with label209;
        catch java.io.IOException from label150 to label151 with label209;
        catch java.lang.ClassNotFoundException from label148 to label149 with label206;
        catch java.lang.ClassNotFoundException from label150 to label151 with label206;
        catch java.lang.RuntimeException from label148 to label151 with label203;
        catch java.lang.Error from label148 to label151 with label200;
        catch java.security.InvalidKeyException from label148 to label149 with label197;
        catch java.security.InvalidKeyException from label150 to label151 with label197;
        catch java.security.NoSuchAlgorithmException from label148 to label149 with label194;
        catch java.security.NoSuchAlgorithmException from label150 to label151 with label194;
        catch javax.crypto.NoSuchPaddingException from label148 to label149 with label191;
        catch javax.crypto.NoSuchPaddingException from label150 to label151 with label191;
        catch java.lang.Throwable from label148 to label149 with label188;
        catch java.lang.Throwable from label150 to label151 with label188;
        catch java.lang.Throwable from label154 to label155 with label188;
        catch java.io.IOException from label156 to label157 with label158;
        catch java.lang.Throwable from label160 to label161 with label188;
        catch java.io.IOException from label162 to label163 with label164;
        catch java.lang.Throwable from label166 to label167 with label188;
        catch java.io.IOException from label168 to label169 with label170;
        catch java.lang.Throwable from label172 to label173 with label188;
        catch java.io.IOException from label174 to label175 with label176;
        catch java.io.IOException from label179 to label180 with label181;
    }

    private static java.io.File b(java.io.File)
    {
        java.io.File $r0, $r1;
        long $l0;
        java.lang.String $r2;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.io.File;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label1:
        $r1 = new java.io.File;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, $r2);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        return $r1;

     label2:
        $l0 = $l0 - 1L;

        goto label1;
    }

    private void b()
    {
        com.cootek.usage.v $r0;
        com.cootek.usage.AbsUsageAssist $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.app.AlarmManager $r4;
        android.content.Intent $r5;
        java.lang.String $r6;
        android.app.PendingIntent $r7;
        long $l0;

        $r0 := @this: com.cootek.usage.v;

        $r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r2 = virtualinvoke $r1.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r4 = (android.app.AlarmManager) $r3;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("com.cootek.usage.alarm_operation");

        $r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r2 = virtualinvoke $r1.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $r6 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r6);

        $r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r2 = virtualinvoke $r1.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $r7 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r2, 0, $r5, 134217728);

        $r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $l0 = virtualinvoke $r1.<com.cootek.usage.AbsUsageAssist: long getAlarmInterval()>();

        virtualinvoke $r4.<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>(1, 0L, $l0, $r7);

        return;
    }

    static void b(com.cootek.usage.v)
    {
        com.cootek.usage.v $r0;
        java.util.ArrayList $r1, $r4;
        com.cootek.usage.AbsUsageAssist $r2;
        android.content.Context $r3;
        boolean $z0;
        com.cootek.usage.g $r5;
        long $l0, $l3, $l4;
        int $i1, $i2, varReplacer5798, varReplacer5800;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, varReplacer5796, varReplacer5797, varReplacer5799;
        com.cootek.usage.p $r8;
        java.util.Iterator $r9;
        com.cootek.usage.r $r10;
        byte $b5;
        com.cootek.usage.m $r11;
        com.cootek.usage.UsageData $r12;
        java.lang.Object $r13;

        nop;

        $r0 := @parameter0: com.cootek.usage.v;

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $z0 = staticinvoke <com.cootek.usage.g: boolean a(android.content.Context)>($r3);

        if $z0 == 0 goto label8;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r5 = $r0.<com.cootek.usage.v: com.cootek.usage.g i>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = 0;

     label1:
        $r5 = $r0.<com.cootek.usage.v: com.cootek.usage.g i>;

        if $i1 < 5 goto label4;

        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

        if $z0 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        varReplacer5797 = "sendInfoData list size ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5797);

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5796 = "Usage/UsageProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5796, $r7);

     label2:
        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        $r8 = new com.cootek.usage.p;

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        varReplacer5798 = 1;

        varReplacer5799 = "noah_info";

        varReplacer5800 = 1;

        specialinvoke $r8.<com.cootek.usage.p: void <init>(com.cootek.usage.AbsUsageAssist,boolean,java.lang.String,java.util.ArrayList,boolean)>($r2, varReplacer5798, varReplacer5799, $r4, varReplacer5798);

        $z0 = virtualinvoke $r8.<com.cootek.usage.p: boolean a()>();

        if $z0 == 0 goto label8;

        $r9 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label7;

        return;

     label4:
        $r5 = $r0.<com.cootek.usage.v: com.cootek.usage.g i>;

        $r7 = staticinvoke <com.cootek.usage.g: java.lang.String a(int)>($i1);

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $i2 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getInfoInterval(int)>($i1);

        $l3 = (long) $i2;

        $l3 = $l3 * 86400000L;

        $r10 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $l4 = virtualinvoke $r10.<com.cootek.usage.r: long b(java.lang.String)>($r7);

        $b5 = $l3 cmp 0L;

        if $b5 < 0 goto label5;

        $l3 = $l3 + $l4;

        $b5 = $l3 cmp $l0;

        if $b5 > 0 goto label5;

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: boolean canUploadInfo(int)>($i1);

        if $z0 == 0 goto label5;

        $r5 = $r0.<com.cootek.usage.v: com.cootek.usage.g i>;

        $r11 = virtualinvoke $r5.<com.cootek.usage.g: com.cootek.usage.m b(int)>($i1);

        $z0 = $r11.<com.cootek.usage.m: boolean d>;

        if $z0 == 0 goto label6;

        $r12 = $r11.<com.cootek.usage.m: com.cootek.usage.UsageData a>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: void onInfoProcessFailed(int)>($i1);

        goto label5;

     label7:
        $r13 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (com.cootek.usage.m) $r13;

        $r10 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $r7 = $r11.<com.cootek.usage.m: java.lang.String c>;

        virtualinvoke $r10.<com.cootek.usage.r: void b(java.lang.String,long)>($r7, $l0);

        $r10 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $r7 = $r11.<com.cootek.usage.m: java.lang.String c>;

        $l3 = $r11.<com.cootek.usage.m: long b>;

        virtualinvoke $r10.<com.cootek.usage.r: void c(java.lang.String,long)>($r7, $l3);

        goto label3;

     label8:
        return;
    }

    static com.cootek.usage.AbsUsageAssist c(com.cootek.usage.v)
    {
        com.cootek.usage.v $r0;
        com.cootek.usage.AbsUsageAssist r1;

        nop;

        $r0 := @parameter0: com.cootek.usage.v;

        r1 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        return r1;
    }

    private void c()
    {
        com.cootek.usage.v $r0;
        java.util.ArrayList $r1, $r2, $r7, $r8;
        int $i0, $i2, $i3;
        com.cootek.usage.AbsUsageAssist $r3;
        android.content.Context $r4;
        boolean $z0, $z1, $z2;
        long $l1, $l4, $l5, $l6;
        java.io.File $r5;
        java.io.File[] $r6;
        java.lang.String $r9, $r13;
        com.cootek.usage.s $r10;
        com.cootek.usage.u $r11;
        java.lang.StringBuilder $r12;
        com.cootek.usage.r $r14;
        byte $b7;

        $r0 := @this: com.cootek.usage.v;

        $r3 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r4 = virtualinvoke $r3.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $z0 = staticinvoke <com.cootek.usage.g: boolean a(android.content.Context)>($r4);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r5 = virtualinvoke $r3.<com.cootek.usage.AbsUsageAssist: java.io.File getFolder()>();

        $r6 = virtualinvoke $r5.<java.io.File: java.io.File[] listFiles()>();

        $i2 = 0;

     label01:
        if $i2 < 2 goto label02;

        return;

     label02:
        if $i2 != 0 goto label07;

        $z1 = 1;

     label03:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r6;

        $i3 = 0;

     label04:
        if $i3 < $i0 goto label08;

        $z2 = virtualinvoke $r7.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label05;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r8.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r1);

        virtualinvoke $r7.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r2);

        specialinvoke $r0.<com.cootek.usage.v: void a(boolean,java.util.ArrayList,java.util.ArrayList,boolean)>(1, $r8, $r7, $z1);

     label05:
        $z2 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z2 != 0 goto label06;

        specialinvoke $r0.<com.cootek.usage.v: void a(boolean,java.util.ArrayList,java.util.ArrayList,boolean)>(0, $r1, $r2, $z1);

     label06:
        $i2 = $i2 + 1;

        goto label01;

     label07:
        $z1 = 0;

        goto label03;

     label08:
        $r5 = $r6[$i3];

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getName()>();

        $r10 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $r11 = virtualinvoke $r10.<com.cootek.usage.s: com.cootek.usage.u c(java.lang.String)>($r9);

        $z2 = $r11.<com.cootek.usage.u: boolean d>;

        if $z2 != $z1 goto label10;

        $z2 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

        if $z2 == 0 goto label09;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("folder: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", strategy: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", $r13);

     label09:
        $r14 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $r13 = $r11.<com.cootek.usage.u: java.lang.String a>;

        $l4 = virtualinvoke $r14.<com.cootek.usage.r: long a(java.lang.String)>($r13);

        $r14 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $r13 = $r11.<com.cootek.usage.u: java.lang.String a>;

        $l5 = virtualinvoke $r14.<com.cootek.usage.r: long a(java.lang.String)>($r13);

        $l6 = $r11.<com.cootek.usage.u: long c>;

        $b7 = $l6 cmp 0L;

        if $b7 < 0 goto label11;

        $l4 = $l1 - $l4;

        $l6 = $r11.<com.cootek.usage.u: long c>;

        $b7 = $l4 cmp $l6;

        if $b7 <= 0 goto label11;

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("folder: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" may send by mobile");

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", $r9);

     label10:
        $i3 = $i3 + 1;

        goto label04;

     label11:
        $l4 = $r11.<com.cootek.usage.u: long b>;

        $b7 = $l4 cmp 0L;

        if $b7 < 0 goto label10;

        if $z0 == 0 goto label10;

        $l5 = $l1 - $l5;

        $l4 = $r11.<com.cootek.usage.u: long b>;

        $b7 = $l5 cmp $l4;

        if $b7 <= 0 goto label10;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("folder: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" may send by wifi");

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", $r9);

        goto label10;
    }

    private void c(java.io.File)
    {
        com.cootek.usage.v $r0;
        java.io.File $r1, $r5, $r8;
        com.cootek.usage.AbsUsageAssist $r2;
        android.content.Context $r3;
        java.lang.String $r4, $r7;
        boolean $z0;
        java.lang.StringBuilder $r6, r11;
        com.cootek.usage.s $r9;
        java.lang.Throwable $r10;
        java.io.IOException r12;

        $r0 := @this: com.cootek.usage.v;

        $r1 := @parameter0: java.io.File;

        if $r1 != null goto label01;

        return;

     label01:
        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r4 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getStrategyFileName()>();

        $r5 = virtualinvoke $r3.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>($r4);

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: boolean isDebugMode()>();

        if $z0 == 0 goto label02;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Old strategy file path: ");

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", $r4);

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("New strategy file path: ");

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", $r4);

     label02:
        $r4 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label11;

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r4 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getStrategyFileName()>();

        if $r4 != null goto label09;

        $r4 = null;

     label03:
        $r8 = virtualinvoke $r3.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>($r4);

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label05;

     label04:
        virtualinvoke $r8.<java.io.File: boolean createNewFile()>();

     label05:
        staticinvoke <com.cootek.usage.f: void a(java.io.File,java.io.File)>($r5, $r8);

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: boolean isDebugMode()>();

        if $z0 == 0 goto label06;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", "strategy file: backup succeed.");

     label06:
        staticinvoke <com.cootek.usage.f: void a(java.io.File,java.io.File)>($r1, $r5);

        $r9 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        $z0 = virtualinvoke $r9.<com.cootek.usage.s: boolean b()>();

        if $z0 != 0 goto label08;

        staticinvoke <com.cootek.usage.f: void a(java.io.File,java.io.File)>($r8, $r5);

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: boolean isDebugMode()>();

        if $z0 == 0 goto label07;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", "Update the strategy failed, revert strategy.");

     label07:
        $r9 = staticinvoke <com.cootek.usage.s: com.cootek.usage.s a()>();

        virtualinvoke $r9.<com.cootek.usage.s: boolean b()>();

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: void onStrategyUpdate(boolean)>(0);

     label08:
        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: void onStrategyUpdate(boolean)>(1);

        return;

     label09:
        r11 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bak");

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label10:
        $r10 := @caughtexception;

        r12 = (java.io.IOException) $r10;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

        goto label05;

     label11:
        return;

        catch java.io.IOException from label04 to label05 with label10;
    }

    private java.lang.String d()
    {
        com.cootek.usage.v $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0;
        char $c1;

        $r0 := @this: com.cootek.usage.v;

        $r2 = $r0.<com.cootek.usage.v: java.lang.String j>;

        if $r2 != null goto label2;

        $r2 = staticinvoke <com.cootek.usage.AbsUsageAssist: java.lang.String a()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 / 3;

        $i0 = $i0 << 1;

        $c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i0);

        $i0 = 0;

     label1:
        if $i0 < 1024 goto label3;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<com.cootek.usage.v: java.lang.String j> = $r2;

     label2:
        $r2 = $r0.<com.cootek.usage.v: java.lang.String j>;

        return $r2;

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 + 1;

        goto label1;
    }

    private void e()
    {
        com.cootek.usage.v $r0;
        java.util.ArrayList $r1, $r4;
        com.cootek.usage.AbsUsageAssist $r2;
        android.content.Context $r3;
        boolean $z0;
        long $l0, $l2, $l4;
        int $i1, $i3;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        com.cootek.usage.p $r7;
        java.util.Iterator $r8;
        java.lang.Object $r9;
        com.cootek.usage.m $r10;
        com.cootek.usage.r $r11;
        byte $b5;
        com.cootek.usage.g $r12;
        com.cootek.usage.UsageData $r13;

        $r0 := @this: com.cootek.usage.v;

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $z0 = staticinvoke <com.cootek.usage.g: boolean a(android.content.Context)>($r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i1 = 0;

     label2:
        if $i1 < 5 goto label5;

        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

        if $z0 == 0 goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("sendInfoData list size ");

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/UsageProcessor", $r6);

     label3:
        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label8;

        $r7 = new com.cootek.usage.p;

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        specialinvoke $r7.<com.cootek.usage.p: void <init>(com.cootek.usage.AbsUsageAssist,boolean,java.lang.String,java.util.ArrayList,boolean)>($r2, 1, "noah_info", $r4, 1);

        $z0 = virtualinvoke $r7.<com.cootek.usage.p: boolean a()>();

        if $z0 == 0 goto label8;

        $r8 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.cootek.usage.m) $r9;

        $r11 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $r6 = $r10.<com.cootek.usage.m: java.lang.String c>;

        virtualinvoke $r11.<com.cootek.usage.r: void b(java.lang.String,long)>($r6, $l0);

        $r11 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $r6 = $r10.<com.cootek.usage.m: java.lang.String c>;

        $l2 = $r10.<com.cootek.usage.m: long b>;

        virtualinvoke $r11.<com.cootek.usage.r: void c(java.lang.String,long)>($r6, $l2);

        goto label4;

     label5:
        $r6 = staticinvoke <com.cootek.usage.g: java.lang.String a(int)>($i1);

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $i3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getInfoInterval(int)>($i1);

        $l2 = (long) $i3;

        $l2 = $l2 * 86400000L;

        $r11 = staticinvoke <com.cootek.usage.r: com.cootek.usage.r a()>();

        $l4 = virtualinvoke $r11.<com.cootek.usage.r: long b(java.lang.String)>($r6);

        $b5 = $l2 cmp 0L;

        if $b5 < 0 goto label6;

        $l2 = $l2 + $l4;

        $b5 = $l2 cmp $l0;

        if $b5 > 0 goto label6;

        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: boolean canUploadInfo(int)>($i1);

        if $z0 == 0 goto label6;

        $r12 = $r0.<com.cootek.usage.v: com.cootek.usage.g i>;

        $r10 = virtualinvoke $r12.<com.cootek.usage.g: com.cootek.usage.m b(int)>($i1);

        $z0 = $r10.<com.cootek.usage.m: boolean d>;

        if $z0 == 0 goto label7;

        $r13 = $r10.<com.cootek.usage.m: com.cootek.usage.UsageData a>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label6:
        $i1 = $i1 + 1;

        goto label2;

     label7:
        $r2 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: void onInfoProcessFailed(int)>($i1);

        goto label6;

     label8:
        return;
    }

    final void a()
    {
        com.cootek.usage.v $r0;
        android.os.Handler $r1;
        android.os.Message $r2;
        com.cootek.usage.AbsUsageAssist $r3;
        boolean $z0;
        java.util.Random $r4;
        long $l0;
        int $i1, varReplacer431;

        nop;

        $r0 := @this: com.cootek.usage.v;

        $r1 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        varReplacer431 = 3;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(varReplacer431);

        $r3 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z0 = virtualinvoke $r3.<com.cootek.usage.AbsUsageAssist: boolean isDebugMode()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

        return;

     label1:
        $r1 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        $r4 = new java.util.Random;

        specialinvoke $r4.<java.util.Random: void <init>()>();

        $r3 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $l0 = 3600000L;

        $i1 = (int) 3600000L;

        $i1 = virtualinvoke $r4.<java.util.Random: int nextInt(int)>($i1);

        $l0 = (long) $i1;

        virtualinvoke $r1.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r2, $l0);

        return;
    }

    final void a(java.io.File)
    {
        com.cootek.usage.v $r0;
        java.io.File $r1;
        android.os.Message $r2;
        android.os.Handler $r3;

        $r0 := @this: com.cootek.usage.v;

        $r1 := @parameter0: java.io.File;

        $r3 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        $r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, $r1);

        $r3 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

        return;
    }

    final void a(java.lang.String, java.lang.String, java.util.Map)
    {
        com.cootek.usage.v $r0;
        java.lang.String $r1, $r2;
        java.util.Map $r3;
        com.cootek.usage.w $r4;
        com.cootek.usage.AbsUsageAssist $r5;
        int $i0, varReplacer429;
        java.lang.Integer $r6;
        android.os.Handler $r7;
        android.os.Message $r8;

        nop;

        $r0 := @this: com.cootek.usage.v;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.Map;

        $r5 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $i0 = -1;

        goto label1;

     label1:
        $r7 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        $r4 = new com.cootek.usage.w;

        specialinvoke $r4.<com.cootek.usage.w: void <init>(com.cootek.usage.v,java.lang.String,java.lang.String,java.lang.Object)>($r0, $r1, $r2, $r3);

        varReplacer429 = 1;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(varReplacer429, $r4);

        $r7 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>($r8);

        return;
    }

    final void a(boolean)
    {
        com.cootek.usage.v $r0;
        boolean $z0, $z1;
        android.os.Handler $r1;
        android.os.Message $r2;
        com.cootek.usage.AbsUsageAssist $r3;
        java.util.Random $r4;
        long $l0;
        int $i1, varReplacer430;

        nop;

        $r0 := @this: com.cootek.usage.v;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        varReplacer430 = 0;

        $r2 = virtualinvoke $r1.<android.os.Handler: android.os.Message obtainMessage(int)>(varReplacer430);

        $r3 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $z1 = virtualinvoke $r3.<com.cootek.usage.AbsUsageAssist: boolean isDebugMode()>();

        if $z1 != 0 goto label1;

        if $z0 == 0 goto label2;

     label1:
        $r1 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        virtualinvoke $r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r2);

        return;

     label2:
        $r1 = $r0.<com.cootek.usage.v: android.os.Handler g>;

        $r4 = new java.util.Random;

        specialinvoke $r4.<java.util.Random: void <init>()>();

        $r3 = $r0.<com.cootek.usage.v: com.cootek.usage.AbsUsageAssist e>;

        $l0 = 3600000L;

        $i1 = (int) 3600000L;

        $i1 = virtualinvoke $r4.<java.util.Random: int nextInt(int)>($i1);

        $l0 = (long) $i1;

        virtualinvoke $r1.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r2, $l0);

        return;
    }
}
