public class com.dionhardy.lib.utility.FileCache extends java.lang.Object
{
    public static java.lang.String ALT_SDCARD_FOLDER;
    public static java.lang.String ALT_SDCARD_PATH;
    public static int CACHE_MEMORY_LIMIT;
    public static java.lang.String CACHE_PATH;
    public static int CACHE_TIMEOUT_SECS;
    public static final java.lang.String CAMERA_PATH;
    private static com.dionhardy.lib.utility.FileCache _instance;
    private java.util.HashMap _cache;
    private java.util.HashMap _callbacks;
    private java.util.ArrayList _list;
    private final java.lang.Object _lock;

    static void <clinit>()
    {
        null_type varReplacer1170;
        java.lang.String varReplacer1171, varReplacer1173, varReplacer1175;
        int varReplacer1172, varReplacer1174;

        nop;

        varReplacer1175 = "";

        <com.dionhardy.lib.utility.FileCache: java.lang.String ALT_SDCARD_PATH> = varReplacer1175;

        varReplacer1173 = "";

        <com.dionhardy.lib.utility.FileCache: java.lang.String ALT_SDCARD_FOLDER> = varReplacer1173;

        varReplacer1171 = "";

        <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH> = varReplacer1171;

        varReplacer1172 = 0;

        <com.dionhardy.lib.utility.FileCache: int CACHE_TIMEOUT_SECS> = varReplacer1172;

        varReplacer1174 = 0;

        <com.dionhardy.lib.utility.FileCache: int CACHE_MEMORY_LIMIT> = varReplacer1174;

        varReplacer1170 = null;

        <com.dionhardy.lib.utility.FileCache: com.dionhardy.lib.utility.FileCache _instance> = varReplacer1170;

        return;
    }

    private void <init>()
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        java.util.HashMap $r3;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        $r0.<com.dionhardy.lib.utility.FileCache: java.lang.Object _lock> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.dionhardy.lib.utility.FileCache: java.util.ArrayList _list> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _cache> = $r3;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _callbacks> = $r3;

        return;
    }

    static java.lang.Object access$0(com.dionhardy.lib.utility.FileCache)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.dionhardy.lib.utility.FileCache;

        r1 = $r0.<com.dionhardy.lib.utility.FileCache: java.lang.Object _lock>;

        return r1;
    }

    static java.util.HashMap access$1(com.dionhardy.lib.utility.FileCache)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.util.HashMap r1;

        $r0 := @parameter0: com.dionhardy.lib.utility.FileCache;

        r1 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _callbacks>;

        return r1;
    }

    public static boolean appendFileBinary(java.lang.String, byte[], int)
    {
        java.lang.String $r0, varReplacer12743, varReplacer12744, varReplacer12745, varReplacer12749;
        byte[] $r1;
        int $i0, varReplacer12741, varReplacer12742, varReplacer12746, varReplacer12747, varReplacer12748;
        java.lang.Exception $r2;
        java.io.File $r3, $r4;
        boolean $z0, $z1;
        java.io.FileOutputStream $r5;
        java.lang.StringBuilder $r6;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r3 = new java.io.File;

     label01:
        varReplacer12743 = "file://";

        varReplacer12744 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer12743, varReplacer12744);

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label02:
        if $z0 != 0 goto label04;

     label03:
        $r4 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

     label04:
        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label05:
        $z1 = $z0;

        if $z0 != 0 goto label08;

     label06:
        $z0 = virtualinvoke $r3.<java.io.File: boolean createNewFile()>();

     label07:
        $z1 = $z0;

     label08:
        if $z1 == 0 goto label12;

        $r5 = new java.io.FileOutputStream;

     label09:
        varReplacer12741 = 1;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>($r3, varReplacer12741);

        varReplacer12747 = 0;

        virtualinvoke $r5.<java.io.FileOutputStream: void write(byte[],int,int)>($r1, varReplacer12747, $i0);

        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

     label10:
        varReplacer12748 = 1;

        return varReplacer12748;

     label11:
        $r2 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        varReplacer12745 = "Error appending binary file: ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer12745);

        $r0 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer12749 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailedNotToFile(java.lang.String,java.lang.String)>(varReplacer12749, $r0);

        varReplacer12746 = 0;

        return varReplacer12746;

     label12:
        varReplacer12742 = 0;

        return varReplacer12742;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label05 with label11;
        catch java.lang.Exception from label06 to label07 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static boolean appendFileText(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer1177, varReplacer1180, varReplacer1181, varReplacer1183;
        java.lang.Exception $r2;
        java.io.File $r3, $r4;
        boolean $z0, $z1;
        java.io.FileWriter $r5;
        java.io.BufferedWriter $r6;
        java.lang.StringBuilder $r7;
        int varReplacer1176, varReplacer1178, varReplacer1179, varReplacer1182;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = new java.io.File;

     label01:
        varReplacer1180 = "file://";

        varReplacer1181 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1180, varReplacer1181);

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label02:
        if $z0 != 0 goto label04;

     label03:
        $r4 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r4.<java.io.File: boolean mkdirs()>();

     label04:
        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label05:
        $z1 = $z0;

        if $z0 != 0 goto label08;

     label06:
        $z0 = virtualinvoke $r3.<java.io.File: boolean createNewFile()>();

     label07:
        $z1 = $z0;

     label08:
        if $z1 == 0 goto label14;

        $r5 = new java.io.FileWriter;

     label09:
        varReplacer1182 = 1;

        specialinvoke $r5.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r3, varReplacer1182);

     label10:
        $r6 = new java.io.BufferedWriter;

     label11:
        specialinvoke $r6.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r5);

        virtualinvoke $r6.<java.io.BufferedWriter: java.io.Writer append(java.lang.CharSequence)>($r1);

        virtualinvoke $r6.<java.io.BufferedWriter: void flush()>();

        virtualinvoke $r6.<java.io.BufferedWriter: void close()>();

        virtualinvoke $r5.<java.io.FileWriter: void close()>();

     label12:
        varReplacer1176 = 1;

        return varReplacer1176;

     label13:
        $r2 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        varReplacer1177 = "Error appending text file: ";

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1177);

        $r0 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1183 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailedNotToFile(java.lang.String,java.lang.String)>(varReplacer1183, $r0);

        varReplacer1179 = 0;

        return varReplacer1179;

     label14:
        varReplacer1178 = 0;

        return varReplacer1178;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    private static int calculateInSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        android.graphics.BitmapFactory$Options $r0;
        int $i0, $i1, $i2, $i3, varReplacer10370;
        float $f0, $f1;

        nop;

        $r0 := @parameter0: android.graphics.BitmapFactory$Options;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = $r0.<android.graphics.BitmapFactory$Options: int outHeight>;

        $i3 = $r0.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i2 > $i1 goto label1;

        if $i3 <= $i0 goto label3;

     label1:
        if $i3 <= $i2 goto label2;

        $f0 = (float) $i2;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;

     label2:
        $f0 = (float) $i3;

        $f1 = (float) $i0;

        $f0 = $f0 / $f1;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;

     label3:
        varReplacer10370 = 1;

        return varReplacer10370;
    }

    public static boolean canAccessCard()
    {
        java.lang.String $r0, varReplacer1238;
        boolean $z0;

        nop;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        varReplacer1238 = "mounted";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1238);

        return $z0;
    }

    public static boolean canWriteCard()
    {
        boolean $z0;
        java.io.File $r0;
        int varReplacer1208;

        nop;

        $z0 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean canAccessCard()>();

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $z0 = virtualinvoke $r0.<java.io.File: boolean canWrite()>();

        return $z0;

     label1:
        varReplacer1208 = 0;

        return varReplacer1208;
    }

    public static java.lang.Exception checkWritePath(java.lang.String)
    {
        java.lang.String $r0, $r1, $r3;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.Exception $r4;
        java.lang.Throwable $r5;

        $r1 := @parameter0: java.lang.String;

        $r0 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r0);

        if $z0 != 0 goto label01;

        $r2 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = <java.io.File: java.lang.String separator>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r0 = "test";

     label02:
        $r2 = new java.lang.StringBuilder;

     label03:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("test.txt");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean writeFileText(java.lang.String,java.lang.String)>($r3, "test");

     label04:
        if $z0 != 0 goto label08;

     label05:
        $r4 = new java.lang.Exception;

     label06:
        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot write file");

        throw $r4;

     label07:
        $r4 := @caughtexception;

        staticinvoke <com.dionhardy.lib.utility.FileCache: boolean deleteSingleFile(java.lang.String,java.lang.String)>($r1, "test.txt");

        return $r4;

     label08:
        $r2 = new java.lang.StringBuilder;

     label09:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("test.txt");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String loadFileText(java.lang.String)>($r3);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

     label10:
        if $z0 != 0 goto label14;

     label11:
        $r4 = new java.lang.Exception;

     label12:
        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("cannot read file");

        throw $r4;

     label13:
        $r5 := @caughtexception;

        staticinvoke <com.dionhardy.lib.utility.FileCache: boolean deleteSingleFile(java.lang.String,java.lang.String)>($r1, "test.txt");

        throw $r5;

     label14:
        $z0 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean deleteSingleFile(java.lang.String,java.lang.String)>($r1, "test.txt");

     label15:
        if $z0 != 0 goto label18;

     label16:
        $r4 = new java.lang.Exception;

     label17:
        specialinvoke $r4.<java.lang.Exception: void <init>(java.lang.String)>("Cannot delete file");

        throw $r4;

     label18:
        staticinvoke <com.dionhardy.lib.utility.FileCache: boolean deleteSingleFile(java.lang.String,java.lang.String)>($r1, "test.txt");

        return null;

        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label06 to label07 with label07;
        catch java.lang.Throwable from label02 to label04 with label13;
        catch java.lang.Throwable from label05 to label07 with label13;
        catch java.lang.Exception from label09 to label10 with label07;
        catch java.lang.Exception from label12 to label13 with label07;
        catch java.lang.Throwable from label08 to label10 with label13;
        catch java.lang.Throwable from label11 to label13 with label13;
        catch java.lang.Exception from label14 to label15 with label07;
        catch java.lang.Exception from label17 to label18 with label07;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.Throwable from label16 to label18 with label13;
    }

    private void cleanupCache()
    {
        com.dionhardy.lib.utility.FileCache $r0;
        int $i0;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $i0 = <com.dionhardy.lib.utility.FileCache: int CACHE_MEMORY_LIMIT>;

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void cleanupCache(int)>($i0);

        return;
    }

    private void cleanupCache(int)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        int $i0, $i1, varReplacer10374;
        java.lang.Object $r1, $r4;
        java.util.HashMap $r2;
        java.util.ArrayList $r3;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Throwable $r6;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $i0 := @parameter0: int;

        $r1 = $r0.<com.dionhardy.lib.utility.FileCache: java.lang.Object _lock>;

        entermonitor $r1;

     label1:
        $r2 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _cache>;

        $i1 = virtualinvoke $r2.<java.util.HashMap: int size()>();

     label2:
        if $i1 <= $i0 goto label3;

        if $i1 > 0 goto label5;

     label3:
        exitmonitor $r1;

     label4:
        return;

     label5:
        $r3 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.ArrayList _list>;

        varReplacer10374 = 0;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(varReplacer10374);

        $r5 = (java.lang.String) $r4;

        $r2 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _cache>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r5);

        if $z0 == 0 goto label6;

        $r2 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _cache>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r5);

     label6:
        $r3 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.ArrayList _list>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean contains(java.lang.Object)>($r5);

        if $z0 == 0 goto label7;

        $r3 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.ArrayList _list>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r5);

     label7:
        $i1 = $i1 + -1;

        goto label2;

     label8:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label4 with label8;
        catch java.lang.Throwable from label5 to label9 with label8;
    }

    public static boolean copyFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3;
        boolean $z0;
        int varReplacer10054;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        varReplacer10054 = 1;

        $z0 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean copyFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r0, $r1, $r2, $r3, varReplacer10054);

        return $z0;
    }

    public static boolean copyFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r0, $r1, $r2, $r8, varReplacer10063, varReplacer10065, varReplacer10066;
        boolean $z0, $z1;
        byte[] $r3;
        java.io.File $r4, $r6, $r11;
        java.io.FileInputStream $r5, $r9;
        java.io.FileOutputStream $r7, $r10;
        int $i0, varReplacer10058, varReplacer10059, varReplacer10060, varReplacer10061, varReplacer10062, varReplacer10064;
        long $l1;
        java.lang.Exception $r12;
        java.lang.StringBuilder $r13;
        java.lang.Throwable $r14, $r15, $r16, $r17, $r18, $r19;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r8 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        varReplacer10065 = ".";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer10065);

        if $z1 == 0 goto label01;

        varReplacer10058 = 1;

        return varReplacer10058;

     label01:
        if $r8 != null goto label02;

        $r8 = $r2;

     label02:
        $r9 = null;

        $r10 = null;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r2);

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r1, $r8);

        if $r6 == null goto label05;

     label03:
        $z1 = virtualinvoke $r6.<java.io.File: boolean exists()>();

     label04:
        if $z1 != 0 goto label08;

     label05:
        goto label06;

     label06:
        goto label07;

     label07:
        varReplacer10064 = 1;

        return varReplacer10064;

     label08:
        $z1 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label09:
        if $z1 == 0 goto label25;

     label10:
        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label11:
        $r5 = new java.io.FileInputStream;

     label12:
        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r6);

     label13:
        $r7 = new java.io.FileOutputStream;

     label14:
        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

     label15:
        $r3 = newarray (byte)[1024];

     label16:
        $i0 = virtualinvoke $r5.<java.io.FileInputStream: int read(byte[])>($r3);

     label17:
        if $i0 > 0 goto label34;

     label18:
        virtualinvoke $r7.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

     label19:
        $r10 = null;

        if $z0 == 0 goto label21;

     label20:
        $l1 = virtualinvoke $r6.<java.io.File: long lastModified()>();

        virtualinvoke $r4.<java.io.File: boolean setLastModified(long)>($l1);

     label21:
        goto label22;

     label22:
        if $r5 == null goto label51;

     label23:
        virtualinvoke $r5.<java.io.FileInputStream: void close()>();

     label24:
        varReplacer10062 = 1;

        return varReplacer10062;

     label25:
        $r11 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r11.<java.io.File: boolean mkdirs()>();

     label26:
        goto label11;

     label27:
        $r12 := @caughtexception;

     label28:
        $r13 = new java.lang.StringBuilder;

        varReplacer10066 = "Copy failed: ";

        specialinvoke $r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10066);

        $r0 = virtualinvoke $r12.<java.lang.Exception: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10063 = "FILE COPY";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer10063, $r0);

     label29:
        if $r10 == null goto label31;

     label30:
        virtualinvoke $r10.<java.io.FileOutputStream: void close()>();

     label31:
        if $r9 == null goto label33;

     label32:
        virtualinvoke $r9.<java.io.FileInputStream: void close()>();

     label33:
        varReplacer10061 = 0;

        return varReplacer10061;

     label34:
        varReplacer10060 = 0;

        virtualinvoke $r7.<java.io.FileOutputStream: void write(byte[],int,int)>($r3, varReplacer10060, $i0);

     label35:
        goto label16;

     label36:
        $r12 := @caughtexception;

        $r10 = $r7;

        $r9 = $r5;

        goto label28;

     label37:
        $r14 := @caughtexception;

     label38:
        if $r10 == null goto label40;

     label39:
        virtualinvoke $r10.<java.io.FileOutputStream: void close()>();

     label40:
        if $r9 == null goto label42;

     label41:
        virtualinvoke $r9.<java.io.FileInputStream: void close()>();

     label42:
        throw $r14;

     label43:
        $r15 := @caughtexception;

        goto label31;

     label44:
        $r16 := @caughtexception;

        goto label33;

     label45:
        $r17 := @caughtexception;

        goto label40;

     label46:
        $r18 := @caughtexception;

        goto label42;

     label47:
        $r19 := @caughtexception;

        goto label24;

     label48:
        $r14 := @caughtexception;

        $r9 = $r5;

        goto label38;

     label49:
        $r14 := @caughtexception;

        $r10 = $r7;

        $r9 = $r5;

        goto label38;

     label50:
        $r12 := @caughtexception;

        $r9 = $r5;

        goto label28;

     label51:
        varReplacer10059 = 1;

        return varReplacer10059;

        catch java.lang.Exception from label03 to label04 with label27;
        catch java.lang.Throwable from label03 to label04 with label37;
        catch java.lang.Exception from label08 to label09 with label27;
        catch java.lang.Exception from label10 to label11 with label27;
        catch java.lang.Exception from label12 to label13 with label27;
        catch java.lang.Throwable from label08 to label09 with label37;
        catch java.lang.Throwable from label10 to label13 with label37;
        catch java.lang.Exception from label14 to label15 with label50;
        catch java.lang.Throwable from label13 to label15 with label48;
        catch java.lang.Exception from label15 to label17 with label36;
        catch java.lang.Exception from label18 to label19 with label36;
        catch java.lang.Throwable from label16 to label17 with label49;
        catch java.lang.Throwable from label18 to label19 with label49;
        catch java.lang.Exception from label20 to label21 with label50;
        catch java.lang.Throwable from label20 to label21 with label48;
        catch java.io.IOException from label23 to label24 with label47;
        catch java.lang.Exception from label25 to label26 with label27;
        catch java.lang.Throwable from label25 to label26 with label37;
        catch java.lang.Throwable from label28 to label29 with label37;
        catch java.io.IOException from label30 to label31 with label43;
        catch java.io.IOException from label32 to label33 with label44;
        catch java.lang.Exception from label34 to label35 with label36;
        catch java.lang.Throwable from label34 to label35 with label49;
        catch java.io.IOException from label39 to label40 with label45;
        catch java.io.IOException from label41 to label42 with label46;
    }

    private void deleteAllFilesInFolder(java.lang.String)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1;
        java.lang.Thread $r2;
        com.dionhardy.lib.utility.FileCache$2 $r3;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.Thread;

        $r3 = new com.dionhardy.lib.utility.FileCache$2;

        specialinvoke $r3.<com.dionhardy.lib.utility.FileCache$2: void <init>(com.dionhardy.lib.utility.FileCache,java.lang.String)>($r0, $r1);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r3, "clear file cache");

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    private void deleteFilesByDateInFolder(java.lang.String)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1;
        java.lang.Thread $r2;
        com.dionhardy.lib.utility.FileCache$1 $r3;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.Thread;

        $r3 = new com.dionhardy.lib.utility.FileCache$1;

        specialinvoke $r3.<com.dionhardy.lib.utility.FileCache$1: void <init>(com.dionhardy.lib.utility.FileCache,java.lang.String)>($r0, $r1);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r3, "clear file cache");

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    public static boolean deleteSingleFile(java.lang.String)
    {
        java.lang.String $r0, varReplacer10048, varReplacer10050, varReplacer10052, varReplacer10053;
        java.io.File $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.Exception $r3;
        int varReplacer10049, varReplacer10051;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

     label1:
        varReplacer10052 = "file://";

        varReplacer10053 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer10052, varReplacer10053);

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

     label2:
        if $r1 == null goto label8;

     label3:
        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label4:
        if $z0 == 0 goto label8;

        $r2 = new java.lang.StringBuilder;

     label5:
        varReplacer10048 = "delete file: ";

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10048);

        $r0 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10050 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer10050, $r0);

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label6:
        varReplacer10051 = 1;

        return varReplacer10051;

     label7:
        $r3 := @caughtexception;

     label8:
        varReplacer10049 = 0;

        return varReplacer10049;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static boolean deleteSingleFile(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer13344, varReplacer13345;
        java.io.File $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.Exception $r4;
        int varReplacer13343, varReplacer13346;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

     label1:
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        if $r2 == null goto label8;

     label3:
        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label4:
        if $z0 == 0 goto label8;

        $r3 = new java.lang.StringBuilder;

     label5:
        varReplacer13345 = "delete file: ";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer13345);

        $r0 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer13344 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer13344, $r0);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label6:
        varReplacer13343 = 1;

        return varReplacer13343;

     label7:
        $r4 := @caughtexception;

     label8:
        varReplacer13346 = 0;

        return varReplacer13346;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private android.graphics.drawable.Drawable drawableFromCache(java.lang.String)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1;
        java.lang.Object $r2, $r5;
        java.lang.ref.WeakReference $r3;
        java.util.HashMap $r4;
        boolean $z0;
        android.graphics.drawable.Drawable $r6;
        java.lang.Throwable $r7;
        null_type varReplacer10373;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r3 = null;

        $r2 = $r0.<com.dionhardy.lib.utility.FileCache: java.lang.Object _lock>;

        entermonitor $r2;

     label1:
        $r4 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _cache>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r4 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _cache>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r3 = (java.lang.ref.WeakReference) $r5;

     label2:
        exitmonitor $r2;

     label3:
        if $r3 == null goto label7;

        $r2 = virtualinvoke $r3.<java.lang.ref.WeakReference: java.lang.Object get()>();

        $r6 = (android.graphics.drawable.Drawable) $r2;

        if $r6 != null goto label8;

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void removeFromCache(java.lang.String)>($r1);

        return $r6;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor $r2;

     label6:
        throw $r7;

     label7:
        varReplacer10373 = null;

        return varReplacer10373;

     label8:
        return $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static boolean exists(java.lang.String)
    {
        java.lang.String $r0, varReplacer5509, varReplacer5510;
        java.io.File $r1;
        boolean $z0;
        int varReplacer5511, varReplacer5512;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        varReplacer5509 = "file://";

        varReplacer5510 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer5509, varReplacer5510);

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

     label1:
        varReplacer5511 = 0;

        return varReplacer5511;

     label2:
        varReplacer5512 = 1;

        return varReplacer5512;
    }

    public static boolean exists(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.File $r2;
        boolean $z0;
        int varReplacer10056, varReplacer10057;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

     label1:
        varReplacer10057 = 0;

        return varReplacer10057;

     label2:
        varReplacer10056 = 1;

        return varReplacer10056;
    }

    public static java.lang.String getAppFolderName()
    {
        java.lang.String $r0;
        int $i0;

        nop;

        $r0 = <com.dionhardy.lib.utility.FileCache: java.lang.String ALT_SDCARD_FOLDER>;

        if $r0 == null goto label1;

        $r0 = <com.dionhardy.lib.utility.FileCache: java.lang.String ALT_SDCARD_FOLDER>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r0 = <com.dionhardy.lib.utility.FileCache: java.lang.String ALT_SDCARD_FOLDER>;

        return $r0;

     label1:
        $r0 = <com.dionhardy.lib.utility.AppSettings: java.lang.String appName>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        return $r0;
    }

    public static java.lang.String getCardAbsPath(java.lang.String, boolean, boolean)
    {
        java.lang.String $r0, $r1, $r2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r0 = $r1;

        $r2 = <java.io.File: java.lang.String separator>;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>($r2);

        if $z2 != 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r0 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if $z1 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r0 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String getAppFolderName()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = <java.io.File: java.lang.String separator>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        $r1 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String getCardPathRoot()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r0;
    }

    public static java.lang.String getCardAppPath(boolean)
    {
        boolean $z0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r2;

        nop;

        $z0 := @parameter0: boolean;

        $r0 = new java.lang.StringBuilder;

        $r1 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String getAppFolderName()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = <java.io.File: java.lang.String separator>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = new java.lang.StringBuilder;

        $r2 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String getCardPathRoot()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String getCardCacheFolder(boolean)
    {
        boolean $z0;
        java.lang.String $r0, varReplacer6130;
        int varReplacer6131;

        nop;

        $z0 := @parameter0: boolean;

        varReplacer6130 = "images";

        varReplacer6131 = 1;

        $r0 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String getCardPath(java.lang.String,boolean)>(varReplacer6130, varReplacer6131);

        return $r0;
    }

    public static java.lang.String getCardPath(java.lang.String, boolean)
    {
        java.lang.String $r0, $r2;
        boolean $z0;
        java.lang.StringBuilder $r1;
        int varReplacer6129;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = new java.lang.StringBuilder;

        varReplacer6129 = 1;

        $r2 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String getCardAppPath(boolean)>(varReplacer6129);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = <java.io.File: java.lang.String separator>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String getCardPathRoot()
    {
        java.lang.String $r0;
        int $i0;

        nop;

        $r0 = <com.dionhardy.lib.utility.FileCache: java.lang.String ALT_SDCARD_PATH>;

        if $r0 == null goto label1;

        $r0 = <com.dionhardy.lib.utility.FileCache: java.lang.String ALT_SDCARD_PATH>;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r0 = <com.dionhardy.lib.utility.FileCache: java.lang.String ALT_SDCARD_PATH>;

        return $r0;

     label1:
        $r0 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String getDefaultCardPathRoot()>();

        return $r0;
    }

    public static java.lang.String getDefaultCardPathRoot()
    {
        java.lang.StringBuilder $r0;
        java.io.File $r1;
        java.lang.String $r2;

        nop;

        $r0 = new java.lang.StringBuilder;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.io.File getFile(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.io.File $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r2, $r0);

        return $r1;
    }

    public static java.io.File getFile(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.File $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        return $r2;
    }

    public static java.lang.String[] getFileNames(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.String[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String[] getFolderAndFileNames(java.lang.String)>($r0);

        $r1 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String[] getFileNames(java.lang.String[])>($r1);

        return $r1;
    }

    public static java.lang.String[] getFileNames(java.lang.String[])
    {
        java.lang.String[] $r0, $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2, varReplacer9795, varReplacer9796;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.lang.String[];

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = lengthof $r0;

        if $i2 < $i0 goto label3;

        $r1 = newarray (java.lang.String)[$i1];

        $i1 = 0;

        $i2 = 0;

     label2:
        $i0 = lengthof $r0;

        if $i2 < $i0 goto label5;

        return $r1;

     label3:
        $r2 = $r0[$i2];

        varReplacer9796 = "/";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer9796);

        if $z0 != 0 goto label4;

        $i1 = $i1 + 1;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        $r2 = $r0[$i2];

        varReplacer9795 = "/";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer9795);

        if $z0 != 0 goto label6;

        $r2 = $r0[$i2];

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

     label6:
        $i2 = $i2 + 1;

        goto label2;
    }

    public static void getFileNamesInFolders(java.lang.String, java.util.ArrayList)
    {
        java.util.ArrayList $r0;
        java.io.File $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.io.File[] $r5;
        int $i0, $i1;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.util.ArrayList;

        $r3 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $r5 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        if $r5 == null goto label6;

        $i0 = lengthof $r5;

        if $i0 != 0 goto label2;

        return;

     label2:
        $i0 = 0;

     label3:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label6;

        $r1 = $r5[$i0];

        $r4 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label5;

        staticinvoke <com.dionhardy.lib.utility.FileCache: void getFileNamesInFolders(java.lang.String,java.util.ArrayList)>($r3, $r0);

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        $z0 = virtualinvoke $r0.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z0 != 0 goto label4;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        goto label4;

     label6:
        return;
    }

    public static java.lang.String getFilenameFromUri(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String getFilenameFromUri(java.lang.String,boolean)>($r0, 0);

        return $r0;
    }

    public static java.lang.String getFilenameFromUri(java.lang.String, boolean)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r1 = $r0;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        if $i0 < 0 goto label1;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>("\\");

        if $i0 < 0 goto label2;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

     label2:
        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if $i0 < 0 goto label3;

        $i0 = $i0 + -1;

        $r0 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r0;

     label3:
        return $r1;
    }

    public static java.lang.String[] getFolderAndFileNames(java.lang.String)
    {
        java.lang.String $r0, varReplacer9797;
        java.io.File $r1;
        java.io.File[] $r2;
        int $i0, $i1;
        java.lang.String[] $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        if $r2 == null goto label1;

        $i0 = lengthof $r2;

        if $i0 != 0 goto label2;

     label1:
        $r3 = newarray (java.lang.String)[0];

        return $r3;

     label2:
        $i0 = lengthof $r2;

        $r3 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label3:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label5;

        $r1 = $r2[$i0];

        $r0 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r3[$i0] = $r0;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        varReplacer9797 = "/";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer9797);

        $r0 = $r3[$i0];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[$i0] = $r0;

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        return $r3;
    }

    public static java.lang.String[] getFolderNames(java.lang.String[])
    {
        java.lang.String[] $r0, $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2, varReplacer13933, varReplacer13934;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.lang.String[];

        $i1 = 0;

        $i2 = 0;

     label1:
        $i0 = lengthof $r0;

        if $i2 < $i0 goto label3;

        $r1 = newarray (java.lang.String)[$i1];

        $i1 = 0;

        $i2 = 0;

     label2:
        $i0 = lengthof $r0;

        if $i2 < $i0 goto label5;

        return $r1;

     label3:
        $r2 = $r0[$i2];

        varReplacer13933 = "/";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer13933);

        if $z0 == 0 goto label4;

        $i1 = $i1 + 1;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        $r2 = $r0[$i2];

        varReplacer13934 = "/";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer13934);

        if $z0 == 0 goto label6;

        $r2 = $r0[$i2];

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

     label6:
        $i2 = $i2 + 1;

        goto label2;
    }

    public static java.lang.String getHash(java.lang.String)
    {
        java.lang.Throwable $r0;
        java.lang.String $r1, $r5;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.math.BigInteger $r4;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

     label2:
        $r4 = new java.math.BigInteger;

     label3:
        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r4.<java.math.BigInteger: void <init>(byte[])>($r3);

        $r5 = virtualinvoke $r4.<java.math.BigInteger: java.lang.String toString(int)>(16);

     label4:
        return $r5;

     label5:
        $r0 := @caughtexception;

        return $r1;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
    }

    public static com.dionhardy.lib.utility.FileCache getInstance()
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.Throwable $r1;

        nop;

        entermonitor class "Lcom/dionhardy/lib/utility/FileCache;";

     label1:
        $r0 = <com.dionhardy.lib.utility.FileCache: com.dionhardy.lib.utility.FileCache _instance>;

        if $r0 != null goto label2;

        $r0 = new com.dionhardy.lib.utility.FileCache;

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void <init>()>();

        <com.dionhardy.lib.utility.FileCache: com.dionhardy.lib.utility.FileCache _instance> = $r0;

     label2:
        $r0 = <com.dionhardy.lib.utility.FileCache: com.dionhardy.lib.utility.FileCache _instance>;

     label3:
        exitmonitor class "Lcom/dionhardy/lib/utility/FileCache;";

        return $r0;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/dionhardy/lib/utility/FileCache;";

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static java.lang.String getInternalFilesDir(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;
        java.lang.String $r2;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;
    }

    public static java.lang.String getPhoneCacheFolder(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;
        java.lang.String $r2;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;
    }

    public static java.lang.String getPhoneTempCacheFolder(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;
    }

    public static java.lang.String getRealPathUriFromContentURI(android.app.Activity, android.net.Uri)
    {
        android.app.Activity $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;
        android.database.Cursor $r3, $r4;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        java.lang.Exception $r7;
        java.lang.Throwable $r8;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: android.net.Uri;

        $r3 = null;

     label01:
        $r2 = newarray (java.lang.String)[1];

     label02:
        $r2[0] = "_data";

     label03:
        $r4 = virtualinvoke $r0.<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r1, $r2, null, null, null);

     label04:
        $r3 = $r4;

     label05:
        $i0 = interfaceinvoke $r4.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_data");

        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

     label06:
        if $z0 == 0 goto label14;

     label07:
        $r5 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("file://");

        $r6 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        if $r4 == null goto label15;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $r6;

     label10:
        $r7 := @caughtexception;

        if $r3 == null goto label11;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label11:
        $r6 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        return $r6;

     label12:
        $r8 := @caughtexception;

        if $r3 == null goto label13;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label13:
        throw $r8;

     label14:
        if $r4 == null goto label11;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        goto label11;

     label15:
        return $r6;

        catch java.lang.Exception from label01 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label09 with label12;
    }

    public static void getSubFolders(java.lang.String, java.util.ArrayList)
    {
        java.util.ArrayList $r0;
        java.io.File $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.io.File[] $r5;
        int $i0, $i1;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.util.ArrayList;

        $r3 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $r5 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        if $r5 == null goto label5;

        $i0 = lengthof $r5;

        if $i0 != 0 goto label2;

        return;

     label2:
        $i0 = 0;

     label3:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label5;

        $r1 = $r5[$i0];

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r4 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.dionhardy.lib.utility.FileCache: void getSubFolders(java.lang.String,java.util.ArrayList)>($r3, $r0);

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        return;
    }

    public static java.lang.String loadFileText(java.lang.String)
    {
        java.lang.String $r0;
        char[] $r1;
        java.io.FileReader $r2, $r4;
        java.lang.StringBuilder $r3;
        int $i0, varReplacer6037;
        java.lang.Exception $r5, $r10;
        java.lang.Throwable $r6, $r7, $r8, $r9;
        null_type varReplacer6036;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r4 = null;

     label01:
        $r3 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label03:
        $r1 = newarray (char)[2048];

     label04:
        $r2 = new java.io.FileReader;

     label05:
        specialinvoke $r2.<java.io.FileReader: void <init>(java.lang.String)>($r0);

     label06:
        $i0 = virtualinvoke $r2.<java.io.FileReader: int read(char[])>($r1);

     label07:
        if $i0 > 0 goto label12;

     label08:
        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        if $r2 == null goto label27;

     label10:
        virtualinvoke $r2.<java.io.FileReader: void close()>();

     label11:
        return $r0;

     label12:
        varReplacer6037 = 0;

        $r0 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r1, varReplacer6037, $i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label13:
        goto label06;

     label14:
        $r5 := @caughtexception;

        $r4 = $r2;

     label15:
        if $r4 == null goto label17;

     label16:
        virtualinvoke $r4.<java.io.FileReader: void close()>();

     label17:
        varReplacer6036 = null;

        return varReplacer6036;

     label18:
        $r6 := @caughtexception;

     label19:
        if $r4 == null goto label21;

     label20:
        virtualinvoke $r4.<java.io.FileReader: void close()>();

     label21:
        throw $r6;

     label22:
        $r7 := @caughtexception;

        goto label11;

     label23:
        $r8 := @caughtexception;

        goto label17;

     label24:
        $r9 := @caughtexception;

        goto label21;

     label25:
        $r6 := @caughtexception;

        $r4 = $r2;

        goto label19;

     label26:
        $r10 := @caughtexception;

        goto label15;

     label27:
        return $r0;

        catch java.lang.Exception from label02 to label04 with label26;
        catch java.lang.Exception from label05 to label06 with label26;
        catch java.lang.Throwable from label01 to label03 with label18;
        catch java.lang.Throwable from label04 to label06 with label18;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.io.IOException from label10 to label11 with label22;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label13 with label25;
        catch java.io.IOException from label16 to label17 with label23;
        catch java.io.IOException from label20 to label21 with label24;
    }

    public static java.lang.String loadFileText(java.lang.String, int)
    {
        java.lang.String $r0, $r5;
        int $i0, $i1, varReplacer9351, varReplacer9352, varReplacer9353;
        char[] $r1;
        java.io.FileReader $r2, $r4;
        java.lang.StringBuilder $r3;
        java.lang.Exception $r6, $r12;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11;
        null_type varReplacer9354;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r4 = null;

     label01:
        $r3 = new java.lang.StringBuilder;

     label02:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label03:
        $r1 = newarray (char)[2048];

     label04:
        $r2 = new java.io.FileReader;

     label05:
        specialinvoke $r2.<java.io.FileReader: void <init>(java.lang.String)>($r0);

     label06:
        $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

     label07:
        if $i1 < 300 goto label14;

     label08:
        $i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

     label09:
        if $i1 >= 300 goto label22;

     label10:
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $r0 = $r5;

        if $r2 == null goto label36;

     label12:
        virtualinvoke $r2.<java.io.FileReader: void close()>();

     label13:
        return $r5;

     label14:
        $i1 = virtualinvoke $r2.<java.io.FileReader: int read(char[])>($r1);

     label15:
        if $i1 <= 0 goto label08;

     label16:
        varReplacer9353 = 0;

        $r0 = staticinvoke <java.lang.String: java.lang.String copyValueOf(char[],int,int)>($r1, varReplacer9353, $i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label17:
        goto label06;

     label18:
        $r6 := @caughtexception;

        $r4 = $r2;

     label19:
        if $r4 == null goto label21;

     label20:
        virtualinvoke $r4.<java.io.FileReader: void close()>();

     label21:
        varReplacer9354 = null;

        return varReplacer9354;

     label22:
        varReplacer9351 = 0;

        varReplacer9352 = 300;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String substring(int,int)>(varReplacer9351, varReplacer9352);

     label23:
        $r0 = $r5;

        if $r2 == null goto label36;

     label24:
        virtualinvoke $r2.<java.io.FileReader: void close()>();

     label25:
        return $r5;

     label26:
        $r7 := @caughtexception;

     label27:
        if $r4 == null goto label29;

     label28:
        virtualinvoke $r4.<java.io.FileReader: void close()>();

     label29:
        throw $r7;

     label30:
        $r8 := @caughtexception;

        goto label13;

     label31:
        $r9 := @caughtexception;

        goto label25;

     label32:
        $r10 := @caughtexception;

        goto label21;

     label33:
        $r11 := @caughtexception;

        goto label29;

     label34:
        $r7 := @caughtexception;

        $r4 = $r2;

        goto label27;

     label35:
        $r12 := @caughtexception;

        goto label19;

     label36:
        return $r0;

        catch java.lang.Exception from label02 to label04 with label35;
        catch java.lang.Exception from label05 to label06 with label35;
        catch java.lang.Throwable from label01 to label03 with label26;
        catch java.lang.Throwable from label04 to label06 with label26;
        catch java.lang.Exception from label06 to label07 with label18;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label18;
        catch java.lang.Throwable from label06 to label07 with label34;
        catch java.lang.Throwable from label08 to label09 with label34;
        catch java.lang.Throwable from label10 to label11 with label34;
        catch java.io.IOException from label12 to label13 with label30;
        catch java.lang.Exception from label14 to label15 with label18;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Throwable from label14 to label15 with label34;
        catch java.lang.Throwable from label16 to label17 with label34;
        catch java.io.IOException from label20 to label21 with label32;
        catch java.lang.Exception from label22 to label23 with label18;
        catch java.lang.Throwable from label22 to label23 with label34;
        catch java.io.IOException from label24 to label25 with label31;
        catch java.io.IOException from label28 to label29 with label33;
    }

    public static void makeFolders(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        return;
    }

    public static boolean moveFile(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean moveFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>($r0, $r1, $r2, $r2, 0, 0);

        return $z0;
    }

    public static boolean moveFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3, varReplacer10010;
        boolean $z0;
        int varReplacer10011, varReplacer10012;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        varReplacer10010 = "edit.jpg";

        varReplacer10011 = 0;

        varReplacer10012 = 0;

        $z0 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean moveFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>($r0, $r1, varReplacer10010, $r3, varReplacer10011, varReplacer10011);

        return $z0;
    }

    public static boolean moveFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r0, $r1, $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        $z0 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean moveFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r0, $r1, $r2, $r3, $z0);

        return $z0;
    }

    public static boolean moveFile(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        java.lang.String $r0, $r1, $r2, $r3, varReplacer10041, varReplacer10042, varReplacer10043, varReplacer10045, varReplacer10047;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r4;
        int varReplacer10044, varReplacer10046;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $z0 := @parameter4: boolean;

        $z1 := @parameter5: boolean;

        varReplacer10042 = ".";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer10042);

        if $z2 == 0 goto label1;

        varReplacer10044 = 1;

        return varReplacer10044;

     label1:
        varReplacer10045 = "edit.jpg";

        $z0 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean exists(java.lang.String,java.lang.String)>($r0, varReplacer10045);

        if $z0 == 0 goto label3;

        varReplacer10047 = "edit.jpg";

        $z1 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean renameFileWithoutCopy(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, varReplacer10047, $r3);

        $z0 = $z1;

        if $z1 != 0 goto label2;

        varReplacer10041 = "edit.jpg";

        $z1 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean copyFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, varReplacer10041, $r3);

        $z0 = $z1;

        if $z1 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer10043 = "edit.jpg";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer10043);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.dionhardy.lib.utility.FileCache: boolean deleteSingleFile(java.lang.String)>($r0);

     label2:
        return $z0;

     label3:
        varReplacer10046 = 0;

        return varReplacer10046;
    }

    public static void removeEmptyFolders(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r2, $r3, $r4, $r7;
        java.io.File $r1;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String[] $r6;
        int $i0, $i1;

        nop;

        $r3 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r4 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String[] getFolderAndFileNames(java.lang.String)>($r4);

        $r6 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String[] getFolderNames(java.lang.String[])>($r6);

        $i0 = 0;

     label2:
        $i1 = lengthof $r6;

        if $i0 < $i1 goto label4;

        $r5 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String[] getFolderAndFileNames(java.lang.String)>($r4);

        if $r6 == null goto label3;

        $i0 = lengthof $r6;

        if $i0 != 0 goto label5;

     label3:
        $r1 = new java.io.File;

        $r5 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r3);

        virtualinvoke $r1.<java.io.File: boolean delete()>();

        return;

     label4:
        $r5 = new java.lang.StringBuilder;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = $r6[$i0];

        $r2 = <java.io.File: java.lang.String separator>;

        $r2 = staticinvoke <com.dionhardy.lib.utility.CoreFunctions: java.lang.String trim(java.lang.String,java.lang.String)>($r7, $r2);

        staticinvoke <com.dionhardy.lib.utility.FileCache: void removeEmptyFolders(java.lang.String,java.lang.String)>($r4, $r2);

        $i0 = $i0 + 1;

        goto label2;

     label5:
        return;
    }

    private void removeFromCache(java.lang.String)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        boolean $z0;
        java.util.ArrayList $r4;
        java.lang.Throwable $r5;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.dionhardy.lib.utility.FileCache: java.lang.Object _lock>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _cache>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        $r3 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _cache>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

     label2:
        $r4 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.ArrayList _list>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r4 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.ArrayList _list>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

     label3:
        exitmonitor $r2;

     label4:
        return;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static boolean renameFileWithoutCopy(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.File $r2, $r3;
        boolean $z0;
        java.lang.Exception $r4;
        int varReplacer10067, varReplacer10068;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

     label01:
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r0);

     label02:
        if $r2 == null goto label10;

     label03:
        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label04:
        if $z0 == 0 goto label10;

        $r3 = new java.io.File;

     label05:
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label06:
        if $z0 == 0 goto label07;

        varReplacer10067 = 0;

        return varReplacer10067;

     label07:
        $z0 = virtualinvoke $r2.<java.io.File: boolean renameTo(java.io.File)>($r3);

     label08:
        return $z0;

     label09:
        $r4 := @caughtexception;

     label10:
        varReplacer10068 = 0;

        return varReplacer10068;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public static boolean renameFileWithoutCopy(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3, $r4, varReplacer10055;
        boolean $z0;
        int $i0;
        java.lang.StringBuilder $r5;

        nop;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r0 := @parameter2: java.lang.String;

        $r1 := @parameter3: java.lang.String;

        $r4 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r4 = <java.io.File: java.lang.String separator>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r5 = new java.lang.StringBuilder;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        varReplacer10055 = "edit.jpg";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer10055);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = staticinvoke <com.dionhardy.lib.utility.FileCache: boolean renameFileWithoutCopy(java.lang.String,java.lang.String)>($r2, $r3);

        return $z0;
    }

    public static boolean renameSingleFile(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        java.io.File $r3, $r4;
        boolean $z0;
        java.lang.Exception $r5;
        int varReplacer13412;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.io.File;

     label01:
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

     label02:
        if $r3 == null goto label10;

     label03:
        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label04:
        if $z0 == 0 goto label10;

     label05:
        staticinvoke <com.dionhardy.lib.utility.FileCache: boolean deleteSingleFile(java.lang.String,java.lang.String)>($r0, $r2);

     label06:
        $r4 = new java.io.File;

     label07:
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r2);

        $z0 = virtualinvoke $r3.<java.io.File: boolean renameTo(java.io.File)>($r4);

     label08:
        return $z0;

     label09:
        $r5 := @caughtexception;

     label10:
        varReplacer13412 = 0;

        return varReplacer13412;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private void updateCache(java.lang.String, android.graphics.drawable.Drawable)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1;
        android.graphics.drawable.Drawable $r2;
        java.lang.Object $r3;
        int $i0;
        java.util.HashMap $r4;
        java.lang.ref.WeakReference $r5;
        java.util.ArrayList $r6;
        java.lang.Throwable $r7;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.drawable.Drawable;

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void removeFromCache(java.lang.String)>($r1);

        $r3 = $r0.<com.dionhardy.lib.utility.FileCache: java.lang.Object _lock>;

        entermonitor $r3;

        if $r2 == null goto label2;

     label1:
        $i0 = <com.dionhardy.lib.utility.FileCache: int CACHE_MEMORY_LIMIT>;

        if $i0 <= 1 goto label2;

        $r4 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _cache>;

        $r5 = new java.lang.ref.WeakReference;

        specialinvoke $r5.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>($r2);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r5);

        $r6 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.ArrayList _list>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label2:
        exitmonitor $r3;

     label3:
        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void cleanupCache()>();

        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor $r3;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static boolean writeFileText(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer13695, varReplacer13696, varReplacer13697, varReplacer13699, varReplacer13700, varReplacer13701;
        java.lang.Exception $r2;
        java.io.File $r3, $r7;
        boolean $z0;
        java.io.FileWriter $r4;
        java.io.BufferedWriter $r5;
        java.lang.StringBuilder $r6;
        int varReplacer13693, varReplacer13694, varReplacer13698;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = new java.io.File;

     label01:
        varReplacer13699 = "file://";

        varReplacer13700 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer13699, varReplacer13700);

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

     label02:
        if $z0 == 0 goto label12;

     label03:
        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label04:
        $z0 = virtualinvoke $r3.<java.io.File: boolean createNewFile()>();

     label05:
        if $z0 == 0 goto label15;

        $r4 = new java.io.FileWriter;

     label06:
        specialinvoke $r4.<java.io.FileWriter: void <init>(java.io.File)>($r3);

     label07:
        $r5 = new java.io.BufferedWriter;

     label08:
        specialinvoke $r5.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r4);

        virtualinvoke $r5.<java.io.BufferedWriter: void write(java.lang.String)>($r1);

        virtualinvoke $r5.<java.io.BufferedWriter: void flush()>();

        virtualinvoke $r5.<java.io.BufferedWriter: void close()>();

        virtualinvoke $r4.<java.io.FileWriter: void close()>();

     label09:
        $r6 = new java.lang.StringBuilder;

     label10:
        varReplacer13695 = "Saved text file: ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer13695);

        $r0 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer13697 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer13697, $r0);

     label11:
        varReplacer13694 = 1;

        return varReplacer13694;

     label12:
        $r7 = virtualinvoke $r3.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r7.<java.io.File: boolean mkdirs()>();

     label13:
        goto label04;

     label14:
        $r2 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        varReplacer13696 = "Error saving text file: ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer13696);

        $r0 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer13701 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logAlways(java.lang.String,java.lang.String)>(varReplacer13701, $r0);

        varReplacer13693 = 0;

        return varReplacer13693;

     label15:
        varReplacer13698 = 0;

        return varReplacer13698;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    public static boolean writeNoMedia(java.lang.String)
    {
        java.lang.String $r0, varReplacer9345, varReplacer9346, varReplacer9347, varReplacer9349, varReplacer9350;
        java.lang.Throwable $r1;
        java.io.File $r2, $r3, r5;
        boolean $z0;
        java.lang.StringBuilder $r4, r6;
        java.io.IOException r7;
        int varReplacer9344, varReplacer9348;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r3 = new java.io.File;

        $r2 = $r3;

     label1:
        varReplacer9347 = ".nomedia";

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, varReplacer9347);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label2:
        if $z0 != 0 goto label8;

        r5 = new java.io.File;

        $r3 = r5;

     label3:
        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r0);

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

        virtualinvoke $r2.<java.io.File: boolean createNewFile()>();

     label4:
        r6 = new java.lang.StringBuilder;

        $r4 = r6;

     label5:
        varReplacer9350 = ".nomedia written to";

        specialinvoke r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer9350);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9346 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logMain(java.lang.String,java.lang.String)>(varReplacer9346, $r0);

     label6:
        varReplacer9348 = 1;

        return varReplacer9348;

     label7:
        $r1 := @caughtexception;

        r6 = new java.lang.StringBuilder;

        varReplacer9345 = "cannot create nomedia: ";

        specialinvoke r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer9345);

        r7 = (java.io.IOException) $r1;

        $r0 = virtualinvoke r7.<java.io.IOException: java.lang.String getMessage()>();

        $r4 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9349 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logAlways(java.lang.String,java.lang.String)>(varReplacer9349, $r0);

     label8:
        varReplacer9344 = 0;

        return varReplacer9344;

        catch java.io.IOException from label1 to label2 with label7;
        catch java.io.IOException from label3 to label4 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public android.graphics.drawable.Drawable copy(java.lang.String, java.lang.String, boolean, android.content.ContentResolver)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1, $r2, $r5, varReplacer13994, varReplacer13995;
        boolean $z0, $z1;
        android.content.ContentResolver $r3;
        java.io.File $r4;
        java.lang.StringBuilder $r6;
        android.graphics.drawable.Drawable $r7;
        java.lang.Exception $r8;
        int varReplacer13996, varReplacer13997, varReplacer13998, varReplacer13999, varReplacer14000, varReplacer14001, varReplacer14002, varReplacer14003, varReplacer14004;
        null_type varReplacer14005;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: android.content.ContentResolver;

        $r4 = new java.io.File;

        $r5 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r5, $r1);

        $z1 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label9;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

     label2:
        if $z1 == 0 goto label5;

        $r6 = new java.lang.StringBuilder;

     label3:
        varReplacer13995 = "file://";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer13995);

        $r2 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer13996 = 0;

        varReplacer13997 = 0;

        varReplacer13998 = 1;

        varReplacer13999 = 0;

        varReplacer14000 = 0;

        $r7 = virtualinvoke $r0.<com.dionhardy.lib.utility.FileCache: android.graphics.drawable.Drawable loadImage(java.lang.String,java.lang.String,boolean,boolean,boolean,android.content.ContentResolver,int,int)>($r2, $r1, varReplacer13996, varReplacer13996, varReplacer13998, $r3, varReplacer13996, varReplacer13996);

     label4:
        return $r7;

     label5:
        $r6 = new java.lang.StringBuilder;

     label6:
        varReplacer13994 = "file://";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer13994);

        $r1 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer14001 = 1;

        varReplacer14002 = 0;

        varReplacer14003 = 0;

        varReplacer14004 = 0;

        $r7 = virtualinvoke $r0.<com.dionhardy.lib.utility.FileCache: android.graphics.drawable.Drawable loadImage(java.lang.String,java.lang.String,boolean,boolean,boolean,android.content.ContentResolver,int,int)>($r1, $r2, varReplacer14001, $z0, varReplacer14002, $r3, varReplacer14002, varReplacer14002);

     label7:
        return $r7;

     label8:
        $r8 := @caughtexception;

     label9:
        varReplacer14005 = null;

        return varReplacer14005;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public void deleteAllImageFiles()
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void deleteAllFilesInFolder(java.lang.String)>($r1);

        return;
    }

    public void deleteAllTempCacheFiles(android.content.Context)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        android.content.Context $r1;
        java.lang.String $r2;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.dionhardy.lib.utility.FileCache: java.lang.String getPhoneTempCacheFolder(android.content.Context)>($r1);

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void deleteAllFilesInFolder(java.lang.String)>($r2);

        return;
    }

    public void deleteFile(java.lang.String)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1, $r3, varReplacer10127, varReplacer10128;
        java.io.File $r2;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.Exception $r5;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void removeFromCache(java.lang.String)>($r1);

        $r2 = new java.io.File;

        $r3 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

     label1:
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r3, $r1);

     label2:
        if $r2 == null goto label8;

     label3:
        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label4:
        if $z0 == 0 goto label8;

        $r4 = new java.lang.StringBuilder;

     label5:
        varReplacer10128 = "delete file: ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10128);

        $r1 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10127 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer10127, $r1);

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label6:
        return;

     label7:
        $r5 := @caughtexception;

     label8:
        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public void deleteFilesByDate()
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void deleteFilesByDateInFolder(java.lang.String)>($r1);

        return;
    }

    public java.lang.String getContentUri(java.lang.String, java.lang.String)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1, $r2, $r4;
        java.io.File $r3;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.io.File;

        $r4 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r4, $r1);

        $r5 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String getMD5Hash(java.io.File)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.io.File $r1;
        byte[] $r2;
        java.lang.Exception $r3;
        int $i0, varReplacer10070;
        boolean $z0;
        long $l1;
        java.io.FileInputStream $r4;
        java.lang.String $r5;
        null_type varReplacer10069, varReplacer10071;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        varReplacer10071 = null;

        return varReplacer10071;

     label1:
        $l1 = virtualinvoke $r1.<java.io.File: long length()>();

     label2:
        $i0 = (int) $l1;

     label3:
        $r2 = newarray (byte)[$i0];

     label4:
        $r4 = new java.io.FileInputStream;

     label5:
        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        varReplacer10070 = 0;

        virtualinvoke $r4.<java.io.FileInputStream: int read(byte[],int,int)>($r2, varReplacer10070, $i0);

        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

        $r5 = virtualinvoke $r0.<com.dionhardy.lib.utility.FileCache: java.lang.String getMD5Hash(byte[])>($r2);

     label6:
        return $r5;

     label7:
        $r3 := @caughtexception;

        varReplacer10069 = null;

        return varReplacer10069;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public java.lang.String getMD5Hash(byte[])
    {
        com.dionhardy.lib.utility.FileCache $r0;
        byte[] $r1;
        java.security.MessageDigest $r2;
        int $i0, varReplacer10073, varReplacer10075, varReplacer10076;
        java.math.BigInteger $r3;
        java.lang.String $r4, varReplacer10077;
        java.lang.Throwable $r5;
        java.lang.Exception $r6;
        null_type varReplacer10072, varReplacer10074;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: byte[];

     label1:
        varReplacer10077 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10077);

     label2:
        $i0 = lengthof $r1;

     label3:
        varReplacer10075 = 0;

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r1, varReplacer10075, $i0);

     label4:
        $r3 = new java.math.BigInteger;

     label5:
        $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        varReplacer10076 = 1;

        specialinvoke $r3.<java.math.BigInteger: void <init>(int,byte[])>(varReplacer10076, $r1);

        varReplacer10073 = 16;

        $r4 = virtualinvoke $r3.<java.math.BigInteger: java.lang.String toString(int)>(varReplacer10073);

     label6:
        return $r4;

     label7:
        $r5 := @caughtexception;

        varReplacer10072 = null;

        return varReplacer10072;

     label8:
        $r6 := @caughtexception;

        varReplacer10074 = null;

        return varReplacer10074;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label7;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label7;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label7;
        catch java.lang.Exception from label1 to label4 with label8;
        catch java.lang.Exception from label5 to label6 with label8;
    }

    public android.graphics.drawable.Drawable loadImage(java.lang.String, java.lang.String, boolean, boolean, boolean, android.content.ContentResolver, int, int)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1, $r7, $r10, varReplacer10321, varReplacer10322, varReplacer10325, varReplacer10326, varReplacer10331, varReplacer10332, varReplacer10333, varReplacer10334, varReplacer10335, varReplacer10336, varReplacer10338, varReplacer10339, varReplacer10340, varReplacer10341, varReplacer10342, varReplacer10343, varReplacer10344, varReplacer10345, varReplacer10346, varReplacer10347, varReplacer10349, varReplacer10350, varReplacer10351, varReplacer10353, varReplacer10354, varReplacer10355, varReplacer10356, varReplacer10357, varReplacer10358, varReplacer10359, varReplacer10360;
        boolean $z0, $z1, $z2, $z3;
        android.content.ContentResolver $r2;
        int $i0, $i1, $i3, varReplacer10323, varReplacer10327, varReplacer10330, varReplacer10337, varReplacer10348, varReplacer10352;
        byte[] $r3;
        android.graphics.drawable.Drawable $r4, $r11;
        java.io.File $r5, $r22;
        android.graphics.BitmapFactory$Options $r6, r29;
        long $l2, $l5;
        java.net.HttpURLConnection $r8, $r18;
        java.lang.StringBuilder $r9, r27;
        byte $b4;
        java.util.Date $r12, r28;
        java.lang.Object $r13;
        android.graphics.Bitmap $r14;
        java.lang.OutOfMemoryError $r15, $r17;
        java.lang.Exception $r16, $r23, $r24, r32;
        java.io.InputStream $r19;
        android.net.Uri $r20;
        android.os.ParcelFileDescriptor $r21;
        java.io.FileOutputStream $r25, r33;
        java.lang.Throwable $r26;
        android.graphics.drawable.BitmapDrawable r30;
        android.os.ParcelFileDescriptor$AutoCloseInputStream r31;
        null_type varReplacer10320, varReplacer10324, varReplacer10328, varReplacer10329;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r7 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z1 := @parameter2: boolean;

        $z2 := @parameter3: boolean;

        $z0 := @parameter4: boolean;

        $r2 := @parameter5: android.content.ContentResolver;

        $i0 := @parameter6: int;

        $i1 := @parameter7: int;

        $r4 = null;

        $r8 = null;

        if $r7 == null goto label001;

        $i3 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i3 != 0 goto label002;

     label001:
        varReplacer10320 = null;

        return varReplacer10320;

     label002:
        if $z1 != 0 goto label008;

        if $z0 != 0 goto label008;

     label003:
        r27 = new java.lang.StringBuilder;

     label004:
        $r9 = r27;

     label005:
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        varReplacer10336 = "_";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer10336);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: android.graphics.drawable.Drawable drawableFromCache(java.lang.String)>($r10);

     label006:
        $r4 = $r11;

        if $r11 == null goto label008;

        goto label007;

     label007:
        return $r11;

     label008:
        $i3 = <com.dionhardy.lib.utility.FileCache: int CACHE_TIMEOUT_SECS>;

     label009:
        $l2 = (long) $i3;

        $l2 = $l2 * 1000L;

     label010:
        varReplacer10326 = "camera";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer10326);

     label011:
        if $z3 == 0 goto label012;

        $z0 = 1;

        $z1 = 0;

     label012:
        if $z0 != 0 goto label013;

        if $z2 == 0 goto label019;

     label013:
        $r10 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

     label014:
        if $r10 == null goto label018;

     label015:
        $r10 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

     label016:
        $i3 = virtualinvoke $r10.<java.lang.String: int length()>();

     label017:
        if $i3 != 0 goto label019;

     label018:
        $z2 = 0;

     label019:
        $r22 = new java.io.File;

     label020:
        $r5 = $r22;

     label021:
        $r10 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

     label022:
        specialinvoke $r22.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r10, $r1);

        varReplacer10339 = "file:";

        $z3 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer10339);

     label023:
        if $z3 == 0 goto label028;

     label024:
        r27 = new java.lang.StringBuilder;

     label025:
        $r9 = r27;

     label026:
        varReplacer10359 = "file://";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10359);

        $r10 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

     label027:
        if $z3 == 0 goto label028;

        $z0 = 1;

     label028:
        $b4 = $l2 cmp 0L;

        if $b4 <= 0 goto label037;

     label029:
        $z3 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label030:
        if $z3 == 0 goto label037;

     label031:
        $l5 = virtualinvoke $r5.<java.io.File: long lastModified()>();

     label032:
        $l2 = $l5 + $l2;

     label033:
        r28 = new java.util.Date;

     label034:
        $r12 = r28;

     label035:
        specialinvoke r28.<java.util.Date: void <init>()>();

        $l5 = virtualinvoke $r12.<java.util.Date: long getTime()>();

     label036:
        $b4 = $l2 cmp $l5;

        if $b4 >= 0 goto label037;

        $z1 = 1;

     label037:
        if $z0 != 0 goto label040;

     label038:
        $z3 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label039:
        if $z3 == 0 goto label083;

     label040:
        if $z1 != 0 goto label083;

        if $i0 <= 0 goto label061;

        if $i1 <= 0 goto label061;

     label041:
        r29 = new android.graphics.BitmapFactory$Options;

     label042:
        $r6 = r29;

     label043:
        specialinvoke r29.<android.graphics.BitmapFactory$Options: void <init>()>();

     label044:
        varReplacer10348 = 1;

        $r6.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = varReplacer10348;

     label045:
        $r10 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r10, $r6);

        $i1 = staticinvoke <com.dionhardy.lib.utility.FileCache: int calculateInSampleSize(android.graphics.BitmapFactory$Options,int,int)>($r6, $i0, $i1);

     label046:
        $r6.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i1;

        varReplacer10352 = 0;

        $r6.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = varReplacer10352;

        $i1 = $r6.<android.graphics.BitmapFactory$Options: int outWidth>;

     label047:
        if $i1 <= 0 goto label152;

     label048:
        $i1 = $r6.<android.graphics.BitmapFactory$Options: int outHeight>;

     label049:
        if $i1 <= 0 goto label152;

     label050:
        $i1 = $r6.<android.graphics.BitmapFactory$Options: int inSampleSize>;

     label051:
        r30 = new android.graphics.drawable.BitmapDrawable;

     label052:
        $r13 = r30;

     label053:
        $r10 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r14 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>($r10, $r6);

        specialinvoke r30.<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>($r14);

     label054:
        r27 = new java.lang.StringBuilder;

     label055:
        $r9 = r27;

     label056:
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        varReplacer10334 = "_";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer10334);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label057:
        $r4 = (android.graphics.drawable.Drawable) $r13;

     label058:
        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void updateCache(java.lang.String,android.graphics.drawable.Drawable)>($r10, $r4);

     label059:
        goto label060;

     label060:
        $r4 = (android.graphics.drawable.Drawable) $r13;

        return $r4;

     label061:
        $r10 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>($r10);

     label062:
        $r13 = $r4;

        goto label054;

     label063:
        $r15 := @caughtexception;

     label064:
        r27 = new java.lang.StringBuilder;

     label065:
        $r9 = r27;

     label066:
        varReplacer10338 = "Load Disk Memory Error: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10338);

        $r10 = virtualinvoke $r15.<java.lang.OutOfMemoryError: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10360 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logAlways(java.lang.String,java.lang.String)>(varReplacer10360, $r10);

     label067:
        r27 = new java.lang.StringBuilder;

     label068:
        $r9 = r27;

     label069:
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        varReplacer10321 = "_";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer10321);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10324 = null;

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void updateCache(java.lang.String,android.graphics.drawable.Drawable)>($r10, varReplacer10324);

     label070:
        if $z0 == 0 goto label083;

        goto label071;

     label071:
        varReplacer10329 = null;

        return varReplacer10329;

     label072:
        $r16 := @caughtexception;

     label073:
        r27 = new java.lang.StringBuilder;

     label074:
        $r9 = r27;

     label075:
        varReplacer10335 = "Load Disk Error: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10335);

        $r10 = virtualinvoke $r16.<java.lang.Exception: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10341 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logAlways(java.lang.String,java.lang.String)>(varReplacer10341, $r10);

     label076:
        goto label067;

     label077:
        $r17 := @caughtexception;

     label078:
        r27 = new java.lang.StringBuilder;

     label079:
        $r9 = r27;

     label080:
        varReplacer10349 = "Memory Error: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10349);

        $r7 = virtualinvoke $r17.<java.lang.OutOfMemoryError: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10355 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logAlways(java.lang.String,java.lang.String)>(varReplacer10355, $r7);

        varReplacer10327 = 1;

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void cleanupCache(int)>(varReplacer10327);

     label081:
        if $r8 == null goto label082;

        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

     label082:
        varReplacer10328 = null;

        return varReplacer10328;

     label083:
        if $z2 != 0 goto label096;

     label084:
        r27 = new java.lang.StringBuilder;

     label085:
        $r9 = r27;

     label086:
        varReplacer10331 = "Get Stream directly: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10331);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10347 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer10347, $r10);

        varReplacer10337 = 0;

        $r18 = staticinvoke <com.dionhardy.lib.utility.WebDataSupport: java.net.HttpURLConnection createConnection(java.lang.String,boolean)>($r7, varReplacer10337);

     label087:
        $r8 = $r18;

     label088:
        $r13 = virtualinvoke $r18.<java.net.HttpURLConnection: java.lang.Object getContent()>();

     label089:
        $r19 = (java.io.InputStream) $r13;

     label090:
        $r4 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>($r19, $r7);

     label091:
        r27 = new java.lang.StringBuilder;

     label092:
        $r9 = r27;

     label093:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        varReplacer10325 = "_";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer10325);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void updateCache(java.lang.String,android.graphics.drawable.Drawable)>($r7, $r4);

     label094:
        if $r18 == null goto label095;

        virtualinvoke $r18.<java.net.HttpURLConnection: void disconnect()>();

     label095:
        return $r4;

     label096:
        $r10 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer10333 = "http";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer10333);

     label097:
        if $z1 != 0 goto label119;

     label098:
        r27 = new java.lang.StringBuilder;

     label099:
        $r9 = r27;

     label100:
        varReplacer10322 = "Download file: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10322);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10342 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logMain(java.lang.String,java.lang.String)>(varReplacer10342, $r10);

     label101:
        r31 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

     label102:
        $r13 = r31;

     label103:
        $r20 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r7);

        varReplacer10332 = "r";

        $r21 = virtualinvoke $r2.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>($r20, varReplacer10332);

        specialinvoke r31.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>($r21);

     label104:
        r27 = new java.lang.StringBuilder;

     label105:
        $r9 = r27;

     label106:
        varReplacer10353 = "Delete file: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10353);

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10340 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer10340, $r7);

        virtualinvoke $r5.<java.io.File: boolean delete()>();

     label107:
        r27 = new java.lang.StringBuilder;

     label108:
        $r9 = r27;

     label109:
        varReplacer10350 = "Write file: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10350);

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10344 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer10344, $r7);

        $r22 = virtualinvoke $r5.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r22.<java.io.File: boolean mkdirs()>();

        $z1 = virtualinvoke $r5.<java.io.File: boolean createNewFile()>();

     label110:
        if $z1 != 0 goto label126;

     label111:
        r32 = new java.lang.Exception;

     label112:
        $r23 = r32;

     label113:
        varReplacer10343 = "Cannot write file";

        specialinvoke r32.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer10343);

        throw $r23;

     label114:
        $r24 := @caughtexception;

     label115:
        r27 = new java.lang.StringBuilder;

     label116:
        $r9 = r27;

     label117:
        varReplacer10346 = "Error: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10346);

        $r7 = virtualinvoke $r24.<java.lang.Exception: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10356 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logAlways(java.lang.String,java.lang.String)>(varReplacer10356, $r7);

     label118:
        if $r8 == null goto label082;

        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

        goto label082;

     label119:
        r27 = new java.lang.StringBuilder;

     label120:
        $r9 = r27;

     label121:
        varReplacer10345 = "Download stream: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10345);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10351 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer10351, $r10);

        $r7 = staticinvoke <com.dionhardy.lib.utility.WebDataSupport: java.lang.String checkUri(java.lang.String)>($r7);

        varReplacer10323 = 0;

        $r18 = staticinvoke <com.dionhardy.lib.utility.WebDataSupport: java.net.HttpURLConnection createConnection(java.lang.String,boolean)>($r7, varReplacer10323);

     label122:
        $r8 = $r18;

     label123:
        $r13 = virtualinvoke $r18.<java.net.HttpURLConnection: java.lang.Object getContent()>();

     label124:
        $r13 = (java.io.InputStream) $r13;

     label125:
        goto label104;

     label126:
        r33 = new java.io.FileOutputStream;

     label127:
        $r25 = r33;

     label128:
        specialinvoke r33.<java.io.FileOutputStream: void <init>(java.io.File)>($r5);

     label129:
        $r3 = newarray (byte)[1024];

     label130:
        $r19 = (java.io.InputStream) $r13;

     label131:
        $i1 = virtualinvoke $r19.<java.io.InputStream: int read(byte[])>($r3);

     label132:
        if $i1 > 0 goto label142;

     label133:
        virtualinvoke $r25.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r25.<java.io.FileOutputStream: void close()>();

     label134:
        r27 = new java.lang.StringBuilder;

     label135:
        $r9 = r27;

     label136:
        varReplacer10357 = "Saved file: ";

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10357);

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer10358 = "File Cache";

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>(varReplacer10358, $r7);

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = staticinvoke <android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>($r7);

     label137:
        r27 = new java.lang.StringBuilder;

     label138:
        $r9 = r27;

     label139:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        varReplacer10354 = "_";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer10354);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<com.dionhardy.lib.utility.FileCache: void updateCache(java.lang.String,android.graphics.drawable.Drawable)>($r7, $r4);

     label140:
        if $r8 == null goto label141;

        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

     label141:
        return $r4;

     label142:
        varReplacer10330 = 0;

        virtualinvoke $r25.<java.io.FileOutputStream: void write(byte[],int,int)>($r3, varReplacer10330, $i1);

     label143:
        goto label130;

     label144:
        $r26 := @caughtexception;

     label145:
        if $r8 == null goto label146;

        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

     label146:
        throw $r26;

     label147:
        $r26 := @caughtexception;

        goto label145;

     label148:
        $r24 := @caughtexception;

        goto label115;

     label149:
        $r17 := @caughtexception;

        goto label078;

     label150:
        $r16 := @caughtexception;

        goto label073;

     label151:
        $r15 := @caughtexception;

        goto label064;

     label152:
        $r13 = $r4;

        goto label054;

        catch java.lang.OutOfMemoryError from label003 to label004 with label077;
        catch java.lang.OutOfMemoryError from label005 to label006 with label077;
        catch java.lang.Exception from label005 to label006 with label114;
        catch java.lang.Throwable from label003 to label004 with label144;
        catch java.lang.Throwable from label005 to label006 with label144;
        catch java.lang.OutOfMemoryError from label008 to label009 with label149;
        catch java.lang.OutOfMemoryError from label010 to label011 with label149;
        catch java.lang.OutOfMemoryError from label013 to label014 with label149;
        catch java.lang.OutOfMemoryError from label015 to label017 with label149;
        catch java.lang.OutOfMemoryError from label019 to label020 with label149;
        catch java.lang.OutOfMemoryError from label021 to label023 with label149;
        catch java.lang.OutOfMemoryError from label024 to label025 with label149;
        catch java.lang.OutOfMemoryError from label026 to label027 with label149;
        catch java.lang.OutOfMemoryError from label029 to label030 with label149;
        catch java.lang.OutOfMemoryError from label031 to label032 with label149;
        catch java.lang.OutOfMemoryError from label033 to label034 with label149;
        catch java.lang.OutOfMemoryError from label035 to label036 with label149;
        catch java.lang.OutOfMemoryError from label038 to label039 with label149;
        catch java.lang.Exception from label010 to label011 with label148;
        catch java.lang.Exception from label016 to label017 with label148;
        catch java.lang.Exception from label022 to label023 with label148;
        catch java.lang.Exception from label026 to label027 with label148;
        catch java.lang.Exception from label029 to label030 with label148;
        catch java.lang.Exception from label031 to label032 with label148;
        catch java.lang.Exception from label035 to label036 with label148;
        catch java.lang.Exception from label038 to label039 with label148;
        catch java.lang.Throwable from label008 to label009 with label147;
        catch java.lang.Throwable from label010 to label011 with label147;
        catch java.lang.Throwable from label013 to label014 with label147;
        catch java.lang.Throwable from label015 to label017 with label147;
        catch java.lang.Throwable from label019 to label020 with label147;
        catch java.lang.Throwable from label021 to label023 with label147;
        catch java.lang.Throwable from label024 to label025 with label147;
        catch java.lang.Throwable from label026 to label027 with label147;
        catch java.lang.Throwable from label029 to label030 with label147;
        catch java.lang.Throwable from label031 to label032 with label147;
        catch java.lang.Throwable from label033 to label034 with label147;
        catch java.lang.Throwable from label035 to label036 with label147;
        catch java.lang.Throwable from label038 to label039 with label147;
        catch java.lang.OutOfMemoryError from label041 to label042 with label063;
        catch java.lang.OutOfMemoryError from label043 to label044 with label063;
        catch java.lang.OutOfMemoryError from label045 to label046 with label063;
        catch java.lang.OutOfMemoryError from label051 to label052 with label063;
        catch java.lang.OutOfMemoryError from label053 to label054 with label063;
        catch java.lang.Exception from label043 to label047 with label072;
        catch java.lang.Exception from label048 to label049 with label072;
        catch java.lang.Exception from label050 to label051 with label072;
        catch java.lang.Exception from label053 to label054 with label072;
        catch java.lang.Throwable from label041 to label042 with label147;
        catch java.lang.Throwable from label043 to label047 with label147;
        catch java.lang.Throwable from label048 to label049 with label147;
        catch java.lang.Throwable from label050 to label052 with label147;
        catch java.lang.Throwable from label053 to label054 with label147;
        catch java.lang.OutOfMemoryError from label054 to label055 with label151;
        catch java.lang.OutOfMemoryError from label056 to label057 with label151;
        catch java.lang.OutOfMemoryError from label058 to label059 with label151;
        catch java.lang.Exception from label056 to label059 with label150;
        catch java.lang.Throwable from label054 to label055 with label144;
        catch java.lang.Throwable from label056 to label059 with label144;
        catch java.lang.OutOfMemoryError from label061 to label062 with label063;
        catch java.lang.Exception from label061 to label062 with label072;
        catch java.lang.Throwable from label061 to label062 with label147;
        catch java.lang.OutOfMemoryError from label064 to label065 with label077;
        catch java.lang.OutOfMemoryError from label066 to label068 with label077;
        catch java.lang.OutOfMemoryError from label069 to label070 with label077;
        catch java.lang.Exception from label066 to label067 with label114;
        catch java.lang.Exception from label069 to label070 with label114;
        catch java.lang.Throwable from label064 to label065 with label144;
        catch java.lang.Throwable from label066 to label068 with label144;
        catch java.lang.Throwable from label069 to label070 with label144;
        catch java.lang.OutOfMemoryError from label073 to label074 with label077;
        catch java.lang.OutOfMemoryError from label075 to label076 with label077;
        catch java.lang.Exception from label075 to label076 with label114;
        catch java.lang.Throwable from label073 to label074 with label144;
        catch java.lang.Throwable from label075 to label076 with label144;
        catch java.lang.Throwable from label078 to label079 with label144;
        catch java.lang.Throwable from label080 to label081 with label144;
        catch java.lang.OutOfMemoryError from label084 to label085 with label077;
        catch java.lang.OutOfMemoryError from label086 to label087 with label077;
        catch java.lang.OutOfMemoryError from label088 to label089 with label077;
        catch java.lang.OutOfMemoryError from label090 to label092 with label077;
        catch java.lang.OutOfMemoryError from label093 to label094 with label077;
        catch java.lang.Exception from label086 to label087 with label114;
        catch java.lang.Exception from label088 to label091 with label114;
        catch java.lang.Exception from label093 to label094 with label114;
        catch java.lang.Throwable from label084 to label085 with label144;
        catch java.lang.Throwable from label086 to label087 with label144;
        catch java.lang.Throwable from label088 to label092 with label144;
        catch java.lang.Throwable from label093 to label094 with label144;
        catch java.lang.OutOfMemoryError from label096 to label097 with label077;
        catch java.lang.OutOfMemoryError from label098 to label099 with label077;
        catch java.lang.OutOfMemoryError from label100 to label102 with label077;
        catch java.lang.OutOfMemoryError from label103 to label105 with label077;
        catch java.lang.OutOfMemoryError from label106 to label108 with label077;
        catch java.lang.OutOfMemoryError from label109 to label110 with label077;
        catch java.lang.OutOfMemoryError from label111 to label112 with label077;
        catch java.lang.OutOfMemoryError from label113 to label114 with label077;
        catch java.lang.Exception from label096 to label097 with label114;
        catch java.lang.Exception from label100 to label101 with label114;
        catch java.lang.Exception from label103 to label104 with label114;
        catch java.lang.Exception from label106 to label107 with label114;
        catch java.lang.Exception from label109 to label110 with label114;
        catch java.lang.Exception from label113 to label114 with label114;
        catch java.lang.Throwable from label096 to label097 with label144;
        catch java.lang.Throwable from label098 to label099 with label144;
        catch java.lang.Throwable from label100 to label102 with label144;
        catch java.lang.Throwable from label103 to label105 with label144;
        catch java.lang.Throwable from label106 to label108 with label144;
        catch java.lang.Throwable from label109 to label110 with label144;
        catch java.lang.Throwable from label111 to label112 with label144;
        catch java.lang.Throwable from label113 to label114 with label144;
        catch java.lang.Throwable from label115 to label116 with label144;
        catch java.lang.Throwable from label117 to label118 with label144;
        catch java.lang.OutOfMemoryError from label119 to label120 with label077;
        catch java.lang.OutOfMemoryError from label121 to label122 with label077;
        catch java.lang.OutOfMemoryError from label123 to label124 with label077;
        catch java.lang.OutOfMemoryError from label126 to label127 with label077;
        catch java.lang.OutOfMemoryError from label128 to label129 with label077;
        catch java.lang.OutOfMemoryError from label131 to label132 with label077;
        catch java.lang.OutOfMemoryError from label133 to label135 with label077;
        catch java.lang.OutOfMemoryError from label136 to label138 with label077;
        catch java.lang.OutOfMemoryError from label139 to label140 with label077;
        catch java.lang.Exception from label121 to label122 with label114;
        catch java.lang.Exception from label123 to label125 with label114;
        catch java.lang.Exception from label128 to label132 with label114;
        catch java.lang.Exception from label133 to label134 with label114;
        catch java.lang.Exception from label136 to label137 with label114;
        catch java.lang.Exception from label139 to label140 with label114;
        catch java.lang.Throwable from label119 to label120 with label144;
        catch java.lang.Throwable from label121 to label122 with label144;
        catch java.lang.Throwable from label123 to label125 with label144;
        catch java.lang.Throwable from label126 to label127 with label144;
        catch java.lang.Throwable from label128 to label129 with label144;
        catch java.lang.Throwable from label130 to label132 with label144;
        catch java.lang.Throwable from label133 to label135 with label144;
        catch java.lang.Throwable from label136 to label138 with label144;
        catch java.lang.Throwable from label139 to label140 with label144;
        catch java.lang.OutOfMemoryError from label142 to label143 with label077;
        catch java.lang.Exception from label142 to label143 with label114;
        catch java.lang.Throwable from label142 to label143 with label144;
    }

    public void loadImageAsync(java.lang.String, java.lang.String, boolean, boolean, boolean, android.content.ContentResolver, com.dionhardy.lib.utility.CallBackInfo, int, int)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1, $r2, varReplacer10361;
        boolean $z0, $z1, $z2;
        android.content.ContentResolver $r3;
        com.dionhardy.lib.utility.CallBackInfo $r4;
        int $i0, $i1, varReplacer10362;
        com.dionhardy.lib.utility.FileCache$3 $r5;
        java.lang.Thread $r6;
        java.lang.StringBuilder $r7;

        nop;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $r3 := @parameter5: android.content.ContentResolver;

        $r4 := @parameter6: com.dionhardy.lib.utility.CallBackInfo;

        $i0 := @parameter7: int;

        $i1 := @parameter8: int;

        if $r4 != null goto label1;

        return;

     label1:
        $r6 = new java.lang.Thread;

        $r5 = new com.dionhardy.lib.utility.FileCache$3;

        varReplacer10362 = 0;

        specialinvoke $r5.<com.dionhardy.lib.utility.FileCache$3: void <init>(com.dionhardy.lib.utility.FileCache,com.dionhardy.lib.utility.CallBackInfo,java.lang.String,java.lang.String,boolean,boolean,boolean,android.content.ContentResolver,int,int)>($r0, $r4, $r1, $r2, $z0, $z1, varReplacer10362, $r3, $i0, $i1);

        $r7 = new java.lang.StringBuilder;

        varReplacer10361 = "File Cache load: ";

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer10361);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r5, $r1);

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        return;
    }

    public void loadImageAsync(java.lang.String, java.lang.String, boolean, boolean, boolean, android.content.ContentResolver, com.dionhardy.lib.utility.FileCache$ImageCallback, int, int)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;
        android.content.ContentResolver $r3;
        com.dionhardy.lib.utility.FileCache$ImageCallback $r4;
        int $i0, $i1;
        java.lang.Thread $r5;
        java.lang.Object $r6, $r8;
        java.util.HashMap $r7;
        java.util.List $r9;
        java.util.ArrayList $r10;
        com.dionhardy.lib.utility.FileCache$4 $r11;
        java.lang.StringBuilder $r12;
        java.lang.Throwable $r13;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $r3 := @parameter5: android.content.ContentResolver;

        $r4 := @parameter6: com.dionhardy.lib.utility.FileCache$ImageCallback;

        $i0 := @parameter7: int;

        $i1 := @parameter8: int;

        $r6 = $r0.<com.dionhardy.lib.utility.FileCache: java.lang.Object _lock>;

        entermonitor $r6;

     label1:
        $r7 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _callbacks>;

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r9 = (java.util.List) $r8;

        if $r9 == null goto label4;

        if $r4 == null goto label2;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r4);

     label2:
        exitmonitor $r6;

     label3:
        return;

     label4:
        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        if $r4 == null goto label5;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r4);

     label5:
        $r7 = $r0.<com.dionhardy.lib.utility.FileCache: java.util.HashMap _callbacks>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r10);

        exitmonitor $r6;

     label6:
        $r5 = new java.lang.Thread;

        $r11 = new com.dionhardy.lib.utility.FileCache$4;

        specialinvoke $r11.<com.dionhardy.lib.utility.FileCache$4: void <init>(com.dionhardy.lib.utility.FileCache,java.lang.String,java.lang.String,boolean,boolean,boolean,android.content.ContentResolver,int,int)>($r0, $r1, $r2, $z0, $z1, $z2, $r3, $i0, $i1);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("File Cache load: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r11, $r1);

        virtualinvoke $r5.<java.lang.Thread: void start()>();

        return;

     label7:
        $r13 := @caughtexception;

     label8:
        exitmonitor $r6;

     label9:
        throw $r13;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public boolean saveBitmap(java.lang.String, android.graphics.Bitmap)
    {
        com.dionhardy.lib.utility.FileCache $r0;
        java.lang.String $r1, $r5;
        android.graphics.Bitmap $r2;
        java.lang.Exception $r3;
        java.io.File $r4, $r9;
        int $i0;
        boolean $z0;
        java.io.FileOutputStream $r6;
        android.graphics.Bitmap$CompressFormat $r7;
        java.lang.StringBuilder $r8;

        $r0 := @this: com.dionhardy.lib.utility.FileCache;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: android.graphics.Bitmap;

        $r5 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

        if $r5 == null goto label01;

        $r5 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return 0;

     label02:
        $r4 = new java.io.File;

        $r5 = <com.dionhardy.lib.utility.FileCache: java.lang.String CACHE_PATH>;

     label03:
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r5, $r1);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label04:
        if $z0 == 0 goto label15;

     label05:
        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label06:
        $z0 = virtualinvoke $r4.<java.io.File: boolean createNewFile()>();

     label07:
        if $z0 == 0 goto label17;

        $r6 = new java.io.FileOutputStream;

     label08:
        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

     label09:
        $r7 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

     label10:
        $z0 = virtualinvoke $r2.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r7, 90, $r6);

        virtualinvoke $r6.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r6.<java.io.FileOutputStream: void close()>();

     label11:
        if $z0 == 0 goto label18;

        $r8 = new java.lang.StringBuilder;

     label12:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Saved bitmap: ");

        $r1 = virtualinvoke $r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.dionhardy.lib.utility.Logging: void logDetailed(java.lang.String,java.lang.String)>("File Cache", $r1);

     label13:
        return $z0;

     label14:
        $r3 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Error saving bitmap: ");

        $r1 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.dionhardy.lib.utility.Logging: void logAlways(java.lang.String,java.lang.String)>("File Cache", $r1);

        return 0;

     label15:
        $r9 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r9.<java.io.File: boolean mkdirs()>();

     label16:
        goto label06;

     label17:
        return 0;

     label18:
        return $z0;

        catch java.lang.Exception from label03 to label04 with label14;
        catch java.lang.Exception from label05 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Exception from label15 to label16 with label14;
    }
}
