Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.internal.je: void a()>
		SHA-256: 4702a93a4b16b1e6d5e85e0d2597b75297e38be8046ab98cafdd7bc94e629c4c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5618)
		Method: <com.hawk.android.adsdk.ads.net.f: java.lang.String a(java.lang.String)>
		SHA-256: a1f6b01479605dab6838d4b87dad3d51c7c2a1ceeb650f76fb37bdb6d2f235f9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.l.bd: java.lang.String a(java.lang.String)>
		SHA-256: 800eb8c556b42ef33aa93f2d8f5fc32b76e9b53caa3c09090257008601a5d205
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.myopenvpn.lib.utils.k: java.lang.String a(java.lang.String)>
		SHA-256: ee44a3e63f01034d36b2a0dbf5d6c256fd33f8975a625f507fdffb027f5edcbb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3041)
		Method: <com.facebook.ads.internal.l.bd: java.lang.String a(java.lang.String)>
		SHA-256: 5786d60fdfc655e40bd98b03b357acc69067a4172cc992749f8a4a277864935e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6058)
		Method: <com.free.vpn.proxy.shortcut.utils.y: void run()>
		SHA-256: d2c199ecb1b63aa6ab2266f1948e76fb452a6359fd2e3d1bba7d7d780bd5ffc7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.hawk.android.adsdk.ads.e.b: byte[] a(byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9869)
		Method: <com.hawk.android.googleplay.a.t: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: cb03c27ad07e228afc36b9cdb67c20751c8dffa75dcbbffe679fd01f7a604c80
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4113)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 479d11c444b1a0872b7554c4d6bb8c38b146f80b2cdbf6806414bcbd4199f64e
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.hawk.android.adsdk.ads.net.a.g: void a()>
		SHA-256: cf915a6e2c5901fe7e1f3aff34a551f1fcbc8a836dd7b5622bb3fd5674e15109
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6241)
		Method: <com.myopenvpn.lib.utils.k: java.lang.String a(java.lang.String)>
		SHA-256: 62f02308c2d44c242a3b2dd52f7aac352dfec6735e6def46d9125be6bd2d1ed7
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.myopenvpn.lib.utils.c: javax.net.ssl.HttpsURLConnection a(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 40428fab3143dd4ddd1384172d7b7cfd5bbeecd6d24789e7f09081baee63a111
		Secure: true
	Object:
		Variable: r24
		Type: java.security.SecureRandom
		Statement: specialinvoke r24.<java.security.SecureRandom: void <init>()>()
		Method: <com.free.vpn.proxy.shortcut.utils.y: void run()>
		SHA-256: 18111ff9d86f2ef3ddb3ed74fd15ab1d945f800ca2475c0bd1c19494619ed7c7
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8736)
		Method: <com.hawk.android.adsdk.ads.net.a.m: javax.net.ssl.SSLContext a(java.lang.String)>
		SHA-256: cd25d0d2189359a37eb97885afbff62ed89f0c4b0cb9c2407acb770242d139ee
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.hawk.android.googleplay.a.t: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 85dd84e5c41feb9c4181089a3d78e051a2a6ea5bbac237cb45597260931a1181
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6948)
		Method: <com.myopenvpn.lib.utils.c: javax.net.ssl.HttpsURLConnection a(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 4431820721f4ac6b98f43ffe9c7ffacb2bd1688e27e0472f3df442e488703141
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7619)
		Method: <com.hawk.android.adsdk.ads.e.b: byte[] a(byte[])>
		SHA-256: 7136b7aba6c083d5b4135618281ca6eb8a0e6ae895d7b425206dfa163e982e3b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.hawk.android.adsdk.ads.net.f: java.lang.String a(java.lang.String)>
		SHA-256: c2e06dfe01820b839828dd443b25fea24d2276e60fa7df30642fda2b37b5adb7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8742)
		Method: <com.hawk.android.adsdk.ads.net.a.g: void a()>
		SHA-256: 8b74733b698b6cfd92dc9185a41eecdae7ea403affa5364e0c9b4ca7c65f9df6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1320)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: acf489ac812eb22dc60a03f15e9ef32da2c1ace179504f1eda6053931a63f74
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 68f07c74644a6c26198dad4139f50db826bce0abd5cb56bebd6dd26d15ec8daf
		Secure: false
	Object:
		Variable: r5
		Type: java.security.SecureRandom
		Statement: specialinvoke r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.hawk.android.adsdk.ads.net.a.m: void a(javax.net.ssl.SSLContext)>
		SHA-256: 854d8c96c44926c1f7b4d8a2f500ebee4b7a8331083ffd0ae92be82c73b21fca
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 43c0d5bfd9533c9587d26cfec43e24806645117113b670162ff037504aa69d07
		Secure: false

Findings in Java Class: com.mobvista.msdk.base.utils.CommonMD5

	 in Method: java.lang.String getMD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #acf489ac812eb22dc60a03f15e9ef32da2c1ace179504f1eda6053931a63f74)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1320)


Findings in Java Class: com.facebook.ads.internal.l.bd

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5786d60fdfc655e40bd98b03b357acc69067a4172cc992749f8a4a277864935e)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3041)


Findings in Java Class: com.mopub.common.util.Utils

	 in Method: java.lang.String sha1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #479d11c444b1a0872b7554c4d6bb8c38b146f80b2cdbf6806414bcbd4199f64e)
			First parameter (with value "SHA-1") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4113)


Findings in Java Class: com.hawk.android.adsdk.ads.net.f

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a1f6b01479605dab6838d4b87dad3d51c7c2a1ceeb650f76fb37bdb6d2f235f9)
			First parameter (with value "SHA-1") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5618)


Findings in Java Class: com.myopenvpn.lib.utils.k

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #62f02308c2d44c242a3b2dd52f7aac352dfec6735e6def46d9125be6bd2d1ed7)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6241)


Findings in Java Class: com.hawk.android.adsdk.ads.e.b

	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7136b7aba6c083d5b4135618281ca6eb8a0e6ae895d7b425206dfa163e982e3b)
			First parameter (with value "RSA") should be any of {OAEPwithSHA-512andMGF1Padding, OAEPwithSHA-224andMGF1Padding, OAEPPadding, NoPadding, OAEPwithSHA-384andMGF1Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7619)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7621, $r1)


Findings in Java Class: com.hawk.android.googleplay.a.t

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #cb03c27ad07e228afc36b9cdb67c20751c8dffa75dcbbffe679fd01f7a604c80)
			First parameter (with value "SHA1withRSA") should be any of {RSASSA-PSS, SHA224withECDSA, SHA256withDSA, SHA256withRSA/PSS, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, NONEwithRSA, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, DSS, SHA224withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9869)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.free.vpn.proxy.shortcut.utils.y

	 in Method: void run()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6062, r28, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6062, r28, $r9)


Findings in Java Class: com.hawk.android.adsdk.ads.net.a.m

	 in Method: void a(javax.net.ssl.SSLContext)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8735, r6, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8735, r6, $r2)


Findings in Java Class: com.myopenvpn.lib.utils.c

	 in Method: javax.net.ssl.HttpsURLConnection a(android.content.Context,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6954, $r10, varReplacer6954)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6954, $r10, varReplacer6954)


Findings in Java Class: com.hawk.android.adsdk.ads.net.a.g

	 in Method: void a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8741, $r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8741, $r0, $r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 10
	ConstraintError: 7
=====================================================================