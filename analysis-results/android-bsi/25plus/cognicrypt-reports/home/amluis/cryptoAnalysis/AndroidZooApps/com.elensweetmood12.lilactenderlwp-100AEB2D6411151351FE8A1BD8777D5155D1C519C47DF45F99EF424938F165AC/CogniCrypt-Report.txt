Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <com.elensweetmood12.lilactenderlwp.Ncdr: byte[] decodeFile(java.io.InputStream)>
		SHA-256: 4fd6c94dbb5673db8db2a1d7433d69a283739e46f0497559818d060800ea6f8
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer69)
		Method: <com.elensweetmood12.lilactenderlwp.Ncdr: java.lang.String decryptName(java.lang.String)>
		SHA-256: d506348a6a9afbf6218794ebf81241d8e8a10311c7e3b1719fe55bb9c1a023ed
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer252)
		Method: <com.elensweetmood12.lilactenderlwp.Ncdr: byte[] decodeFile(java.io.InputStream)>
		SHA-256: e668e78672584cb6268058cb9b7f4782b1c50431d97106933a063b5d75879e90
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer62)
		Method: <com.elensweetmood12.lilactenderlwp.Ncdr: java.lang.String decryptName(java.lang.String)>
		SHA-256: e602dbf092af76a9ef004bc2d6d49a8689a3f6e820a213b3b8af04c188c45ebd
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r11.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r0, $r10)
		Method: <com.elensweetmood12.lilactenderlwp.Ncdr: byte[] decodeFile(java.io.InputStream)>
		SHA-256: f62a818173783d12003363df9d017885a7de845e46aa9a55a2359ef295648b92
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: 550b2765d9e9428e8a020375877dcf930c7849e0f6bb937b691b5d60187d87e2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKeyFactory
		Statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer253)
		Method: <com.elensweetmood12.lilactenderlwp.Ncdr: byte[] decodeFile(java.io.InputStream)>
		SHA-256: d1acf186f0c58fbcfcf8e32df46e7b72f7545101b61cbd5878daa6db07dc3a67
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer688)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: 954aa7746c5566e6b7ab6edbc9d8fa9a82c7775c468c1c4737dca1f5c2c9b92
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <com.elensweetmood12.lilactenderlwp.Ncdr: java.lang.String decryptName(java.lang.String)>
		SHA-256: f5cc7f8e41b4eeb2a683319c80f193040be742a2089477e492defe065d093172
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.elensweetmood12.lilactenderlwp.Ncdr: java.lang.String decryptName(java.lang.String)>
		SHA-256: 131d36e842de25524391e72b7b6bcb3a383e42f0f83daff56187a71d45b7422b
		Secure: false

Findings in Java Class: com.elensweetmood12.lilactenderlwp.Ncdr

	 in Method: java.lang.String decryptName(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e602dbf092af76a9ef004bc2d6d49a8689a3f6e820a213b3b8af04c188c45ebd)
			First parameter (with value "DES") should be any of {AES_128, AES, AES_256, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer62)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #d506348a6a9afbf6218794ebf81241d8e8a10311c7e3b1719fe55bb9c1a023ed)
			First parameter (with value "DES") should be any of {PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithHmacSHA224AndAES_256, PBKDF2withHmacSHA224, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, PBEwithHmacSHA256AndAES_128, PBEwithHmacSHA512AndAES_256, HmacSHA512, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, HmacSHA224, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBKDF2withHmacSHA512, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer69)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer61, $r7)


	 in Method: byte[] decodeFile(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e668e78672584cb6268058cb9b7f4782b1c50431d97106933a063b5d75879e90)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r11.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r0, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e668e78672584cb6268058cb9b7f4782b1c50431d97106933a063b5d75879e90)
			First parameter (with value "DES") should be any of {AES_128, AES, AES_256, RSA}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer252)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #d1acf186f0c58fbcfcf8e32df46e7b72f7545101b61cbd5878daa6db07dc3a67)
			First parameter (with value "DES") should be any of {PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithHmacSHA224AndAES_256, PBKDF2withHmacSHA224, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, PBEwithHmacSHA256AndAES_128, PBEwithHmacSHA512AndAES_256, HmacSHA512, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, HmacSHA224, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBKDF2withHmacSHA512, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC}
			at statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer253)


Findings in Java Class: com.google.android.gms.ads.internal.util.client.zza

	 in Method: java.lang.String zzaH(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #954aa7746c5566e6b7ab6edbc9d8fa9a82c7775c468c1c4737dca1f5c2c9b92)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer688)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	RequiredPredicateError: 3
	IncompleteOperationError: 1
=====================================================================