public class com.facebook.ads.internal.j.a.p extends java.lang.Object
{

    private static java.lang.String a(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1, varReplacer4018;
        java.security.MessageDigest $r2;
        int varReplacer4019;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        varReplacer4018 = "SHA-1";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4018);

        virtualinvoke $r2.<java.security.MessageDigest: void reset()>();

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

        varReplacer4019 = 0;

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r0, varReplacer4019);

        return $r1;
    }

    public static void a(javax.net.ssl.HttpsURLConnection, java.util.Set, java.util.Set)
    {
        javax.net.ssl.HttpsURLConnection $r0;
        java.util.Set $r1, $r2;
        int $i0, $i1;
        java.lang.String $r3, $r4, varReplacer4015, varReplacer4016, varReplacer4017;
        boolean $z0;
        java.security.cert.Certificate[] $r5;
        java.security.cert.Certificate $r6;
        java.security.cert.X509Certificate $r7;
        byte[] $r8;
        java.security.PublicKey $r9;
        java.security.cert.CertificateException $r10;
        java.lang.Exception $r11;

        nop;

        $r0 := @parameter0: javax.net.ssl.HttpsURLConnection;

        $r1 := @parameter1: java.util.Set;

        $r2 := @parameter2: java.util.Set;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 != 15 goto label01;

        $r3 = "4.0.3";

        $r4 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r5 = virtualinvoke $r0.<javax.net.ssl.HttpsURLConnection: java.security.cert.Certificate[] getServerCertificates()>();

        $i0 = lengthof $r5;

     label02:
        $i1 = 0;

     label03:
        if $i1 >= $i0 goto label13;

     label04:
        $r6 = $r5[$i1];

        $r7 = (java.security.cert.X509Certificate) $r6;

        $r8 = virtualinvoke $r7.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        varReplacer4015 = "SHA-1";

        $r3 = staticinvoke <com.facebook.ads.internal.j.a.p: java.lang.String a(byte[],java.lang.String)>($r8, varReplacer4015);

     label05:
        if $r1 == null goto label08;

     label06:
        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r3);

     label07:
        if $z0 != 0 goto label16;

     label08:
        $r9 = virtualinvoke $r7.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        $r8 = interfaceinvoke $r9.<java.security.PublicKey: byte[] getEncoded()>();

        varReplacer4017 = "SHA-1";

        $r3 = staticinvoke <com.facebook.ads.internal.j.a.p: java.lang.String a(byte[],java.lang.String)>($r8, varReplacer4017);

     label09:
        if $r2 == null goto label12;

     label10:
        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3);

     label11:
        if $z0 != 0 goto label16;

     label12:
        $i1 = $i1 + 1;

        goto label03;

     label13:
        $r10 = new java.security.cert.CertificateException;

     label14:
        varReplacer4016 = "Unable to find valid certificate or public key.";

        specialinvoke $r10.<java.security.cert.CertificateException: void <init>(java.lang.String)>(varReplacer4016);

        throw $r10;

     label15:
        $r11 := @caughtexception;

        throw $r11;

     label16:
        return;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label14 to label15 with label15;
    }
}
