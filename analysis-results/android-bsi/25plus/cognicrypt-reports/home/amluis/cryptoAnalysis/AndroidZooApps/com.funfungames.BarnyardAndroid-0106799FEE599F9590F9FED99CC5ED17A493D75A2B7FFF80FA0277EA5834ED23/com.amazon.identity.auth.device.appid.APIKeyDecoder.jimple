public final class com.amazon.identity.auth.device.appid.APIKeyDecoder extends java.lang.Object
{
    static final boolean $assertionsDisabled;
    private static final java.lang.String AMAZON_PUBLIC_CERT;
    private static java.security.cert.Certificate CERTIFICATE;
    public static final java.lang.String CERTIFICATE_TYPE;
    private static final java.lang.String CHAR_SET;
    private static final java.lang.String ENCRYPTION_SCHEME;
    private static final java.lang.String EXPECTED_ISSUER;
    private static final java.lang.String FAILED_TO_DECODE;
    private static final java.lang.String HASH_ALGORITHM;
    private static final char HASH_SEPARATOR;
    private static final int HEADER_LOC;
    private static final java.lang.String KEY_ALGORITHM;
    private static final java.lang.String KEY_API_KEY_VER;
    private static final java.lang.String KEY_APP_FAMILY_ID;
    private static final java.lang.String KEY_APP_ID;
    private static final java.lang.String KEY_APP_VARIANT_ID;
    private static final java.lang.String KEY_CLIENT_ID;
    private static final java.lang.String KEY_ISSUER;
    private static final java.lang.String KEY_PACKAGE_NAME;
    private static final java.lang.String KEY_PERMISSIONS;
    private static final java.lang.String KEY_SCOPES;
    private static final java.lang.String KEY_SIGNATURE;
    private static final java.lang.String KEY_SPLITTER;
    private static final java.lang.String LOG_TAG;
    private static final int PAYLOD_LOC;
    private static final java.lang.String VER_1;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0;
        java.lang.String $r1;
        null_type varReplacer1412;

        nop;

        $r0 = class "Lcom/amazon/identity/auth/device/appid/APIKeyDecoder;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.amazon.identity.auth.device.appid.APIKeyDecoder: boolean $assertionsDisabled> = $z0;

        $r0 = class "Lcom/amazon/identity/auth/device/appid/APIKeyDecoder;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG> = $r1;

        varReplacer1412 = null;

        <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.security.cert.Certificate CERTIFICATE> = varReplacer1412;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    private void <init>() throws java.lang.Exception
    {
        com.amazon.identity.auth.device.appid.APIKeyDecoder $r0;
        java.lang.Exception $r1;

        $r0 := @this: com.amazon.identity.auth.device.appid.APIKeyDecoder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Exception;

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>("This class is not instantiable!");

        throw $r1;
    }

    public static com.amazon.identity.auth.device.dataobject.AppInfo decode(java.lang.String, java.lang.String, android.content.Context)
    {
        java.lang.String $r0, $r1;
        android.content.Context $r2;
        com.amazon.identity.auth.device.dataobject.AppInfo $r3;
        int varReplacer1411;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.Context;

        varReplacer1411 = 1;

        $r3 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: com.amazon.identity.auth.device.dataobject.AppInfo doDecode(java.lang.String,java.lang.String,boolean,android.content.Context)>($r0, $r1, varReplacer1411, $r2);

        return $r3;
    }

    private static byte[] decodeBase64ToBytes(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, varReplacer1482;
        byte[] $r1;
        int varReplacer1483;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        varReplacer1482 = "UTF-8";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1482);

        varReplacer1483 = 0;

        $r1 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r1, varReplacer1483);

        return $r1;
    }

    private static java.lang.String decodeBase64ToString(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, varReplacer1471;
        byte[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: byte[] decodeBase64ToBytes(java.lang.String)>($r0);

        $r0 = new java.lang.String;

        varReplacer1471 = "UTF-8";

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, varReplacer1471);

        return $r0;
    }

    static com.amazon.identity.auth.device.dataobject.AppInfo doDecode(java.lang.String, java.lang.String, boolean, android.content.Context)
    {
        java.lang.String $r0, $r1, $r5, $r7, varReplacer1413, varReplacer1414, varReplacer1415, varReplacer1416, varReplacer1417, varReplacer1418, varReplacer1419, varReplacer1420, varReplacer1421, varReplacer1422, varReplacer1423, varReplacer1425, varReplacer1426, varReplacer1427, varReplacer1428, varReplacer1429, varReplacer1430, varReplacer1431;
        boolean $z0, $z1;
        android.content.Context $r2;
        org.json.JSONObject $r3, $r4, r23;
        java.lang.StringBuilder $r6, r21;
        java.lang.String[] $r8;
        com.amazon.identity.auth.device.dataobject.AppInfo $r9;
        java.lang.Throwable $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        org.json.JSONException $r11;
        java.lang.AssertionError r22;
        java.io.UnsupportedEncodingException r24;
        java.security.InvalidKeyException r25;
        java.security.NoSuchProviderException r26;
        java.security.SignatureException r27;
        java.security.NoSuchAlgorithmException r28;
        java.security.cert.CertificateException r29;
        java.io.IOException r30;
        java.lang.SecurityException r31;
        android.content.pm.PackageManager$NameNotFoundException r32;
        java.lang.IllegalArgumentException r33;
        null_type varReplacer1424;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: android.content.Context;

        $r5 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1426 = "Begin decoding API Key for packageName=";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1426);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int i(java.lang.String,java.lang.String)>($r5, $r7);

        $z1 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        if $r0 == null goto label01;

        if $r1 != null goto label02;

     label01:
        r22 = new java.lang.AssertionError;

        specialinvoke r22.<java.lang.AssertionError: void <init>()>();

        throw r22;

     label02:
        if $r1 == null goto label24;

        if $r0 == null goto label24;

     label03:
        $r8 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String[] getKeyParts(java.lang.String)>($r1);

     label04:
        $r4 = new org.json.JSONObject;

        $r3 = $r4;

        $r1 = $r8[0];

     label05:
        $r1 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String decodeBase64ToString(java.lang.String)>($r1);

        specialinvoke $r4.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

     label06:
        r23 = new org.json.JSONObject;

        $r4 = r23;

        $r1 = $r8[1];

     label07:
        $r1 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String decodeBase64ToString(java.lang.String)>($r1);

        specialinvoke r23.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        varReplacer1415 = "alg";

        $r1 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1415);

        staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: void verifySignature(java.lang.String[],java.lang.String,android.content.Context)>($r8, $r1, $r2);

     label08:
        $r1 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        $r6 = r21;

     label09:
        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1431 = "payload=";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1431);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1418 = "APIKey";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int pii(java.lang.String,java.lang.String,java.lang.String)>($r1, varReplacer1418, $r5);

     label10:
        staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: void verifyPayload(java.lang.String,org.json.JSONObject,android.content.Context)>($r0, $r4, $r2);

        $r9 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: com.amazon.identity.auth.device.dataobject.AppInfo extractAppInfo(org.json.JSONObject)>($r4);

     label11:
        return $r9;

     label12:
        $r10 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1423 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1423);

        r24 = (java.io.UnsupportedEncodingException) $r10;

        $r1 = virtualinvoke r24.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r10);

     label13:
        varReplacer1424 = null;

        return varReplacer1424;

     label14:
        $r11 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1429 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1429);

        $r1 = virtualinvoke $r11.<org.json.JSONException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r11);

        goto label13;

     label15:
        $r12 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1419 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1419);

        r25 = (java.security.InvalidKeyException) $r12;

        $r1 = virtualinvoke r25.<java.security.InvalidKeyException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r12);

        goto label13;

     label16:
        $r13 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1413 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1413);

        r26 = (java.security.NoSuchProviderException) $r13;

        $r1 = virtualinvoke r26.<java.security.NoSuchProviderException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r13);

        goto label13;

     label17:
        $r14 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1427 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1427);

        r27 = (java.security.SignatureException) $r14;

        $r1 = virtualinvoke r27.<java.security.SignatureException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r14);

        goto label13;

     label18:
        $r15 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1430 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1430);

        r28 = (java.security.NoSuchAlgorithmException) $r15;

        $r1 = virtualinvoke r28.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r15);

        goto label13;

     label19:
        $r16 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1421 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1421);

        r29 = (java.security.cert.CertificateException) $r16;

        $r1 = virtualinvoke r29.<java.security.cert.CertificateException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r16);

        goto label13;

     label20:
        $r17 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1417 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1417);

        r30 = (java.io.IOException) $r17;

        $r1 = virtualinvoke r30.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r17);

        goto label13;

     label21:
        $r18 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1422 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1422);

        r31 = (java.lang.SecurityException) $r18;

        $r1 = virtualinvoke r31.<java.lang.SecurityException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r18);

        goto label13;

     label22:
        $r19 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1428 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1428);

        r32 = (android.content.pm.PackageManager$NameNotFoundException) $r19;

        $r1 = virtualinvoke r32.<android.content.pm.PackageManager$NameNotFoundException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r19);

        goto label13;

     label23:
        $r20 := @caughtexception;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1425 = "Failed to decode: ";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1425);

        r33 = (java.lang.IllegalArgumentException) $r20;

        $r1 = virtualinvoke r33.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, $r20);

        goto label13;

     label24:
        $r5 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1414 = "ApiKey/PackageName is null. pkg=";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1414);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1420 = "apiKey=";

        $r6 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1420);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer1416 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1416);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int pii(java.lang.String,java.lang.String,java.lang.String)>($r5, $r0, $r1);

        goto label13;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label12;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label12;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label12;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label12;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label12;
        catch org.json.JSONException from label03 to label04 with label14;
        catch org.json.JSONException from label05 to label06 with label14;
        catch org.json.JSONException from label07 to label08 with label14;
        catch org.json.JSONException from label09 to label10 with label14;
        catch org.json.JSONException from label10 to label11 with label14;
        catch java.security.InvalidKeyException from label03 to label04 with label15;
        catch java.security.InvalidKeyException from label05 to label06 with label15;
        catch java.security.InvalidKeyException from label07 to label08 with label15;
        catch java.security.InvalidKeyException from label09 to label10 with label15;
        catch java.security.InvalidKeyException from label10 to label11 with label15;
        catch java.security.NoSuchProviderException from label03 to label04 with label16;
        catch java.security.NoSuchProviderException from label05 to label06 with label16;
        catch java.security.NoSuchProviderException from label07 to label08 with label16;
        catch java.security.NoSuchProviderException from label09 to label10 with label16;
        catch java.security.NoSuchProviderException from label10 to label11 with label16;
        catch java.security.SignatureException from label03 to label04 with label17;
        catch java.security.SignatureException from label05 to label06 with label17;
        catch java.security.SignatureException from label07 to label08 with label17;
        catch java.security.SignatureException from label09 to label10 with label17;
        catch java.security.SignatureException from label10 to label11 with label17;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label18;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label18;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label18;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label18;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label18;
        catch java.security.cert.CertificateException from label03 to label04 with label19;
        catch java.security.cert.CertificateException from label05 to label06 with label19;
        catch java.security.cert.CertificateException from label07 to label08 with label19;
        catch java.security.cert.CertificateException from label09 to label10 with label19;
        catch java.security.cert.CertificateException from label10 to label11 with label19;
        catch java.io.IOException from label03 to label04 with label20;
        catch java.io.IOException from label05 to label06 with label20;
        catch java.io.IOException from label07 to label08 with label20;
        catch java.io.IOException from label09 to label10 with label20;
        catch java.io.IOException from label10 to label11 with label20;
        catch java.lang.SecurityException from label03 to label04 with label21;
        catch java.lang.SecurityException from label05 to label06 with label21;
        catch java.lang.SecurityException from label07 to label08 with label21;
        catch java.lang.SecurityException from label09 to label10 with label21;
        catch java.lang.SecurityException from label10 to label11 with label21;
        catch android.content.pm.PackageManager$NameNotFoundException from label03 to label04 with label22;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label22;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label22;
        catch android.content.pm.PackageManager$NameNotFoundException from label09 to label10 with label22;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label22;
        catch java.lang.IllegalArgumentException from label03 to label04 with label23;
        catch java.lang.IllegalArgumentException from label05 to label06 with label23;
        catch java.lang.IllegalArgumentException from label07 to label08 with label23;
        catch java.lang.IllegalArgumentException from label09 to label10 with label23;
        catch java.lang.IllegalArgumentException from label10 to label11 with label23;
    }

    private static com.amazon.identity.auth.device.dataobject.AppInfo extractAppInfo(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONObject $r0;
        org.json.JSONException $r1;
        java.lang.String $r2, $r3, $r4, $r6, varReplacer1432, varReplacer1433, varReplacer1434, varReplacer1435, varReplacer1436, varReplacer1437, varReplacer1438, varReplacer1439, varReplacer1440, varReplacer1441;
        boolean $z0;
        java.lang.String[] $r5, $r7;
        com.amazon.identity.auth.device.dataobject.AppInfo $r8;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        varReplacer1434 = "ver";

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1434);

        varReplacer1435 = "1";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1435);

        if $z0 == 0 goto label4;

        varReplacer1438 = "appId";

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1438);

        $r2 = $r3;

     label1:
        varReplacer1439 = "pkg";

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1439);

        varReplacer1436 = "scopes";

        $r5 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String[] getStringArray(org.json.JSONObject,java.lang.String)>($r0, varReplacer1436);

     label2:
        varReplacer1432 = "clientId";

        $r6 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1432);

     label3:
        varReplacer1433 = "perm";

        $r7 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String[] getStringArray(org.json.JSONObject,java.lang.String)>($r0, varReplacer1433);

        $r8 = new com.amazon.identity.auth.device.dataobject.AppInfo;

        specialinvoke $r8.<com.amazon.identity.auth.device.dataobject.AppInfo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,org.json.JSONObject)>($r2, $r3, $r4, $r5, $r7, $r6, $r0);

        return $r8;

     label4:
        varReplacer1441 = "appFamilyId";

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1441);

        varReplacer1437 = "appVariantId";

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1437);

        goto label1;

     label5:
        $r1 := @caughtexception;

        $r6 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        varReplacer1440 = "APIKey does not contain a client id";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, varReplacer1440, $r1);

        $r6 = null;

        goto label3;

        catch org.json.JSONException from label2 to label3 with label5;
    }

    private static java.security.cert.Certificate getCertificate(android.content.Context) throws java.security.cert.CertificateException, java.io.IOException
    {
        android.content.Context $r0;
        java.io.ByteArrayInputStream $r1;
        java.security.cert.Certificate $r2;
        java.lang.String $r3, varReplacer1480, varReplacer1481;
        byte[] $r4;
        java.lang.Throwable $r5;

        nop;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lcom/amazon/identity/auth/device/appid/APIKeyDecoder;";

     label1:
        $r2 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.security.cert.Certificate CERTIFICATE>;

        if $r2 != null goto label2;

        $r1 = new java.io.ByteArrayInputStream;

        $r3 = "-----BEGIN CERTIFICATE-----\nMIIEiTCCA3GgAwIBAgIJANVIFteXvjkPMA0GCSqGSIb3DQEBBQUAMIGJMQswCQYD\nVQQGEwJVUzEQMA4GA1UEBxMHU2VhdHRsZTETMBEGA1UEChMKQW1hem9uLmNvbTEZ\nMBcGA1UECxMQSWRlbnRpdHkgYW5kIFRheDETMBEGA1UEAxMKQW1hem9uLmNvbTEj\nMCEGCSqGSIb3DQEJARYUYXV0aC10ZWFtQGFtYXpvbi5jb20wHhcNMTIwODE0MDY1\nMDM5WhcNNzYwNjE0MDAyMjIzWjCBiTELMAkGA1UEBhMCVVMxEDAOBgNVBAcTB1Nl\nYXR0bGUxEzARBgNVBAoTCkFtYXpvbi5jb20xGTAXBgNVBAsTEElkZW50aXR5IGFu\nZCBUYXgxEzARBgNVBAMTCkFtYXpvbi5jb20xIzAhBgkqhkiG9w0BCQEWFGF1dGgt\ndGVhbUBhbWF6b24uY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\nr4LlDpmlK1+mYGXqhvY3Kcd093eUwOQhQM0cb5Y9FjkXvJiCCoLSR9L8QYm2Jz06\nL/546eF/eMegvej93VGjz9JsW+guUIGkDuyCPwBn3u/PvTVKZD67Cep66qT3xnB3\nLfMFt5ln4T5LuoqJ95s8t9P0fULBU52kPR1hwdSo7G4KRVgyXtMmqjp3PK4EbrPB\ndvXCYxVeR31yDPS0BRENC3SGrzlVzrSWYFhxuxRcfyoMJYsOt/9T5QlO2KmJoTy2\nJQtqo7rlc6rORiJH7i2x+QW14bV3miJe/p4ZHWpOT5Z4hAqMBldc0FufaED1YH/Y\nnNCethI/GrXkgzCJRU5asQIDAQABo4HxMIHuMB0GA1UdDgQWBBQBvx8zbG7Sg/MZ\nOuZ31GeYDkhqozCBvgYDVR0jBIG2MIGzgBQBvx8zbG7Sg/MZOuZ31GeYDkhqo6GB\nj6SBjDCBiTELMAkGA1UEBhMCVVMxEDAOBgNVBAcTB1NlYXR0bGUxEzARBgNVBAoT\nCkFtYXpvbi5jb20xGTAXBgNVBAsTEElkZW50aXR5IGFuZCBUYXgxEzARBgNVBAMT\nCkFtYXpvbi5jb20xIzAhBgkqhkiG9w0BCQEWFGF1dGgtdGVhbUBhbWF6b24uY29t\nggkA1UgW15e+OQ8wDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAjOV/\nVDxeAuBqdPgoBGz8AyDtMR4Qyxpe7P0M9umtr8S0PmvYOVs5YuMbEAPUYGsBnWVJ\nn7ErwCF20bkd4x0gHzkOpEzQJnjlO9vJzJcnZH4ZwhVs5jF4IkPN8N68jawPvh5/\nLyWJuwyNY5nGvN5nEecTdUQqT1aa7+Vv3Y1ZQlTEKQtdaoXUjLG86jq9xpanNj/G\nX4VYW+m7mY7Kv7mdfAE4zeECqOY5yAqSfP1M/a5fSfHLQiCTt3mrZfOuj8Hd3Pp5\nVn1e4/UxQQCwZcvAFljEYie6CXD3U1AgzIFiv4/r2M+rDo0T7eqIqCsyG6VCgRAb\ndry4esK8/BdPhyuiZg==\n-----END CERTIFICATE-----\n";

        varReplacer1480 = "UTF-8";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1480);

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        varReplacer1481 = "X.509";

        $r2 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.security.cert.Certificate getCertificate(java.lang.String,java.io.InputStream)>(varReplacer1481, $r1);

        <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.security.cert.Certificate CERTIFICATE> = $r2;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

     label2:
        $r2 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.security.cert.Certificate CERTIFICATE>;

     label3:
        exitmonitor class "Lcom/amazon/identity/auth/device/appid/APIKeyDecoder;";

        return $r2;

     label4:
        $r5 := @caughtexception;

        exitmonitor class "Lcom/amazon/identity/auth/device/appid/APIKeyDecoder;";

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    private static java.security.cert.Certificate getCertificate(java.lang.String, java.io.InputStream) throws java.security.cert.CertificateException
    {
        java.lang.String $r0, varReplacer1487;
        java.io.InputStream $r1;
        java.security.cert.CertificateFactory $r2;
        java.security.cert.Certificate $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.InputStream;

        varReplacer1487 = "X.509";

        $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer1487);

        $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1);

        return $r3;
    }

    private static byte[] getFingerprint(java.lang.String, byte[]) throws java.security.NoSuchAlgorithmException
    {
        java.lang.String $r0, varReplacer1486;
        byte[] $r1;
        boolean $z0;
        java.lang.AssertionError $r2;
        java.security.MessageDigest $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $z0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r1 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        varReplacer1486 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1486);

        $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1);

        return $r1;
    }

    private static java.lang.String[] getKeyParts(java.lang.String)
    {
        java.lang.String $r0, varReplacer1472, varReplacer1473;
        java.lang.String[] $r1;
        boolean $z0;
        java.lang.AssertionError $r2;
        int $i0;
        java.lang.IllegalArgumentException $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if $r0 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        varReplacer1472 = "[.]";

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1472);

        $i0 = lengthof $r1;

        if $i0 == 3 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        varReplacer1473 = "Decoding fails: API Key must have 3 parts {header}.{payload}.{signature}";

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1473);

        throw $r3;

     label2:
        return $r1;
    }

    public static java.lang.String getSignatureFingerprint(java.lang.String, android.content.pm.Signature) throws java.io.IOException, java.security.cert.CertificateException, java.security.NoSuchAlgorithmException
    {
        java.lang.String $r0, varReplacer1476, varReplacer1477;
        android.content.pm.Signature $r1;
        java.io.ByteArrayInputStream $r2;
        byte[] $r3;
        java.security.cert.Certificate $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.pm.Signature;

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = virtualinvoke $r1.<android.content.pm.Signature: byte[] toByteArray()>();

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        varReplacer1476 = "X.509";

        $r4 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.security.cert.Certificate getCertificate(java.lang.String,java.io.InputStream)>(varReplacer1476, $r2);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

        $r3 = virtualinvoke $r4.<java.security.cert.Certificate: byte[] getEncoded()>();

        varReplacer1477 = "MD5";

        $r3 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: byte[] getFingerprint(java.lang.String,byte[])>(varReplacer1477, $r3);

        $r0 = staticinvoke <com.amazon.identity.auth.device.utils.MAPUtils: java.lang.String toHexString(byte[])>($r3);

        return $r0;
    }

    private static java.lang.String[] getStringArray(org.json.JSONObject, java.lang.String) throws org.json.JSONException
    {
        org.json.JSONObject $r0;
        java.lang.String $r1, $r5, varReplacer1475;
        org.json.JSONException $r2;
        org.json.JSONArray $r3;
        int $i0, $i1;
        java.lang.String[] $r4;
        java.lang.StringBuilder $r6;
        null_type varReplacer1474;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>($r1);

     label2:
        $i0 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

        $r4 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label5;

        $r1 = virtualinvoke $r3.<org.json.JSONArray: java.lang.String getString(int)>($i0);

        $r4[$i0] = $r1;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r2 := @caughtexception;

        $r5 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer1475 = " has no mapping in json, returning null array";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1475);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int i(java.lang.String,java.lang.String)>($r5, $r1);

        varReplacer1474 = null;

        return varReplacer1474;

     label5:
        return $r4;

        catch org.json.JSONException from label1 to label2 with label4;
    }

    private static void verifyPayload(java.lang.String, org.json.JSONObject, android.content.Context) throws java.lang.SecurityException, org.json.JSONException, android.content.pm.PackageManager$NameNotFoundException, java.security.cert.CertificateException, java.security.NoSuchAlgorithmException, java.io.IOException
    {
        java.lang.String $r0, $r5, $r10, $r11, varReplacer1442, varReplacer1443, varReplacer1444, varReplacer1445, varReplacer1446, varReplacer1447, varReplacer1448, varReplacer1449, varReplacer1450, varReplacer1451, varReplacer1452, varReplacer1453, varReplacer1455, varReplacer1456, varReplacer1457, varReplacer1458, varReplacer1459, varReplacer1460, varReplacer1461, varReplacer1462, varReplacer1463, varReplacer1464, varReplacer1465;
        org.json.JSONObject $r1;
        android.content.Context $r2;
        int $i0, $i1, varReplacer1454;
        android.content.pm.Signature $r3;
        android.content.pm.Signature[] $r4;
        boolean $z0;
        java.lang.SecurityException $r6;
        java.lang.StringBuilder $r7;
        android.content.pm.PackageManager $r8;
        android.content.pm.PackageInfo $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r2 := @parameter2: android.content.Context;

        varReplacer1452 = "iss";

        $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1452);

        varReplacer1443 = "Amazon";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1443);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.SecurityException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer1464 = "Decoding fails: issuer (";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1464);

        varReplacer1448 = "iss";

        $r0 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1448);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1446 = ") is not = ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1446);

        varReplacer1456 = "Amazon";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1456);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r0);

        throw $r6;

     label1:
        varReplacer1444 = "pkg";

        $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1444);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label2;

        $r6 = new java.lang.SecurityException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer1459 = "Decoding fails: package names don\'t match! - ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1459);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1449 = " != ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1449);

        varReplacer1450 = "pkg";

        $r0 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1450);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>($r0);

        throw $r6;

     label2:
        $r8 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r9 = null;

        if $r8 == null goto label5;

        varReplacer1454 = 64;

        $r9 = virtualinvoke $r8.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r0, varReplacer1454);

     label3:
        if $r9 == null goto label8;

        $r4 = $r9.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        if $r4 == null goto label9;

        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer1447 = " num sigs = ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1447);

        $i0 = lengthof $r4;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int i(java.lang.String,java.lang.String)>($r0, $r5);

        varReplacer1442 = "appsig";

        $r0 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer1442);

        if $r0 == null goto label7;

        varReplacer1460 = ":";

        varReplacer1461 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1460, varReplacer1461);

        $r5 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer1451 = "appSignature = ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1451);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1453 = "Signature checking.";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int pii(java.lang.String,java.lang.String,java.lang.String)>($r5, varReplacer1453, $r10);

        $i0 = lengthof $r4;

        $i1 = 0;

     label4:
        if $i1 >= $i0 goto label8;

        $r3 = $r4[$i1];

        varReplacer1457 = "X.509";

        $r5 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String getSignatureFingerprint(java.lang.String,android.content.pm.Signature)>(varReplacer1457, $r3);

        $r10 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer1465 = "fingerprint = ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1465);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1458 = "Fingerpirint checking";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int pii(java.lang.String,java.lang.String,java.lang.String)>($r10, varReplacer1458, $r11);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label6;

        return;

     label5:
        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        varReplacer1463 = " pkgMgr is null ";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int d(java.lang.String,java.lang.String)>($r0, varReplacer1463);

        goto label3;

     label6:
        $i1 = $i1 + 1;

        goto label4;

     label7:
        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        varReplacer1455 = " appSignature is null";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int d(java.lang.String,java.lang.String)>($r0, varReplacer1455);

     label8:
        $r6 = new java.lang.SecurityException;

        varReplacer1462 = "Decoding fails: certificate fingerprint can\'t be verified!";

        specialinvoke $r6.<java.lang.SecurityException: void <init>(java.lang.String)>(varReplacer1462);

        throw $r6;

     label9:
        $r0 = <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.lang.String LOG_TAG>;

        varReplacer1445 = " signatures is null";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: int d(java.lang.String,java.lang.String)>($r0, varReplacer1445);

        goto label8;
    }

    private static void verifySignature(java.lang.String[], java.lang.String, android.content.Context) throws java.security.InvalidKeyException, java.security.NoSuchProviderException, java.security.SignatureException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException, java.io.IOException
    {
        java.lang.String[] $r0;
        java.lang.String $r1, varReplacer1466, varReplacer1467, varReplacer1468, varReplacer1469, varReplacer1470;
        android.content.Context $r2;
        boolean $z0;
        java.security.NoSuchAlgorithmException $r3;
        java.lang.StringBuilder $r4;
        byte[] $r5, $r6;
        java.security.cert.Certificate $r7;
        java.lang.SecurityException $r8;

        nop;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.Context;

        varReplacer1466 = "RSA-SHA256";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer1466);

        if $z0 != 0 goto label1;

        $r3 = new java.security.NoSuchAlgorithmException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer1468 = "Unsupported algorithm : ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1468);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r1);

        throw $r3;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r1 = $r0[0];

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer1467 = ".";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1467);

        $r1 = $r0[1];

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1469 = "UTF-8";

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1469);

        $r1 = $r0[2];

        $r6 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: byte[] decodeBase64ToBytes(java.lang.String)>($r1);

        $r7 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: java.security.cert.Certificate getCertificate(android.content.Context)>($r2);

        $z0 = staticinvoke <com.amazon.identity.auth.device.appid.APIKeyDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>($r6, $r5, $r7);

        if $z0 != 0 goto label2;

        $r8 = new java.lang.SecurityException;

        varReplacer1470 = "Decoding fails: signature mismatch!";

        specialinvoke $r8.<java.lang.SecurityException: void <init>(java.lang.String)>(varReplacer1470);

        throw $r8;

     label2:
        return;
    }

    private static boolean verifySignatureWithRsaSha256(byte[], byte[], java.security.cert.Certificate) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, java.security.InvalidKeyException, java.security.SignatureException
    {
        byte[] $r0, $r1;
        java.security.cert.Certificate $r2;
        java.security.Signature $r3;
        boolean $z0;
        java.lang.String varReplacer1478, varReplacer1479;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: java.security.cert.Certificate;

        varReplacer1478 = "SHA256withRSA";

        varReplacer1479 = "BC";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer1478, varReplacer1479);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.cert.Certificate)>($r2);

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r1);

        $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r0);

        return $z0;
    }
}
