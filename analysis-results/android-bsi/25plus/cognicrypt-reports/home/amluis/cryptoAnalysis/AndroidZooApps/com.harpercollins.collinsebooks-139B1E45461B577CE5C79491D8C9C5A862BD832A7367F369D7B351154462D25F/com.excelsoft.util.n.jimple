public class com.excelsoft.util.n extends java.lang.Object
{
    static java.lang.String a;
    static java.lang.String b;
    private net.a.a.a.d c;
    private java.lang.String d;
    private java.util.List e;
    private java.lang.String f;

    static void <clinit>()
    {
        java.lang.String varReplacer2011, varReplacer2012;

        nop;

        varReplacer2012 = "68756D68616E68696E64757374616E69";

        <com.excelsoft.util.n: java.lang.String a> = varReplacer2012;

        varReplacer2011 = "PBKDF2WithHmacSHA1";

        <com.excelsoft.util.n: java.lang.String b> = varReplacer2011;

        return;
    }

    public void <init>()
    {
        com.excelsoft.util.n $r0;
        null_type varReplacer2016;
        java.lang.String varReplacer2017, varReplacer2018;

        nop;

        $r0 := @this: com.excelsoft.util.n;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer2016 = null;

        $r0.<com.excelsoft.util.n: net.a.a.a.d c> = varReplacer2016;

        varReplacer2017 = "OPCPLT_V001";

        $r0.<com.excelsoft.util.n: java.lang.String d> = varReplacer2017;

        varReplacer2018 = "68756D68616E68696E64757374616E69";

        $r0.<com.excelsoft.util.n: java.lang.String f> = varReplacer2018;

        return;
    }

    private boolean a(java.io.RandomAccessFile)
    {
        com.excelsoft.util.n $r0;
        java.io.RandomAccessFile $r1;
        int $i0, varReplacer2317;
        java.lang.String $r2, $r4;
        byte[] $r3;
        boolean $z0;

        nop;

        $r0 := @this: com.excelsoft.util.n;

        $r1 := @parameter0: java.io.RandomAccessFile;

        $r2 = $r0.<com.excelsoft.util.n: java.lang.String d>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r3;

        $r3 = newarray (byte)[$i0];

        $i0 = lengthof $r3;

        varReplacer2317 = 0;

        virtualinvoke $r1.<java.io.RandomAccessFile: void readFully(byte[],int,int)>($r3, varReplacer2317, $i0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        $r4 = $r0.<com.excelsoft.util.n: java.lang.String d>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        return $z0;
    }

    private void b(java.lang.String, java.lang.String)
    {
        com.excelsoft.util.n $r0;
        java.lang.String $r1, $r2, $r5, varReplacer2302, varReplacer2304, varReplacer2306, varReplacer2307;
        java.security.Key $r3;
        java.io.RandomAccessFile $r4;
        long $l0, $l2, $l3;
        byte[] $r6, $r9;
        int $i1, varReplacer2303, varReplacer2305;
        boolean $z0;
        javax.crypto.Cipher $r7;
        javax.crypto.spec.IvParameterSpec $r8;
        java.io.ByteArrayInputStream $r10;
        net.a.a.a.b $r11;
        net.a.a.a.d $r12;
        java.io.File $r13;
        java.util.List $r14;
        java.lang.Exception $r15, $r17;
        javax.crypto.spec.SecretKeySpec $r16;

        nop;

        $r0 := @this: com.excelsoft.util.n;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label01:
        $r3 = staticinvoke <com.excelsoft.util.n: java.security.Key f(java.lang.String)>($r2);

     label02:
        $r4 = new java.io.RandomAccessFile;

     label03:
        varReplacer2307 = "r";

        specialinvoke $r4.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r1, varReplacer2307);

        $l0 = virtualinvoke $r4.<java.io.RandomAccessFile: long length()>();

        $r5 = $r0.<com.excelsoft.util.n: java.lang.String d>;

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        $i1 = lengthof $r6;

     label04:
        $l2 = (long) $i1;

        $l2 = $l0 - $l2;

     label05:
        $l0 = $l2 - 1L;

     label06:
        virtualinvoke $r4.<java.io.RandomAccessFile: void seek(long)>($l2);

        $z0 = specialinvoke $r0.<com.excelsoft.util.n: boolean a(java.io.RandomAccessFile)>($r4);

     label07:
        if $z0 == 0 goto label37;

     label08:
        $r5 = $r0.<com.excelsoft.util.n: java.lang.String d>;

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        $i1 = lengthof $r6;

     label09:
        $l2 = (long) $i1;

        $l2 = $l2 + $l0;

        $l2 = $l2 + 1L;

     label10:
        $l3 = virtualinvoke $r4.<java.io.RandomAccessFile: long length()>();

     label11:
        $l3 = $l3 - $l2;

        $i1 = (int) $l3;

     label12:
        $r6 = newarray (byte)[$i1];

        virtualinvoke $r4.<java.io.RandomAccessFile: void seek(long)>($l2);

        virtualinvoke $r4.<java.io.RandomAccessFile: void readFully(byte[])>($r6);

     label13:
        $r5 = new java.lang.String;

     label14:
        specialinvoke $r5.<java.lang.String: void <init>(byte[])>($r6);

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r5);

     label15:
        $l0 = $l0 - $l2;

        $i1 = (int) $l0;

        $i1 = $i1 + 1;

     label16:
        $r6 = newarray (byte)[$i1];

        virtualinvoke $r4.<java.io.RandomAccessFile: void seek(long)>($l2);

        virtualinvoke $r4.<java.io.RandomAccessFile: void readFully(byte[])>($r6);

        virtualinvoke $r4.<java.io.RandomAccessFile: void close()>();

     label17:
        varReplacer2302 = "AES/CBC/PKCS5Padding";

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2302);

     label18:
        $r8 = new javax.crypto.spec.IvParameterSpec;

     label19:
        $r5 = $r0.<com.excelsoft.util.n: java.lang.String f>;

        $r9 = staticinvoke <com.excelsoft.util.n: byte[] e(java.lang.String)>($r5);

        specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9);

        varReplacer2303 = 2;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2303, $r3, $r8);

        $r9 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

     label20:
        $r6 = $r9;

     label21:
        $r10 = new java.io.ByteArrayInputStream;

     label22:
        specialinvoke $r10.<java.io.ByteArrayInputStream: void <init>(byte[])>($r6);

     label23:
        $r11 = new net.a.a.a.b;

     label24:
        specialinvoke $r11.<net.a.a.a.b: void <init>(java.io.InputStream)>($r10);

        $i1 = lengthof $r6;

     label25:
        $l0 = (long) $i1;

     label26:
        virtualinvoke $r11.<net.a.a.a.b: void a(long)>($l0);

        $r12 = $r0.<com.excelsoft.util.n: net.a.a.a.d c>;

     label27:
        if $r12 != null goto label29;

        $r12 = new net.a.a.a.d;

        $r13 = new java.io.File;

     label28:
        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r1);

        specialinvoke $r12.<net.a.a.a.d: void <init>(net.a.a.a.b,java.io.File)>($r11, $r13);

        $r0.<com.excelsoft.util.n: net.a.a.a.d c> = $r12;

     label29:
        $r12 = $r0.<com.excelsoft.util.n: net.a.a.a.d c>;

        $r14 = virtualinvoke $r12.<net.a.a.a.d: java.util.List a()>();

        $r0.<com.excelsoft.util.n: java.util.List e> = $r14;

     label30:
        return;

     label31:
        $r15 := @caughtexception;

     label32:
        virtualinvoke $r15.<java.lang.Exception: void printStackTrace()>();

        varReplacer2306 = "AES";

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2306);

     label33:
        $r16 = new javax.crypto.spec.SecretKeySpec;

     label34:
        $r9 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        varReplacer2304 = "AES";

        specialinvoke $r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer2304);

        varReplacer2305 = 2;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2305, $r16);

        $r6 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

     label35:
        goto label21;

     label36:
        $r17 := @caughtexception;

        virtualinvoke $r17.<java.lang.Exception: void printStackTrace()>();

        return;

     label37:
        $l2 = $l0;

        goto label05;

        catch java.lang.Exception from label01 to label02 with label36;
        catch java.lang.Exception from label03 to label04 with label36;
        catch java.lang.Exception from label06 to label07 with label36;
        catch java.lang.Exception from label08 to label09 with label36;
        catch java.lang.Exception from label10 to label11 with label36;
        catch java.lang.Exception from label12 to label13 with label36;
        catch java.lang.Exception from label14 to label15 with label36;
        catch java.lang.Exception from label16 to label17 with label36;
        catch java.lang.Exception from label17 to label18 with label31;
        catch java.lang.Exception from label19 to label20 with label31;
        catch java.lang.Exception from label22 to label23 with label36;
        catch java.lang.Exception from label24 to label25 with label36;
        catch java.lang.Exception from label26 to label27 with label36;
        catch java.lang.Exception from label28 to label30 with label36;
        catch java.lang.Exception from label32 to label33 with label36;
        catch java.lang.Exception from label34 to label35 with label36;
    }

    private static byte[] e(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.IllegalStateException $r1;
        char[] $r2;
        byte[] $r3;
        java.lang.Throwable $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r3 = staticinvoke <org.apache.commons.codec.binary.Hex: byte[] decodeHex(char[])>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r4);

        throw $r1;

        catch org.apache.commons.codec.DecoderException from label1 to label2 with label3;
    }

    private static java.security.Key f(java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer2311;
        javax.crypto.SecretKeyFactory $r2;
        javax.crypto.spec.PBEKeySpec $r3;
        char[] $r4;
        byte[] $r5;
        javax.crypto.spec.SecretKeySpec $r6;
        javax.crypto.SecretKey $r7;
        int varReplacer2309, varReplacer2310;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.excelsoft.util.n: java.lang.String b>;

        $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1);

        $r3 = new javax.crypto.spec.PBEKeySpec;

        $r4 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r0 = <com.excelsoft.util.n: java.lang.String a>;

        $r5 = staticinvoke <com.excelsoft.util.n: byte[] e(java.lang.String)>($r0);

        varReplacer2309 = 1000;

        varReplacer2310 = 128;

        specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer2309, varReplacer2310);

        $r6 = new javax.crypto.spec.SecretKeySpec;

        $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

        $r5 = interfaceinvoke $r7.<javax.crypto.SecretKey: byte[] getEncoded()>();

        varReplacer2311 = "AES";

        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2311);

        return $r6;
    }

    public java.lang.Boolean a()
    {
        com.excelsoft.util.n $r0;
        java.lang.Boolean $r1;
        net.a.a.a.d $r2;
        boolean $z0;

        $r0 := @this: com.excelsoft.util.n;

        $r2 = $r0.<com.excelsoft.util.n: net.a.a.a.d c>;

        if $r2 == null goto label2;

        $z0 = 1;

     label1:
        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r1;

     label2:
        $z0 = 0;

        goto label1;
    }

    public java.lang.String a(java.lang.String)
    {
        com.excelsoft.util.n $r0;
        java.lang.String $r1;
        java.lang.StringBuffer $r2;
        net.a.a.e.f $r3;
        net.a.a.a.d $r4;
        net.a.a.d.f $r5;
        long $l0;
        int $i1;
        byte[] $r6;
        java.lang.Exception $r7;

        $r0 := @this: com.excelsoft.util.n;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

     label01:
        $r3 = virtualinvoke $r0.<com.excelsoft.util.n: net.a.a.e.f c(java.lang.String)>($r1);

        $r4 = $r0.<com.excelsoft.util.n: net.a.a.a.d c>;

        $r5 = virtualinvoke $r4.<net.a.a.a.d: net.a.a.d.f a(net.a.a.e.f)>($r3);

        $l0 = virtualinvoke $r3.<net.a.a.e.f: long e()>();

     label02:
        $i1 = (int) $l0;

     label03:
        $r6 = newarray (byte)[$i1];

     label04:
        $i1 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r6);

     label05:
        if $i1 < 0 goto label10;

        $r1 = new java.lang.String;

     label06:
        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r6, 0, $i1, "UTF-8");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label07:
        goto label04;

     label08:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label09:
        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

     label10:
        virtualinvoke $r5.<java.io.InputStream: void close()>();

     label11:
        goto label09;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label10 to label11 with label08;
    }

    public void a(java.lang.String, java.lang.String)
    {
        com.excelsoft.util.n $r0;
        java.lang.String $r1, $r2, varReplacer2020;
        boolean $z0;
        net.a.a.a.d $r3;
        java.util.List $r4;
        java.lang.Exception $r5;
        null_type varReplacer2019;

        nop;

        $r0 := @this: com.excelsoft.util.n;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        varReplacer2020 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer2020);

        if $z0 != 0 goto label1;

        specialinvoke $r0.<com.excelsoft.util.n: void b(java.lang.String,java.lang.String)>($r1, $r2);

        return;

     label1:
        $r3 = $r0.<com.excelsoft.util.n: net.a.a.a.d c>;

     label2:
        if $r3 == null goto label4;

     label3:
        varReplacer2019 = null;

        $r0.<com.excelsoft.util.n: net.a.a.a.d c> = varReplacer2019;

     label4:
        $r3 = new net.a.a.a.d;

     label5:
        specialinvoke $r3.<net.a.a.a.d: void <init>(java.lang.String)>($r1);

        $r0.<com.excelsoft.util.n: net.a.a.a.d c> = $r3;

        $r3 = $r0.<com.excelsoft.util.n: net.a.a.a.d c>;

        $r4 = virtualinvoke $r3.<net.a.a.a.d: java.util.List a()>();

        $r0.<com.excelsoft.util.n: java.util.List e> = $r4;

     label6:
        return;

     label7:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public java.io.InputStream b(java.lang.String)
    {
        com.excelsoft.util.n $r0;
        java.lang.String $r1;
        boolean $z0;
        net.a.a.e.f $r2;
        net.a.a.a.d $r3;
        net.a.a.d.f $r4;
        net.a.a.c.a $r5;

        $r0 := @this: com.excelsoft.util.n;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("//");

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("//", "/");

     label1:
        $r2 = virtualinvoke $r0.<com.excelsoft.util.n: net.a.a.e.f c(java.lang.String)>($r1);

     label2:
        $r3 = $r0.<com.excelsoft.util.n: net.a.a.a.d c>;

        if $r3 == null goto label6;

        $r3 = $r0.<com.excelsoft.util.n: net.a.a.a.d c>;

     label3:
        $r4 = virtualinvoke $r3.<net.a.a.a.d: net.a.a.d.f a(net.a.a.e.f)>($r2);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r5.<net.a.a.c.a: void printStackTrace()>();

     label6:
        return null;

        catch net.a.a.c.a from label1 to label2 with label5;
        catch net.a.a.c.a from label3 to label4 with label5;
    }

    public void b()
    {
        com.excelsoft.util.n $r0;
        net.a.a.a.d $r1;
        java.lang.Exception $r2;

        $r0 := @this: com.excelsoft.util.n;

        $r1 = $r0.<com.excelsoft.util.n: net.a.a.a.d c>;

        if $r1 == null goto label4;

     label1:
        $r0.<com.excelsoft.util.n: net.a.a.a.d c> = null;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public net.a.a.e.f c(java.lang.String)
    {
        com.excelsoft.util.n $r0;
        java.lang.String $r1, $r7;
        java.lang.Boolean $r2, $r8;
        int $i0, $i1;
        net.a.a.e.f $r3, $r6;
        java.util.List $r4;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.Exception $r9, $r10;

        $r0 := @this: com.excelsoft.util.n;

        $r1 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r1);

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $i0 = 0;

        $r3 = null;

     label01:
        $r4 = $r0.<com.excelsoft.util.n: java.util.List e>;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

     label02:
        if $i0 >= $i1 goto label14;

     label03:
        $r4 = $r0.<com.excelsoft.util.n: java.util.List e>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i0);

        $r6 = (net.a.a.e.f) $r5;

     label04:
        $r7 = virtualinvoke $r6.<net.a.a.e.f: java.lang.String j()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r1);

     label05:
        if $z0 == 0 goto label09;

     label06:
        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

     label07:
        $r3 = $r6;

        $r2 = $r8;

     label08:
        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label11;

        return $r3;

     label09:
        $i0 = $i0 + 1;

        $r3 = $r6;

        goto label01;

     label10:
        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

        $r3 = $r6;

        goto label08;

     label11:
        return null;

     label12:
        $r9 := @caughtexception;

        goto label10;

     label13:
        $r10 := @caughtexception;

        $r6 = $r3;

        $r9 = $r10;

        goto label10;

     label14:
        goto label08;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
    }

    public int d(java.lang.String)
    {
        com.excelsoft.util.n $r0;
        java.lang.String $r1;
        net.a.a.e.f $r2;
        long $l0;
        int $i1;

        $r0 := @this: com.excelsoft.util.n;

        $r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<com.excelsoft.util.n: net.a.a.e.f c(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $l0 = virtualinvoke $r2.<net.a.a.e.f: long e()>();

        $i1 = (int) $l0;

        return $i1;

     label1:
        return 0;
    }
}
