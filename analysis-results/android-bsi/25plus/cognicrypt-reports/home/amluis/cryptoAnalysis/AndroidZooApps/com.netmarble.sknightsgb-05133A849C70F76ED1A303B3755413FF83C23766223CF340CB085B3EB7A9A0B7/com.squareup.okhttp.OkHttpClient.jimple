public class com.squareup.okhttp.OkHttpClient extends java.lang.Object implements java.lang.Cloneable
{
    private static final java.util.List DEFAULT_CONNECTION_SPECS;
    private static final java.util.List DEFAULT_PROTOCOLS;
    private static javax.net.ssl.SSLSocketFactory defaultSslSocketFactory;
    private com.squareup.okhttp.Authenticator authenticator;
    private com.squareup.okhttp.Cache cache;
    private com.squareup.okhttp.CertificatePinner certificatePinner;
    private int connectTimeout;
    private com.squareup.okhttp.ConnectionPool connectionPool;
    private java.util.List connectionSpecs;
    private java.net.CookieHandler cookieHandler;
    private com.squareup.okhttp.Dispatcher dispatcher;
    private boolean followRedirects;
    private boolean followSslRedirects;
    private javax.net.ssl.HostnameVerifier hostnameVerifier;
    private final java.util.List interceptors;
    private com.squareup.okhttp.internal.InternalCache internalCache;
    private com.squareup.okhttp.internal.Network network;
    private final java.util.List networkInterceptors;
    private java.util.List protocols;
    private java.net.Proxy proxy;
    private java.net.ProxySelector proxySelector;
    private int readTimeout;
    private boolean retryOnConnectionFailure;
    private final com.squareup.okhttp.internal.RouteDatabase routeDatabase;
    private javax.net.SocketFactory socketFactory;
    private javax.net.ssl.SSLSocketFactory sslSocketFactory;
    private int writeTimeout;

    static void <clinit>()
    {
        com.squareup.okhttp.Protocol[] $r0;
        com.squareup.okhttp.Protocol $r1;
        java.util.List $r2;
        com.squareup.okhttp.ConnectionSpec[] $r3;
        com.squareup.okhttp.ConnectionSpec $r4;
        com.squareup.okhttp.OkHttpClient$1 $r5;

        nop;

        $r0 = newarray (com.squareup.okhttp.Protocol)[3];

        $r1 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_2>;

        $r0[0] = $r1;

        $r1 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol SPDY_3>;

        $r0[1] = $r1;

        $r1 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_1_1>;

        $r0[2] = $r1;

        $r2 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0);

        <com.squareup.okhttp.OkHttpClient: java.util.List DEFAULT_PROTOCOLS> = $r2;

        $r3 = newarray (com.squareup.okhttp.ConnectionSpec)[3];

        $r4 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec MODERN_TLS>;

        $r3[0] = $r4;

        $r4 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec COMPATIBLE_TLS>;

        $r3[1] = $r4;

        $r4 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec CLEARTEXT>;

        $r3[2] = $r4;

        $r2 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>($r3);

        <com.squareup.okhttp.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS> = $r2;

        $r5 = new com.squareup.okhttp.OkHttpClient$1;

        specialinvoke $r5.<com.squareup.okhttp.OkHttpClient$1: void <init>()>();

        <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance> = $r5;

        return;
    }

    public void <init>()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.ArrayList $r1;
        com.squareup.okhttp.internal.RouteDatabase $r2;
        com.squareup.okhttp.Dispatcher $r3;
        int varReplacer1701, varReplacer1702, varReplacer1703, varReplacer1704, varReplacer1705, varReplacer1706;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List interceptors> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List networkInterceptors> = $r1;

        varReplacer1703 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followSslRedirects> = varReplacer1703;

        varReplacer1704 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followRedirects> = varReplacer1704;

        varReplacer1705 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean retryOnConnectionFailure> = varReplacer1705;

        varReplacer1701 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int connectTimeout> = varReplacer1701;

        varReplacer1702 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int readTimeout> = varReplacer1702;

        varReplacer1706 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int writeTimeout> = varReplacer1706;

        $r2 = new com.squareup.okhttp.internal.RouteDatabase;

        specialinvoke $r2.<com.squareup.okhttp.internal.RouteDatabase: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase routeDatabase> = $r2;

        $r3 = new com.squareup.okhttp.Dispatcher;

        specialinvoke $r3.<com.squareup.okhttp.Dispatcher: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher> = $r3;

        return;
    }

    private void <init>(com.squareup.okhttp.OkHttpClient)
    {
        com.squareup.okhttp.OkHttpClient $r0, $r1;
        java.util.ArrayList $r2;
        com.squareup.okhttp.internal.RouteDatabase $r3;
        com.squareup.okhttp.Dispatcher $r4;
        java.net.Proxy $r5;
        java.util.List $r6, $r7;
        java.net.ProxySelector $r8;
        java.net.CookieHandler $r9;
        com.squareup.okhttp.Cache $r10;
        com.squareup.okhttp.internal.InternalCache $r11;
        javax.net.SocketFactory $r12;
        javax.net.ssl.SSLSocketFactory $r13;
        javax.net.ssl.HostnameVerifier $r14;
        com.squareup.okhttp.CertificatePinner $r15;
        com.squareup.okhttp.Authenticator $r16;
        com.squareup.okhttp.ConnectionPool $r17;
        com.squareup.okhttp.internal.Network $r18;
        boolean $z0;
        int $i0, varReplacer1728, varReplacer1729, varReplacer1730, varReplacer1731, varReplacer1732, varReplacer1733;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List interceptors> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List networkInterceptors> = $r2;

        varReplacer1732 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followSslRedirects> = varReplacer1732;

        varReplacer1728 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followRedirects> = varReplacer1728;

        varReplacer1729 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean retryOnConnectionFailure> = varReplacer1729;

        varReplacer1730 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int connectTimeout> = varReplacer1730;

        varReplacer1731 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int readTimeout> = varReplacer1731;

        varReplacer1733 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int writeTimeout> = varReplacer1733;

        $r3 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase routeDatabase>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase routeDatabase> = $r3;

        $r4 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher> = $r4;

        $r5 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.Proxy proxy>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.Proxy proxy> = $r5;

        $r6 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List protocols>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List protocols> = $r6;

        $r6 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List connectionSpecs>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List connectionSpecs> = $r6;

        $r6 = $r0.<com.squareup.okhttp.OkHttpClient: java.util.List interceptors>;

        $r7 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List interceptors>;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r6 = $r0.<com.squareup.okhttp.OkHttpClient: java.util.List networkInterceptors>;

        $r7 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List networkInterceptors>;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r8 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector> = $r8;

        $r9 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler> = $r9;

        $r10 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache> = $r10;

        $r10 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache>;

        if $r10 == null goto label2;

        $r10 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache>;

        $r11 = $r10.<com.squareup.okhttp.Cache: com.squareup.okhttp.internal.InternalCache internalCache>;

     label1:
        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache internalCache> = $r11;

        $r12 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory>;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory> = $r12;

        $r13 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory> = $r13;

        $r14 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier> = $r14;

        $r15 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner certificatePinner>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner certificatePinner> = $r15;

        $r16 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator> = $r16;

        $r17 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool> = $r17;

        $r18 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.Network network>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.Network network> = $r18;

        $z0 = $r1.<com.squareup.okhttp.OkHttpClient: boolean followSslRedirects>;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followSslRedirects> = $z0;

        $z0 = $r1.<com.squareup.okhttp.OkHttpClient: boolean followRedirects>;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followRedirects> = $z0;

        $z0 = $r1.<com.squareup.okhttp.OkHttpClient: boolean retryOnConnectionFailure>;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean retryOnConnectionFailure> = $z0;

        $i0 = $r1.<com.squareup.okhttp.OkHttpClient: int connectTimeout>;

        $r0.<com.squareup.okhttp.OkHttpClient: int connectTimeout> = $i0;

        $i0 = $r1.<com.squareup.okhttp.OkHttpClient: int readTimeout>;

        $r0.<com.squareup.okhttp.OkHttpClient: int readTimeout> = $i0;

        $i0 = $r1.<com.squareup.okhttp.OkHttpClient: int writeTimeout>;

        $r0.<com.squareup.okhttp.OkHttpClient: int writeTimeout> = $i0;

        return;

     label2:
        $r11 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache internalCache>;

        goto label1;
    }

    static com.squareup.okhttp.internal.Network access$000(com.squareup.okhttp.OkHttpClient)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.Network r1;

        nop;

        $r0 := @parameter0: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.Network network>;

        return r1;
    }

    static com.squareup.okhttp.internal.Network access$002(com.squareup.okhttp.OkHttpClient, com.squareup.okhttp.internal.Network)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.Network $r1;

        $r0 := @parameter0: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter1: com.squareup.okhttp.internal.Network;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.Network network> = $r1;

        return $r1;
    }

    private javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.lang.Throwable $r1, $r5;
        javax.net.ssl.SSLSocketFactory $r2;
        javax.net.ssl.SSLContext $r3;
        java.lang.AssertionError $r4;
        null_type varReplacer1734, varReplacer1735, varReplacer1736;
        java.lang.String varReplacer1737;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        entermonitor $r0;

     label1:
        $r2 = <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory defaultSslSocketFactory>;

     label2:
        if $r2 != null goto label5;

     label3:
        varReplacer1737 = "TLS";

        $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1737);

        varReplacer1734 = null;

        varReplacer1735 = null;

        varReplacer1736 = null;

        virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1734, varReplacer1734, varReplacer1734);

        $r2 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label4:
        <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory defaultSslSocketFactory> = $r2;

     label5:
        $r2 = <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory defaultSslSocketFactory>;

     label6:
        exitmonitor $r0;

        return $r2;

     label7:
        $r1 := @caughtexception;

     label8:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label9:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.security.GeneralSecurityException from label3 to label4 with label7;
        catch java.lang.Throwable from label3 to label5 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    public com.squareup.okhttp.OkHttpClient cancel(java.lang.Object)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.lang.Object $r1;
        com.squareup.okhttp.Dispatcher $r2;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher getDispatcher()>();

        virtualinvoke $r2.<com.squareup.okhttp.Dispatcher: void cancel(java.lang.Object)>($r1);

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient clone()
    {
        com.squareup.okhttp.OkHttpClient $r0, $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 = new com.squareup.okhttp.OkHttpClient;

        specialinvoke $r1.<com.squareup.okhttp.OkHttpClient: void <init>(com.squareup.okhttp.OkHttpClient)>($r0);

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.squareup.okhttp.OkHttpClient $r0;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r0 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient clone()>();

        return $r0;
    }

    com.squareup.okhttp.OkHttpClient copyWithDefaults()
    {
        com.squareup.okhttp.OkHttpClient $r0, $r1;
        java.net.ProxySelector $r2;
        java.net.CookieHandler $r3;
        javax.net.SocketFactory $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        javax.net.ssl.HostnameVerifier $r6;
        com.squareup.okhttp.internal.tls.OkHostnameVerifier $r7;
        com.squareup.okhttp.CertificatePinner $r8;
        com.squareup.okhttp.Authenticator $r9;
        com.squareup.okhttp.ConnectionPool $r10;
        java.util.List $r11;
        com.squareup.okhttp.internal.Network $r12;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 = new com.squareup.okhttp.OkHttpClient;

        specialinvoke $r1.<com.squareup.okhttp.OkHttpClient: void <init>(com.squareup.okhttp.OkHttpClient)>($r0);

        $r2 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector>;

        if $r2 != null goto label01;

        $r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector> = $r2;

     label01:
        $r3 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler>;

        if $r3 != null goto label02;

        $r3 = staticinvoke <java.net.CookieHandler: java.net.CookieHandler getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler> = $r3;

     label02:
        $r4 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory>;

        if $r4 != null goto label03;

        $r4 = staticinvoke <javax.net.SocketFactory: javax.net.SocketFactory getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory> = $r4;

     label03:
        $r5 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r5 != null goto label04;

        $r5 = specialinvoke $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>();

        $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory> = $r5;

     label04:
        $r6 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        if $r6 != null goto label05;

        $r7 = <com.squareup.okhttp.internal.tls.OkHostnameVerifier: com.squareup.okhttp.internal.tls.OkHostnameVerifier INSTANCE>;

        $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier> = $r7;

     label05:
        $r8 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner certificatePinner>;

        if $r8 != null goto label06;

        $r8 = <com.squareup.okhttp.CertificatePinner: com.squareup.okhttp.CertificatePinner DEFAULT>;

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner certificatePinner> = $r8;

     label06:
        $r9 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator>;

        if $r9 != null goto label07;

        $r9 = <com.squareup.okhttp.internal.http.AuthenticatorAdapter: com.squareup.okhttp.Authenticator INSTANCE>;

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator> = $r9;

     label07:
        $r10 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool>;

        if $r10 != null goto label08;

        $r10 = staticinvoke <com.squareup.okhttp.ConnectionPool: com.squareup.okhttp.ConnectionPool getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool> = $r10;

     label08:
        $r11 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List protocols>;

        if $r11 != null goto label09;

        $r11 = <com.squareup.okhttp.OkHttpClient: java.util.List DEFAULT_PROTOCOLS>;

        $r1.<com.squareup.okhttp.OkHttpClient: java.util.List protocols> = $r11;

     label09:
        $r11 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List connectionSpecs>;

        if $r11 != null goto label10;

        $r11 = <com.squareup.okhttp.OkHttpClient: java.util.List DEFAULT_CONNECTION_SPECS>;

        $r1.<com.squareup.okhttp.OkHttpClient: java.util.List connectionSpecs> = $r11;

     label10:
        $r12 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.Network network>;

        if $r12 != null goto label11;

        $r12 = <com.squareup.okhttp.internal.Network: com.squareup.okhttp.internal.Network DEFAULT>;

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.Network network> = $r12;

     label11:
        return $r1;
    }

    public com.squareup.okhttp.Authenticator getAuthenticator()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Authenticator r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator>;

        return r1;
    }

    public com.squareup.okhttp.Cache getCache()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Cache r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache>;

        return r1;
    }

    public com.squareup.okhttp.CertificatePinner getCertificatePinner()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.CertificatePinner r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner certificatePinner>;

        return r1;
    }

    public int getConnectTimeout()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        int i0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        i0 = $r0.<com.squareup.okhttp.OkHttpClient: int connectTimeout>;

        return i0;
    }

    public com.squareup.okhttp.ConnectionPool getConnectionPool()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.ConnectionPool r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool>;

        return r1;
    }

    public java.util.List getConnectionSpecs()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.List r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.util.List connectionSpecs>;

        return r1;
    }

    public java.net.CookieHandler getCookieHandler()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.CookieHandler r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler>;

        return r1;
    }

    public com.squareup.okhttp.Dispatcher getDispatcher()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Dispatcher r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher>;

        return r1;
    }

    public boolean getFollowRedirects()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        boolean z0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        z0 = $r0.<com.squareup.okhttp.OkHttpClient: boolean followRedirects>;

        return z0;
    }

    public boolean getFollowSslRedirects()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        boolean z0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        z0 = $r0.<com.squareup.okhttp.OkHttpClient: boolean followSslRedirects>;

        return z0;
    }

    public javax.net.ssl.HostnameVerifier getHostnameVerifier()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.HostnameVerifier r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        return r1;
    }

    public java.util.List getProtocols()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.List r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.util.List protocols>;

        return r1;
    }

    public java.net.Proxy getProxy()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.Proxy r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.net.Proxy proxy>;

        return r1;
    }

    public java.net.ProxySelector getProxySelector()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.ProxySelector r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector>;

        return r1;
    }

    public int getReadTimeout()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        int i0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        i0 = $r0.<com.squareup.okhttp.OkHttpClient: int readTimeout>;

        return i0;
    }

    public boolean getRetryOnConnectionFailure()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        boolean z0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        z0 = $r0.<com.squareup.okhttp.OkHttpClient: boolean retryOnConnectionFailure>;

        return z0;
    }

    public javax.net.SocketFactory getSocketFactory()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.SocketFactory r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory getSslSocketFactory()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.SSLSocketFactory r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        return r1;
    }

    public int getWriteTimeout()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        int i0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        i0 = $r0.<com.squareup.okhttp.OkHttpClient: int writeTimeout>;

        return i0;
    }

    public java.util.List interceptors()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.List r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.util.List interceptors>;

        return r1;
    }

    com.squareup.okhttp.internal.InternalCache internalCache()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.InternalCache r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache internalCache>;

        return r1;
    }

    public java.util.List networkInterceptors()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.List r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.util.List networkInterceptors>;

        return r1;
    }

    public com.squareup.okhttp.Call newCall(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.Call $r2;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r2 = new com.squareup.okhttp.Call;

        specialinvoke $r2.<com.squareup.okhttp.Call: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request)>($r0, $r1);

        return $r2;
    }

    com.squareup.okhttp.internal.RouteDatabase routeDatabase()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.RouteDatabase r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase routeDatabase>;

        return r1;
    }

    public com.squareup.okhttp.OkHttpClient setAuthenticator(com.squareup.okhttp.Authenticator)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Authenticator $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Authenticator;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setCache(com.squareup.okhttp.Cache)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Cache $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Cache;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache> = $r1;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache internalCache> = null;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setCertificatePinner(com.squareup.okhttp.CertificatePinner)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.CertificatePinner $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.CertificatePinner;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner certificatePinner> = $r1;

        return $r0;
    }

    public void setConnectTimeout(long, java.util.concurrent.TimeUnit)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r1;
        byte $b2;
        java.lang.IllegalArgumentException $r2;
        int $i3;
        java.lang.String varReplacer1743, varReplacer1744, varReplacer1745, varReplacer1746;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1745 = "timeout < 0";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1745);

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1744 = "unit == null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1744);

        throw $r2;

     label2:
        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $b2 = $l1 cmp 2147483647L;

        if $b2 <= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1746 = "Timeout too large.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1746);

        throw $r2;

     label3:
        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1743 = "Timeout too small.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1743);

        throw $r2;

     label4:
        $i3 = (int) $l1;

        $r0.<com.squareup.okhttp.OkHttpClient: int connectTimeout> = $i3;

        return;
    }

    public com.squareup.okhttp.OkHttpClient setConnectionPool(com.squareup.okhttp.ConnectionPool)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.ConnectionPool $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.ConnectionPool;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setConnectionSpecs(java.util.List)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.List $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.util.List;

        $r1 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>($r1);

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List connectionSpecs> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setCookieHandler(java.net.CookieHandler)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.CookieHandler $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.net.CookieHandler;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setDispatcher(com.squareup.okhttp.Dispatcher)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Dispatcher $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Dispatcher;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dispatcher == null");

        throw $r2;

     label1:
        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher> = $r1;

        return $r0;
    }

    public void setFollowRedirects(boolean)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        boolean $z0;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $z0 := @parameter0: boolean;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followRedirects> = $z0;

        return;
    }

    public com.squareup.okhttp.OkHttpClient setFollowSslRedirects(boolean)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        boolean $z0;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $z0 := @parameter0: boolean;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followSslRedirects> = $z0;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.HostnameVerifier $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: javax.net.ssl.HostnameVerifier;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier> = $r1;

        return $r0;
    }

    void setInternalCache(com.squareup.okhttp.internal.InternalCache)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.InternalCache $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.internal.InternalCache;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache internalCache> = $r1;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache> = null;

        return;
    }

    public com.squareup.okhttp.OkHttpClient setProtocols(java.util.List)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.List $r1;
        com.squareup.okhttp.Protocol $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.util.List;

        $r1 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>($r1);

        $r2 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_1_1>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("protocols doesn\'t contain http/1.1: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r2 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_1_0>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("protocols must not contain http/1.0: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(null);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("protocols must not contain null");

        throw $r3;

     label3:
        $r1 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>($r1);

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List protocols> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setProxy(java.net.Proxy)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.Proxy $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.net.Proxy;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.Proxy proxy> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setProxySelector(java.net.ProxySelector)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.ProxySelector $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.net.ProxySelector;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector> = $r1;

        return $r0;
    }

    public void setReadTimeout(long, java.util.concurrent.TimeUnit)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r1;
        byte $b2;
        java.lang.IllegalArgumentException $r2;
        int $i3;
        java.lang.String varReplacer1747, varReplacer1748, varReplacer1749, varReplacer1750;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1747 = "timeout < 0";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1747);

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1749 = "unit == null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1749);

        throw $r2;

     label2:
        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $b2 = $l1 cmp 2147483647L;

        if $b2 <= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1748 = "Timeout too large.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1748);

        throw $r2;

     label3:
        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1750 = "Timeout too small.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1750);

        throw $r2;

     label4:
        $i3 = (int) $l1;

        $r0.<com.squareup.okhttp.OkHttpClient: int readTimeout> = $i3;

        return;
    }

    public void setRetryOnConnectionFailure(boolean)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        boolean $z0;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $z0 := @parameter0: boolean;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean retryOnConnectionFailure> = $z0;

        return;
    }

    public com.squareup.okhttp.OkHttpClient setSocketFactory(javax.net.SocketFactory)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.SocketFactory $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: javax.net.SocketFactory;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.SSLSocketFactory $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory> = $r1;

        return $r0;
    }

    public void setWriteTimeout(long, java.util.concurrent.TimeUnit)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r1;
        byte $b2;
        java.lang.IllegalArgumentException $r2;
        int $i3;
        java.lang.String varReplacer1751, varReplacer1752, varReplacer1753, varReplacer1754;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1753 = "timeout < 0";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1753);

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1751 = "unit == null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1751);

        throw $r2;

     label2:
        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $b2 = $l1 cmp 2147483647L;

        if $b2 <= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1754 = "Timeout too large.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1754);

        throw $r2;

     label3:
        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer1752 = "Timeout too small.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer1752);

        throw $r2;

     label4:
        $i3 = (int) $l1;

        $r0.<com.squareup.okhttp.OkHttpClient: int writeTimeout> = $i3;

        return;
    }
}
