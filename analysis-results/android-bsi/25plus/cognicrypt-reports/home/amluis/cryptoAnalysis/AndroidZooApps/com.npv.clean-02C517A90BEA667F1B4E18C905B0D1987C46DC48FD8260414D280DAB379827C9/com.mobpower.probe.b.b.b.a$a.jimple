public class com.mobpower.probe.b.b.b.a$a extends java.lang.Object
{
    public static final java.lang.String a;
    public static final java.lang.String b;
    public static final java.lang.String c;

    public void <init>()
    {
        com.mobpower.probe.b.b.b.a$a $r0;

        $r0 := @this: com.mobpower.probe.b.b.b.a$a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer6340;
        byte[] $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer6340 = "u9jskafj";

        $r0 = staticinvoke <com.mobpower.probe.b.b.b.a$a: java.lang.String a(java.lang.String,byte[])>(varReplacer6340, $r2);

        return $r0;
    }

    public static java.lang.String a(java.lang.String, byte[])
    {
        java.lang.String $r0, varReplacer6344, varReplacer6347;
        byte[] $r1, $r4;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.spec.DESKeySpec $r3;
        javax.crypto.SecretKeyFactory $r5;
        javax.crypto.SecretKey $r6;
        javax.crypto.Cipher $r7;
        java.lang.Exception $r8, $r9;
        int varReplacer6345, varReplacer6346;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r3 = new javax.crypto.spec.DESKeySpec;

     label1:
        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r3.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r4);

        varReplacer6347 = "DES";

        $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6347);

        $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

        varReplacer6344 = "DES/CBC/PKCS5Padding";

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6344);

     label2:
        $r2 = new javax.crypto.spec.IvParameterSpec;

     label3:
        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        varReplacer6346 = 1;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6346, $r6, $r2);

        $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        varReplacer6345 = 2;

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r1, varReplacer6345);

     label4:
        return $r0;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.Exception;

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String b(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer6338, varReplacer6339;
        byte[] $r2;
        int varReplacer6337;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        varReplacer6337 = 0;

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, varReplacer6337);

        varReplacer6338 = "u9jskafj";

        $r2 = staticinvoke <com.mobpower.probe.b.b.b.a$a: byte[] b(java.lang.String,byte[])>(varReplacer6338, $r2);

        $r0 = new java.lang.String;

        varReplacer6339 = "utf-8";

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, varReplacer6339);

        return $r0;
    }

    public static byte[] b(java.lang.String, byte[])
    {
        java.lang.String $r0, varReplacer6342, varReplacer6343;
        byte[] $r1, $r5;
        javax.crypto.spec.IvParameterSpec $r2;
        java.security.SecureRandom $r3;
        javax.crypto.spec.DESKeySpec $r4;
        javax.crypto.SecretKeyFactory $r6;
        javax.crypto.SecretKey $r7;
        javax.crypto.Cipher $r8;
        java.lang.Exception $r9, $r10;
        int varReplacer6341;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r3 = new java.security.SecureRandom;

     label1:
        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

     label2:
        $r4 = new javax.crypto.spec.DESKeySpec;

     label3:
        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r4.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r5);

        varReplacer6343 = "DES";

        $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6343);

        $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4);

        varReplacer6342 = "DES/CBC/PKCS5Padding";

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6342);

     label4:
        $r2 = new javax.crypto.spec.IvParameterSpec;

     label5:
        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        varReplacer6341 = 2;

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6341, $r7, $r2);

        $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label6:
        return $r1;

     label7:
        $r9 := @caughtexception;

        $r10 = new java.lang.Exception;

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.Throwable)>($r9);

        throw $r10;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
}
