public class com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement extends java.lang.Object
{
    public static java.lang.String AB;
    public static java.lang.String BASE64;
    public static com.photo.shimmerphotoeditor.Utils.AppPrefs objPref;
    public static com.photo.shimmerphotoeditor.Utils.AppPrefs objPrefs;
    private static final java.math.BigInteger skip1024Base;
    private static final java.math.BigInteger skip1024Modulus;
    private static final byte[] skip1024ModulusBytes;

    static void <clinit>()
    {
        byte[] $r0;
        java.math.BigInteger $r1;
        int varReplacer3047;

        nop;

        $r0 = newarray (byte)[128];

        $r0[0] = -12;

        $r0[1] = -120;

        $r0[2] = -3;

        $r0[3] = 88;

        $r0[4] = 78;

        $r0[5] = 73;

        $r0[6] = -37;

        $r0[7] = -51;

        $r0[8] = 32;

        $r0[9] = -76;

        $r0[10] = -99;

        $r0[11] = -28;

        $r0[12] = -111;

        $r0[13] = 7;

        $r0[14] = 54;

        $r0[15] = 107;

        $r0[16] = 51;

        $r0[17] = 108;

        $r0[18] = 56;

        $r0[19] = 13;

        $r0[20] = 69;

        $r0[21] = 29;

        $r0[22] = 15;

        $r0[23] = 124;

        $r0[24] = -120;

        $r0[25] = -77;

        $r0[26] = 28;

        $r0[27] = 124;

        $r0[28] = 91;

        $r0[29] = 45;

        $r0[30] = -114;

        $r0[31] = -10;

        $r0[32] = -13;

        $r0[33] = -55;

        $r0[34] = 35;

        $r0[35] = -64;

        $r0[36] = 67;

        $r0[37] = -16;

        $r0[38] = -91;

        $r0[39] = 91;

        $r0[40] = 24;

        $r0[41] = -115;

        $r0[42] = -114;

        $r0[43] = -69;

        $r0[44] = 85;

        $r0[45] = -116;

        $r0[46] = -72;

        $r0[47] = 93;

        $r0[48] = 56;

        $r0[49] = -45;

        $r0[50] = 52;

        $r0[51] = -3;

        $r0[52] = 124;

        $r0[53] = 23;

        $r0[54] = 87;

        $r0[55] = 67;

        $r0[56] = -93;

        $r0[57] = 29;

        $r0[58] = 24;

        $r0[59] = 108;

        $r0[60] = -34;

        $r0[61] = 51;

        $r0[62] = 33;

        $r0[63] = 44;

        $r0[64] = -75;

        $r0[65] = 42;

        $r0[66] = -1;

        $r0[67] = 60;

        $r0[68] = -31;

        $r0[69] = -79;

        $r0[70] = 41;

        $r0[71] = 64;

        $r0[72] = 24;

        $r0[73] = 17;

        $r0[74] = -115;

        $r0[75] = 124;

        $r0[76] = -124;

        $r0[77] = -89;

        $r0[78] = 10;

        $r0[79] = 114;

        $r0[80] = -42;

        $r0[81] = -122;

        $r0[82] = -60;

        $r0[83] = 3;

        $r0[84] = 25;

        $r0[85] = -56;

        $r0[86] = 7;

        $r0[87] = 41;

        $r0[88] = 122;

        $r0[89] = -54;

        $r0[90] = -107;

        $r0[91] = 12;

        $r0[92] = -39;

        $r0[93] = -106;

        $r0[94] = -97;

        $r0[95] = -85;

        $r0[96] = -48;

        $r0[97] = 10;

        $r0[98] = 80;

        $r0[99] = -101;

        $r0[100] = 2;

        $r0[101] = 70;

        $r0[102] = -45;

        $r0[103] = 8;

        $r0[104] = 61;

        $r0[105] = 102;

        $r0[106] = -92;

        $r0[107] = 93;

        $r0[108] = 65;

        $r0[109] = -97;

        $r0[110] = -100;

        $r0[111] = 124;

        $r0[112] = -67;

        $r0[113] = -119;

        $r0[114] = 75;

        $r0[115] = 34;

        $r0[116] = 25;

        $r0[117] = 38;

        $r0[118] = -70;

        $r0[119] = -85;

        $r0[120] = -94;

        $r0[121] = 94;

        $r0[122] = -61;

        $r0[123] = 85;

        $r0[124] = -23;

        $r0[125] = 47;

        $r0[126] = 120;

        $r0[127] = -57;

        <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: byte[] skip1024ModulusBytes> = $r0;

        $r1 = new java.math.BigInteger;

        $r0 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: byte[] skip1024ModulusBytes>;

        varReplacer3047 = 1;

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(varReplacer3047, $r0);

        <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.math.BigInteger skip1024Modulus> = $r1;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

        <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.math.BigInteger skip1024Base> = $r1;

        return;
    }

    private void <init>()
    {
        com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement $r0;

        $r0 := @this: com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String CIPHER_TO_DHKEY_AGREEMENT_256BIT_KEYGENERATOR(java.lang.String, java.lang.String, android.content.Context) throws java.lang.Exception
    {
        java.lang.String $r0, $r1, $r3, $r10, $r11, $r19, varReplacer3048, varReplacer3049, varReplacer3050, varReplacer3051, varReplacer3052, varReplacer3053, varReplacer3054, varReplacer3055, varReplacer3056, varReplacer3057, varReplacer3060, varReplacer3061, varReplacer3062, varReplacer3064, varReplacer3065, varReplacer3066, varReplacer3067, varReplacer3068, varReplacer3069, varReplacer3070, varReplacer3071, varReplacer3072, varReplacer3073, varReplacer3074, varReplacer3075, varReplacer3076, varReplacer3077, varReplacer3079, varReplacer3080, varReplacer3081, varReplacer3084, varReplacer3085, varReplacer3087, varReplacer3090, varReplacer3092, varReplacer3093, varReplacer3095, varReplacer3096, varReplacer3097, varReplacer3098, varReplacer3099, varReplacer3100, varReplacer3101, varReplacer3103, varReplacer3104;
        android.content.Context $r2;
        int $i0, $i4, $i6, $i7, varReplacer3058, varReplacer3059, varReplacer3063, varReplacer3078, varReplacer3082, varReplacer3083, varReplacer3086, varReplacer3088, varReplacer3089, varReplacer3091, varReplacer3094, varReplacer3102;
        char $c1;
        java.util.ArrayList $r4, r45;
        byte $b2, $b5;
        java.lang.StringBuffer $r5, r44;
        short $s3;
        java.security.SecureRandom $r6, $r14;
        java.lang.StringBuilder $r7, $r15, $r17;
        com.photo.shimmerphotoeditor.Utils.AppPrefs $r8, r43;
        byte[] $r9, $r35, $r42;
        char[] $r12;
        java.io.PrintStream $r13;
        java.lang.Integer $r16;
        java.lang.Object $r18;
        java.lang.Exception $r20, $r21;
        boolean $z0;
        java.security.AlgorithmParameterGenerator $r22;
        java.security.AlgorithmParameters $r23;
        java.security.spec.AlgorithmParameterSpec $r24;
        javax.crypto.spec.DHParameterSpec $r25, r47;
        java.security.KeyPairGenerator $r26;
        java.security.KeyPair $r27;
        javax.crypto.KeyAgreement $r28, $r33;
        java.security.PrivateKey $r29;
        java.security.PublicKey $r30, $r34;
        java.security.KeyFactory $r31;
        javax.crypto.interfaces.DHPublicKey $r32;
        java.math.BigInteger $r36, $r37;
        java.lang.Throwable $r38;
        javax.crypto.SecretKey $r39, $r40;
        javax.crypto.Cipher $r41;
        java.security.spec.X509EncodedKeySpec r46;
        javax.crypto.ShortBufferException r48;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.Context;

        $r3 = "0507543543531369336336495513552528537519495333510525501528336531507528543528498495510543528537522486543498537510486519540336402555543537486390531531540405537486522498540336396507516399498549336444507510522522498537435510531435507528543528402495510543528537336";

        $r0 = "0504498543495510537333531507531";

        r43 = new com.photo.shimmerphotoeditor.Utils.AppPrefs;

        specialinvoke r43.<com.photo.shimmerphotoeditor.Utils.AppPrefs: void <init>(android.content.Context)>($r2);

        <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: com.photo.shimmerphotoeditor.Utils.AppPrefs objPref> = r43;

        $i4 = 0;

     label01:
        $r9 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: byte[] skip1024ModulusBytes>;

        $i0 = lengthof $r9;

        if $i4 >= $i0 goto label03;

        $r9 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: byte[] skip1024ModulusBytes>;

        $r10 = staticinvoke <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String toHexString(byte[])>($r9);

        $r11 = "";

        virtualinvoke $r11.<java.lang.String: java.lang.String concat(java.lang.String)>($r10);

        $r9 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: byte[] skip1024ModulusBytes>;

        $b2 = $r9[$i4];

        r44 = new java.lang.StringBuffer;

        $r5 = r44;

        specialinvoke r44.<java.lang.StringBuffer: void <init>()>();

        $r9 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: byte[] skip1024ModulusBytes>;

        $i0 = lengthof $r9;

        $r9 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: byte[] skip1024ModulusBytes>;

        $b5 = $r9[$i4];

        staticinvoke <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: void byte2hex(byte,java.lang.StringBuffer)>($b5, $r5);

        $i0 = $i0 + -1;

        if $i4 >= $i0 goto label02;

        varReplacer3067 = ":";

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer3067);

     label02:
        $r12 = newarray (char)[16];

        $r12[0] = 48;

        $r12[1] = 49;

        $r12[2] = 50;

        $r12[3] = 51;

        $r12[4] = 52;

        $r12[5] = 53;

        $r12[6] = 54;

        $r12[7] = 55;

        $r12[8] = 56;

        $r12[9] = 57;

        $r12[10] = 65;

        $r12[11] = 66;

        $r12[12] = 67;

        $r12[13] = 68;

        $r12[14] = 69;

        $r12[15] = 70;

        $s3 = $b2 & 240;

        $s3 = $s3 >> 4;

        $b2 = $b2 & 15;

        $c1 = $r12[$s3];

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $c1 = $r12[$b2];

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $i4 = $i4 + 1;

        goto label01;

     label03:
        $r13 = <java.lang.System: java.io.PrintStream err>;

        varReplacer3098 = "DHKeyAgreement usage: ";

        virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>(varReplacer3098);

        $r13 = <java.lang.System: java.io.PrintStream err>;

        varReplacer3075 = "[-gen]";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3075);

        varReplacer3061 = "HASH128";

        varReplacer3062 = "";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3061, varReplacer3062);

        r45 = new java.util.ArrayList;

        $r4 = r45;

        specialinvoke r45.<java.util.ArrayList: void <init>()>();

        varReplacer3084 = "0STu47DHW56CP8JUVG3ABc1sIMtKefgXEYZabL9kNQR2FxopqjdOyhL9ABnrvwz";

        <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String AB> = varReplacer3084;

        $r14 = new java.security.SecureRandom;

        $r6 = $r14;

        specialinvoke $r14.<java.security.SecureRandom: void <init>()>();

        $r17 = new java.lang.StringBuilder;

        $r7 = $r17;

        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String AB>;

        $i4 = virtualinvoke $r10.<java.lang.String: int length()>();

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(int)>($i4);

        $i4 = 0;

     label04:
        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String AB>;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i4 >= $i0 goto label05;

        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String AB>;

        $r11 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String AB>;

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i0 = virtualinvoke $r6.<java.security.SecureRandom: int nextInt(int)>($i0);

        $c1 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $i4 = $i4 + 1;

        goto label04;

     label05:
        varReplacer3093 = "2p9sSeJjqXoOhtBDyq3FxYDLPJhQqBzOokbHbXJkAwE22n93T90C321LO9KhOCy";

        <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64> = varReplacer3093;

        $i4 = 0;

     label06:
        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i4 >= $i0 goto label09;

        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $c1 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i4);

        $i0 = $c1 + 64;

        $i6 = 0;

     label07:
        $r6 = new java.security.SecureRandom;

        specialinvoke $r6.<java.security.SecureRandom: void <init>()>();

        $r17 = new java.lang.StringBuilder;

        $r10 = "0STu47DABcJUVG35LB2FxP8COWrEAvYZatsbnvfXL9NQRdw1IM9k6pqgjHKeyhoz";

        $i7 = virtualinvoke $r10.<java.lang.String: int length()>();

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(int)>($i7);

        if $i6 != 36 goto label08;

        $i0 = $i0 * 32;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        $i4 = $i4 + 1;

        goto label06;

     label08:
        $i6 = $i6 + 1;

        goto label07;

     label09:
        r43 = new com.photo.shimmerphotoeditor.Utils.AppPrefs;

        specialinvoke r43.<com.photo.shimmerphotoeditor.Utils.AppPrefs: void <init>(android.content.Context)>($r2);

        <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: com.photo.shimmerphotoeditor.Utils.AppPrefs objPrefs> = r43;

        $i4 = 0;

     label10:
        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i4 >= $i0 goto label13;

        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $c1 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i4);

        $i0 = $c1 + 64;

        $i6 = 0;

     label11:
        $r6 = new java.security.SecureRandom;

        specialinvoke $r6.<java.security.SecureRandom: void <init>()>();

        $r17 = new java.lang.StringBuilder;

        $r10 = "JUVcvDB2A0S375LTuCxQRZa9NAOP84tGBLdwjnvfXy6kFWrEHKepqh1IM9bsYgoz";

        $i7 = virtualinvoke $r10.<java.lang.String: int length()>();

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(int)>($i7);

        if $i6 != 96 goto label12;

        $i0 = $i0 * 32;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r4.<java.util.ArrayList: void add(int,java.lang.Object)>($i4, $r16);

        $i4 = $i4 + 1;

        goto label10;

     label12:
        $i6 = $i6 + 1;

        goto label11;

     label13:
        $r10 = "";

        $i4 = 0;

     label14:
        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i0 = $i0 / 2;

        if $i4 >= $i0 goto label17;

        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        virtualinvoke $r10.<java.lang.String: char charAt(int)>($i4);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer3073 = "0507543543531369336336495513552528537519495333510525501528336531507528543528498495510543528537522486543498537510486519540336402555543537486390531531540405537486522498540336396507516399498549336444507510522522498537435510531435507528543528402495510543528537336";

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3073);

        varReplacer3096 = "";

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3096);

        $r18 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r10 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = 0;

     label15:
        $r6 = new java.security.SecureRandom;

        specialinvoke $r6.<java.security.SecureRandom: void <init>()>();

        $r17 = new java.lang.StringBuilder;

        $r11 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $i6 = virtualinvoke $r11.<java.lang.String: int length()>();

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(int)>($i6);

        if $i0 != 96 goto label16;

        $i4 = $i4 + 1;

        goto label14;

     label16:
        $i0 = $i0 + 1;

        goto label15;

     label17:
        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3103 = "HASH64";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3103, $r11);

        $r11 = "";

        $i4 = 0;

     label18:
        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i4 >= $i0 goto label19;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        varReplacer3064 = "";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3064);

        $c1 = virtualinvoke $r10.<java.lang.String: char charAt(int)>($i4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $i4 = $i4 + 1;

        goto label18;

     label19:
        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String AB>;

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String AB>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        varReplacer3079 = "0507543543531369336336495513552528537519495333510525501528336531507528543528498495510543528537522486543498537510486519540336402555543537486390531531540405537486522498540336396507516399498549336444507510522522498537435510531435507528543528402495510543528537336";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3079);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = "";

        $r11 = "";

        $i4 = 1;

     label20:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

     label21:
        if $i4 >= $i0 goto label30;

        $r17 = new java.lang.StringBuilder;

        $r7 = $r17;

     label22:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $c1 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r19 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label23:
        $r11 = $r19;

        $i0 = $i4 % 3;

        if $i0 != 0 goto label28;

     label24:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

     label25:
        $i0 = $i0 / 3;

        $i0 = $i0 + -65;

        $c1 = (char) $i0;

        $r17 = new java.lang.StringBuilder;

        $r7 = $r17;

     label26:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label27:
        $r10 = $r11;

        $r11 = "";

     label28:
        $i4 = $i4 + 1;

        goto label20;

     label29:
        $r20 := @caughtexception;

        virtualinvoke $r20.<java.lang.Exception: void printStackTrace()>();

     label30:
        $r3 = "";

        $r11 = "";

        $i4 = 1;

     label31:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label32:
        if $i4 >= $i0 goto label41;

        $r17 = new java.lang.StringBuilder;

        $r7 = $r17;

     label33:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r19 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label34:
        $r11 = $r19;

        $i0 = $i4 % 3;

        if $i0 != 0 goto label39;

     label35:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r19);

     label36:
        $i0 = $i0 / 3;

        $i0 = $i0 + -65;

        $c1 = (char) $i0;

        $r17 = new java.lang.StringBuilder;

        $r7 = $r17;

     label37:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label38:
        $r3 = $r11;

        $r11 = "";

     label39:
        $i4 = $i4 + 1;

        goto label31;

     label40:
        $r21 := @caughtexception;

        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

     label41:
        $r8 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: com.photo.shimmerphotoeditor.Utils.AppPrefs objPref>;

        virtualinvoke $r8.<com.photo.shimmerphotoeditor.Utils.AppPrefs: void setDownloadURL(java.lang.String)>($r10);

        $r8 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: com.photo.shimmerphotoeditor.Utils.AppPrefs objPref>;

        virtualinvoke $r8.<com.photo.shimmerphotoeditor.Utils.AppPrefs: void setFileName(java.lang.String)>($r3);

        varReplacer3095 = "GENERATE_DH_PARAMS";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3095);

        if $z0 == 0 goto label45;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3100 = "Creating Diffie-Hellman parameters (takes VERY long) ...";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3100);

        varReplacer3060 = "DH";

        $r22 = staticinvoke <java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>(varReplacer3060);

        varReplacer3083 = 512;

        virtualinvoke $r22.<java.security.AlgorithmParameterGenerator: void init(int)>(varReplacer3083);

        $r23 = virtualinvoke $r22.<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameters generateParameters()>();

        $r24 = virtualinvoke $r23.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>(class "Ljavax/crypto/spec/DHParameterSpec;");

        $r25 = (javax.crypto.spec.DHParameterSpec) $r24;

        $r0 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        varReplacer3094 = 32;

        virtualinvoke $r0.<java.lang.String: int codePointBefore(int)>(varReplacer3094);

     label42:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3053 = "ALICE: Generate DH keypair ...";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3053);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer3054 = "DH";

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3054);

        $r0 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r0);

        virtualinvoke $r26.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r25);

        $r27 = virtualinvoke $r26.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3090 = "ALICE: Initialization ...";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3090);

        varReplacer3050 = "DH";

        $r28 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer3050);

        $r29 = virtualinvoke $r27.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        virtualinvoke $r28.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r29);

        $r30 = virtualinvoke $r27.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r9 = interfaceinvoke $r30.<java.security.PublicKey: byte[] getEncoded()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer3074 = "DH";

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3074);

        $r0 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r0);

        r46 = new java.security.spec.X509EncodedKeySpec;

        specialinvoke r46.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9);

        $r30 = virtualinvoke $r31.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r46);

        $r32 = (javax.crypto.interfaces.DHPublicKey) $r30;

        $r25 = interfaceinvoke $r32.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3049 = "BOB: Generate DH keypair ...";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3049);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer3065 = "DH";

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3065);

        $r0 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String BASE64>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r0);

        virtualinvoke $r26.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r25);

        $r27 = virtualinvoke $r26.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3068 = "BOB: Initialization ...";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3068);

        varReplacer3085 = "DH";

        $r33 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer3085);

        $r29 = virtualinvoke $r27.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        virtualinvoke $r33.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r29);

        $r34 = virtualinvoke $r27.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r9 = interfaceinvoke $r34.<java.security.PublicKey: byte[] getEncoded()>();

        varReplacer3057 = "DH";

        $r31 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3057);

        r46 = new java.security.spec.X509EncodedKeySpec;

        specialinvoke r46.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9);

        $r34 = virtualinvoke $r31.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r46);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3076 = "ALICE: Execute PHASE1 ...";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3076);

        varReplacer3082 = 1;

        virtualinvoke $r28.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r34, varReplacer3082);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3097 = "BOB: Execute PHASE1 ...";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3097);

        varReplacer3059 = 1;

        virtualinvoke $r33.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r30, varReplacer3059);

        $r9 = virtualinvoke $r28.<javax.crypto.KeyAgreement: byte[] generateSecret()>();

        $i4 = lengthof $r9;

        $r35 = newarray (byte)[$i4];

     label43:
        varReplacer3086 = 1;

        virtualinvoke $r33.<javax.crypto.KeyAgreement: int generateSecret(byte[],int)>($r35, varReplacer3086);

     label44:
        varReplacer3078 = 0;

        virtualinvoke $r33.<javax.crypto.KeyAgreement: int generateSecret(byte[],int)>($r35, varReplacer3078);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer3055 = "Alice secret: ";

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3055);

        $r0 = staticinvoke <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String toHexString(byte[])>($r9);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r0);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer3070 = "Bob secret: ";

        $r7 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3070);

        $r0 = staticinvoke <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String toHexString(byte[])>($r35);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r0);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r9, $r35);

        if $z0 != 0 goto label47;

        $r21 = new java.lang.Exception;

        varReplacer3069 = "Shared secrets differ";

        specialinvoke $r21.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer3069);

        throw $r21;

     label45:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3048 = "Using SKIP Diffie-Hellman parameters";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3048);

        r47 = new javax.crypto.spec.DHParameterSpec;

        $r25 = r47;

        $r36 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.math.BigInteger skip1024Modulus>;

        $r37 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.math.BigInteger skip1024Base>;

        specialinvoke r47.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r36, $r37);

        goto label42;

     label46:
        $r38 := @caughtexception;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        r48 = (javax.crypto.ShortBufferException) $r38;

        $r0 = virtualinvoke r48.<javax.crypto.ShortBufferException: java.lang.String getMessage()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r0);

        goto label44;

     label47:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3080 = "Shared secrets are the same";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3080);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3072 = "Return shared secret as SecretKey object ...";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3072);

        varReplacer3091 = 1;

        virtualinvoke $r33.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r30, varReplacer3091);

        varReplacer3051 = "DES";

        $r39 = virtualinvoke $r33.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>(varReplacer3051);

        varReplacer3088 = 1;

        virtualinvoke $r28.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r34, varReplacer3088);

        varReplacer3056 = "DES";

        $r40 = virtualinvoke $r28.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>(varReplacer3056);

        varReplacer3104 = "DES/ECB/PKCS5Padding";

        $r41 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3104);

        varReplacer3102 = 1;

        virtualinvoke $r41.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3102, $r39);

        $r0 = "This is just an example";

        $r9 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r35 = virtualinvoke $r41.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r9);

        varReplacer3087 = "DES/ECB/PKCS5Padding";

        $r41 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3087);

        varReplacer3089 = 2;

        virtualinvoke $r41.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3089, $r40);

        $r35 = virtualinvoke $r41.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r35);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r9, $r35);

        if $z0 != 0 goto label48;

        $r21 = new java.lang.Exception;

        varReplacer3081 = "DES in CBC mode recovered text is different from cleartext";

        specialinvoke $r21.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer3081);

        throw $r21;

     label48:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3099 = "DES in ECB mode recovered text is same as cleartext";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3099);

        varReplacer3077 = "DES/CBC/PKCS5Padding";

        $r41 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3077);

        varReplacer3058 = 1;

        virtualinvoke $r41.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3058, $r39);

        $r0 = "This is just an example";

        $r9 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r35 = virtualinvoke $r41.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r9);

        $r23 = virtualinvoke $r41.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();

        $r42 = virtualinvoke $r23.<java.security.AlgorithmParameters: byte[] getEncoded()>();

        varReplacer3052 = "DES";

        $r23 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer3052);

        virtualinvoke $r23.<java.security.AlgorithmParameters: void init(byte[])>($r42);

        varReplacer3092 = "DES/CBC/PKCS5Padding";

        $r41 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3092);

        varReplacer3063 = 2;

        virtualinvoke $r41.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer3063, $r40, $r23);

        $r35 = virtualinvoke $r41.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r35);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r9, $r35);

        if $z0 != 0 goto label49;

        $r21 = new java.lang.Exception;

        varReplacer3071 = "DES in CBC mode recovered text is different from cleartext";

        specialinvoke $r21.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer3071);

        throw $r21;

     label49:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3066 = "DES in CBC mode recovered text is same as cleartext";

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3066);

        varReplacer3101 = "";

        return varReplacer3101;

        catch java.lang.Exception from label20 to label21 with label29;
        catch java.lang.Exception from label22 to label23 with label29;
        catch java.lang.Exception from label24 to label25 with label29;
        catch java.lang.Exception from label26 to label27 with label29;
        catch java.lang.Exception from label31 to label32 with label40;
        catch java.lang.Exception from label33 to label34 with label40;
        catch java.lang.Exception from label35 to label36 with label40;
        catch java.lang.Exception from label37 to label38 with label40;
        catch javax.crypto.ShortBufferException from label43 to label44 with label46;
    }

    private static void byte2hex(byte, java.lang.StringBuffer)
    {
        byte $b0;
        java.lang.StringBuffer $r0;
        char[] $r1;
        short $s1;
        char $c2;

        nop;

        $b0 := @parameter0: byte;

        $r0 := @parameter1: java.lang.StringBuffer;

        $r1 = newarray (char)[16];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 65;

        $r1[11] = 66;

        $r1[12] = 67;

        $r1[13] = 68;

        $r1[14] = 69;

        $r1[15] = 70;

        $s1 = $b0 & 240;

        $s1 = $s1 >> 4;

        $b0 = $b0 & 15;

        $c2 = $r1[$s1];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $c2 = $r1[$b0];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] $r0;
        java.lang.Exception $r1;
        com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement $r2;
        java.lang.String $r3;
        int $i0;
        java.io.PrintStream $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $r3 = "USE_SKIP_DH_PARAMS";

        $r2 = new com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement;

     label01:
        specialinvoke $r2.<com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: void <init>()>();

        $i0 = lengthof $r0;

     label02:
        if $i0 <= 1 goto label07;

     label03:
        specialinvoke $r2.<com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: void usage()>();

     label04:
        $r1 = new java.lang.Exception;

     label05:
        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>("Wrong number of command options");

        throw $r1;

     label06:
        $r1 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r3);

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;

     label07:
        $i0 = lengthof $r0;

     label08:
        if $i0 != 1 goto label15;

     label09:
        $r3 = $r0[0];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("-gen");

     label10:
        if $z0 != 0 goto label14;

     label11:
        specialinvoke $r2.<com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: void usage()>();

     label12:
        $r1 = new java.lang.Exception;

        $r5 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognized flag: ");

        $r3 = $r0[0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>($r3);

        throw $r1;

     label14:
        $r3 = "GENERATE_DH_PARAMS";

     label15:
        specialinvoke $r2.<com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: void run(java.lang.String)>($r3);

     label16:
        return;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label03 to label04 with label06;
        catch java.lang.Exception from label05 to label06 with label06;
        catch java.lang.Exception from label07 to label08 with label06;
        catch java.lang.Exception from label09 to label10 with label06;
        catch java.lang.Exception from label11 to label12 with label06;
        catch java.lang.Exception from label13 to label14 with label06;
        catch java.lang.Exception from label15 to label16 with label06;
    }

    private void run(java.lang.String) throws java.lang.Exception
    {
        com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement $r0;
        java.lang.String $r1;
        int $i0;
        java.lang.Throwable $r2;
        boolean $z0;
        java.io.PrintStream $r3;
        java.security.AlgorithmParameterGenerator $r4;
        java.security.AlgorithmParameters $r5;
        java.security.spec.AlgorithmParameterSpec $r6;
        javax.crypto.spec.DHParameterSpec $r7, r29;
        java.security.KeyPairGenerator $r8;
        java.security.KeyPair $r9;
        javax.crypto.KeyAgreement $r10, $r16;
        java.security.PrivateKey $r11;
        java.security.PublicKey $r12, $r17;
        byte[] $r13, $r18, $r25;
        java.security.KeyFactory $r14;
        javax.crypto.interfaces.DHPublicKey $r15;
        java.lang.StringBuilder $r19, r27;
        java.math.BigInteger $r20, $r21;
        javax.crypto.SecretKey $r22, $r23;
        javax.crypto.Cipher $r24;
        java.security.spec.X509EncodedKeySpec r26;
        java.lang.Exception r28;
        javax.crypto.ShortBufferException r30;

        $r0 := @this: com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("GENERATE_DH_PARAMS");

        if $z0 == 0 goto label4;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Creating Diffie-Hellman parameters (takes VERY long) ...");

        $r4 = staticinvoke <java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>("DH");

        virtualinvoke $r4.<java.security.AlgorithmParameterGenerator: void init(int)>(512);

        $r5 = virtualinvoke $r4.<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameters generateParameters()>();

        $r6 = virtualinvoke $r5.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>(class "Ljavax/crypto/spec/DHParameterSpec;");

        $r7 = (javax.crypto.spec.DHParameterSpec) $r6;

     label1:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("ALICE: Generate DH keypair ...");

        $r8 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>("DH");

        virtualinvoke $r8.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r7);

        $r9 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("ALICE: Initialization ...");

        $r10 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>("DH");

        $r11 = virtualinvoke $r9.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        virtualinvoke $r10.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r11);

        $r12 = virtualinvoke $r9.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r13 = interfaceinvoke $r12.<java.security.PublicKey: byte[] getEncoded()>();

        $r14 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("DH");

        r26 = new java.security.spec.X509EncodedKeySpec;

        specialinvoke r26.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r13);

        $r12 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r26);

        $r15 = (javax.crypto.interfaces.DHPublicKey) $r12;

        $r7 = interfaceinvoke $r15.<javax.crypto.interfaces.DHPublicKey: javax.crypto.spec.DHParameterSpec getParams()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("BOB: Generate DH keypair ...");

        $r8 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>("DH");

        virtualinvoke $r8.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r7);

        $r9 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("BOB: Initialization ...");

        $r16 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>("DH");

        $r11 = virtualinvoke $r9.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        virtualinvoke $r16.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r11);

        $r17 = virtualinvoke $r9.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r13 = interfaceinvoke $r17.<java.security.PublicKey: byte[] getEncoded()>();

        $r14 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("DH");

        r26 = new java.security.spec.X509EncodedKeySpec;

        specialinvoke r26.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r13);

        $r17 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r26);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("ALICE: Execute PHASE1 ...");

        virtualinvoke $r10.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r17, 1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("BOB: Execute PHASE1 ...");

        virtualinvoke $r16.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r12, 1);

        $r13 = virtualinvoke $r10.<javax.crypto.KeyAgreement: byte[] generateSecret()>();

        $i0 = lengthof $r13;

        $r18 = newarray (byte)[$i0];

     label2:
        virtualinvoke $r16.<javax.crypto.KeyAgreement: int generateSecret(byte[],int)>($r18, 1);

     label3:
        virtualinvoke $r16.<javax.crypto.KeyAgreement: int generateSecret(byte[],int)>($r18, 0);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alice secret: ");

        $r1 = staticinvoke <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String toHexString(byte[])>($r13);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bob secret: ");

        $r1 = staticinvoke <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.lang.String toHexString(byte[])>($r18);

        $r19 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r13, $r18);

        if $z0 != 0 goto label6;

        r28 = new java.lang.Exception;

        specialinvoke r28.<java.lang.Exception: void <init>(java.lang.String)>("Shared secrets differ");

        throw r28;

     label4:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Using SKIP Diffie-Hellman parameters");

        r29 = new javax.crypto.spec.DHParameterSpec;

        $r7 = r29;

        $r20 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.math.BigInteger skip1024Modulus>;

        $r21 = <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: java.math.BigInteger skip1024Base>;

        specialinvoke r29.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r20, $r21);

        goto label1;

     label5:
        $r2 := @caughtexception;

        $r3 = <java.lang.System: java.io.PrintStream out>;

        r30 = (javax.crypto.ShortBufferException) $r2;

        $r1 = virtualinvoke r30.<javax.crypto.ShortBufferException: java.lang.String getMessage()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r1);

        goto label3;

     label6:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Shared secrets are the same");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Return shared secret as SecretKey object ...");

        virtualinvoke $r16.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r12, 1);

        $r22 = virtualinvoke $r16.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>("DES");

        virtualinvoke $r10.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r17, 1);

        $r23 = virtualinvoke $r10.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>("DES");

        $r24 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES/ECB/PKCS5Padding");

        virtualinvoke $r24.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r22);

        $r1 = "This is just an example";

        $r13 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r18 = virtualinvoke $r24.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r13);

        $r24 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES/ECB/PKCS5Padding");

        virtualinvoke $r24.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r23);

        $r18 = virtualinvoke $r24.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r18);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r13, $r18);

        if $z0 != 0 goto label7;

        r28 = new java.lang.Exception;

        specialinvoke r28.<java.lang.Exception: void <init>(java.lang.String)>("DES in CBC mode recovered text is different from cleartext");

        throw r28;

     label7:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("DES in ECB mode recovered text is same as cleartext");

        $r24 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES/CBC/PKCS5Padding");

        virtualinvoke $r24.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r22);

        $r1 = "This is just an example";

        $r13 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r18 = virtualinvoke $r24.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r13);

        $r5 = virtualinvoke $r24.<javax.crypto.Cipher: java.security.AlgorithmParameters getParameters()>();

        $r25 = virtualinvoke $r5.<java.security.AlgorithmParameters: byte[] getEncoded()>();

        $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>("DES");

        virtualinvoke $r5.<java.security.AlgorithmParameters: void init(byte[])>($r25);

        $r24 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES/CBC/PKCS5Padding");

        virtualinvoke $r24.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(2, $r23, $r5);

        $r18 = virtualinvoke $r24.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r18);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r13, $r18);

        if $z0 != 0 goto label8;

        r28 = new java.lang.Exception;

        specialinvoke r28.<java.lang.Exception: void <init>(java.lang.String)>("DES in CBC mode recovered text is different from cleartext");

        throw r28;

     label8:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("DES in CBC mode recovered text is same as cleartext");

        return;

        catch javax.crypto.ShortBufferException from label2 to label3 with label5;
    }

    public static java.lang.String toHexString(byte[])
    {
        byte[] $r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i3;
        java.lang.String $r2, varReplacer3105;
        byte $b2;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $b2 = $r0[$i1];

        staticinvoke <com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement: void byte2hex(byte,java.lang.StringBuffer)>($b2, $r1);

        $i3 = $i0 + -1;

        if $i1 >= $i3 goto label2;

        varReplacer3105 = ":";

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer3105);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private void usage()
    {
        com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement $r0;
        java.io.PrintStream $r1;

        $r0 := @this: com.photo.shimmerphotoeditor.Animationcomponent.DHKeyAgreement;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>("DHKeyAgreement usage: ");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("[-gen]");

        return;
    }
}
