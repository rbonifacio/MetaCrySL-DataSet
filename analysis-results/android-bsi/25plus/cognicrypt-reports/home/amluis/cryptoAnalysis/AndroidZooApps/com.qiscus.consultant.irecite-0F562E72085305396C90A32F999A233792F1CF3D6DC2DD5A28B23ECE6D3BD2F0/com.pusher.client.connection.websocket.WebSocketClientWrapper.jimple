public class com.pusher.client.connection.websocket.WebSocketClientWrapper extends org.java_websocket.client.WebSocketClient
{
    private static final java.lang.String WSS_SCHEME;
    private final com.pusher.client.connection.websocket.WebSocketListener webSocketListener;

    public void <init>(java.net.URI, java.net.Proxy, com.pusher.client.connection.websocket.WebSocketListener) throws javax.net.ssl.SSLException
    {
        com.pusher.client.connection.websocket.WebSocketClientWrapper $r0;
        java.net.URI $r1;
        java.net.Proxy $r2;
        com.pusher.client.connection.websocket.WebSocketListener $r3;
        java.lang.String $r4, varReplacer6578, varReplacer6582;
        boolean $z0;
        javax.net.ssl.SSLContext $r5;
        javax.net.ssl.SSLSocketFactory $r6;
        java.net.Socket $r7;
        java.lang.Throwable $r8, $r10, $r11;
        javax.net.ssl.SSLException $r9;
        null_type varReplacer6579, varReplacer6580, varReplacer6581;

        nop;

        $r0 := @this: com.pusher.client.connection.websocket.WebSocketClientWrapper;

        $r1 := @parameter0: java.net.URI;

        $r2 := @parameter1: java.net.Proxy;

        $r3 := @parameter2: com.pusher.client.connection.websocket.WebSocketListener;

        specialinvoke $r0.<org.java_websocket.client.WebSocketClient: void <init>(java.net.URI)>($r1);

        $r4 = virtualinvoke $r1.<java.net.URI: java.lang.String getScheme()>();

        varReplacer6578 = "wss";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6578);

        if $z0 == 0 goto label2;

     label1:
        varReplacer6582 = "TLS";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6582);

        varReplacer6579 = null;

        varReplacer6580 = null;

        varReplacer6581 = null;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6579, varReplacer6579, varReplacer6579);

        $r6 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r7 = virtualinvoke $r6.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        virtualinvoke $r0.<com.pusher.client.connection.websocket.WebSocketClientWrapper: void setSocket(java.net.Socket)>($r7);

     label2:
        $r0.<com.pusher.client.connection.websocket.WebSocketClientWrapper: com.pusher.client.connection.websocket.WebSocketListener webSocketListener> = $r3;

        virtualinvoke $r0.<com.pusher.client.connection.websocket.WebSocketClientWrapper: void setProxy(java.net.Proxy)>($r2);

        return;

     label3:
        $r8 := @caughtexception;

        $r9 = new javax.net.ssl.SSLException;

        specialinvoke $r9.<javax.net.ssl.SSLException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label4:
        $r10 := @caughtexception;

        $r9 = new javax.net.ssl.SSLException;

        specialinvoke $r9.<javax.net.ssl.SSLException: void <init>(java.lang.Throwable)>($r10);

        throw $r9;

     label5:
        $r11 := @caughtexception;

        $r9 = new javax.net.ssl.SSLException;

        specialinvoke $r9.<javax.net.ssl.SSLException: void <init>(java.lang.Throwable)>($r11);

        throw $r9;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch java.security.KeyManagementException from label1 to label2 with label5;
    }

    public void onClose(int, java.lang.String, boolean)
    {
        com.pusher.client.connection.websocket.WebSocketClientWrapper $r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0;
        com.pusher.client.connection.websocket.WebSocketListener $r2;

        nop;

        $r0 := @this: com.pusher.client.connection.websocket.WebSocketClientWrapper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r2 = $r0.<com.pusher.client.connection.websocket.WebSocketClientWrapper: com.pusher.client.connection.websocket.WebSocketListener webSocketListener>;

        interfaceinvoke $r2.<com.pusher.client.connection.websocket.WebSocketListener: void onClose(int,java.lang.String,boolean)>($i0, $r1, $z0);

        return;
    }

    public void onError(java.lang.Exception)
    {
        com.pusher.client.connection.websocket.WebSocketClientWrapper $r0;
        java.lang.Exception $r1;
        com.pusher.client.connection.websocket.WebSocketListener $r2;

        nop;

        $r0 := @this: com.pusher.client.connection.websocket.WebSocketClientWrapper;

        $r1 := @parameter0: java.lang.Exception;

        $r2 = $r0.<com.pusher.client.connection.websocket.WebSocketClientWrapper: com.pusher.client.connection.websocket.WebSocketListener webSocketListener>;

        interfaceinvoke $r2.<com.pusher.client.connection.websocket.WebSocketListener: void onError(java.lang.Exception)>($r1);

        return;
    }

    public void onMessage(java.lang.String)
    {
        com.pusher.client.connection.websocket.WebSocketClientWrapper $r0;
        java.lang.String $r1;
        com.pusher.client.connection.websocket.WebSocketListener $r2;

        nop;

        $r0 := @this: com.pusher.client.connection.websocket.WebSocketClientWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.pusher.client.connection.websocket.WebSocketClientWrapper: com.pusher.client.connection.websocket.WebSocketListener webSocketListener>;

        interfaceinvoke $r2.<com.pusher.client.connection.websocket.WebSocketListener: void onMessage(java.lang.String)>($r1);

        return;
    }

    public void onOpen(org.java_websocket.handshake.ServerHandshake)
    {
        com.pusher.client.connection.websocket.WebSocketClientWrapper $r0;
        org.java_websocket.handshake.ServerHandshake $r1;
        com.pusher.client.connection.websocket.WebSocketListener $r2;

        nop;

        $r0 := @this: com.pusher.client.connection.websocket.WebSocketClientWrapper;

        $r1 := @parameter0: org.java_websocket.handshake.ServerHandshake;

        $r2 = $r0.<com.pusher.client.connection.websocket.WebSocketClientWrapper: com.pusher.client.connection.websocket.WebSocketListener webSocketListener>;

        interfaceinvoke $r2.<com.pusher.client.connection.websocket.WebSocketListener: void onOpen(org.java_websocket.handshake.ServerHandshake)>($r1);

        return;
    }
}
