public class com.nielsen.app.sdk.AppLaunchMeasurementManager extends java.lang.Object
{
    public static final int BACKGROUND_ACTIVE;
    public static final int BACKGROUND_IDLE;
    public static final int BACKGROUND_INACTIVE;
    private static final java.lang.String a;
    private static final java.lang.String b;
    public static int bgTimeout;
    private static final java.lang.String c;
    private static final java.lang.String d;
    private static final java.lang.String e;
    private static final java.lang.String f;
    private static final java.lang.String g;
    private static final java.lang.String h;
    public static int hasBgTimeoutHappened;
    private static final java.lang.String i;
    private static final java.lang.String j;
    private static final java.lang.String k;
    private static final java.lang.String l;
    private static final java.lang.String m;
    public static java.lang.String mFilesDirectory;
    private static final java.lang.String n;
    private static final java.lang.String o;
    private static final java.lang.String p;
    private static final java.lang.String q;
    private static final java.lang.String r;
    private static final int s;
    private static android.content.SharedPreferences t;
    private static android.content.Context u;

    static void <clinit>()
    {
        int varReplacer1863, varReplacer1865;
        java.lang.String varReplacer1864;

        nop;

        varReplacer1863 = 5;

        <com.nielsen.app.sdk.AppLaunchMeasurementManager: int bgTimeout> = varReplacer1863;

        varReplacer1864 = "";

        <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory> = varReplacer1864;

        varReplacer1865 = -1;

        <com.nielsen.app.sdk.AppLaunchMeasurementManager: int hasBgTimeoutHappened> = varReplacer1865;

        return;
    }

    public void <init>()
    {
        com.nielsen.app.sdk.AppLaunchMeasurementManager $r0;

        $r0 := @this: com.nielsen.app.sdk.AppLaunchMeasurementManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void a()
    {
        java.util.HashMap $r0;
        java.util.Collection $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.nielsen.app.sdk.a $r4;
        com.nielsen.app.sdk.h $r5;

        $r0 = staticinvoke <com.nielsen.app.sdk.k: java.util.HashMap F()>();

        if $r0 == null goto label2;

        $r1 = virtualinvoke $r0.<java.util.HashMap: java.util.Collection values()>();

        $r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.nielsen.app.sdk.a) $r3;

        if $r4 == null goto label1;

        $r5 = virtualinvoke $r4.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h w()>();

        if $r5 == null goto label1;

        virtualinvoke $r5.<com.nielsen.app.sdk.h: boolean h()>();

        goto label1;

     label2:
        return;
    }

    private static void a(long, boolean, long)
    {
        long $l0, $l1;
        boolean $z0;
        org.json.JSONObject $r0;
        byte $b2;
        org.json.JSONException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        $l1 := @parameter2: long;

        $r0 = new org.json.JSONObject;

        specialinvoke $r0.<org.json.JSONObject: void <init>()>();

     label1:
        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("totalduration", $l0);

     label2:
        if $z0 == 0 goto label5;

        $b2 = 1;

     label3:
        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,int)>("crashflag", $b2);

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,long)>("timestamp", $l1);

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(org.json.JSONObject)>($r0);

     label4:
        return;

     label5:
        $b2 = 0;

        goto label3;

     label6:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: createPing:: JSONException occured");

        $r3 = virtualinvoke $r1.<org.json.JSONException: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r3);

        return;

        catch org.json.JSONException from label1 to label2 with label6;
        catch org.json.JSONException from label3 to label4 with label6;
    }

    private static void a(android.content.SharedPreferences)
    {
        android.content.SharedPreferences $r0;
        android.content.SharedPreferences$Editor $r1;
        java.lang.String varReplacer9850, varReplacer9851, varReplacer9852;

        nop;

        $r0 := @parameter0: android.content.SharedPreferences;

        if $r0 == null goto label1;

        $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer9850 = "FgStartTime";

        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>(varReplacer9850);

        varReplacer9852 = "FgEndTime";

        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>(varReplacer9852);

        varReplacer9851 = "isCrashed";

        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>(varReplacer9851);

        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: void apply()>();

     label1:
        return;
    }

    private static void a(android.content.SharedPreferences, boolean, long, boolean)
    {
        android.content.SharedPreferences $r0;
        boolean $z0, $z1;
        long $l0;
        android.content.SharedPreferences$Editor $r1;

        $r0 := @parameter0: android.content.SharedPreferences;

        $z0 := @parameter1: boolean;

        $l0 := @parameter2: long;

        $z1 := @parameter3: boolean;

        if $r0 == null goto label3;

        $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("FgStartTime", $l0);

     label1:
        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>("isCrashed", $z1);

        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: void apply()>();

        return;

     label2:
        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putLong(java.lang.String,long)>("FgEndTime", $l0);

        goto label1;

     label3:
        return;
    }

    private static void a(java.util.ArrayList)
    {
        java.util.ArrayList $r0;
        java.util.HashMap $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.nielsen.app.sdk.a $r5;
        com.nielsen.app.sdk.h $r6;
        java.lang.String $r7;

        $r0 := @parameter0: java.util.ArrayList;

        $r1 = staticinvoke <com.nielsen.app.sdk.k: java.util.HashMap F()>();

        if $r1 == null goto label4;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.nielsen.app.sdk.a) $r4;

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r5.<com.nielsen.app.sdk.a: com.nielsen.app.sdk.h w()>();

        if $r6 == null goto label1;

        if $r0 == null goto label3;

        $r7 = virtualinvoke $r0.<java.util.ArrayList: java.lang.String toString()>();

     label2:
        virtualinvoke $r6.<com.nielsen.app.sdk.h: boolean i(java.lang.String)>($r7);

        return;

     label3:
        $r7 = "NULL";

        goto label2;

     label4:
        return;
    }

    private static void a(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.lang.Object $r1, $r5, $r14;
        int $i0, $i1;
        java.lang.String $r2, $r10, r37;
        boolean $z0;
        java.io.File $r3, r33;
        java.io.FileReader $r4, r34;
        java.lang.StringBuilder $r6, r36;
        java.lang.Throwable $r7, $r9, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        java.io.BufferedWriter $r8, r40;
        byte[] $r11;
        org.json.JSONArray $r12, $r13, r38;
        java.io.FileWriter $r15, r39;
        org.json.JSONException $r22;
        java.io.BufferedReader r35;
        java.io.FileNotFoundException r41;
        java.io.IOException r42;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = null;

        $i0 = 1;

        $r2 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory>;

        if $r2 == null goto label001;

        $r2 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label001;

        if $r0 != null goto label002;

     label001:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", "AppLaunchMeasurementManager :: storePingDetails:: Error in storing ping details. Invalid files directory / json object");

        return;

     label002:
        r33 = new java.io.File;

        $r3 = r33;

        $r2 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory>;

        specialinvoke r33.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r2, "launchpings.txt");

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label092;

     label003:
        r34 = new java.io.FileReader;

     label004:
        $r4 = r34;

     label005:
        specialinvoke r34.<java.io.FileReader: void <init>(java.io.File)>($r3);

     label006:
        r35 = new java.io.BufferedReader;

     label007:
        $r5 = r35;

     label008:
        specialinvoke r35.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

     label009:
        r36 = new java.lang.StringBuilder;

     label010:
        $r6 = r36;

     label011:
        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

     label012:
        r35 = (java.io.BufferedReader) $r5;

     label013:
        $r2 = virtualinvoke r35.<java.io.BufferedReader: java.lang.String readLine()>();

     label014:
        if $r2 == null goto label027;

     label015:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label016:
        goto label012;

     label017:
        $r7 := @caughtexception;

        $r8 = null;

        $r1 = $r5;

     label018:
        r36 = new java.lang.StringBuilder;

     label019:
        $r6 = r36;

     label020:
        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: FileNotFoundException occured");

        r41 = (java.io.FileNotFoundException) $r7;

        $r2 = virtualinvoke r41.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

     label021:
        if $r1 == null goto label023;

        r35 = (java.io.BufferedReader) $r1;

     label022:
        virtualinvoke r35.<java.io.BufferedReader: void close()>();

     label023:
        if $r8 == null goto label131;

     label024:
        virtualinvoke $r8.<java.io.BufferedWriter: void close()>();

     label025:
        return;

     label026:
        $r9 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r9;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        return;

     label027:
        $i1 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

     label028:
        if $i1 == 0 goto label043;

     label029:
        r37 = new java.lang.String;

     label030:
        $r2 = r37;

     label031:
        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r10, 0);

        $r11 = staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>($r11, 2);

        specialinvoke r37.<java.lang.String: void <init>(byte[])>($r11);

     label032:
        $r13 = new org.json.JSONArray;

     label033:
        $r12 = $r13;

     label034:
        specialinvoke $r13.<org.json.JSONArray: void <init>(java.lang.String)>($r2);

        $i1 = virtualinvoke $r12.<org.json.JSONArray: int length()>();

     label035:
        if $i1 != 200 goto label130;

     label036:
        r38 = new org.json.JSONArray;

     label037:
        $r13 = r38;

     label038:
        specialinvoke r38.<org.json.JSONArray: void <init>()>();

     label039:
        $i1 = virtualinvoke $r12.<org.json.JSONArray: int length()>();

     label040:
        if $i0 >= $i1 goto label046;

     label041:
        $r14 = virtualinvoke $r12.<org.json.JSONArray: java.lang.Object get(int)>($i0);

        virtualinvoke $r13.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r14);

     label042:
        $i0 = $i0 + 1;

        goto label039;

     label043:
        $r12 = new org.json.JSONArray;

     label044:
        $r13 = $r12;

     label045:
        specialinvoke $r12.<org.json.JSONArray: void <init>()>();

     label046:
        virtualinvoke $r13.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r0);

     label047:
        r39 = new java.io.FileWriter;

     label048:
        $r15 = r39;

     label049:
        specialinvoke r39.<java.io.FileWriter: void <init>(java.io.File)>($r3);

     label050:
        r40 = new java.io.BufferedWriter;

     label051:
        $r8 = r40;

     label052:
        specialinvoke r40.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r15);

     label053:
        $r2 = virtualinvoke $r13.<org.json.JSONArray: java.lang.String toString()>();

        $r11 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r11 = staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>($r11, 1);

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r11, 0);

        virtualinvoke $r8.<java.io.BufferedWriter: void write(java.lang.String)>($r2);

     label054:
        if $r5 == null goto label056;

        r35 = (java.io.BufferedReader) $r5;

     label055:
        virtualinvoke r35.<java.io.BufferedReader: void close()>();

     label056:
        if $r8 == null goto label131;

     label057:
        virtualinvoke $r8.<java.io.BufferedWriter: void close()>();

     label058:
        return;

     label059:
        $r16 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r16;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        return;

     label060:
        $r17 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r17;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        goto label056;

     label061:
        $r18 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r18;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        goto label023;

     label062:
        $r19 := @caughtexception;

        $r5 = null;

     label063:
        r36 = new java.lang.StringBuilder;

     label064:
        $r6 = r36;

     label065:
        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r19;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

     label066:
        if $r5 == null goto label068;

        r35 = (java.io.BufferedReader) $r5;

     label067:
        virtualinvoke r35.<java.io.BufferedReader: void close()>();

     label068:
        if $r1 == null goto label131;

        $r8 = (java.io.BufferedWriter) $r1;

     label069:
        virtualinvoke $r8.<java.io.BufferedWriter: void close()>();

     label070:
        return;

     label071:
        $r20 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r20;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        return;

     label072:
        $r21 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r21;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        goto label068;

     label073:
        $r22 := @caughtexception;

        $r5 = null;

     label074:
        virtualinvoke $r3.<java.io.File: boolean delete()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NielsenAPPSDK", "AppLaunchMeasurementManager :: storePingDetails:: File used for storing launch pings is corrupted. Deleting it from storage.");

        r36 = new java.lang.StringBuilder;

     label075:
        $r6 = r36;

     label076:
        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: JSONException occured");

        $r2 = virtualinvoke $r22.<org.json.JSONException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

     label077:
        if $r5 == null goto label079;

        r35 = (java.io.BufferedReader) $r5;

     label078:
        virtualinvoke r35.<java.io.BufferedReader: void close()>();

     label079:
        if $r1 == null goto label131;

        $r8 = (java.io.BufferedWriter) $r1;

     label080:
        virtualinvoke $r8.<java.io.BufferedWriter: void close()>();

     label081:
        return;

     label082:
        $r23 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r23;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        return;

     label083:
        $r24 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r24;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        goto label079;

     label084:
        $r25 := @caughtexception;

        $r5 = null;

     label085:
        if $r5 == null goto label087;

        r35 = (java.io.BufferedReader) $r5;

     label086:
        virtualinvoke r35.<java.io.BufferedReader: void close()>();

     label087:
        if $r1 == null goto label089;

        $r8 = (java.io.BufferedWriter) $r1;

     label088:
        virtualinvoke $r8.<java.io.BufferedWriter: void close()>();

     label089:
        throw $r25;

     label090:
        $r26 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r26;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        goto label087;

     label091:
        $r27 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r27;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        goto label089;

     label092:
        $r13 = new org.json.JSONArray;

     label093:
        $r12 = $r13;

     label094:
        specialinvoke $r13.<org.json.JSONArray: void <init>()>();

        virtualinvoke $r12.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r0);

     label095:
        r39 = new java.io.FileWriter;

     label096:
        $r15 = r39;

     label097:
        specialinvoke r39.<java.io.FileWriter: void <init>(java.io.File)>($r3);

     label098:
        r40 = new java.io.BufferedWriter;

     label099:
        $r8 = r40;

     label100:
        specialinvoke r40.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r15);

     label101:
        $r2 = virtualinvoke $r12.<org.json.JSONArray: java.lang.String toString()>();

        $r11 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r11 = staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>($r11, 1);

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r11, 0);

        virtualinvoke $r8.<java.io.BufferedWriter: void write(java.lang.String)>($r2);

     label102:
        if $r8 == null goto label131;

     label103:
        virtualinvoke $r8.<java.io.BufferedWriter: void close()>();

     label104:
        return;

     label105:
        $r28 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r28;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        return;

     label106:
        $r29 := @caughtexception;

     label107:
        r36 = new java.lang.StringBuilder;

     label108:
        $r6 = r36;

     label109:
        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r29;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

     label110:
        if $r1 == null goto label131;

        $r8 = (java.io.BufferedWriter) $r1;

     label111:
        virtualinvoke $r8.<java.io.BufferedWriter: void close()>();

     label112:
        return;

     label113:
        $r30 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r30;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        return;

     label114:
        $r31 := @caughtexception;

     label115:
        if $r1 == null goto label117;

        $r8 = (java.io.BufferedWriter) $r1;

     label116:
        virtualinvoke $r8.<java.io.BufferedWriter: void close()>();

     label117:
        throw $r31;

     label118:
        $r32 := @caughtexception;

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: storePingDetails:: IOException occured");

        r42 = (java.io.IOException) $r32;

        $r2 = virtualinvoke r42.<java.io.IOException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r2);

        goto label117;

     label119:
        $r31 := @caughtexception;

        $r1 = $r8;

        goto label115;

     label120:
        $r29 := @caughtexception;

        $r1 = $r8;

        goto label107;

     label121:
        $r25 := @caughtexception;

        goto label085;

     label122:
        $r25 := @caughtexception;

        $r1 = $r8;

        goto label085;

     label123:
        $r25 := @caughtexception;

        $r5 = $r1;

        $r1 = $r8;

        goto label085;

     label124:
        $r22 := @caughtexception;

        goto label074;

     label125:
        $r22 := @caughtexception;

        $r1 = $r8;

        goto label074;

     label126:
        $r19 := @caughtexception;

        goto label063;

     label127:
        $r19 := @caughtexception;

        $r1 = $r8;

        goto label063;

     label128:
        $r7 := @caughtexception;

        $r8 = null;

        goto label018;

     label129:
        $r7 := @caughtexception;

        $r1 = $r5;

        goto label018;

     label130:
        $r13 = $r12;

        goto label046;

     label131:
        return;

        catch java.io.FileNotFoundException from label005 to label006 with label128;
        catch java.io.FileNotFoundException from label008 to label009 with label128;
        catch java.io.IOException from label005 to label006 with label062;
        catch java.io.IOException from label008 to label009 with label062;
        catch org.json.JSONException from label005 to label006 with label073;
        catch org.json.JSONException from label008 to label009 with label073;
        catch java.lang.Throwable from label003 to label004 with label084;
        catch java.lang.Throwable from label005 to label007 with label084;
        catch java.lang.Throwable from label008 to label009 with label084;
        catch java.io.FileNotFoundException from label011 to label012 with label017;
        catch java.io.FileNotFoundException from label013 to label014 with label017;
        catch java.io.FileNotFoundException from label015 to label016 with label017;
        catch java.io.IOException from label011 to label012 with label126;
        catch java.io.IOException from label013 to label014 with label126;
        catch java.io.IOException from label015 to label016 with label126;
        catch org.json.JSONException from label011 to label012 with label124;
        catch org.json.JSONException from label013 to label014 with label124;
        catch org.json.JSONException from label015 to label016 with label124;
        catch java.lang.Throwable from label009 to label010 with label121;
        catch java.lang.Throwable from label011 to label014 with label121;
        catch java.lang.Throwable from label015 to label016 with label121;
        catch java.lang.Throwable from label018 to label019 with label123;
        catch java.lang.Throwable from label020 to label021 with label123;
        catch java.io.IOException from label022 to label023 with label061;
        catch java.io.IOException from label024 to label025 with label026;
        catch java.io.FileNotFoundException from label027 to label028 with label017;
        catch java.io.FileNotFoundException from label031 to label032 with label017;
        catch java.io.FileNotFoundException from label034 to label035 with label017;
        catch java.io.FileNotFoundException from label038 to label040 with label017;
        catch java.io.FileNotFoundException from label041 to label042 with label017;
        catch java.io.FileNotFoundException from label045 to label047 with label017;
        catch java.io.FileNotFoundException from label049 to label050 with label017;
        catch java.io.FileNotFoundException from label052 to label053 with label017;
        catch java.io.IOException from label027 to label028 with label126;
        catch java.io.IOException from label031 to label032 with label126;
        catch java.io.IOException from label034 to label035 with label126;
        catch java.io.IOException from label038 to label040 with label126;
        catch java.io.IOException from label041 to label042 with label126;
        catch java.io.IOException from label045 to label047 with label126;
        catch java.io.IOException from label049 to label050 with label126;
        catch java.io.IOException from label052 to label053 with label126;
        catch org.json.JSONException from label027 to label028 with label124;
        catch org.json.JSONException from label031 to label032 with label124;
        catch org.json.JSONException from label034 to label035 with label124;
        catch org.json.JSONException from label038 to label040 with label124;
        catch org.json.JSONException from label041 to label042 with label124;
        catch org.json.JSONException from label045 to label047 with label124;
        catch org.json.JSONException from label049 to label050 with label124;
        catch org.json.JSONException from label052 to label053 with label124;
        catch java.lang.Throwable from label027 to label028 with label121;
        catch java.lang.Throwable from label029 to label030 with label121;
        catch java.lang.Throwable from label031 to label033 with label121;
        catch java.lang.Throwable from label034 to label035 with label121;
        catch java.lang.Throwable from label036 to label037 with label121;
        catch java.lang.Throwable from label038 to label040 with label121;
        catch java.lang.Throwable from label041 to label042 with label121;
        catch java.lang.Throwable from label043 to label044 with label121;
        catch java.lang.Throwable from label045 to label048 with label121;
        catch java.lang.Throwable from label049 to label051 with label121;
        catch java.lang.Throwable from label052 to label053 with label121;
        catch java.io.FileNotFoundException from label053 to label054 with label129;
        catch java.io.IOException from label053 to label054 with label127;
        catch org.json.JSONException from label053 to label054 with label125;
        catch java.lang.Throwable from label053 to label054 with label122;
        catch java.io.IOException from label055 to label056 with label060;
        catch java.io.IOException from label057 to label058 with label059;
        catch java.lang.Throwable from label063 to label064 with label121;
        catch java.lang.Throwable from label065 to label066 with label121;
        catch java.io.IOException from label067 to label068 with label072;
        catch java.io.IOException from label069 to label070 with label071;
        catch java.lang.Throwable from label074 to label075 with label121;
        catch java.lang.Throwable from label076 to label077 with label121;
        catch java.io.IOException from label078 to label079 with label083;
        catch java.io.IOException from label080 to label081 with label082;
        catch java.io.IOException from label086 to label087 with label090;
        catch java.io.IOException from label088 to label089 with label091;
        catch java.io.IOException from label094 to label095 with label106;
        catch java.io.IOException from label097 to label098 with label106;
        catch java.io.IOException from label100 to label101 with label106;
        catch java.lang.Throwable from label092 to label093 with label114;
        catch java.lang.Throwable from label094 to label096 with label114;
        catch java.lang.Throwable from label097 to label099 with label114;
        catch java.lang.Throwable from label100 to label101 with label114;
        catch java.io.IOException from label101 to label102 with label120;
        catch java.lang.Throwable from label101 to label102 with label119;
        catch java.io.IOException from label103 to label104 with label105;
        catch java.lang.Throwable from label107 to label108 with label114;
        catch java.lang.Throwable from label109 to label110 with label114;
        catch java.io.IOException from label111 to label112 with label113;
        catch java.io.IOException from label116 to label117 with label118;
    }

    private static byte[] a(byte[], int)
    {
        byte[] $r0, $r11, $r13;
        int $i0, $i1, varReplacer9888, varReplacer9893, varReplacer9897, varReplacer9923, varReplacer9941, varReplacer9969;
        android.content.Context $r1;
        java.lang.String $r2, varReplacer9853, varReplacer9854, varReplacer9855, varReplacer9856, varReplacer9857, varReplacer9858, varReplacer9860, varReplacer9861, varReplacer9862, varReplacer9864, varReplacer9865, varReplacer9867, varReplacer9868, varReplacer9869, varReplacer9870, varReplacer9871, varReplacer9872, varReplacer9874, varReplacer9878, varReplacer9879, varReplacer9880, varReplacer9882, varReplacer9884, varReplacer9885, varReplacer9887, varReplacer9889, varReplacer9890, varReplacer9891, varReplacer9894, varReplacer9895, varReplacer9898, varReplacer9899, varReplacer9900, varReplacer9901, varReplacer9902, varReplacer9903, varReplacer9904, varReplacer9905, varReplacer9907, varReplacer9908, varReplacer9909, varReplacer9910, varReplacer9911, varReplacer9912, varReplacer9913, varReplacer9914, varReplacer9915, varReplacer9916, varReplacer9917, varReplacer9918, varReplacer9919, varReplacer9920, varReplacer9921, varReplacer9922, varReplacer9924, varReplacer9926, varReplacer9928, varReplacer9929, varReplacer9931, varReplacer9932, varReplacer9935, varReplacer9936, varReplacer9937, varReplacer9938, varReplacer9940, varReplacer9942, varReplacer9943, varReplacer9944, varReplacer9945, varReplacer9946, varReplacer9947, varReplacer9948, varReplacer9950, varReplacer9951, varReplacer9952, varReplacer9953, varReplacer9954, varReplacer9956, varReplacer9957, varReplacer9961, varReplacer9964, varReplacer9965, varReplacer9966, varReplacer9967, varReplacer9968, varReplacer9970, varReplacer9971, varReplacer9972, varReplacer9973, varReplacer9975, varReplacer9976, varReplacer9977, varReplacer9978, varReplacer9979;
        java.security.KeyStore $r3;
        android.content.SharedPreferences $r4;
        java.io.File $r5, r60;
        boolean $z0;
        java.io.FileInputStream $r6, $r7;
        char[] $r8;
        java.security.Key $r9;
        javax.crypto.SecretKey $r10;
        javax.crypto.spec.IvParameterSpec $r12, r61;
        java.io.FileOutputStream $r14, $r20;
        javax.crypto.spec.SecretKeySpec $r15, r62;
        javax.crypto.Cipher $r16;
        javax.crypto.KeyGenerator $r17;
        java.security.SecureRandom $r18;
        android.content.SharedPreferences$Editor $r19;
        java.lang.Throwable $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59;
        java.lang.StringBuilder $r22, r63;
        java.io.IOException r64;
        java.security.KeyStoreException r65;
        java.io.FileNotFoundException r66;
        java.security.NoSuchAlgorithmException r67;
        java.security.cert.CertificateException r68;
        java.security.UnrecoverableKeyException r69;
        javax.crypto.NoSuchPaddingException r70;
        java.security.InvalidKeyException r71;
        java.security.InvalidAlgorithmParameterException r72;
        javax.crypto.IllegalBlockSizeException r73;
        javax.crypto.BadPaddingException r74;
        null_type varReplacer9859, varReplacer9863, varReplacer9866, varReplacer9873, varReplacer9875, varReplacer9876, varReplacer9877, varReplacer9881, varReplacer9883, varReplacer9886, varReplacer9892, varReplacer9896, varReplacer9906, varReplacer9925, varReplacer9927, varReplacer9930, varReplacer9933, varReplacer9934, varReplacer9939, varReplacer9949, varReplacer9955, varReplacer9958, varReplacer9959, varReplacer9960, varReplacer9962, varReplacer9963, varReplacer9974;

        nop;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u>;

        if $r1 == null goto label181;

        if $r0 == null goto label181;

     label001:
        $r2 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2);

     label002:
        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u>;

     label003:
        varReplacer9887 = "applaunch_keystore_prefs";

        varReplacer9888 = 0;

        $r4 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer9887, varReplacer9888);

     label004:
        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u>;

     label005:
        $r5 = virtualinvoke $r1.<android.content.Context: java.io.File getFilesDir()>();

        $r2 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

     label006:
        r60 = new java.io.File;

     label007:
        $r5 = r60;

     label008:
        varReplacer9902 = "applaunch.keystore";

        specialinvoke r60.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r2, varReplacer9902);

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label009:
        if $z0 == 0 goto label033;

     label010:
        varReplacer9967 = "KEYSTORE_PASSWORD";

        varReplacer9968 = "";

        $r2 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer9967, varReplacer9968);

     label011:
        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u>;

     label012:
        varReplacer9944 = "applaunch.keystore";

        $r6 = virtualinvoke $r1.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>(varReplacer9944);

     label013:
        $r7 = $r6;

     label014:
        $r8 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r8);

        $r8 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        varReplacer9853 = "SECRET_KEY";

        $r9 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer9853, $r8);

     label015:
        $r10 = (javax.crypto.SecretKey) $r9;

     label016:
        if $r10 == null goto label219;

     label017:
        $r11 = interfaceinvoke $r10.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label018:
        $r8 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        varReplacer9909 = "IV_KEY";

        $r9 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer9909, $r8);

     label019:
        $r10 = (javax.crypto.SecretKey) $r9;

     label020:
        if $r10 == null goto label218;

     label021:
        r61 = new javax.crypto.spec.IvParameterSpec;

     label022:
        $r13 = interfaceinvoke $r10.<javax.crypto.SecretKey: byte[] getEncoded()>();

        specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13);

     label023:
        $r12 = r61;

     label024:
        $r14 = null;

     label025:
        r62 = new javax.crypto.spec.SecretKeySpec;

     label026:
        $r15 = r62;

     label027:
        varReplacer9855 = "AES";

        specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer9855);

        varReplacer9899 = "AES/CBC/PKCS5Padding";

        $r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9899);

        varReplacer9969 = 1;

        virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9969, $r15, $r12);

        $r0 = virtualinvoke $r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label028:
        if $r7 == null goto label030;

     label029:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label030:
        if $r14 == null goto label220;

     label031:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label032:
        return $r0;

     label033:
        varReplacer9867 = "AES";

        $r17 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9867);

        varReplacer9924 = "SHA1PRNG";

        $r18 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer9924);

        varReplacer9923 = 256;

        virtualinvoke $r17.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer9923, $r18);

     label034:
        $r11 = newarray (byte)[16];

     label035:
        virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r11);

        varReplacer9893 = 0;

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r11, varReplacer9893);

        varReplacer9884 = "[^A-Za-z]+";

        varReplacer9885 = "";

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(varReplacer9884, varReplacer9885);

        $r19 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer9870 = "KEYSTORE_PASSWORD";

        interfaceinvoke $r19.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer9870, $r2);

        interfaceinvoke $r19.<android.content.SharedPreferences$Editor: boolean commit()>();

        $r10 = virtualinvoke $r17.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r11 = interfaceinvoke $r10.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label036:
        $r13 = newarray (byte)[16];

     label037:
        virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r13);

     label038:
        r61 = new javax.crypto.spec.IvParameterSpec;

     label039:
        $r12 = r61;

     label040:
        specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13);

     label041:
        r62 = new javax.crypto.spec.SecretKeySpec;

     label042:
        $r15 = r62;

     label043:
        $i1 = lengthof $r13;

     label044:
        varReplacer9897 = 0;

        varReplacer9898 = "AES";

        specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer9897, $i1, varReplacer9898);

        $r8 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        varReplacer9883 = null;

        virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer9883, $r8);

     label045:
        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u>;

     label046:
        varReplacer9940 = "applaunch.keystore";

        varReplacer9941 = 0;

        $r20 = virtualinvoke $r1.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>(varReplacer9940, varReplacer9941);

     label047:
        $r14 = $r20;

     label048:
        $r8 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        varReplacer9895 = "SECRET_KEY";

        varReplacer9896 = null;

        virtualinvoke $r3.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>(varReplacer9895, $r10, $r8, varReplacer9896);

        $r8 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        varReplacer9926 = "IV_KEY";

        varReplacer9927 = null;

        virtualinvoke $r3.<java.security.KeyStore: void setKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>(varReplacer9926, $r15, $r8, varReplacer9927);

        $r8 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r3.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r20, $r8);

     label049:
        $r7 = null;

        goto label025;

     label050:
        $r21 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9947 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9947);

        r64 = (java.io.IOException) $r21;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9916 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9916, $r2);

        goto label030;

     label051:
        $r23 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9915 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9915);

        r64 = (java.io.IOException) $r23;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9865 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9865, $r2);

        return $r0;

     label052:
        $r24 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label053:
        r63 = new java.lang.StringBuilder;

     label054:
        $r22 = r63;

     label055:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9860 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: KeyStoreException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9860);

        r65 = (java.security.KeyStoreException) $r24;

        $r2 = virtualinvoke r65.<java.security.KeyStoreException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9905 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9905, $r2);

     label056:
        if $r7 == null goto label058;

     label057:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label058:
        if $r14 == null goto label221;

     label059:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label060:
        varReplacer9959 = null;

        return varReplacer9959;

     label061:
        $r25 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9869 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9869);

        r64 = (java.io.IOException) $r25;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9928 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9928, $r2);

        varReplacer9906 = null;

        return varReplacer9906;

     label062:
        $r26 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9945 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9945);

        r64 = (java.io.IOException) $r26;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9970 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9970, $r2);

        goto label058;

     label063:
        $r27 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label064:
        r63 = new java.lang.StringBuilder;

     label065:
        $r22 = r63;

     label066:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9954 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: FileNotFoundException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9954);

        r66 = (java.io.FileNotFoundException) $r27;

        $r2 = virtualinvoke r66.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9914 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9914, $r2);

     label067:
        if $r7 == null goto label069;

     label068:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label069:
        if $r14 == null goto label221;

     label070:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label071:
        varReplacer9892 = null;

        return varReplacer9892;

     label072:
        $r28 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9973 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9973);

        r64 = (java.io.IOException) $r28;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9948 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9948, $r2);

        varReplacer9873 = null;

        return varReplacer9873;

     label073:
        $r29 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9935 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9935);

        r64 = (java.io.IOException) $r29;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9920 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9920, $r2);

        goto label069;

     label074:
        $r30 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label075:
        r63 = new java.lang.StringBuilder;

     label076:
        $r22 = r63;

     label077:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9879 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: NoSuchAlgorithmException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9879);

        r67 = (java.security.NoSuchAlgorithmException) $r30;

        $r2 = virtualinvoke r67.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9904 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9904, $r2);

     label078:
        if $r7 == null goto label080;

     label079:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label080:
        if $r14 == null goto label221;

     label081:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label082:
        varReplacer9949 = null;

        return varReplacer9949;

     label083:
        $r31 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9943 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9943);

        r64 = (java.io.IOException) $r31;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9957 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9957, $r2);

        varReplacer9877 = null;

        return varReplacer9877;

     label084:
        $r32 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9922 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9922);

        r64 = (java.io.IOException) $r32;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9891 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9891, $r2);

        goto label080;

     label085:
        $r33 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label086:
        r63 = new java.lang.StringBuilder;

     label087:
        $r22 = r63;

     label088:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9890 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: CertificateException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9890);

        r68 = (java.security.cert.CertificateException) $r33;

        $r2 = virtualinvoke r68.<java.security.cert.CertificateException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9901 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9901, $r2);

     label089:
        if $r7 == null goto label091;

     label090:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label091:
        if $r14 == null goto label221;

     label092:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label093:
        varReplacer9955 = null;

        return varReplacer9955;

     label094:
        $r34 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9912 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9912);

        r64 = (java.io.IOException) $r34;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9951 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9951, $r2);

        varReplacer9930 = null;

        return varReplacer9930;

     label095:
        $r35 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9917 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9917);

        r64 = (java.io.IOException) $r35;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9861 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9861, $r2);

        goto label091;

     label096:
        $r36 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label097:
        r63 = new java.lang.StringBuilder;

     label098:
        $r22 = r63;

     label099:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9929 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9929);

        r64 = (java.io.IOException) $r36;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9878 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9878, $r2);

     label100:
        if $r7 == null goto label102;

     label101:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label102:
        if $r14 == null goto label221;

     label103:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label104:
        varReplacer9958 = null;

        return varReplacer9958;

     label105:
        $r37 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9937 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9937);

        r64 = (java.io.IOException) $r37;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9889 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9889, $r2);

        varReplacer9933 = null;

        return varReplacer9933;

     label106:
        $r38 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9872 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9872);

        r64 = (java.io.IOException) $r38;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9942 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9942, $r2);

        goto label102;

     label107:
        $r39 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label108:
        r63 = new java.lang.StringBuilder;

     label109:
        $r22 = r63;

     label110:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9950 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: UnrecoverableKeyException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9950);

        r69 = (java.security.UnrecoverableKeyException) $r39;

        $r2 = virtualinvoke r69.<java.security.UnrecoverableKeyException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9856 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9856, $r2);

     label111:
        if $r7 == null goto label113;

     label112:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label113:
        if $r14 == null goto label221;

     label114:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label115:
        varReplacer9974 = null;

        return varReplacer9974;

     label116:
        $r40 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9919 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9919);

        r64 = (java.io.IOException) $r40;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9913 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9913, $r2);

        varReplacer9863 = null;

        return varReplacer9863;

     label117:
        $r41 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9979 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9979);

        r64 = (java.io.IOException) $r41;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9936 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9936, $r2);

        goto label113;

     label118:
        $r42 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label119:
        r63 = new java.lang.StringBuilder;

     label120:
        $r22 = r63;

     label121:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9952 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: NoSuchPaddingException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9952);

        r70 = (javax.crypto.NoSuchPaddingException) $r42;

        $r2 = virtualinvoke r70.<javax.crypto.NoSuchPaddingException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9880 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9880, $r2);

     label122:
        if $r7 == null goto label124;

     label123:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label124:
        if $r14 == null goto label221;

     label125:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label126:
        varReplacer9866 = null;

        return varReplacer9866;

     label127:
        $r43 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9978 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9978);

        r64 = (java.io.IOException) $r43;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9857 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9857, $r2);

        varReplacer9881 = null;

        return varReplacer9881;

     label128:
        $r44 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9858 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9858);

        r64 = (java.io.IOException) $r44;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9938 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9938, $r2);

        goto label124;

     label129:
        $r45 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label130:
        r63 = new java.lang.StringBuilder;

     label131:
        $r22 = r63;

     label132:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9874 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: InvalidKeyException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9874);

        r71 = (java.security.InvalidKeyException) $r45;

        $r2 = virtualinvoke r71.<java.security.InvalidKeyException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9862 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9862, $r2);

     label133:
        if $r7 == null goto label135;

     label134:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label135:
        if $r14 == null goto label221;

     label136:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label137:
        varReplacer9886 = null;

        return varReplacer9886;

     label138:
        $r46 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9953 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9953);

        r64 = (java.io.IOException) $r46;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9882 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9882, $r2);

        varReplacer9963 = null;

        return varReplacer9963;

     label139:
        $r47 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9854 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9854);

        r64 = (java.io.IOException) $r47;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9965 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9965, $r2);

        goto label135;

     label140:
        $r48 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label141:
        r63 = new java.lang.StringBuilder;

     label142:
        $r22 = r63;

     label143:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9910 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: InvalidAlgorithmParameterException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9910);

        r72 = (java.security.InvalidAlgorithmParameterException) $r48;

        $r2 = virtualinvoke r72.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9918 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9918, $r2);

     label144:
        if $r7 == null goto label146;

     label145:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label146:
        if $r14 == null goto label221;

     label147:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label148:
        varReplacer9960 = null;

        return varReplacer9960;

     label149:
        $r49 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9907 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9907);

        r64 = (java.io.IOException) $r49;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9911 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9911, $r2);

        varReplacer9962 = null;

        return varReplacer9962;

     label150:
        $r50 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9931 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9931);

        r64 = (java.io.IOException) $r50;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9900 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9900, $r2);

        goto label146;

     label151:
        $r51 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label152:
        r63 = new java.lang.StringBuilder;

     label153:
        $r22 = r63;

     label154:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9971 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IllegalBlockSizeException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9971);

        r73 = (javax.crypto.IllegalBlockSizeException) $r51;

        $r2 = virtualinvoke r73.<javax.crypto.IllegalBlockSizeException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9966 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9966, $r2);

     label155:
        if $r7 == null goto label157;

     label156:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label157:
        if $r14 == null goto label221;

     label158:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label159:
        varReplacer9876 = null;

        return varReplacer9876;

     label160:
        $r52 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9894 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9894);

        r64 = (java.io.IOException) $r52;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9864 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9864, $r2);

        varReplacer9939 = null;

        return varReplacer9939;

     label161:
        $r53 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9972 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9972);

        r64 = (java.io.IOException) $r53;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9961 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9961, $r2);

        goto label157;

     label162:
        $r54 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label163:
        r63 = new java.lang.StringBuilder;

     label164:
        $r22 = r63;

     label165:
        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9946 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: BadPaddingException occured";

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9946);

        r74 = (javax.crypto.BadPaddingException) $r54;

        $r2 = virtualinvoke r74.<javax.crypto.BadPaddingException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9903 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9903, $r2);

     label166:
        if $r7 == null goto label168;

     label167:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label168:
        if $r14 == null goto label221;

     label169:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label170:
        varReplacer9934 = null;

        return varReplacer9934;

     label171:
        $r55 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9871 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9871);

        r64 = (java.io.IOException) $r55;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9956 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9956, $r2);

        varReplacer9925 = null;

        return varReplacer9925;

     label172:
        $r56 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9908 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9908);

        r64 = (java.io.IOException) $r56;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9921 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9921, $r2);

        goto label168;

     label173:
        $r57 := @caughtexception;

        $r14 = null;

        $r7 = null;

     label174:
        if $r7 == null goto label176;

     label175:
        virtualinvoke $r7.<java.io.FileInputStream: void close()>();

     label176:
        if $r14 == null goto label178;

     label177:
        virtualinvoke $r14.<java.io.FileOutputStream: void close()>();

     label178:
        throw $r57;

     label179:
        $r58 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9868 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9868);

        r64 = (java.io.IOException) $r58;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9932 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9932, $r2);

        goto label176;

     label180:
        $r59 := @caughtexception;

        r63 = new java.lang.StringBuilder;

        specialinvoke r63.<java.lang.StringBuilder: void <init>()>();

        varReplacer9964 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: IOException occured";

        $r22 = virtualinvoke r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9964);

        r64 = (java.io.IOException) $r59;

        $r2 = virtualinvoke r64.<java.io.IOException: java.lang.String getMessage()>();

        $r22 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9975 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9975, $r2);

        goto label178;

     label181:
        varReplacer9976 = "NielsenAPPSDK";

        varReplacer9977 = "AppLaunchMeasurementManager :: performEncryptOrDecrypt:: Unable to encrypt/decrypt ! App Context or the data passed is NULL";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9976, varReplacer9977);

        varReplacer9859 = null;

        return varReplacer9859;

     label182:
        $r57 := @caughtexception;

        $r14 = null;

        goto label174;

     label183:
        $r57 := @caughtexception;

        $r7 = null;

        goto label174;

     label184:
        $r57 := @caughtexception;

        goto label174;

     label185:
        $r54 := @caughtexception;

        $r14 = null;

        goto label163;

     label186:
        $r54 := @caughtexception;

        $r7 = null;

        goto label163;

     label187:
        $r54 := @caughtexception;

        goto label163;

     label188:
        $r51 := @caughtexception;

        $r14 = null;

        goto label152;

     label189:
        $r51 := @caughtexception;

        $r7 = null;

        goto label152;

     label190:
        $r51 := @caughtexception;

        goto label152;

     label191:
        $r48 := @caughtexception;

        $r14 = null;

        goto label141;

     label192:
        $r48 := @caughtexception;

        $r7 = null;

        goto label141;

     label193:
        $r48 := @caughtexception;

        goto label141;

     label194:
        $r45 := @caughtexception;

        $r14 = null;

        goto label130;

     label195:
        $r45 := @caughtexception;

        $r7 = null;

        goto label130;

     label196:
        $r45 := @caughtexception;

        goto label130;

     label197:
        $r42 := @caughtexception;

        $r14 = null;

        goto label119;

     label198:
        $r42 := @caughtexception;

        $r7 = null;

        goto label119;

     label199:
        $r42 := @caughtexception;

        goto label119;

     label200:
        $r39 := @caughtexception;

        $r14 = null;

        goto label108;

     label201:
        $r39 := @caughtexception;

        $r7 = null;

        goto label108;

     label202:
        $r39 := @caughtexception;

        goto label108;

     label203:
        $r36 := @caughtexception;

        $r14 = null;

        goto label097;

     label204:
        $r36 := @caughtexception;

        $r7 = null;

        goto label097;

     label205:
        $r36 := @caughtexception;

        goto label097;

     label206:
        $r33 := @caughtexception;

        $r14 = null;

        goto label086;

     label207:
        $r33 := @caughtexception;

        $r7 = null;

        goto label086;

     label208:
        $r33 := @caughtexception;

        goto label086;

     label209:
        $r30 := @caughtexception;

        $r14 = null;

        goto label075;

     label210:
        $r30 := @caughtexception;

        $r7 = null;

        goto label075;

     label211:
        $r30 := @caughtexception;

        goto label075;

     label212:
        $r27 := @caughtexception;

        $r14 = null;

        goto label064;

     label213:
        $r27 := @caughtexception;

        $r7 = null;

        goto label064;

     label214:
        $r27 := @caughtexception;

        goto label064;

     label215:
        $r24 := @caughtexception;

        $r14 = null;

        goto label053;

     label216:
        $r24 := @caughtexception;

        $r7 = null;

        goto label053;

     label217:
        $r24 := @caughtexception;

        goto label053;

     label218:
        $r12 = null;

        goto label024;

     label219:
        $r11 = null;

        goto label018;

     label220:
        return $r0;

     label221:
        varReplacer9875 = null;

        return varReplacer9875;

        catch java.security.KeyStoreException from label001 to label002 with label052;
        catch java.security.KeyStoreException from label003 to label004 with label052;
        catch java.security.KeyStoreException from label005 to label006 with label052;
        catch java.security.KeyStoreException from label008 to label009 with label052;
        catch java.security.KeyStoreException from label010 to label011 with label052;
        catch java.security.KeyStoreException from label012 to label013 with label052;
        catch java.io.FileNotFoundException from label001 to label002 with label063;
        catch java.io.FileNotFoundException from label003 to label004 with label063;
        catch java.io.FileNotFoundException from label005 to label006 with label063;
        catch java.io.FileNotFoundException from label008 to label009 with label063;
        catch java.io.FileNotFoundException from label010 to label011 with label063;
        catch java.io.FileNotFoundException from label012 to label013 with label063;
        catch java.security.NoSuchAlgorithmException from label001 to label002 with label074;
        catch java.security.NoSuchAlgorithmException from label003 to label004 with label074;
        catch java.security.NoSuchAlgorithmException from label005 to label006 with label074;
        catch java.security.NoSuchAlgorithmException from label008 to label009 with label074;
        catch java.security.NoSuchAlgorithmException from label010 to label011 with label074;
        catch java.security.NoSuchAlgorithmException from label012 to label013 with label074;
        catch java.security.cert.CertificateException from label001 to label002 with label085;
        catch java.security.cert.CertificateException from label003 to label004 with label085;
        catch java.security.cert.CertificateException from label005 to label006 with label085;
        catch java.security.cert.CertificateException from label008 to label009 with label085;
        catch java.security.cert.CertificateException from label010 to label011 with label085;
        catch java.security.cert.CertificateException from label012 to label013 with label085;
        catch java.io.IOException from label001 to label002 with label096;
        catch java.io.IOException from label003 to label004 with label096;
        catch java.io.IOException from label005 to label006 with label096;
        catch java.io.IOException from label008 to label009 with label096;
        catch java.io.IOException from label010 to label011 with label096;
        catch java.io.IOException from label012 to label013 with label096;
        catch java.security.UnrecoverableKeyException from label001 to label002 with label107;
        catch java.security.UnrecoverableKeyException from label003 to label004 with label107;
        catch java.security.UnrecoverableKeyException from label005 to label006 with label107;
        catch java.security.UnrecoverableKeyException from label008 to label009 with label107;
        catch java.security.UnrecoverableKeyException from label010 to label011 with label107;
        catch java.security.UnrecoverableKeyException from label012 to label013 with label107;
        catch javax.crypto.NoSuchPaddingException from label001 to label002 with label118;
        catch javax.crypto.NoSuchPaddingException from label003 to label004 with label118;
        catch javax.crypto.NoSuchPaddingException from label005 to label006 with label118;
        catch javax.crypto.NoSuchPaddingException from label008 to label009 with label118;
        catch javax.crypto.NoSuchPaddingException from label010 to label011 with label118;
        catch javax.crypto.NoSuchPaddingException from label012 to label013 with label118;
        catch java.security.InvalidKeyException from label001 to label002 with label129;
        catch java.security.InvalidKeyException from label003 to label004 with label129;
        catch java.security.InvalidKeyException from label005 to label006 with label129;
        catch java.security.InvalidKeyException from label008 to label009 with label129;
        catch java.security.InvalidKeyException from label010 to label011 with label129;
        catch java.security.InvalidKeyException from label012 to label013 with label129;
        catch java.security.InvalidAlgorithmParameterException from label001 to label002 with label140;
        catch java.security.InvalidAlgorithmParameterException from label003 to label004 with label140;
        catch java.security.InvalidAlgorithmParameterException from label005 to label006 with label140;
        catch java.security.InvalidAlgorithmParameterException from label008 to label009 with label140;
        catch java.security.InvalidAlgorithmParameterException from label010 to label011 with label140;
        catch java.security.InvalidAlgorithmParameterException from label012 to label013 with label140;
        catch javax.crypto.IllegalBlockSizeException from label001 to label002 with label151;
        catch javax.crypto.IllegalBlockSizeException from label003 to label004 with label151;
        catch javax.crypto.IllegalBlockSizeException from label005 to label006 with label151;
        catch javax.crypto.IllegalBlockSizeException from label008 to label009 with label151;
        catch javax.crypto.IllegalBlockSizeException from label010 to label011 with label151;
        catch javax.crypto.IllegalBlockSizeException from label012 to label013 with label151;
        catch javax.crypto.BadPaddingException from label001 to label002 with label162;
        catch javax.crypto.BadPaddingException from label003 to label004 with label162;
        catch javax.crypto.BadPaddingException from label005 to label006 with label162;
        catch javax.crypto.BadPaddingException from label008 to label009 with label162;
        catch javax.crypto.BadPaddingException from label010 to label011 with label162;
        catch javax.crypto.BadPaddingException from label012 to label013 with label162;
        catch java.lang.Throwable from label001 to label007 with label173;
        catch java.lang.Throwable from label008 to label009 with label173;
        catch java.lang.Throwable from label010 to label013 with label173;
        catch java.security.KeyStoreException from label014 to label015 with label215;
        catch java.security.KeyStoreException from label017 to label018 with label215;
        catch java.security.KeyStoreException from label018 to label019 with label215;
        catch java.security.KeyStoreException from label022 to label023 with label215;
        catch java.io.FileNotFoundException from label014 to label015 with label212;
        catch java.io.FileNotFoundException from label017 to label018 with label212;
        catch java.io.FileNotFoundException from label018 to label019 with label212;
        catch java.io.FileNotFoundException from label022 to label023 with label212;
        catch java.security.NoSuchAlgorithmException from label014 to label015 with label209;
        catch java.security.NoSuchAlgorithmException from label017 to label018 with label209;
        catch java.security.NoSuchAlgorithmException from label018 to label019 with label209;
        catch java.security.NoSuchAlgorithmException from label022 to label023 with label209;
        catch java.security.cert.CertificateException from label014 to label015 with label206;
        catch java.security.cert.CertificateException from label017 to label018 with label206;
        catch java.security.cert.CertificateException from label018 to label019 with label206;
        catch java.security.cert.CertificateException from label022 to label023 with label206;
        catch java.io.IOException from label014 to label015 with label203;
        catch java.io.IOException from label017 to label018 with label203;
        catch java.io.IOException from label018 to label019 with label203;
        catch java.io.IOException from label022 to label023 with label203;
        catch java.security.UnrecoverableKeyException from label014 to label015 with label200;
        catch java.security.UnrecoverableKeyException from label017 to label018 with label200;
        catch java.security.UnrecoverableKeyException from label018 to label019 with label200;
        catch java.security.UnrecoverableKeyException from label022 to label023 with label200;
        catch javax.crypto.NoSuchPaddingException from label014 to label015 with label197;
        catch javax.crypto.NoSuchPaddingException from label017 to label018 with label197;
        catch javax.crypto.NoSuchPaddingException from label018 to label019 with label197;
        catch javax.crypto.NoSuchPaddingException from label022 to label023 with label197;
        catch java.security.InvalidKeyException from label014 to label015 with label194;
        catch java.security.InvalidKeyException from label017 to label018 with label194;
        catch java.security.InvalidKeyException from label018 to label019 with label194;
        catch java.security.InvalidKeyException from label022 to label023 with label194;
        catch java.security.InvalidAlgorithmParameterException from label014 to label015 with label191;
        catch java.security.InvalidAlgorithmParameterException from label017 to label018 with label191;
        catch java.security.InvalidAlgorithmParameterException from label018 to label019 with label191;
        catch java.security.InvalidAlgorithmParameterException from label022 to label023 with label191;
        catch javax.crypto.IllegalBlockSizeException from label014 to label015 with label188;
        catch javax.crypto.IllegalBlockSizeException from label017 to label018 with label188;
        catch javax.crypto.IllegalBlockSizeException from label018 to label019 with label188;
        catch javax.crypto.IllegalBlockSizeException from label022 to label023 with label188;
        catch javax.crypto.BadPaddingException from label014 to label015 with label185;
        catch javax.crypto.BadPaddingException from label017 to label018 with label185;
        catch javax.crypto.BadPaddingException from label018 to label019 with label185;
        catch javax.crypto.BadPaddingException from label022 to label023 with label185;
        catch java.lang.Throwable from label014 to label016 with label182;
        catch java.lang.Throwable from label017 to label018 with label182;
        catch java.lang.Throwable from label018 to label020 with label182;
        catch java.lang.Throwable from label021 to label022 with label182;
        catch java.lang.Throwable from label022 to label023 with label182;
        catch java.security.KeyStoreException from label027 to label028 with label217;
        catch java.io.FileNotFoundException from label027 to label028 with label214;
        catch java.security.NoSuchAlgorithmException from label027 to label028 with label211;
        catch java.security.cert.CertificateException from label027 to label028 with label208;
        catch java.io.IOException from label027 to label028 with label205;
        catch java.security.UnrecoverableKeyException from label027 to label028 with label202;
        catch javax.crypto.NoSuchPaddingException from label027 to label028 with label199;
        catch java.security.InvalidKeyException from label027 to label028 with label196;
        catch java.security.InvalidAlgorithmParameterException from label027 to label028 with label193;
        catch javax.crypto.IllegalBlockSizeException from label027 to label028 with label190;
        catch javax.crypto.BadPaddingException from label027 to label028 with label187;
        catch java.lang.Throwable from label025 to label026 with label184;
        catch java.lang.Throwable from label027 to label028 with label184;
        catch java.io.IOException from label029 to label030 with label050;
        catch java.io.IOException from label031 to label032 with label051;
        catch java.security.KeyStoreException from label033 to label034 with label052;
        catch java.security.KeyStoreException from label035 to label036 with label052;
        catch java.security.KeyStoreException from label037 to label038 with label052;
        catch java.security.KeyStoreException from label040 to label041 with label052;
        catch java.security.KeyStoreException from label044 to label045 with label052;
        catch java.security.KeyStoreException from label046 to label047 with label052;
        catch java.io.FileNotFoundException from label033 to label034 with label063;
        catch java.io.FileNotFoundException from label035 to label036 with label063;
        catch java.io.FileNotFoundException from label037 to label038 with label063;
        catch java.io.FileNotFoundException from label040 to label041 with label063;
        catch java.io.FileNotFoundException from label044 to label045 with label063;
        catch java.io.FileNotFoundException from label046 to label047 with label063;
        catch java.security.NoSuchAlgorithmException from label033 to label034 with label074;
        catch java.security.NoSuchAlgorithmException from label035 to label036 with label074;
        catch java.security.NoSuchAlgorithmException from label037 to label038 with label074;
        catch java.security.NoSuchAlgorithmException from label040 to label041 with label074;
        catch java.security.NoSuchAlgorithmException from label044 to label045 with label074;
        catch java.security.NoSuchAlgorithmException from label046 to label047 with label074;
        catch java.security.cert.CertificateException from label033 to label034 with label085;
        catch java.security.cert.CertificateException from label035 to label036 with label085;
        catch java.security.cert.CertificateException from label037 to label038 with label085;
        catch java.security.cert.CertificateException from label040 to label041 with label085;
        catch java.security.cert.CertificateException from label044 to label045 with label085;
        catch java.security.cert.CertificateException from label046 to label047 with label085;
        catch java.io.IOException from label033 to label034 with label096;
        catch java.io.IOException from label035 to label036 with label096;
        catch java.io.IOException from label037 to label038 with label096;
        catch java.io.IOException from label040 to label041 with label096;
        catch java.io.IOException from label044 to label045 with label096;
        catch java.io.IOException from label046 to label047 with label096;
        catch java.security.UnrecoverableKeyException from label033 to label034 with label107;
        catch java.security.UnrecoverableKeyException from label035 to label036 with label107;
        catch java.security.UnrecoverableKeyException from label037 to label038 with label107;
        catch java.security.UnrecoverableKeyException from label040 to label041 with label107;
        catch java.security.UnrecoverableKeyException from label044 to label045 with label107;
        catch java.security.UnrecoverableKeyException from label046 to label047 with label107;
        catch javax.crypto.NoSuchPaddingException from label033 to label034 with label118;
        catch javax.crypto.NoSuchPaddingException from label035 to label036 with label118;
        catch javax.crypto.NoSuchPaddingException from label037 to label038 with label118;
        catch javax.crypto.NoSuchPaddingException from label040 to label041 with label118;
        catch javax.crypto.NoSuchPaddingException from label044 to label045 with label118;
        catch javax.crypto.NoSuchPaddingException from label046 to label047 with label118;
        catch java.security.InvalidKeyException from label033 to label034 with label129;
        catch java.security.InvalidKeyException from label035 to label036 with label129;
        catch java.security.InvalidKeyException from label037 to label038 with label129;
        catch java.security.InvalidKeyException from label040 to label041 with label129;
        catch java.security.InvalidKeyException from label044 to label045 with label129;
        catch java.security.InvalidKeyException from label046 to label047 with label129;
        catch java.security.InvalidAlgorithmParameterException from label033 to label034 with label140;
        catch java.security.InvalidAlgorithmParameterException from label035 to label036 with label140;
        catch java.security.InvalidAlgorithmParameterException from label037 to label038 with label140;
        catch java.security.InvalidAlgorithmParameterException from label040 to label041 with label140;
        catch java.security.InvalidAlgorithmParameterException from label044 to label045 with label140;
        catch java.security.InvalidAlgorithmParameterException from label046 to label047 with label140;
        catch javax.crypto.IllegalBlockSizeException from label033 to label034 with label151;
        catch javax.crypto.IllegalBlockSizeException from label035 to label036 with label151;
        catch javax.crypto.IllegalBlockSizeException from label037 to label038 with label151;
        catch javax.crypto.IllegalBlockSizeException from label040 to label041 with label151;
        catch javax.crypto.IllegalBlockSizeException from label044 to label045 with label151;
        catch javax.crypto.IllegalBlockSizeException from label046 to label047 with label151;
        catch javax.crypto.BadPaddingException from label033 to label034 with label162;
        catch javax.crypto.BadPaddingException from label035 to label036 with label162;
        catch javax.crypto.BadPaddingException from label037 to label038 with label162;
        catch javax.crypto.BadPaddingException from label040 to label041 with label162;
        catch javax.crypto.BadPaddingException from label044 to label045 with label162;
        catch javax.crypto.BadPaddingException from label046 to label047 with label162;
        catch java.lang.Throwable from label033 to label039 with label173;
        catch java.lang.Throwable from label040 to label042 with label173;
        catch java.lang.Throwable from label043 to label047 with label173;
        catch java.security.KeyStoreException from label048 to label049 with label216;
        catch java.io.FileNotFoundException from label048 to label049 with label213;
        catch java.security.NoSuchAlgorithmException from label048 to label049 with label210;
        catch java.security.cert.CertificateException from label048 to label049 with label207;
        catch java.io.IOException from label048 to label049 with label204;
        catch java.security.UnrecoverableKeyException from label048 to label049 with label201;
        catch javax.crypto.NoSuchPaddingException from label048 to label049 with label198;
        catch java.security.InvalidKeyException from label048 to label049 with label195;
        catch java.security.InvalidAlgorithmParameterException from label048 to label049 with label192;
        catch javax.crypto.IllegalBlockSizeException from label048 to label049 with label189;
        catch javax.crypto.BadPaddingException from label048 to label049 with label186;
        catch java.lang.Throwable from label048 to label049 with label183;
        catch java.lang.Throwable from label053 to label054 with label184;
        catch java.lang.Throwable from label055 to label056 with label184;
        catch java.io.IOException from label057 to label058 with label062;
        catch java.io.IOException from label059 to label060 with label061;
        catch java.lang.Throwable from label064 to label065 with label184;
        catch java.lang.Throwable from label066 to label067 with label184;
        catch java.io.IOException from label068 to label069 with label073;
        catch java.io.IOException from label070 to label071 with label072;
        catch java.lang.Throwable from label075 to label076 with label184;
        catch java.lang.Throwable from label077 to label078 with label184;
        catch java.io.IOException from label079 to label080 with label084;
        catch java.io.IOException from label081 to label082 with label083;
        catch java.lang.Throwable from label086 to label087 with label184;
        catch java.lang.Throwable from label088 to label089 with label184;
        catch java.io.IOException from label090 to label091 with label095;
        catch java.io.IOException from label092 to label093 with label094;
        catch java.lang.Throwable from label097 to label098 with label184;
        catch java.lang.Throwable from label099 to label100 with label184;
        catch java.io.IOException from label101 to label102 with label106;
        catch java.io.IOException from label103 to label104 with label105;
        catch java.lang.Throwable from label108 to label109 with label184;
        catch java.lang.Throwable from label110 to label111 with label184;
        catch java.io.IOException from label112 to label113 with label117;
        catch java.io.IOException from label114 to label115 with label116;
        catch java.lang.Throwable from label119 to label120 with label184;
        catch java.lang.Throwable from label121 to label122 with label184;
        catch java.io.IOException from label123 to label124 with label128;
        catch java.io.IOException from label125 to label126 with label127;
        catch java.lang.Throwable from label130 to label131 with label184;
        catch java.lang.Throwable from label132 to label133 with label184;
        catch java.io.IOException from label134 to label135 with label139;
        catch java.io.IOException from label136 to label137 with label138;
        catch java.lang.Throwable from label141 to label142 with label184;
        catch java.lang.Throwable from label143 to label144 with label184;
        catch java.io.IOException from label145 to label146 with label150;
        catch java.io.IOException from label147 to label148 with label149;
        catch java.lang.Throwable from label152 to label153 with label184;
        catch java.lang.Throwable from label154 to label155 with label184;
        catch java.io.IOException from label156 to label157 with label161;
        catch java.io.IOException from label158 to label159 with label160;
        catch java.lang.Throwable from label163 to label164 with label184;
        catch java.lang.Throwable from label165 to label166 with label184;
        catch java.io.IOException from label167 to label168 with label172;
        catch java.io.IOException from label169 to label170 with label171;
        catch java.io.IOException from label175 to label176 with label179;
        catch java.io.IOException from label177 to label178 with label180;
    }

    public static void appInBackground(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        long $l0, $l1;
        android.content.SharedPreferences $r2;
        byte $b2;
        boolean $z0;
        java.lang.Exception $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: android.content.Context;

     label01:
        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a()>();

     label02:
        if $r0 == null goto label16;

        <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u> = $r0;

        $r0 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u>;

     label03:
        $r1 = staticinvoke <com.nielsen.app.sdk.k: java.lang.String c(android.content.Context)>($r0);

     label04:
        <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory> = $r1;

     label05:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label06:
        $r0 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u>;

     label07:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("AppLaunchPrefs", 0);

     label08:
        <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.SharedPreferences t> = $r2;

        if $r2 == null goto label16;

     label09:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgStartTime", -1L);

     label10:
        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label16;

     label11:
        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("SDK_DISABLED", 0);

     label12:
        if $z0 != 0 goto label16;

     label13:
        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(android.content.SharedPreferences,boolean,long,boolean)>($r2, 0, $l0, 0);

     label14:
        return;

     label15:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: appInBackground:: Exception occured");

        $r1 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

     label16:
        return;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public static void appInForeground(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        long $l0, $l1, $l4;
        android.content.SharedPreferences $r2;
        boolean $z0;
        byte $b2;
        java.util.ArrayList $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        int $i3;

        $r0 := @parameter0: android.content.Context;

        if $r0 == null goto label41;

        <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u> = $r0;

        $r0 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u>;

     label01:
        $r1 = staticinvoke <com.nielsen.app.sdk.k: java.lang.String c(android.content.Context)>($r0);

     label02:
        <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory> = $r1;

     label03:
        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

     label04:
        $r0 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.Context u>;

     label05:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("AppLaunchPrefs", 0);

     label06:
        <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.SharedPreferences t> = $r2;

        if $r2 == null goto label41;

     label07:
        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("SDK_DISABLED", 0);

     label08:
        if $z0 == 0 goto label09;

        return;

     label09:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgStartTime", -1L);

     label10:
        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label16;

     label11:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgEndTime", -1L);

     label12:
        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label16;

     label13:
        $l1 = staticinvoke <com.nielsen.app.sdk.k: long o()>();

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(long,boolean,long)>(0L, 0, $l1);

        $r3 = staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.util.ArrayList readPingDetails()>();

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(android.content.SharedPreferences,boolean,long,boolean)>($r2, 1, $l0, 1);

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(java.util.ArrayList)>($r3);

     label14:
        return;

     label15:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: appInForeground:: Exception occured");

        $r1 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

        return;

     label16:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgStartTime", -1L);

     label17:
        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label22;

     label18:
        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("isCrashed", 0);

     label19:
        if $z0 == 0 goto label22;

     label20:
        $l1 = staticinvoke <com.nielsen.app.sdk.k: long o()>();

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(long,boolean,long)>(0L, 1, $l1);

        $r3 = staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.util.ArrayList readPingDetails()>();

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(android.content.SharedPreferences)>($r2);

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(android.content.SharedPreferences,boolean,long,boolean)>($r2, 1, $l0, 1);

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(java.util.ArrayList)>($r3);

     label21:
        return;

     label22:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgStartTime", -1L);

     label23:
        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label32;

     label24:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgEndTime", -1L);

     label25:
        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label32;

     label26:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgEndTime", -1L);

     label27:
        $l1 = $l0 - $l1;

        $l1 = $l1 / 60000L;

        $i3 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: int bgTimeout>;

        $l4 = (long) $i3;

        $b2 = $l1 cmp $l4;

        if $b2 <= 0 goto label32;

        <com.nielsen.app.sdk.AppLaunchMeasurementManager: int hasBgTimeoutHappened> = 1;

     label28:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgEndTime", -1L);

        $l4 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgStartTime", -1L);

     label29:
        $l1 = $l1 - $l4;

        $l1 = $l1 / 1000L;

     label30:
        $z0 = interfaceinvoke $r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("isCrashed", 0);

        $l4 = staticinvoke <com.nielsen.app.sdk.k: long o()>();

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(long,boolean,long)>($l1, $z0, $l4);

        $r3 = staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.util.ArrayList readPingDetails()>();

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(android.content.SharedPreferences)>($r2);

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(android.content.SharedPreferences,boolean,long,boolean)>($r2, 1, $l0, 1);

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(java.util.ArrayList)>($r3);

     label31:
        return;

     label32:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgStartTime", -1L);

     label33:
        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label41;

     label34:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgEndTime", -1L);

     label35:
        $b2 = $l1 cmp -1L;

        if $b2 == 0 goto label41;

     label36:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgEndTime", -1L);

     label37:
        $l1 = $l0 - $l1;

        $l1 = $l1 / 60000L;

        $i3 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: int bgTimeout>;

        $l4 = (long) $i3;

        $b2 = $l1 cmp $l4;

        if $b2 >= 0 goto label41;

        <com.nielsen.app.sdk.AppLaunchMeasurementManager: int hasBgTimeoutHappened> = 0;

     label38:
        $l1 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgEndTime", -1L);

        $l4 = interfaceinvoke $r2.<android.content.SharedPreferences: long getLong(java.lang.String,long)>("FgStartTime", -1L);

     label39:
        $l1 = $l1 - $l4;

        $l0 = $l0 - $l1;

     label40:
        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(android.content.SharedPreferences,boolean,long,boolean)>($r2, 1, $l0, 1);

     label41:
        return;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label16 to label17 with label15;
        catch java.lang.Exception from label18 to label19 with label15;
        catch java.lang.Exception from label20 to label21 with label15;
        catch java.lang.Exception from label22 to label23 with label15;
        catch java.lang.Exception from label24 to label25 with label15;
        catch java.lang.Exception from label26 to label27 with label15;
        catch java.lang.Exception from label28 to label29 with label15;
        catch java.lang.Exception from label30 to label31 with label15;
        catch java.lang.Exception from label32 to label33 with label15;
        catch java.lang.Exception from label34 to label35 with label15;
        catch java.lang.Exception from label36 to label37 with label15;
        catch java.lang.Exception from label38 to label39 with label15;
        catch java.lang.Exception from label40 to label41 with label15;
    }

    public static void clearLaunchPingsFromStorage()
    {
        java.lang.String $r0, varReplacer9836, varReplacer9840, varReplacer9843, varReplacer9844, varReplacer9845, varReplacer9846, varReplacer9847, varReplacer9848, varReplacer9849;
        boolean $z0;
        java.io.File $r1, r12;
        org.json.JSONArray $r2, r13;
        java.io.FileWriter $r3, r14;
        java.io.BufferedWriter $r4, r15;
        byte[] $r5;
        java.lang.Throwable $r6, $r8, $r9, $r10, $r11;
        java.lang.StringBuilder $r7, r16;
        java.io.IOException r17;
        int varReplacer9835, varReplacer9837, varReplacer9838, varReplacer9839, varReplacer9841, varReplacer9842;

        nop;

        $r0 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory>;

        if $r0 == null goto label33;

        $r0 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory>;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        r12 = new java.io.File;

        $r1 = r12;

        $r0 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory>;

        varReplacer9848 = "launchpings.txt";

        specialinvoke r12.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, varReplacer9848);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label33;

     label02:
        r13 = new org.json.JSONArray;

     label03:
        $r2 = r13;

     label04:
        specialinvoke r13.<org.json.JSONArray: void <init>()>();

     label05:
        r14 = new java.io.FileWriter;

     label06:
        $r3 = r14;

     label07:
        specialinvoke r14.<java.io.FileWriter: void <init>(java.io.File)>($r1);

     label08:
        r15 = new java.io.BufferedWriter;

     label09:
        $r4 = r15;

     label10:
        specialinvoke r15.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);

     label11:
        $r0 = virtualinvoke $r2.<org.json.JSONArray: java.lang.String toString()>();

        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        varReplacer9838 = 1;

        $r5 = staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>($r5, varReplacer9838);

        varReplacer9842 = 0;

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r5, varReplacer9842);

        virtualinvoke $r4.<java.io.BufferedWriter: void write(java.lang.String)>($r0);

     label12:
        if $r4 == null goto label33;

     label13:
        virtualinvoke $r4.<java.io.BufferedWriter: void close()>();

     label14:
        return;

     label15:
        $r6 := @caughtexception;

        varReplacer9835 = 69;

        $z0 = staticinvoke <com.nielsen.app.sdk.AppSdk: boolean a(char)>(varReplacer9835);

        if $z0 == 0 goto label33;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer9836 = "AppLaunchMeasurementManager :: clearLaunchPingsFromStorage:: IOException occured";

        $r7 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9836);

        r17 = (java.io.IOException) $r6;

        $r0 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9847 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9847, $r0);

        return;

     label16:
        $r8 := @caughtexception;

        $r4 = null;

     label17:
        varReplacer9839 = 69;

        $z0 = staticinvoke <com.nielsen.app.sdk.AppSdk: boolean a(char)>(varReplacer9839);

     label18:
        if $z0 == 0 goto label22;

     label19:
        r16 = new java.lang.StringBuilder;

     label20:
        $r7 = r16;

     label21:
        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer9849 = "AppLaunchMeasurementManager :: clearLaunchPingsFromStorage:: IOException occured";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9849);

        r17 = (java.io.IOException) $r8;

        $r0 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9840 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9840, $r0);

     label22:
        if $r4 == null goto label33;

     label23:
        virtualinvoke $r4.<java.io.BufferedWriter: void close()>();

     label24:
        return;

     label25:
        $r9 := @caughtexception;

        varReplacer9841 = 69;

        $z0 = staticinvoke <com.nielsen.app.sdk.AppSdk: boolean a(char)>(varReplacer9841);

        if $z0 == 0 goto label33;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer9846 = "AppLaunchMeasurementManager :: clearLaunchPingsFromStorage:: IOException occured";

        $r7 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9846);

        r17 = (java.io.IOException) $r9;

        $r0 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9845 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9845, $r0);

        return;

     label26:
        $r10 := @caughtexception;

        $r4 = null;

     label27:
        if $r4 == null goto label29;

     label28:
        virtualinvoke $r4.<java.io.BufferedWriter: void close()>();

     label29:
        throw $r10;

     label30:
        $r11 := @caughtexception;

        varReplacer9837 = 69;

        $z0 = staticinvoke <com.nielsen.app.sdk.AppSdk: boolean a(char)>(varReplacer9837);

        if $z0 == 0 goto label29;

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer9843 = "AppLaunchMeasurementManager :: clearLaunchPingsFromStorage:: IOException occured";

        $r7 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer9843);

        r17 = (java.io.IOException) $r11;

        $r0 = virtualinvoke r17.<java.io.IOException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer9844 = "NielsenAPPSDK";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer9844, $r0);

        goto label29;

     label31:
        $r10 := @caughtexception;

        goto label27;

     label32:
        $r8 := @caughtexception;

        goto label17;

     label33:
        return;

        catch java.io.IOException from label04 to label05 with label16;
        catch java.io.IOException from label07 to label08 with label16;
        catch java.io.IOException from label10 to label11 with label16;
        catch java.lang.Throwable from label02 to label03 with label26;
        catch java.lang.Throwable from label04 to label06 with label26;
        catch java.lang.Throwable from label07 to label09 with label26;
        catch java.lang.Throwable from label10 to label11 with label26;
        catch java.io.IOException from label11 to label12 with label32;
        catch java.lang.Throwable from label11 to label12 with label31;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label18 with label31;
        catch java.lang.Throwable from label19 to label20 with label31;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label28 to label29 with label30;
    }

    public static java.util.ArrayList readPingDetails()
    {
        java.util.ArrayList $r0, $r11, r37;
        java.lang.String $r1, $r8, r35;
        boolean $z0;
        java.io.File $r2, r31;
        java.io.FileReader $r3, r32;
        java.io.BufferedReader $r4, r33;
        java.lang.StringBuilder $r5, r34;
        java.lang.Throwable $r6, $r7, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30;
        int $i0, $i1;
        byte[] $r9;
        org.json.JSONArray $r10, r36;
        com.nielsen.app.sdk.AppLaunchPingDTO $r12, r38;
        org.json.JSONObject $r13;
        long $l2;
        org.json.JSONException $r21, $r26;
        java.io.StreamCorruptedException r39;
        java.io.IOException r40;
        java.io.OptionalDataException r41;
        java.io.FileNotFoundException r42;

        $r0 = null;

        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory>;

        if $r1 == null goto label97;

        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return null;

     label01:
        r31 = new java.io.File;

        $r2 = r31;

        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: java.lang.String mFilesDirectory>;

        specialinvoke r31.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r1, "launchpings.txt");

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label97;

     label02:
        r32 = new java.io.FileReader;

     label03:
        $r3 = r32;

     label04:
        specialinvoke r32.<java.io.FileReader: void <init>(java.io.File)>($r2);

     label05:
        r33 = new java.io.BufferedReader;

     label06:
        $r4 = r33;

     label07:
        specialinvoke r33.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);

     label08:
        r34 = new java.lang.StringBuilder;

     label09:
        $r5 = r34;

     label10:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

     label11:
        $r1 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label12:
        if $r1 == null goto label23;

     label13:
        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label14:
        goto label11;

     label15:
        $r6 := @caughtexception;

     label16:
        r34 = new java.lang.StringBuilder;

     label17:
        $r5 = r34;

     label18:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: StreamCorruptedException occured");

        r39 = (java.io.StreamCorruptedException) $r6;

        $r1 = virtualinvoke r39.<java.io.StreamCorruptedException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

     label19:
        if $r4 == null goto label98;

     label20:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label21:
        return $r0;

     label22:
        $r7 := @caughtexception;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: IOException occured");

        r40 = (java.io.IOException) $r7;

        $r1 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

        return $r0;

     label23:
        $i0 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

     label24:
        if $i0 == 0 goto label42;

     label25:
        r35 = new java.lang.String;

     label26:
        $r1 = r35;

     label27:
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r8, 0);

        $r9 = staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>($r9, 2);

        specialinvoke r35.<java.lang.String: void <init>(byte[])>($r9);

     label28:
        r36 = new org.json.JSONArray;

     label29:
        $r10 = r36;

     label30:
        specialinvoke r36.<org.json.JSONArray: void <init>(java.lang.String)>($r1);

     label31:
        r37 = new java.util.ArrayList;

     label32:
        $r11 = r37;

     label33:
        specialinvoke r37.<java.util.ArrayList: void <init>()>();

     label34:
        $i0 = 0;

     label35:
        $i1 = virtualinvoke $r10.<org.json.JSONArray: int length()>();

     label36:
        if $i0 >= $i1 goto label41;

     label37:
        r38 = new com.nielsen.app.sdk.AppLaunchPingDTO;

     label38:
        $r12 = r38;

     label39:
        specialinvoke r38.<com.nielsen.app.sdk.AppLaunchPingDTO: void <init>()>();

        $r13 = virtualinvoke $r10.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        $l2 = virtualinvoke $r13.<org.json.JSONObject: long getLong(java.lang.String)>("totalduration");

        virtualinvoke $r12.<com.nielsen.app.sdk.AppLaunchPingDTO: void setTotalDuration(long)>($l2);

        $i1 = virtualinvoke $r13.<org.json.JSONObject: int getInt(java.lang.String)>("crashflag");

        virtualinvoke $r12.<com.nielsen.app.sdk.AppLaunchPingDTO: void setCrashFlag(int)>($i1);

        $l2 = virtualinvoke $r13.<org.json.JSONObject: long getLong(java.lang.String)>("timestamp");

        virtualinvoke $r12.<com.nielsen.app.sdk.AppLaunchPingDTO: void setTimeStamp(long)>($l2);

        virtualinvoke $r11.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

     label40:
        $i0 = $i0 + 1;

        goto label35;

     label41:
        $r0 = $r11;

     label42:
        r34 = new java.lang.StringBuilder;

     label43:
        $r5 = r34;

     label44:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ping Details from Storage ----> ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

     label45:
        if $r4 == null goto label98;

     label46:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label47:
        return $r0;

     label48:
        $r14 := @caughtexception;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: IOException occured");

        r40 = (java.io.IOException) $r14;

        $r1 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

        return $r0;

     label49:
        $r15 := @caughtexception;

        $r4 = null;

     label50:
        r34 = new java.lang.StringBuilder;

     label51:
        $r5 = r34;

     label52:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: OptionalDataException occured");

        r41 = (java.io.OptionalDataException) $r15;

        $r1 = virtualinvoke r41.<java.io.OptionalDataException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

     label53:
        if $r4 == null goto label98;

     label54:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label55:
        return $r0;

     label56:
        $r16 := @caughtexception;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: IOException occured");

        r40 = (java.io.IOException) $r16;

        $r1 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

        return $r0;

     label57:
        $r17 := @caughtexception;

        $r4 = null;

     label58:
        r34 = new java.lang.StringBuilder;

     label59:
        $r5 = r34;

     label60:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: FileNotFoundException occured");

        r42 = (java.io.FileNotFoundException) $r17;

        $r1 = virtualinvoke r42.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

     label61:
        if $r4 == null goto label98;

     label62:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label63:
        return $r0;

     label64:
        $r18 := @caughtexception;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: IOException occured");

        r40 = (java.io.IOException) $r18;

        $r1 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

        return $r0;

     label65:
        $r19 := @caughtexception;

        $r4 = null;

     label66:
        r34 = new java.lang.StringBuilder;

     label67:
        $r5 = r34;

     label68:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: IOException occured");

        r40 = (java.io.IOException) $r19;

        $r1 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

     label69:
        if $r4 == null goto label98;

     label70:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label71:
        return $r0;

     label72:
        $r20 := @caughtexception;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: IOException occured");

        r40 = (java.io.IOException) $r20;

        $r1 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

        return $r0;

     label73:
        $r21 := @caughtexception;

        $r4 = null;

     label74:
        virtualinvoke $r2.<java.io.File: boolean delete()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("NielsenAPPSDK", "AppLaunchMeasurementManager :: readPingDetails:: File used for storing launch pings is corrupted. Deleting it from storage.");

        r34 = new java.lang.StringBuilder;

     label75:
        $r5 = r34;

     label76:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: JSONException occured");

        $r1 = virtualinvoke $r21.<org.json.JSONException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

     label77:
        if $r4 == null goto label98;

     label78:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label79:
        return $r0;

     label80:
        $r22 := @caughtexception;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: IOException occured");

        r40 = (java.io.IOException) $r22;

        $r1 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

        return $r0;

     label81:
        $r23 := @caughtexception;

        $r4 = null;

        $r24 = $r23;

     label82:
        if $r4 == null goto label84;

     label83:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label84:
        throw $r24;

     label85:
        $r25 := @caughtexception;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AppLaunchMeasurementManager :: readPingDetails:: IOException occured");

        r40 = (java.io.IOException) $r25;

        $r1 = virtualinvoke r40.<java.io.IOException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("NielsenAPPSDK", $r1);

        goto label84;

     label86:
        $r24 := @caughtexception;

        goto label82;

     label87:
        $r21 := @caughtexception;

        goto label74;

     label88:
        $r26 := @caughtexception;

        $r0 = $r11;

        $r21 = $r26;

        goto label74;

     label89:
        $r19 := @caughtexception;

        goto label66;

     label90:
        $r27 := @caughtexception;

        $r0 = $r11;

        $r19 = $r27;

        goto label66;

     label91:
        $r17 := @caughtexception;

        goto label58;

     label92:
        $r28 := @caughtexception;

        $r0 = $r11;

        $r17 = $r28;

        goto label58;

     label93:
        $r15 := @caughtexception;

        goto label50;

     label94:
        $r29 := @caughtexception;

        $r0 = $r11;

        $r15 = $r29;

        goto label50;

     label95:
        $r6 := @caughtexception;

        $r4 = null;

        goto label16;

     label96:
        $r30 := @caughtexception;

        $r0 = $r11;

        $r6 = $r30;

        goto label16;

     label97:
        return null;

     label98:
        return $r0;

        catch java.io.StreamCorruptedException from label04 to label05 with label95;
        catch java.io.StreamCorruptedException from label07 to label08 with label95;
        catch java.io.OptionalDataException from label04 to label05 with label49;
        catch java.io.OptionalDataException from label07 to label08 with label49;
        catch java.io.FileNotFoundException from label04 to label05 with label57;
        catch java.io.FileNotFoundException from label07 to label08 with label57;
        catch java.io.IOException from label04 to label05 with label65;
        catch java.io.IOException from label07 to label08 with label65;
        catch org.json.JSONException from label04 to label05 with label73;
        catch org.json.JSONException from label07 to label08 with label73;
        catch java.lang.Throwable from label02 to label03 with label81;
        catch java.lang.Throwable from label04 to label06 with label81;
        catch java.lang.Throwable from label07 to label08 with label81;
        catch java.io.StreamCorruptedException from label10 to label12 with label15;
        catch java.io.StreamCorruptedException from label13 to label14 with label15;
        catch java.io.OptionalDataException from label10 to label12 with label93;
        catch java.io.OptionalDataException from label13 to label14 with label93;
        catch java.io.FileNotFoundException from label10 to label12 with label91;
        catch java.io.FileNotFoundException from label13 to label14 with label91;
        catch java.io.IOException from label10 to label12 with label89;
        catch java.io.IOException from label13 to label14 with label89;
        catch org.json.JSONException from label10 to label12 with label87;
        catch org.json.JSONException from label13 to label14 with label87;
        catch java.lang.Throwable from label08 to label09 with label86;
        catch java.lang.Throwable from label10 to label12 with label86;
        catch java.lang.Throwable from label13 to label14 with label86;
        catch java.lang.Throwable from label16 to label17 with label86;
        catch java.lang.Throwable from label18 to label19 with label86;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.io.StreamCorruptedException from label23 to label24 with label15;
        catch java.io.StreamCorruptedException from label27 to label28 with label15;
        catch java.io.StreamCorruptedException from label30 to label31 with label15;
        catch java.io.StreamCorruptedException from label33 to label34 with label15;
        catch java.io.OptionalDataException from label23 to label24 with label93;
        catch java.io.OptionalDataException from label27 to label28 with label93;
        catch java.io.OptionalDataException from label30 to label31 with label93;
        catch java.io.OptionalDataException from label33 to label34 with label93;
        catch java.io.FileNotFoundException from label23 to label24 with label91;
        catch java.io.FileNotFoundException from label27 to label28 with label91;
        catch java.io.FileNotFoundException from label30 to label31 with label91;
        catch java.io.FileNotFoundException from label33 to label34 with label91;
        catch java.io.IOException from label23 to label24 with label89;
        catch java.io.IOException from label27 to label28 with label89;
        catch java.io.IOException from label30 to label31 with label89;
        catch java.io.IOException from label33 to label34 with label89;
        catch org.json.JSONException from label23 to label24 with label87;
        catch org.json.JSONException from label27 to label28 with label87;
        catch org.json.JSONException from label30 to label31 with label87;
        catch org.json.JSONException from label33 to label34 with label87;
        catch java.lang.Throwable from label23 to label24 with label86;
        catch java.lang.Throwable from label25 to label26 with label86;
        catch java.lang.Throwable from label27 to label29 with label86;
        catch java.lang.Throwable from label30 to label32 with label86;
        catch java.lang.Throwable from label33 to label34 with label86;
        catch java.io.StreamCorruptedException from label35 to label36 with label96;
        catch java.io.StreamCorruptedException from label39 to label40 with label96;
        catch java.io.OptionalDataException from label35 to label36 with label94;
        catch java.io.OptionalDataException from label39 to label40 with label94;
        catch java.io.FileNotFoundException from label35 to label36 with label92;
        catch java.io.FileNotFoundException from label39 to label40 with label92;
        catch java.io.IOException from label35 to label36 with label90;
        catch java.io.IOException from label39 to label40 with label90;
        catch org.json.JSONException from label35 to label36 with label88;
        catch org.json.JSONException from label39 to label40 with label88;
        catch java.lang.Throwable from label35 to label36 with label86;
        catch java.lang.Throwable from label37 to label38 with label86;
        catch java.lang.Throwable from label39 to label40 with label86;
        catch java.io.StreamCorruptedException from label44 to label45 with label15;
        catch java.io.OptionalDataException from label44 to label45 with label93;
        catch java.io.FileNotFoundException from label44 to label45 with label91;
        catch java.io.IOException from label44 to label45 with label89;
        catch org.json.JSONException from label44 to label45 with label87;
        catch java.lang.Throwable from label42 to label43 with label86;
        catch java.lang.Throwable from label44 to label45 with label86;
        catch java.io.IOException from label46 to label47 with label48;
        catch java.lang.Throwable from label50 to label51 with label86;
        catch java.lang.Throwable from label52 to label53 with label86;
        catch java.io.IOException from label54 to label55 with label56;
        catch java.lang.Throwable from label58 to label59 with label86;
        catch java.lang.Throwable from label60 to label61 with label86;
        catch java.io.IOException from label62 to label63 with label64;
        catch java.lang.Throwable from label66 to label67 with label86;
        catch java.lang.Throwable from label68 to label69 with label86;
        catch java.io.IOException from label70 to label71 with label72;
        catch java.lang.Throwable from label74 to label75 with label86;
        catch java.lang.Throwable from label76 to label77 with label86;
        catch java.io.IOException from label78 to label79 with label80;
        catch java.io.IOException from label83 to label84 with label85;
    }

    public static void setSDKDisabledState(boolean)
    {
        boolean $z0;
        android.content.SharedPreferences$Editor $r0;
        android.content.SharedPreferences $r1;
        java.lang.String varReplacer9834;

        nop;

        $z0 := @parameter0: boolean;

        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.SharedPreferences t>;

        if $r1 == null goto label1;

        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.SharedPreferences t>;

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void a(android.content.SharedPreferences)>($r1);

        staticinvoke <com.nielsen.app.sdk.AppLaunchMeasurementManager: void clearLaunchPingsFromStorage()>();

        $r1 = <com.nielsen.app.sdk.AppLaunchMeasurementManager: android.content.SharedPreferences t>;

        $r0 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer9834 = "SDK_DISABLED";

        interfaceinvoke $r0.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>(varReplacer9834, $z0);

        interfaceinvoke $r0.<android.content.SharedPreferences$Editor: void apply()>();

     label1:
        return;
    }
}
