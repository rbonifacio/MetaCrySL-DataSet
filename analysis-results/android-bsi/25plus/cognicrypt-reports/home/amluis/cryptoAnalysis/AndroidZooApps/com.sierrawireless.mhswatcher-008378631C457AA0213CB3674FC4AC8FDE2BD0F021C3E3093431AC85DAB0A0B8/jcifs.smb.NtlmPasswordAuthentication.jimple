public final class jcifs.smb.NtlmPasswordAuthentication extends java.lang.Object implements java.security.Principal, java.io.Serializable
{
    public static final jcifs.smb.NtlmPasswordAuthentication ANONYMOUS;
    static final java.lang.String BLANK;
    static final jcifs.smb.NtlmPasswordAuthentication DEFAULT;
    static java.lang.String DEFAULT_DOMAIN;
    static java.lang.String DEFAULT_PASSWORD;
    static java.lang.String DEFAULT_USERNAME;
    static final jcifs.smb.NtlmPasswordAuthentication GUEST;
    private static final int LM_COMPATIBILITY;
    static final jcifs.smb.NtlmPasswordAuthentication NULL;
    private static final java.util.Random RANDOM;
    private static final byte[] S8;
    private static jcifs.util.LogStream log;
    byte[] ansiHash;
    byte[] challenge;
    byte[] clientChallenge;
    java.lang.String domain;
    boolean hashesExternal;
    java.lang.String password;
    byte[] unicodeHash;
    java.lang.String username;

    static void <clinit>()
    {
        int $i0, varReplacer531;
        java.util.Random $r0;
        jcifs.util.LogStream $r1;
        byte[] $r2;
        jcifs.smb.NtlmPasswordAuthentication $r3;
        java.lang.String varReplacer523, varReplacer524, varReplacer525, varReplacer526, varReplacer527, varReplacer528, varReplacer530, varReplacer532, varReplacer533, varReplacer534;
        null_type varReplacer529;

        nop;

        varReplacer530 = "jcifs.smb.lmCompatibility";

        varReplacer531 = 3;

        $i0 = staticinvoke <jcifs.Config: int getInt(java.lang.String,int)>(varReplacer530, varReplacer531);

        <jcifs.smb.NtlmPasswordAuthentication: int LM_COMPATIBILITY> = $i0;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <jcifs.smb.NtlmPasswordAuthentication: java.util.Random RANDOM> = $r0;

        $r1 = staticinvoke <jcifs.util.LogStream: jcifs.util.LogStream getInstance()>();

        <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log> = $r1;

        $r2 = newarray (byte)[8];

        $r2[0] = 75;

        $r2[1] = 71;

        $r2[2] = 83;

        $r2[3] = 33;

        $r2[4] = 64;

        $r2[5] = 35;

        $r2[6] = 36;

        $r2[7] = 37;

        <jcifs.smb.NtlmPasswordAuthentication: byte[] S8> = $r2;

        $r3 = new jcifs.smb.NtlmPasswordAuthentication;

        varReplacer532 = "";

        varReplacer533 = "";

        varReplacer534 = "";

        specialinvoke $r3.<jcifs.smb.NtlmPasswordAuthentication: void <init>(java.lang.String,java.lang.String,java.lang.String)>(varReplacer532, varReplacer532, varReplacer532);

        <jcifs.smb.NtlmPasswordAuthentication: jcifs.smb.NtlmPasswordAuthentication ANONYMOUS> = $r3;

        $r3 = new jcifs.smb.NtlmPasswordAuthentication;

        varReplacer526 = "";

        varReplacer527 = "";

        varReplacer528 = "";

        specialinvoke $r3.<jcifs.smb.NtlmPasswordAuthentication: void <init>(java.lang.String,java.lang.String,java.lang.String)>(varReplacer526, varReplacer526, varReplacer526);

        <jcifs.smb.NtlmPasswordAuthentication: jcifs.smb.NtlmPasswordAuthentication NULL> = $r3;

        $r3 = new jcifs.smb.NtlmPasswordAuthentication;

        varReplacer523 = "?";

        varReplacer524 = "GUEST";

        varReplacer525 = "";

        specialinvoke $r3.<jcifs.smb.NtlmPasswordAuthentication: void <init>(java.lang.String,java.lang.String,java.lang.String)>(varReplacer523, varReplacer524, varReplacer525);

        <jcifs.smb.NtlmPasswordAuthentication: jcifs.smb.NtlmPasswordAuthentication GUEST> = $r3;

        $r3 = new jcifs.smb.NtlmPasswordAuthentication;

        varReplacer529 = null;

        specialinvoke $r3.<jcifs.smb.NtlmPasswordAuthentication: void <init>(java.lang.String)>(varReplacer529);

        <jcifs.smb.NtlmPasswordAuthentication: jcifs.smb.NtlmPasswordAuthentication DEFAULT> = $r3;

        return;
    }

    public void <init>(java.lang.String)
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1, $i2, varReplacer563, varReplacer567;
        char $c3;
        java.lang.Throwable $r3;
        null_type varReplacer562, varReplacer564, varReplacer565, varReplacer566, varReplacer568;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer567 = 0;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal> = varReplacer567;

        varReplacer568 = null;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge> = varReplacer568;

        varReplacer565 = null;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] challenge> = varReplacer565;

        varReplacer566 = null;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password> = varReplacer566;

        varReplacer562 = null;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username> = varReplacer562;

        varReplacer564 = null;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain> = varReplacer564;

        if $r1 == null goto label08;

     label01:
        $r2 = staticinvoke <jcifs.smb.NtlmPasswordAuthentication: java.lang.String unescape(java.lang.String)>($r1);

     label02:
        $r1 = $r2;

     label03:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = 0;

        $i2 = 0;

     label04:
        if $i1 >= $i0 goto label07;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        if $c3 != 59 goto label06;

        varReplacer563 = 0;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(varReplacer563, $i1);

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain> = $r2;

        $i2 = $i1 + 1;

     label05:
        $i1 = $i1 + 1;

        goto label04;

     label06:
        if $c3 != 58 goto label05;

        $i0 = $i1 + 1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password> = $r2;

     label07:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username> = $r1;

     label08:
        staticinvoke <jcifs.smb.NtlmPasswordAuthentication: void initDefaults()>();

        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain>;

        if $r1 != null goto label09;

        $r1 = <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_DOMAIN>;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain> = $r1;

     label09:
        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username>;

        if $r1 != null goto label10;

        $r1 = <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_USERNAME>;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username> = $r1;

     label10:
        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        if $r1 != null goto label12;

        $r1 = <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_PASSWORD>;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password> = $r1;

        return;

     label11:
        $r3 := @caughtexception;

        goto label03;

     label12:
        return;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label11;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        java.lang.String $r1, $r2, $r3;
        int $i0, $i1, varReplacer555, varReplacer556, varReplacer559, varReplacer560, varReplacer561;
        null_type varReplacer557, varReplacer558;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r2 := @parameter0: java.lang.String;

        $r3 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer555 = 0;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal> = varReplacer555;

        varReplacer558 = null;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge> = varReplacer558;

        varReplacer557 = null;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] challenge> = varReplacer557;

        if $r3 == null goto label1;

        varReplacer561 = 64;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(varReplacer561);

        if $i0 <= 0 goto label4;

        $i1 = $i0 + 1;

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        varReplacer560 = 0;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer560, $i0);

     label1:
        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain> = $r2;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username> = $r3;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password> = $r1;

        staticinvoke <jcifs.smb.NtlmPasswordAuthentication: void initDefaults()>();

        if $r2 != null goto label2;

        $r2 = <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_DOMAIN>;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain> = $r2;

     label2:
        if $r3 != null goto label3;

        $r2 = <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_USERNAME>;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username> = $r2;

     label3:
        if $r1 != null goto label5;

        $r2 = <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_PASSWORD>;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password> = $r2;

        return;

     label4:
        varReplacer556 = 92;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(varReplacer556);

        if $i0 <= 0 goto label1;

        varReplacer559 = 0;

        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer559, $i0);

        $i0 = $i0 + 1;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        goto label1;

     label5:
        return;
    }

    public void <init>(java.lang.String, java.lang.String, byte[], byte[], byte[])
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        java.lang.String $r1, $r2;
        byte[] $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: byte[];

        $r4 := @parameter3: byte[];

        $r5 := @parameter4: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal> = 0;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge> = null;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] challenge> = null;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        if $r4 == null goto label1;

        if $r5 != null goto label2;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("External credentials cannot be null");

        throw $r6;

     label2:
        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain> = $r1;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username> = $r2;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password> = null;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] challenge> = $r3;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] ansiHash> = $r4;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] unicodeHash> = $r5;

        $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal> = 1;

        return;
    }

    private static void E(byte[], byte[], byte[])
    {
        byte[] $r0, $r1, $r2, $r4, $r5;
        jcifs.util.DES $r3;
        int $i0, $i1, varReplacer5728, varReplacer5729, varReplacer5730, varReplacer5731;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $r5 = newarray (byte)[7];

        $r4 = newarray (byte)[8];

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        $i1 = $i1 / 7;

        if $i0 >= $i1 goto label2;

        $i1 = $i0 * 7;

        varReplacer5730 = 0;

        varReplacer5731 = 7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, $i1, $r5, varReplacer5730, varReplacer5731);

        $r3 = new jcifs.util.DES;

        specialinvoke $r3.<jcifs.util.DES: void <init>(byte[])>($r5);

        virtualinvoke $r3.<jcifs.util.DES: void encrypt(byte[],byte[])>($r1, $r4);

        $i1 = $i0 * 8;

        varReplacer5728 = 0;

        varReplacer5729 = 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, varReplacer5728, $r2, $i1, varReplacer5729);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    static byte[] computeResponse(byte[], byte[], byte[], int, int)
    {
        byte[] $r0, $r1, $r2;
        int $i0, $i1, varReplacer5874, varReplacer5875, varReplacer5876, varReplacer5877;
        jcifs.util.HMACT64 $r3;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $i0 := @parameter3: int;

        $i1 := @parameter4: int;

        $r3 = new jcifs.util.HMACT64;

        specialinvoke $r3.<jcifs.util.HMACT64: void <init>(byte[])>($r0);

        virtualinvoke $r3.<jcifs.util.HMACT64: void update(byte[])>($r1);

        varReplacer5877 = 0;

        virtualinvoke $r3.<jcifs.util.HMACT64: void update(byte[],int,int)>($r2, varReplacer5877, $i1);

        $r1 = virtualinvoke $r3.<jcifs.util.HMACT64: byte[] digest()>();

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i0 = $i0 + $i1;

        $r0 = newarray (byte)[$i0];

        $i0 = lengthof $r1;

        varReplacer5875 = 0;

        varReplacer5876 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer5875, $r0, varReplacer5875, $i0);

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        varReplacer5874 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer5874, $r0, $i0, $i1);

        return $r0;
    }

    public static byte[] getLMv2Response(java.lang.String, java.lang.String, java.lang.String, byte[], byte[])
    {
        java.lang.String $r0, $r1, $r2, varReplacer5714, varReplacer5715, varReplacer5718;
        byte[] $r3, $r4, $r6, $r10;
        java.lang.Exception $r5;
        jcifs.util.HMACT64 $r7, $r8;
        jcifs.util.MD4 $r9;
        jcifs.util.LogStream $r11;
        int $i0, varReplacer5716, varReplacer5717, varReplacer5719, varReplacer5720, varReplacer5721;
        null_type varReplacer5713;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: byte[];

        $r4 := @parameter4: byte[];

     label01:
        $r6 = newarray (byte)[16];

        $r6 = newarray (byte)[24];

     label02:
        $r9 = new jcifs.util.MD4;

     label03:
        specialinvoke $r9.<jcifs.util.MD4: void <init>()>();

        varReplacer5718 = "UTF-16LE";

        $r10 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5718);

        virtualinvoke $r9.<jcifs.util.MD4: void update(byte[])>($r10);

     label04:
        $r7 = new jcifs.util.HMACT64;

     label05:
        $r10 = virtualinvoke $r9.<jcifs.util.MD4: byte[] digest()>();

        specialinvoke $r7.<jcifs.util.HMACT64: void <init>(byte[])>($r10);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        varReplacer5714 = "UTF-16LE";

        $r10 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5714);

        virtualinvoke $r7.<jcifs.util.HMACT64: void update(byte[])>($r10);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        varReplacer5715 = "UTF-16LE";

        $r10 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5715);

        virtualinvoke $r7.<jcifs.util.HMACT64: void update(byte[])>($r10);

     label06:
        $r8 = new jcifs.util.HMACT64;

     label07:
        $r10 = virtualinvoke $r7.<jcifs.util.HMACT64: byte[] digest()>();

        specialinvoke $r8.<jcifs.util.HMACT64: void <init>(byte[])>($r10);

        virtualinvoke $r8.<jcifs.util.HMACT64: void update(byte[])>($r3);

        virtualinvoke $r8.<jcifs.util.HMACT64: void update(byte[])>($r4);

        varReplacer5716 = 0;

        varReplacer5717 = 16;

        virtualinvoke $r8.<jcifs.util.HMACT64: int digest(byte[],int,int)>($r6, varReplacer5716, varReplacer5717);

        varReplacer5719 = 0;

        varReplacer5720 = 16;

        varReplacer5721 = 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, varReplacer5719, $r6, varReplacer5720, varReplacer5721);

     label08:
        return $r6;

     label09:
        $r5 := @caughtexception;

        $r11 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        $i0 = <jcifs.util.LogStream: int level>;

        if $i0 <= 0 goto label10;

        $r11 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r11);

     label10:
        varReplacer5713 = null;

        return varReplacer5713;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public static byte[] getLMv2Response(byte[], byte[], byte[])
    {
        byte[] $r0, $r1, $r2;
        int $i0;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $i0 = lengthof $r2;

        $r0 = staticinvoke <jcifs.smb.NtlmPasswordAuthentication: byte[] computeResponse(byte[],byte[],byte[],int,int)>($r0, $r1, $r2, 0, $i0);

        return $r0;
    }

    public static byte[] getNTLM2Response(byte[], byte[], byte[])
    {
        byte[] $r0, $r1, $r2, $r4;
        java.lang.Throwable $r3;
        java.security.MessageDigest $r5;
        jcifs.util.LogStream $r6;
        int $i0, varReplacer5846, varReplacer5847, varReplacer5848, varReplacer5849, varReplacer5850, varReplacer5853, varReplacer5854, varReplacer5855;
        java.lang.RuntimeException r7;
        java.security.GeneralSecurityException r8;
        java.lang.String varReplacer5851, varReplacer5852;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $r4 = newarray (byte)[8];

     label1:
        varReplacer5852 = "MD5";

        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5852);

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r1);

        varReplacer5849 = 0;

        varReplacer5850 = 8;

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[],int,int)>($r2, varReplacer5849, varReplacer5850);

        $r1 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>();

        varReplacer5853 = 0;

        varReplacer5854 = 0;

        varReplacer5855 = 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer5853, $r4, varReplacer5853, varReplacer5855);

     label2:
        $r1 = newarray (byte)[21];

        varReplacer5846 = 0;

        varReplacer5847 = 0;

        varReplacer5848 = 16;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, varReplacer5846, $r1, varReplacer5846, varReplacer5848);

        $r0 = newarray (byte)[24];

        staticinvoke <jcifs.smb.NtlmPasswordAuthentication: void E(byte[],byte[],byte[])>($r1, $r4, $r0);

        return $r0;

     label3:
        $r3 := @caughtexception;

        $r6 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        $i0 = <jcifs.util.LogStream: int level>;

        if $i0 <= 0 goto label4;

        $r6 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        r8 = (java.security.GeneralSecurityException) $r3;

        virtualinvoke r8.<java.security.GeneralSecurityException: void printStackTrace(java.io.PrintStream)>($r6);

     label4:
        r7 = new java.lang.RuntimeException;

        varReplacer5851 = "MD5";

        specialinvoke r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer5851, $r3);

        throw r7;

        catch java.security.GeneralSecurityException from label1 to label2 with label3;
    }

    public static byte[] getNTLMResponse(java.lang.String, byte[])
    {
        java.lang.String $r0, varReplacer5724;
        byte[] $r1, $r4, $r5, $r7, $r8;
        java.lang.Exception $r2;
        jcifs.util.MD4 $r3, r10;
        java.lang.Throwable $r6;
        jcifs.util.LogStream $r9;
        int $i0, varReplacer5722, varReplacer5723;
        java.io.UnsupportedEncodingException r11;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r8 = null;

        $r4 = newarray (byte)[21];

        $r5 = newarray (byte)[24];

     label1:
        varReplacer5724 = "UTF-16LE";

        $r7 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5724);

     label2:
        $r8 = $r7;

     label3:
        r10 = new jcifs.util.MD4;

        $r3 = r10;

        specialinvoke r10.<jcifs.util.MD4: void <init>()>();

        virtualinvoke $r3.<jcifs.util.MD4: void update(byte[])>($r8);

     label4:
        varReplacer5722 = 0;

        varReplacer5723 = 16;

        virtualinvoke $r3.<jcifs.util.MD4: int digest(byte[],int,int)>($r4, varReplacer5722, varReplacer5723);

     label5:
        staticinvoke <jcifs.smb.NtlmPasswordAuthentication: void E(byte[],byte[],byte[])>($r4, $r1, $r5);

        return $r5;

     label6:
        $r6 := @caughtexception;

        $r9 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        $i0 = <jcifs.util.LogStream: int level>;

        if $i0 <= 0 goto label3;

        $r9 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        r11 = (java.io.UnsupportedEncodingException) $r6;

        virtualinvoke r11.<java.io.UnsupportedEncodingException: void printStackTrace(java.io.PrintStream)>($r9);

        goto label3;

     label7:
        $r2 := @caughtexception;

        $r9 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        $i0 = <jcifs.util.LogStream: int level>;

        if $i0 <= 0 goto label5;

        $r9 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r9);

        goto label5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
        catch java.lang.Exception from label4 to label5 with label7;
    }

    public static byte[] getNTLMv2Response(byte[], byte[], byte[], long, byte[])
    {
        byte[] $r0, $r1, $r2, $r3, $r4;
        long $l0;
        int $i1, $i2, varReplacer5860, varReplacer5861, varReplacer5862, varReplacer5863, varReplacer5864, varReplacer5865, varReplacer5866, varReplacer5867, varReplacer5868, varReplacer5869, varReplacer5870, varReplacer5871, varReplacer5872, varReplacer5873;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $l0 := @parameter3: long;

        $r3 := @parameter4: byte[];

        if $r3 == null goto label3;

        $i1 = lengthof $r3;

     label1:
        $i2 = $i1 + 28;

        $i2 = $i2 + 4;

        $r4 = newarray (byte)[$i2];

        varReplacer5865 = 257;

        varReplacer5866 = 0;

        staticinvoke <jcifs.util.Encdec: int enc_uint32le(int,byte[],int)>(varReplacer5865, $r4, varReplacer5866);

        varReplacer5870 = 0;

        varReplacer5871 = 4;

        staticinvoke <jcifs.util.Encdec: int enc_uint32le(int,byte[],int)>(varReplacer5870, $r4, varReplacer5871);

        varReplacer5861 = 8;

        staticinvoke <jcifs.util.Encdec: int enc_uint64le(long,byte[],int)>($l0, $r4, varReplacer5861);

        varReplacer5867 = 0;

        varReplacer5868 = 16;

        varReplacer5869 = 8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer5867, $r4, varReplacer5868, varReplacer5869);

        varReplacer5862 = 0;

        varReplacer5863 = 24;

        staticinvoke <jcifs.util.Encdec: int enc_uint32le(int,byte[],int)>(varReplacer5862, $r4, varReplacer5863);

        if $r3 == null goto label2;

        varReplacer5872 = 0;

        varReplacer5873 = 28;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, varReplacer5872, $r4, varReplacer5873, $i1);

     label2:
        $i1 = $i1 + 28;

        varReplacer5860 = 0;

        staticinvoke <jcifs.util.Encdec: int enc_uint32le(int,byte[],int)>(varReplacer5860, $r4, $i1);

        $i1 = lengthof $r4;

        varReplacer5864 = 0;

        $r0 = staticinvoke <jcifs.smb.NtlmPasswordAuthentication: byte[] computeResponse(byte[],byte[],byte[],int,int)>($r0, $r1, $r4, varReplacer5864, $i1);

        return $r0;

     label3:
        $i1 = 0;

        goto label1;
    }

    public static byte[] getPreNTLMResponse(java.lang.String, byte[])
    {
        java.lang.String $r0, $r6, varReplacer5725;
        byte[] $r1, $r2, $r3, $r4, $r7;
        java.lang.Throwable $r5;
        int $i0, varReplacer5726, varReplacer5727;
        java.lang.RuntimeException $r8;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = newarray (byte)[14];

        $r3 = newarray (byte)[21];

        $r4 = newarray (byte)[24];

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

     label2:
        $r6 = <jcifs.smb.ServerMessageBlock: java.lang.String OEM_ENCODING>;

     label3:
        $r7 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r6);

     label4:
        $i0 = lengthof $r7;

        if $i0 <= 14 goto label5;

        $i0 = 14;

     label5:
        varReplacer5726 = 0;

        varReplacer5727 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, varReplacer5726, $r2, varReplacer5726, $i0);

        $r7 = <jcifs.smb.NtlmPasswordAuthentication: byte[] S8>;

        staticinvoke <jcifs.smb.NtlmPasswordAuthentication: void E(byte[],byte[],byte[])>($r2, $r7, $r3);

        staticinvoke <jcifs.smb.NtlmPasswordAuthentication: void E(byte[],byte[],byte[])>($r3, $r1, $r4);

        return $r4;

     label6:
        $r5 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        varReplacer5725 = "Try setting jcifs.encoding=US-ASCII";

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer5725, $r5);

        throw $r8;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
    }

    static void initDefaults()
    {
        java.lang.String $r0, varReplacer516, varReplacer517, varReplacer518, varReplacer519, varReplacer520, varReplacer521;

        nop;

        $r0 = <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_DOMAIN>;

        if $r0 == null goto label1;

        return;

     label1:
        varReplacer520 = "jcifs.smb.client.domain";

        varReplacer521 = "?";

        $r0 = staticinvoke <jcifs.Config: java.lang.String getProperty(java.lang.String,java.lang.String)>(varReplacer520, varReplacer521);

        <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_DOMAIN> = $r0;

        varReplacer516 = "jcifs.smb.client.username";

        varReplacer517 = "GUEST";

        $r0 = staticinvoke <jcifs.Config: java.lang.String getProperty(java.lang.String,java.lang.String)>(varReplacer516, varReplacer517);

        <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_USERNAME> = $r0;

        varReplacer518 = "jcifs.smb.client.password";

        varReplacer519 = "";

        $r0 = staticinvoke <jcifs.Config: java.lang.String getProperty(java.lang.String,java.lang.String)>(varReplacer518, varReplacer519);

        <jcifs.smb.NtlmPasswordAuthentication: java.lang.String DEFAULT_PASSWORD> = $r0;

        return;
    }

    public static byte[] nTOWFv1(java.lang.String)
    {
        java.lang.String $r0, varReplacer5856, varReplacer5857;
        jcifs.util.MD4 $r1, r5;
        java.lang.Throwable $r2;
        byte[] $r3;
        java.lang.RuntimeException r4;
        java.io.UnsupportedEncodingException r6;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        r4 = new java.lang.RuntimeException;

        varReplacer5856 = "Password parameter is required";

        specialinvoke r4.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer5856);

        throw r4;

     label1:
        r5 = new jcifs.util.MD4;

        $r1 = r5;

     label2:
        specialinvoke r5.<jcifs.util.MD4: void <init>()>();

        varReplacer5857 = "UTF-16LE";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5857);

        virtualinvoke $r1.<jcifs.util.MD4: void update(byte[])>($r3);

        $r3 = virtualinvoke $r1.<jcifs.util.MD4: byte[] digest()>();

     label3:
        return $r3;

     label4:
        $r2 := @caughtexception;

        r4 = new java.lang.RuntimeException;

        r6 = (java.io.UnsupportedEncodingException) $r2;

        $r0 = virtualinvoke r6.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r0);

        throw r4;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static byte[] nTOWFv2(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, varReplacer5842, varReplacer5843, varReplacer5844;
        jcifs.util.HMACT64 $r3, r8;
        jcifs.util.MD4 $r4, r7;
        java.lang.Throwable $r5;
        byte[] $r6;
        java.lang.RuntimeException r9;
        java.io.UnsupportedEncodingException r10;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        r7 = new jcifs.util.MD4;

        $r4 = r7;

     label1:
        specialinvoke r7.<jcifs.util.MD4: void <init>()>();

        varReplacer5842 = "UTF-16LE";

        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5842);

        virtualinvoke $r4.<jcifs.util.MD4: void update(byte[])>($r6);

     label2:
        r8 = new jcifs.util.HMACT64;

        $r3 = r8;

     label3:
        $r6 = virtualinvoke $r4.<jcifs.util.MD4: byte[] digest()>();

        specialinvoke r8.<jcifs.util.HMACT64: void <init>(byte[])>($r6);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        varReplacer5843 = "UTF-16LE";

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5843);

        virtualinvoke $r3.<jcifs.util.HMACT64: void update(byte[])>($r6);

        varReplacer5844 = "UTF-16LE";

        $r6 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5844);

        virtualinvoke $r3.<jcifs.util.HMACT64: void update(byte[])>($r6);

        $r6 = virtualinvoke $r3.<jcifs.util.HMACT64: byte[] digest()>();

     label4:
        return $r6;

     label5:
        $r5 := @caughtexception;

        r9 = new java.lang.RuntimeException;

        r10 = (java.io.UnsupportedEncodingException) $r5;

        $r0 = virtualinvoke r10.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r0);

        throw r9;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    static java.lang.String unescape(java.lang.String) throws java.lang.NumberFormatException, java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, $r3, varReplacer571;
        byte[] $r1;
        char[] $r2;
        int $i0, $i2, $i3, $i4, varReplacer569, varReplacer570, varReplacer572, varReplacer574, varReplacer575;
        byte $b1;
        char $c5;
        null_type varReplacer573;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = newarray (byte)[1];

        if $r0 != null goto label1;

        varReplacer573 = null;

        return varReplacer573;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r2 = newarray (char)[$i0];

        $b1 = 0;

        $i2 = 0;

        $i3 = 0;

     label2:
        if $i2 >= $i0 goto label8;

        lookupswitch($b1)
        {
            case 0: goto label5;
            case 1: goto label7;
            default: goto label3;
        };

     label3:
        $i4 = $i3;

     label4:
        $i2 = $i2 + 1;

        $i3 = $i4;

        goto label2;

     label5:
        $c5 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        if $c5 != 37 goto label6;

        $b1 = 1;

        $i4 = $i3;

        goto label4;

     label6:
        $i4 = $i3 + 1;

        $r2[$i3] = $c5;

        goto label4;

     label7:
        $i4 = $i2 + 2;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i4);

        varReplacer574 = 16;

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, varReplacer574);

        $i4 = $i4 & 255;

        $b1 = (byte) $i4;

        $r1[0] = $b1;

        $i4 = $i3 + 1;

        $r3 = new java.lang.String;

        varReplacer569 = 0;

        varReplacer570 = 1;

        varReplacer571 = "ASCII";

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer569, varReplacer570, varReplacer571);

        varReplacer575 = 0;

        $c5 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(varReplacer575);

        $r2[$i3] = $c5;

        $i2 = $i2 + 1;

        $b1 = 0;

        goto label4;

     label8:
        $r0 = new java.lang.String;

        varReplacer572 = 0;

        specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, varReplacer572, $i3);

        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        jcifs.smb.NtlmPasswordAuthentication $r0, $r2;
        java.lang.Object $r1;
        boolean $z0;
        java.lang.String $r3, $r4;
        byte[] $r5, $r6;
        int varReplacer5982, varReplacer5983, varReplacer5984, varReplacer5985;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof jcifs.smb.NtlmPasswordAuthentication;

        if $z0 == 0 goto label3;

        $r2 = (jcifs.smb.NtlmPasswordAuthentication) $r1;

        $r3 = $r2.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        $r4 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $r3 = $r2.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        $r4 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username>;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        $z0 = $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal>;

        if $z0 == 0 goto label2;

        $z0 = $r2.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal>;

        if $z0 == 0 goto label2;

        $r5 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] ansiHash>;

        $r6 = $r2.<jcifs.smb.NtlmPasswordAuthentication: byte[] ansiHash>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r5, $r6);

        if $z0 == 0 goto label1;

        $r5 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] unicodeHash>;

        $r6 = $r2.<jcifs.smb.NtlmPasswordAuthentication: byte[] unicodeHash>;

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r5, $r6);

        if $z0 == 0 goto label1;

        varReplacer5982 = 1;

        return varReplacer5982;

     label1:
        varReplacer5985 = 0;

        return varReplacer5985;

     label2:
        $z0 = $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal>;

        if $z0 != 0 goto label3;

        $r3 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        $r4 = $r2.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label4;

     label3:
        varReplacer5983 = 0;

        return varReplacer5983;

     label4:
        varReplacer5984 = 1;

        return varReplacer5984;
    }

    public byte[] getAnsiHash(byte[])
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        byte[] $r1, $r3;
        java.lang.String $r2, $r5, $r6;
        boolean $z0;
        int $i0;
        java.util.Random $r4;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 := @parameter0: byte[];

        $z0 = $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] ansiHash>;

        return $r1;

     label1:
        $i0 = <jcifs.smb.NtlmPasswordAuthentication: int LM_COMPATIBILITY>;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label5;
            case 5: goto label5;
            default: goto label2;
        };

     label2:
        $r2 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        $r1 = staticinvoke <jcifs.smb.NtlmPasswordAuthentication: byte[] getPreNTLMResponse(java.lang.String,byte[])>($r2, $r1);

        return $r1;

     label3:
        $r2 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        $r1 = staticinvoke <jcifs.smb.NtlmPasswordAuthentication: byte[] getPreNTLMResponse(java.lang.String,byte[])>($r2, $r1);

        return $r1;

     label4:
        $r2 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        $r1 = staticinvoke <jcifs.smb.NtlmPasswordAuthentication: byte[] getNTLMResponse(java.lang.String,byte[])>($r2, $r1);

        return $r1;

     label5:
        $r3 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge>;

        if $r3 != null goto label6;

        $r3 = newarray (byte)[8];

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge> = $r3;

        $r4 = <jcifs.smb.NtlmPasswordAuthentication: java.util.Random RANDOM>;

        $r3 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge>;

        virtualinvoke $r4.<java.util.Random: void nextBytes(byte[])>($r3);

     label6:
        $r5 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain>;

        $r6 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username>;

        $r2 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        $r3 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge>;

        $r1 = staticinvoke <jcifs.smb.NtlmPasswordAuthentication: byte[] getLMv2Response(java.lang.String,java.lang.String,java.lang.String,byte[],byte[])>($r5, $r6, $r2, $r1, $r3);

        return $r1;
    }

    public java.lang.String getDomain()
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain>;

        return r1;
    }

    public java.lang.String getName()
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r2;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("?");

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\");

        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username>;

        return $r1;
    }

    public java.lang.String getPassword()
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        return r1;
    }

    public byte[] getSigningKey(byte[]) throws jcifs.smb.SmbException
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        byte[] $r1, $r2;
        int $i0, varReplacer5763, varReplacer5764, varReplacer5765, varReplacer5766;
        jcifs.smb.SmbException $r3;
        java.lang.String varReplacer5761;
        null_type varReplacer5762;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 := @parameter0: byte[];

        $i0 = <jcifs.smb.NtlmPasswordAuthentication: int LM_COMPATIBILITY>;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            default: goto label1;
        };

     label1:
        varReplacer5762 = null;

        return varReplacer5762;

     label2:
        $r2 = newarray (byte)[40];

        varReplacer5763 = 0;

        virtualinvoke $r0.<jcifs.smb.NtlmPasswordAuthentication: void getUserSessionKey(byte[],byte[],int)>($r1, $r2, varReplacer5763);

        $r1 = virtualinvoke $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] getUnicodeHash(byte[])>($r1);

        varReplacer5764 = 0;

        varReplacer5765 = 16;

        varReplacer5766 = 24;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer5764, $r2, varReplacer5765, varReplacer5766);

        return $r2;

     label3:
        $r3 = new jcifs.smb.SmbException;

        varReplacer5761 = "NTLMv2 requires extended security (jcifs.smb.client.useExtendedSecurity must be true if jcifs.smb.lmCompatibility >= 3)";

        specialinvoke $r3.<jcifs.smb.SmbException: void <init>(java.lang.String)>(varReplacer5761);

        throw $r3;
    }

    public byte[] getUnicodeHash(byte[])
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        byte[] $r1;
        boolean $z0;
        int $i0;
        java.lang.String $r2;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 := @parameter0: byte[];

        $z0 = $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal>;

        if $z0 == 0 goto label1;

        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] unicodeHash>;

        return $r1;

     label1:
        $i0 = <jcifs.smb.NtlmPasswordAuthentication: int LM_COMPATIBILITY>;

        lookupswitch($i0)
        {
            case 0: goto label3;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label4;
            case 5: goto label4;
            default: goto label2;
        };

     label2:
        $r2 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        $r1 = staticinvoke <jcifs.smb.NtlmPasswordAuthentication: byte[] getNTLMResponse(java.lang.String,byte[])>($r2, $r1);

        return $r1;

     label3:
        $r2 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        $r1 = staticinvoke <jcifs.smb.NtlmPasswordAuthentication: byte[] getNTLMResponse(java.lang.String,byte[])>($r2, $r1);

        return $r1;

     label4:
        $r1 = newarray (byte)[0];

        return $r1;
    }

    void getUserSessionKey(byte[], byte[], int) throws jcifs.smb.SmbException
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        byte[] $r1, $r2, $r7;
        int $i0, $i1, varReplacer5767, varReplacer5768, varReplacer5771, varReplacer5772, varReplacer5775, varReplacer5776;
        java.lang.Exception $r3;
        jcifs.util.MD4 $r4;
        jcifs.util.HMACT64 $r5, $r10;
        boolean $z0;
        java.lang.String $r6, varReplacer5769, varReplacer5770, varReplacer5773, varReplacer5774;
        jcifs.smb.SmbException $r8;
        java.util.Random $r9;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $z0 = $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r4 = new jcifs.util.MD4;

     label02:
        specialinvoke $r4.<jcifs.util.MD4: void <init>()>();

        $r6 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String password>;

        varReplacer5770 = "UTF-16LE";

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5770);

        virtualinvoke $r4.<jcifs.util.MD4: void update(byte[])>($r7);

     label03:
        $i1 = <jcifs.smb.NtlmPasswordAuthentication: int LM_COMPATIBILITY>;

        lookupswitch($i1)
        {
            case 0: goto label07;
            case 1: goto label07;
            case 2: goto label07;
            case 3: goto label09;
            case 4: goto label09;
            case 5: goto label09;
            default: goto label04;
        };

     label04:
        $r1 = virtualinvoke $r4.<jcifs.util.MD4: byte[] digest()>();

        virtualinvoke $r4.<jcifs.util.MD4: void update(byte[])>($r1);

        varReplacer5775 = 0;

        varReplacer5776 = 16;

        virtualinvoke $r4.<jcifs.util.MD4: int digest(byte[],int,int)>($r2, varReplacer5775, varReplacer5776);

     label05:
        return;

     label06:
        $r3 := @caughtexception;

        $r8 = new jcifs.smb.SmbException;

        varReplacer5769 = "";

        specialinvoke $r8.<jcifs.smb.SmbException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer5769, $r3);

        throw $r8;

     label07:
        $r1 = virtualinvoke $r4.<jcifs.util.MD4: byte[] digest()>();

        virtualinvoke $r4.<jcifs.util.MD4: void update(byte[])>($r1);

        varReplacer5771 = 0;

        varReplacer5772 = 16;

        virtualinvoke $r4.<jcifs.util.MD4: int digest(byte[],int,int)>($r2, varReplacer5771, varReplacer5772);

     label08:
        return;

     label09:
        $r7 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge>;

     label10:
        if $r7 != null goto label14;

     label11:
        $r7 = newarray (byte)[8];

        $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge> = $r7;

     label12:
        $r9 = <jcifs.smb.NtlmPasswordAuthentication: java.util.Random RANDOM>;

     label13:
        $r7 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge>;

        virtualinvoke $r9.<java.util.Random: void nextBytes(byte[])>($r7);

     label14:
        $r5 = new jcifs.util.HMACT64;

     label15:
        $r7 = virtualinvoke $r4.<jcifs.util.MD4: byte[] digest()>();

        specialinvoke $r5.<jcifs.util.HMACT64: void <init>(byte[])>($r7);

        $r6 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase()>();

        varReplacer5773 = "UTF-16LE";

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5773);

        virtualinvoke $r5.<jcifs.util.HMACT64: void update(byte[])>($r7);

        $r6 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String domain>;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toUpperCase()>();

        varReplacer5774 = "UTF-16LE";

        $r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5774);

        virtualinvoke $r5.<jcifs.util.HMACT64: void update(byte[])>($r7);

        $r7 = virtualinvoke $r5.<jcifs.util.HMACT64: byte[] digest()>();

     label16:
        $r10 = new jcifs.util.HMACT64;

     label17:
        specialinvoke $r10.<jcifs.util.HMACT64: void <init>(byte[])>($r7);

        virtualinvoke $r10.<jcifs.util.HMACT64: void update(byte[])>($r1);

        $r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: byte[] clientChallenge>;

        virtualinvoke $r10.<jcifs.util.HMACT64: void update(byte[])>($r1);

     label18:
        $r5 = new jcifs.util.HMACT64;

     label19:
        specialinvoke $r5.<jcifs.util.HMACT64: void <init>(byte[])>($r7);

        $r1 = virtualinvoke $r10.<jcifs.util.HMACT64: byte[] digest()>();

        virtualinvoke $r5.<jcifs.util.HMACT64: void update(byte[])>($r1);

        varReplacer5767 = 0;

        varReplacer5768 = 16;

        virtualinvoke $r5.<jcifs.util.HMACT64: int digest(byte[],int,int)>($r2, varReplacer5767, varReplacer5768);

     label20:
        return;

        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label07 to label08 with label06;
        catch java.lang.Exception from label09 to label10 with label06;
        catch java.lang.Exception from label11 to label12 with label06;
        catch java.lang.Exception from label13 to label14 with label06;
        catch java.lang.Exception from label15 to label16 with label06;
        catch java.lang.Exception from label17 to label18 with label06;
        catch java.lang.Exception from label19 to label20 with label06;
    }

    public byte[] getUserSessionKey(byte[])
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        byte[] $r1, $r3;
        java.lang.Exception $r2;
        boolean $z0;
        jcifs.util.LogStream $r4;
        int $i0;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 := @parameter0: byte[];

        $z0 = $r0.<jcifs.smb.NtlmPasswordAuthentication: boolean hashesExternal>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = newarray (byte)[16];

     label2:
        virtualinvoke $r0.<jcifs.smb.NtlmPasswordAuthentication: void getUserSessionKey(byte[],byte[],int)>($r1, $r3, 0);

     label3:
        return $r3;

     label4:
        $r2 := @caughtexception;

        $r4 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        $i0 = <jcifs.util.LogStream: int level>;

        if $i0 <= 0 goto label5;

        $r4 = <jcifs.smb.NtlmPasswordAuthentication: jcifs.util.LogStream log>;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>($r4);

     label5:
        return $r3;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.lang.String getUsername()
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        r1 = $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String username>;

        return r1;
    }

    public int hashCode()
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        java.lang.String $r1;
        int $i0;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 = virtualinvoke $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        jcifs.smb.NtlmPasswordAuthentication $r0;
        java.lang.String $r1;

        $r0 := @this: jcifs.smb.NtlmPasswordAuthentication;

        $r1 = virtualinvoke $r0.<jcifs.smb.NtlmPasswordAuthentication: java.lang.String getName()>();

        return $r1;
    }
}
