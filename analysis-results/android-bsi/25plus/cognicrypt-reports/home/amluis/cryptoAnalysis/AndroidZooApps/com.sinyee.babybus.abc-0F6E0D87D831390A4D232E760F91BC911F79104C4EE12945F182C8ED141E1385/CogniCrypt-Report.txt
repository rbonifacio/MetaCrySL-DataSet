Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8166)
		Method: <com.babybus.aiolos.g: java.lang.String a(byte[],javax.crypto.SecretKey)>
		SHA-256: 36a8b4960a8ec185d12878f8fa69d1192c8dcfe4796f6b261d3b39f5bd3a6f07
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.babybus.aiolos.g: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: eed6605db0f34bbabfa89c3fb52877f764440e05cd82f090e870c6368df68160
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.iqiyi.sdk.android.vcop.net.HttpTools: void <init>()>
		SHA-256: 8eafe4c250fe5ec89e01de6dc10d5607e313c8a64d63518dc26b9b0bc0c6e901
		Secure: true
	Object:
		Variable: varReplacer8133
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8133)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: 327f95410cc11e1af6f392bed26921317ac359547af235aa00ea19f048c78dcc
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.babybus.aiolos.g: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: 9d617c963919297fcbc1837279a757bafdc80d23404743e2a74e574e3d788a76
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.babybus.aiolos.g: java.lang.String a(byte[],javax.crypto.SecretKey)>
		SHA-256: d7eef02f82b95a4ddafdd1b9a2e72dc3b04384d186bb714811648f958c085fb3
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3149)
		Method: <com.babybus.utils.RSAUtils: java.lang.String sPubEncrypt(java.lang.String,java.lang.String)>
		SHA-256: 7ed9e3ec0c70cb58d91aeab024a91f4a8ef01927a58469b613f0e9d0e5ad8877
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.babybus.helper.RSACodeHelper: void init()>
		SHA-256: 6bc71973c3f5ea8a041e37be4a70512025cf5a185f39cdbfc493bf5a29f146e9
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.babybus.app.App: java.lang.String getMD5MessageDigest(byte[])>
		SHA-256: f0c4695973397670506247f7008685f026d4aeac5eea1659bcabb28ec7427fdc
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8133)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: 7f990c11203663606005e2cb29a5767736467206be8a223e04aa1834dd4ee5fa
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1923)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 8e04ba7660bb0b82bdf07f887f24ce8ba0c8f8365537b1e575e21aeaff9d7531
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: 4278ed9157936097667bc52086c2e35029bba55540082bad1ae263bc341943c8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.babybus.aiolos.g: java.lang.String a(byte[],javax.crypto.SecretKey)>
		SHA-256: fc5341a4e7e7c92c6110bab7d20a7d0f77ac32e4ecd1e33a6517462dd1bfeaea
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3084)
		Method: <com.babybus.helper.RSACodeHelper: void init()>
		SHA-256: f47cf096070062f5dd0e23f796cf193e90d2501a2112f618398b06c8e165244f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8854)
		Method: <com.iqiyi.sdk.android.vcop.net.NewSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 3f45ec82e393a91408b15a23021ecca12b083659296560850db5e761496fa5a2
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.babybus.utils.RSAUtils: java.lang.String sPubEncrypt(java.lang.String,java.lang.String)>
		SHA-256: 8d37f153aed0a1cd0cb26abb78ad69a694aa98dd4ee51f96cbc671d573e6bccc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8167)
		Method: <com.babybus.aiolos.g: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: 51bdedbc876e167bd0aa8aac725308ce549a3231ecb5bdc5a020e6d3f31d16cb
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8137)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: bd008b24ebe716c1d0aa20330d18171dc7ab8c122b88ce61358e5677d731dc0a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8139)
		Method: <com.babybus.app.App: java.lang.String getMD5MessageDigest(byte[])>
		SHA-256: d976d2ef3ef10ee98693a8c44c71341502bf3429368833b6c232b64a92520d23
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9712)
		Method: <com.appodeal.ads.t: javax.net.ssl.SSLSocketFactory d()>
		SHA-256: bb9b8004ab6aade05b37504bba9e68fc4947587a6259bab01b35aff836b3dbbe
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 43c0d5bfd9533c9587d26cfec43e24806645117113b670162ff037504aa69d07
		Secure: false

Findings in Java Class: com.mopub.common.util.Utils

	 in Method: java.lang.String sha1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8e04ba7660bb0b82bdf07f887f24ce8ba0c8f8365537b1e575e21aeaff9d7531)
			First parameter (with value "SHA-1") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1923)


Findings in Java Class: com.babybus.helper.RSACodeHelper

	 in Method: void init()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #f47cf096070062f5dd0e23f796cf193e90d2501a2112f618398b06c8e165244f)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer3085)


Findings in Java Class: com.babybus.utils.RSAUtils

	 in Method: java.lang.String sPubEncrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3148, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7ed9e3ec0c70cb58d91aeab024a91f4a8ef01927a58469b613f0e9d0e5ad8877)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of RSA/ECB/{OAEPwithSHA-512andMGF1Padding, OAEPwithSHA-224andMGF1Padding, OAEPPadding, NoPadding, OAEPwithSHA-384andMGF1Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3149)


Findings in Java Class: com.babybus.utils.AESUtils

	 in Method: java.lang.String Decrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8138, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #bd008b24ebe716c1d0aa20330d18171dc7ab8c122b88ce61358e5677d731dc0a)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{GCM, CBC, CTR}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8137)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8133)


Findings in Java Class: com.babybus.app.App

	 in Method: java.lang.String getMD5MessageDigest(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d976d2ef3ef10ee98693a8c44c71341502bf3429368833b6c232b64a92520d23)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8139)


Findings in Java Class: com.babybus.aiolos.g

	 in Method: java.lang.String a(byte[],javax.crypto.SecretKey)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #36a8b4960a8ec185d12878f8fa69d1192c8dcfe4796f6b261d3b39f5bd3a6f07)
			First parameter (with value "des") should be any of {AES_128, AES, AES_256, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8166)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer8165, $r1, $r2)


	 in Method: javax.crypto.SecretKey a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #51bdedbc876e167bd0aa8aac725308ce549a3231ecb5bdc5a020e6d3f31d16cb)
			First parameter (with value "des") should be any of {PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithHmacSHA224AndAES_256, PBKDF2withHmacSHA224, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, PBEwithHmacSHA256AndAES_128, PBEwithHmacSHA512AndAES_256, HmacSHA512, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, HmacSHA224, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBKDF2withHmacSHA512, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8167)


Findings in Java Class: com.iqiyi.sdk.android.vcop.net.NewSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8855, r5, varReplacer8855)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8855, r5, varReplacer8855)


Findings in Java Class: com.appodeal.ads.t

	 in Method: javax.net.ssl.SSLSocketFactory d()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9713, r8, varReplacer9713)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9713, r8, varReplacer9713)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 9
	ConstraintError: 7
=====================================================================