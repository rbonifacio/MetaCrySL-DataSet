public final class com.softbolt.redkaraoke.singrecord.util.u extends java.lang.Object
{

    public static java.security.PublicKey a(java.lang.String)
    {
        java.lang.String $r0, varReplacer2087, varReplacer2088, varReplacer2089, varReplacer2090, varReplacer2091;
        byte[] $r1;
        java.security.KeyFactory $r2;
        java.security.spec.X509EncodedKeySpec $r3;
        java.security.PublicKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r8;
        com.softbolt.redkaraoke.singrecord.util.f $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.softbolt.redkaraoke.singrecord.util.e: byte[] a(java.lang.String)>($r0);

        varReplacer2091 = "RSA";

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer2091);

     label2:
        $r3 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer2089 = "IABUtil/Security";

        varReplacer2090 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2089, varReplacer2090);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label7:
        $r9 := @caughtexception;

        varReplacer2087 = "IABUtil/Security";

        varReplacer2088 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2087, varReplacer2088);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
        catch com.softbolt.redkaraoke.singrecord.util.f from label1 to label2 with label7;
        catch com.softbolt.redkaraoke.singrecord.util.f from label3 to label4 with label7;
    }

    public static boolean a(java.security.PublicKey, java.lang.String, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, $r2, varReplacer2071, varReplacer2072, varReplacer2074, varReplacer2075, varReplacer2076, varReplacer2077, varReplacer2081, varReplacer2082, varReplacer2083, varReplacer2084, varReplacer2085;
        java.security.Signature $r3;
        byte[] $r4;
        boolean $z0;
        java.lang.Throwable $r5, $r6, $r7;
        com.softbolt.redkaraoke.singrecord.util.f $r8;
        int varReplacer2070, varReplacer2073, varReplacer2078, varReplacer2079, varReplacer2080, varReplacer2086;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        varReplacer2085 = "SHA1withRSA";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2085);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r4);

        $r4 = staticinvoke <com.softbolt.redkaraoke.singrecord.util.e: byte[] a(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4);

     label2:
        if $z0 != 0 goto label5;

     label3:
        varReplacer2071 = "IABUtil/Security";

        varReplacer2072 = "Signature verification failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2071, varReplacer2072);

     label4:
        varReplacer2070 = 0;

        return varReplacer2070;

     label5:
        varReplacer2073 = 1;

        return varReplacer2073;

     label6:
        $r5 := @caughtexception;

        varReplacer2076 = "IABUtil/Security";

        varReplacer2077 = "NoSuchAlgorithmException.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2076, varReplacer2077);

        varReplacer2078 = 0;

        return varReplacer2078;

     label7:
        $r6 := @caughtexception;

        varReplacer2083 = "IABUtil/Security";

        varReplacer2084 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2083, varReplacer2084);

        varReplacer2086 = 0;

        return varReplacer2086;

     label8:
        $r7 := @caughtexception;

        varReplacer2074 = "IABUtil/Security";

        varReplacer2075 = "Signature exception.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2074, varReplacer2075);

        varReplacer2080 = 0;

        return varReplacer2080;

     label9:
        $r8 := @caughtexception;

        varReplacer2081 = "IABUtil/Security";

        varReplacer2082 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2081, varReplacer2082);

        varReplacer2079 = 0;

        return varReplacer2079;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.SignatureException from label1 to label2 with label8;
        catch java.security.SignatureException from label3 to label4 with label8;
        catch com.softbolt.redkaraoke.singrecord.util.f from label1 to label2 with label9;
        catch com.softbolt.redkaraoke.singrecord.util.f from label3 to label4 with label9;
    }
}
