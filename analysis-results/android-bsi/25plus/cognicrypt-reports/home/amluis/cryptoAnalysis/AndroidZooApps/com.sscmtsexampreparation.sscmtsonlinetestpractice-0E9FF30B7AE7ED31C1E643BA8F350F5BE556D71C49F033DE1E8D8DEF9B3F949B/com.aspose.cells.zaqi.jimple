class com.aspose.cells.zaqi extends java.lang.Object
{
    java.security.PrivateKey a;
    java.security.Signature b;

    public void <init>(java.security.PrivateKey)
    {
        com.aspose.cells.zaqi $r0;
        java.security.PrivateKey $r1;
        java.security.Signature $r2;
        java.lang.Exception $r3;

        $r0 := @this: com.aspose.cells.zaqi;

        $r1 := @parameter0: java.security.PrivateKey;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.aspose.cells.zaqi: java.security.PrivateKey a> = null;

        $r0.<com.aspose.cells.zaqi: java.security.Signature b> = null;

     label1:
        $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>("SHA1withRSA");

        $r0.<com.aspose.cells.zaqi: java.security.Signature b> = $r2;

        $r0.<com.aspose.cells.zaqi: java.security.PrivateKey a> = $r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static byte[] a(com.aspose.cells.c.a.d.zm)
    {
        com.aspose.cells.c.a.d.zm $r0;
        java.security.MessageDigest $r1;
        long $l0;
        int $i1;
        byte[] $r2;
        java.lang.Exception $r3;

        $r0 := @parameter0: com.aspose.cells.c.a.d.zm;

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("sha-1");

        $l0 = virtualinvoke $r0.<com.aspose.cells.c.a.d.zm: long h()>();

     label2:
        $i1 = (int) $l0;

     label3:
        $r2 = newarray (byte)[$i1];

        $l0 = virtualinvoke $r0.<com.aspose.cells.c.a.d.zm: long h()>();

     label4:
        $i1 = (int) $l0;

     label5:
        virtualinvoke $r0.<com.aspose.cells.c.a.d.zm: int a(byte[],int,int)>($r2, 0, $i1);

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

     label6:
        return $r2;

     label7:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static byte[] b(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest $r1;
        java.lang.Throwable $r2;
        java.lang.String varReplacer5232;
        null_type varReplacer5233;

        nop;

        $r0 := @parameter0: byte[];

     label1:
        varReplacer5232 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5232);

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        varReplacer5233 = null;

        return varReplacer5233;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public byte[] a(byte[])
    {
        com.aspose.cells.zaqi $r0;
        byte[] $r1;
        java.security.PrivateKey $r2;
        java.security.Signature $r3;
        java.lang.Exception $r4;

        $r0 := @this: com.aspose.cells.zaqi;

        $r1 := @parameter0: byte[];

     label1:
        $r3 = $r0.<com.aspose.cells.zaqi: java.security.Signature b>;

        $r2 = $r0.<com.aspose.cells.zaqi: java.security.PrivateKey a>;

        virtualinvoke $r3.<java.security.Signature: void initSign(java.security.PrivateKey)>($r2);

        $r3 = $r0.<com.aspose.cells.zaqi: java.security.Signature b>;

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r1);

        $r3 = $r0.<com.aspose.cells.zaqi: java.security.Signature b>;

        $r1 = virtualinvoke $r3.<java.security.Signature: byte[] sign()>();

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
