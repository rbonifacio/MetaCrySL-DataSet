public class com.ubt.alpha1s.utils.b.a extends java.lang.Object
{
    private static java.lang.String a;
    private static javax.net.ssl.SSLContext b;
    private static com.ubt.alpha1s.utils.b.a c;
    private static android.content.Context d;

    static void <clinit>()
    {
        null_type varReplacer13608, varReplacer13609, varReplacer13611;
        java.lang.String varReplacer13610;

        nop;

        varReplacer13610 = "ConnectClientUtil";

        <com.ubt.alpha1s.utils.b.a: java.lang.String a> = varReplacer13610;

        varReplacer13611 = null;

        <com.ubt.alpha1s.utils.b.a: javax.net.ssl.SSLContext b> = varReplacer13611;

        varReplacer13609 = null;

        <com.ubt.alpha1s.utils.b.a: com.ubt.alpha1s.utils.b.a c> = varReplacer13609;

        varReplacer13608 = null;

        <com.ubt.alpha1s.utils.b.a: android.content.Context d> = varReplacer13608;

        return;
    }

    public void <init>()
    {
        com.ubt.alpha1s.utils.b.a $r0;

        nop;

        $r0 := @this: com.ubt.alpha1s.utils.b.a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.ubt.alpha1s.utils.b.a a()
    {
        com.ubt.alpha1s.utils.b.a $r0;
        android.content.Context $r1;

        nop;

        $r0 = <com.ubt.alpha1s.utils.b.a: com.ubt.alpha1s.utils.b.a c>;

        if $r0 != null goto label1;

        $r0 = new com.ubt.alpha1s.utils.b.a;

        specialinvoke $r0.<com.ubt.alpha1s.utils.b.a: void <init>()>();

        <com.ubt.alpha1s.utils.b.a: com.ubt.alpha1s.utils.b.a c> = $r0;

        $r1 = <com.ubt.alpha1s.AlphaApplication: android.content.Context b>;

        <com.ubt.alpha1s.utils.b.a: android.content.Context d> = $r1;

     label1:
        $r0 = <com.ubt.alpha1s.utils.b.a: com.ubt.alpha1s.utils.b.a c>;

        return $r0;
    }

    public static javax.net.ssl.SSLSocketFactory e()
    {
        javax.net.ssl.SSLSocketFactory $r0;
        javax.net.ssl.SSLContext $r1;
        null_type varReplacer13612;

        nop;

        $r1 = <com.ubt.alpha1s.utils.b.a: javax.net.ssl.SSLContext b>;

        if $r1 == null goto label1;

        $r1 = <com.ubt.alpha1s.utils.b.a: javax.net.ssl.SSLContext b>;

        $r0 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        return $r0;

     label1:
        varReplacer13612 = null;

        return varReplacer13612;
    }

    private void f()
    {
        com.ubt.alpha1s.utils.b.a $r0;
        java.lang.String $r1;
        boolean $z0;
        java.io.BufferedInputStream $r2, r14;
        android.content.Context $r3;
        android.content.res.AssetManager $r4;
        java.io.InputStream $r5;
        java.lang.Object[] $r6;
        com.zhy.http.okhttp.https.HttpsUtils$SSLParams $r7;
        okhttp3.OkHttpClient$Builder $r8, r15;
        javax.net.ssl.SSLSocketFactory $r9;
        javax.net.ssl.X509TrustManager $r10;
        okhttp3.OkHttpClient $r11;
        com.bumptech.glide.Glide $r12;
        java.lang.Throwable $r13;
        com.ubt.alpha1s.utils.b.a$2 r16;
        com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory r17;
        java.io.InputStream[] r18;
        javax.net.ssl.HostnameVerifier r19;
        java.io.IOException r20;
        null_type varReplacer16567, varReplacer16568;

        nop;

        $r0 := @this: com.ubt.alpha1s.utils.b.a;

        $r1 = specialinvoke $r0.<com.ubt.alpha1s.utils.b.a: java.lang.String g()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label6;

        r14 = new java.io.BufferedInputStream;

        $r3 = <com.ubt.alpha1s.utils.b.a: android.content.Context d>;

     label1:
        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

        specialinvoke r14.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

     label2:
        $r2 = r14;

     label3:
        if $r2 == null goto label6;

        $r6 = newarray (java.io.InputStream)[1];

        $r6[0] = $r2;

     label4:
        r18 = (java.io.InputStream[]) $r6;

        varReplacer16567 = null;

        varReplacer16568 = null;

        $r7 = staticinvoke <com.zhy.http.okhttp.https.HttpsUtils: com.zhy.http.okhttp.https.HttpsUtils$SSLParams getSslSocketFactory(java.io.InputStream[],java.io.InputStream,java.lang.String)>(r18, varReplacer16567, varReplacer16567);

        r15 = new okhttp3.OkHttpClient$Builder;

        specialinvoke r15.<okhttp3.OkHttpClient$Builder: void <init>()>();

        $r9 = $r7.<com.zhy.http.okhttp.https.HttpsUtils$SSLParams: javax.net.ssl.SSLSocketFactory sSLSocketFactory>;

        $r10 = $r7.<com.zhy.http.okhttp.https.HttpsUtils$SSLParams: javax.net.ssl.X509TrustManager trustManager>;

        $r8 = virtualinvoke r15.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory,javax.net.ssl.X509TrustManager)>($r9, $r10);

        r16 = new com.ubt.alpha1s.utils.b.a$2;

        specialinvoke r16.<com.ubt.alpha1s.utils.b.a$2: void <init>(com.ubt.alpha1s.utils.b.a)>($r0);

        r19 = (javax.net.ssl.HostnameVerifier) r16;

        $r8 = virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)>(r19);

        $r11 = virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>();

        staticinvoke <com.zhy.http.okhttp.OkHttpUtils: com.zhy.http.okhttp.OkHttpUtils initClient(okhttp3.OkHttpClient)>($r11);

        $r3 = <com.ubt.alpha1s.utils.b.a: android.content.Context d>;

        $r12 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>($r3);

        r17 = new com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory;

        specialinvoke r17.<com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory: void <init>(okhttp3.Call$Factory)>($r11);

        virtualinvoke $r12.<com.bumptech.glide.Glide: void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)>(class "Lcom/bumptech/glide/load/model/GlideUrl;", class "Ljava/io/InputStream;", r17);

        return;

     label5:
        $r13 := @caughtexception;

        r20 = (java.io.IOException) $r13;

        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();

        $r2 = null;

        goto label3;

     label6:
        $r6 = null;

        goto label4;

        catch java.io.IOException from label1 to label2 with label5;
    }

    private java.lang.String g()
    {
        com.ubt.alpha1s.utils.b.a $r0;
        java.lang.String $r1, varReplacer16569, varReplacer16570, varReplacer16571, varReplacer16572;
        boolean $z0;

        nop;

        $r0 := @this: com.ubt.alpha1s.utils.b.a;

        $r1 = "https://services.ubtrobot.com/ubx";

        varReplacer16571 = "10.10.1.14";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer16571);

        if $z0 == 0 goto label1;

        varReplacer16569 = "certificate/14_sds.crt";

        return varReplacer16569;

     label1:
        $r1 = "https://services.ubtrobot.com/ubx";

        varReplacer16572 = "10.10.1.12";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer16572);

        if $z0 == 0 goto label2;

     label2:
        varReplacer16570 = "";

        return varReplacer16570;
    }

    public void b()
    {
        com.ubt.alpha1s.utils.b.a $r0;

        nop;

        $r0 := @this: com.ubt.alpha1s.utils.b.a;

        virtualinvoke $r0.<com.ubt.alpha1s.utils.b.a: void c()>();

        virtualinvoke $r0.<com.ubt.alpha1s.utils.b.a: void d()>();

        specialinvoke $r0.<com.ubt.alpha1s.utils.b.a: void f()>();

        return;
    }

    public void c()
    {
        com.ubt.alpha1s.utils.b.a $r0;
        com.ubt.alpha1s.utils.b.a$1 r1;
        javax.net.ssl.HostnameVerifier r2;

        nop;

        $r0 := @this: com.ubt.alpha1s.utils.b.a;

        r1 = new com.ubt.alpha1s.utils.b.a$1;

        specialinvoke r1.<com.ubt.alpha1s.utils.b.a$1: void <init>(com.ubt.alpha1s.utils.b.a)>($r0);

        r2 = (javax.net.ssl.HostnameVerifier) r1;

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)>(r2);

        return;
    }

    public void d()
    {
        com.ubt.alpha1s.utils.b.a $r0;
        java.lang.String $r1, varReplacer16558, varReplacer16559, varReplacer16560, varReplacer16561, varReplacer16564;
        boolean $z0;
        java.security.cert.CertificateFactory $r2;
        java.io.BufferedInputStream $r3, r19;
        android.content.Context $r4;
        android.content.res.AssetManager $r5;
        java.io.InputStream $r6;
        java.security.cert.Certificate $r7;
        java.security.KeyStore $r8;
        javax.net.ssl.TrustManagerFactory $r9;
        javax.net.ssl.SSLContext $r10;
        javax.net.ssl.TrustManager[] $r11;
        java.lang.Throwable $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.security.cert.CertificateException r20;
        java.io.IOException r21;
        java.security.NoSuchAlgorithmException r22;
        java.security.KeyStoreException r23;
        java.security.KeyManagementException r24;
        java.security.NoSuchProviderException r25;
        null_type varReplacer16562, varReplacer16563, varReplacer16565, varReplacer16566;

        nop;

        $r0 := @this: com.ubt.alpha1s.utils.b.a;

     label01:
        $r1 = specialinvoke $r0.<com.ubt.alpha1s.utils.b.a: java.lang.String g()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label02:
        if $z0 == 0 goto label03;

        return;

     label03:
        varReplacer16560 = "X.509";

        $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer16560);

     label04:
        r19 = new java.io.BufferedInputStream;

        $r3 = r19;

        $r4 = <com.ubt.alpha1s.utils.b.a: android.content.Context d>;

     label05:
        $r5 = virtualinvoke $r4.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r6 = virtualinvoke $r5.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r1);

        specialinvoke r19.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6);

     label06:
        $r7 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3);

     label07:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        $r1 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1);

        varReplacer16565 = null;

        varReplacer16566 = null;

        virtualinvoke $r8.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer16565, varReplacer16565);

        varReplacer16564 = "ca";

        virtualinvoke $r8.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(varReplacer16564, $r7);

        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r9 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1);

        virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r8);

        varReplacer16558 = "TLSv1";

        varReplacer16559 = "AndroidOpenSSL";

        $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>(varReplacer16558, varReplacer16559);

        $r11 = virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        varReplacer16562 = null;

        varReplacer16563 = null;

        virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16562, $r11, varReplacer16562);

     label08:
        <com.ubt.alpha1s.utils.b.a: javax.net.ssl.SSLContext b> = $r10;

        $r1 = <com.ubt.alpha1s.utils.b.a: java.lang.String a>;

     label09:
        varReplacer16561 = "\u8bc1\u4e66\u521d\u59cb\u5316\u6210\u529f";

        staticinvoke <com.ubt.alpha1s.utils.d.a: void a(java.lang.String,java.lang.String)>($r1, varReplacer16561);

     label10:
        return;

     label11:
        $r12 := @caughtexception;

        r20 = (java.security.cert.CertificateException) $r12;

        virtualinvoke r20.<java.security.cert.CertificateException: void printStackTrace()>();

        return;

     label12:
        $r13 := @caughtexception;

     label13:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        throw $r13;

     label14:
        $r14 := @caughtexception;

        r21 = (java.io.IOException) $r14;

        virtualinvoke r21.<java.io.IOException: void printStackTrace()>();

        return;

     label15:
        $r15 := @caughtexception;

        r22 = (java.security.NoSuchAlgorithmException) $r15;

        virtualinvoke r22.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return;

     label16:
        $r16 := @caughtexception;

        r23 = (java.security.KeyStoreException) $r16;

        virtualinvoke r23.<java.security.KeyStoreException: void printStackTrace()>();

        return;

     label17:
        $r17 := @caughtexception;

        r24 = (java.security.KeyManagementException) $r17;

        virtualinvoke r24.<java.security.KeyManagementException: void printStackTrace()>();

        return;

     label18:
        $r18 := @caughtexception;

        r25 = (java.security.NoSuchProviderException) $r18;

        virtualinvoke r25.<java.security.NoSuchProviderException: void printStackTrace()>();

        return;

        catch java.security.cert.CertificateException from label01 to label02 with label11;
        catch java.security.cert.CertificateException from label03 to label04 with label11;
        catch java.security.cert.CertificateException from label05 to label06 with label11;
        catch java.io.IOException from label01 to label02 with label14;
        catch java.io.IOException from label03 to label04 with label14;
        catch java.io.IOException from label05 to label06 with label14;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label15;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label15;
        catch java.security.KeyStoreException from label01 to label02 with label16;
        catch java.security.KeyStoreException from label03 to label04 with label16;
        catch java.security.KeyStoreException from label05 to label06 with label16;
        catch java.security.KeyManagementException from label01 to label02 with label17;
        catch java.security.KeyManagementException from label03 to label04 with label17;
        catch java.security.KeyManagementException from label05 to label06 with label17;
        catch java.security.NoSuchProviderException from label01 to label02 with label18;
        catch java.security.NoSuchProviderException from label03 to label04 with label18;
        catch java.security.NoSuchProviderException from label05 to label06 with label18;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.security.cert.CertificateException from label07 to label08 with label11;
        catch java.security.cert.CertificateException from label09 to label10 with label11;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label15;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label15;
        catch java.security.KeyStoreException from label07 to label08 with label16;
        catch java.security.KeyStoreException from label09 to label10 with label16;
        catch java.security.KeyManagementException from label07 to label08 with label17;
        catch java.security.KeyManagementException from label09 to label10 with label17;
        catch java.security.NoSuchProviderException from label07 to label08 with label18;
        catch java.security.NoSuchProviderException from label09 to label10 with label18;
        catch java.security.cert.CertificateException from label13 to label14 with label11;
        catch java.io.IOException from label13 to label14 with label14;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label15;
        catch java.security.KeyStoreException from label13 to label14 with label16;
        catch java.security.KeyManagementException from label13 to label14 with label17;
        catch java.security.NoSuchProviderException from label13 to label14 with label18;
    }
}
