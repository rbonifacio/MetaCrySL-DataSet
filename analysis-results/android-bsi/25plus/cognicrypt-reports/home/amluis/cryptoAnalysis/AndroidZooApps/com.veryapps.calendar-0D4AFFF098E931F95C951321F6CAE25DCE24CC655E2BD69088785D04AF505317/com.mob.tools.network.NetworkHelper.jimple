public class com.mob.tools.network.NetworkHelper extends java.lang.Object
{
    public static int connectionTimeout;
    public static int readTimout;

    public void <init>()
    {
        com.mob.tools.network.NetworkHelper $r0;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private java.net.HttpURLConnection getConnection(java.lang.String, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, varReplacer2465, varReplacer2470, varReplacer2471, varReplacer2472, varReplacer2473, varReplacer2474, varReplacer2475;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r2;
        org.apache.http.conn.ssl.X509HostnameVerifier $r3;
        java.lang.String[] $r4, $r10;
        java.lang.Object[] $r5;
        java.net.URLConnection $r6;
        java.net.HttpURLConnection $r7;
        boolean $z0;
        java.lang.Object $r8, $r9;
        int $i0, varReplacer2468, varReplacer2469;
        javax.net.ssl.HttpsURLConnection $r11;
        javax.net.ssl.SSLContext $r12;
        javax.net.ssl.SSLSocketFactory $r13;
        java.lang.Throwable $r14, $r15;
        java.net.URL r16;
        com.mob.tools.network.NetworkHelper$SimpleX509TrustManager r17;
        java.security.SecureRandom r18;
        javax.net.ssl.TrustManager[] r19;
        null_type varReplacer2466, varReplacer2467;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        r16 = new java.net.URL;

        specialinvoke r16.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r6 = virtualinvoke r16.<java.net.URL: java.net.URLConnection openConnection()>();

        $r7 = (java.net.HttpURLConnection) $r6;

        $r1 = "methodTokens";

        $z0 = 0;

        $r8 = null;

        goto label11;

     label01:
        if $r8 != null goto label18;

        $r1 = "PERMITTED_USER_METHODS";

        $z0 = 1;

     label02:
        varReplacer2470 = "HttpURLConnection";

        varReplacer2471 = "PERMITTED_USER_METHODS";

        $r9 = staticinvoke <com.mob.tools.utils.ReflectHelper: java.lang.Object getStaticField(java.lang.String,java.lang.String)>(varReplacer2470, varReplacer2471);

     label03:
        $r8 = $r9;

     label04:
        if $r8 == null goto label05;

        $r4 = (java.lang.String[]) $r8;

        $r10 = $r4;

        $i0 = lengthof $r10;

        $i0 = $i0 + 1;

        $r4 = newarray (java.lang.String)[$i0];

        $i0 = lengthof $r10;

        varReplacer2468 = 0;

        varReplacer2469 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, varReplacer2468, $r4, varReplacer2468, $i0);

        $i0 = lengthof $r10;

        $r4[$i0] = "PATCH";

        if $z0 == 0 goto label14;

        varReplacer2465 = "HttpURLConnection";

        staticinvoke <com.mob.tools.utils.ReflectHelper: void setStaticField(java.lang.String,java.lang.String,java.lang.Object)>(varReplacer2465, $r1, $r4);

     label05:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 8 goto label06;

        varReplacer2472 = "http.keepAlive";

        varReplacer2473 = "false";

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>(varReplacer2472, varReplacer2473);

     label06:
        $z0 = $r7 instanceof javax.net.ssl.HttpsURLConnection;

        if $z0 == 0 goto label07;

        $r3 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER>;

        $r11 = (javax.net.ssl.HttpsURLConnection) $r7;

        varReplacer2475 = "TLS";

        $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2475);

        $r5 = newarray (javax.net.ssl.TrustManager)[1];

        r17 = new com.mob.tools.network.NetworkHelper$SimpleX509TrustManager;

        varReplacer2466 = null;

        specialinvoke r17.<com.mob.tools.network.NetworkHelper$SimpleX509TrustManager: void <init>(java.security.KeyStore)>(varReplacer2466);

        $r5[0] = r17;

        r18 = new java.security.SecureRandom;

        specialinvoke r18.<java.security.SecureRandom: void <init>()>();

        r19 = (javax.net.ssl.TrustManager[]) $r5;

        varReplacer2467 = null;

        virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2467, r19, r18);

        $r13 = virtualinvoke $r12.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r13);

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r3);

     label07:
        if $r2 != null goto label15;

        $i0 = <com.mob.tools.network.NetworkHelper: int connectionTimeout>;

     label08:
        if $i0 <= 0 goto label09;

        virtualinvoke $r7.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

     label09:
        if $r2 != null goto label16;

        $i0 = <com.mob.tools.network.NetworkHelper: int readTimout>;

     label10:
        if $i0 <= 0 goto label19;

        virtualinvoke $r7.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        return $r7;

     label11:
        varReplacer2474 = "methodTokens";

        $r9 = staticinvoke <com.mob.tools.utils.ReflectHelper: java.lang.Object getInstanceField(java.lang.Object,java.lang.String)>($r7, varReplacer2474);

     label12:
        $r8 = $r9;

        goto label01;

     label13:
        $r14 := @caughtexception;

        goto label04;

     label14:
        staticinvoke <com.mob.tools.utils.ReflectHelper: void setInstanceField(java.lang.Object,java.lang.String,java.lang.Object)>($r7, $r1, $r4);

        goto label05;

     label15:
        $i0 = $r2.<com.mob.tools.network.NetworkHelper$NetworkTimeOut: int connectionTimeout>;

        goto label08;

     label16:
        $i0 = $r2.<com.mob.tools.network.NetworkHelper$NetworkTimeOut: int readTimout>;

        goto label10;

     label17:
        $r15 := @caughtexception;

        goto label01;

     label18:
        goto label04;

     label19:
        return $r7;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label11 to label12 with label17;
    }

    private com.mob.tools.network.HTTPPart getFilePostHTTPPart(java.net.HttpURLConnection, java.lang.String, java.util.ArrayList, java.util.ArrayList) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2, $r11, $r18, varReplacer5726, varReplacer5727, varReplacer5728, varReplacer5729, varReplacer5730, varReplacer5731, varReplacer5732, varReplacer5733, varReplacer5734, varReplacer5735, varReplacer5736, varReplacer5737, varReplacer5738, varReplacer5739, varReplacer5740, varReplacer5741, varReplacer5742, varReplacer5743, varReplacer5744, varReplacer5745, varReplacer5746;
        java.util.ArrayList $r3, $r4;
        java.io.FileInputStream $r5;
        com.mob.tools.network.FilePart $r6;
        java.io.File $r7;
        com.mob.tools.network.MultiPart $r8;
        java.util.UUID $r9;
        java.lang.StringBuilder $r10;
        com.mob.tools.network.StringPart $r12, $r16;
        java.util.Iterator $r13;
        boolean $z0;
        java.lang.Object $r14;
        com.mob.tools.network.KVPair $r15;
        java.net.FileNameMap $r17;
        int $i0;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.net.HttpURLConnection;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.ArrayList;

        $r4 := @parameter3: java.util.ArrayList;

        $r9 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r2 = virtualinvoke $r9.<java.util.UUID: java.lang.String toString()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer5732 = "multipart/form-data; boundary=";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5732);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5729 = "Content-Type";

        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer5729, $r11);

        $r8 = new com.mob.tools.network.MultiPart;

        specialinvoke $r8.<com.mob.tools.network.MultiPart: void <init>()>();

        $r12 = new com.mob.tools.network.StringPart;

        specialinvoke $r12.<com.mob.tools.network.StringPart: void <init>()>();

        if $r3 == null goto label02;

        $r13 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.mob.tools.network.KVPair) $r14;

        varReplacer5734 = "--";

        $r16 = virtualinvoke $r12.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5734);

        $r16 = virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r2);

        varReplacer5742 = "\r\n";

        virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5742);

        varReplacer5730 = "Content-Disposition: form-data; name=\"";

        $r16 = virtualinvoke $r12.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5730);

        $r11 = $r15.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r16 = virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r11);

        varReplacer5727 = "\"\r\n\r\n";

        virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5727);

        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r14;

        $r16 = virtualinvoke $r12.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r11);

        varReplacer5744 = "\r\n";

        virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5744);

        goto label01;

     label02:
        virtualinvoke $r8.<com.mob.tools.network.MultiPart: com.mob.tools.network.MultiPart append(com.mob.tools.network.HTTPPart)>($r12);

        $r13 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.mob.tools.network.KVPair) $r14;

        $r12 = new com.mob.tools.network.StringPart;

        specialinvoke $r12.<com.mob.tools.network.StringPart: void <init>()>();

        $r7 = new java.io.File;

        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r14;

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r11);

        varReplacer5726 = "--";

        $r16 = virtualinvoke $r12.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5726);

        $r16 = virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r2);

        varReplacer5731 = "\r\n";

        virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5731);

        varReplacer5745 = "Content-Disposition: form-data; name=\"";

        $r16 = virtualinvoke $r12.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5745);

        $r11 = $r15.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r16 = virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r11);

        varReplacer5740 = "\"; filename=\"";

        $r16 = virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5740);

        $r11 = virtualinvoke $r7.<java.io.File: java.lang.String getName()>();

        $r16 = virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r11);

        varReplacer5737 = "\"\r\n";

        virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5737);

        $r17 = staticinvoke <java.net.URLConnection: java.net.FileNameMap getFileNameMap()>();

        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r14;

        $r18 = interfaceinvoke $r17.<java.net.FileNameMap: java.lang.String getContentTypeFor(java.lang.String)>($r11);

        $r11 = $r18;

        if $r18 == null goto label04;

        $i0 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i0 > 0 goto label06;

     label04:
        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r14;

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer5746 = "jpg";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>(varReplacer5746);

        if $z0 != 0 goto label05;

        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r14;

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer5733 = "jpeg";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>(varReplacer5733);

        if $z0 == 0 goto label07;

     label05:
        $r11 = "image/jpeg";

     label06:
        varReplacer5728 = "Content-Type: ";

        $r16 = virtualinvoke $r12.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5728);

        $r16 = virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r11);

        varReplacer5738 = "\r\n\r\n";

        virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5738);

        virtualinvoke $r8.<com.mob.tools.network.MultiPart: com.mob.tools.network.MultiPart append(com.mob.tools.network.HTTPPart)>($r12);

        $r6 = new com.mob.tools.network.FilePart;

        specialinvoke $r6.<com.mob.tools.network.FilePart: void <init>()>();

        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r14;

        virtualinvoke $r6.<com.mob.tools.network.FilePart: void setFile(java.lang.String)>($r11);

        virtualinvoke $r8.<com.mob.tools.network.MultiPart: com.mob.tools.network.MultiPart append(com.mob.tools.network.HTTPPart)>($r6);

        $r12 = new com.mob.tools.network.StringPart;

        specialinvoke $r12.<com.mob.tools.network.StringPart: void <init>()>();

        varReplacer5739 = "\r\n";

        virtualinvoke $r12.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5739);

        virtualinvoke $r8.<com.mob.tools.network.MultiPart: com.mob.tools.network.MultiPart append(com.mob.tools.network.HTTPPart)>($r12);

        goto label03;

     label07:
        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r14;

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer5741 = "png";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>(varReplacer5741);

        if $z0 == 0 goto label08;

        $r11 = "image/png";

        goto label06;

     label08:
        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r14;

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer5743 = "gif";

        $z0 = virtualinvoke $r11.<java.lang.String: boolean endsWith(java.lang.String)>(varReplacer5743);

        if $z0 == 0 goto label09;

        $r11 = "image/gif";

        goto label06;

     label09:
        $r5 = new java.io.FileInputStream;

        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r14;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.lang.String)>($r11);

        $r18 = staticinvoke <java.net.URLConnection: java.lang.String guessContentTypeFromStream(java.io.InputStream)>($r5);

        $r11 = $r18;

        virtualinvoke $r5.<java.io.FileInputStream: void close()>();

        if $r18 == null goto label10;

        $i0 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i0 > 0 goto label06;

     label10:
        $r11 = "application/octet-stream";

        goto label06;

     label11:
        $r12 = new com.mob.tools.network.StringPart;

        specialinvoke $r12.<com.mob.tools.network.StringPart: void <init>()>();

        varReplacer5735 = "--";

        $r16 = virtualinvoke $r12.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5735);

        $r16 = virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r2);

        varReplacer5736 = "--\r\n";

        virtualinvoke $r16.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>(varReplacer5736);

        virtualinvoke $r8.<com.mob.tools.network.MultiPart: com.mob.tools.network.MultiPart append(com.mob.tools.network.HTTPPart)>($r12);

        return $r8;
    }

    private com.mob.tools.network.HTTPPart getTextPostHTTPPart(java.net.HttpURLConnection, java.lang.String, java.util.ArrayList) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2, varReplacer5747, varReplacer5748;
        java.util.ArrayList $r3;
        com.mob.tools.network.StringPart $r4;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.net.HttpURLConnection;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.util.ArrayList;

        varReplacer5747 = "Content-Type";

        varReplacer5748 = "application/x-www-form-urlencoded";

        virtualinvoke $r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer5747, varReplacer5748);

        $r4 = new com.mob.tools.network.StringPart;

        specialinvoke $r4.<com.mob.tools.network.StringPart: void <init>()>();

        if $r3 == null goto label1;

        $r2 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.lang.String kvPairsToUrl(java.util.ArrayList)>($r3);

        virtualinvoke $r4.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r2);

     label1:
        return $r4;
    }

    private void httpPatchImpl(java.lang.String, java.util.ArrayList, com.mob.tools.network.KVPair, long, java.util.ArrayList, com.mob.tools.network.OnReadListener, com.mob.tools.network.HttpResponseCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.util.ArrayList $r1, $r3;
        com.mob.tools.network.KVPair $r2, $r22;
        long $l0, $l1, $l3;
        com.mob.tools.network.OnReadListener $r4;
        com.mob.tools.network.HttpResponseCallback $r5;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r6;
        org.apache.http.HttpVersion $r7;
        org.apache.http.entity.InputStreamEntity $r8, r36;
        com.mob.tools.network.FilePart $r9, r35;
        org.apache.http.params.BasicHttpParams $r10, r37;
        com.mob.tools.network.HttpPatch $r11, r34;
        org.apache.http.conn.scheme.SchemeRegistry $r12, r39;
        com.mob.tools.network.SSLSocketFactoryEx $r13, r38;
        java.lang.Throwable $r14, $r32;
        java.lang.String $r15, $r18, $r23;
        com.mob.tools.log.NLog $r16;
        java.lang.StringBuilder $r17, r33;
        java.lang.Object[] $r19;
        int $i2;
        java.util.Iterator $r20;
        boolean $z0;
        java.lang.Object $r21;
        java.io.InputStream $r24;
        java.security.KeyStore $r25;
        org.apache.http.conn.ssl.X509HostnameVerifier $r26;
        org.apache.http.conn.scheme.PlainSocketFactory $r27;
        org.apache.http.impl.client.DefaultHttpClient $r28, r42;
        org.apache.http.HttpResponse $r29;
        com.mob.tools.network.HttpConnectionImpl $r30, r43;
        org.apache.http.conn.ClientConnectionManager $r31;
        org.apache.http.conn.scheme.Scheme r40;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r41;
        org.apache.http.HttpEntity r44;
        org.apache.http.params.HttpParams r45;
        org.apache.http.conn.scheme.SocketFactory r46;
        org.apache.http.client.methods.HttpUriRequest r47;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r15 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: com.mob.tools.network.KVPair;

        $l0 := @parameter3: long;

        $r3 := @parameter4: java.util.ArrayList;

        $r4 := @parameter5: com.mob.tools.network.OnReadListener;

        $r5 := @parameter6: com.mob.tools.network.HttpResponseCallback;

        $r6 := @parameter7: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r16 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("httpPatch: ");

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[0];

        virtualinvoke $r16.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r18, $r19);

        if $r1 == null goto label01;

        $r18 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.lang.String kvPairsToUrl(java.util.ArrayList)>($r1);

        $i2 = virtualinvoke $r18.<java.lang.String: int length()>();

        if $i2 <= 0 goto label01;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        r34 = new com.mob.tools.network.HttpPatch;

        $r11 = r34;

        specialinvoke r34.<com.mob.tools.network.HttpPatch: void <init>(java.lang.String)>($r15);

        if $r3 == null goto label03;

        $r20 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        $r22 = (com.mob.tools.network.KVPair) $r21;

        $r18 = $r22.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r21 = $r22.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r23 = (java.lang.String) $r21;

        virtualinvoke $r11.<com.mob.tools.network.HttpPatch: void setHeader(java.lang.String,java.lang.String)>($r18, $r23);

        goto label02;

     label03:
        r35 = new com.mob.tools.network.FilePart;

        $r9 = r35;

        specialinvoke r35.<com.mob.tools.network.FilePart: void <init>()>();

        virtualinvoke $r9.<com.mob.tools.network.FilePart: void setOnReadListener(com.mob.tools.network.OnReadListener)>($r4);

        $r21 = $r2.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r18 = (java.lang.String) $r21;

        virtualinvoke $r9.<com.mob.tools.network.FilePart: void setFile(java.lang.String)>($r18);

        virtualinvoke $r9.<com.mob.tools.network.FilePart: void setOffset(long)>($l0);

        $r24 = virtualinvoke $r9.<com.mob.tools.network.FilePart: java.io.InputStream toInputStream()>();

        $l3 = virtualinvoke $r9.<com.mob.tools.network.FilePart: long length()>();

        $l0 = $l3 - $l0;

        r36 = new org.apache.http.entity.InputStreamEntity;

        $r8 = r36;

        specialinvoke r36.<org.apache.http.entity.InputStreamEntity: void <init>(java.io.InputStream,long)>($r24, $l0);

        virtualinvoke $r8.<org.apache.http.entity.InputStreamEntity: void setContentEncoding(java.lang.String)>("application/offset+octet-stream");

        r44 = (org.apache.http.HttpEntity) $r8;

        virtualinvoke $r11.<com.mob.tools.network.HttpPatch: void setEntity(org.apache.http.HttpEntity)>(r44);

        r37 = new org.apache.http.params.BasicHttpParams;

        $r10 = r37;

        specialinvoke r37.<org.apache.http.params.BasicHttpParams: void <init>()>();

        if $r6 != null goto label14;

        $i2 = <com.mob.tools.network.NetworkHelper: int connectionTimeout>;

     label04:
        if $i2 <= 0 goto label05;

        r45 = (org.apache.http.params.HttpParams) $r10;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>(r45, $i2);

     label05:
        if $r6 != null goto label15;

        $i2 = <com.mob.tools.network.NetworkHelper: int readTimout>;

     label06:
        if $i2 <= 0 goto label07;

        r45 = (org.apache.http.params.HttpParams) $r10;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>(r45, $i2);

     label07:
        r45 = (org.apache.http.params.HttpParams) $r10;

        virtualinvoke $r11.<com.mob.tools.network.HttpPatch: void setParams(org.apache.http.params.HttpParams)>(r45);

        $z0 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("https://");

        if $z0 == 0 goto label16;

        $r15 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r15);

        virtualinvoke $r25.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);

        r38 = new com.mob.tools.network.SSLSocketFactoryEx;

        $r13 = r38;

        specialinvoke r38.<com.mob.tools.network.SSLSocketFactoryEx: void <init>(java.security.KeyStore)>($r25);

        $r26 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER>;

        virtualinvoke $r13.<com.mob.tools.network.SSLSocketFactoryEx: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>($r26);

        r37 = new org.apache.http.params.BasicHttpParams;

        $r10 = r37;

        specialinvoke r37.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r7 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        r45 = (org.apache.http.params.HttpParams) $r10;

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>(r45, $r7);

        r45 = (org.apache.http.params.HttpParams) $r10;

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>(r45, "UTF-8");

        r39 = new org.apache.http.conn.scheme.SchemeRegistry;

        $r12 = r39;

        specialinvoke r39.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r27 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        r40 = new org.apache.http.conn.scheme.Scheme;

        r46 = (org.apache.http.conn.scheme.SocketFactory) $r27;

        specialinvoke r40.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", r46, 80);

        virtualinvoke $r12.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>(r40);

        r40 = new org.apache.http.conn.scheme.Scheme;

        specialinvoke r40.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r13, 443);

        virtualinvoke $r12.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>(r40);

        r41 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r45 = (org.apache.http.params.HttpParams) $r10;

        specialinvoke r41.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>(r45, $r12);

        r42 = new org.apache.http.impl.client.DefaultHttpClient;

        $r28 = r42;

        r45 = (org.apache.http.params.HttpParams) $r10;

        specialinvoke r42.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(r41, r45);

     label08:
        r47 = (org.apache.http.client.methods.HttpUriRequest) $r11;

        $r29 = interfaceinvoke $r28.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r47);

        if $r5 == null goto label20;

     label09:
        r43 = new com.mob.tools.network.HttpConnectionImpl;

     label10:
        $r30 = r43;

     label11:
        specialinvoke r43.<com.mob.tools.network.HttpConnectionImpl: void <init>(org.apache.http.HttpResponse)>($r29);

        interfaceinvoke $r5.<com.mob.tools.network.HttpResponseCallback: void onResponse(com.mob.tools.network.HttpConnection)>($r30);

     label12:
        $r31 = interfaceinvoke $r28.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r31.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

     label13:
        $r16 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 - $l1;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = newarray (java.lang.Object)[0];

        virtualinvoke $r16.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r15, $r19);

        return;

     label14:
        $i2 = $r6.<com.mob.tools.network.NetworkHelper$NetworkTimeOut: int connectionTimeout>;

        goto label04;

     label15:
        $i2 = $r6.<com.mob.tools.network.NetworkHelper$NetworkTimeOut: int readTimout>;

        goto label06;

     label16:
        r42 = new org.apache.http.impl.client.DefaultHttpClient;

        $r28 = r42;

        specialinvoke r42.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        goto label08;

     label17:
        $r14 := @caughtexception;

     label18:
        throw $r14;

     label19:
        $r32 := @caughtexception;

        $r31 = interfaceinvoke $r28.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r31.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        throw $r32;

     label20:
        $r31 = interfaceinvoke $r28.<org.apache.http.client.HttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r31.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        goto label13;

        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label18 to label19 with label19;
    }

    private java.lang.String kvPairsToUrl(java.util.ArrayList) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.util.ArrayList $r1;
        java.lang.StringBuilder $r2, $r8;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.mob.tools.network.KVPair $r5;
        java.lang.String $r6, $r7, varReplacer2462, varReplacer2463;
        int $i0, varReplacer2461, varReplacer2464;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.util.ArrayList;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.mob.tools.network.KVPair) $r4;

        $r6 = $r5.<com.mob.tools.network.KVPair: java.lang.String name>;

        varReplacer2463 = "utf-8";

        $r6 = staticinvoke <com.mob.tools.utils.Data: java.lang.String urlEncode(java.lang.String,java.lang.String)>($r6, varReplacer2463);

        $r4 = $r5.<com.mob.tools.network.KVPair: java.lang.Object value>;

        if $r4 == null goto label4;

        $r4 = $r5.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r7 = (java.lang.String) $r4;

        varReplacer2462 = "utf-8";

        $r7 = staticinvoke <com.mob.tools.utils.Data: java.lang.String urlEncode(java.lang.String,java.lang.String)>($r7, varReplacer2462);

     label2:
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label3;

        varReplacer2461 = 38;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer2461);

     label3:
        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer2464 = 61;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer2464);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label1;

     label4:
        $r7 = "";

        goto label2;

     label5:
        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String downloadCache(android.content.Context, java.lang.String, java.lang.String, boolean, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r3, $r10, $r14, $r22;
        boolean $z0, $z1;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r4;
        java.io.BufferedReader $r5;
        byte[] $r6;
        java.util.HashMap $r7;
        java.io.FileOutputStream $r8;
        java.io.InputStreamReader $r9;
        java.lang.StringBuilder $r11;
        java.lang.Throwable $r12;
        long $l0, $l1;
        com.mob.tools.log.NLog $r13;
        java.lang.Object[] $r15;
        java.io.File $r16, $r24;
        java.net.HttpURLConnection $r17;
        int $i2, $i3, $i4;
        java.util.Map $r18;
        java.lang.Object $r19;
        java.util.List $r20;
        java.lang.String[] $r21, $r23;
        java.io.InputStream $r25;
        java.nio.charset.Charset $r26;
        java.lang.Integer $r27;
        com.mob.tools.utils.Hashon $r28;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $r4 := @parameter4: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r13 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("downloading: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke $r13.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r14, $r15);

        if $z0 == 0 goto label01;

        $r14 = staticinvoke <com.mob.tools.utils.R: java.lang.String getCachePath(android.content.Context,java.lang.String)>($r1, $r3);

        $r10 = staticinvoke <com.mob.tools.utils.Data: java.lang.String MD5(java.lang.String)>($r2);

        $r16 = new java.io.File;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r14, $r10);

        if $z0 == 0 goto label01;

        $z1 = virtualinvoke $r16.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label01;

        $r13 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 - $l0;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke $r13.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r2, $r15);

        $r2 = virtualinvoke $r16.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;

     label01:
        $r17 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r2, $r4);

        virtualinvoke $r17.<java.net.HttpURLConnection: void connect()>();

        $i2 = virtualinvoke $r17.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i2 != 200 goto label21;

        $r14 = null;

        $r18 = virtualinvoke $r17.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        if $r18 == null goto label04;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>("Content-Disposition");

        $r20 = (java.util.List) $r19;

        if $r20 == null goto label04;

        $i2 = interfaceinvoke $r20.<java.util.List: int size()>();

        if $i2 <= 0 goto label04;

        $r19 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (java.lang.String) $r19;

        $r21 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        $i2 = lengthof $r21;

        $i3 = 0;

     label02:
        if $i3 >= $i2 goto label04;

        $r10 = $r21[$i3];

        $r22 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke $r22.<java.lang.String: boolean startsWith(java.lang.String)>("filename");

        if $z1 == 0 goto label03;

        $r23 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $r14 = $r23[1];

        $z1 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z1 == 0 goto label03;

        $z1 = virtualinvoke $r14.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z1 == 0 goto label03;

        $i4 = virtualinvoke $r14.<java.lang.String: int length()>();

        $i4 = $i4 + -1;

        $r14 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int,int)>(1, $i4);

     label03:
        $i3 = $i3 + 1;

        goto label02;

     label04:
        if $r14 != null goto label07;

        $r10 = staticinvoke <com.mob.tools.utils.Data: java.lang.String MD5(java.lang.String)>($r2);

        $r14 = $r10;

        if $r18 == null goto label07;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>("Content-Type");

        $r20 = (java.util.List) $r19;

        if $r20 == null goto label07;

        $i2 = interfaceinvoke $r20.<java.util.List: int size()>();

        if $i2 <= 0 goto label07;

        $r19 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(0);

        $r22 = (java.lang.String) $r19;

        if $r22 != null goto label08;

        $r22 = "";

     label05:
        $z1 = virtualinvoke $r22.<java.lang.String: boolean startsWith(java.lang.String)>("image/");

        if $z1 == 0 goto label09;

        $r2 = "image/";

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r2 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int)>($i2);

        $r14 = $r2;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = "jpeg";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z1 == 0 goto label06;

        $r14 = "jpg";

     label06:
        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r2 = staticinvoke <com.mob.tools.utils.R: java.lang.String getCachePath(android.content.Context,java.lang.String)>($r1, $r3);

        $r16 = new java.io.File;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r2, $r14);

        if $z0 == 0 goto label11;

        $z0 = virtualinvoke $r16.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label11;

        virtualinvoke $r17.<java.net.HttpURLConnection: void disconnect()>();

        $r13 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 - $l0;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke $r13.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r2, $r15);

        $r2 = virtualinvoke $r16.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;

     label08:
        $r22 = virtualinvoke $r22.<java.lang.String: java.lang.String trim()>();

        goto label05;

     label09:
        $i2 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(int)>(47);

        $r22 = null;

        if $i2 <= 0 goto label10;

        $i2 = $i2 + 1;

        $r22 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i2);

     label10:
        if $r22 == null goto label07;

        $i2 = virtualinvoke $r22.<java.lang.String: int length()>();

        if $i2 <= 0 goto label07;

        $i2 = virtualinvoke $r22.<java.lang.String: int lastIndexOf(int)>(46);

        if $i2 <= 0 goto label07;

        $i3 = virtualinvoke $r22.<java.lang.String: int length()>();

        $i3 = $i3 - $i2;

        if $i3 >= 10 goto label07;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r2 = virtualinvoke $r22.<java.lang.String: java.lang.String substring(int)>($i2);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label11:
        $r24 = virtualinvoke $r16.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r24.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label12;

        $r24 = virtualinvoke $r16.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r24.<java.io.File: boolean mkdirs()>();

     label12:
        $z0 = virtualinvoke $r16.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label13;

        virtualinvoke $r16.<java.io.File: boolean delete()>();

     label13:
        $r25 = virtualinvoke $r17.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r8 = new java.io.FileOutputStream;

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.io.File)>($r16);

        $r6 = newarray (byte)[1024];

        $i2 = virtualinvoke $r25.<java.io.InputStream: int read(byte[])>($r6);

     label14:
        if $i2 <= 0 goto label17;

     label15:
        virtualinvoke $r8.<java.io.FileOutputStream: void write(byte[],int,int)>($r6, 0, $i2);

        $i2 = virtualinvoke $r25.<java.io.InputStream: int read(byte[])>($r6);

     label16:
        goto label14;

     label17:
        virtualinvoke $r8.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r25.<java.io.InputStream: void close()>();

        virtualinvoke $r8.<java.io.FileOutputStream: void close()>();

     label18:
        virtualinvoke $r17.<java.net.HttpURLConnection: void disconnect()>();

        $r13 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 - $l0;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke $r13.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r2, $r15);

        $r2 = virtualinvoke $r16.<java.io.File: java.lang.String getAbsolutePath()>();

        return $r2;

     label19:
        $r12 := @caughtexception;

        $z0 = virtualinvoke $r16.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label20;

        virtualinvoke $r16.<java.io.File: boolean delete()>();

     label20:
        throw $r12;

     label21:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r9 = new java.io.InputStreamReader;

        $r25 = virtualinvoke $r17.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r26 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("utf-8");

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r25, $r26);

        $r5 = new java.io.BufferedReader;

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

        $r2 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label22:
        if $r2 == null goto label24;

        $i3 = virtualinvoke $r11.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label23;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label23:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label22;

     label24:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

        virtualinvoke $r17.<java.net.HttpURLConnection: void disconnect()>();

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("error", $r2);

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("status", $r27);

        $r12 = new java.lang.Throwable;

        $r28 = new com.mob.tools.utils.Hashon;

        specialinvoke $r28.<com.mob.tools.utils.Hashon: void <init>()>();

        $r2 = virtualinvoke $r28.<com.mob.tools.utils.Hashon: java.lang.String fromHashMap(java.util.HashMap)>($r7);

        specialinvoke $r12.<java.lang.Throwable: void <init>(java.lang.String)>($r2);

        throw $r12;

        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
    }

    public void getHttpPostResponse(java.lang.String, java.util.ArrayList, com.mob.tools.network.KVPair, java.util.ArrayList, com.mob.tools.network.HttpResponseCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, $r12;
        java.util.ArrayList $r2, $r4, $r8;
        com.mob.tools.network.KVPair $r3;
        com.mob.tools.network.HttpResponseCallback $r5;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r6;
        byte[] $r7;
        java.lang.Throwable $r9, $r22;
        long $l0, $l2;
        com.mob.tools.log.NLog $r10;
        java.lang.StringBuilder $r11;
        java.lang.Object[] $r13;
        java.net.HttpURLConnection $r14;
        java.lang.Object $r15;
        java.io.File $r16;
        boolean $z0;
        com.mob.tools.network.HTTPPart $r17;
        java.util.Iterator $r18;
        java.io.OutputStream $r19;
        java.io.InputStream $r20;
        int $i1;
        com.mob.tools.network.HttpConnectionImpl23 $r21;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: com.mob.tools.network.KVPair;

        $r4 := @parameter3: java.util.ArrayList;

        $r5 := @parameter4: com.mob.tools.network.HttpResponseCallback;

        $r6 := @parameter5: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r10 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("httpPost: ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r12, $r13);

        $r14 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r6);

        virtualinvoke $r14.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r14.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0);

        if $r3 == null goto label03;

        $r15 = $r3.<com.mob.tools.network.KVPair: java.lang.Object value>;

        if $r15 == null goto label03;

        $r16 = new java.io.File;

        $r15 = $r3.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r12 = (java.lang.String) $r15;

        specialinvoke $r16.<java.io.File: void <init>(java.lang.String)>($r12);

        $z0 = virtualinvoke $r16.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label03;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r8.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $r17 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: com.mob.tools.network.HTTPPart getFilePostHTTPPart(java.net.HttpURLConnection,java.lang.String,java.util.ArrayList,java.util.ArrayList)>($r14, $r1, $r2, $r8);

     label01:
        if $r4 == null goto label04;

        $r18 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r15 = interfaceinvoke $r18.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.mob.tools.network.KVPair) $r15;

        $r1 = $r3.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r15 = $r3.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r12 = (java.lang.String) $r15;

        virtualinvoke $r14.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r12);

        goto label02;

     label03:
        $r17 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: com.mob.tools.network.HTTPPart getTextPostHTTPPart(java.net.HttpURLConnection,java.lang.String,java.util.ArrayList)>($r14, $r1, $r2);

        goto label01;

     label04:
        virtualinvoke $r14.<java.net.HttpURLConnection: void connect()>();

        $r19 = virtualinvoke $r14.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r20 = virtualinvoke $r17.<com.mob.tools.network.HTTPPart: java.io.InputStream toInputStream()>();

        $r7 = newarray (byte)[65536];

        $i1 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>($r7);

     label05:
        if $i1 <= 0 goto label06;

        virtualinvoke $r19.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i1);

        $i1 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>($r7);

        goto label05;

     label06:
        virtualinvoke $r19.<java.io.OutputStream: void flush()>();

        virtualinvoke $r20.<java.io.InputStream: void close()>();

        virtualinvoke $r19.<java.io.OutputStream: void close()>();

        if $r5 == null goto label13;

     label07:
        $r21 = new com.mob.tools.network.HttpConnectionImpl23;

        specialinvoke $r21.<com.mob.tools.network.HttpConnectionImpl23: void <init>(java.net.HttpURLConnection)>($r14);

        interfaceinvoke $r5.<com.mob.tools.network.HttpResponseCallback: void onResponse(com.mob.tools.network.HttpConnection)>($r21);

     label08:
        virtualinvoke $r14.<java.net.HttpURLConnection: void disconnect()>();

     label09:
        $r10 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l2 - $l0;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r1, $r13);

        return;

     label10:
        $r9 := @caughtexception;

     label11:
        throw $r9;

     label12:
        $r22 := @caughtexception;

        virtualinvoke $r14.<java.net.HttpURLConnection: void disconnect()>();

        throw $r22;

     label13:
        virtualinvoke $r14.<java.net.HttpURLConnection: void disconnect()>();

        goto label09;

        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label12;
    }

    public java.lang.String httpGet(java.lang.String, java.util.ArrayList, java.util.ArrayList, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.util.ArrayList $r1, $r2;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r3;
        java.util.HashMap $r4;
        java.lang.String $r5, $r8, varReplacer2446, varReplacer2448, varReplacer2449, varReplacer2450, varReplacer2451, varReplacer2452, varReplacer2454;
        long $l0, $l2;
        com.mob.tools.log.NLog $r6;
        java.lang.StringBuilder $r7;
        java.lang.Object[] $r9;
        int $i1, $i3, varReplacer2447, varReplacer2453;
        java.net.HttpURLConnection $r10;
        java.util.Iterator $r11;
        boolean $z0;
        java.lang.Object $r12;
        com.mob.tools.network.KVPair $r13;
        java.io.InputStreamReader $r14;
        java.io.InputStream $r15;
        java.nio.charset.Charset $r16;
        java.io.BufferedReader $r17;
        java.lang.Integer $r18;
        java.lang.Throwable $r19;
        com.mob.tools.utils.Hashon $r20;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r5 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: java.util.ArrayList;

        $r3 := @parameter3: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer2449 = "httpGet: ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2449);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        virtualinvoke $r6.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r8, $r9);

        if $r1 == null goto label01;

        $r8 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.lang.String kvPairsToUrl(java.util.ArrayList)>($r1);

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 <= 0 goto label01;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer2452 = "?";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2452);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r10 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r5, $r3);

        if $r2 == null goto label03;

        $r11 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (com.mob.tools.network.KVPair) $r12;

        $r5 = $r13.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r12 = $r13.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r8 = (java.lang.String) $r12;

        virtualinvoke $r10.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r5, $r8);

        goto label02;

     label03:
        virtualinvoke $r10.<java.net.HttpURLConnection: void connect()>();

        $i1 = virtualinvoke $r10.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i1 != 200 goto label07;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r14 = new java.io.InputStreamReader;

        $r15 = virtualinvoke $r10.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        varReplacer2454 = "utf-8";

        $r16 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(varReplacer2454);

        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r15, $r16);

        $r17 = new java.io.BufferedReader;

        specialinvoke $r17.<java.io.BufferedReader: void <init>(java.io.Reader)>($r14);

        $r5 = virtualinvoke $r17.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        if $r5 == null goto label06;

        $i1 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label05;

        varReplacer2453 = 10;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer2453);

     label05:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r17.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label04;

     label06:
        virtualinvoke $r17.<java.io.BufferedReader: void close()>();

        virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>();

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer2450 = "use time: ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2450);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l2 - $l0;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[0];

        virtualinvoke $r6.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r8, $r9);

        return $r5;

     label07:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r14 = new java.io.InputStreamReader;

        $r15 = virtualinvoke $r10.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        varReplacer2451 = "utf-8";

        $r16 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(varReplacer2451);

        specialinvoke $r14.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r15, $r16);

        $r17 = new java.io.BufferedReader;

        specialinvoke $r17.<java.io.BufferedReader: void <init>(java.io.Reader)>($r14);

        $r5 = virtualinvoke $r17.<java.io.BufferedReader: java.lang.String readLine()>();

     label08:
        if $r5 == null goto label10;

        $i3 = virtualinvoke $r7.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label09;

        varReplacer2447 = 10;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer2447);

     label09:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r17.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label08;

     label10:
        virtualinvoke $r17.<java.io.BufferedReader: void close()>();

        virtualinvoke $r10.<java.net.HttpURLConnection: void disconnect()>();

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2448 = "error";

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer2448, $r5);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        varReplacer2446 = "status";

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer2446, $r18);

        $r19 = new java.lang.Throwable;

        $r20 = new com.mob.tools.utils.Hashon;

        specialinvoke $r20.<com.mob.tools.utils.Hashon: void <init>()>();

        $r5 = virtualinvoke $r20.<com.mob.tools.utils.Hashon: java.lang.String fromHashMap(java.util.HashMap)>($r4);

        specialinvoke $r19.<java.lang.Throwable: void <init>(java.lang.String)>($r5);

        throw $r19;
    }

    public java.util.ArrayList httpHead(java.lang.String, java.util.ArrayList, com.mob.tools.network.KVPair, java.util.ArrayList, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.util.ArrayList $r1, $r3;
        com.mob.tools.network.KVPair $r2;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r4;
        java.lang.String[] $r5;
        java.lang.String $r6, $r9;
        long $l0, $l3;
        com.mob.tools.log.NLog $r7;
        java.lang.StringBuilder $r8;
        java.lang.Object[] $r10;
        int $i1, $i2;
        java.net.HttpURLConnection $r11;
        java.util.Iterator $r12;
        boolean $z0;
        java.lang.Object $r13;
        java.util.Map $r14;
        java.util.Set $r15;
        java.util.Map$Entry $r16;
        java.util.List $r17;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r6 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: com.mob.tools.network.KVPair;

        $r3 := @parameter3: java.util.ArrayList;

        $r4 := @parameter4: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("httpHead: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        virtualinvoke $r7.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r9, $r10);

        if $r1 == null goto label1;

        $r9 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.lang.String kvPairsToUrl(java.util.ArrayList)>($r1);

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i1 <= 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r11 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r6, $r4);

        virtualinvoke $r11.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD");

        if $r3 == null goto label3;

        $r12 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (com.mob.tools.network.KVPair) $r13;

        $r6 = $r2.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r13 = $r2.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r9 = (java.lang.String) $r13;

        virtualinvoke $r11.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r6, $r9);

        goto label2;

     label3:
        virtualinvoke $r11.<java.net.HttpURLConnection: void connect()>();

        $r14 = virtualinvoke $r11.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        if $r14 == null goto label8;

        $r15 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r13;

        $r13 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.util.List) $r13;

        if $r17 != null goto label5;

        $r2 = new com.mob.tools.network.KVPair;

        $r13 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r13;

        $r5 = newarray (java.lang.String)[0];

        specialinvoke $r2.<com.mob.tools.network.KVPair: void <init>(java.lang.String,java.lang.Object)>($r6, $r5);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label4;

     label5:
        $i1 = interfaceinvoke $r17.<java.util.List: int size()>();

        $r5 = newarray (java.lang.String)[$i1];

        $i1 = 0;

     label6:
        $i2 = lengthof $r5;

        if $i1 >= $i2 goto label7;

        $r13 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>($i1);

        $r6 = (java.lang.String) $r13;

        $r5[$i1] = $r6;

        $i1 = $i1 + 1;

        goto label6;

     label7:
        $r2 = new com.mob.tools.network.KVPair;

        $r13 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r13;

        specialinvoke $r2.<com.mob.tools.network.KVPair: void <init>(java.lang.String,java.lang.Object)>($r6, $r5);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        goto label4;

     label8:
        virtualinvoke $r11.<java.net.HttpURLConnection: void disconnect()>();

        $r7 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l3 - $l0;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        virtualinvoke $r7.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r6, $r10);

        return $r1;
    }

    public void httpPatch(java.lang.String, java.util.ArrayList, com.mob.tools.network.KVPair, long, java.util.ArrayList, com.mob.tools.network.OnReadListener, com.mob.tools.network.HttpResponseCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2, $r4;
        com.mob.tools.network.KVPair $r3;
        long $l0;
        com.mob.tools.network.OnReadListener $r5;
        com.mob.tools.network.HttpResponseCallback $r6;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r7;
        int $i1;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: com.mob.tools.network.KVPair;

        $l0 := @parameter3: long;

        $r4 := @parameter4: java.util.ArrayList;

        $r5 := @parameter5: com.mob.tools.network.OnReadListener;

        $r6 := @parameter6: com.mob.tools.network.HttpResponseCallback;

        $r7 := @parameter7: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $i1 = <android.os.Build$VERSION: int SDK_INT>;

        if $i1 < 23 goto label1;

        virtualinvoke $r0.<com.mob.tools.network.NetworkHelper: void httpPatchImpl23(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,long,java.util.ArrayList,com.mob.tools.network.OnReadListener,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r2, $r3, $l0, $r4, $r5, $r6, $r7);

        return;

     label1:
        specialinvoke $r0.<com.mob.tools.network.NetworkHelper: void httpPatchImpl(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,long,java.util.ArrayList,com.mob.tools.network.OnReadListener,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r2, $r3, $l0, $r4, $r5, $r6, $r7);

        return;
    }

    public void httpPatchImpl23(java.lang.String, java.util.ArrayList, com.mob.tools.network.KVPair, long, java.util.ArrayList, com.mob.tools.network.OnReadListener, com.mob.tools.network.HttpResponseCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.util.ArrayList $r1, $r3;
        com.mob.tools.network.KVPair $r2, $r18;
        long $l0, $l1;
        com.mob.tools.network.OnReadListener $r4;
        com.mob.tools.network.HttpResponseCallback $r5;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r6;
        byte[] $r7;
        com.mob.tools.network.FilePart $r8;
        java.lang.Throwable $r9, $r22;
        java.lang.String $r10, $r13;
        com.mob.tools.log.NLog $r11;
        java.lang.StringBuilder $r12;
        java.lang.Object[] $r14;
        int $i2;
        java.net.HttpURLConnection $r15;
        java.util.Iterator $r16;
        boolean $z0;
        java.lang.Object $r17;
        java.io.OutputStream $r19;
        java.io.InputStream $r20;
        com.mob.tools.network.HttpConnectionImpl23 $r21;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r10 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: com.mob.tools.network.KVPair;

        $l0 := @parameter3: long;

        $r3 := @parameter4: java.util.ArrayList;

        $r4 := @parameter5: com.mob.tools.network.OnReadListener;

        $r5 := @parameter6: com.mob.tools.network.HttpResponseCallback;

        $r6 := @parameter7: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r11 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("httpPatch: ");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke $r11.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r13, $r14);

        if $r1 == null goto label01;

        $r13 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.lang.String kvPairsToUrl(java.util.ArrayList)>($r1);

        $i2 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i2 <= 0 goto label01;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r15 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r10, $r6);

        virtualinvoke $r15.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r15.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0);

        virtualinvoke $r15.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("PATCH");

        virtualinvoke $r15.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/offset+octet-stream");

        if $r3 == null goto label03;

        $r16 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (com.mob.tools.network.KVPair) $r17;

        $r10 = $r18.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r17 = $r18.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r13 = (java.lang.String) $r17;

        virtualinvoke $r15.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r10, $r13);

        goto label02;

     label03:
        virtualinvoke $r15.<java.net.HttpURLConnection: void connect()>();

        $r19 = virtualinvoke $r15.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r8 = new com.mob.tools.network.FilePart;

        specialinvoke $r8.<com.mob.tools.network.FilePart: void <init>()>();

        virtualinvoke $r8.<com.mob.tools.network.FilePart: void setOnReadListener(com.mob.tools.network.OnReadListener)>($r4);

        $r17 = $r2.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r10 = (java.lang.String) $r17;

        virtualinvoke $r8.<com.mob.tools.network.FilePart: void setFile(java.lang.String)>($r10);

        virtualinvoke $r8.<com.mob.tools.network.FilePart: void setOffset(long)>($l0);

        $r20 = virtualinvoke $r8.<com.mob.tools.network.FilePart: java.io.InputStream toInputStream()>();

        $r7 = newarray (byte)[65536];

        $i2 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>($r7);

     label04:
        if $i2 <= 0 goto label05;

        virtualinvoke $r19.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i2);

        $i2 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>($r7);

        goto label04;

     label05:
        virtualinvoke $r19.<java.io.OutputStream: void flush()>();

        virtualinvoke $r20.<java.io.InputStream: void close()>();

        virtualinvoke $r19.<java.io.OutputStream: void close()>();

        if $r5 == null goto label12;

     label06:
        $r21 = new com.mob.tools.network.HttpConnectionImpl23;

        specialinvoke $r21.<com.mob.tools.network.HttpConnectionImpl23: void <init>(java.net.HttpURLConnection)>($r15);

        interfaceinvoke $r5.<com.mob.tools.network.HttpResponseCallback: void onResponse(com.mob.tools.network.HttpConnection)>($r21);

     label07:
        virtualinvoke $r15.<java.net.HttpURLConnection: void disconnect()>();

     label08:
        $r11 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 - $l1;

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke $r11.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r10, $r14);

        return;

     label09:
        $r9 := @caughtexception;

     label10:
        throw $r9;

     label11:
        $r22 := @caughtexception;

        virtualinvoke $r15.<java.net.HttpURLConnection: void disconnect()>();

        throw $r22;

     label12:
        virtualinvoke $r15.<java.net.HttpURLConnection: void disconnect()>();

        goto label08;

        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public java.lang.String httpPost(java.lang.String, java.util.ArrayList, com.mob.tools.network.KVPair, java.util.ArrayList, int, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, $r9;
        java.util.ArrayList $r2, $r4, $r6;
        com.mob.tools.network.KVPair $r3;
        int $i0, varReplacer5707;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r5;
        java.lang.Object $r7;
        java.io.File $r8;
        boolean $z0;
        null_type varReplacer5706, varReplacer5708;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: com.mob.tools.network.KVPair;

        $r4 := @parameter3: java.util.ArrayList;

        $i0 := @parameter4: int;

        $r5 := @parameter5: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        goto label1;

     label1:
        varReplacer5706 = null;

        varReplacer5707 = 0;

        varReplacer5708 = null;

        $r1 = virtualinvoke $r0.<com.mob.tools.network.NetworkHelper: java.lang.String httpPostFiles(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r2, $r6, varReplacer5706, varReplacer5707, varReplacer5706);

        return $r1;
    }

    public java.lang.String httpPost(java.lang.String, java.util.ArrayList, com.mob.tools.network.KVPair, java.util.ArrayList, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2, $r4;
        com.mob.tools.network.KVPair $r3;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r5;
        null_type varReplacer5702, varReplacer5703, varReplacer5705;
        int varReplacer5704;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: com.mob.tools.network.KVPair;

        $r4 := @parameter3: java.util.ArrayList;

        $r5 := @parameter4: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        varReplacer5702 = null;

        varReplacer5703 = null;

        varReplacer5704 = 0;

        varReplacer5705 = null;

        $r1 = virtualinvoke $r0.<com.mob.tools.network.NetworkHelper: java.lang.String httpPost(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,int,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r2, varReplacer5702, varReplacer5702, varReplacer5704, varReplacer5702);

        return $r1;
    }

    public void httpPost(java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, int, com.mob.tools.network.HttpResponseCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, $r11, varReplacer5714, varReplacer5717;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0, $i2, varReplacer5713, varReplacer5715, varReplacer5718;
        com.mob.tools.network.HttpResponseCallback $r5;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r6;
        byte[] $r7;
        java.lang.Throwable $r8, $r22;
        long $l1, $l3;
        com.mob.tools.log.NLog $r9;
        java.lang.StringBuilder $r10;
        java.lang.Object[] $r12;
        java.net.HttpURLConnection $r13;
        com.mob.tools.network.HTTPPart $r14, $r18;
        java.util.Iterator $r15;
        boolean $z0;
        java.lang.Object $r16;
        com.mob.tools.network.KVPair $r17;
        java.io.OutputStream $r19;
        java.io.InputStream $r20;
        com.mob.tools.network.HttpConnectionImpl23 $r21;
        null_type varReplacer5716;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.ArrayList;

        $r4 := @parameter3: java.util.ArrayList;

        $i0 := @parameter4: int;

        $r5 := @parameter5: com.mob.tools.network.HttpResponseCallback;

        $r6 := @parameter6: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer5717 = "httpPost: ";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5717);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r11, $r12);

        varReplacer5716 = null;

        $r13 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, varReplacer5716);

        varReplacer5718 = 1;

        virtualinvoke $r13.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer5718);

        if $r3 == null goto label02;

        $i2 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i2 <= 0 goto label02;

        $r14 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: com.mob.tools.network.HTTPPart getFilePostHTTPPart(java.net.HttpURLConnection,java.lang.String,java.util.ArrayList,java.util.ArrayList)>($r13, $r1, $r2, $r3);

        varReplacer5713 = 0;

        virtualinvoke $r13.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(varReplacer5713);

     label01:
        goto label03;

     label02:
        $r18 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: com.mob.tools.network.HTTPPart getTextPostHTTPPart(java.net.HttpURLConnection,java.lang.String,java.util.ArrayList)>($r13, $r1, $r2);

        $r14 = $r18;

        $l3 = virtualinvoke $r18.<com.mob.tools.network.HTTPPart: long length()>();

        $i0 = (int) $l3;

        virtualinvoke $r13.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

        goto label01;

     label03:
        virtualinvoke $r13.<java.net.HttpURLConnection: void connect()>();

        $r19 = virtualinvoke $r13.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r20 = virtualinvoke $r14.<com.mob.tools.network.HTTPPart: java.io.InputStream toInputStream()>();

        $r7 = newarray (byte)[65536];

        $i0 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>($r7);

     label04:
        if $i0 <= 0 goto label05;

        varReplacer5715 = 0;

        virtualinvoke $r19.<java.io.OutputStream: void write(byte[],int,int)>($r7, varReplacer5715, $i0);

        $i0 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>($r7);

        goto label04;

     label05:
        virtualinvoke $r19.<java.io.OutputStream: void flush()>();

        virtualinvoke $r20.<java.io.InputStream: void close()>();

        virtualinvoke $r19.<java.io.OutputStream: void close()>();

        if $r5 == null goto label12;

     label06:
        $r21 = new com.mob.tools.network.HttpConnectionImpl23;

        specialinvoke $r21.<com.mob.tools.network.HttpConnectionImpl23: void <init>(java.net.HttpURLConnection)>($r13);

        interfaceinvoke $r5.<com.mob.tools.network.HttpResponseCallback: void onResponse(com.mob.tools.network.HttpConnection)>($r21);

     label07:
        virtualinvoke $r13.<java.net.HttpURLConnection: void disconnect()>();

     label08:
        $r9 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer5714 = "use time: ";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5714);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = $l3 - $l1;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r1, $r12);

        return;

     label09:
        $r8 := @caughtexception;

     label10:
        throw $r8;

     label11:
        $r22 := @caughtexception;

        virtualinvoke $r13.<java.net.HttpURLConnection: void disconnect()>();

        throw $r22;

     label12:
        virtualinvoke $r13.<java.net.HttpURLConnection: void disconnect()>();

        goto label08;

        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public void httpPost(java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, com.mob.tools.network.HttpResponseCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2, $r3, $r4;
        com.mob.tools.network.HttpResponseCallback $r5;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r6;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.ArrayList;

        $r4 := @parameter3: java.util.ArrayList;

        $r5 := @parameter4: com.mob.tools.network.HttpResponseCallback;

        $r6 := @parameter5: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        virtualinvoke $r0.<com.mob.tools.network.NetworkHelper: void httpPost(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r2, $r3, $r4, 0, $r5, $r6);

        return;
    }

    public java.lang.String httpPostFiles(java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, int, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, varReplacer5712;
        java.util.ArrayList $r2, $r3, $r4;
        int $i0, varReplacer5710;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r5;
        com.mob.tools.network.NetworkHelper$1 $r6;
        java.util.HashMap $r7;
        java.lang.Object $r8;
        null_type varReplacer5709, varReplacer5711;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.ArrayList;

        $r4 := @parameter3: java.util.ArrayList;

        $i0 := @parameter4: int;

        $r5 := @parameter5: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r6 = new com.mob.tools.network.NetworkHelper$1;

        specialinvoke $r6.<com.mob.tools.network.NetworkHelper$1: void <init>(com.mob.tools.network.NetworkHelper,java.util.HashMap)>($r0, $r7);

        varReplacer5709 = null;

        varReplacer5710 = 0;

        varReplacer5711 = null;

        virtualinvoke $r0.<com.mob.tools.network.NetworkHelper: void httpPost(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r2, $r3, varReplacer5709, varReplacer5710, $r6, varReplacer5709);

        varReplacer5712 = "resp";

        $r8 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(varReplacer5712);

        $r1 = (java.lang.String) $r8;

        return $r1;
    }

    public java.lang.String httpPostFiles(java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1;
        java.util.ArrayList $r2, $r3, $r4;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r5;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.ArrayList;

        $r4 := @parameter3: java.util.ArrayList;

        $r5 := @parameter4: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $r1 = virtualinvoke $r0.<com.mob.tools.network.NetworkHelper: java.lang.String httpPostFiles(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r2, $r3, $r4, 0, $r5);

        return $r1;
    }

    public java.lang.String httpPut(java.lang.String, java.util.ArrayList, com.mob.tools.network.KVPair, java.util.ArrayList, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.util.ArrayList $r1, $r3;
        com.mob.tools.network.KVPair $r2, $r16;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r4;
        byte[] $r5;
        java.util.HashMap $r6;
        com.mob.tools.network.FilePart $r7;
        java.lang.String $r8, $r11;
        long $l0, $l2;
        com.mob.tools.log.NLog $r9;
        java.lang.StringBuilder $r10;
        java.lang.Object[] $r12;
        int $i1, $i3;
        java.net.HttpURLConnection $r13;
        java.util.Iterator $r14;
        boolean $z0;
        java.lang.Object $r15;
        java.io.OutputStream $r17;
        java.io.InputStream $r18;
        java.io.InputStreamReader $r19;
        java.nio.charset.Charset $r20;
        java.io.BufferedReader $r21;
        java.lang.Integer $r22;
        java.lang.Throwable $r23;
        com.mob.tools.utils.Hashon $r24;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r8 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.ArrayList;

        $r2 := @parameter2: com.mob.tools.network.KVPair;

        $r3 := @parameter3: java.util.ArrayList;

        $r4 := @parameter4: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("httpPut: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r11, $r12);

        if $r1 == null goto label01;

        $r11 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.lang.String kvPairsToUrl(java.util.ArrayList)>($r1);

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i1 <= 0 goto label01;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r13 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r8, $r4);

        virtualinvoke $r13.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r13.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0);

        virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("PUT");

        virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/octet-stream");

        if $r3 == null goto label03;

        $r14 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (com.mob.tools.network.KVPair) $r15;

        $r8 = $r16.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r15 = $r16.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r11 = (java.lang.String) $r15;

        virtualinvoke $r13.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r8, $r11);

        goto label02;

     label03:
        virtualinvoke $r13.<java.net.HttpURLConnection: void connect()>();

        $r17 = virtualinvoke $r13.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r7 = new com.mob.tools.network.FilePart;

        specialinvoke $r7.<com.mob.tools.network.FilePart: void <init>()>();

        $r15 = $r2.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r8 = (java.lang.String) $r15;

        virtualinvoke $r7.<com.mob.tools.network.FilePart: void setFile(java.lang.String)>($r8);

        $r18 = virtualinvoke $r7.<com.mob.tools.network.FilePart: java.io.InputStream toInputStream()>();

        $r5 = newarray (byte)[65536];

        $i1 = virtualinvoke $r18.<java.io.InputStream: int read(byte[])>($r5);

     label04:
        if $i1 <= 0 goto label05;

        virtualinvoke $r17.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i1);

        $i1 = virtualinvoke $r18.<java.io.InputStream: int read(byte[])>($r5);

        goto label04;

     label05:
        virtualinvoke $r17.<java.io.OutputStream: void flush()>();

        virtualinvoke $r18.<java.io.InputStream: void close()>();

        virtualinvoke $r17.<java.io.OutputStream: void close()>();

        $i1 = virtualinvoke $r13.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i1 == 200 goto label06;

        if $i1 != 201 goto label10;

     label06:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r19 = new java.io.InputStreamReader;

        $r18 = virtualinvoke $r13.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r20 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("utf-8");

        specialinvoke $r19.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r18, $r20);

        $r21 = new java.io.BufferedReader;

        specialinvoke $r21.<java.io.BufferedReader: void <init>(java.io.Reader)>($r19);

        $r8 = virtualinvoke $r21.<java.io.BufferedReader: java.lang.String readLine()>();

     label07:
        if $r8 == null goto label09;

        $i1 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label08;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label08:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r21.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label07;

     label09:
        virtualinvoke $r21.<java.io.BufferedReader: void close()>();

        virtualinvoke $r13.<java.net.HttpURLConnection: void disconnect()>();

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l2 - $l0;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r11, $r12);

        return $r8;

     label10:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r19 = new java.io.InputStreamReader;

        $r18 = virtualinvoke $r13.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r20 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("utf-8");

        specialinvoke $r19.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r18, $r20);

        $r21 = new java.io.BufferedReader;

        specialinvoke $r21.<java.io.BufferedReader: void <init>(java.io.Reader)>($r19);

        $r8 = virtualinvoke $r21.<java.io.BufferedReader: java.lang.String readLine()>();

     label11:
        if $r8 == null goto label13;

        $i3 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label12;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label12:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r21.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label11;

     label13:
        virtualinvoke $r21.<java.io.BufferedReader: void close()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("error", $r8);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("status", $r22);

        $r23 = new java.lang.Throwable;

        $r24 = new com.mob.tools.utils.Hashon;

        specialinvoke $r24.<com.mob.tools.utils.Hashon: void <init>()>();

        $r8 = virtualinvoke $r24.<com.mob.tools.utils.Hashon: java.lang.String fromHashMap(java.util.HashMap)>($r6);

        specialinvoke $r23.<java.lang.Throwable: void <init>(java.lang.String)>($r8);

        throw $r23;
    }

    public java.lang.String jsonPost(java.lang.String, java.util.ArrayList, java.util.ArrayList, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, $r9;
        java.util.ArrayList $r2, $r3;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r4;
        byte[] $r5;
        com.mob.tools.network.StringPart $r6;
        long $l0, $l2;
        com.mob.tools.log.NLog $r7;
        java.lang.StringBuilder $r8;
        java.lang.Object[] $r10;
        java.net.HttpURLConnection $r11;
        java.util.Iterator $r12;
        boolean $z0;
        java.lang.Object $r13;
        com.mob.tools.network.KVPair $r14;
        java.util.HashMap $r15;
        com.mob.tools.utils.Hashon $r16;
        java.io.OutputStream $r17;
        java.io.InputStream $r18;
        int $i1, $i3;
        java.io.InputStreamReader $r19;
        java.nio.charset.Charset $r20;
        java.io.BufferedReader $r21;
        java.lang.Integer $r22;
        java.lang.Throwable $r23;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: java.util.ArrayList;

        $r4 := @parameter3: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("jsonPost: ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        virtualinvoke $r7.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r9, $r10);

        $r11 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r4);

        virtualinvoke $r11.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r11.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0);

        virtualinvoke $r11.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("content-type", "application/json");

        if $r3 == null goto label02;

        $r12 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.mob.tools.network.KVPair) $r13;

        $r1 = $r14.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r13 = $r14.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r9 = (java.lang.String) $r13;

        virtualinvoke $r11.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r9);

        goto label01;

     label02:
        $r6 = new com.mob.tools.network.StringPart;

        specialinvoke $r6.<com.mob.tools.network.StringPart: void <init>()>();

        if $r2 == null goto label05;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        $r12 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.mob.tools.network.KVPair) $r13;

        $r1 = $r14.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r13 = $r14.<com.mob.tools.network.KVPair: java.lang.Object value>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r13);

        goto label03;

     label04:
        $r16 = new com.mob.tools.utils.Hashon;

        specialinvoke $r16.<com.mob.tools.utils.Hashon: void <init>()>();

        $r1 = virtualinvoke $r16.<com.mob.tools.utils.Hashon: java.lang.String fromHashMap(java.util.HashMap)>($r15);

        virtualinvoke $r6.<com.mob.tools.network.StringPart: com.mob.tools.network.StringPart append(java.lang.String)>($r1);

     label05:
        virtualinvoke $r11.<java.net.HttpURLConnection: void connect()>();

        $r17 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r18 = virtualinvoke $r6.<com.mob.tools.network.StringPart: java.io.InputStream toInputStream()>();

        $r5 = newarray (byte)[65536];

        $i1 = virtualinvoke $r18.<java.io.InputStream: int read(byte[])>($r5);

     label06:
        if $i1 <= 0 goto label07;

        virtualinvoke $r17.<java.io.OutputStream: void write(byte[],int,int)>($r5, 0, $i1);

        $i1 = virtualinvoke $r18.<java.io.InputStream: int read(byte[])>($r5);

        goto label06;

     label07:
        virtualinvoke $r17.<java.io.OutputStream: void flush()>();

        virtualinvoke $r18.<java.io.InputStream: void close()>();

        virtualinvoke $r17.<java.io.OutputStream: void close()>();

        $i1 = virtualinvoke $r11.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i1 == 200 goto label08;

        if $i1 != 201 goto label12;

     label08:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r19 = new java.io.InputStreamReader;

        $r18 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r20 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("utf-8");

        specialinvoke $r19.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r18, $r20);

        $r21 = new java.io.BufferedReader;

        specialinvoke $r21.<java.io.BufferedReader: void <init>(java.io.Reader)>($r19);

        $r1 = virtualinvoke $r21.<java.io.BufferedReader: java.lang.String readLine()>();

     label09:
        if $r1 == null goto label11;

        $i1 = virtualinvoke $r8.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label10;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label10:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r21.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label09;

     label11:
        virtualinvoke $r21.<java.io.BufferedReader: void close()>();

        virtualinvoke $r11.<java.net.HttpURLConnection: void disconnect()>();

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l2 - $l0;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        virtualinvoke $r7.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r9, $r10);

        return $r1;

     label12:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r19 = new java.io.InputStreamReader;

        $r18 = virtualinvoke $r11.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r20 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("utf-8");

        specialinvoke $r19.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r18, $r20);

        $r21 = new java.io.BufferedReader;

        specialinvoke $r21.<java.io.BufferedReader: void <init>(java.io.Reader)>($r19);

        $r1 = virtualinvoke $r21.<java.io.BufferedReader: java.lang.String readLine()>();

     label13:
        if $r1 == null goto label15;

        $i3 = virtualinvoke $r8.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label14;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label14:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r21.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label13;

     label15:
        virtualinvoke $r21.<java.io.BufferedReader: void close()>();

        virtualinvoke $r11.<java.net.HttpURLConnection: void disconnect()>();

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("error", $r1);

        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("status", $r22);

        $r23 = new java.lang.Throwable;

        $r16 = new com.mob.tools.utils.Hashon;

        specialinvoke $r16.<com.mob.tools.utils.Hashon: void <init>()>();

        $r1 = virtualinvoke $r16.<com.mob.tools.utils.Hashon: java.lang.String fromHashMap(java.util.HashMap)>($r15);

        specialinvoke $r23.<java.lang.Throwable: void <init>(java.lang.String)>($r1);

        throw $r23;
    }

    public void rawGet(java.lang.String, com.mob.tools.network.HttpResponseCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, $r7, varReplacer2709, varReplacer2710;
        com.mob.tools.network.HttpResponseCallback $r2;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r3;
        java.lang.Throwable $r4, $r11;
        long $l0, $l1;
        com.mob.tools.log.NLog $r5;
        java.lang.StringBuilder $r6;
        java.lang.Object[] $r8;
        java.net.HttpURLConnection $r9;
        com.mob.tools.network.HttpConnectionImpl23 $r10;
        null_type varReplacer2711;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mob.tools.network.HttpResponseCallback;

        $r3 := @parameter2: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer2710 = "rawGet: ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2710);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r5.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r7, $r8);

        varReplacer2711 = null;

        $r9 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, varReplacer2711);

        virtualinvoke $r9.<java.net.HttpURLConnection: void connect()>();

        if $r2 == null goto label7;

     label1:
        $r10 = new com.mob.tools.network.HttpConnectionImpl23;

        specialinvoke $r10.<com.mob.tools.network.HttpConnectionImpl23: void <init>(java.net.HttpURLConnection)>($r9);

        interfaceinvoke $r2.<com.mob.tools.network.HttpResponseCallback: void onResponse(com.mob.tools.network.HttpConnection)>($r10);

     label2:
        virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>();

     label3:
        $r5 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer2709 = "use time: ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2709);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l1 - $l0;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = newarray (java.lang.Object)[0];

        virtualinvoke $r5.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r1, $r8);

        return;

     label4:
        $r4 := @caughtexception;

     label5:
        throw $r4;

     label6:
        $r11 := @caughtexception;

        virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>();

        throw $r11;

     label7:
        virtualinvoke $r9.<java.net.HttpURLConnection: void disconnect()>();

        goto label3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label6;
    }

    public void rawGet(java.lang.String, com.mob.tools.network.RawNetworkCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1;
        com.mob.tools.network.RawNetworkCallback $r2;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r3;
        null_type varReplacer2920, varReplacer2921;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.mob.tools.network.RawNetworkCallback;

        $r3 := @parameter2: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        varReplacer2920 = null;

        varReplacer2921 = null;

        virtualinvoke $r0.<com.mob.tools.network.NetworkHelper: void rawGet(java.lang.String,java.util.ArrayList,com.mob.tools.network.RawNetworkCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, varReplacer2920, $r2, varReplacer2920);

        return;
    }

    public void rawGet(java.lang.String, java.util.ArrayList, com.mob.tools.network.RawNetworkCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, $r10, varReplacer2923, varReplacer2924, varReplacer2925, varReplacer2926, varReplacer2927;
        java.util.ArrayList $r2;
        com.mob.tools.network.RawNetworkCallback $r3;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r4;
        java.io.BufferedReader $r5;
        java.util.HashMap $r6;
        java.io.InputStreamReader $r7;
        java.lang.StringBuilder $r8;
        long $l0, $l2;
        com.mob.tools.log.NLog $r9;
        java.lang.Object[] $r11;
        java.net.HttpURLConnection $r12;
        java.util.Iterator $r13;
        boolean $z0;
        java.lang.Object $r14;
        com.mob.tools.network.KVPair $r15;
        int $i1, $i3, varReplacer2928;
        java.io.InputStream $r16;
        java.nio.charset.Charset $r17;
        java.lang.Integer $r18;
        java.lang.Throwable $r19;
        com.mob.tools.utils.Hashon $r20;
        null_type varReplacer2922;

        nop;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: com.mob.tools.network.RawNetworkCallback;

        $r4 := @parameter3: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer2925 = "rawGet: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2925);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r10, $r11);

        varReplacer2922 = null;

        $r12 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, varReplacer2922);

        goto label1;

     label1:
        virtualinvoke $r12.<java.net.HttpURLConnection: void connect()>();

        $i1 = virtualinvoke $r12.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i1 != 200 goto label3;

        if $r3 == null goto label2;

        $r16 = virtualinvoke $r12.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        interfaceinvoke $r3.<com.mob.tools.network.RawNetworkCallback: void onResponse(java.io.InputStream)>($r16);

     label2:
        virtualinvoke $r12.<java.net.HttpURLConnection: void disconnect()>();

        $r9 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer2926 = "use time: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2926);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l2 - $l0;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke $r9.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r1, $r11);

        return;

     label3:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r7 = new java.io.InputStreamReader;

        $r16 = virtualinvoke $r12.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        varReplacer2923 = "utf-8";

        $r17 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(varReplacer2923);

        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r16, $r17);

        $r5 = new java.io.BufferedReader;

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

        $r1 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label4:
        if $r1 == null goto label6;

        $i3 = virtualinvoke $r8.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label5;

        varReplacer2928 = 10;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer2928);

     label5:
        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label4;

     label6:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

        virtualinvoke $r12.<java.net.HttpURLConnection: void disconnect()>();

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2924 = "error";

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer2924, $r1);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        varReplacer2927 = "status";

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer2927, $r18);

        $r19 = new java.lang.Throwable;

        $r20 = new com.mob.tools.utils.Hashon;

        specialinvoke $r20.<com.mob.tools.utils.Hashon: void <init>()>();

        $r1 = virtualinvoke $r20.<com.mob.tools.utils.Hashon: java.lang.String fromHashMap(java.util.HashMap)>($r6);

        specialinvoke $r19.<java.lang.Throwable: void <init>(java.lang.String)>($r1);

        throw $r19;
    }

    public void rawPost(java.lang.String, java.util.ArrayList, com.mob.tools.network.HTTPPart, com.mob.tools.network.HttpResponseCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, $r10;
        java.util.ArrayList $r2;
        com.mob.tools.network.HTTPPart $r3;
        com.mob.tools.network.HttpResponseCallback $r4;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r5;
        byte[] $r6;
        java.lang.Throwable $r7, $r19;
        long $l0, $l2;
        com.mob.tools.log.NLog $r8;
        java.lang.StringBuilder $r9;
        java.lang.Object[] $r11;
        java.net.HttpURLConnection $r12;
        java.util.Iterator $r13;
        boolean $z0;
        java.lang.Object $r14;
        com.mob.tools.network.KVPair $r15;
        java.io.OutputStream $r16;
        java.io.InputStream $r17;
        int $i1;
        com.mob.tools.network.HttpConnectionImpl23 $r18;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: com.mob.tools.network.HTTPPart;

        $r4 := @parameter3: com.mob.tools.network.HttpResponseCallback;

        $r5 := @parameter4: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r8 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rawpost: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r10, $r11);

        $r12 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r5);

        virtualinvoke $r12.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r12.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0);

        if $r2 == null goto label02;

        $r13 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (com.mob.tools.network.KVPair) $r14;

        $r1 = $r15.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r14 = $r15.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r10 = (java.lang.String) $r14;

        virtualinvoke $r12.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r10);

        goto label01;

     label02:
        virtualinvoke $r12.<java.net.HttpURLConnection: void connect()>();

        $r16 = virtualinvoke $r12.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r17 = virtualinvoke $r3.<com.mob.tools.network.HTTPPart: java.io.InputStream toInputStream()>();

        $r6 = newarray (byte)[65536];

        $i1 = virtualinvoke $r17.<java.io.InputStream: int read(byte[])>($r6);

     label03:
        if $i1 <= 0 goto label04;

        virtualinvoke $r16.<java.io.OutputStream: void write(byte[],int,int)>($r6, 0, $i1);

        $i1 = virtualinvoke $r17.<java.io.InputStream: int read(byte[])>($r6);

        goto label03;

     label04:
        virtualinvoke $r16.<java.io.OutputStream: void flush()>();

        virtualinvoke $r17.<java.io.InputStream: void close()>();

        virtualinvoke $r16.<java.io.OutputStream: void close()>();

        if $r4 == null goto label11;

     label05:
        $r18 = new com.mob.tools.network.HttpConnectionImpl23;

        specialinvoke $r18.<com.mob.tools.network.HttpConnectionImpl23: void <init>(java.net.HttpURLConnection)>($r12);

        interfaceinvoke $r4.<com.mob.tools.network.HttpResponseCallback: void onResponse(com.mob.tools.network.HttpConnection)>($r18);

     label06:
        virtualinvoke $r12.<java.net.HttpURLConnection: void disconnect()>();

     label07:
        $r8 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l2 - $l0;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke $r8.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r1, $r11);

        return;

     label08:
        $r7 := @caughtexception;

     label09:
        throw $r7;

     label10:
        $r19 := @caughtexception;

        virtualinvoke $r12.<java.net.HttpURLConnection: void disconnect()>();

        throw $r19;

     label11:
        virtualinvoke $r12.<java.net.HttpURLConnection: void disconnect()>();

        goto label07;

        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label09 to label10 with label10;
    }

    public void rawPost(java.lang.String, java.util.ArrayList, com.mob.tools.network.HTTPPart, com.mob.tools.network.RawNetworkCallback, com.mob.tools.network.NetworkHelper$NetworkTimeOut) throws java.lang.Throwable
    {
        com.mob.tools.network.NetworkHelper $r0;
        java.lang.String $r1, $r13;
        java.util.ArrayList $r2;
        com.mob.tools.network.HTTPPart $r3;
        com.mob.tools.network.RawNetworkCallback $r4;
        com.mob.tools.network.NetworkHelper$NetworkTimeOut $r5;
        java.io.BufferedReader $r6;
        byte[] $r7;
        java.util.HashMap $r8;
        java.io.InputStreamReader $r9;
        java.lang.StringBuilder $r10;
        java.lang.Throwable $r11, $r21, $r25, $r26;
        long $l0, $l2;
        com.mob.tools.log.NLog $r12;
        java.lang.Object[] $r14;
        java.net.HttpURLConnection $r15;
        java.util.Iterator $r16;
        boolean $z0;
        java.lang.Object $r17;
        com.mob.tools.network.KVPair $r18;
        java.io.OutputStream $r19;
        java.io.InputStream $r20;
        int $i1, $i3;
        java.nio.charset.Charset $r22;
        java.lang.Integer $r23;
        com.mob.tools.utils.Hashon $r24;

        $r0 := @this: com.mob.tools.network.NetworkHelper;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.ArrayList;

        $r3 := @parameter2: com.mob.tools.network.HTTPPart;

        $r4 := @parameter3: com.mob.tools.network.RawNetworkCallback;

        $r5 := @parameter4: com.mob.tools.network.NetworkHelper$NetworkTimeOut;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r12 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rawpost: ");

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke $r12.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r13, $r14);

        $r15 = specialinvoke $r0.<com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>($r1, $r5);

        virtualinvoke $r15.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r15.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(0);

        if $r2 == null goto label02;

        $r16 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (com.mob.tools.network.KVPair) $r17;

        $r1 = $r18.<com.mob.tools.network.KVPair: java.lang.String name>;

        $r17 = $r18.<com.mob.tools.network.KVPair: java.lang.Object value>;

        $r13 = (java.lang.String) $r17;

        virtualinvoke $r15.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r1, $r13);

        goto label01;

     label02:
        virtualinvoke $r15.<java.net.HttpURLConnection: void connect()>();

        $r19 = virtualinvoke $r15.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r20 = virtualinvoke $r3.<com.mob.tools.network.HTTPPart: java.io.InputStream toInputStream()>();

        $r7 = newarray (byte)[65536];

        $i1 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>($r7);

     label03:
        if $i1 <= 0 goto label04;

        virtualinvoke $r19.<java.io.OutputStream: void write(byte[],int,int)>($r7, 0, $i1);

        $i1 = virtualinvoke $r20.<java.io.InputStream: int read(byte[])>($r7);

        goto label03;

     label04:
        virtualinvoke $r19.<java.io.OutputStream: void flush()>();

        virtualinvoke $r20.<java.io.InputStream: void close()>();

        virtualinvoke $r19.<java.io.OutputStream: void close()>();

        $i1 = virtualinvoke $r15.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i1 != 200 goto label16;

        if $r4 == null goto label15;

        $r20 = virtualinvoke $r15.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label05:
        interfaceinvoke $r4.<com.mob.tools.network.RawNetworkCallback: void onResponse(java.io.InputStream)>($r20);

     label06:
        if $r20 == null goto label08;

     label07:
        virtualinvoke $r20.<java.io.InputStream: void close()>();

     label08:
        virtualinvoke $r15.<java.net.HttpURLConnection: void disconnect()>();

     label09:
        $r12 = staticinvoke <com.mob.tools.MobLog: com.mob.tools.log.NLog getInstance()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("use time: ");

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l2 - $l0;

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = newarray (java.lang.Object)[0];

        virtualinvoke $r12.<com.mob.tools.log.NLog: int i(java.lang.Object,java.lang.Object[])>($r1, $r14);

        return;

     label10:
        $r11 := @caughtexception;

     label11:
        throw $r11;

     label12:
        $r21 := @caughtexception;

        if $r20 == null goto label14;

     label13:
        virtualinvoke $r20.<java.io.InputStream: void close()>();

     label14:
        virtualinvoke $r15.<java.net.HttpURLConnection: void disconnect()>();

        throw $r21;

     label15:
        virtualinvoke $r15.<java.net.HttpURLConnection: void disconnect()>();

        goto label09;

     label16:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = new java.io.InputStreamReader;

        $r20 = virtualinvoke $r15.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r22 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("utf-8");

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r20, $r22);

        $r6 = new java.io.BufferedReader;

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

        $r1 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

     label17:
        if $r1 == null goto label19;

        $i3 = virtualinvoke $r10.<java.lang.StringBuilder: int length()>();

        if $i3 <= 0 goto label18;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label18:
        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label17;

     label19:
        virtualinvoke $r6.<java.io.BufferedReader: void close()>();

        virtualinvoke $r15.<java.net.HttpURLConnection: void disconnect()>();

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("error", $r1);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("status", $r23);

        $r11 = new java.lang.Throwable;

        $r24 = new com.mob.tools.utils.Hashon;

        specialinvoke $r24.<com.mob.tools.utils.Hashon: void <init>()>();

        $r1 = virtualinvoke $r24.<com.mob.tools.utils.Hashon: java.lang.String fromHashMap(java.util.HashMap)>($r8);

        specialinvoke $r11.<java.lang.Throwable: void <init>(java.lang.String)>($r1);

        throw $r11;

     label20:
        $r25 := @caughtexception;

        goto label08;

     label21:
        $r26 := @caughtexception;

        goto label14;

        catch java.lang.Throwable from label05 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label11 to label12 with label12;
        catch java.lang.Throwable from label13 to label14 with label21;
    }
}
