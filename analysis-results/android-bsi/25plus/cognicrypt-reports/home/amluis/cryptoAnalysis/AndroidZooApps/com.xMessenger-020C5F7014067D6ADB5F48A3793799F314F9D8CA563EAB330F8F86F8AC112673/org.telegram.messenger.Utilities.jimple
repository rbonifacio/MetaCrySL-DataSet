public class org.telegram.messenger.Utilities extends java.lang.Object
{
    public static volatile org.telegram.messenger.DispatchQueue globalQueue;
    protected static final char[] hexArray;
    public static java.util.regex.Pattern pattern;
    public static volatile org.telegram.messenger.DispatchQueue phoneBookQueue;
    public static java.security.SecureRandom random;
    public static volatile org.telegram.messenger.DispatchQueue searchQueue;
    public static volatile org.telegram.messenger.DispatchQueue stageQueue;

    static void <clinit>()
    {
        java.io.File $r0;
        byte[] $r1;
        java.lang.Exception $r2;
        java.io.FileInputStream $r3;
        java.util.regex.Pattern $r4;
        java.security.SecureRandom $r5;
        org.telegram.messenger.DispatchQueue $r6;
        java.lang.String $r7, varReplacer960, varReplacer961, varReplacer962, varReplacer963, varReplacer964, varReplacer965, varReplacer966;
        char[] $r8;

        nop;

        varReplacer962 = "[\\-0-9]+";

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(varReplacer962);

        <org.telegram.messenger.Utilities: java.util.regex.Pattern pattern> = $r4;

        $r5 = new java.security.SecureRandom;

        specialinvoke $r5.<java.security.SecureRandom: void <init>()>();

        <org.telegram.messenger.Utilities: java.security.SecureRandom random> = $r5;

        $r6 = new org.telegram.messenger.DispatchQueue;

        varReplacer966 = "stageQueue";

        specialinvoke $r6.<org.telegram.messenger.DispatchQueue: void <init>(java.lang.String)>(varReplacer966);

        <org.telegram.messenger.Utilities: org.telegram.messenger.DispatchQueue stageQueue> = $r6;

        $r6 = new org.telegram.messenger.DispatchQueue;

        varReplacer960 = "globalQueue";

        specialinvoke $r6.<org.telegram.messenger.DispatchQueue: void <init>(java.lang.String)>(varReplacer960);

        <org.telegram.messenger.Utilities: org.telegram.messenger.DispatchQueue globalQueue> = $r6;

        $r6 = new org.telegram.messenger.DispatchQueue;

        varReplacer964 = "searchQueue";

        specialinvoke $r6.<org.telegram.messenger.DispatchQueue: void <init>(java.lang.String)>(varReplacer964);

        <org.telegram.messenger.Utilities: org.telegram.messenger.DispatchQueue searchQueue> = $r6;

        $r6 = new org.telegram.messenger.DispatchQueue;

        varReplacer965 = "photoBookQueue";

        specialinvoke $r6.<org.telegram.messenger.DispatchQueue: void <init>(java.lang.String)>(varReplacer965);

        <org.telegram.messenger.Utilities: org.telegram.messenger.DispatchQueue phoneBookQueue> = $r6;

        $r7 = "0123456789ABCDEF";

        $r8 = virtualinvoke $r7.<java.lang.String: char[] toCharArray()>();

        <org.telegram.messenger.Utilities: char[] hexArray> = $r8;

        $r0 = new java.io.File;

     label1:
        varReplacer963 = "/dev/urandom";

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(varReplacer963);

     label2:
        $r3 = new java.io.FileInputStream;

     label3:
        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        $r1 = newarray (byte)[1024];

        virtualinvoke $r3.<java.io.FileInputStream: int read(byte[])>($r1);

        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label4:
        $r5 = <org.telegram.messenger.Utilities: java.security.SecureRandom random>;

     label5:
        virtualinvoke $r5.<java.security.SecureRandom: void setSeed(byte[])>($r1);

     label6:
        return;

     label7:
        $r2 := @caughtexception;

        varReplacer961 = "tmessages";

        staticinvoke <org.telegram.messenger.FileLog: void e(java.lang.String,java.lang.Throwable)>(varReplacer961, $r2);

        return;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public void <init>()
    {
        org.telegram.messenger.Utilities $r0;

        $r0 := @this: org.telegram.messenger.Utilities;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String MD5(java.lang.String)
    {
        java.lang.String $r0, varReplacer2838, varReplacer2839;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.security.MessageDigest $r3;
        byte[] $r4;
        int $i0, $i1, varReplacer2841, varReplacer2842;
        byte $b2;
        short $s3;
        null_type varReplacer2840, varReplacer2843;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label01;

        varReplacer2840 = null;

        return varReplacer2840;

     label01:
        varReplacer2838 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2838);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4);

     label02:
        $r2 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label08;

        $b2 = $r4[$i0];

        $s3 = $b2 & 255;

        $s3 = $s3 | 256;

     label06:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        varReplacer2841 = 1;

        varReplacer2842 = 3;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2841, varReplacer2842);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        return $r0;

     label10:
        $r1 := @caughtexception;

        varReplacer2839 = "tmessages";

        staticinvoke <org.telegram.messenger.FileLog: void e(java.lang.String,java.lang.Throwable)>(varReplacer2839, $r1);

        varReplacer2843 = null;

        return varReplacer2843;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label10;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label10;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label10;
    }

    private static native void aesIgeEncryption(java.nio.ByteBuffer, byte[], byte[], boolean, int, int);

    public static void aesIgeEncryption(java.nio.ByteBuffer, byte[], byte[], boolean, boolean, int, int)
    {
        java.nio.ByteBuffer $r0;
        byte[] $r1, $r2;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $z0 := @parameter3: boolean;

        $z1 := @parameter4: boolean;

        $i0 := @parameter5: int;

        $i1 := @parameter6: int;

        if $z1 == 0 goto label2;

     label1:
        staticinvoke <org.telegram.messenger.Utilities: void aesIgeEncryption(java.nio.ByteBuffer,byte[],byte[],boolean,int,int)>($r0, $r1, $r2, $z0, $i0, $i1);

        return;

     label2:
        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (byte[]) $r3;

        goto label1;
    }

    public static boolean arraysEquals(byte[], int, byte[], int)
    {
        byte[] $r0, $r1;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        byte $b4, $b5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 := @parameter2: byte[];

        $i1 := @parameter3: int;

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        if $i0 < 0 goto label1;

        if $i1 < 0 goto label1;

        $i2 = lengthof $r0;

        $i2 = $i2 - $i0;

        $i3 = lengthof $r1;

        $i3 = $i3 - $i1;

        if $i2 != $i3 goto label1;

        $i2 = lengthof $r0;

        $i2 = $i2 - $i0;

        if $i2 < 0 goto label1;

        $i2 = lengthof $r1;

        $i2 = $i2 - $i1;

        if $i2 >= 0 goto label2;

     label1:
        return 0;

     label2:
        $z0 = 1;

        $i2 = $i0;

     label3:
        $i3 = lengthof $r0;

        if $i2 >= $i3 goto label5;

        $i3 = $i2 + $i0;

        $b4 = $r0[$i3];

        $i3 = $i2 + $i1;

        $b5 = $r1[$i3];

        if $b4 == $b5 goto label4;

        $z0 = 0;

     label4:
        $i2 = $i2 + 1;

        goto label3;

     label5:
        return $z0;
    }

    public static native void blurBitmap(java.lang.Object, int, int, int, int, int);

    public static java.lang.String bytesToHex(byte[])
    {
        byte[] $r0;
        char[] $r1, $r2;
        short $s0, $s4;
        int $i1, $i2;
        byte $b3;
        char $c5;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return "";

     label1:
        $i1 = lengthof $r0;

        $i1 = $i1 * 2;

        $r1 = newarray (char)[$i1];

        $i1 = 0;

     label2:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label3;

        $b3 = $r0[$i1];

        $s0 = $b3 & 255;

        $i2 = $i1 * 2;

        $r2 = <org.telegram.messenger.Utilities: char[] hexArray>;

        $s4 = $s0 >>> 4;

        $c5 = $r2[$s4];

        $r1[$i2] = $c5;

        $i2 = $i1 * 2;

        $i2 = $i2 + 1;

        $r2 = <org.telegram.messenger.Utilities: char[] hexArray>;

        $s0 = $s0 & 15;

        $c5 = $r2[$s0];

        $r1[$i2] = $c5;

        $i1 = $i1 + 1;

        goto label2;

     label3:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r1);

        return $r3;
    }

    public static long bytesToLong(byte[])
    {
        byte[] $r0;
        byte $b0;
        long $l1, $l2;

        $r0 := @parameter0: byte[];

        $b0 = $r0[7];

        $l1 = (long) $b0;

        $l1 = $l1 << 56;

        $b0 = $r0[6];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 48;

        $l1 = $l1 + $l2;

        $b0 = $r0[5];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 40;

        $l1 = $l1 + $l2;

        $b0 = $r0[4];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 32;

        $l1 = $l1 + $l2;

        $b0 = $r0[3];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 24;

        $l1 = $l1 + $l2;

        $b0 = $r0[2];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 16;

        $l1 = $l1 + $l2;

        $b0 = $r0[1];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l2 = $l2 << 8;

        $l1 = $l1 + $l2;

        $b0 = $r0[0];

        $l2 = (long) $b0;

        $l2 = $l2 & 255L;

        $l1 = $l1 + $l2;

        return $l1;
    }

    public static native void calcCDT(java.nio.ByteBuffer, int, int, java.nio.ByteBuffer);

    public static byte[] computeSHA1(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer $r0;
        int $i0;
        byte[] $r1;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke $r0.<java.nio.ByteBuffer: int limit()>();

        $r1 = staticinvoke <org.telegram.messenger.Utilities: byte[] computeSHA1(java.nio.ByteBuffer,int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static byte[] computeSHA1(java.nio.ByteBuffer, int, int)
    {
        java.nio.ByteBuffer $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Exception $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.lang.Throwable $r4;

        $r0 := @parameter0: java.nio.ByteBuffer;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = virtualinvoke $r0.<java.nio.ByteBuffer: int position()>();

        $i3 = virtualinvoke $r0.<java.nio.ByteBuffer: int limit()>();

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        virtualinvoke $r2.<java.security.MessageDigest: void update(java.nio.ByteBuffer)>($r0);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label2:
        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

        return $r3;

     label3:
        $r1 := @caughtexception;

     label4:
        staticinvoke <org.telegram.messenger.FileLog: void e(java.lang.String,java.lang.Throwable)>("tmessages", $r1);

     label5:
        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

        $r3 = newarray (byte)[20];

        return $r3;

     label6:
        $r4 := @caughtexception;

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        virtualinvoke $r0.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static byte[] computeSHA1(byte[])
    {
        byte[] $r0;
        int $i0;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r0 = staticinvoke <org.telegram.messenger.Utilities: byte[] computeSHA1(byte[],int,int)>($r0, 0, $i0);

        return $r0;
    }

    public static byte[] computeSHA1(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.Exception $r1;
        java.security.MessageDigest $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r0, $i0, $i1);

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <org.telegram.messenger.FileLog: void e(java.lang.String,java.lang.Throwable)>("tmessages", $r1);

        $r0 = newarray (byte)[20];

        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static byte[] computeSHA256(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.Exception $r1;
        java.security.MessageDigest $r2;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r0, $i0, $i1);

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        staticinvoke <org.telegram.messenger.FileLog: void e(java.lang.String,java.lang.Throwable)>("tmessages", $r1);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static native int convertVideoFrame(java.nio.ByteBuffer, java.nio.ByteBuffer, int, int, int, int, int);

    public static byte[] hexToBytes(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2, $i4, $i5;
        byte[] $r1;
        char $c3;
        byte $b6;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = $i0 / 2;

        $r1 = newarray (byte)[$i1];

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label3;

        $i2 = $i1 / 2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        $i4 = $i4 << 4;

        $i5 = $i1 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i5);

        $i5 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        $i4 = $i4 + $i5;

        $b6 = (byte) $i4;

        $r1[$i2] = $b6;

        $i1 = $i1 + 2;

        goto label2;

     label3:
        return $r1;
    }

    public static boolean isGoodGaAndGb(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1, $r2;
        int $i0;

        $r0 := @parameter0: java.math.BigInteger;

        $r1 := @parameter1: java.math.BigInteger;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r2);

        if $i0 != 1 goto label1;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r2);

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r1);

        if $i0 != -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isGoodPrime(byte[], int)
    {
        byte[] $r0;
        int $i0, $i1;
        java.math.BigInteger $r1, $r2, $r4;
        boolean $z0, $z1;
        byte $b2;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $z0 = 1;

        if $i0 < 2 goto label10;

        if $i0 <= 7 goto label01;

        return 0;

     label01:
        $i1 = lengthof $r0;

        if $i1 != 256 goto label10;

        $b2 = $r0[0];

        if $b2 >= 0 goto label10;

        $r1 = new java.math.BigInteger;

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(1, $r0);

        if $i0 != 2 goto label03;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(8L);

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        if $i0 != 7 goto label10;

     label02:
        $r3 = staticinvoke <org.telegram.messenger.Utilities: java.lang.String bytesToHex(byte[])>($r0);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("C71CAEB9C6B1C9048E6C522F70F13F73980D40238E3E21C14934D037563D930F48198A0AA7C14058229493D22530F4DBFA336F6E0AC925139543AED44CCE7C3720FD51F69458705AC68CD4FE6B6B13ABDC9746512969328454F18FAF8C595F642477FE96BB2A941D5BCD1D4AC8CC49880708FA9B378E3C4F3A9060BEE67CF9A4A4A695811051907E162753B56B0F6B410DBA74D8A84B2A14B3144E0EF1284754FD17ED950D5965B4B9DD46582DB1178D169C6BC465B0D6FF9CA3928FEF5B9AE4E418FC15E83EBEA0F87FA9FF5EED70050DED2849F47BF959D956850CE929851F0D8115F635B105EE2E4E15D04B2454BF6F4FADF034B10403119CD8E3B92FCC5B");

        if $z1 == 0 goto label07;

        return 1;

     label03:
        if $i0 != 3 goto label04;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(3L);

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        if $i0 == 2 goto label02;

        return 0;

     label04:
        if $i0 != 5 goto label05;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(5L);

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        if $i0 == 1 goto label02;

        if $i0 == 4 goto label02;

        return 0;

     label05:
        if $i0 != 6 goto label06;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(24L);

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        if $i0 == 19 goto label02;

        if $i0 == 23 goto label02;

        return 0;

     label06:
        if $i0 != 7 goto label02;

        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(7L);

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r2);

        $i0 = virtualinvoke $r2.<java.math.BigInteger: int intValue()>();

        if $i0 == 3 goto label02;

        if $i0 == 5 goto label02;

        if $i0 == 6 goto label02;

        return 0;

     label07:
        $r2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(1L);

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r2);

        $r4 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

        $r2 = virtualinvoke $r2.<java.math.BigInteger: java.math.BigInteger divide(java.math.BigInteger)>($r4);

        $z1 = virtualinvoke $r1.<java.math.BigInteger: boolean isProbablePrime(int)>(30);

        if $z1 == 0 goto label09;

        $z1 = virtualinvoke $r2.<java.math.BigInteger: boolean isProbablePrime(int)>(30);

        if $z1 == 0 goto label09;

     label08:
        return $z0;

     label09:
        $z0 = 0;

        goto label08;

     label10:
        return 0;
    }

    public static native void loadBitmap(java.lang.String, android.graphics.Bitmap, int, int, int, int);

    public static native boolean loadWebpImage(android.graphics.Bitmap, java.nio.ByteBuffer, int, android.graphics.BitmapFactory$Options, boolean);

    public static java.lang.Integer parseInt(java.lang.String)
    {
        java.lang.String $r0, varReplacer1956;
        java.lang.Exception $r1;
        java.lang.Integer $r2, $r5;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        boolean $z0;
        int $i0, varReplacer1954, varReplacer1955, varReplacer1957;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        varReplacer1955 = 0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer1955);

        return $r2;

     label1:
        varReplacer1957 = 0;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer1957);

        $r3 = <org.telegram.messenger.Utilities: java.util.regex.Pattern pattern>;

     label2:
        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

     label3:
        if $z0 == 0 goto label7;

     label4:
        varReplacer1954 = 0;

        $r0 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(varReplacer1954);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label5:
        return $r5;

     label6:
        $r1 := @caughtexception;

        varReplacer1956 = "tmessages";

        staticinvoke <org.telegram.messenger.FileLog: void e(java.lang.String,java.lang.Throwable)>(varReplacer1956, $r1);

     label7:
        return $r2;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static java.lang.String parseIntToString(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;
        int varReplacer4723;
        null_type varReplacer4724;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.telegram.messenger.Utilities: java.util.regex.Pattern pattern>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        varReplacer4723 = 0;

        $r0 = virtualinvoke $r2.<java.util.regex.Matcher: java.lang.String group(int)>(varReplacer4723);

        return $r0;

     label1:
        varReplacer4724 = null;

        return varReplacer4724;
    }

    public static java.lang.Long parseLong(java.lang.String)
    {
        java.lang.String $r0, varReplacer1939;
        java.lang.Exception $r1;
        java.lang.Long $r2, $r5;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        boolean $z0;
        long $l0, varReplacer1940, varReplacer1942;
        int varReplacer1941;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        varReplacer1940 = 0L;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(varReplacer1940);

        return $r2;

     label1:
        varReplacer1942 = 0L;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(varReplacer1942);

        $r3 = <org.telegram.messenger.Utilities: java.util.regex.Pattern pattern>;

     label2:
        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean find()>();

     label3:
        if $z0 == 0 goto label7;

     label4:
        varReplacer1941 = 0;

        $r0 = virtualinvoke $r4.<java.util.regex.Matcher: java.lang.String group(int)>(varReplacer1941);

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label5:
        return $r5;

     label6:
        $r1 := @caughtexception;

        varReplacer1939 = "tmessages";

        staticinvoke <org.telegram.messenger.FileLog: void e(java.lang.String,java.lang.Throwable)>(varReplacer1939, $r1);

     label7:
        return $r2;

        catch java.lang.Exception from label2 to label3 with label6;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static native int pinBitmap(android.graphics.Bitmap);

    public static native java.lang.String readlink(java.lang.String);

    public static native void unpinBitmap(android.graphics.Bitmap);
}
