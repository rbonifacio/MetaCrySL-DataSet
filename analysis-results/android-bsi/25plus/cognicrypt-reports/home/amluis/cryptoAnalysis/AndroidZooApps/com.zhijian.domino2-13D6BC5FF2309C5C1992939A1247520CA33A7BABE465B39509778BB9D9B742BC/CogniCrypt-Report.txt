Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2591)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.security.Key generateKey(java.lang.String)>
		SHA-256: cfcc4ec480aaa8ed112b460799e2eea081caf5ae9bce4002b5b3d8a52de46c97
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 595cd5d15b6766276e15896385885c120e16edd20b8cedfe13df5427a57f4810
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cf: java.lang.String a(java.lang.String)>
		SHA-256: c5f64bb50cacd7354ef9e3f9e9d136f9ccdbc6b1ea49c434cc782d7acc08ac5f
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5079)
		Method: <com.mimopay.MimopayCore: java.lang.String getAPIKey(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: abc6f5c29e6d2abdf51870a93846221f53824b80818d24c3a4ca60e44e642215
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2575)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: fc8f241fb9bf6969daa803ad6818d508fb50adcb9a5cce66c715abc5f8781743
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mimopay.MimopayCore: java.lang.String getAPIKey(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6761124496d8976c394c93a195aa73e3c579e9f28d7ba83720fed4d419ebbdb7
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cf: java.lang.String b(java.lang.String)>
		SHA-256: 238337db9331bbdf0adf755dc1c0b06b78f860128b0a3f0a4a896ffcf04811f1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.bluepay.b.d.u: byte[] b(byte[])>
		SHA-256: 8a76aee69f175ca458fa683054793879e3abdb28d497497fe1c795e6f94a32a7
		Secure: false
	Object:
		Variable: r19
		Type: java.security.SecureRandom
		Statement: specialinvoke r19.<java.security.SecureRandom: void <init>()>()
		Method: <com.bluepay.b.b.a: java.net.HttpURLConnection b(java.lang.String,java.lang.String,java.util.Map)>
		SHA-256: d37e750ed995e81a526ca08d115e399f43dc90df91fde591753311a141ec1d54
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2748)
		Method: <u.aly.cf: java.lang.String a(java.lang.String)>
		SHA-256: 72901bcf49e469c55d6bf8f923bef47745efed208713544281ab47382c1cfed7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3889)
		Method: <u.aly.cf: java.lang.String b(java.lang.String)>
		SHA-256: 3d30679b21f9952155b3492a55c8a93ee0730883db86525beaf87b112f4fce87
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 64399d93c679901b692ad3aff3ea463a928df7cbde3a337646a32994552d826c
		Secure: false
	Object:
		Variable: varReplacer1849
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1849)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 28343fcc4513e58f0371a54ffcc3fc7f2fcf1b7598f0f1bfe13ddc8a657e3273
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4936)
		Method: <com.bluepay.b.b.a: java.net.HttpURLConnection b(java.lang.String,java.lang.String,java.util.Map)>
		SHA-256: 5561e4c68dd54d632170ce0823e797908e69efa1660ab21f20699412424018ea
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.zhijian.domino.iap.google.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: varReplacer4159
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4159)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: afd3572521e2b0f9932bc74733ab563f10d74fede7d1f2a89ca2f3d20136da11
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1855)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 6ab015dcf0003ff0527c7163284a86c53feb9b42ff4f4c1e0349cb02e2bf2c8d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1882)
		Method: <com.bluepay.b.d.u: byte[] b(byte[])>
		SHA-256: a6c6662b19a1edcbbb9e6be0415483506ab96c7b9a022975c5b95c1e4ada6db9
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1849)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 8eaa9a441205d8b4f7e7dcf337adfccd6f1a05c09e942f7a10731a388b3ebe23
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4348)
		Method: <com.zhijian.domino.iap.google.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: eedd411609830f305657de9e455697681e9b2ab50ae28657e298881c42ac222e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 55ef35a9e5361367b650b4092a4c8bc3d3e07ff15f333dd8e7f8138f9d5309a5
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ccfd9ec438e1b82af96977339bc8a1ccea6aa338e79f6247cffe2cd70b368ca0
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: 912e532c88e821194e6575f7276b7e0527e548749ea1fc593eeb17eacb0fed48
		Secure: false
	Object:
		Variable: varReplacer1879
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1879)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: ae1d0381e8347943e9ca5e396d3da5e8911cd8962d6353701b73e47b450be94
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1879)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: 40392ccdecc7f77182fdbd956a49c5a53365906514b33a5a9ed862b353492749
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4162)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: a60f55216dd288f1c55c9d77c4bc19017f12d9bd587c82fd637c037004e486f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4158)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 193390742646c490d07b0cc94bf87cafb043bfb6e363f53396ebfd90b37290af
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4159)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: c2021e39559958c1807127265028cc45c0f37e48f6e0fe07afcd1dd9d44d7a88
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1883, varReplacer1884)
		Method: <com.bluepay.b.d.u: byte[] b(byte[])>
		SHA-256: 2e7c53e47f65ffc868f9e051fb44f751299e3f602193c0c452919975907605ec
		Secure: true
	Object:
		Variable: varReplacer2591
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2591)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.security.Key generateKey(java.lang.String)>
		SHA-256: 7924a1320c625796807d6e965350559753694db21b999239fbf786c440a83fb2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: c3495ee43789b614e009b7fd05317ad1ce164e57f58786da3f37c99230b2977f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1878)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: 38d3eb8b8752fb0b0f79a659de44edbd8e222a9ca0a5f527d3b49996cdce6198
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4680)
		Method: <com.bluepay.b.d.e: void <clinit>()>
		SHA-256: 1a1c8a98a174260837fd6753651265086bf92160bc06591f05de6d0b6a13bbde
		Secure: false

Findings in Java Class: com.bluepay.b.d.u

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1847, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6ab015dcf0003ff0527c7163284a86c53feb9b42ff4f4c1e0349cb02e2bf2c8d)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1855)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1849)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6ab015dcf0003ff0527c7163284a86c53feb9b42ff4f4c1e0349cb02e2bf2c8d)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1855)


	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38d3eb8b8752fb0b0f79a659de44edbd8e222a9ca0a5f527d3b49996cdce6198)
			First parameter (with value "AES/ECB/ZeroBytePadding") should be any of AES/{GCM, CBC, CTR}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1878)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1880, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38d3eb8b8752fb0b0f79a659de44edbd8e222a9ca0a5f527d3b49996cdce6198)
			First parameter (with value "AES/ECB/ZeroBytePadding") should be any of AES/{GCM, CBC, CTR}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1878)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1879)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1885, $r2)


Findings in Java Class: com.codapayments.sdk.gw.util.EncryptUtils

	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fc8f241fb9bf6969daa803ad6818d508fb50adcb9a5cce66c715abc5f8781743)
			First parameter (with value "AES") should be any of AES/{GCM, CBC, CTR}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2575)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2578, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fc8f241fb9bf6969daa803ad6818d508fb50adcb9a5cce66c715abc5f8781743)
			First parameter (with value "AES") should be any of AES/{GCM, CBC, CTR}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2575)


	 in Method: java.security.Key generateKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2591)


Findings in Java Class: u.aly.cf

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #72901bcf49e469c55d6bf8f923bef47745efed208713544281ab47382c1cfed7)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2748)


	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3d30679b21f9952155b3492a55c8a93ee0730883db86525beaf87b112f4fce87)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3889)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4160, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4159)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #193390742646c490d07b0cc94bf87cafb043bfb6e363f53396ebfd90b37290af)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4158)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #193390742646c490d07b0cc94bf87cafb043bfb6e363f53396ebfd90b37290af)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4158)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4160, $r2, $r4)


	 in Method: byte[] b(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a60f55216dd288f1c55c9d77c4bc19017f12d9bd587c82fd637c037004e486f)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4162)


Findings in Java Class: com.zhijian.domino.iap.google.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #eedd411609830f305657de9e455697681e9b2ab50ae28657e298881c42ac222e)
			First parameter (with value "SHA1withRSA") should be any of {SHA224withECDSA, SHA256withDSA, SHA256withRSA/PSS, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, NONEwithRSA, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, DSS, SHA224withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4348)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.bluepay.b.d.e

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1a1c8a98a174260837fd6753651265086bf92160bc06591f05de6d0b6a13bbde)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4680)


Findings in Java Class: com.mimopay.MimopayCore

	 in Method: java.lang.String getAPIKey(java.lang.String,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #abc6f5c29e6d2abdf51870a93846221f53824b80818d24c3a4ca60e44e642215)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5079)


Findings in Java Class: com.bluepay.b.b.a

	 in Method: java.net.HttpURLConnection b(java.lang.String,java.lang.String,java.util.Map)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4937, r24, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4937, r24, $r6)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 14
	RequiredPredicateError: 15
=====================================================================