public class com.zynga.economy.util.SignatureGenerator extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;

    public void <init>()
    {
        com.zynga.economy.util.SignatureGenerator $r0;

        $r0 := @this: com.zynga.economy.util.SignatureGenerator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String computeHash(java.lang.String)
    {
        java.lang.String $r0, varReplacer2098, varReplacer2099, varReplacer2100, varReplacer2102, varReplacer2103, varReplacer2104, varReplacer2105, varReplacer2106;
        java.security.MessageDigest $r1;
        byte[] $r2;
        int $i0, varReplacer2101;
        java.lang.Throwable $r3, $r5;
        java.lang.IllegalStateException $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer2099 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2099);

        varReplacer2100 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2100);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        varReplacer2101 = 0;

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r2, varReplacer2101, $i0);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.zynga.economy.util.HashCodeUtils: java.lang.String bytesToHex(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        varReplacer2105 = "SIGNATURE_GENERATOR";

        varReplacer2106 = "SHA-1 is an invalid algorithm";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2105, varReplacer2106, $r3);

        $r4 = new java.lang.IllegalStateException;

        varReplacer2102 = "Could not generate signature";

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2102, $r3);

        throw $r4;

     label4:
        $r5 := @caughtexception;

        varReplacer2103 = "SIGNATURE_GENERATOR";

        varReplacer2104 = "UTF-8 encoding is unsupported";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2103, varReplacer2104, $r5);

        $r4 = new java.lang.IllegalStateException;

        varReplacer2098 = "Could not generate signature";

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2098, $r5);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static java.lang.String generate(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Mac $r3;
        byte[] $r4;
        java.lang.Throwable $r5, $r7, $r8;
        java.lang.IllegalStateException $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacSHA256");

     label2:
        $r2 = new javax.crypto.spec.SecretKeySpec;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r1 = virtualinvoke $r3.<javax.crypto.Mac: java.lang.String getAlgorithm()>();

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r1);

        virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r2);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4);

        $r0 = staticinvoke <com.zynga.economy.util.HashCodeUtils: java.lang.String bytesToHex(byte[])>($r4);

     label4:
        return $r0;

     label5:
        $r5 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SIGNATURE_GENERATOR", "HMAC SHA-256 is an invalid algorithm", $r5);

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Could not generate signature", $r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SIGNATURE_GENERATOR", "Secret key is invalid", $r7);

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Could not generate signature", $r7);

        throw $r6;

     label7:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("SIGNATURE_GENERATOR", "UTF-8 encoding is unsupported", $r8);

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Could not generate signature", $r8);

        throw $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.InvalidKeyException from label1 to label2 with label6;
        catch java.security.InvalidKeyException from label3 to label4 with label6;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label7;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label7;
    }
}
