public final class org.mozilla.gecko.sync.Utils extends java.lang.Object
{
    private static final java.security.SecureRandom sharedSecureRandom;

    static void <clinit>()
    {
        java.security.SecureRandom $r0;

        nop;

        $r0 = new java.security.SecureRandom;

        specialinvoke $r0.<java.security.SecureRandom: void <init>()>();

        <org.mozilla.gecko.sync.Utils: java.security.SecureRandom sharedSecureRandom> = $r0;

        return;
    }

    public static void addToIndexBucketMap(java.util.TreeMap, long, java.lang.String)
    {
        java.util.TreeMap $r0;
        long $l0;
        java.lang.String $r1;
        java.lang.Long $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        $r0 := @parameter0: java.util.TreeMap;

        $l0 := @parameter1: long;

        $r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = virtualinvoke $r0.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.util.ArrayList) $r3;

        if $r4 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label1:
        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

        return;
    }

    public static java.lang.String byte2Hex(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1;
        int $i0, $i1, $i2, $i3;
        byte $b4;
        short $s5;
        java.lang.String $r2, varReplacer12659, varReplacer12660;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = 0;

        $i1 = lengthof $r0;

        $i1 = $i1 * 2;

        $r1 = new java.lang.StringBuilder;

        $i2 = lengthof $r0;

        $i2 = $i2 * 2;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i1);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i2);

        $i2 = 0;

     label1:
        $i3 = lengthof $r0;

        $i3 = $i3 * 2;

        $i3 = $i1 - $i3;

        if $i2 >= $i3 goto label2;

        varReplacer12659 = "0";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12659);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label4;

        $b4 = $r0[$i0];

        $s5 = $b4 & 255;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s5);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label3;

        varReplacer12660 = "0";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12660);

     label3:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static transient byte[] concatAll(byte[], byte[][])
    {
        byte[] $r0, $r2;
        byte[][] $r1;
        int $i0, $i1, $i2, $i3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[][];

        $i2 = lengthof $r1;

        $i1 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label2;

        $r2 = $r1[$i3];

        $i0 = lengthof $r2;

        $i1 = $i1 + $i0;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $r2 = newarray (byte)[$i1];

        $i1 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r2, 0, $i1);

        $i2 = lengthof $r1;

        $i3 = 0;

     label3:
        if $i3 >= $i2 goto label4;

        $r0 = $r1[$i3];

        $i0 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r2, $i1, $i0);

        $i0 = lengthof $r0;

        $i1 = $i1 + $i0;

        $i3 = $i3 + 1;

        goto label3;

     label4:
        return $r2;
    }

    public static long decimalSecondsToMilliseconds(java.lang.Double)
    {
        java.lang.Double $r0;
        double $d0;
        long $l0;

        $r0 := @parameter0: java.lang.Double;

        $d0 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();

        $d0 = $d0 * 1000.0;

        $l0 = (long) $d0;

        return $l0;
    }

    public static long decimalSecondsToMilliseconds(java.lang.Integer)
    {
        java.lang.Integer $r0;
        int $i0;
        long $l1;

        $r0 := @parameter0: java.lang.Integer;

        $i0 = virtualinvoke $r0.<java.lang.Integer: int intValue()>();

        $i0 = $i0 * 1000;

        $l1 = (long) $i0;

        return $l1;
    }

    public static long decimalSecondsToMilliseconds(java.lang.Long)
    {
        java.lang.Long $r0;
        long $l0;

        $r0 := @parameter0: java.lang.Long;

        $l0 = virtualinvoke $r0.<java.lang.Long: long longValue()>();

        $l0 = $l0 * 1000L;

        return $l0;
    }

    public static long decimalSecondsToMilliseconds(java.lang.String)
    {
        java.lang.String $r0;
        java.math.BigDecimal $r1;
        long $l0;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.math.BigDecimal;

     label1:
        specialinvoke $r1.<java.math.BigDecimal: void <init>(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.math.BigDecimal: java.math.BigDecimal movePointRight(int)>(3);

        $l0 = virtualinvoke $r1.<java.math.BigDecimal: long longValue()>();

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        return -1L;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static byte[] decodeBase64(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r1 = staticinvoke <org.mozilla.apache.commons.codec.binary.Base64: byte[] decodeBase64(byte[])>($r1);

        return $r1;
    }

    public static byte[] decodeFriendlyBase32(java.lang.String)
    {
        java.lang.String $r0;
        org.mozilla.apache.commons.codec.binary.Base32 $r1;
        java.util.Locale $r2;
        byte[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.mozilla.apache.commons.codec.binary.Base32;

        specialinvoke $r1.<org.mozilla.apache.commons.codec.binary.Base32: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(56, 108);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(57, 111);

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        $r3 = virtualinvoke $r1.<org.mozilla.apache.commons.codec.binary.Base32: byte[] decode(java.lang.String)>($r0);

        return $r3;
    }

    public static java.lang.String decodeUTF8(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        byte $b3;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = virtualinvoke $r0.<java.lang.String: int codePointAt(int)>($i1);

        $b3 = (byte) $i2;

        $r1[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "UTF-8");

        return $r0;
    }

    public static java.util.Map extractURIComponents(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3;
        java.util.HashMap $r4;
        java.lang.String[] $r5, $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>($r0);

        if $i0 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("URI scheme does not match: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw $r2;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r0 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        $r5 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("&");

        $i0 = 0;

     label2:
        $i1 = lengthof $r5;

        if $i0 >= $i1 goto label6;

        $r0 = $r5[$i0];

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 == 0 goto label3;

        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("=", 2);

        $i1 = lengthof $r6;

        lookupswitch($i1)
        {
            case 0: goto label3;
            case 1: goto label4;
            case 2: goto label5;
            default: goto label3;
        };

     label3:
        $i0 = $i0 + 1;

        goto label2;

     label4:
        $r0 = $r6[0];

        $r0 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String)>($r0);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, null);

        goto label3;

     label5:
        $r0 = $r6[0];

        $r0 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String)>($r0);

        $r1 = $r6[1];

        $r1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String)>($r1);

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        goto label3;

     label6:
        return $r4;
    }

    public static java.lang.String formatDuration(long, long)
    {
        long $l0, $l1;
        java.text.DecimalFormat $r0;
        java.lang.String $r1;
        double $d0;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l0 = $l1 - $l0;

        $r0 = new java.text.DecimalFormat;

        specialinvoke $r0.<java.text.DecimalFormat: void <init>(java.lang.String)>("#0.00 seconds");

        $d0 = (double) $l0;

        $d0 = $d0 / 1000.0;

        $r1 = virtualinvoke $r0.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        return $r1;
    }

    public static java.math.BigInteger generateBigIntegerLessThan(java.math.BigInteger)
    {
        java.math.BigInteger $r0, $r1;
        int $i0;
        double $d0;
        byte[] $r2;

        $r0 := @parameter0: java.math.BigInteger;

        $i0 = virtualinvoke $r0.<java.math.BigInteger: int bitLength()>();

        $d0 = (double) $i0;

        $d0 = $d0 / 8.0;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d0;

        $r1 = new java.math.BigInteger;

        $r2 = staticinvoke <org.mozilla.gecko.sync.Utils: byte[] generateRandomBytes(int)>($i0);

        specialinvoke $r1.<java.math.BigInteger: void <init>(byte[])>($r2);

        $r0 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger mod(java.math.BigInteger)>($r0);

        return $r0;
    }

    public static java.lang.String generateGuid()
    {
        byte[] $r0;
        java.lang.String $r1, varReplacer3617, varReplacer3618, varReplacer3620, varReplacer3621;
        int varReplacer3619, varReplacer3622;

        nop;

        varReplacer3619 = 9;

        $r0 = staticinvoke <org.mozilla.gecko.sync.Utils: byte[] generateRandomBytes(int)>(varReplacer3619);

        varReplacer3622 = 0;

        $r0 = staticinvoke <org.mozilla.apache.commons.codec.binary.Base64: byte[] encodeBase64(byte[],boolean)>($r0, varReplacer3622);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r0);

        varReplacer3617 = "+";

        varReplacer3618 = "-";

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer3617, varReplacer3618);

        varReplacer3620 = "/";

        varReplacer3621 = "_";

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer3620, varReplacer3621);

        return $r1;
    }

    public static byte[] generateRandomBytes(int)
    {
        int $i0;
        byte[] $r0;
        java.security.SecureRandom $r1;

        nop;

        $i0 := @parameter0: int;

        $r0 = newarray (byte)[9];

        $r1 = <org.mozilla.gecko.sync.Utils: java.security.SecureRandom sharedSecureRandom>;

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0);

        return $r0;
    }

    public static java.lang.String getLanguageTag(java.util.Locale)
    {
        java.util.Locale $r0;
        java.lang.String $r1, $r2, varReplacer10990, varReplacer10991, varReplacer10992, varReplacer10993, varReplacer10994;
        boolean $z0;
        java.lang.StringBuilder $r3;

        nop;

        $r0 := @parameter0: java.util.Locale;

        $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getLanguage()>();

        $r2 = $r1;

        varReplacer10994 = "iw";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer10994);

        if $z0 == 0 goto label2;

        $r2 = "he";

     label1:
        $r1 = virtualinvoke $r0.<java.util.Locale: java.lang.String getCountry()>();

        varReplacer10993 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer10993);

        if $z0 == 0 goto label4;

        return $r2;

     label2:
        varReplacer10990 = "in";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer10990);

        if $z0 == 0 goto label3;

        $r2 = "id";

        goto label1;

     label3:
        varReplacer10991 = "ji";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer10991);

        if $z0 == 0 goto label1;

        $r2 = "yi";

        goto label1;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer10992 = "-";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer10992);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String getPrefsPath(java.lang.String, java.lang.String, java.lang.String, java.lang.String, long) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, $r1, $r2, $r3, varReplacer11173, varReplacer11175, varReplacer11176, varReplacer11177, varReplacer11178;
        long $l0, varReplacer11174;
        java.lang.StringBuilder $r4;
        byte $b1;
        int varReplacer11171, varReplacer11172, varReplacer11179, varReplacer11180;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $l0 := @parameter4: long;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer11177 = ":";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer11177);

        $r1 = staticinvoke <org.mozilla.gecko.sync.Utils: java.lang.String usernameFromAccount(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <org.mozilla.gecko.sync.Utils: java.lang.String sha1Base32(java.lang.String)>($r1);

        $b1 = 1;

        goto label1;

     label1:
        varReplacer11171 = 46;

        varReplacer11172 = 33;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(varReplacer11171, varReplacer11172);

        varReplacer11179 = 32;

        varReplacer11180 = 33;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(char,char)>(varReplacer11179, varReplacer11180);

        $r4 = new java.lang.StringBuilder;

        varReplacer11175 = "sync.prefs.";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer11175);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer11173 = ".";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer11173);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer11176 = ".";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer11176);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer11178 = ".";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer11178);

        varReplacer11174 = 1L;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(varReplacer11174);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static android.content.SharedPreferences getSharedPreferences(android.content.Context, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r3, $r4, varReplacer11160, varReplacer11161;
        long $l0, varReplacer11162;
        android.content.SharedPreferences $r5;
        int varReplacer11159;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.String;

        $l0 := @parameter5: long;

        varReplacer11160 = "jp.co.jmas.full.KAITO";

        varReplacer11161 = "default";

        varReplacer11162 = 1L;

        $r1 = staticinvoke <org.mozilla.gecko.sync.Utils: java.lang.String getPrefsPath(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>(varReplacer11160, $r2, $r3, varReplacer11161, varReplacer11162);

        varReplacer11159 = 0;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r1, varReplacer11159);

        return $r5;
    }

    public static java.util.Collection getStagesToSyncFromBundle(java.util.Collection, android.os.Bundle)
    {
        android.os.Bundle $r0;
        java.util.Collection $r1;
        java.lang.String $r2, $r3;
        java.util.ArrayList $r4, $r8;
        org.mozilla.gecko.sync.ExtendedJSONObject $r5;
        org.json.simple.JSONObject $r6;
        java.util.Set $r7;
        java.lang.StringBuilder $r9;
        java.util.HashSet $r10, $r11;
        java.lang.Exception $r12, $r13;

        $r1 := @parameter0: java.util.Collection;

        $r0 := @parameter1: android.os.Bundle;

        if $r0 != null goto label01;

        return $r1;

     label01:
        $r2 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("sync");

        $r3 = virtualinvoke $r0.<android.os.Bundle: java.lang.String getString(java.lang.String)>("skip");

        if $r2 != null goto label02;

        if $r3 == null goto label15;

     label02:
        if $r2 == null goto label10;

        $r4 = new java.util.ArrayList;

     label03:
        $r5 = staticinvoke <org.mozilla.gecko.sync.ExtendedJSONObject: org.mozilla.gecko.sync.ExtendedJSONObject parseJSONObject(java.lang.String)>($r2);

        $r6 = $r5.<org.mozilla.gecko.sync.ExtendedJSONObject: org.json.simple.JSONObject object>;

        $r7 = virtualinvoke $r6.<org.json.simple.JSONObject: java.util.Set keySet()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

     label04:
        if $r3 == null goto label12;

        $r8 = new java.util.ArrayList;

     label05:
        $r5 = staticinvoke <org.mozilla.gecko.sync.ExtendedJSONObject: org.mozilla.gecko.sync.ExtendedJSONObject parseJSONObject(java.lang.String)>($r3);

        $r6 = $r5.<org.mozilla.gecko.sync.ExtendedJSONObject: org.json.simple.JSONObject object>;

        $r7 = virtualinvoke $r6.<org.json.simple.JSONObject: java.util.Set keySet()>();

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r7);

     label06:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Asked to sync \'");

        $r3 = staticinvoke <org.mozilla.gecko.sync.Utils: java.lang.String toCommaSeparatedString(java.util.Collection)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' and to skip \'");

        $r3 = staticinvoke <org.mozilla.gecko.sync.Utils: java.lang.String toCommaSeparatedString(java.util.Collection)>($r8);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.mozilla.gecko.background.common.log.Logger: void info(java.lang.String,java.lang.String)>("Utils", $r3);

        if $r8 != null goto label13;

        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

     label07:
        if $r4 != null goto label14;

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>(java.util.Collection)>($r1);

     label08:
        interfaceinvoke $r11.<java.util.Collection: boolean retainAll(java.util.Collection)>($r1);

        interfaceinvoke $r11.<java.util.Collection: boolean removeAll(java.util.Collection)>($r10);

        return $r11;

     label09:
        $r12 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Got exception parsing stages to sync: \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.mozilla.gecko.background.common.log.Logger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>("Utils", $r2, $r12);

     label10:
        $r4 = null;

        goto label04;

     label11:
        $r13 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Got exception parsing stages to skip: \'");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.mozilla.gecko.background.common.log.Logger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>("Utils", $r3, $r13);

     label12:
        $r8 = null;

        goto label06;

     label13:
        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>(java.util.Collection)>($r8);

        goto label07;

     label14:
        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>(java.util.Collection)>($r4);

        goto label08;

     label15:
        return $r1;

        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label11;
    }

    public static byte[] hex2Byte(java.lang.String)
    {
        java.lang.String $r0, $r3, varReplacer12594;
        int $i0, $i1, $i2, varReplacer12595;
        java.lang.StringBuilder $r1;
        byte[] $r2;
        byte $b3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 % 2;

        if $i0 != 1 goto label1;

        $r1 = new java.lang.StringBuilder;

        varReplacer12594 = "0";

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer12594);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r2 = newarray (byte)[$i0];

        $i0 = 0;

     label2:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $i1 = $i0 * 2;

        $i2 = $i0 * 2;

        $i2 = $i2 + 2;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        varReplacer12595 = 16;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, varReplacer12595);

        $b3 = (byte) $i1;

        $r2[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return $r2;
    }

    public static byte[] hex2Byte(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        byte[] $r1, $r2;
        byte[][] $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <org.mozilla.gecko.sync.Utils: byte[] hex2Byte(java.lang.String)>($r0);

        $i0 = lengthof $r1;

        if $i0 < 20 goto label1;

        return $r1;

     label1:
        $i0 = lengthof $r1;

        $i0 = 20 - $i0;

        $r2 = newarray (byte)[$i0];

        $r3 = newarray (byte[])[1];

        $r3[0] = $r1;

        $r1 = staticinvoke <org.mozilla.gecko.sync.Utils: byte[] concatAll(byte[],byte[][])>($r2, $r3);

        return $r1;
    }

    public static java.lang.String millisecondsToDecimalSecondsString(long)
    {
        long $l0;
        java.math.BigDecimal $r0;
        java.lang.String $r1;

        $l0 := @parameter0: long;

        $r0 = new java.math.BigDecimal;

        specialinvoke $r0.<java.math.BigDecimal: void <init>(long)>($l0);

        $r0 = virtualinvoke $r0.<java.math.BigDecimal: java.math.BigDecimal movePointLeft(int)>(3);

        $r1 = virtualinvoke $r0.<java.math.BigDecimal: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String nodeWeaveURL(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.StringBuilder $r2;
        boolean $z0;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/node/weave");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r1 != null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("https://auth.services.mozilla.com/user/1.0/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user/1.0/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String obfuscateEmail(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[^@\\.]", "X");

        return $r0;
    }

    public static void putStageNamesToSync(android.os.Bundle, java.lang.String[], java.lang.String[])
    {
        android.os.Bundle $r0;
        java.lang.String[] $r1, $r2;
        org.mozilla.gecko.sync.ExtendedJSONObject $r3;
        int $i0, $i1;
        java.lang.String $r4;
        java.lang.Integer $r5;
        org.json.simple.JSONObject $r6;

        nop;

        $r0 := @parameter0: android.os.Bundle;

        $r1 := @parameter1: java.lang.String[];

        $r2 := @parameter2: java.lang.String[];

        if $r0 != null goto label1;

        return;

     label1:
        goto label2;

     label2:
        goto label3;

     label3:
        return;
    }

    public static void reseedSharedRandom()
    {
        java.security.SecureRandom $r0, $r2;
        byte[] $r1;

        $r0 = <org.mozilla.gecko.sync.Utils: java.security.SecureRandom sharedSecureRandom>;

        $r2 = <org.mozilla.gecko.sync.Utils: java.security.SecureRandom sharedSecureRandom>;

        $r1 = virtualinvoke $r2.<java.security.SecureRandom: byte[] generateSeed(int)>(8);

        virtualinvoke $r0.<java.security.SecureRandom: void setSeed(byte[])>($r1);

        return;
    }

    public static boolean sameArrays(org.json.simple.JSONArray, org.json.simple.JSONArray)
    {
        org.json.simple.JSONArray $r0, $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: org.json.simple.JSONArray;

        $r1 := @parameter1: org.json.simple.JSONArray;

        if $r0 != $r1 goto label01;

        return 1;

     label01:
        if $r0 == null goto label02;

        if $r1 != null goto label03;

     label02:
        return 0;

     label03:
        $i0 = virtualinvoke $r0.<org.json.simple.JSONArray: int size()>();

        $i1 = virtualinvoke $r1.<org.json.simple.JSONArray: int size()>();

        if $i0 == $i1 goto label04;

        return 0;

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label11;

        $r2 = virtualinvoke $r0.<org.json.simple.JSONArray: java.lang.Object get(int)>($i1);

        $r3 = virtualinvoke $r1.<org.json.simple.JSONArray: java.lang.Object get(int)>($i1);

        if $r2 != $r3 goto label07;

        $z0 = 1;

     label06:
        if $z0 != 0 goto label10;

        return 0;

     label07:
        if $r2 == null goto label08;

        if $r3 != null goto label09;

     label08:
        $z0 = 0;

        goto label06;

     label09:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        goto label06;

     label10:
        $i1 = $i1 + 1;

        goto label05;

     label11:
        return 1;
    }

    private static byte[] sha1(java.lang.String) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, varReplacer11181, varReplacer11182, varReplacer11183, varReplacer11184, varReplacer11185;
        byte[] $r1;
        java.lang.LinkageError $r2;
        java.security.MessageDigest $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer11182 = "UTF-8";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer11182);

     label1:
        $r1 = staticinvoke <org.mozilla.gecko.background.nativecode.NativeCrypto: byte[] sha1(byte[])>($r1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        varReplacer11184 = "Utils";

        varReplacer11185 = "Got throwable stretching password using native sha1 implementation; ignoring and using Java implementation.";

        staticinvoke <org.mozilla.gecko.background.common.log.Logger: void warn(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer11184, varReplacer11185, $r2);

        varReplacer11181 = "SHA-1";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11181);

        varReplacer11183 = "UTF-8";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer11183);

        $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1);

        return $r1;

        catch java.lang.LinkageError from label1 to label2 with label3;
    }

    private static java.lang.String sha1Base32(java.lang.String) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        java.lang.String $r0;
        org.mozilla.apache.commons.codec.binary.Base32 $r1;
        byte[] $r2;
        java.util.Locale $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.mozilla.apache.commons.codec.binary.Base32;

        specialinvoke $r1.<org.mozilla.apache.commons.codec.binary.Base32: void <init>()>();

        $r2 = staticinvoke <org.mozilla.gecko.sync.Utils: byte[] sha1(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<org.mozilla.apache.commons.codec.binary.Base32: java.lang.String encodeAsString(byte[])>($r2);

        $r3 = <java.util.Locale: java.util.Locale US>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        return $r0;
    }

    public static byte[] sha256(byte[]) throws java.security.NoSuchAlgorithmException
    {
        byte[] $r0;
        java.security.MessageDigest $r1;
        java.lang.String varReplacer12661;

        nop;

        $r0 := @parameter0: byte[];

        varReplacer12661 = "SHA-256";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12661);

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

        return $r0;
    }

    public static transient void throwIfNull(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        java.lang.String varReplacer12658;

        nop;

        $r0 := @parameter0: java.lang.Object[];

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r0[$i1];

        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer12658 = "object must not be null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12658);

        throw $r2;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static java.lang.String toCommaSeparatedString(java.util.Collection)
    {
        java.util.Collection $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.util.Collection;

        $r1 = staticinvoke <org.mozilla.gecko.sync.Utils: java.lang.String toDelimitedString(java.lang.String,java.util.Collection)>(", ", $r0);

        return $r1;
    }

    public static java.lang.String toDelimitedString(java.lang.String, java.util.Collection)
    {
        java.lang.String $r0, $r5;
        java.util.Collection $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Collection;

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

        $i1 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        goto label3;

     label4:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static java.lang.String usernameFromAccount(java.lang.String) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, varReplacer11163, varReplacer11164, varReplacer11165;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.util.Locale $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        varReplacer11164 = "";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer11164);

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        varReplacer11165 = "No account name provided.";

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer11165);

        throw $r1;

     label2:
        varReplacer11163 = "^[A-Za-z0-9._-]+$";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean matches(java.lang.String)>(varReplacer11163);

        if $z0 == 0 goto label3;

        $r2 = <java.util.Locale: java.util.Locale US>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        return $r0;

     label3:
        $r2 = <java.util.Locale: java.util.Locale US>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r0 = staticinvoke <org.mozilla.gecko.sync.Utils: java.lang.String sha1Base32(java.lang.String)>($r0);

        return $r0;
    }
}
