public class com.nifty.cloud.mb.NCMB extends java.lang.Object
{
    public static int LOG_LEVEL_DEBUG;
    public static int LOG_LEVEL_ERROR;
    public static int LOG_LEVEL_INFO;
    public static int LOG_LEVEL_NONE;
    public static int LOG_LEVEL_VERBOSE;
    public static int LOG_LEVEL_WARNING;
    private static final java.lang.String TAG;
    static android.content.Context applicationContext;
    static java.lang.String applicationKey;
    static java.lang.String clientKey;
    private static final java.text.DateFormat dateFormat;
    static com.nifty.cloud.mb.EventuallyManager eventuallyManager;
    private static int logLevel;
    static int maxKeyValueCacheBytes;
    static int maxKeyValueCacheFiles;
    static int maxNCMBFileSize;
    static boolean responseValidationFlag;

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0;
        int $i0, varReplacer157, varReplacer158, varReplacer159, varReplacer160, varReplacer161, varReplacer163, varReplacer165, varReplacer166, varReplacer167, varReplacer168, varReplacer169;
        java.util.Locale $r1;
        java.util.SimpleTimeZone $r2;
        java.lang.String varReplacer162, varReplacer164;

        nop;

        varReplacer166 = 0;

        <com.nifty.cloud.mb.NCMB: boolean responseValidationFlag> = varReplacer166;

        varReplacer160 = 2;

        <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_VERBOSE> = varReplacer160;

        varReplacer168 = 3;

        <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_DEBUG> = varReplacer168;

        varReplacer167 = 4;

        <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_INFO> = varReplacer167;

        varReplacer158 = 5;

        <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_WARNING> = varReplacer158;

        varReplacer169 = 6;

        <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_ERROR> = varReplacer169;

        varReplacer157 = 2147483647;

        <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_NONE> = varReplacer157;

        $i0 = <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_ERROR>;

        <com.nifty.cloud.mb.NCMB: int logLevel> = $i0;

        varReplacer159 = 2097152;

        <com.nifty.cloud.mb.NCMB: int maxKeyValueCacheBytes> = varReplacer159;

        varReplacer165 = 1000;

        <com.nifty.cloud.mb.NCMB: int maxKeyValueCacheFiles> = varReplacer165;

        varReplacer161 = 104857600;

        <com.nifty.cloud.mb.NCMB: int maxNCMBFileSize> = varReplacer161;

        $r0 = new java.text.SimpleDateFormat;

        $r1 = <java.util.Locale: java.util.Locale JAPAN>;

        varReplacer162 = "yyyy-MM-dd\'T\'HH:mm:ss.SSS\'Z\'";

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(varReplacer162, $r1);

        $r2 = new java.util.SimpleTimeZone;

        varReplacer163 = 0;

        varReplacer164 = "GMT";

        specialinvoke $r2.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(varReplacer163, varReplacer164);

        virtualinvoke $r0.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        <com.nifty.cloud.mb.NCMB: java.text.DateFormat dateFormat> = $r0;

        return;
    }

    public void <init>()
    {
        com.nifty.cloud.mb.NCMB $r0;

        $r0 := @this: com.nifty.cloud.mb.NCMB;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Number addNumbers(java.lang.Number, java.lang.Number)
    {
        java.lang.Number $r0, $r1;
        boolean $z0;
        double $d0, $d1;
        java.lang.Double $r2;
        long $l0, $l1;
        java.lang.Long $r3;
        float $f0, $f1;
        java.lang.Float $r4;
        short $s2, $s3;
        int $i4, $i7;
        java.lang.Integer $r5;
        byte $b5, $b6;

        $r0 := @parameter0: java.lang.Number;

        $r1 := @parameter1: java.lang.Number;

        $z0 = $r0 instanceof java.lang.Double;

        if $z0 == 0 goto label1;

        $d0 = virtualinvoke $r0.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke $r1.<java.lang.Number: double doubleValue()>();

        $d0 = $d0 + $d1;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r2;

     label1:
        $z0 = $r0 instanceof java.lang.Long;

        if $z0 == 0 goto label2;

        $l0 = virtualinvoke $r0.<java.lang.Number: long longValue()>();

        $l1 = virtualinvoke $r1.<java.lang.Number: long longValue()>();

        $l0 = $l0 + $l1;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r3;

     label2:
        $z0 = $r0 instanceof java.lang.Float;

        if $z0 == 0 goto label3;

        $f0 = virtualinvoke $r0.<java.lang.Number: float floatValue()>();

        $f1 = virtualinvoke $r1.<java.lang.Number: float floatValue()>();

        $f0 = $f0 + $f1;

        $r4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r4;

     label3:
        $z0 = $r0 instanceof java.lang.Short;

        if $z0 == 0 goto label4;

        $s2 = virtualinvoke $r0.<java.lang.Number: short shortValue()>();

        $s3 = virtualinvoke $r1.<java.lang.Number: short shortValue()>();

        $i4 = $s2 + $s3;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r5;

     label4:
        $z0 = $r0 instanceof java.lang.Byte;

        if $z0 == 0 goto label5;

        $b5 = virtualinvoke $r0.<java.lang.Number: byte byteValue()>();

        $b6 = virtualinvoke $r1.<java.lang.Number: byte byteValue()>();

        $i4 = $b5 + $b6;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r5;

     label5:
        $i4 = virtualinvoke $r0.<java.lang.Number: int intValue()>();

        $i7 = virtualinvoke $r1.<java.lang.Number: int intValue()>();

        $i4 = $i4 + $i7;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        return $r5;
    }

    static void addToStringer(org.json.JSONStringer, java.lang.Object) throws org.json.JSONException
    {
        org.json.JSONStringer $r0;
        java.lang.Object $r1;
        java.util.ArrayList $r2;
        boolean $z0;
        org.json.JSONObject $r3;
        java.util.Iterator $r4;
        java.lang.String $r5;
        org.json.JSONArray $r6;
        int $i0, $i1;

        nop;

        $r0 := @parameter0: org.json.JSONStringer;

        $r1 := @parameter1: java.lang.Object;

        $z0 = $r1 instanceof org.json.JSONObject;

        if $z0 == 0 goto label5;

        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer object()>();

        $r3 = (org.json.JSONObject) $r1;

        $r4 = virtualinvoke $r3.<org.json.JSONObject: java.util.Iterator keys()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

        $r4 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer endObject()>();

        return;

     label3:
        $r1 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r1;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        goto label1;

     label4:
        $r1 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r1;

        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer key(java.lang.String)>($r5);

        $r1 = virtualinvoke $r3.<org.json.JSONObject: java.lang.Object opt(java.lang.String)>($r5);

        staticinvoke <com.nifty.cloud.mb.NCMB: void addToStringer(org.json.JSONStringer,java.lang.Object)>($r0, $r1);

        goto label2;

     label5:
        $z0 = $r1 instanceof org.json.JSONArray;

        if $z0 == 0 goto label8;

        $r6 = (org.json.JSONArray) $r1;

        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer array()>();

        $i0 = 0;

     label6:
        $i1 = virtualinvoke $r6.<org.json.JSONArray: int length()>();

        if $i0 < $i1 goto label7;

        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer endArray()>();

        return;

     label7:
        $r1 = virtualinvoke $r6.<org.json.JSONArray: java.lang.Object get(int)>($i0);

        staticinvoke <com.nifty.cloud.mb.NCMB: void addToStringer(org.json.JSONStringer,java.lang.Object)>($r0, $r1);

        $i0 = $i0 + 1;

        goto label6;

     label8:
        virtualinvoke $r0.<org.json.JSONStringer: org.json.JSONStringer value(java.lang.Object)>($r1);

        return;
    }

    static void checkContext()
    {
        android.content.Context $r0;
        java.lang.RuntimeException $r1;
        java.lang.String varReplacer649;

        nop;

        $r0 = <com.nifty.cloud.mb.NCMB: android.content.Context applicationContext>;

        if $r0 != null goto label1;

        $r1 = new java.lang.RuntimeException;

        varReplacer649 = "applicationContext is null. You must call NCMB.initialize(context, applicationId, clientKey) before using the NCMB library.";

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer649);

        throw $r1;

     label1:
        return;
    }

    static void clearCacheDir()
    {
        java.io.File $r0;
        java.io.File[] $r1;
        int $i0, $i1;

        $r0 = staticinvoke <com.nifty.cloud.mb.NCMB: java.io.File getKeyValueCacheDir()>();

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = 0;

     label2:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label3;

        $r0 = $r1[$i0];

        virtualinvoke $r0.<java.io.File: boolean delete()>();

        $i0 = $i0 + 1;

        goto label2;

     label3:
        return;
    }

    static void clearFromKeyValueCache(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.nifty.cloud.mb.NCMB: java.io.File getKeyValueCacheFile(java.lang.String)>($r0);

        if $r1 == null goto label1;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    static java.util.List convertArrayToList(org.json.JSONArray)
    {
        org.json.JSONArray $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;

        nop;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 < $i1 goto label2;

        return $r1;

     label2:
        $r2 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object opt(int)>($i0);

        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: java.lang.Object decodeJSONObject(java.lang.Object)>($r2);

        if $r3 == null goto label4;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        goto label3;
    }

    static java.util.Map convertJSONObjectToMap(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.util.HashMap $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r5;
        java.lang.String $r4;
        org.json.JSONArray $r6;
        java.util.List $r7;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r1;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object opt(java.lang.String)>($r4);

        $r5 = staticinvoke <com.nifty.cloud.mb.NCMB: java.lang.Object decodeJSONObject(java.lang.Object)>($r3);

        if $r5 == null goto label3;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

        goto label1;

     label3:
        $z0 = $r3 instanceof org.json.JSONArray;

        if $z0 == 0 goto label4;

        $r6 = (org.json.JSONArray) $r3;

        $r7 = staticinvoke <com.nifty.cloud.mb.NCMB: java.util.List convertArrayToList(org.json.JSONArray)>($r6);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r7);

        goto label1;

     label4:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        goto label1;
    }

    static java.io.File createKeyValueCacheFile(java.lang.String)
    {
        java.lang.String $r0, $r3;
        java.lang.StringBuilder $r1;
        java.util.Date $r2;
        long $l0;
        java.io.File $r4, $r5;
        int varReplacer2218;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        varReplacer2218 = 46;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer2218);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.io.File;

        $r5 = staticinvoke <com.nifty.cloud.mb.NCMB: java.io.File getKeyValueCacheDir()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r0);

        return $r4;
    }

    static org.json.JSONObject dateToObject(java.util.Date)
    {
        java.util.Date $r0;
        org.json.JSONException $r1;
        org.json.JSONObject $r2;
        java.lang.String $r3, varReplacer695, varReplacer696, varReplacer697;
        java.lang.RuntimeException $r4;

        nop;

        $r0 := @parameter0: java.util.Date;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: java.lang.String encodeDate(java.util.Date)>($r0);

     label1:
        varReplacer695 = "__type";

        varReplacer696 = "Date";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer695, varReplacer696);

        varReplacer697 = "iso";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer697, $r3);

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r4;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    static java.lang.Object decodeJSONObject(java.lang.Object)
    {
        java.lang.Object $r0;
        org.json.JSONException $r1;
        boolean $z0;
        org.json.JSONObject $r2;
        java.lang.String $r3, $r7, varReplacer1006, varReplacer1007, varReplacer1008, varReplacer1009, varReplacer1010, varReplacer1011, varReplacer1012, varReplacer1014, varReplacer1015, varReplacer1017, varReplacer1019, varReplacer1020, varReplacer1021, varReplacer1024, varReplacer1025, varReplacer1027, varReplacer1028;
        java.util.Map $r4;
        java.util.Date $r5;
        byte[] $r6;
        com.nifty.cloud.mb.NCMBObject $r8;
        com.nifty.cloud.mb.NCMBFile $r9;
        double $d0, $d1;
        com.nifty.cloud.mb.NCMBGeoPoint $r10;
        java.lang.RuntimeException $r11;
        com.nifty.cloud.mb.NCMBRelation $r12;
        null_type varReplacer1013, varReplacer1018, varReplacer1022, varReplacer1023, varReplacer1029;
        int varReplacer1016, varReplacer1026;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof org.json.JSONObject;

        if $z0 == 0 goto label01;

        $r2 = (org.json.JSONObject) $r0;

        varReplacer1021 = "__type";

        varReplacer1022 = null;

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer1021, varReplacer1022);

        if $r3 != null goto label02;

        $r4 = staticinvoke <com.nifty.cloud.mb.NCMB: java.util.Map convertJSONObjectToMap(org.json.JSONObject)>($r2);

        return $r4;

     label01:
        varReplacer1029 = null;

        return varReplacer1029;

     label02:
        varReplacer1027 = "Date";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1027);

        if $z0 == 0 goto label03;

        varReplacer1010 = "iso";

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>(varReplacer1010);

        $r5 = staticinvoke <com.nifty.cloud.mb.NCMB: java.util.Date parseDate(java.lang.String)>($r3);

        return $r5;

     label03:
        varReplacer1019 = "Bytes";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1019);

        if $z0 == 0 goto label04;

        varReplacer1024 = "base64";

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>(varReplacer1024);

        varReplacer1016 = 0;

        $r6 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r3, varReplacer1016);

        return $r6;

     label04:
        varReplacer1007 = "Pointer";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1007);

        if $z0 == 0 goto label05;

        varReplacer1025 = "className";

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>(varReplacer1025);

        varReplacer1011 = "objectId";

        $r7 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>(varReplacer1011);

        $r8 = staticinvoke <com.nifty.cloud.mb.NCMBObject: com.nifty.cloud.mb.NCMBObject createWithoutData(java.lang.String,java.lang.String)>($r3, $r7);

        return $r8;

     label05:
        varReplacer1015 = "File";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1015);

        if $z0 == 0 goto label06;

        $r9 = new com.nifty.cloud.mb.NCMBFile;

        varReplacer1008 = "fileName";

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>(varReplacer1008);

        specialinvoke $r9.<com.nifty.cloud.mb.NCMBFile: void <init>(java.lang.String)>($r3);

        return $r9;

     label06:
        varReplacer1028 = "GeoPoint";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1028);

        if $z0 == 0 goto label10;

     label07:
        varReplacer1009 = "latitude";

        $d0 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>(varReplacer1009);

        varReplacer1006 = "longitude";

        $d1 = virtualinvoke $r2.<org.json.JSONObject: double getDouble(java.lang.String)>(varReplacer1006);

     label08:
        $r10 = new com.nifty.cloud.mb.NCMBGeoPoint;

        specialinvoke $r10.<com.nifty.cloud.mb.NCMBGeoPoint: void <init>(double,double)>($d0, $d1);

        return $r10;

     label09:
        $r1 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r11;

     label10:
        varReplacer1020 = "Object";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1020);

        if $z0 == 0 goto label11;

        varReplacer1012 = "className";

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>(varReplacer1012);

        varReplacer1013 = null;

        $r8 = staticinvoke <com.nifty.cloud.mb.NCMBObject: com.nifty.cloud.mb.NCMBObject createWithoutData(java.lang.String,java.lang.String)>($r3, varReplacer1013);

        varReplacer1026 = 1;

        virtualinvoke $r8.<com.nifty.cloud.mb.NCMBObject: void mergeAfterFetch(org.json.JSONObject,boolean)>($r2, varReplacer1026);

        return $r8;

     label11:
        varReplacer1014 = "Relation";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1014);

        if $z0 == 0 goto label12;

        $r12 = new com.nifty.cloud.mb.NCMBRelation;

        varReplacer1017 = "className";

        varReplacer1018 = null;

        $r3 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer1017, varReplacer1018);

        specialinvoke $r12.<com.nifty.cloud.mb.NCMBRelation: void <init>(java.lang.String)>($r3);

        return $r12;

     label12:
        varReplacer1023 = null;

        return varReplacer1023;

        catch org.json.JSONException from label07 to label08 with label09;
    }

    public static void enableResponseValidation(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.nifty.cloud.mb.NCMB: boolean responseValidationFlag> = $z0;

        return;
    }

    static org.json.JSONArray encodeAsJSONArray(java.util.List, boolean)
    {
        java.util.List $r0;
        boolean $z0, $z1;
        org.json.JSONArray $r1;
        java.util.Iterator $r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;
        java.lang.String $r7, varReplacer813;

        nop;

        $r0 := @parameter0: java.util.List;

        $z0 := @parameter1: boolean;

        $r1 = new org.json.JSONArray;

        specialinvoke $r1.<org.json.JSONArray: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

        return $r1;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = staticinvoke <com.nifty.cloud.mb.NCMB: boolean isValidType(java.lang.Object)>($r3);

        if $z1 != 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        varReplacer813 = "invalid type for value in array: ";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer813);

        $r6 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r4;

     label3:
        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: java.lang.Object maybeEncodeJSONObject(java.lang.Object,boolean)>($r3, $z0);

        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r3);

        goto label1;
    }

    static java.lang.String encodeDate(java.util.Date)
    {
        java.util.Date $r0;
        java.lang.String $r1;
        java.text.DateFormat $r2;

        nop;

        $r0 := @parameter0: java.util.Date;

        $r2 = <com.nifty.cloud.mb.NCMB: java.text.DateFormat dateFormat>;

        $r1 = virtualinvoke $r2.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r0);

        return $r1;
    }

    static org.json.JSONObject encodeJSONObject(java.lang.Object, boolean)
    {
        boolean $z0, $z1;
        org.json.JSONException $r0;
        java.lang.Object $r1;
        java.util.Date $r2;
        org.json.JSONObject $r3;
        byte[] $r4;
        java.lang.String $r5, varReplacer800, varReplacer801, varReplacer802, varReplacer803, varReplacer804, varReplacer805, varReplacer807, varReplacer808, varReplacer809, varReplacer811, varReplacer812;
        java.lang.RuntimeException $r6;
        com.nifty.cloud.mb.NCMBFile $r7;
        java.lang.IllegalArgumentException $r8;
        com.nifty.cloud.mb.NCMBObject $r9;
        com.nifty.cloud.mb.NCMBGeoPoint $r10;
        double $d0;
        com.nifty.cloud.mb.NCMBACL $r11;
        java.util.Map $r12;
        java.util.Set $r13;
        java.util.Iterator $r14;
        java.util.Map$Entry $r15;
        com.nifty.cloud.mb.NCMBRelation $r16;
        int varReplacer806;
        null_type varReplacer810;

        nop;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $z1 = $r1 instanceof java.util.Date;

        if $z1 == 0 goto label03;

        $r2 = (java.util.Date) $r1;

     label01:
        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: org.json.JSONObject dateToObject(java.util.Date)>($r2);

     label02:
        return $r3;

     label03:
        $z1 = $r1 instanceof byte[];

        if $z1 == 0 goto label09;

        $r3 = new org.json.JSONObject;

     label04:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        varReplacer808 = "__type";

        varReplacer809 = "Bytes";

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer808, varReplacer809);

     label05:
        $r4 = (byte[]) $r1;

     label06:
        varReplacer806 = 0;

        $r5 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r4, varReplacer806);

        varReplacer811 = "base64";

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer811, $r5);

     label07:
        return $r3;

     label08:
        $r0 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r0);

        throw $r6;

     label09:
        $z1 = $r1 instanceof com.nifty.cloud.mb.NCMBFile;

        if $z1 == 0 goto label12;

        $r7 = (com.nifty.cloud.mb.NCMBFile) $r1;

        $r3 = new org.json.JSONObject;

     label10:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        varReplacer801 = "__type";

        varReplacer802 = "File";

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer801, varReplacer802);

        $r5 = virtualinvoke $r7.<com.nifty.cloud.mb.NCMBFile: java.lang.String getName()>();

        varReplacer805 = "name";

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer805, $r5);

     label11:
        return $r3;

     label12:
        $z1 = $r1 instanceof com.nifty.cloud.mb.NCMBObject;

        if $z1 == 0 goto label18;

        if $z0 != 0 goto label15;

        $r8 = new java.lang.IllegalArgumentException;

     label13:
        varReplacer812 = "NCMBObjects not allowed here";

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer812);

     label14:
        throw $r8;

     label15:
        $r9 = (com.nifty.cloud.mb.NCMBObject) $r1;

     label16:
        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: org.json.JSONObject ncmbObjectToJSONPointer(com.nifty.cloud.mb.NCMBObject)>($r9);

     label17:
        return $r3;

     label18:
        $z1 = $r1 instanceof com.nifty.cloud.mb.NCMBGeoPoint;

        if $z1 == 0 goto label21;

        $r10 = (com.nifty.cloud.mb.NCMBGeoPoint) $r1;

        $r3 = new org.json.JSONObject;

     label19:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        varReplacer803 = "__type";

        varReplacer804 = "GeoPoint";

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer803, varReplacer804);

        $d0 = virtualinvoke $r10.<com.nifty.cloud.mb.NCMBGeoPoint: double getLatitude()>();

        varReplacer807 = "latitude";

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>(varReplacer807, $d0);

        $d0 = virtualinvoke $r10.<com.nifty.cloud.mb.NCMBGeoPoint: double getLongitude()>();

        varReplacer800 = "longitude";

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>(varReplacer800, $d0);

     label20:
        return $r3;

     label21:
        $z1 = $r1 instanceof com.nifty.cloud.mb.NCMBACL;

        if $z1 == 0 goto label24;

        $r11 = (com.nifty.cloud.mb.NCMBACL) $r1;

     label22:
        $r3 = virtualinvoke $r11.<com.nifty.cloud.mb.NCMBACL: org.json.JSONObject toJSONObject()>();

     label23:
        return $r3;

     label24:
        $z1 = $r1 instanceof java.util.Map;

        if $z1 == 0 goto label34;

        $r12 = (java.util.Map) $r1;

        $r3 = new org.json.JSONObject;

     label25:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label26:
        $z1 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

     label27:
        if $z1 == 0 goto label38;

     label28:
        $r1 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

     label29:
        $r15 = (java.util.Map$Entry) $r1;

     label30:
        $r1 = interfaceinvoke $r15.<java.util.Map$Entry: java.lang.Object getKey()>();

     label31:
        $r5 = (java.lang.String) $r1;

     label32:
        $r1 = interfaceinvoke $r15.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = staticinvoke <com.nifty.cloud.mb.NCMB: java.lang.Object maybeEncodeJSONObject(java.lang.Object,boolean)>($r1, $z0);

        virtualinvoke $r3.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r5, $r1);

     label33:
        goto label26;

     label34:
        $z0 = $r1 instanceof com.nifty.cloud.mb.NCMBRelation;

        if $z0 == 0 goto label37;

        $r16 = (com.nifty.cloud.mb.NCMBRelation) $r1;

     label35:
        $r3 = virtualinvoke $r16.<com.nifty.cloud.mb.NCMBRelation: org.json.JSONObject encodeToJSON()>();

     label36:
        return $r3;

     label37:
        varReplacer810 = null;

        return varReplacer810;

     label38:
        return $r3;

        catch org.json.JSONException from label01 to label02 with label08;
        catch org.json.JSONException from label04 to label05 with label08;
        catch org.json.JSONException from label06 to label07 with label08;
        catch org.json.JSONException from label10 to label11 with label08;
        catch org.json.JSONException from label13 to label14 with label08;
        catch org.json.JSONException from label16 to label17 with label08;
        catch org.json.JSONException from label19 to label20 with label08;
        catch org.json.JSONException from label22 to label23 with label08;
        catch org.json.JSONException from label25 to label27 with label08;
        catch org.json.JSONException from label28 to label29 with label08;
        catch org.json.JSONException from label30 to label31 with label08;
        catch org.json.JSONException from label32 to label33 with label08;
        catch org.json.JSONException from label35 to label36 with label08;
    }

    static java.lang.String encodeLatitude(com.nifty.cloud.mb.NCMBGeoPoint)
    {
        com.nifty.cloud.mb.NCMBGeoPoint $r0;
        double $d0;
        java.lang.String $r1;

        $r0 := @parameter0: com.nifty.cloud.mb.NCMBGeoPoint;

        $d0 = virtualinvoke $r0.<com.nifty.cloud.mb.NCMBGeoPoint: double getLatitude()>();

        $r1 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        return $r1;
    }

    static java.lang.String encodeLongitude(com.nifty.cloud.mb.NCMBGeoPoint)
    {
        com.nifty.cloud.mb.NCMBGeoPoint $r0;
        double $d0;
        java.lang.String $r1;

        $r0 := @parameter0: com.nifty.cloud.mb.NCMBGeoPoint;

        $d0 = virtualinvoke $r0.<com.nifty.cloud.mb.NCMBGeoPoint: double getLongitude()>();

        $r1 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($d0);

        return $r1;
    }

    static org.json.JSONObject geoPointToObject(com.nifty.cloud.mb.NCMBGeoPoint)
    {
        com.nifty.cloud.mb.NCMBGeoPoint $r0;
        org.json.JSONException $r1;
        org.json.JSONObject $r2;
        double $d0;
        java.lang.RuntimeException $r3;

        $r0 := @parameter0: com.nifty.cloud.mb.NCMBGeoPoint;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

     label1:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("__type", "GeoPoint");

        $d0 = virtualinvoke $r0.<com.nifty.cloud.mb.NCMBGeoPoint: double getLongitude()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("longitude", $d0);

        $d0 = virtualinvoke $r0.<com.nifty.cloud.mb.NCMBGeoPoint: double getLatitude()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("latitude", $d0);

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r3;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    static org.json.JSONObject geoPointToObjectWithinBox(com.nifty.cloud.mb.NCMBGeoPoint, com.nifty.cloud.mb.NCMBGeoPoint)
    {
        com.nifty.cloud.mb.NCMBGeoPoint $r0, $r1;
        org.json.JSONException $r2;
        org.json.JSONArray $r3;
        org.json.JSONObject $r4, $r5, $r6;
        java.lang.RuntimeException $r7;

        $r0 := @parameter0: com.nifty.cloud.mb.NCMBGeoPoint;

        $r1 := @parameter1: com.nifty.cloud.mb.NCMBGeoPoint;

        $r4 = new org.json.JSONObject;

        specialinvoke $r4.<org.json.JSONObject: void <init>()>();

        $r5 = staticinvoke <com.nifty.cloud.mb.NCMB: org.json.JSONObject geoPointToObject(com.nifty.cloud.mb.NCMBGeoPoint)>($r0);

        $r6 = staticinvoke <com.nifty.cloud.mb.NCMB: org.json.JSONObject geoPointToObject(com.nifty.cloud.mb.NCMBGeoPoint)>($r1);

        $r3 = new org.json.JSONArray;

        specialinvoke $r3.<org.json.JSONArray: void <init>()>();

        virtualinvoke $r3.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r5);

        virtualinvoke $r3.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r6);

     label1:
        virtualinvoke $r4.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("$box", $r3);

     label2:
        return $r4;

     label3:
        $r2 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r7;

        catch org.json.JSONException from label1 to label2 with label3;
    }

    static com.nifty.cloud.mb.EventuallyManager getEventuallyManager()
    {
        android.content.Context $r0;
        com.nifty.cloud.mb.EventuallyManager $r1;

        nop;

        $r1 = <com.nifty.cloud.mb.NCMB: com.nifty.cloud.mb.EventuallyManager eventuallyManager>;

        if $r1 != null goto label1;

        staticinvoke <com.nifty.cloud.mb.NCMB: void checkContext()>();

        $r1 = new com.nifty.cloud.mb.EventuallyManager;

        $r0 = <com.nifty.cloud.mb.NCMB: android.content.Context applicationContext>;

        specialinvoke $r1.<com.nifty.cloud.mb.EventuallyManager: void <init>(android.content.Context)>($r0);

        <com.nifty.cloud.mb.NCMB: com.nifty.cloud.mb.EventuallyManager eventuallyManager> = $r1;

     label1:
        $r1 = <com.nifty.cloud.mb.NCMB: com.nifty.cloud.mb.EventuallyManager eventuallyManager>;

        return $r1;
    }

    static long getKeyValueCacheAge(java.io.File)
    {
        java.io.File $r0;
        java.lang.String $r1;
        int $i0, varReplacer750, varReplacer751;
        long $l1, varReplacer752;
        java.lang.Throwable $r2;

        nop;

        $r0 := @parameter0: java.io.File;

        $r1 = virtualinvoke $r0.<java.io.File: java.lang.String getName()>();

     label1:
        varReplacer751 = 46;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(varReplacer751);

        varReplacer750 = 0;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(varReplacer750, $i0);

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r1);

     label2:
        return $l1;

     label3:
        $r2 := @caughtexception;

        varReplacer752 = 0L;

        return varReplacer752;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    static java.io.File getKeyValueCacheDir()
    {
        java.io.File $r0, $r2;
        android.content.Context $r1;
        boolean $z0;
        java.lang.RuntimeException $r3;
        java.lang.String varReplacer753, varReplacer754;

        nop;

        staticinvoke <com.nifty.cloud.mb.NCMB: void checkContext()>();

        $r1 = <com.nifty.cloud.mb.NCMB: android.content.Context applicationContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getCacheDir()>();

        $r0 = new java.io.File;

        varReplacer753 = "NCMBKeyValueCache";

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, varReplacer753);

        $z0 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.io.File: boolean mkdir()>();

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r3 = new java.lang.RuntimeException;

        varReplacer754 = "could not create NCMB cache directory";

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer754);

        throw $r3;

     label2:
        return $r0;
    }

    static java.io.File getKeyValueCacheFile(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.lang.StringBuilder $r1;
        java.io.File $r3;
        com.nifty.cloud.mb.NCMB$2 $r4;
        java.io.File[] $r5;
        int $i0, varReplacer748;
        null_type varReplacer749;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        varReplacer748 = 46;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(varReplacer748);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: java.io.File getKeyValueCacheDir()>();

        $r4 = new com.nifty.cloud.mb.NCMB$2;

        specialinvoke $r4.<com.nifty.cloud.mb.NCMB$2: void <init>(java.lang.String)>($r0);

        $r5 = virtualinvoke $r3.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>($r4);

        $i0 = lengthof $r5;

        if $i0 != 0 goto label1;

        varReplacer749 = null;

        return varReplacer749;

     label1:
        $r3 = $r5[0];

        return $r3;
    }

    public static int getLogLevel()
    {
        int i0;

        i0 = <com.nifty.cloud.mb.NCMB: int logLevel>;

        return i0;
    }

    static java.io.File getNCMBDir()
    {
        java.io.File $r0;
        android.content.Context $r1;
        java.lang.String varReplacer664;
        int varReplacer665;

        nop;

        staticinvoke <com.nifty.cloud.mb.NCMB: void checkContext()>();

        $r1 = <com.nifty.cloud.mb.NCMB: android.content.Context applicationContext>;

        varReplacer664 = "NCMB";

        varReplacer665 = 0;

        $r0 = virtualinvoke $r1.<android.content.Context: java.io.File getDir(java.lang.String,int)>(varReplacer664, varReplacer665);

        return $r0;
    }

    public static void initialize(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r4, varReplacer565, varReplacer566;
        com.nifty.cloud.mb.EventuallyManager $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r4 = new java.lang.String;

        varReplacer566 = "976d22ef4f7b781c55ffc4d3fc6fd8bae6550daf7416fcd04a211b6df763b8a3";

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>(varReplacer566);

        <com.nifty.cloud.mb.NCMB: java.lang.String applicationKey> = $r4;

        $r1 = new java.lang.String;

        varReplacer565 = "94abcf806fec94f9f7863ee589602b2b04916674f405299254e0d1c436a71b21";

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(varReplacer565);

        <com.nifty.cloud.mb.NCMB: java.lang.String clientKey> = $r1;

        if $r0 == null goto label1;

        <com.nifty.cloud.mb.NCMB: android.content.Context applicationContext> = $r0;

        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: com.nifty.cloud.mb.EventuallyManager getEventuallyManager()>();

        virtualinvoke $r3.<com.nifty.cloud.mb.EventuallyManager: void execute()>();

     label1:
        return;
    }

    static boolean isContainerObject(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        int varReplacer1004, varReplacer1005;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof org.json.JSONObject;

        if $z0 != 0 goto label1;

        $z0 = $r0 instanceof org.json.JSONArray;

        if $z0 != 0 goto label1;

        $z0 = $r0 instanceof com.nifty.cloud.mb.NCMBACL;

        if $z0 != 0 goto label1;

        $z0 = $r0 instanceof com.nifty.cloud.mb.NCMBGeoPoint;

        if $z0 != 0 goto label1;

        $z0 = $r0 instanceof java.util.List;

        if $z0 != 0 goto label1;

        $z0 = $r0 instanceof java.util.Map;

        if $z0 != 0 goto label1;

        varReplacer1004 = 0;

        return varReplacer1004;

     label1:
        varReplacer1005 = 1;

        return varReplacer1005;
    }

    static boolean isValidType(java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;
        int varReplacer822, varReplacer823;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof org.json.JSONObject;

        if $z0 != 0 goto label2;

        $z0 = $r0 instanceof org.json.JSONArray;

        if $z0 != 0 goto label2;

        $z0 = $r0 instanceof java.lang.String;

        if $z0 != 0 goto label2;

        $z0 = $r0 instanceof java.lang.Number;

        if $z0 != 0 goto label2;

        $z0 = $r0 instanceof java.lang.Boolean;

        if $z0 != 0 goto label2;

        $r1 = <org.json.JSONObject: java.lang.Object NULL>;

        if $r0 == $r1 goto label2;

        $z0 = $r0 instanceof com.nifty.cloud.mb.NCMBObject;

        if $z0 == 0 goto label1;

        $z0 = $r0 instanceof com.nifty.cloud.mb.NCMBFile;

        if $z0 == 0 goto label2;

     label1:
        $z0 = $r0 instanceof com.nifty.cloud.mb.NCMBACL;

        if $z0 != 0 goto label2;

        $z0 = $r0 instanceof java.util.Date;

        if $z0 != 0 goto label2;

        $z0 = $r0 instanceof java.util.List;

        if $z0 != 0 goto label2;

        $z0 = $r0 instanceof java.util.Map;

        if $z0 != 0 goto label2;

        $z0 = $r0 instanceof com.nifty.cloud.mb.NCMBRelation;

        if $z0 != 0 goto label2;

        $z0 = $r0 instanceof com.nifty.cloud.mb.NCMBGeoPoint;

        if $z0 != 0 goto label2;

        varReplacer822 = 0;

        return varReplacer822;

     label2:
        varReplacer823 = 1;

        return varReplacer823;
    }

    static java.lang.String join(java.util.Collection, java.lang.String)
    {
        java.util.Collection $r0;
        java.lang.String $r1, $r5, varReplacer799;
        java.lang.StringBuffer $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;

        nop;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

     label2:
        $r1 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

     label3:
        varReplacer799 = ",";

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer799);

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        goto label1;
    }

    static java.lang.Object jsonFromKeyValueCache(java.lang.String, long)
    {
        java.lang.String $r0, $r3, varReplacer737, varReplacer738;
        long $l0;
        org.json.JSONException $r1;
        org.json.JSONTokener $r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r5;
        null_type varReplacer739, varReplacer740;

        nop;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: java.lang.String loadFromKeyValueCache(java.lang.String,long)>($r0, $l0);

        if $r3 != null goto label1;

        varReplacer739 = null;

        return varReplacer739;

     label1:
        $r2 = new org.json.JSONTokener;

        specialinvoke $r2.<org.json.JSONTokener: void <init>(java.lang.String)>($r3);

     label2:
        $r4 = virtualinvoke $r2.<org.json.JSONTokener: java.lang.Object nextValue()>();

     label3:
        return $r4;

     label4:
        $r1 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        varReplacer738 = "corrupted cache for ";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer738);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer737 = "com.nifty.cloud.mb.NCMB";

        staticinvoke <com.nifty.cloud.mb.NCMB: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer737, $r3, $r1);

        staticinvoke <com.nifty.cloud.mb.NCMB: void clearFromKeyValueCache(java.lang.String)>($r0);

        varReplacer740 = null;

        return varReplacer740;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    static java.lang.Iterable keys(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        com.nifty.cloud.mb.NCMB$1 $r1;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = new com.nifty.cloud.mb.NCMB$1;

        specialinvoke $r1.<com.nifty.cloud.mb.NCMB$1: void <init>(org.json.JSONObject)>($r0);

        return $r1;
    }

    static java.lang.String loadFromKeyValueCache(java.lang.String, long)
    {
        java.lang.String $r0, varReplacer743, varReplacer744, varReplacer746, varReplacer747;
        long $l0, $l1, varReplacer745;
        byte[] $r1;
        java.lang.Throwable $r2;
        java.io.RandomAccessFile $r3;
        java.util.Date $r4;
        java.io.File $r5;
        byte $b2;
        int $i3;
        null_type varReplacer741, varReplacer742;

        nop;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $r5 = staticinvoke <com.nifty.cloud.mb.NCMB: java.io.File getKeyValueCacheFile(java.lang.String)>($r0);

        if $r5 != null goto label1;

        varReplacer741 = null;

        return varReplacer741;

     label1:
        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $l1 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $l0 = $l1 - $l0;

        varReplacer745 = 0L;

        $l0 = staticinvoke <java.lang.Math: long max(long,long)>(varReplacer745, $l0);

        $l1 = staticinvoke <com.nifty.cloud.mb.NCMB: long getKeyValueCacheAge(java.io.File)>($r5);

        $b2 = $l1 cmp $l0;

        if $b2 < 0 goto label9;

        $l0 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        virtualinvoke $r5.<java.io.File: boolean setLastModified(long)>($l0);

        $r3 = new java.io.RandomAccessFile;

     label2:
        varReplacer747 = "r";

        specialinvoke $r3.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r5, varReplacer747);

        $l0 = virtualinvoke $r3.<java.io.RandomAccessFile: long length()>();

     label3:
        $i3 = (int) $l0;

        $r1 = newarray (byte)[$i3];

     label4:
        virtualinvoke $r3.<java.io.RandomAccessFile: void readFully(byte[])>($r1);

        virtualinvoke $r3.<java.io.RandomAccessFile: void close()>();

     label5:
        $r0 = new java.lang.String;

     label6:
        varReplacer746 = "UTF-8";

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, varReplacer746);

     label7:
        return $r0;

     label8:
        $r2 := @caughtexception;

        varReplacer743 = "com.nifty.cloud.mb.NCMB";

        varReplacer744 = "error reading from cache";

        staticinvoke <com.nifty.cloud.mb.NCMB: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer743, varReplacer744, $r2);

     label9:
        varReplacer742 = null;

        return varReplacer742;

        catch java.io.IOException from label2 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private static void log(int, java.lang.String, java.lang.String, java.lang.Throwable)
    {
        int $i0, $i1, varReplacer190;
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r3;

        nop;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: java.lang.String;

        $r2 := @parameter3: java.lang.Throwable;

        $i1 = <com.nifty.cloud.mb.NCMB: int logLevel>;

        if $i0 < $i1 goto label2;

        if $r2 != null goto label1;

        $i0 = <com.nifty.cloud.mb.NCMB: int logLevel>;

        staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r0, $r1);

        return;

     label1:
        $i0 = <com.nifty.cloud.mb.NCMB: int logLevel>;

        $r3 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        varReplacer190 = 10;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer190);

        $r1 = staticinvoke <android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int println(int,java.lang.String,java.lang.String)>($i0, $r0, $r1);

     label2:
        return;
    }

    static void logD(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        null_type varReplacer768;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        varReplacer768 = null;

        staticinvoke <com.nifty.cloud.mb.NCMB: void logD(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, varReplacer768);

        return;
    }

    static void logD(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        int $i0;
        null_type varReplacer771;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $i0 = <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_DEBUG>;

        varReplacer771 = null;

        staticinvoke <com.nifty.cloud.mb.NCMB: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)>($i0, $r0, $r1, varReplacer771);

        return;
    }

    static void logE(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer180;
        null_type varReplacer181;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        varReplacer180 = "com.nifty.cloud.mb.NCMBPush";

        varReplacer181 = null;

        staticinvoke <com.nifty.cloud.mb.NCMB: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer180, $r1, varReplacer181);

        return;
    }

    static void logE(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        int $i0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $i0 = <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_ERROR>;

        staticinvoke <com.nifty.cloud.mb.NCMB: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)>($i0, $r0, $r1, $r2);

        return;
    }

    static void logI(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.nifty.cloud.mb.NCMB: void logI(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, null);

        return;
    }

    static void logI(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $i0 = <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_INFO>;

        staticinvoke <com.nifty.cloud.mb.NCMB: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)>($i0, $r0, $r1, $r2);

        return;
    }

    static void logV(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer1079, varReplacer1080;
        null_type varReplacer1081;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        varReplacer1079 = "com.nifty.cloud.mb.ConnectivityNotifier";

        varReplacer1080 = "Cannot register a broadcast receiver because the executing thread is currently in a broadcast receiver. Will try again later.";

        varReplacer1081 = null;

        staticinvoke <com.nifty.cloud.mb.NCMB: void logV(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1079, varReplacer1080, varReplacer1081);

        return;
    }

    static void logV(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1, varReplacer1082, varReplacer1083;
        java.lang.Throwable $r2;
        int $i0;
        null_type varReplacer1084;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $i0 = <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_VERBOSE>;

        varReplacer1082 = "com.nifty.cloud.mb.ConnectivityNotifier";

        varReplacer1083 = "Cannot register a broadcast receiver because the executing thread is currently in a broadcast receiver. Will try again later.";

        varReplacer1084 = null;

        staticinvoke <com.nifty.cloud.mb.NCMB: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)>($i0, varReplacer1082, varReplacer1083, varReplacer1084);

        return;
    }

    static void logW(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        null_type varReplacer127;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        varReplacer127 = null;

        staticinvoke <com.nifty.cloud.mb.NCMB: void logW(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, $r1, varReplacer127);

        return;
    }

    static void logW(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        java.lang.String $r0, $r1;
        java.lang.Throwable $r2;
        int $i0;
        null_type varReplacer177;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $i0 = <com.nifty.cloud.mb.NCMB: int LOG_LEVEL_WARNING>;

        varReplacer177 = null;

        staticinvoke <com.nifty.cloud.mb.NCMB: void log(int,java.lang.String,java.lang.String,java.lang.Throwable)>($i0, $r0, $r1, varReplacer177);

        return;
    }

    static java.lang.Object maybeEncodeJSONObject(java.lang.Object, boolean)
    {
        boolean $z0, $z1;
        org.json.JSONException $r0;
        java.lang.Object $r1;
        java.util.List $r2;
        org.json.JSONArray $r3;
        com.nifty.cloud.mb.NCMBFieldOperation $r4;
        java.lang.RuntimeException $r5;
        org.json.JSONObject $r6;

        nop;

        $r1 := @parameter0: java.lang.Object;

        $z0 := @parameter1: boolean;

        $z1 = $r1 instanceof java.util.List;

        if $z1 == 0 goto label1;

        $r2 = (java.util.List) $r1;

        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: org.json.JSONArray encodeAsJSONArray(java.util.List,boolean)>($r2, $z0);

        return $r3;

     label1:
        $z1 = $r1 instanceof com.nifty.cloud.mb.NCMBFieldOperation;

        if $z1 == 0 goto label5;

        $r4 = (com.nifty.cloud.mb.NCMBFieldOperation) $r1;

     label2:
        $r1 = interfaceinvoke $r4.<com.nifty.cloud.mb.NCMBFieldOperation: java.lang.Object encode()>();

     label3:
        return $r1;

     label4:
        $r0 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r0);

        throw $r5;

     label5:
        $r6 = staticinvoke <com.nifty.cloud.mb.NCMB: org.json.JSONObject encodeJSONObject(java.lang.Object,boolean)>($r1, $z0);

        if $r6 == null goto label6;

        return $r6;

     label6:
        return $r1;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    static java.lang.Object maybeReferenceAndEncode(java.lang.Object)
    {
        java.lang.Object $r0;
        boolean $z0;
        com.nifty.cloud.mb.NCMBObject $r1;
        java.lang.String $r2, varReplacer798;
        java.lang.IllegalStateException $r3;
        int varReplacer797;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $z0 = $r0 instanceof com.nifty.cloud.mb.NCMBObject;

        if $z0 == 0 goto label1;

        $r1 = (com.nifty.cloud.mb.NCMBObject) $r0;

        $r2 = virtualinvoke $r1.<com.nifty.cloud.mb.NCMBObject: java.lang.String getObjectId()>();

        if $r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        varReplacer798 = "unable to encode an association with an unsaved NCMBObject";

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>(varReplacer798);

        throw $r3;

     label1:
        varReplacer797 = 1;

        $r0 = staticinvoke <com.nifty.cloud.mb.NCMB: java.lang.Object maybeEncodeJSONObject(java.lang.Object,boolean)>($r0, varReplacer797);

        return $r0;
    }

    static org.json.JSONObject ncmbObjectToJSONPointer(com.nifty.cloud.mb.NCMBObject)
    {
        com.nifty.cloud.mb.NCMBObject $r0;
        org.json.JSONException $r1;
        org.json.JSONObject $r2;
        java.lang.String $r3, varReplacer814, varReplacer815, varReplacer816, varReplacer817, varReplacer818, varReplacer819, varReplacer820, varReplacer821;
        java.lang.RuntimeException $r4;

        nop;

        $r0 := @parameter0: com.nifty.cloud.mb.NCMBObject;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

     label1:
        $r3 = virtualinvoke $r0.<com.nifty.cloud.mb.NCMBObject: java.lang.String getObjectId()>();

     label2:
        if $r3 == null goto label5;

     label3:
        varReplacer814 = "__type";

        varReplacer815 = "Pointer";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer814, varReplacer815);

        $r3 = virtualinvoke $r0.<com.nifty.cloud.mb.NCMBObject: java.lang.String getClassName()>();

        varReplacer818 = "className";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer818, $r3);

        $r3 = virtualinvoke $r0.<com.nifty.cloud.mb.NCMBObject: java.lang.String getObjectId()>();

        varReplacer819 = "objectId";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer819, $r3);

     label4:
        return $r2;

     label5:
        varReplacer820 = "__type";

        varReplacer821 = "Pointer";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer820, varReplacer821);

        $r3 = virtualinvoke $r0.<com.nifty.cloud.mb.NCMBObject: java.lang.String getClassName()>();

        varReplacer817 = "className";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer817, $r3);

        $r3 = virtualinvoke $r0.<com.nifty.cloud.mb.NCMBObject: java.lang.String getOrCreateLocalId()>();

        varReplacer816 = "localId";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer816, $r3);

     label6:
        return $r2;

     label7:
        $r1 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r1);

        throw $r4;

        catch org.json.JSONException from label1 to label2 with label7;
        catch org.json.JSONException from label3 to label4 with label7;
        catch org.json.JSONException from label5 to label6 with label7;
    }

    static java.util.Date parseDate(java.lang.String)
    {
        java.lang.String $r0, varReplacer1035, varReplacer1036;
        java.lang.Throwable $r1;
        java.text.DateFormat $r2;
        java.util.Date $r3;
        java.lang.StringBuilder $r4;
        null_type varReplacer1034;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.nifty.cloud.mb.NCMB: java.text.DateFormat dateFormat>;

     label1:
        $r3 = virtualinvoke $r2.<java.text.DateFormat: java.util.Date parse(java.lang.String)>($r0);

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        varReplacer1036 = "could not parse date: ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1036);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1035 = "com.nifty.cloud.mb.MCMB";

        staticinvoke <com.nifty.cloud.mb.NCMB: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1035, $r0, $r1);

        varReplacer1034 = null;

        return varReplacer1034;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    static void saveToKeyValueCache(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer2217;
        java.io.FileOutputStream $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.File $r3;
        byte[] $r4;
        java.io.File[] $r5;
        com.nifty.cloud.mb.NCMB$3 $r6;
        long $l5, $l6;
        java.lang.Throwable $r7, $r8;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: java.io.File getKeyValueCacheFile(java.lang.String)>($r0);

        if $r3 == null goto label01;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

     label01:
        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: java.io.File createKeyValueCacheFile(java.lang.String)>($r0);

        $r2 = new java.io.FileOutputStream;

     label02:
        specialinvoke $r2.<java.io.FileOutputStream: void <init>(java.io.File)>($r3);

        varReplacer2217 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2217);

        virtualinvoke $r2.<java.io.FileOutputStream: void write(byte[])>($r4);

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

     label03:
        $r3 = staticinvoke <com.nifty.cloud.mb.NCMB: java.io.File getKeyValueCacheDir()>();

        $r5 = virtualinvoke $r3.<java.io.File: java.io.File[] listFiles()>();

        $i1 = lengthof $r5;

        $i2 = 0;

        $i3 = lengthof $r5;

        $i4 = 0;

     label04:
        if $i4 < $i3 goto label07;

        $i3 = <com.nifty.cloud.mb.NCMB: int maxKeyValueCacheFiles>;

        if $i1 > $i3 goto label05;

        $i3 = <com.nifty.cloud.mb.NCMB: int maxKeyValueCacheBytes>;

        if $i2 <= $i3 goto label12;

     label05:
        $r6 = new com.nifty.cloud.mb.NCMB$3;

        specialinvoke $r6.<com.nifty.cloud.mb.NCMB$3: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r5, $r6);

        $i3 = lengthof $r5;

     label06:
        if $i0 < $i3 goto label08;

        return;

     label07:
        $r3 = $r5[$i4];

        $l5 = (long) $i2;

        $l6 = virtualinvoke $r3.<java.io.File: long length()>();

        $l5 = $l5 + $l6;

        $i2 = (int) $l5;

        $i4 = $i4 + 1;

        goto label04;

     label08:
        $r3 = $r5[$i0];

        $i1 = $i1 + -1;

        $l5 = (long) $i2;

        $l6 = virtualinvoke $r3.<java.io.File: long length()>();

        $l5 = $l5 - $l6;

        $i2 = (int) $l5;

        virtualinvoke $r3.<java.io.File: boolean delete()>();

        $i4 = <com.nifty.cloud.mb.NCMB: int maxKeyValueCacheFiles>;

        if $i1 > $i4 goto label09;

        $i4 = <com.nifty.cloud.mb.NCMB: int maxKeyValueCacheBytes>;

        if $i2 <= $i4 goto label12;

     label09:
        $i0 = $i0 + 1;

        goto label06;

     label10:
        $r7 := @caughtexception;

        goto label03;

     label11:
        $r8 := @caughtexception;

        goto label03;

     label12:
        return;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label11;
        catch java.io.IOException from label02 to label03 with label10;
    }

    static void setContextIfNeeded(android.content.Context)
    {
        android.content.Context $r0, $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.nifty.cloud.mb.NCMB: android.content.Context applicationContext>;

        if $r1 != null goto label1;

        <com.nifty.cloud.mb.NCMB: android.content.Context applicationContext> = $r0;

     label1:
        return;
    }

    public static void setLogLevel(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        <com.nifty.cloud.mb.NCMB: int logLevel> = $i0;

        return;
    }

    static java.lang.String toDeterministicString(java.lang.Object) throws org.json.JSONException
    {
        java.lang.Object $r0;
        org.json.JSONStringer $r1;
        java.lang.String $r2;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 = new org.json.JSONStringer;

        specialinvoke $r1.<org.json.JSONStringer: void <init>()>();

        staticinvoke <com.nifty.cloud.mb.NCMB: void addToStringer(org.json.JSONStringer,java.lang.Object)>($r1, $r0);

        $r2 = virtualinvoke $r1.<org.json.JSONStringer: java.lang.String toString()>();

        return $r2;
    }

    static java.lang.String toMd5(java.lang.String)
    {
        java.lang.String $r0, varReplacer766, varReplacer767;
        java.lang.StringBuffer $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        int $i0, $i1;
        byte $b2;
        short $s3;
        java.lang.Throwable $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer767 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer767);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r1 = new java.lang.StringBuffer;

     label03:
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r3;

        if $i0 < $i1 goto label08;

     label06:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        return $r0;

     label08:
        $b2 = $r3[$i0];

        $s3 = $b2 & 255;

     label09:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label10:
        $i0 = $i0 + 1;

        goto label05;

     label11:
        $r4 := @caughtexception;

        varReplacer766 = "";

        return varReplacer766;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label11;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label11;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label11;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label11;
    }
}
