public class com.bugsense.trace.Utils extends java.lang.Object
{
    private static final char[] DIGITS;
    public static final int STATE_DONT_KNOW;
    public static final int STATE_OFF;
    public static final int STATE_ON;
    static final java.lang.String crashCounterFile;
    static final java.lang.String lastCrashIDFile;
    static final java.lang.Runtime rt;

    static void <clinit>()
    {
        java.lang.Runtime $r0;
        char[] $r1;

        nop;

        $r1 = newarray (char)[16];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 97;

        $r1[11] = 98;

        $r1[12] = 99;

        $r1[13] = 100;

        $r1[14] = 101;

        $r1[15] = 102;

        <com.bugsense.trace.Utils: char[] DIGITS> = $r1;

        $r0 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        <com.bugsense.trace.Utils: java.lang.Runtime rt> = $r0;

        return;
    }

    public void <init>()
    {
        com.bugsense.trace.Utils $r0;

        $r0 := @this: com.bugsense.trace.Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int CheckNetworkConnection(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3, varReplacer824, varReplacer825;
        int $i0, $i1, varReplacer826;
        android.content.pm.PackageManager $r2;
        java.lang.Object $r4;
        android.net.ConnectivityManager $r5;
        android.net.NetworkInfo[] $r6;
        byte $b2;
        android.net.NetworkInfo $r7;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = <com.bugsense.trace.G: java.lang.String APP_PACKAGE>;

        varReplacer825 = "android.permission.ACCESS_NETWORK_STATE";

        $i1 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>(varReplacer825, $r3);

        if $i1 != 0 goto label3;

        varReplacer824 = "connectivity";

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer824);

        $r5 = (android.net.ConnectivityManager) $r4;

        $r6 = virtualinvoke $r5.<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>();

        $i1 = lengthof $r6;

        $b2 = 0;

     label1:
        if $i0 >= $i1 goto label4;

        $r7 = $r6[$i0];

        $r3 = virtualinvoke $r7.<android.net.NetworkInfo: java.lang.String getTypeName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r7.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label2;

        $b2 = 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        varReplacer826 = 2;

        return varReplacer826;

     label4:
        return $b2;
    }

    public static java.lang.String MD5(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        java.security.MessageDigest $r1;
        byte[] $r2;
        int $i0;
        java.math.BigInteger $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i0);

        $r3 = new java.math.BigInteger;

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        specialinvoke $r3.<java.math.BigInteger: void <init>(int,byte[])>(1, $r2);

        $r0 = virtualinvoke $r3.<java.math.BigInteger: java.lang.String toString(int)>(16);

        return $r0;
    }

    protected static java.lang.String[] ScreenProperties(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String[] $r1;
        android.util.DisplayMetrics $r2;
        java.lang.Object $r3;
        android.view.WindowManager $r4;
        android.view.Display $r5;
        int $i0, $i1, $i2;
        java.lang.String $r6, varReplacer806;
        float $f0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = newarray (java.lang.String)[5];

        $r1[0] = "Not available";

        $r1[1] = "Not available";

        $r1[2] = "Not available";

        $r1[3] = "Not available";

        $r1[4] = "Not available";

        $r2 = new android.util.DisplayMetrics;

        specialinvoke $r2.<android.util.DisplayMetrics: void <init>()>();

        varReplacer806 = "window";

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer806);

        $r4 = (android.view.WindowManager) $r3;

        $r5 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r5.<android.view.Display: int getWidth()>();

        $i1 = virtualinvoke $r5.<android.view.Display: int getHeight()>();

        $i2 = virtualinvoke $r5.<android.view.Display: int getOrientation()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r1[0] = $r6;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r1[1] = $r6;

        $r6 = "";

        lookupswitch($i2)
        {
            case 0: goto label2;
            case 1: goto label5;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r1[2] = $r6;

        virtualinvoke $r5.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r2);

        $f0 = $r2.<android.util.DisplayMetrics: float xdpi>;

        $r6 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        $r1[3] = $r6;

        $f0 = $r2.<android.util.DisplayMetrics: float ydpi>;

        $r6 = staticinvoke <java.lang.Float: java.lang.String toString(float)>($f0);

        $r1[4] = $r6;

        return $r1;

     label2:
        $r6 = "normal";

        goto label1;

     label3:
        $r6 = "180";

        goto label1;

     label4:
        $r6 = "270";

        goto label1;

     label5:
        $r6 = "90";

        goto label1;
    }

    protected static boolean checkForRoot()
    {
        java.lang.String[] $r0;
        int $i0, $i1, varReplacer797, varReplacer798;
        java.io.File $r1;
        java.lang.String $r2, varReplacer796;
        java.lang.StringBuilder $r3;
        boolean $z0;

        nop;

        $r0 = newarray (java.lang.String)[8];

        $r0[0] = "/sbin/";

        $r0[1] = "/system/bin/";

        $r0[2] = "/system/xbin/";

        $r0[3] = "/data/local/xbin/";

        $r0[4] = "/data/local/bin/";

        $r0[5] = "/system/sd/xbin/";

        $r0[6] = "/system/bin/failsafe/";

        $r0[7] = "/data/local/";

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = $r0[$i1];

        $r1 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer796 = "su";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer796);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        varReplacer797 = 1;

        return varReplacer797;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        varReplacer798 = 0;

        return varReplacer798;
    }

    protected static void clearCrashCounter()
    {
        java.lang.Thread $r0;
        java.util.concurrent.ExecutorService $r1;
        com.bugsense.trace.Utils$1 $r2;

        $r0 = new java.lang.Thread;

        $r2 = new com.bugsense.trace.Utils$1;

        specialinvoke $r2.<com.bugsense.trace.Utils$1: void <init>()>();

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);

        $r1 = staticinvoke <com.bugsense.trace.BugSense: java.util.concurrent.ExecutorService getExecutor()>();

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r0);

     label1:
        return;
    }

    private static char[] encodeHex(byte[])
    {
        byte[] $r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1, $r2;
        byte $b4;
        short $s5;
        char $c6;

        nop;

        $r0 := @parameter0: byte[];

        $i2 = 0;

        $i0 = lengthof $r0;

        $i1 = $i0 << 1;

        $r1 = newarray (char)[$i1];

        $i3 = 0;

     label1:
        if $i3 >= $i0 goto label2;

        $i1 = $i2 + 1;

        $r2 = <com.bugsense.trace.Utils: char[] DIGITS>;

        $b4 = $r0[$i3];

        $s5 = $b4 & 240;

        $s5 = $s5 >>> 4;

        $c6 = $r2[$s5];

        $r1[$i2] = $c6;

        $i2 = $i1 + 1;

        $r2 = <com.bugsense.trace.Utils: char[] DIGITS>;

        $b4 = $r0[$i3];

        $b4 = $b4 & 15;

        $c6 = $r2[$b4];

        $r1[$i1] = $c6;

        $i3 = $i3 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public static final java.lang.String exceedLimitString(java.lang.String)
    {
        java.lang.String $r0, varReplacer3627, varReplacer3628;
        int $i0, varReplacer3629, varReplacer3630;
        java.lang.StringBuilder $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 1 goto label2;

     label1:
        varReplacer3627 = "";

        return varReplacer3627;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 128 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 128 goto label3;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        varReplacer3629 = 0;

        varReplacer3630 = 125;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3629, varReplacer3630);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer3628 = "...";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3628);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r0;
    }

    private static java.lang.String generateUid()
    {
        long $l0, $l1, varReplacer3572;
        java.lang.Long $r0;
        java.lang.String $r1, $r2, $r3, $r5, varReplacer3574, varReplacer3575, varReplacer3576;
        double $d0;
        int $i2, varReplacer3573;
        java.lang.Integer $r4;
        java.lang.StringBuilder $r6, r17;
        byte[] $r7, $r8;
        java.security.MessageDigest $r9;
        char[] $r10;
        java.lang.Throwable $r11, $r12, $r13;
        java.util.Date r14;
        java.lang.Object r15;
        java.util.Random r16;
        java.io.UnsupportedEncodingException r18;
        java.security.NoSuchAlgorithmException r19;

        nop;

        r14 = new java.util.Date;

        specialinvoke r14.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke r14.<java.util.Date: long getTime()>();

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r1 = virtualinvoke $r0.<java.lang.Long: java.lang.String toString()>();

        r15 = new java.lang.Object;

        specialinvoke r15.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r15.<java.lang.Object: java.lang.String toString()>();

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

     label1:
        varReplacer3572 = 256L;

        varReplacer3573 = 42;

        staticinvoke <java.lang.Thread: void sleep(long,int)>(varReplacer3572, varReplacer3573);

     label2:
        $l1 = staticinvoke <java.lang.System: long nanoTime()>();

        $l0 = $l1 - $l0;

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r3 = virtualinvoke $r0.<java.lang.Long: java.lang.String toString()>();

        r16 = new java.util.Random;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke r16.<java.util.Random: void <init>(long)>($l0);

        $d0 = virtualinvoke r16.<java.util.Random: double nextDouble()>();

        $d0 = $d0 * 65535.0;

        $i2 = (int) $d0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.Integer: java.lang.String toString()>();

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer3575 = "android_id";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3575);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = null;

     label3:
        varReplacer3574 = "UTF-8";

        $r8 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3574);

        varReplacer3576 = "MD5";

        $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3576);

        $r8 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r8);

     label4:
        $r7 = $r8;

     label5:
        $r2 = new java.lang.String;

        $r10 = staticinvoke <com.bugsense.trace.Utils: char[] encodeHex(byte[])>($r7);

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r10);

        return $r2;

     label6:
        $r11 := @caughtexception;

        r18 = (java.io.UnsupportedEncodingException) $r11;

        virtualinvoke r18.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label5;

     label7:
        $r12 := @caughtexception;

        r19 = (java.security.NoSuchAlgorithmException) $r12;

        virtualinvoke r19.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label5;

     label8:
        $r13 := @caughtexception;

        goto label2;

        catch java.lang.InterruptedException from label1 to label2 with label8;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label7;
    }

    public static java.lang.String getAppsRunning(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer802, varReplacer803, varReplacer804, varReplacer805;
        android.content.pm.PackageManager $r2;
        int $i0;
        java.lang.Object $r3;
        android.app.ActivityManager $r4;
        java.util.List $r5;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r1 = <com.bugsense.trace.G: java.lang.String APP_PACKAGE>;

        varReplacer802 = "android.permission.GET_TASKS";

        $i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>(varReplacer802, $r1);

        if $i0 != 0 goto label2;

        varReplacer805 = "activity";

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer805);

        $r4 = (android.app.ActivityManager) $r3;

        $r5 = virtualinvoke $r4.<android.app.ActivityManager: java.util.List getRunningAppProcesses()>();

        if $r5 != null goto label1;

        varReplacer804 = "0";

        return varReplacer804;

     label1:
        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        return $r1;

     label2:
        varReplacer803 = "no_permissions";

        return varReplacer803;
    }

    public static java.lang.String getCPU()
    {
        java.io.BufferedReader $r0, $r5, r19;
        int $i0, $i1, varReplacer3801;
        java.lang.String $r1, $r8, $r9, varReplacer3797, varReplacer3798, varReplacer3799, varReplacer3800, varReplacer3802, varReplacer3803, varReplacer3804, varReplacer3805, varReplacer3806, varReplacer3807, varReplacer3808;
        java.lang.Runtime $r2;
        java.lang.Process $r3, $r4;
        java.io.InputStreamReader $r6, r18;
        java.io.InputStream $r7;
        boolean $z0;
        java.lang.String[] $r10;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r17;
        java.lang.Exception $r16;
        java.io.IOException r20;

        nop;

        $r0 = null;

        $i0 = staticinvoke <android.os.Process: int myPid()>();

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label01:
        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        varReplacer3807 = "top -d 1 -n 1";

        $r3 = virtualinvoke $r2.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>(varReplacer3807);

     label02:
        $r4 = $r3;

     label03:
        r19 = new java.io.BufferedReader;

     label04:
        $r5 = r19;

     label05:
        r18 = new java.io.InputStreamReader;

     label06:
        $r6 = r18;

     label07:
        $r7 = virtualinvoke $r3.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke r18.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r7);

        specialinvoke r19.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

     label08:
        $r8 = "unknown";

     label09:
        $r9 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label10:
        if $r9 == null goto label25;

     label11:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>($r1);

     label12:
        if $z0 == 0 goto label09;

     label13:
        varReplacer3806 = " ";

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer3806);

     label14:
        if $r10 == null goto label09;

        $i0 = 0;

     label15:
        $i1 = lengthof $r10;

     label16:
        if $i0 >= $i1 goto label09;

     label17:
        $r9 = $r10[$i0];

     label18:
        if $r9 == null goto label24;

     label19:
        $r9 = $r10[$i0];

     label20:
        varReplacer3808 = "%";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer3808);

     label21:
        if $z0 == 0 goto label24;

     label22:
        $r8 = $r10[$i0];

     label23:
        goto label09;

     label24:
        $i0 = $i0 + 1;

        goto label15;

     label25:
        if $r5 == null goto label27;

     label26:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

     label27:
        if $r3 == null goto label29;

     label28:
        virtualinvoke $r3.<java.lang.Process: void destroy()>();

     label29:
        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

     label30:
        $i0 = $i0 + -1;

     label31:
        varReplacer3801 = 0;

        $r1 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3801, $i0);

     label32:
        return $r1;

     label33:
        $r11 := @caughtexception;

        varReplacer3804 = "executeTop";

        varReplacer3805 = "error in closing and destroying top process";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3804, varReplacer3805);

        r20 = (java.io.IOException) $r11;

        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();

        goto label29;

     label34:
        $r12 := @caughtexception;

        $r3 = null;

        $r8 = "unknown";

     label35:
        varReplacer3802 = "executeTop";

        varReplacer3803 = "error in getting first line of top";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3802, varReplacer3803);

        r20 = (java.io.IOException) $r12;

        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();

     label36:
        if $r0 == null goto label38;

     label37:
        virtualinvoke $r0.<java.io.BufferedReader: void close()>();

     label38:
        if $r3 == null goto label40;

     label39:
        virtualinvoke $r3.<java.lang.Process: void destroy()>();

     label40:
        goto label29;

     label41:
        $r13 := @caughtexception;

        varReplacer3797 = "executeTop";

        varReplacer3798 = "error in closing and destroying top process";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3797, varReplacer3798);

        r20 = (java.io.IOException) $r13;

        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();

        goto label29;

     label42:
        $r14 := @caughtexception;

        $r4 = null;

     label43:
        if $r0 == null goto label45;

     label44:
        virtualinvoke $r0.<java.io.BufferedReader: void close()>();

     label45:
        if $r4 == null goto label47;

     label46:
        virtualinvoke $r4.<java.lang.Process: void destroy()>();

     label47:
        throw $r14;

     label48:
        $r15 := @caughtexception;

        varReplacer3799 = "executeTop";

        varReplacer3800 = "error in closing and destroying top process";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3799, varReplacer3800);

        r20 = (java.io.IOException) $r15;

        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();

        goto label47;

     label49:
        $r16 := @caughtexception;

        virtualinvoke $r16.<java.lang.Exception: void printStackTrace()>();

        return $r8;

     label50:
        $r14 := @caughtexception;

        goto label43;

     label51:
        $r14 := @caughtexception;

        $r0 = $r5;

        goto label43;

     label52:
        $r14 := @caughtexception;

        $r4 = $r3;

        goto label43;

     label53:
        $r12 := @caughtexception;

        $r8 = "unknown";

        goto label35;

     label54:
        $r17 := @caughtexception;

        $r0 = $r5;

        $r12 = $r17;

        goto label35;

        catch java.io.IOException from label01 to label02 with label34;
        catch java.lang.Throwable from label01 to label02 with label42;
        catch java.io.IOException from label07 to label08 with label53;
        catch java.lang.Throwable from label03 to label04 with label50;
        catch java.lang.Throwable from label05 to label06 with label50;
        catch java.lang.Throwable from label07 to label08 with label50;
        catch java.io.IOException from label09 to label10 with label54;
        catch java.io.IOException from label11 to label12 with label54;
        catch java.io.IOException from label13 to label14 with label54;
        catch java.io.IOException from label20 to label21 with label54;
        catch java.lang.Throwable from label09 to label10 with label51;
        catch java.lang.Throwable from label11 to label12 with label51;
        catch java.lang.Throwable from label13 to label14 with label51;
        catch java.lang.Throwable from label15 to label16 with label51;
        catch java.lang.Throwable from label17 to label18 with label51;
        catch java.lang.Throwable from label19 to label21 with label51;
        catch java.lang.Throwable from label22 to label23 with label51;
        catch java.io.IOException from label26 to label27 with label33;
        catch java.io.IOException from label28 to label29 with label33;
        catch java.lang.Exception from label29 to label30 with label49;
        catch java.lang.Exception from label31 to label32 with label49;
        catch java.lang.Throwable from label35 to label36 with label52;
        catch java.io.IOException from label37 to label38 with label41;
        catch java.io.IOException from label39 to label40 with label41;
        catch java.io.IOException from label44 to label45 with label48;
        catch java.io.IOException from label46 to label47 with label48;
    }

    protected static int getCrashCounter()
    {
        java.io.File $r0, r14;
        java.lang.Integer $r1;
        java.lang.StringBuilder $r2, r13;
        java.lang.String $r3;
        boolean $z0;
        int $i0;
        java.lang.Throwable $r4, $r7, $r10, $r11, $r12;
        java.io.BufferedReader $r5, r16;
        java.io.FileReader $r6, r15;
        java.lang.Exception $r8, $r9;
        java.io.IOException r17;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        r14 = new java.io.File;

        $r0 = r14;

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.bugsense.trace.G: java.lang.String FILES_PATH>;

        $r2 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("crashCounter");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.io.File: void <init>(java.lang.String)>($r3);

        if $r0 == null goto label04;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label04;

     label01:
        virtualinvoke $r0.<java.io.File: boolean createNewFile()>();

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

     label02:
        return $i0;

     label03:
        $r4 := @caughtexception;

        r17 = (java.io.IOException) $r4;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

     label04:
        r16 = new java.io.BufferedReader;

     label05:
        $r5 = r16;

     label06:
        r15 = new java.io.FileReader;

     label07:
        $r6 = r15;

     label08:
        specialinvoke r15.<java.io.FileReader: void <init>(java.io.File)>($r0);

        specialinvoke r16.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

     label09:
        $r3 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label10:
        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

     label11:
        if $r5 == null goto label33;

     label12:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

     label13:
        return $i0;

     label14:
        $r7 := @caughtexception;

        r17 = (java.io.IOException) $r7;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

        return $i0;

     label15:
        $r8 := @caughtexception;

     label16:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

     label17:
        goto label10;

     label18:
        $r9 := @caughtexception;

        $r5 = null;

     label19:
        $z0 = <com.bugsense.trace.BugSenseHandler: boolean I_WANT_TO_DEBUG>;

     label20:
        if $z0 == 0 goto label22;

     label21:
        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label22:
        if $r5 == null goto label34;

     label23:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

     label24:
        return 0;

     label25:
        $r10 := @caughtexception;

        r17 = (java.io.IOException) $r10;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

        return 0;

     label26:
        $r11 := @caughtexception;

        $r5 = null;

     label27:
        if $r5 == null goto label29;

     label28:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

     label29:
        throw $r11;

     label30:
        $r12 := @caughtexception;

        r17 = (java.io.IOException) $r12;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

        goto label29;

     label31:
        $r11 := @caughtexception;

        goto label27;

     label32:
        $r9 := @caughtexception;

        goto label19;

     label33:
        return $i0;

     label34:
        return 0;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Throwable from label09 to label10 with label31;
        catch java.lang.Exception from label10 to label11 with label32;
        catch java.lang.Throwable from label10 to label11 with label31;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Exception from label16 to label17 with label32;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.lang.Throwable from label19 to label20 with label31;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label28 to label29 with label30;
    }

    public static java.lang.String getLastCrashID()
    {
        java.lang.String $r0, $r3;
        java.io.File $r1, r15;
        java.lang.StringBuilder $r2, r14;
        boolean $z0;
        java.lang.Throwable $r4, $r7, $r10, $r11, $r12, $r13;
        java.io.BufferedReader $r5, r17;
        java.io.FileReader $r6, r16;
        java.lang.Exception $r8, $r9;
        java.io.IOException r18;

        $r0 = null;

        r15 = new java.io.File;

        $r1 = r15;

        r14 = new java.lang.StringBuilder;

        specialinvoke r14.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.bugsense.trace.G: java.lang.String FILES_PATH>;

        $r2 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lastCrashID");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r15.<java.io.File: void <init>(java.lang.String)>($r3);

        if $r1 == null goto label04;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label04;

     label01:
        virtualinvoke $r1.<java.io.File: boolean createNewFile()>();

     label02:
        return null;

     label03:
        $r4 := @caughtexception;

        r18 = (java.io.IOException) $r4;

        virtualinvoke r18.<java.io.IOException: void printStackTrace()>();

     label04:
        r17 = new java.io.BufferedReader;

     label05:
        $r5 = r17;

     label06:
        r16 = new java.io.FileReader;

     label07:
        $r6 = r16;

     label08:
        specialinvoke r16.<java.io.FileReader: void <init>(java.io.File)>($r1);

        specialinvoke r17.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

     label09:
        $r3 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label10:
        $r0 = $r3;

     label11:
        if $r5 == null goto label33;

     label12:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

     label13:
        return $r0;

     label14:
        $r7 := @caughtexception;

        r18 = (java.io.IOException) $r7;

        virtualinvoke r18.<java.io.IOException: void printStackTrace()>();

        return $r0;

     label15:
        $r8 := @caughtexception;

     label16:
        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

     label17:
        goto label11;

     label18:
        $r9 := @caughtexception;

     label19:
        $z0 = <com.bugsense.trace.BugSenseHandler: boolean I_WANT_TO_DEBUG>;

     label20:
        if $z0 == 0 goto label22;

     label21:
        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label22:
        if $r5 == null goto label34;

     label23:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

     label24:
        return null;

     label25:
        $r10 := @caughtexception;

        r18 = (java.io.IOException) $r10;

        virtualinvoke r18.<java.io.IOException: void printStackTrace()>();

        return null;

     label26:
        $r11 := @caughtexception;

        $r5 = null;

        $r12 = $r11;

     label27:
        if $r5 == null goto label29;

     label28:
        virtualinvoke $r5.<java.io.BufferedReader: void close()>();

     label29:
        throw $r12;

     label30:
        $r13 := @caughtexception;

        r18 = (java.io.IOException) $r13;

        virtualinvoke r18.<java.io.IOException: void printStackTrace()>();

        goto label29;

     label31:
        $r12 := @caughtexception;

        goto label27;

     label32:
        $r9 := @caughtexception;

        $r5 = null;

        goto label19;

     label33:
        return $r0;

     label34:
        return null;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.lang.Exception from label08 to label09 with label32;
        catch java.lang.Throwable from label04 to label05 with label26;
        catch java.lang.Throwable from label06 to label07 with label26;
        catch java.lang.Throwable from label08 to label09 with label26;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Throwable from label09 to label10 with label31;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Throwable from label16 to label17 with label31;
        catch java.lang.Throwable from label19 to label20 with label31;
        catch java.lang.Throwable from label21 to label22 with label31;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label28 to label29 with label30;
    }

    public static java.lang.String getMem()
    {
        java.lang.StringBuilder $r0, $r2;
        android.app.ActivityManager$MemoryInfo $r1;
        java.lang.Object[] $r3;
        java.lang.Runtime $r4;
        long $l0;
        double $d0;
        java.lang.Double $r5;
        java.lang.String $r6, varReplacer3787, varReplacer3788, varReplacer3789, varReplacer3790, varReplacer3791, varReplacer3792, varReplacer3793, varReplacer3794, varReplacer3795, varReplacer3796;
        boolean $z0;

        nop;

        $r1 = new android.app.ActivityManager$MemoryInfo;

        specialinvoke $r1.<android.app.ActivityManager$MemoryInfo: void <init>()>();

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = <com.bugsense.trace.Utils: java.lang.Runtime rt>;

        $l0 = virtualinvoke $r4.<java.lang.Runtime: long freeMemory()>();

        $d0 = (double) $l0;

        $d0 = $d0 / 1048576.0;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[0] = $r5;

        varReplacer3791 = "%.3f";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer3791, $r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer3795 = ":";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3795);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = <com.bugsense.trace.Utils: java.lang.Runtime rt>;

        $l0 = virtualinvoke $r4.<java.lang.Runtime: long maxMemory()>();

        $d0 = (double) $l0;

        $d0 = $d0 / 1048576.0;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[0] = $r5;

        varReplacer3788 = "%.3f";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer3788, $r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer3789 = ":";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3789);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = <com.bugsense.trace.Utils: java.lang.Runtime rt>;

        $l0 = virtualinvoke $r4.<java.lang.Runtime: long totalMemory()>();

        $d0 = (double) $l0;

        $d0 = $d0 / 1048576.0;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[0] = $r5;

        varReplacer3794 = "%.3f";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer3794, $r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer3787 = ":";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3787);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = newarray (java.lang.Object)[1];

        $l0 = $r1.<android.app.ActivityManager$MemoryInfo: long availMem>;

        $d0 = (double) $l0;

        $d0 = $d0 / 1048576.0;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[0] = $r5;

        varReplacer3796 = "%.3f";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer3796, $r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer3792 = ":";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3792);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = newarray (java.lang.Object)[1];

        $l0 = $r1.<android.app.ActivityManager$MemoryInfo: long threshold>;

        $d0 = (double) $l0;

        $d0 = $d0 / 1048576.0;

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[0] = $r5;

        varReplacer3790 = "%.3f";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer3790, $r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer3793 = ":";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3793);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $z0 = $r1.<android.app.ActivityManager$MemoryInfo: boolean lowMemory>;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static final java.lang.String getTime()
    {
        long $l0;
        java.lang.String $r0, $r3, varReplacer3583;
        java.util.TimeZone $r1;
        java.util.Calendar $r2;
        java.lang.Exception $r4;

        nop;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

     label1:
        varReplacer3583 = "UTC";

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(varReplacer3583);

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>($r1);

        $l0 = virtualinvoke $r2.<java.util.Calendar: long getTimeInMillis()>();

     label2:
        $l0 = $l0 / 1000L;

     label3:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        return $r0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static boolean hasStorage(boolean)
    {
        boolean $z0, $z1;
        java.lang.String $r0, $r1, varReplacer3570;
        int varReplacer3569, varReplacer3571;

        nop;

        $z0 := @parameter0: boolean;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $r1 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        varReplacer3570 = "mounted";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3570);

        if $z1 == 0 goto label1;

        varReplacer3569 = 1;

        return varReplacer3569;

     label1:
        goto label2;

     label2:
        varReplacer3571 = 0;

        return varReplacer3571;
    }

    protected static int isGPSOn(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer807, varReplacer808, varReplacer810;
        android.content.pm.PackageManager $r2;
        int $i0, varReplacer809, varReplacer811, varReplacer812;
        java.lang.Object $r3;
        android.location.LocationManager $r4;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r1 = <com.bugsense.trace.G: java.lang.String APP_PACKAGE>;

        varReplacer807 = "android.permission.ACCESS_FINE_LOCATION";

        $i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>(varReplacer807, $r1);

        if $i0 != 0 goto label1;

        varReplacer810 = "location";

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer810);

        $r4 = (android.location.LocationManager) $r3;

        varReplacer808 = "gps";

        $z0 = virtualinvoke $r4.<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>(varReplacer808);

        if $z0 != 0 goto label2;

        varReplacer809 = 0;

        return varReplacer809;

     label1:
        varReplacer811 = 2;

        return varReplacer811;

     label2:
        varReplacer812 = 1;

        return varReplacer812;
    }

    protected static int isMobileNetworkOn(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.String varReplacer813;

        nop;

        $r0 := @parameter0: android.content.Context;

        varReplacer813 = "MOBILE";

        $i0 = staticinvoke <com.bugsense.trace.Utils: int CheckNetworkConnection(android.content.Context,java.lang.String)>($r0, varReplacer813);

        return $i0;
    }

    public static boolean isOnWifi(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.bugsense.trace.Utils: int CheckNetworkConnection(android.content.Context,java.lang.String)>($r0, "WIFI");

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected static int isWifiOn(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.String varReplacer814;

        nop;

        $r0 := @parameter0: android.content.Context;

        varReplacer814 = "WIFI";

        $i0 = staticinvoke <com.bugsense.trace.Utils: int CheckNetworkConnection(android.content.Context,java.lang.String)>($r0, varReplacer814);

        return $i0;
    }

    public static java.lang.String manageUid(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1, $r5, $r7, r21;
        java.io.BufferedReader $r2, $r8, r23;
        java.lang.String $r3, $r6, varReplacer3539, varReplacer3541, varReplacer3542, varReplacer3543, varReplacer3544;
        int $i0, varReplacer3540;
        java.lang.StringBuilder $r4, r20;
        boolean $z0;
        java.io.FileReader $r9, r22;
        android.content.pm.PackageManager $r10;
        java.lang.Exception $r11, $r14, $r16, $r17, $r18, $r19;
        java.lang.Throwable $r12, $r13, $r15;
        java.io.IOException r24;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = null;

        entermonitor class "Lcom/bugsense/trace/Utils;";

     label01:
        $r3 = <com.bugsense.trace.G: java.lang.String UID>;

        if $r3 == null goto label03;

        $r3 = <com.bugsense.trace.G: java.lang.String UID>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 32 goto label03;

        $r3 = <com.bugsense.trace.G: java.lang.String UID>;

     label02:
        exitmonitor class "Lcom/bugsense/trace/Utils;";

        return $r3;

     label03:
        if $r0 != null goto label05;

     label04:
        $r3 = <com.bugsense.trace.G: java.lang.String TAG>;

        varReplacer3544 = "Context is null!";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, varReplacer3544);

        $r3 = "12345678901234567890123456789012";

        goto label02;

     label05:
        $r3 = "";

     label06:
        $r7 = new java.io.File;

        $r1 = $r7;

        r20 = new java.lang.StringBuilder;

        $r4 = r20;

     label07:
        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r5 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

     label08:
        $r6 = <java.io.File: java.lang.String separator>;

     label09:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer3542 = ".bugsense";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3542);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r6);

     label10:
        r21 = new java.io.File;

        $r5 = r21;

        r20 = new java.lang.StringBuilder;

        $r4 = r20;

     label11:
        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        $r6 = virtualinvoke $r7.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label12:
        $r6 = <java.io.File: java.lang.String separator>;

     label13:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer3541 = ".bugsense";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3541);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.io.File: void <init>(java.lang.String)>($r6);

     label14:
        if $r1 == null goto label27;

     label15:
        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

     label16:
        if $z0 == 0 goto label27;

     label17:
        r23 = new java.io.BufferedReader;

        $r8 = r23;

        r22 = new java.io.FileReader;

        $r9 = r22;

     label18:
        $r6 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke r22.<java.io.FileReader: void <init>(java.lang.String)>($r6);

        specialinvoke r23.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

     label19:
        if $r8 == null goto label22;

     label20:
        $r6 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

     label21:
        $r3 = $r6;

     label22:
        if $r8 == null goto label24;

     label23:
        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

     label24:
        if $r3 == null goto label26;

     label25:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 32 goto label27;

     label26:
        $r3 = "";

     label27:
        if $r3 == null goto label28;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 32 goto label69;

     label28:
        if $r5 == null goto label69;

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label29:
        if $z0 == 0 goto label69;

     label30:
        r23 = new java.io.BufferedReader;

        $r8 = r23;

        r22 = new java.io.FileReader;

        $r9 = r22;

     label31:
        $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke r22.<java.io.FileReader: void <init>(java.lang.String)>($r6);

        specialinvoke r23.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

     label32:
        if $r8 == null goto label35;

     label33:
        $r6 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

     label34:
        $r3 = $r6;

     label35:
        if $r8 == null goto label37;

     label36:
        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

     label37:
        if $r3 == null goto label39;

     label38:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 32 goto label69;

     label39:
        $r3 = "";

     label40:
        if $r3 == null goto label41;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 == 32 goto label68;

     label41:
        $r3 = staticinvoke <com.bugsense.trace.Utils: java.lang.String generateUid()>();

        $z0 = 1;

     label42:
        <com.bugsense.trace.G: java.lang.String UID> = $r3;

     label43:
        if $z0 == 0 goto label53;

     label44:
        varReplacer3540 = 1;

        $z0 = staticinvoke <com.bugsense.trace.Utils: boolean hasStorage(boolean)>(varReplacer3540);

     label45:
        if $z0 == 0 goto label67;

     label46:
        $r10 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label47:
        $r6 = <com.bugsense.trace.G: java.lang.String APP_PACKAGE>;

     label48:
        varReplacer3543 = "android.permission.WRITE_EXTERNAL_STORAGE";

        $i0 = virtualinvoke $r10.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>(varReplacer3543, $r6);

     label49:
        if $i0 != 0 goto label67;

     label50:
        $z0 = staticinvoke <com.bugsense.trace.Utils: boolean saveUid(java.io.File,java.lang.String)>($r1, $r3);

     label51:
        if $z0 != 0 goto label53;

     label52:
        staticinvoke <com.bugsense.trace.Utils: boolean saveUid(java.io.File,java.lang.String)>($r5, $r3);

     label53:
        goto label02;

     label54:
        $r11 := @caughtexception;

        $r3 = <com.bugsense.trace.G: java.lang.String TAG>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        varReplacer3539 = "Exception at new File!";

        $r4 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3539);

        $r6 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, $r6);

        $r3 = "12345678901234567890123456789012";

        goto label02;

     label55:
        $r12 := @caughtexception;

        r24 = (java.io.IOException) $r12;

        virtualinvoke r24.<java.io.IOException: void printStackTrace()>();

     label56:
        goto label24;

     label57:
        $r13 := @caughtexception;

        exitmonitor class "Lcom/bugsense/trace/Utils;";

        throw $r13;

     label58:
        $r14 := @caughtexception;

     label59:
        $r8 = $r2;

        goto label35;

     label60:
        $r15 := @caughtexception;

     label61:
        r24 = (java.io.IOException) $r15;

        virtualinvoke r24.<java.io.IOException: void printStackTrace()>();

     label62:
        goto label37;

     label63:
        $r16 := @caughtexception;

        $z0 = 0;

        goto label51;

     label64:
        $r17 := @caughtexception;

        $r2 = $r8;

        goto label59;

     label65:
        $r18 := @caughtexception;

        $r8 = null;

        goto label22;

     label66:
        $r19 := @caughtexception;

        goto label22;

     label67:
        $z0 = 0;

        goto label51;

     label68:
        $z0 = 0;

        goto label42;

     label69:
        goto label40;

        catch java.lang.Throwable from label01 to label02 with label57;
        catch java.lang.Throwable from label04 to label06 with label57;
        catch java.lang.Exception from label07 to label08 with label54;
        catch java.lang.Exception from label09 to label10 with label54;
        catch java.lang.Exception from label11 to label12 with label54;
        catch java.lang.Exception from label13 to label14 with label54;
        catch java.lang.Throwable from label06 to label14 with label57;
        catch java.lang.Throwable from label15 to label16 with label57;
        catch java.lang.Exception from label18 to label19 with label65;
        catch java.lang.Throwable from label17 to label19 with label57;
        catch java.lang.Exception from label20 to label21 with label66;
        catch java.lang.Throwable from label20 to label21 with label57;
        catch java.io.IOException from label23 to label24 with label55;
        catch java.lang.Throwable from label23 to label24 with label57;
        catch java.lang.Throwable from label25 to label29 with label57;
        catch java.lang.Exception from label31 to label32 with label58;
        catch java.lang.Throwable from label30 to label32 with label57;
        catch java.lang.Exception from label33 to label34 with label64;
        catch java.lang.Throwable from label33 to label34 with label57;
        catch java.io.IOException from label36 to label37 with label60;
        catch java.lang.Throwable from label36 to label37 with label57;
        catch java.lang.Throwable from label38 to label43 with label57;
        catch java.lang.Exception from label44 to label45 with label63;
        catch java.lang.Exception from label46 to label47 with label63;
        catch java.lang.Exception from label48 to label49 with label63;
        catch java.lang.Exception from label50 to label51 with label63;
        catch java.lang.Throwable from label44 to label51 with label57;
        catch java.lang.Throwable from label52 to label56 with label57;
        catch java.lang.Throwable from label61 to label62 with label57;
    }

    public static java.lang.String readFile(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuilder $r1, r12;
        java.io.FileReader $r2, r13;
        java.io.BufferedReader $r3, $r4, r14;
        java.lang.Exception $r5, $r11;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10;
        java.io.IOException r15;

        nop;

        $r0 := @parameter0: java.lang.String;

        r12 = new java.lang.StringBuilder;

        $r1 = r12;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r3 = null;

     label01:
        r14 = new java.io.BufferedReader;

     label02:
        $r4 = r14;

     label03:
        r13 = new java.io.FileReader;

     label04:
        $r2 = r13;

     label05:
        specialinvoke r13.<java.io.FileReader: void <init>(java.lang.String)>($r0);

        specialinvoke r14.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);

     label06:
        $r0 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label07:
        if $r0 == null goto label14;

     label08:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label09:
        goto label06;

     label10:
        $r5 := @caughtexception;

     label11:
        if $r4 == null goto label13;

     label12:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label13:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label14:
        if $r4 == null goto label13;

     label15:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label16:
        goto label13;

     label17:
        $r6 := @caughtexception;

        r15 = (java.io.IOException) $r6;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        goto label13;

     label18:
        $r7 := @caughtexception;

        r15 = (java.io.IOException) $r7;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        goto label13;

     label19:
        $r8 := @caughtexception;

     label20:
        if $r3 == null goto label22;

     label21:
        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

     label22:
        throw $r8;

     label23:
        $r9 := @caughtexception;

        r15 = (java.io.IOException) $r9;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        goto label22;

     label24:
        $r10 := @caughtexception;

        $r3 = $r4;

        $r8 = $r10;

        goto label20;

     label25:
        $r11 := @caughtexception;

        $r4 = null;

        goto label11;

        catch java.lang.Exception from label05 to label06 with label25;
        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Throwable from label06 to label07 with label24;
        catch java.lang.Throwable from label08 to label09 with label24;
        catch java.io.IOException from label12 to label13 with label18;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label21 to label22 with label23;
    }

    public static java.lang.String readLogs()
    {
        int $i0, $i1;
        java.lang.String $r0, varReplacer3631, varReplacer3632, varReplacer3633, varReplacer3634;
        java.lang.StringBuilder $r1, $r3;
        java.lang.Runtime $r2;
        java.lang.Process $r4;
        java.io.BufferedReader $r5;
        java.io.InputStreamReader $r6;
        java.io.InputStream $r7;
        java.util.ArrayList $r8;
        java.lang.Exception $r9;
        boolean $z0;
        java.lang.Object $r10;

        nop;

        $i0 = <com.bugsense.trace.G: int LOG_LINES>;

        if $i0 >= 0 goto label01;

        $i0 = 100;

     label01:
        $r0 = <com.bugsense.trace.G: java.lang.String LOG_FILTER>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label02:
        $r2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

     label03:
        $r3 = new java.lang.StringBuilder;

     label04:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer3632 = "logcat -d ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3632);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.Runtime: java.lang.Process exec(java.lang.String)>($r0);

     label05:
        $r5 = new java.io.BufferedReader;

        $r6 = new java.io.InputStreamReader;

     label06:
        $r7 = virtualinvoke $r4.<java.lang.Process: java.io.InputStream getInputStream()>();

        specialinvoke $r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r7);

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>($r6);

     label07:
        $r8 = new java.util.ArrayList;

     label08:
        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

     label09:
        $r0 = virtualinvoke $r5.<java.io.BufferedReader: java.lang.String readLine()>();

     label10:
        if $r0 == null goto label15;

     label11:
        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r0);

     label12:
        goto label09;

     label13:
        $r9 := @caughtexception;

        $r0 = <com.bugsense.trace.G: java.lang.String TAG>;

        varReplacer3631 = "Error reading logcat output!";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, varReplacer3631);

        $z0 = <com.bugsense.trace.BugSenseHandler: boolean I_WANT_TO_DEBUG>;

        if $z0 == 0 goto label14;

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label14:
        $r0 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        return $r0;

     label15:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

     label16:
        if $i1 != 0 goto label17;

        varReplacer3633 = "You must add the android.permission.READ_LOGS permission to your manifest file!";

        return varReplacer3633;

     label17:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

     label18:
        $i0 = $i1 - $i0;

        if $i0 >= 0 goto label19;

        $i0 = 0;

     label19:
        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

     label20:
        if $i0 >= $i1 goto label23;

        $r3 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r10 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>($i0);

        $r0 = (java.lang.String) $r10;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer3634 = "\n";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3634);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label22:
        $i0 = $i0 + 1;

        goto label19;

     label23:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        return $r0;

        catch java.lang.Exception from label02 to label03 with label13;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label15 to label16 with label13;
        catch java.lang.Exception from label17 to label18 with label13;
        catch java.lang.Exception from label19 to label20 with label13;
        catch java.lang.Exception from label21 to label22 with label13;
        catch java.lang.Exception from label23 to label24 with label13;
    }

    protected static void saveCrashCounter()
    {
        java.lang.Thread $r0;
        java.util.concurrent.ExecutorService $r1;
        com.bugsense.trace.Utils$2 $r2;

        $r0 = new java.lang.Thread;

        $r2 = new com.bugsense.trace.Utils$2;

        specialinvoke $r2.<com.bugsense.trace.Utils$2: void <init>()>();

        specialinvoke $r0.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);

        $r1 = staticinvoke <com.bugsense.trace.BugSense: java.util.concurrent.ExecutorService getExecutor()>();

        if $r0 == null goto label1;

        if $r1 == null goto label1;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r0);

     label1:
        return;
    }

    public static void saveLastCrashID(java.lang.String)
    {
        java.lang.String $r0, $r1, $r3, varReplacer3831;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.Thread $r4;
        com.bugsense.trace.Utils$3 $r5;
        java.util.concurrent.ExecutorService $r6;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = <com.bugsense.trace.BugSenseHandler: boolean I_WANT_TO_DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = <com.bugsense.trace.G: java.lang.String TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer3831 = "Last Crash id: ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3831);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r3);

     label1:
        if $r0 == null goto label2;

        $r4 = new java.lang.Thread;

        $r5 = new com.bugsense.trace.Utils$3;

        specialinvoke $r5.<com.bugsense.trace.Utils$3: void <init>(java.lang.String)>($r0);

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r5);

        $r6 = staticinvoke <com.bugsense.trace.BugSense: java.util.concurrent.ExecutorService getExecutor()>();

        if $r4 == null goto label2;

        if $r6 == null goto label2;

        interfaceinvoke $r6.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r4);

     label2:
        return;
    }

    private static boolean saveUid(java.io.File, java.lang.String)
    {
        java.io.File $r0;
        java.lang.String $r1, $r5, varReplacer3564, varReplacer3565;
        java.io.PrintWriter $r2, r7;
        java.lang.Throwable $r3, $r6;
        boolean $z0;
        java.lang.StringBuilder $r4, r8;
        java.io.IOException r9;
        int varReplacer3566, varReplacer3567, varReplacer3568;

        nop;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label13;

     label01:
        r7 = new java.io.PrintWriter;

     label02:
        $r2 = r7;

     label03:
        specialinvoke r7.<java.io.PrintWriter: void <init>(java.io.File)>($r0);

     label04:
        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.PrintWriter: void flush()>();

     label05:
        if $r2 == null goto label19;

        virtualinvoke $r2.<java.io.PrintWriter: void close()>();

        varReplacer3567 = 1;

        return varReplacer3567;

     label06:
        $r3 := @caughtexception;

        $r2 = null;

     label07:
        $r1 = <com.bugsense.trace.G: java.lang.String TAG>;

        varReplacer3565 = "Cannot save uid";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, varReplacer3565);

        $z0 = <com.bugsense.trace.BugSenseHandler: boolean I_WANT_TO_DEBUG>;

     label08:
        if $z0 == 0 goto label12;

     label09:
        $r1 = <com.bugsense.trace.G: java.lang.String TAG>;

        r8 = new java.lang.StringBuilder;

     label10:
        $r4 = r8;

     label11:
        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer3564 = "Cannot save uid, path= ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3564);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r1, $r5);

        r9 = (java.io.IOException) $r3;

        virtualinvoke r9.<java.io.IOException: void printStackTrace()>();

     label12:
        if $r2 == null goto label13;

        virtualinvoke $r2.<java.io.PrintWriter: void close()>();

     label13:
        varReplacer3566 = 0;

        return varReplacer3566;

     label14:
        $r6 := @caughtexception;

        $r2 = null;

     label15:
        if $r2 == null goto label16;

        virtualinvoke $r2.<java.io.PrintWriter: void close()>();

     label16:
        throw $r6;

     label17:
        $r6 := @caughtexception;

        goto label15;

     label18:
        $r3 := @caughtexception;

        goto label07;

     label19:
        varReplacer3568 = 1;

        return varReplacer3568;

        catch java.io.IOException from label03 to label04 with label06;
        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.io.IOException from label04 to label05 with label18;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
    }

    public static void setProperties(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.String[] $r1;
        java.util.Locale $r2;
        java.lang.String $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.bugsense.trace.Utils: int isWifiOn(android.content.Context)>($r0);

        <com.bugsense.trace.G: int IS_WIFI_ON> = $i0;

        $i0 = staticinvoke <com.bugsense.trace.Utils: int isMobileNetworkOn(android.content.Context)>($r0);

        <com.bugsense.trace.G: int IS_MOBILENET_ON> = $i0;

        $i0 = staticinvoke <com.bugsense.trace.Utils: int isGPSOn(android.content.Context)>($r0);

        <com.bugsense.trace.G: int IS_GPS_ON> = $i0;

        $r1 = staticinvoke <com.bugsense.trace.Utils: java.lang.String[] ScreenProperties(android.content.Context)>($r0);

        <com.bugsense.trace.G: java.lang.String[] SCREEN_PROPS> = $r1;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = virtualinvoke $r2.<java.util.Locale: java.lang.String getDisplayLanguage()>();

        <com.bugsense.trace.G: java.lang.String LOCALE> = $r3;

        $r3 = staticinvoke <com.bugsense.trace.Utils: java.lang.String getAppsRunning(android.content.Context)>($r0);

        <com.bugsense.trace.G: java.lang.String APPS_RUNNING> = $r3;

        return;
    }
}
