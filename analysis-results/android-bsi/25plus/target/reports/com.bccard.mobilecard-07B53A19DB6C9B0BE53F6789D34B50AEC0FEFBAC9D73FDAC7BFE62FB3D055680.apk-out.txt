Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.bccard.mobilecard-07B53A19DB6C9B0BE53F6789D34B50AEC0FEFBAC9D73FDAC7BFE62FB3D055680.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] decrypt(byte[])>
		SHA-256: 9113242c2578a246f75891b69a31ec4e5f95aabd56b4eeef27a0d418cbd86ec9
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.Key
		Statement: $r17 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer28016, $r16)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void issueCertificate(char[],java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
		SHA-256: 22f564be0a9542d02ba21354635e3e08d361d1d4dec4cfa11b2bad3ef0b8bc2e
		Secure: true
	Object:
		Variable: $r24
		Type: byte[]
		Statement: virtualinvoke $r23.<java.security.SecureRandom: void nextBytes(byte[])>($r24)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void issueCertificate(char[],java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
		SHA-256: 147399d21a484e961ecfac794f81852d67ac6e07ddd8c965859dcfc1b4c5aed5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16888)
		Method: <com.bccard.mobilewallet.a.f.a.g: void <init>()>
		SHA-256: 762b49fa106489e4fff42e0f07c43ea9bc5ffb3bb66b6ed022e602ed83a552d3
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.PublicKey
		Statement: $r14 = virtualinvoke $r11.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: 51ea878781777d50cb4558ee2c956330168a3af8546361b5026ee1c4a588360
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer29602, varReplacer29603)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void updateCertificate(java.security.cert.X509Certificate,java.security.PrivateKey,char[],java.lang.String,java.lang.String,int)>
		SHA-256: 561d65f43fb3f980a9da81ea95e107da6de379c8c962c3f6af6c9b0ca41cda5d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.nshc.ap.SharedLibCompare: java.lang.String ˊ(java.io.File,java.lang.String)>
		SHA-256: e3a4ffdf9a72fd59379bed57b4efeafbfd5a847b841d3745c2f06946a199295c
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.Key
		Statement: $r17 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer28018, $r16)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void issueCertificate(char[],java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
		SHA-256: ece8d7003d11c6f7922624bb209f7135b035ed874f861d35d1b98da172684ab8
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyPair
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext,int)>
		SHA-256: 69e5b4544a931a6fc30df8e6059675cb9abb7a34bab3cab9ebeb9476f17bc6f3
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <com.initech.pkix.'cmp'.CertStatus: void setCertHash(java.security.cert.X509Certificate)>
		SHA-256: 37362bf32161f6bedd1f6e06ded405d4de6b91c68041b7c920e0a32d10e728f2
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] decrypt(byte[])>
		SHA-256: 8b8d186751cfa97ab37e462b1890c5212192470ec4f27c71f81392980d839156
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer959)
		Method: <com.bccard.mobilewallet.a.c.a.o: void <init>(java.security.KeyStore)>
		SHA-256: c2cb988d2742e58bfd942b553ab722dda88287da8dcbcd1ba08b32e0fd4a5d8f
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPairGenerator
		Statement: $r9 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer28306)
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: a5c3f62a380c6ba1b904011d09fd9d57f8c8b3f7f2926ceae3eb303e2e0c13e4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <net.nshc.ap.SharedLibCompare: java.lang.String ˊ(java.io.File,java.lang.String)>
		SHA-256: d9fb045cafab83f1681e24a14be00deaf1d554ea9cf0f9d6515ba3efa23ee128
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] decrypt(byte[])>
		SHA-256: d56e7f9915315217eb430107f0058b9ebb21d90ac6278d14d3e3c7ce6c1871e5
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<java.security.Signature: byte[] sign()>()
		Method: <com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String,byte[])>
		SHA-256: f5f68e10a1205878dd29e8c3e8b7289b90e90fac18e5c696e9769fc79afed9f8
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: $r11 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: e50976722ab7ed9c4e70fd3b1f0d96711ea5ee082dca78fab52d57c957b024c5
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] a(byte[])>
		SHA-256: 4f42cff51f108be7074d4e69d154759ff6df425c05442c1502b0ad074d8f4c5e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer11552)
		Method: <com.bccard.mobileservice.a.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 3fa5bd443fa638a3a7648ff254e08fd8e19fed6d2cad3c6cd4e16bd5d5dea262
		Secure: false
	Object:
		Variable: r58
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke r58.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r15, varReplacer27533)
		Method: <com.initech.android.sfilter.plugin.pki.ui.a: void a()>
		SHA-256: 79dfc7a447695031cbae11fd186d24255ce2ea500735ecf88e57c39efb89d6ce
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r9 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] decrypt(byte[])>
		SHA-256: 1d68b3143a1deea1b34b3266a7ccbd42762147b0be3b408aae6677ebd8a7a01b
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PrivateKey
		Statement: $r12 = virtualinvoke $r11.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: b76dc774c56d8770fc05a20305b8ec5b4a0ec84a488fb3c2eb788715403d865
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] generateMS()>
		SHA-256: 9432a15010d2fb0c2b739f103c176eb17882f6ffbe858f0bf42f27d5db63fb98
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r11.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: a53f8668f54ea654cb3687d26e8caa9c7737cb756e0b154263b47566626c0c92
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r8, varReplacer28510)
		Method: <com.initech.provider.crypto.rsa.RSAAutoSignature: boolean verify()>
		SHA-256: e52196ed588ba42b13c8d3f6d164b1700f7cdea998c51300a47a223c9a6d497b
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.AlgorithmParameters
		Statement: $r14 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r5, $r6)
		Method: <com.initech.pkcs.pkcs8.EncryptedPrivateKeyInfo: byte[] encrypt(com.initech.pkcs.pkcs8.PrivateKeyInfo,com.initech.cryptox.spec.PBEKeySpec,com.initech.asn1.useful.AlgorithmID)>
		SHA-256: fae213721ca58c92ff64fe79e4fd45b648dccc4bd008117884705e5dacd04c43
		Secure: true
	Object:
		Variable: $r23
		Type: java.security.SecureRandom
		Statement: $r23 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer28002, varReplacer28003)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void issueCertificate(char[],java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
		SHA-256: 637e5d0b9f83c4f0d69ee0fa98e5c1f328d410b1dd383603c266ab17f5528458
		Secure: false
	Object:
		Variable: $r19
		Type: byte[]
		Statement: $r19 = virtualinvoke $r17.<java.security.AlgorithmParameters: byte[] getEncoded()>()
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void updateCertificate(java.security.cert.X509Certificate,java.security.PrivateKey,char[],java.lang.String,java.lang.String,int)>
		SHA-256: b4f8fef324ca43060c4fe053e3146e15391abfd1a0b2411c28bc8bae5fcee5f4
		Secure: false
	Object:
		Variable: $r23
		Type: java.security.SecureRandom
		Statement: $r23 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer27508, varReplacer27509)
		Method: <com.initech.android.sfilter.plugin.pki.ui.a: void a()>
		SHA-256: 77b7768eba1a2228e6e91a285d5dc4ac4f432e4c13c2dedf35873539130d1534
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.initech.provider.crypto.rsa.EMSAPSSCodec: boolean decode(byte[],byte[],int,int)>
		SHA-256: 4217b9603f17eed23920d5e4f7187c1e35b68d2faf336030ee2fccc0003ef0a9
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.Key
		Statement: $r15 = virtualinvoke $r8.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer28228, $r14)
		Method: <com.initech.android.sfilter.plugin.pki.ui.INICACMP: java.lang.Object[] CertRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: 94f7d9163b34c7977e5ce1b950a238d720c092ab773a7a15d0301a098fbc76c6
		Secure: true
	Object:
		Variable: $r15
		Type: byte[]
		Statement: virtualinvoke $r23.<java.security.SecureRandom: void nextBytes(byte[])>($r15)
		Method: <com.initech.android.sfilter.plugin.pki.ui.a: void a()>
		SHA-256: 4c23206d5d10a74bb320d4e1b163bf002c6b96af89cc7a7a752ef9a75b422e31
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.initech.asn1.useful.VID: void a(com.initech.asn1.useful.HashContent)>
		SHA-256: 621712b0b162cd5d68dd6ce76d9cad56cf818f5dba82117d1b14ecaa939eacf
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r2)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] decrypt(byte[])>
		SHA-256: bb9509fc3d7f97537e14f602ea91bb9cab962ebe684d73c85998a7895a03bd2d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <com.initech.asn1.useful.VID: void a(com.initech.asn1.useful.HashContent)>
		SHA-256: af3835ab81edacc4107a0707d61142186e668b8124a52636b259b5b72ead0ca
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.AlgorithmParameters
		Statement: $r17 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer29579)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void updateCertificate(java.security.cert.X509Certificate,java.security.PrivateKey,char[],java.lang.String,java.lang.String,int)>
		SHA-256: cde9b6af52f882bd140c21efae4edcbb212b4bb09ecab4a1053b84a18a9607d7
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.Key
		Statement: $r16 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r3, $r15)
		Method: <com.initech.pkix.'cmp'.client.PKICMP_YesSign: void setFromKeyStore(com.initech.pkix.'cmp'.client.CMPContext,java.security.KeyStore,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: cd515295cb6272558395a7c60655f1f13430a2b7a031173e01f41bf00a6cab68
		Secure: true
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r15 = virtualinvoke $r22.<java.security.AlgorithmParameters: byte[] getEncoded()>()
		Method: <com.initech.android.sfilter.plugin.pki.ui.a: void a()>
		SHA-256: 43affce3c775e965fcd758dfc07768edbb7c1b49e3f7283b8809f3a73ceade2f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2987)
		Method: <com.initech.android.sfilter.client.INISAFEMobilianUtil: java.lang.String a()>
		SHA-256: 9512ae2cd8897db904fd82b1d5740cfb576f2035cce0c06cfa91bd2c5280102a
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.SecureRandom
		Statement: $r18 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer29591, varReplacer29592)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void updateCertificate(java.security.cert.X509Certificate,java.security.PrivateKey,char[],java.lang.String,java.lang.String,int)>
		SHA-256: fe03c8783fa4b78310d0e7177360a3a3fe23d64de3f8ebc17bf368f9bf6c9060
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: specialinvoke $r11.<java.security.SecureRandom: void <init>()>()
		Method: <com.bccard.mobilewallet.action.d.e: com.bccard.mobilewallet.data.usim.ActionDataUsim c(java.lang.String)>
		SHA-256: c24d9ea4b83f0f5c3d340ea84b3921d7844a2f15bca2c475188999709cfa3b9f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.bccard.mobilewallet.a.c.a.o: java.security.KeyStore a()>
		SHA-256: 2faa3b1912c9ec029e7d0d0eca452505ed352a759e5e7aa00dd571f7e91493ee
		Secure: true
	Object:
		Variable: r29
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke r29.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r19, varReplacer29586)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void updateCertificate(java.security.cert.X509Certificate,java.security.PrivateKey,char[],java.lang.String,java.lang.String,int)>
		SHA-256: 51a0c2eb11b2a7f730cef41a2c159871e6633cddbd919aa23eea9fc34109f4cb
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r4)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] a(byte[])>
		SHA-256: b87913192f9f073de21469644b3e0b71bda345b8715f3611024ded04ea2943c9
		Secure: true
	Object:
		Variable: $r0
		Type: com.initech.cryptox.spec.PBEParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r1, $i0)
		Method: <com.initech.cryptox.spec.PBEParameterSpec: void <init>(byte[],int)>
		SHA-256: 93b4b254f325908a44aa22717ddb683e3e82fbfb817f20997cfabeb38444545f
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPairGenerator
		Statement: $r9 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer28704)
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: 93a9e0443f974ce07f45eb98e2bbc9f8b0622777617f736a8fae43b95d2cd546
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <net.nshc.ap.AppProtect: java.lang.String ˋ(android.content.Context)>
		SHA-256: 8fd177e3e1a608738b9dfa11f4052d0557cd55487dae2e5dc10544336d3f6a18
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer19936)
		Method: <com.initech.android.sfilter.core.LocalSocketAcceptor: int a(int)>
		SHA-256: f5789cbf30762b740c7a34810bb008017104a98caf4c86e82aa16e9109f66800
		Secure: true
	Object:
		Variable: varReplacer11552
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer11552)
		Method: <com.bccard.mobileservice.a.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 375ed010cb6c1a40768572c5862a557a5df71d595a774a296b3876a56f7a93eb
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.bccard.mobilewallet.action.d.g: void <init>(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 27243340630433327e8dea2918538fc99bad437aef4722d0790ebd9b19397280
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.nshc.ap.AppProtect: java.lang.String ˊ(android.content.Context)>
		SHA-256: 821fa7075fa57ab7857497981bfedd67b163c6d9d4fd58d8f03139b2947360d8
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.Key
		Statement: $r15 = virtualinvoke $r9.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer29594, $r10)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void updateCertificate(java.security.cert.X509Certificate,java.security.PrivateKey,char[],java.lang.String,java.lang.String,int)>
		SHA-256: f8dc768069e9659c03020c03b8e168ea9e20d775b75ccc4653875bd45d18872
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] decrypt(byte[])>
		SHA-256: 498ac2453c52d1281b4c1c91f652af6d33815299c58b5f9d5448bce212b87480
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, varReplacer30760)
		Method: <com.initech.android.sfilter.core.CryptoUtil: void <init>(com.initech.android.sfilter.core.EnvSetup)>
		SHA-256: 21a54c35e22d36d547dae0e8b924fafdfd28ef633b81b0b03ef22ccbadcd3bf
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.initech.asn1.useful.VID: void a(com.initech.asn1.useful.HashContent)>
		SHA-256: 621712b0b162cd5d68dd6ce76d9cad56cf818f5dba82117d1b14ecaa939eacf
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.initech.pkix.'cmp'.PKIMessage: void sign(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>
		SHA-256: bf8ba71b268150aab1a3b33d6bedcda4aefd54b6ae56713113ae5f8c4bc1fe0b
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: $r10 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: 82458583c4cee4149c79b779e20df4a8a9babd7a5bc8f1eadb7db6d8d2617e31
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.initech.asn1.useful.IssuerAndSerialNumber: void a()>
		SHA-256: 109ff67bb4fc92f6ef677e01b740c8b4531b29115990d01281a6b09e348b8cf4
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r8, varReplacer28509)
		Method: <com.initech.provider.crypto.rsa.RSAAutoSignature: boolean verify()>
		SHA-256: fba22866ed67f2e560bf393eb67bb2bf93ed6aa9a9d131c571514f3b5c1fc995
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.AlgorithmParameters
		Statement: $r14 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>(varReplacer27878, $r5)
		Method: <com.initech.pkcs.pkcs8.EncryptedPrivateKeyInfo: byte[] encrypt(com.initech.pkcs.pkcs8.PrivateKeyInfo,com.initech.cryptox.spec.PBEKeySpec,com.initech.asn1.useful.AlgorithmID)>
		SHA-256: 17cc02628b0952f938d91c883fcb0c03efb39d7c4b49a1f59b9f8836e77d0049
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: virtualinvoke $r15.<java.security.SecureRandom: void nextBytes(byte[])>($r16)
		Method: <com.initech.android.sfilter.core.DefaultSHTTPClient: org.apache.http.HttpResponse executeSHTTP(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
		SHA-256: beabff9be935e1282fdab34fa6f0de712e329d555b16eb49eb1923b29a06183e
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.nshc.ap.AppProtect: java.lang.String ˋ(android.content.Context)>
		SHA-256: 9856e01796925eb84851a405185a79656af9aff8dd92d39c917b2e54da4abd5c
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29170)
		Method: <com.initech.x509.extensions.SubjectKeyIdentifier: void <clinit>()>
		SHA-256: 688d1da5ddd462581e1fb2b589eafe0d00621f926b6825e914709cb8cb8bbd6a
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.SecureRandom
		Statement: specialinvoke $r22.<java.security.SecureRandom: void <init>()>()
		Method: <com.bccard.mobilewallet.action.d.l: com.bccard.mobilewallet.data.usim.ActionDataUsim a(org.json.JSONObject,com.bccard.mobilewallet.action.d)>
		SHA-256: 5dab27395154e776027b0992e0a765d91ee36df4a512695104654760d91e768b
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyPairGenerator
		Statement: $r9 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer28664)
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: cc14161054d7c2d902d4fcaa0ca1bd46b13e84a6542d4f28a56684336fcd27cf
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11551)
		Method: <com.bccard.mobileservice.a.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 777a7a860d831c1d8c584ad4a180d08ef55b285d810d33367a374fd35f607e8a
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.Key
		Statement: $r16 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r3, $r15)
		Method: <com.initech.pkix.'cmp'.client.PKICMP_YesSign: void setFromKeyStore(com.initech.pkix.'cmp'.client.CMPContext,java.security.KeyStore,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: cd515295cb6272558395a7c60655f1f13430a2b7a031173e01f41bf00a6cab68
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r6, $r3)
		Method: <com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String,byte[])>
		SHA-256: 41b26e2d4e65d75961dc914d1069d338480819b2b684f86bb9e10d6493ccc244
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, varReplacer28367)
		Method: <com.initech.pkix.'cmp'.PKIMessage: void sign(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>
		SHA-256: 104bed55b7297517827a0876d3b711f962a1ce0b0692243bd43a16b988607bfc
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] publicKeyEncrypt(byte[])>
		SHA-256: 45582c3577266c85b1afbe6097eb495e745311f55cc9ae37d83369f7d135b1b4
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyPairGenerator
		Statement: $r7 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer28271)
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext,int)>
		SHA-256: d0d6bf8d8ceff2827a820a897e4283a512a775a4949aee4776bd21fd67375468
		Secure: false
	Object:
		Variable: $r19
		Type: byte[]
		Statement: virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r19)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void updateCertificate(java.security.cert.X509Certificate,java.security.PrivateKey,char[],java.lang.String,java.lang.String,int)>
		SHA-256: 32ada4d44c6348a6e5d6c2762a1a9ab7f782fd7fcfc17aed316e770fddce5ced
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PrivateKey
		Statement: $r12 = virtualinvoke $r11.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: 8801b424b06023d7a8f522cca43231f6b9779b7694d7202b42ea84f4c5e9580d
		Secure: true
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r22.<java.security.AlgorithmParameters: byte[] getEncoded()>()
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void issueCertificate(char[],java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
		SHA-256: da10f31d35c7e90b18fe9f1344abe65d33957b02d9c07f75a9bd3f7c0d61f6b9
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: $r9 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: 1da6d926f94075e31c318ca89589df27129183e9d60450cf25acda5c5b2cacd5
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.initech.pkix.'cmp'.CertStatus: void setCertHash(java.security.cert.X509Certificate)>
		SHA-256: f100528ed7fcd4ee927e5781a1e6b938a8ebb85edea86f9dc1e665d07956a5d6
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.SecureRandom
		Statement: specialinvoke $r19.<java.security.SecureRandom: void <init>()>()
		Method: <com.bccard.mobilewallet.action.d.h: com.bccard.mobilewallet.data.usim.ActionDataUsim c(java.lang.String)>
		SHA-256: d03c1f8fd135037875413e3aa5d5c3cee9702f01ea7b75083baafeb8da96853
		Secure: true
	Object:
		Variable: $r22
		Type: java.security.AlgorithmParameters
		Statement: $r22 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer28027)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void issueCertificate(char[],java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
		SHA-256: edb576d64765fd7fe00bb7fcb11f0d24c04a68e10a143c06b1181ef49ddcf8bc
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] decrypt(byte[])>
		SHA-256: 7e71dd26bdaa11ce191fe9605f980e2b95307dd7d10763f3df7e32f7b478b3ec
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: $r11 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: 7cbc11f13d5ae38bee5b24624c02c2f34af993ac7f1374d271a70b333e855b63
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r4, varReplacer30778)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] publicKeyEncrypt(byte[])>
		SHA-256: 82932d0917bf9429809e6a2d592f85ef2a1861dbfbfe823ece19262eedd4d514
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1584)
		Method: <com.nshc.nfilter.b.m: byte[] b(byte[])>
		SHA-256: b5f664437a760913cc08953c9849568259ec13e7d9a21e8eeda7d6dc1fa003d1
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.AlgorithmParameters
		Statement: $r22 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer27530)
		Method: <com.initech.android.sfilter.plugin.pki.ui.a: void a()>
		SHA-256: 75566243d010e45cc73147590c5e566d2951d38d9730b8cbeb5afe42866a3343
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.bccard.mobileservice.a.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 44fe10234b4294827b20f7b25c0a05927789f15deb81eaabd1f569849f235eab
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.initech.provider.crypto.rsa.RSAAutoSignature: boolean verify()>
		SHA-256: 887044f3d3112ba652d96e999dddb1c69dc69fbb15c90cd750766eeced4cc332
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyPairGenerator
		Statement: $r8 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer28324)
		Method: <com.initech.pkix.'cmp'.client.PKIMessageFormatter: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>
		SHA-256: 2c9646471a77ae8ba70f14690a8e3c2ba8d477f31f30154fd1b4b9f539c9fd12
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: $r15 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer30454)
		Method: <com.initech.android.sfilter.core.DefaultSHTTPClient: org.apache.http.HttpResponse executeSHTTP(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
		SHA-256: fed455c968ab5d475a4b659a1496dffa968d86f9ec8146924a670470256fb64d
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.initech.provider.crypto.rsa.RSAAutoSignature: boolean verify()>
		SHA-256: 887044f3d3112ba652d96e999dddb1c69dc69fbb15c90cd750766eeced4cc332
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.initech.cryptox.Cipher: void init(int,java.security.Key)>
		SHA-256: ee4a6e5636a6731422414d0c95dfbcc4168333410138c2132c3a5ba9960d2d33
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.SecureRandom
		Statement: specialinvoke $r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.bccard.mobilewallet.action.d.h: com.bccard.mobilewallet.data.usim.ActionDataUsim b(java.lang.String,java.lang.String)>
		SHA-256: c7a9e6107e39696ae8be3e3d1b0fd9ad752bb6d6a2ff267a1eb69866d4f58149
		Secure: true
	Object:
		Variable: $r25
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r25.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r24, varReplacer28025)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void issueCertificate(char[],java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
		SHA-256: d002204a6e155a34c36122b581c393029400840f469880f17f82bb8204908f70
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.nshc.nfilter.b.m: byte[] b(byte[])>
		SHA-256: d8549b1c175aa4f7b37e3900ae5c7def8faa79535810eb3c338de846b31ddbd3
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] decrypt(byte[])>
		SHA-256: a63a3a42cc000406d2c1aa6a89d91816c145ce7336a698356ca04fc7476eaf6e
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer28226, varReplacer28227)
		Method: <com.initech.android.sfilter.plugin.pki.ui.INICACMP: java.lang.Object[] CertRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: 403894464ac9bc6602f6f6ce6ee262e4738641ee696f54f32660edd39aad9669
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <net.nshc.ap.AppProtect: java.lang.String ˊ(android.content.Context)>
		SHA-256: 7d7ab38b45a25df80196393dbd7d44e77e32da29772ab6b1c1923286ad53fec4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer30773)
		Method: <com.initech.android.sfilter.core.CryptoUtil: byte[] generateMS()>
		SHA-256: 25788b90e6866059a0198de0be5c99c7348f107ea26bf8d7ca8ba77ea5098b1e
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer27997, varReplacer27998)
		Method: <com.initech.android.sfilter.plugin.pki.ui.CMPService: void issueCertificate(char[],java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
		SHA-256: e260c8290d37530d392a10ffd26dbef20231bf136bc1e0aef7b19daf200f4829
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.initech.cryptox.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>
		SHA-256: 29a477d3d6b98e632c430ae1360488f373674137b9b2980268902a9c91f8c82d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28988)
		Method: <com.initech.asn1.useful.IssuerAndSerialNumber: void a()>
		SHA-256: 43230a7d0ee1ed8632c48d1705b8fa6fe7de3879df230c836fa014108aa46b21
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16886)
		Method: <com.bccard.mobilewallet.a.f.a.f: void <init>()>
		SHA-256: b1ae95c97c381f46707a39803b16a0deee325ec4fd7981c19f4e450b120a752e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.initech.provider.crypto.rsa.EMSAPSSCodec: void MGF1(byte[],int,int,byte[],int,int)>
		SHA-256: 3fa04db194d1931987c0251b67b830cb780f550aa9e46818dcd420997805
		Secure: true

Findings in Java Class: com.initech.android.sfilter.plugin.pki.ui.a

	 in Method: void a()
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke r56.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r20)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r58.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r15, varReplacer27533)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #79dfc7a447695031cbae11fd186d24255ce2ea500735ecf88e57c39efb89d6ce)
			Second parameter (with value 2048)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r58.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r15, varReplacer27533)

		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #75566243d010e45cc73147590c5e566d2951d38d9730b8cbeb5afe42866a3343)
			First parameter (with value "PBE") should be any of {DH, PKCS12PBE, PBEwithHmacSHA224AndAES_256, PSS, PBEwithHmacSHA512AndAES_128, PBEwithHmacSHA224AndAES_128, PBEwithHmacSHA256AndAES_128, OAEP, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, PBEwithHmacSHA384AndAES_256, AES, PBEwithHmacSHA512AndAES_256PBEwithHmacSHA512AndAES_256, DSADSA}
			at statement: $r22 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer27530)

		ConstraintError violating CrySL rule for java.security.SecureRandom (on Object #77b7768eba1a2228e6e91a285d5dc4ac4f432e4c13c2dedf35873539130d1534)
			First parameter (with value "X9.17") should be any of {SHA1PRNG}
			at statement: $r23 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer27508, varReplacer27509)


Findings in Java Class: com.initech.android.sfilter.plugin.pki.ui.CMPService

	 in Method: void issueCertificate(char[],java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #d002204a6e155a34c36122b581c393029400840f469880f17f82bb8204908f70)
			Second parameter (with value 2048)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r25.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r24, varReplacer28025)

		ConstraintError violating CrySL rule for java.security.SecureRandom (on Object #637e5d0b9f83c4f0d69ee0fa98e5c1f328d410b1dd383603c266ab17f5528458)
			First parameter (with value "X9.17") should be any of {SHA1PRNG}
			at statement: $r23 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer28002, varReplacer28003)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r1)

		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #edb576d64765fd7fe00bb7fcb11f0d24c04a68e10a143c06b1181ef49ddcf8bc)
			First parameter (with value "PBE") should be any of {DH, PKCS12PBE, PBEwithHmacSHA224AndAES_256, PSS, PBEwithHmacSHA512AndAES_128, PBEwithHmacSHA224AndAES_128, PBEwithHmacSHA256AndAES_128, OAEP, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, PBEwithHmacSHA384AndAES_256, AES, PBEwithHmacSHA512AndAES_256PBEwithHmacSHA512AndAES_256, DSADSA}
			at statement: $r22 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer28027)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r25.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r24, varReplacer28025)


	 in Method: void updateCertificate(java.security.cert.X509Certificate,java.security.PrivateKey,char[],java.lang.String,java.lang.String,int)
		ConstraintError violating CrySL rule for java.security.SecureRandom (on Object #fe03c8783fa4b78310d0e7177360a3a3fe23d64de3f8ebc17bf368f9bf6c9060)
			First parameter (with value "X9.17") should be any of {SHA1PRNG}
			at statement: $r18 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer29591, varReplacer29592)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #51a0c2eb11b2a7f730cef41a2c159871e6633cddbd919aa23eea9fc34109f4cb)
			Second parameter (with value 2048)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r29.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r19, varReplacer29586)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke r27.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r29.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r19, varReplacer29586)

		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #cde9b6af52f882bd140c21efae4edcbb212b4bb09ecab4a1053b84a18a9607d7)
			First parameter (with value "PBE") should be any of {DH, PKCS12PBE, PBEwithHmacSHA224AndAES_256, PSS, PBEwithHmacSHA512AndAES_128, PBEwithHmacSHA224AndAES_128, PBEwithHmacSHA256AndAES_128, OAEP, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, PBEwithHmacSHA384AndAES_256, AES, PBEwithHmacSHA512AndAES_256PBEwithHmacSHA512AndAES_256, DSADSA}
			at statement: $r17 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer29579)


Findings in Java Class: net.nshc.ap.SharedLibCompare

	 in Method: java.lang.String ˊ(java.io.File,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d9fb045cafab83f1681e24a14be00deaf1d554ea9cf0f9d6515ba3efa23ee128)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.nshc.nfilter.b.m

	 in Method: byte[] b(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b5f664437a760913cc08953c9849568259ec13e7d9a21e8eeda7d6dc1fa003d1)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1584)


Findings in Java Class: net.nshc.ap.AppProtect

	 in Method: java.lang.String ˋ(android.content.Context)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #8fd177e3e1a608738b9dfa11f4052d0557cd55487dae2e5dc10544336d3f6a18)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.lang.String ˊ(android.content.Context)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #7d7ab38b45a25df80196393dbd7d44e77e32da29772ab6b1c1923286ad53fec4)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.bccard.mobileservice.a.a

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #777a7a860d831c1d8c584ad4a180d08ef55b285d810d33367a374fd35f607e8a)
			First parameter (with value "AES") should be any of AES/{GCM, CBC, CTR}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11551)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer11550, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #777a7a860d831c1d8c584ad4a180d08ef55b285d810d33367a374fd35f607e8a)
			First parameter (with value "AES") should be any of AES/{GCM, CBC, CTR}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11551)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer11552)


Findings in Java Class: com.bccard.mobilewallet.a.f.a.f

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b1ae95c97c381f46707a39803b16a0deee325ec4fd7981c19f4e450b120a752e)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16886)


Findings in Java Class: com.bccard.mobilewallet.a.f.o

	 in Method: void b(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b1ae95c97c381f46707a39803b16a0deee325ec4fd7981c19f4e450b120a752e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer16876, $r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #762b49fa106489e4fff42e0f07c43ea9bc5ffb3bb66b6ed022e602ed83a552d3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer16883, $r6)


Findings in Java Class: com.bccard.mobilewallet.action.d.l

	 in Method: com.bccard.mobilewallet.data.usim.ActionDataUsim a(org.json.JSONObject,com.bccard.mobilewallet.action.d)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #5dab27395154e776027b0992e0a765d91ee36df4a512695104654760d91e768b)
			Unexpected call to method setSeed on object of type java.security.SecureRandom. Expect a call to one of the following methods next,generateSeed,nextBytes
			at statement: virtualinvoke $r22.<java.security.SecureRandom: void setSeed(long)>($l3)

		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #5dab27395154e776027b0992e0a765d91ee36df4a512695104654760d91e768b)
			Unexpected call to method setSeed on object of type java.security.SecureRandom. Expect a call to one of the following methods next,generateSeed,nextBytes
			at statement: virtualinvoke $r22.<java.security.SecureRandom: void setSeed(long)>($l3)


Findings in Java Class: com.bccard.mobilewallet.action.d.e

	 in Method: com.bccard.mobilewallet.data.usim.ActionDataUsim c(java.lang.String)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #c24d9ea4b83f0f5c3d340ea84b3921d7844a2f15bca2c475188999709cfa3b9f)
			Unexpected call to method setSeed on object of type java.security.SecureRandom. Expect a call to one of the following methods next,generateSeed,nextBytes
			at statement: virtualinvoke $r11.<java.security.SecureRandom: void setSeed(long)>($l3)


Findings in Java Class: com.initech.pkcs.pkcs8.EncryptedPrivateKeyInfo

	 in Method: byte[] encrypt(com.initech.pkcs.pkcs8.PrivateKeyInfo,com.initech.cryptox.spec.PBEKeySpec,com.initech.asn1.useful.AlgorithmID)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #17cc02628b0952f938d91c883fcb0c03efb39d7c4b49a1f59b9f8836e77d0049)
			First parameter (with value "PBE") should be any of {DH, PKCS12PBE, PBEwithHmacSHA224AndAES_256, PSS, PBEwithHmacSHA512AndAES_128, PBEwithHmacSHA224AndAES_128, PBEwithHmacSHA256AndAES_128, OAEP, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, PBEwithHmacSHA384AndAES_256, AES, PBEwithHmacSHA512AndAES_256PBEwithHmacSHA512AndAES_256, DSADSA}
			at statement: $r14 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>(varReplacer27878, $r5)


Findings in Java Class: com.initech.pkix.cmp.client.PKIMessageFormatter

	 in Method: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext,int)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #d0d6bf8d8ceff2827a820a897e4283a512a775a4949aee4776bd21fd67375468)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r7.<java.security.KeyPairGenerator: void initialize(int)>($i0)


	 in Method: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #a5c3f62a380c6ba1b904011d09fd9d57f8c8b3f7f2926ceae3eb303e2e0c13e4)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r9.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer28319)


	 in Method: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #2c9646471a77ae8ba70f14690a8e3c2ba8d477f31f30154fd1b4b9f539c9fd12)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r8.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer28323)


Findings in Java Class: com.initech.pkix.cmp.CertStatus

	 in Method: void setCertHash(java.security.cert.X509Certificate)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #37362bf32161f6bedd1f6e06ded405d4de6b91c68041b7c920e0a32d10e728f2)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #37362bf32161f6bedd1f6e06ded405d4de6b91c68041b7c920e0a32d10e728f2)
			First parameter (with value "MD5") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: com.initech.pkix.cmp.client.PKIMessageFormatter_YesSign

	 in Method: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)
		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #cc14161054d7c2d902d4fcaa0ca1bd46b13e84a6542d4f28a56684336fcd27cf)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator.
			at statement: $r11 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


	 in Method: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)
		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #93a9e0443f974ce07f45eb98e2bbc9f8b0622777617f736a8fae43b95d2cd546)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator.
			at statement: $r11 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: com.initech.asn1.useful.IssuerAndSerialNumber

	 in Method: void a()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #43230a7d0ee1ed8632c48d1705b8fa6fe7de3879df230c836fa014108aa46b21)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28988)


Findings in Java Class: com.initech.x509.extensions.SubjectKeyIdentifier

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #688d1da5ddd462581e1fb2b589eafe0d00621f926b6825e914709cb8cb8bbd6a)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29170)


Findings in Java Class: com.initech.android.sfilter.core.CryptoUtil

	 in Method: byte[] decrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer30943, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer30943, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)


	 in Method: byte[] publicKeyEncrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer30785, $r7, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer30784, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer30785, $r7, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer30785, $r7, $r6)


Findings in Java Class: com.bccard.mobilewallet.a.c.a.o

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer960, r7, varReplacer960)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer960, r7, varReplacer960)


Findings in Java Class: com.initech.pkix.cmp.crmf.ProofOfPossession

	 in Method: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r7.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


Findings in Java Class: com.initech.pkix.cmp.PKIMessage

	 in Method: void sign(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


Findings in Java Class: com.initech.cryptox.spec.PBEParameterSpec

	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r1, $i0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 101

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 8
	ForbiddenMethodError: 3
	ConstraintError: 21
	IncompleteOperationError: 2
	RequiredPredicateError: 19
=====================================================================
