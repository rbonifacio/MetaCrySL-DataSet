Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.jb.gokeyboard.theme.tmeballerina.getjar-0BB1F4A8911CCAAF1CEB3FAE4281A7EC3B25FF8D1507A0840028DD2D0CA651DE.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer6644)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: b61a03d7a3305dfbcce6524c00813af968c27f8df10dffa642d04870cb22af87
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9172)
		Method: <com.jb.gokeyboard.theme.template.util.MD5: java.lang.String to32BitString(java.lang.String,boolean,java.lang.String)>
		SHA-256: 5ebff8f7ce85e156d32a3c88b47dd5c0f48bee4d73d29c7a3b1cd70b34e0d5d7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 13b7df8e4159afd3c95e773a0a2fb89a181151c51e2fcbe7400da8a0d51bf426
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzhl: java.lang.String zzgn()>
		SHA-256: e41242a5cc7c60aecd4830a4cdee6d94fe18b32df104de1077159b76df22064d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 4c3ef24d9dcbe9c3c805a70b30efd3900d8efcc8b976bdf307a218612149c602
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6640)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: c906d2580df4a80e68dfa3798c24b674ed9745309a5f96ee854ec5e90f89337c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer6645, varReplacer6646)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: f7682ce9ef756515bee1d86555c4af3630b656ddf9e0831ee0f38756bc0cc1ac
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: c912c10fbdf9c59ad4f89e99034f2098742bd04a6912e7829063391bc286c150
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.s: java.lang.String b(java.lang.String)>
		SHA-256: fcb6234cea6a1276e5924b649d2dca8c9c2756e0dd941238b2f2dc47ce40acd7
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)>
		SHA-256: 28ce7f80687f60d700936748d1561bbe406957299dfe63f40eacb0b994499d24
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11628)
		Method: <com.google.android.gms.internal.zzbl: java.security.MessageDigest zzcu()>
		SHA-256: 376a3545ff9583b2dd04f53d08a3d22248dd2d1d1c5328e3afea4b415ebf6e98
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6639)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 9aa76a423b0adcf1e5303c07f9890b204c03ddf6a071e1756239e84222735352
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9559)
		Method: <com.facebook.ads.internal.util.s: java.lang.String b(java.lang.String)>
		SHA-256: 30e1740a4a538cfae4bce015a84f00e9c59ec38650238fd77b269c51933af2f9
		Secure: false
	Object:
		Variable: varReplacer6658
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6658)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 127f5943f0719264e28cf4f2dd1724c1736e158a5e4c35bb08a140fdf4c537bb
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzax(java.lang.String)>
		SHA-256: ed8378566e41b35248f0f9a90d84f010fee188e0e3fc2cb262cedaf4dedbf6d0
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 5a4ce487d3da3934d330909e15f4b82460918db06fc9ea79826feeef29fe6fe3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10225)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 783a6ee83d40e081ecc56d5a7d450a6b2dc17b469ceaab97b9ed99916d568d34
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6658)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 6e1cb53a0095b233f600fe30a170adc9307dfefea01898e196c9682115baf322
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.jb.gokeyboard.theme.template.util.MD5: java.lang.String to32BitString(java.lang.String,boolean,java.lang.String)>
		SHA-256: cf8b5535ba06a36e6ec11c4152e1342f8c9307e119c64a87aed857b7113ddfc9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9372)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzax(java.lang.String)>
		SHA-256: fb35a8aad31a359344daa6c5778ec8c63233d4b4587599682303e43bb0e824fd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: a0fb3191ce4c347e6dc4d2c93a2b28d5d01589a91341d353d9d79172a555d6fa
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: bdc7512ec38c2cc09adba71da2f9eeaa86d77e6218983960216f0ede83a261e7
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzbo: byte[] zzy(java.lang.String)>
		SHA-256: 7138f23e41efad502a888ab864a2e323ebfcfbe3b5faf1810ff3efb6d8a197d8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6656)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 6487b532d08782381a3db8c9d9c6e8ca7f1bcc3ce9818128bc3222156e21351b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer6647)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: fb583a63116f26c3d6a612f23ce9bcfb946bc30c44eff24c8b428b2b4536833
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1733)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: 43ac1d2c041ea6fefdc8bcb3d295458ddd08f8ef1c9ef337c67092e7ceaa45ea
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9872)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 7bd60ab16169cfd0ebdb7c3f07c41bd8eb62ee73174061c6c5d5fe397a9acb97
		Secure: false
	Object:
		Variable: varReplacer10225
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10225)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 8a5f4c58c11e358a4efe3f98dd4bca3971616925cbf19ccb9bd0e17c71d67daa
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 57b34ea97dd082ce3816307185da5f3c24486a235eadb14d113287b38117a418
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10226)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 52523be1aa143df7c44bd86d7da955315c8453405ddd950f9a92da486fa0ed12
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 6e6f3a156274bccb5009c67a602212222822b175df2e03889ca0ead18734c307
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 382adf1b0fac42d9d61d9c6b9042b1f93af2f0858a3839c6573a5314bd75df54
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9075)
		Method: <com.google.android.gms.internal.zzhl: java.lang.String zzgn()>
		SHA-256: cc991deadc379b38bc4414c56ba1fb6ba4d7105398eb6b26159a6e5a804bc1c9
		Secure: false
	Object:
		Variable: varReplacer6639
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6639)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: bbf2d08851bb2a70572060e48963accf109ddb0ac66007554622fab234722aba
		Secure: false

Findings in Java Class: com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6639)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c906d2580df4a80e68dfa3798c24b674ed9745309a5f96ee854ec5e90f89337c)
			First parameter (with value "AES") should be any of AES/{GCM, CBC, CTR}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6640)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6641, $r2)


	 in Method: byte[] encrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6487b532d08782381a3db8c9d9c6e8ca7f1bcc3ce9818128bc3222156e21351b)
			First parameter (with value "AES") should be any of AES/{GCM, CBC, CTR}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6656)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6657, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6658)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer6643, $r2)


Findings in Java Class: com.google.android.gms.internal.zzhl

	 in Method: java.lang.String zzgn()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cc991deadc379b38bc4414c56ba1fb6ba4d7105398eb6b26159a6e5a804bc1c9)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9075)


Findings in Java Class: com.jb.gokeyboard.theme.template.util.MD5

	 in Method: java.lang.String to32BitString(java.lang.String,boolean,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5ebff8f7ce85e156d32a3c88b47dd5c0f48bee4d73d29c7a3b1cd70b34e0d5d7)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9172)


Findings in Java Class: com.google.android.gms.ads.internal.util.client.zza

	 in Method: java.lang.String zzax(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb35a8aad31a359344daa6c5778ec8c63233d4b4587599682303e43bb0e824fd)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9372)


Findings in Java Class: com.facebook.ads.internal.util.s

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #30e1740a4a538cfae4bce015a84f00e9c59ec38650238fd77b269c51933af2f9)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9559)


Findings in Java Class: com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator

	 in Method: byte[] getMD5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7bd60ab16169cfd0ebdb7c3f07c41bd8eb62ee73174061c6c5d5fe397a9acb97)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9872)


Findings in Java Class: com.google.android.gms.internal.zzar

	 in Method: byte[] zzc(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10225)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10224, $r10, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #52523be1aa143df7c44bd86d7da955315c8453405ddd950f9a92da486fa0ed12)
			First parameter (with value "AES/CBC/PKCS5Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10226)


Findings in Java Class: com.google.android.gms.internal.zzbl

	 in Method: java.security.MessageDigest zzcu()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #376a3545ff9583b2dd04f53d08a3d22248dd2d1d1c5328e3afea4b415ebf6e98)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11628)


Findings in Java Class: com.google.android.gms.internal.zzbm

	 in Method: java.lang.String zzA(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #376a3545ff9583b2dd04f53d08a3d22248dd2d1d1c5328e3afea4b415ebf6e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzbl: byte[] zzy(java.lang.String)>($r1)


	 in Method: java.lang.String zzz(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #376a3545ff9583b2dd04f53d08a3d22248dd2d1d1c5328e3afea4b415ebf6e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzbl: byte[] zzy(java.lang.String)>($r1)


Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1732, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1732, r12, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 10
	ConstraintError: 9
	IncompleteOperationError: 2
=====================================================================
