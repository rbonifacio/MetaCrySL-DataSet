Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.veryapps.calendar-0D4AFFF098E931F95C951321F6CAE25DCE24CC655E2BD69088785D04AF505317.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6207)
		Method: <u.aly.bl: java.lang.String a(java.lang.String)>
		SHA-256: 62a681c1204e81a1a53589e71d021f5fcf4ec00ace7a6f479f913d24b89cb92a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.b: java.lang.String a(java.lang.String)>
		SHA-256: 8bd01f1b13cea1ee8aa7b22593d126b95c382be3720f2aa7242a6d10f9579e18
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2475)
		Method: <com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>
		SHA-256: 84c793af2f7345f86355538e3a2c3e16af8066fbeefc64087e955a700228149f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7484)
		Method: <com.google.android.gms.internal.zzbg: java.security.MessageDigest zzcL()>
		SHA-256: 7e5d15fe7668212fe927f5add436b038e92e38459184cc2b43a32a334b272dc3
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.aq: java.lang.String b(java.lang.String)>
		SHA-256: d0b9e5f889dcde3f1dbc99f55cb52ab33423002c1ae89ca2252e693adb6b8ac2
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.k: byte[] a(java.io.File)>
		SHA-256: 432a600c2d8de042b03291ce9b2032c06ba1fd3b5c962d7da8ef56372a7beb53
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: bd6f140a409b2b8eea4c643222d309349b5be56c53e649cd4f35ecf7db68f749
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.b: java.lang.String a(java.lang.String)>
		SHA-256: 98215ece6f6a60ce0739e1b9a0ef278f9806b9bc5c5215dc8b7f4f137f5edc6e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.b: java.lang.String a(byte[])>
		SHA-256: c628812986aa0803ebeb428bf3cb6c4e0ffeec807a375948f2bd267392ca2e50
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c8b8edeb084b423f81d7a0d57970247bbc398d800e6083a5bf891e70d459c550
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 3f5b7ea2761505c4243638277dab672f1824c5a3ce2b162aeb17ed438b0345a2
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 588587d694ec45e0e1a875a0176b4380a9d5faa5cea08af2231614568eac49d1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 55ef35a9e5361367b650b4092a4c8bc3d3e07ff15f333dd8e7f8138f9d5309a5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bl: java.lang.String b(java.lang.String)>
		SHA-256: d4280caf03e9c54fd66bcd7ca3cd58312325c63f900503450f06ce483b51700c
		Secure: false
	Object:
		Variable: r29
		Type: java.security.SecureRandom
		Statement: specialinvoke r29.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jpush.android.util.s: int a(android.content.Context,org.json.JSONObject,boolean)>
		SHA-256: ff9b1eed2d849b52192baa2468b82f6f5e76b39094a5aabef8dc6734fbc7dffd
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4210)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 1ec8f1ef7d353be7566d4ef2b8aa010560ae108729a7afad7ce55c5b21cb21d1
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e08d1cb2a337a72390b00629a9822529204c43915aa5fa11084d68a3f66f2e3a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5260)
		Method: <com.litesuits.http.utils.MD5Util: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: 58e2edeaf78a84d436285e695cae965a4a37d54108ee2ec6d3ce4bfd2b3fc4e4
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mob.tools.utils.Data: byte[] rawMD5(java.io.InputStream)>
		SHA-256: 564d20c607e1e6debdcefc46cd1af6d9b9fba44a821ea14a23cd517d9be02799
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: 550b2765d9e9428e8a020375877dcf930c7849e0f6bb937b691b5d60187d87e2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: cf97a861c5e3ae97cdd2e650024174ec10a08d9c7f6897fb894fc99150b49b1e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $i0 = virtualinvoke $r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r1, varReplacer2358, $i0, $r0, varReplacer2358)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: 4660afbd50e2020feaedcd18fa8ce11c3c982e4a8d41ed2904e3bb33c1ca5a63
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 51b85c2e92f8e2060c908f8ee508af6780142ca4b7716a081768d372523396a7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6121)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: 3392491c7812d5a7ab5c3b96688f495714d37efc754e71e3826050dba14cce05
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzbj: byte[] zzu(java.lang.String)>
		SHA-256: da3a8d2e8372fea22ccaf3590996d604e574474882e500ab458429a6ae892cba
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: java.lang.String c(java.lang.String)>
		SHA-256: 451046663d7da92148992b3ad79eb96b3a481c7a6960098f5841904fac4180e9
		Secure: false
	Object:
		Variable: varReplacer2365
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2365)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: f9a3a255dfc8a781b6cf8aedb9264175498bb0a303a1b0502b6d25e1c6241a03
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bl: java.lang.String a(java.lang.String)>
		SHA-256: e54f122ed5997236cb94a5334f043d2d445e79e07a46bbad2f65514706557a89
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5924)
		Method: <com.veryapps.chinacalendar.utils.StringUtil: java.lang.String getMD5Str(java.lang.String)>
		SHA-256: ad7b050578c67d544e1ff323d9c19a8e1235ca3294b85c47138ba57e176fd2c7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4567)
		Method: <com.litesuits.http.impl.apache.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: a7cd8c0211350f6402293ffdf700d98757b6c88eb1aaf3b5d0bd2f79aaf62c8a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7054)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: a3c8876a83d4f66c83fd473a306cf62def02cda87868fe39160665d4e6c8359
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 83800ab520dfbf96375afce1af57d177a62869f0256e2d4fa8475e3f03ac6dde
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.aq: java.lang.String b(java.lang.String)>
		SHA-256: e03b2d32bb5049454f325917bf7839b59c4e0e0070acaaf2a7cce2f3446c599
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mob.tools.utils.Data: byte[] SHA1(byte[])>
		SHA-256: b5fa6c4f2114caae6c4efe98d2a1c33cc8f63742dbe96b1259df171ef523b449
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2365)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: 442884b55c0aa8c68c97a26176c43a16436672c4eede2201a3411e946df0778b
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6608)
		Method: <u.aly.bk: java.lang.String A(android.content.Context)>
		SHA-256: 72554a43ee26926ff4f195941f7e15f71205446bd5649090555e18690965717d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7057)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: f2d624977ac17e0ec8e453212cfeb51decc4ce6ad9503bc3f3866fc0a8e9026e
		Secure: false
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jpush.android.util.s: javax.net.ssl.SSLContext a()>
		SHA-256: 5e573cc5212631be3712bbb7d64117b15fe85cc6b60be4fc0d23524b86c9157
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6630)
		Method: <u.aly.bl: java.lang.String b(java.lang.String)>
		SHA-256: b98590ab4193bc723b5d825e46b6e3cbdba0dce3ae37cd77bb728eea2822e9b6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7250)
		Method: <com.umeng.analytics.b: java.lang.String c(java.lang.String)>
		SHA-256: 1232bd0e8b416273afdebe709f8e3a9efa82b787c02e90bfc56885992e492d13
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.veryapps.chinacalendar.utils.StringUtil: java.lang.String getMD5Str(java.lang.String)>
		SHA-256: 9daa6207e4432623bb237f1ee53cb6a0c43034770cb85b09d902efd1470a342e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 382adf1b0fac42d9d61d9c6b9042b1f93af2f0858a3839c6573a5314bd75df54
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.litesuits.http.impl.apache.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $i0 = virtualinvoke $r5.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r4, varReplacer4204, $i0, $r2, varReplacer4204)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: c7fa4e8a021950f93b876a1a51476de860d12d246b6198f411baa18c02ea0b2
		Secure: false
	Object:
		Variable: varReplacer7054
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7054)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 155c48a810c6e33452e07c555a4472bd2ae337f1159b3e2200d6940e0c15dd4f
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.s: int a(android.content.Context,org.json.JSONObject,boolean)>
		SHA-256: 97613f67656a5de1afd5e171d109dcc81c153113626be1e4199b6c0948479ccf
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d4ee72875b7bf463710251b50b5a7d1fc255565e41a8f450fef64e40d8bf7aea
		Secure: false
	Object:
		Variable: r18
		Type: java.security.SecureRandom
		Statement: specialinvoke r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>
		SHA-256: 2670ac95b8a338a5643e8b819e1a0adf50aa74adc41602ff45c107d68b23a862
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7334)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 620ce2dc20c37ab5534fec2f824916d394604dcf94e2355ef250b8a1812d0661
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6003)
		Method: <cn.sharesdk.wechat.utils.h: byte[] a(java.lang.String,java.lang.String,int)>
		SHA-256: 885df0312afbf8cc43e928ddb76d199143a0328f36199020029ab3b4c1644f6e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int)>($r2, $i0)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 8df24129554b6fedc63b16805f88a2dbfe55ed3af1bd3740681b630d8d55eee6
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.k: byte[] a(java.io.File)>
		SHA-256: d4a88e2082e0816474d26b7fdde67dbd6a0f6d182636878fc7f363f65d038f1e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 2dd4888322a471b8f76ac18dc66756736304ba06184ce0a981df36dbcde06d84
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2396)
		Method: <com.mob.tools.utils.Data: byte[] rawMD5(java.io.InputStream)>
		SHA-256: 92526cc7e3d474590a1f36d30a3115f6b06d67b7721ea4905b01f9890feec46c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.b: java.lang.String a(byte[])>
		SHA-256: c89c52a35213273fab58ed00b4ede4a7d35bfa3a9666dfaac9c015c5e897e09b
		Secure: true
	Object:
		Variable: varReplacer4210
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4210)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 2bd50197e72b98b3720346f4b626df70e935aed0cc61a454deb3a1988f285f2
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.sharesdk.wechat.utils.h: byte[] a(java.lang.String,java.lang.String,int)>
		SHA-256: b5e7d318b8bf3ca192f902bc45e98e938d5ec70eed02dff7ca280ed73845ec6f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $i0 = virtualinvoke $r5.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r4, varReplacer4204, $i0, $r2, varReplacer4204)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 759daade4f82ff4206d7edf4ce7f05bf16d73ef440bb0c1ef95a00f3624c18dd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.litesuits.http.utils.MD5Util: byte[] md5(byte[])>
		SHA-256: 30d7d39c0e12c3a14b9a4c00fc14cfc1ce81395251874f03ba17219eae7a407a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.s: javax.net.ssl.SSLContext a()>
		SHA-256: 726da6d00779c575fcd988fbdeb9859e1097ce3f50b55ba80cab91bbefcb5fd5
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyStore
		Statement: $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.u: void <init>()>
		SHA-256: 29c02ae112f7c44d62fcf5db77899628efa67faca410206bfa986e31a8497f06
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $i0 = virtualinvoke $r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r1, varReplacer2358, $i0, $r0, varReplacer2358)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: cbac488174c00486102f3dd9248e780f40d8f3e21c171f2ba096b47c1eb5f50c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.b: java.lang.String b(java.lang.String)>
		SHA-256: f4d7c55029da89fb4a614390eefcb44ebfbc25ddf5a4e8739894a432c9e4eaef
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int)>($r0, $i0)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: 649659a474b1ec50d7daf535f045a66c1098a9948f7e60e4913af30968642ced
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2702)
		Method: <com.mob.tools.utils.Data: byte[] SHA1(byte[])>
		SHA-256: 21b161b917d58aa20309573fa671c2b0b65b2e5c7ee5ee6856ef1027e0b83d36
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7056)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: f79215adb74db4b66e766aec3477bcc19a05d4a4849b944d1a544cfa51ceba8e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer4208, varReplacer4209)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 54f0c60fc48593cb9b60c6988838940e608158e4eb88b6a6530dd7f1f3b791a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.b: java.lang.String b(java.lang.String)>
		SHA-256: ff71dc46c695623c670c8240acd12d816d6ab87408538525e2231bf86013b15f
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.bk: java.lang.String A(android.content.Context)>
		SHA-256: 789da379a160c0ef75bb098617c3d2cad20acabfa673b9ab00b7bb6bd74eb515
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2363, varReplacer2364)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: 2f0b473b669eb9badeda9c68e7eb9899d31fb769c00e69a929012f0b97542564
		Secure: false

Findings in Java Class: cn.jpush.android.util.u

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #29c02ae112f7c44d62fcf5db77899628efa67faca410206bfa986e31a8497f06)
			Operation on object of type java.security.KeyStore object not completed. Expected call to store
			at statement: virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r10)


Findings in Java Class: cn.jpush.android.util.k

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d4a88e2082e0816474d26b7fdde67dbd6a0f6d182636878fc7f363f65d038f1e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.mob.tools.utils.Data

	 in Method: byte[] AES128Decode(byte[],byte[])
		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(pre_ciphertext) + 0 < pre_ciphertext_off + 0 could not be evaluted due to insufficient information.
			at statement: $i0 = virtualinvoke $r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r1, varReplacer2358, $i0, $r0, varReplacer2358)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2f0b473b669eb9badeda9c68e7eb9899d31fb769c00e69a929012f0b97542564)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{GCM, CBC, CTR}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2363, varReplacer2364)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(cipherText) + 0 < ciphertext_off + 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int)>($r0, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2365)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2360, $r3)


	 in Method: byte[] rawMD5(java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #92526cc7e3d474590a1f36d30a3115f6b06d67b7721ea4905b01f9890feec46c)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2396)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #92526cc7e3d474590a1f36d30a3115f6b06d67b7721ea4905b01f9890feec46c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] SHA1(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #21b161b917d58aa20309573fa671c2b0b65b2e5c7ee5ee6856ef1027e0b83d36)
			First parameter (with value "SHA-1") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2702)


	 in Method: byte[] AES128Encode(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4207, $r3)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(cipherText) + 0 < ciphertext_off + 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int)>($r2, $i0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #54f0c60fc48593cb9b60c6988838940e608158e4eb88b6a6530dd7f1f3b791a)
			First parameter (with value "AES/ECB/PKCS7Padding") should be any of AES/{GCM, CBC, CTR}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer4208, varReplacer4209)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4210)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(pre_ciphertext) + 0 < pre_ciphertext_off + 0 could not be evaluted due to insufficient information.
			at statement: $i0 = virtualinvoke $r5.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r4, varReplacer4204, $i0, $r2, varReplacer4204)


Findings in Java Class: com.litesuits.http.utils.MD5Util

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #58e2edeaf78a84d436285e695cae965a4a37d54108ee2ec6d3ce4bfd2b3fc4e4)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5260)


Findings in Java Class: com.veryapps.chinacalendar.utils.StringUtil

	 in Method: java.lang.String getMD5Str(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ad7b050578c67d544e1ff323d9c19a8e1235ca3294b85c47138ba57e176fd2c7)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5924)


Findings in Java Class: cn.sharesdk.wechat.utils.h

	 in Method: byte[] a(java.lang.String,java.lang.String,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #885df0312afbf8cc43e928ddb76d199143a0328f36199020029ab3b4c1644f6e)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6003)


Findings in Java Class: com.google.android.gms.ads.internal.util.client.zza

	 in Method: java.lang.String zzaH(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3392491c7812d5a7ab5c3b96688f495714d37efc754e71e3826050dba14cce05)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6121)


Findings in Java Class: u.aly.bl

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #62a681c1204e81a1a53589e71d021f5fcf4ec00ace7a6f479f913d24b89cb92a)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6207)


	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b98590ab4193bc723b5d825e46b6e3cbdba0dce3ae37cd77bb728eea2822e9b6)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6630)


Findings in Java Class: u.aly.bk

	 in Method: java.lang.String A(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #72554a43ee26926ff4f195941f7e15f71205446bd5649090555e18690965717d)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6608)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7055, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7055, $r2, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f79215adb74db4b66e766aec3477bcc19a05d4a4849b944d1a544cfa51ceba8e)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7056)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7054)


	 in Method: byte[] b(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f2d624977ac17e0ec8e453212cfeb51decc4ce6ad9503bc3f3866fc0a8e9026e)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7057)


	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1232bd0e8b416273afdebe709f8e3a9efa82b787c02e90bfc56885992e492d13)
			First parameter (with value "SHA1") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7250)


Findings in Java Class: com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator

	 in Method: byte[] getMD5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #620ce2dc20c37ab5534fec2f824916d394604dcf94e2355ef250b8a1812d0661)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7334)


Findings in Java Class: com.google.android.gms.internal.zzbg

	 in Method: java.security.MessageDigest zzcL()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7e5d15fe7668212fe927f5add436b038e92e38459184cc2b43a32a334b272dc3)
			First parameter (with value "MD5") should be any of {SHA224, SHA256, SHA384, SHA-224, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7484)


Findings in Java Class: com.google.android.gms.internal.zzbh

	 in Method: java.lang.String zzw(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7e5d15fe7668212fe927f5add436b038e92e38459184cc2b43a32a334b272dc3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzbg: byte[] zzu(java.lang.String)>($r1)


	 in Method: java.lang.String zzv(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7e5d15fe7668212fe927f5add436b038e92e38459184cc2b43a32a334b272dc3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzbg: byte[] zzu(java.lang.String)>($r1)


Findings in Java Class: com.mob.tools.network.NetworkHelper

	 in Method: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2467, r19, r18)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2467, r19, r18)


Findings in Java Class: cn.jpush.android.util.i

	 in Method: java.lang.String o(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2847, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2847, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2847, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)


Findings in Java Class: cn.jpush.android.util.s

	 in Method: int a(android.content.Context,org.json.JSONObject,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1304, varReplacer1304, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1304, varReplacer1304, $r8)


	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1354, r9, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1354, r9, $r5)


Findings in Java Class: cn.jpush.android.util.a

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2386, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2386, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.litesuits.http.impl.apache.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4568, r5, varReplacer4568)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4568, r5, varReplacer4568)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 72

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 3
	ImpreciseValueExtractionError: 4
	TypestateError: 2
	RequiredPredicateError: 25
	ConstraintError: 16
=====================================================================
