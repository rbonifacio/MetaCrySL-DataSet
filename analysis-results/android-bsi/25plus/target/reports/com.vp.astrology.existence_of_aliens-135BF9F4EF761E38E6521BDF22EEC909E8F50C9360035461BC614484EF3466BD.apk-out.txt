Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.vp.astrology.existence_of_aliens-135BF9F4EF761E38E6521BDF22EEC909E8F50C9360035461BC614484EF3466BD.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: 2d5ae36871a433a41bccb48af4f0eca0b3332b40921fe5adc0206e8b0af5cacf
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer413)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: c46da294c8563c6167da88c27fa6ce003dcb7e427cf7844041758181fe4f3b8e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: de3eb5a3337bf4a456c8e15fd2e8db60decd72c009501e7768c31cadf8fd20c
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer415)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: cf0e3f446ba7df4995d2b04c1eb38f513cba8196405119b6804e4d4be6dc2f0c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.vp.astrology.existence_of_aliens.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: e88c5140168292deb7004c6a421a48a791f97f9f10debe2853cc9290374baa9a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer502)
		Method: <com.vp.astrology.existence_of_aliens.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 7026f899c8aed2e39c050e904b336342bbfa395095534dcb8b6cf6fa276e982f
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: d865fa4a6be1cffc3fe78c24314de27b68f26ee69a0aa175bea0f5458f3b1e99
		Secure: false
	Object:
		Variable: $r20
		Type: javax.net.ssl.KeyManager[]
		Statement: $r20 = virtualinvoke $r19.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: a13c1cb8af06be6a4f03d4a6801c8220e011feeb5f986a66cca6aefc663a744b
		Secure: false
	Object:
		Variable: $r19
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r19 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer414)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: 4e95a58735870c6b1761c2b94df8d9a52d000459ecdcd55b1075b3bd9459a74f
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer412)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: 5daefcda8a3e2aff26bd5a1c80cc7a8ad37de1949a62e78a7cef31b1841a9baf
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil: byte[] encrypt(byte[],int,byte[],byte[])>
		SHA-256: 77b60291cedba28e7962c668a4d62324d67d93eb018070d22896903e03414584
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer407)
		Method: <com.paytm.pgsdk.PaytmSSLSocketFactory: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)>
		SHA-256: 30357bb6c938ec069838d1059883cf1255ff1b8916d130b847298159f80718b1
		Secure: false

Findings in Java Class: com.paytm.pgsdk.PaytmSSLSocketFactory

	 in Method: void <init>(android.content.Context,com.paytm.pgsdk.PaytmClientCertificate)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer410, r23, varReplacer410)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #cf0e3f446ba7df4995d2b04c1eb38f513cba8196405119b6804e4d4be6dc2f0c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r8.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r13)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer408, r23, varReplacer408)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r20, r23, varReplacer425)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer410, r23, varReplacer410)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r19.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r8, $r13)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #4e95a58735870c6b1761c2b94df8d9a52d000459ecdcd55b1075b3bd9459a74f)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r19.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r8, $r13)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r20, r23, varReplacer425)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #4e95a58735870c6b1761c2b94df8d9a52d000459ecdcd55b1075b3bd9459a74f)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r19 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer414)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer408, r23, varReplacer408)


Findings in Java Class: com.vp.astrology.existence_of_aliens.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #7026f899c8aed2e39c050e904b336342bbfa395095534dcb8b6cf6fa276e982f)
			First parameter (with value "SHA1withRSA") should be any of {RSASSA-PSS, SHA224withECDSA, SHA256withDSA, SHA256withRSA/PSS, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, NONEwithRSA, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, DSS, SHA224withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer502)


Findings in Java Class: com.vp.astrology.existence_of_aliens.storage.security.SecurityUtil

	 in Method: byte[] encrypt(byte[],int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r4, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	RequiredPredicateError: 12
	ConstraintError: 2
=====================================================================
