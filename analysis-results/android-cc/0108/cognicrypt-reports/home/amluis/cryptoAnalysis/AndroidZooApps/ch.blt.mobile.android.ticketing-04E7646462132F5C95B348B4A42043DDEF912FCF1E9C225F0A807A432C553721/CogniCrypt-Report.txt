Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r6)
		Method: <ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,ch.boye.httpclientandroidlib.conn.ssl.TrustStrategy)>
		SHA-256: ee9c68ae3d0e944a421448e57a29446cf8b04465bc56a92746318371451ca8ff
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r11, $r8, $i0, $i1)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: bdf21b00218e6db800cf5caf5076047c25fb67dbf31b5df94fbdf08e55f6c735
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.netcetera.android.girders.core.d.a: byte[] a(byte[])>
		SHA-256: b79eb692562bb891d54da221f50003bfef947a65bab116480a7729d293cfa13b
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.netcetera.android.girders.core.d.a.a: java.security.KeyStore a(java.io.InputStream,java.lang.String)>
		SHA-256: fe048266ee1291fb4d6112badb2cfb575a8098cf28c3568ece9170d0380878ca
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r1)
		Method: <a.a.a.b: void a(java.lang.String,java.lang.String)>
		SHA-256: a2da8202bdd6cdc6d1ad7c79da8b9d51c0dfec19f5a2742d13e3a3bb7ae73431
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r4)
		Method: <ch.a.a.y: byte[] a(byte[],byte[])>
		SHA-256: b80b48e7ec0b47285f1e10a8ba6946148061221ff6fb77a9fab7f3443241617
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],byte[])>
		SHA-256: 2156bfe6649ca90fefd5e6f78b0404c37ff0f91004887d0a38545caa6e4c8daf
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: c0ad7ae31abc91b5626f9cbee09d8f7c3df09847439bbf06f8aa064d4fbf0215
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.netcetera.android.girders.core.d.a.a: java.security.KeyStore a(java.security.cert.Certificate[])>
		SHA-256: fe048266ee1291fb4d6112badb2cfb575a8098cf28c3568ece9170d0380878ca
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.SecureRandom
		Statement: $r19 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer4038)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: 61e31f7017510de85108ed6c6fd3d42383fe516eb38b7244ace75f4a7f48482c
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],byte[])>
		SHA-256: b3b2d0a66b3de28acdd8af51ba26ca56d5ddd81ebc5a33bcb1a221a32a9404cf
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],byte[])>
		SHA-256: 7e59c351f2acf6a9443c0d35b124482609b3aa1cf5414ef82bf926f692388e08
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r11, $r3, $i0, $i1)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])>
		SHA-256: 4a739c80a35562803a938757c1144a703179bc1013c385a7f1b93f0d4cf32f61
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <ch.a.a.y: byte[] a(byte[],byte[])>
		SHA-256: 4710387e2a62d673a0aa4b852e6ff75c66533eac83738109ae2686ff92116428
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.netcetera.android.girders.c.a.a: byte[] b()>
		SHA-256: 2394c042c99f7fad681b754defae2283bc9c75c6ab05fb2012b00070250f1dd3
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.KeyManager[]
		Statement: $r9 = virtualinvoke $r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,ch.boye.httpclientandroidlib.conn.ssl.TrustStrategy)>
		SHA-256: b07fc18ceeed623d450f52d4b88f3c69dec88fdee4664f0ee48c5d0ef47e78b9
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.SecretKey
		Statement: $r12 = virtualinvoke $r10.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: a2d7c6987e26acfb250fb7856f9b69c3ec1dd047771889ed83ba1d429903c464
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r4)
		Method: <ch.a.a.y: byte[] a(byte[],byte[])>
		SHA-256: c311af5ba2c410f28b75d84c5b4a69b07c8dd350b538b626a69c4e994ee217af
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.Cipher
		Statement: $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r9)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: 87659e591e683f03f836b0d5e305bbf9d236e60278971193c7db7c01fe3b77ec
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])>
		SHA-256: 8bd974efe1625dfe0e99564afc1e1ee91e4b05654962f023227bfe74f130c0d6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.netcetera.android.girders.core.d.a: byte[] b(byte[])>
		SHA-256: b30a2943d1bb9f4afd51530172242a688f42a3795c31c3c0df448cded27dba8b
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <ch.a.a.y: byte[] a(byte[],byte[])>
		SHA-256: 30951dc5312da009024fd842d19da578183b1bcb739323ce9b51fde610daba4d
		Secure: true
	Object:
		Variable: $r9
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r9)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])>
		SHA-256: efe05b632d461f52ac6a428fd088c541b59f2a1ac844c8ff2f4331d03a25710d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r9)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: 278d122c23f9e4c04f0592c53975057c288877b27903d018ff3b8c3eec0150f4
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)
		Method: <com.netcetera.android.girders.core.d.b: byte[] b(byte[],byte[])>
		SHA-256: 9ea48f0511e51641f67fc3331120561bd132dd19a1eea913753457195e47ab42
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r11, $r3, $i0, $i1)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])>
		SHA-256: 549e9fdbd33752434c414e6cf475256370db16748ccdc7f2666e2b075ff2068a
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKeyFactory
		Statement: $r10 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r9)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])>
		SHA-256: 811a81c966661189a5eab6dfc00f4e12bbdb7fc2d1b74934e59c50a3f79448a4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])>
		SHA-256: 3b024be89cce3e71125c9b808d08955d9b259b520664f125a60d5ff026c8956e
		Secure: false
	Object:
		Variable: r24
		Type: java.security.SecureRandom
		Statement: specialinvoke r24.<java.security.SecureRandom: void <init>()>()
		Method: <a.a.a.b: void a(java.lang.String,java.lang.String)>
		SHA-256: 985df4494d4408e024284bef4f46667b7ee26b86a850a5c99a6a075b077d9060
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r9)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])>
		SHA-256: f3ce6d8b9c2ff618df0a05e0a2818e4e1388f9822c0b62ea585cd1f8d165d620
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.netcetera.android.girders.core.d.b: byte[] b(byte[],byte[])>
		SHA-256: 22d6c8cd6015a82f9ba7c231020ecdc882ca8ee81e530b5cdfee046b51a1da51
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.SecretKey
		Statement: $r12 = virtualinvoke $r10.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])>
		SHA-256: 1164dfdd3e72c3aad137669db9358da21b6bd78491bac5814de7a288d73fc593
		Secure: false
	Object:
		Variable: $r9
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r9)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: 2df7bc6255585409f9e1d8e46f67a736b2c947a1d91db14a948f60c105e477c4
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)
		Method: <com.netcetera.android.girders.core.d.b: byte[] b(byte[],byte[])>
		SHA-256: e5fe14f8324215f895cfd1e8aeded3bfb54622894b78ecd4c27ac3b518978f8e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2670)
		Method: <com.netcetera.android.girders.core.d.g: void a()>
		SHA-256: e8529c031ddb84a640de534c3f8c5fc65be646269e36ffe42b7a865587bf9434
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.Cipher
		Statement: $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r9)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: 87659e591e683f03f836b0d5e305bbf9d236e60278971193c7db7c01fe3b77ec
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r11, $r8, $i0, $i1)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: 47b56625a869014188027f87140981521ac5e8bda1379eb09707435907310815
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6)
		Method: <com.netcetera.android.girders.core.d.b: byte[] b(byte[],byte[])>
		SHA-256: 744a086347889ce9134b236ed411856d86f60cb92b4ed8bc937b1e011f2fc0fc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],byte[])>
		SHA-256: 5ae12ccc697d52bde0e244ca270ff6e2d7f9fad4fda10d90ac8a6c90990fbbc5
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer994)
		Method: <com.netcetera.android.girders.core.d.a: byte[] b(byte[])>
		SHA-256: ded9092f271fcdb3301a011b3fd3835fc91b2d6f9bf2e0878e6176268d0c071
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r4)
		Method: <ch.a.a.y: byte[] a(byte[],byte[])>
		SHA-256: b8122372e10817b35cb01cc5096c915fc3910f2df47df6c209013ca0e188e754
		Secure: false
	Object:
		Variable: $r20
		Type: byte[]
		Statement: $r20 = virtualinvoke $r19.<java.security.SecureRandom: byte[] generateSeed(int)>(varReplacer4039)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: dd8c9097300ad0f2fe8350cb950364c371e0ba73c459d6817ca02d8eb121610d
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.Cipher
		Statement: $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r9)
		Method: <com.netcetera.android.girders.core.d.b: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])>
		SHA-256: 6d241560d68c9ac0bb8e4c5c95c34b1de45ddd81d0d74a13974d5df951f6c5f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1080)
		Method: <com.netcetera.android.girders.core.d.a: byte[] a(byte[])>
		SHA-256: ffaea03946db4456ce062c4ec015d0d5655bda73f16a44f3eafad2bb3a35518a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.netcetera.android.girders.core.d.g: void a()>
		SHA-256: c8e01f38856e210e9a445783ba4d035794167524daf3d08e23e1d77cfb8a0567
		Secure: true
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r5)
		Method: <ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,ch.boye.httpclientandroidlib.conn.ssl.TrustStrategy)>
		SHA-256: 13959fb539db25da7d7730f15fa5a3217d45d2f659e1697af48bbed8d7b49c22
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer969)
		Method: <com.netcetera.android.girders.c.a.a: byte[] b()>
		SHA-256: 7eb4db0e730cb0defc20d96126f1e4ba04af48211af498a60a379833c59d89
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKeyFactory
		Statement: $r10 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r9)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: b1955f2e729439d777317bffc4f7d780449db16e868b192291ec416eb94ddda4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r14.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.netcetera.android.girders.core.d.b: com.netcetera.android.girders.core.d.e c(byte[],byte[])>
		SHA-256: 9eb1bd02d50e26a59a6b8e492b0f6fa9ad2f3e3a53019d858a9e1469ed2e2bc4
		Secure: false

Findings in Java Class: com.netcetera.android.girders.c.a.a

	 in Method: byte[] b()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7eb4db0e730cb0defc20d96126f1e4ba04af48211af498a60a379833c59d89)
			First parameter (with value "SHA1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer969)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #7eb4db0e730cb0defc20d96126f1e4ba04af48211af498a60a379833c59d89)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r10 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.netcetera.android.girders.core.d.a

	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ffaea03946db4456ce062c4ec015d0d5655bda73f16a44f3eafad2bb3a35518a)
			First parameter (with value "SHA-1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1080)


Findings in Java Class: com.netcetera.android.girders.core.d.b

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3521, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #744a086347889ce9134b236ed411856d86f60cb92b4ed8bc937b1e011f2fc0fc)
			First parameter (with value "AES") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)


	 in Method: com.netcetera.android.girders.core.d.e c(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4041, $r5, $r4)

		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #61e31f7017510de85108ed6c6fd3d42383fe516eb38b7244ace75f4a7f48482c)
			Unexpected call to method setSeed on object of type java.security.SecureRandom. Expect a call to one of the following methods next,generateSeed,nextBytes
			at statement: virtualinvoke $r19.<java.security.SecureRandom: void setSeed(byte[])>($r20)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #bdf21b00218e6db800cf5caf5076047c25fb67dbf31b5df94fbdf08e55f6c735)
			Third parameter (with value 2048)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r11, $r8, $i0, $i1)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #b1955f2e729439d777317bffc4f7d780449db16e868b192291ec416eb94ddda4)
			First parameter (with value "PBEWITHSHA256AND256BITAES-CBC-BC") should be any of {Insecure}
			at statement: $r10 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4040, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r12 = virtualinvoke $r10.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #bdf21b00218e6db800cf5caf5076047c25fb67dbf31b5df94fbdf08e55f6c735)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r12 = virtualinvoke $r10.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4041, $r5, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r11, $r8, $i0, $i1)


	 in Method: byte[] a(byte[],com.netcetera.android.girders.core.d.f,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r11, $r3, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4090, $r5, $r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r12 = virtualinvoke $r10.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #811a81c966661189a5eab6dfc00f4e12bbdb7fc2d1b74934e59c50a3f79448a4)
			First parameter (with value "PBEWITHSHA256AND256BITAES-CBC-BC") should be any of {Insecure}
			at statement: $r10 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4a739c80a35562803a938757c1144a703179bc1013c385a7f1b93f0d4cf32f61)
			Third parameter (with value 2048)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r11, $r3, $i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4a739c80a35562803a938757c1144a703179bc1013c385a7f1b93f0d4cf32f61)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r12 = virtualinvoke $r10.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5212, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)


Findings in Java Class: com.netcetera.android.girders.core.d.a.a

	 in Method: java.security.KeyStore a(java.io.InputStream,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #fe048266ee1291fb4d6112badb2cfb575a8098cf28c3568ece9170d0380878ca)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r1, $r6)


	 in Method: java.security.KeyStore a(java.security.cert.Certificate[])
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #fe048266ee1291fb4d6112badb2cfb575a8098cf28c3568ece9170d0380878ca)
			Unexpected call to method setEntry on object of type java.security.KeyStore. Expect a call to one of the following methods store
			at statement: virtualinvoke $r5.<java.security.KeyStore: void setEntry(java.lang.String,java.security.KeyStore$Entry,java.security.KeyStore$ProtectionParameter)>($r4, $r6, varReplacer3636)


Findings in Java Class: ch.boye.httpclientandroidlib.conn.ssl.SSLSocketFactory

	 in Method: javax.net.ssl.SSLContext createSSLContext(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,ch.boye.httpclientandroidlib.conn.ssl.TrustStrategy)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #13959fb539db25da7d7730f15fa5a3217d45d2f659e1697af48bbed8d7b49c22)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, r16, varReplacer3717)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r0, $r8)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #ee9c68ae3d0e944a421448e57a29446cf8b04465bc56a92746318371451ca8ff)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r0, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, r16, varReplacer3717)


Findings in Java Class: a.a.a.b

	 in Method: void a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5137, $r7, $r13)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5137, $r7, $r13)


Findings in Java Class: ch.a.a.y

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 49

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 22
	ConstraintError: 8
	IncompleteOperationError: 2
	TypestateError: 3
	NeverTypeOfError: 2
=====================================================================