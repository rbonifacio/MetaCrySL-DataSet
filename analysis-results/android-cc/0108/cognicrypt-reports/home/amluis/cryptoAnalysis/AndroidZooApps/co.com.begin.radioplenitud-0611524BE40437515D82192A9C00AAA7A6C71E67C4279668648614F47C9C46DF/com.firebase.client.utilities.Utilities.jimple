public class com.firebase.client.utilities.Utilities extends java.lang.Object
{
    private static java.util.regex.Pattern isIntPattern;

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;
        java.lang.String varReplacer1048;

        nop;

        varReplacer1048 = "^-?[0-9]{1,10}$";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(varReplacer1048);

        <com.firebase.client.utilities.Utilities: java.util.regex.Pattern isIntPattern> = $r0;

        return;
    }

    public void <init>()
    {
        com.firebase.client.utilities.Utilities $r0;

        $r0 := @this: com.firebase.client.utilities.Utilities;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String doubleToHashString(double)
    {
        double $d0;
        byte[] $r0;
        java.lang.StringBuilder $r1;
        java.nio.ByteBuffer $r2;
        int $i0, varReplacer6342;
        java.lang.Object[] $r3;
        byte $b1;
        java.lang.Byte $r4;
        java.lang.String $r5, varReplacer6343;

        nop;

        $d0 := @parameter0: double;

        $r1 = new java.lang.StringBuilder;

        varReplacer6342 = 16;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(varReplacer6342);

        $r0 = newarray (byte)[8];

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r0);

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer putDouble(double)>($d0);

        $i0 = 0;

     label1:
        if $i0 >= 8 goto label2;

        $r3 = newarray (java.lang.Object)[1];

        $b1 = $r0[$i0];

        $r4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        $r3[0] = $r4;

        varReplacer6343 = "%02x";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer6343, $r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static com.firebase.client.utilities.ParsedUrl parseUrl(java.lang.String) throws com.firebase.client.FirebaseException
    {
        java.lang.String $r0, $r6, $r10, varReplacer1049, varReplacer1050, varReplacer1051, varReplacer1052, varReplacer1053, varReplacer1054, varReplacer1055, varReplacer1056, varReplacer1057, varReplacer1058, varReplacer1060, varReplacer1062, varReplacer1063, varReplacer1064, varReplacer1065;
        java.lang.StringBuilder $r1, $r12;
        com.firebase.client.utilities.ParsedUrl $r2;
        com.firebase.client.core.Path $r3;
        com.firebase.client.core.RepoInfo $r4;
        java.net.URI $r5;
        int $i0, $i1, $i2, varReplacer1059, varReplacer1061;
        java.net.URISyntaxException $r7;
        java.lang.Throwable $r8, $r13;
        com.firebase.client.FirebaseException $r9;
        java.lang.String[] $r11;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r6 = "https://plenitud-chat.firebaseio.com";

     label01:
        varReplacer1062 = "//";

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(varReplacer1062);

     label02:
        if $i0 != -1 goto label06;

        $r7 = new java.net.URISyntaxException;

     label03:
        varReplacer1056 = "https://plenitud-chat.firebaseio.com";

        varReplacer1057 = "Invalid scheme specified";

        specialinvoke $r7.<java.net.URISyntaxException: void <init>(java.lang.String,java.lang.String)>(varReplacer1056, varReplacer1057);

     label04:
        throw $r7;

     label05:
        $r8 := @caughtexception;

        $r9 = new com.firebase.client.FirebaseException;

        varReplacer1053 = "Invalid Firebase url specified";

        specialinvoke $r9.<com.firebase.client.FirebaseException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer1053, $r8);

        throw $r9;

     label06:
        $i1 = $i0 + 2;

     label07:
        $r10 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i1);

        varReplacer1049 = "/";

        $i1 = virtualinvoke $r10.<java.lang.String: int indexOf(java.lang.String)>(varReplacer1049);

     label08:
        if $i1 == -1 goto label23;

        $i0 = $i0 + 2;

        $i0 = $i1 + $i0;

     label09:
        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        varReplacer1058 = "/";

        $r11 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1058);

     label10:
        $r1 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label12:
        $i1 = 0;

     label13:
        $i2 = lengthof $r11;

        if $i1 >= $i2 goto label20;

        $r6 = $r11[$i1];

     label14:
        varReplacer1060 = "";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1060);

     label15:
        if $z0 != 0 goto label19;

     label16:
        varReplacer1050 = "/";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1050);

     label17:
        $r6 = $r11[$i1];

     label18:
        varReplacer1052 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, varReplacer1052);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label19:
        $i1 = $i1 + 1;

        goto label13;

     label20:
        $r12 = new java.lang.StringBuilder;

     label21:
        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer1061 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1061, $i0);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label22:
        $r6 = $r0;

     label23:
        $r5 = new java.net.URI;

     label24:
        specialinvoke $r5.<java.net.URI: void <init>(java.lang.String)>($r6);

        $r0 = virtualinvoke $r5.<java.net.URI: java.lang.String getPath()>();

        varReplacer1063 = "+";

        varReplacer1064 = " ";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1063, varReplacer1064);

        staticinvoke <com.firebase.client.utilities.Validation: void validateRootPathString(java.lang.String)>($r0);

     label25:
        $r3 = new com.firebase.client.core.Path;

     label26:
        specialinvoke $r3.<com.firebase.client.core.Path: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.net.URI: java.lang.String getScheme()>();

     label27:
        $r4 = new com.firebase.client.core.RepoInfo;

     label28:
        specialinvoke $r4.<com.firebase.client.core.RepoInfo: void <init>()>();

        $r6 = virtualinvoke $r5.<java.net.URI: java.lang.String getHost()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

     label29:
        $r4.<com.firebase.client.core.RepoInfo: java.lang.String host> = $r6;

     label30:
        $i0 = virtualinvoke $r5.<java.net.URI: int getPort()>();

     label31:
        if $i0 == -1 goto label45;

     label32:
        varReplacer1065 = "https";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1065);

     label33:
        $r4.<com.firebase.client.core.RepoInfo: boolean secure> = $z0;

        $r1 = new java.lang.StringBuilder;

     label34:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label35:
        $r0 = $r4.<com.firebase.client.core.RepoInfo: java.lang.String host>;

     label36:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1054 = ":";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1054);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label37:
        $r4.<com.firebase.client.core.RepoInfo: java.lang.String host> = $r0;

     label38:
        $r0 = $r4.<com.firebase.client.core.RepoInfo: java.lang.String host>;

     label39:
        varReplacer1051 = "\\.";

        $r11 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1051);

     label40:
        $r0 = $r11[0];

     label41:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

     label42:
        $r4.<com.firebase.client.core.RepoInfo: java.lang.String namespace> = $r0;

        $r0 = $r4.<com.firebase.client.core.RepoInfo: java.lang.String host>;

        $r4.<com.firebase.client.core.RepoInfo: java.lang.String internalHost> = $r0;

        $r2 = new com.firebase.client.utilities.ParsedUrl;

     label43:
        specialinvoke $r2.<com.firebase.client.utilities.ParsedUrl: void <init>()>();

     label44:
        $r2.<com.firebase.client.utilities.ParsedUrl: com.firebase.client.core.Path path> = $r3;

        $r2.<com.firebase.client.utilities.ParsedUrl: com.firebase.client.core.RepoInfo repoInfo> = $r4;

        return $r2;

     label45:
        varReplacer1059 = 1;

        $r4.<com.firebase.client.core.RepoInfo: boolean secure> = varReplacer1059;

        goto label38;

     label46:
        $r13 := @caughtexception;

        $r9 = new com.firebase.client.FirebaseException;

        varReplacer1055 = "Failed to URLEncode the path";

        specialinvoke $r9.<com.firebase.client.FirebaseException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer1055, $r13);

        throw $r9;

        catch java.net.URISyntaxException from label01 to label02 with label05;
        catch java.net.URISyntaxException from label03 to label05 with label05;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label46;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label46;
        catch java.net.URISyntaxException from label07 to label08 with label05;
        catch java.net.URISyntaxException from label09 to label10 with label05;
        catch java.net.URISyntaxException from label11 to label12 with label05;
        catch java.net.URISyntaxException from label14 to label15 with label05;
        catch java.net.URISyntaxException from label16 to label17 with label05;
        catch java.net.URISyntaxException from label18 to label19 with label05;
        catch java.net.URISyntaxException from label21 to label22 with label05;
        catch java.net.URISyntaxException from label24 to label25 with label05;
        catch java.net.URISyntaxException from label26 to label27 with label05;
        catch java.net.URISyntaxException from label28 to label29 with label05;
        catch java.net.URISyntaxException from label30 to label31 with label05;
        catch java.net.URISyntaxException from label32 to label33 with label05;
        catch java.net.URISyntaxException from label34 to label35 with label05;
        catch java.net.URISyntaxException from label36 to label37 with label05;
        catch java.net.URISyntaxException from label39 to label40 with label05;
        catch java.net.URISyntaxException from label41 to label42 with label05;
        catch java.net.URISyntaxException from label43 to label44 with label05;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label46;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label46;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label46;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label46;
        catch java.io.UnsupportedEncodingException from label16 to label17 with label46;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label46;
        catch java.io.UnsupportedEncodingException from label21 to label22 with label46;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label46;
        catch java.io.UnsupportedEncodingException from label26 to label27 with label46;
        catch java.io.UnsupportedEncodingException from label28 to label29 with label46;
        catch java.io.UnsupportedEncodingException from label30 to label31 with label46;
        catch java.io.UnsupportedEncodingException from label32 to label33 with label46;
        catch java.io.UnsupportedEncodingException from label34 to label35 with label46;
        catch java.io.UnsupportedEncodingException from label36 to label37 with label46;
        catch java.io.UnsupportedEncodingException from label39 to label40 with label46;
        catch java.io.UnsupportedEncodingException from label41 to label42 with label46;
        catch java.io.UnsupportedEncodingException from label43 to label44 with label46;
    }

    public static java.lang.String sha1HexDigest(java.lang.String)
    {
        java.lang.String $r0, varReplacer6340, varReplacer6341;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.lang.RuntimeException $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer6340 = "SHA-1";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6340);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.firebase.client.utilities.Base64: java.lang.String encodeBytes(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        varReplacer6341 = "Missing SHA-1 MessageDigest provider.";

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer6341, $r1);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String[] splitIntoFrames(java.lang.String, int)
    {
        java.lang.String $r0, $r3;
        int $i0, $i1, $i2, $i3;
        java.util.ArrayList $r1;
        java.lang.String[] $r2;
        java.lang.Object[] $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 > 16384 goto label1;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = $r0;

        return $r2;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i1 = 0;

     label2:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label3;

        $i2 = $i1 + 16384;

        $i3 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i2, $i3);

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        $i1 = $i1 + 16384;

        goto label2;

     label3:
        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $r2 = newarray (java.lang.String)[$i0];

        $r4 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        $r2 = (java.lang.String[]) $r4;

        return $r2;
    }

    public static java.lang.Integer tryParseInt(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Exception $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;
        int $i0;
        java.lang.Integer $r4;
        null_type varReplacer6209;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.firebase.client.utilities.Utilities: java.util.regex.Pattern isIntPattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        return $r4;

     label3:
        $r1 := @caughtexception;

     label4:
        varReplacer6209 = null;

        return varReplacer6209;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
