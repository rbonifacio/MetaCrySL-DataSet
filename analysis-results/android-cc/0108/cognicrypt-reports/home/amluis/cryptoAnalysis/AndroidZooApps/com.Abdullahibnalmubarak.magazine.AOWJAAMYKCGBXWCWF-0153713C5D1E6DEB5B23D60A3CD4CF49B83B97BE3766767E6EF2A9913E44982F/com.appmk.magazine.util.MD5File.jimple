public class com.appmk.magazine.util.MD5File extends java.lang.Object
{
    protected static char[] hexDigits;
    protected static java.security.MessageDigest messagedigest;

    static void <clinit>()
    {
        java.lang.Throwable $r0;
        java.security.MessageDigest $r1;
        char[] $r2;
        java.security.NoSuchAlgorithmException r3;
        null_type varReplacer2136;
        java.lang.String varReplacer2137;

        nop;

        $r2 = newarray (char)[16];

        $r2[0] = 48;

        $r2[1] = 49;

        $r2[2] = 50;

        $r2[3] = 51;

        $r2[4] = 52;

        $r2[5] = 53;

        $r2[6] = 54;

        $r2[7] = 55;

        $r2[8] = 56;

        $r2[9] = 57;

        $r2[10] = 97;

        $r2[11] = 98;

        $r2[12] = 99;

        $r2[13] = 100;

        $r2[14] = 101;

        $r2[15] = 102;

        <com.appmk.magazine.util.MD5File: char[] hexDigits> = $r2;

        varReplacer2136 = null;

        <com.appmk.magazine.util.MD5File: java.security.MessageDigest messagedigest> = varReplacer2136;

     label1:
        varReplacer2137 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2137);

     label2:
        <com.appmk.magazine.util.MD5File: java.security.MessageDigest messagedigest> = $r1;

        return;

     label3:
        $r0 := @caughtexception;

        r3 = (java.security.NoSuchAlgorithmException) $r0;

        virtualinvoke r3.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public void <init>()
    {
        com.appmk.magazine.util.MD5File $r0;

        $r0 := @this: com.appmk.magazine.util.MD5File;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static void appendHexPair(byte, java.lang.StringBuffer)
    {
        byte $b0;
        java.lang.StringBuffer $r0;
        char $c1, $c2;
        char[] $r1;
        short $s3;

        nop;

        $b0 := @parameter0: byte;

        $r0 := @parameter1: java.lang.StringBuffer;

        $r1 = <com.appmk.magazine.util.MD5File: char[] hexDigits>;

        $s3 = $b0 & 240;

        $s3 = $s3 >> 4;

        $c1 = $r1[$s3];

        $r1 = <com.appmk.magazine.util.MD5File: char[] hexDigits>;

        $b0 = $b0 & 15;

        $c2 = $r1[$b0];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        return;
    }

    private static java.lang.String bufferToHex(byte[])
    {
        byte[] $r0;
        int $i0, varReplacer2139;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        varReplacer2139 = 0;

        $r1 = staticinvoke <com.appmk.magazine.util.MD5File: java.lang.String bufferToHex(byte[],int,int)>($r0, varReplacer2139, $i0);

        return $r1;
    }

    private static java.lang.String bufferToHex(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1, $i2;
        java.lang.StringBuffer $r1;
        java.lang.String $r2;
        byte $b3;

        nop;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 = new java.lang.StringBuffer;

        $i2 = $i1 * 2;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i2);

        $i1 = 0 + $i1;

     label1:
        if $i0 < $i1 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label2:
        $b3 = $r0[$i0];

        staticinvoke <com.appmk.magazine.util.MD5File: void appendHexPair(byte,java.lang.StringBuffer)>($b3, $r1);

        $i0 = $i0 + 1;

        goto label1;
    }

    private static long getFileSize(java.io.InputStream)
    {
        java.io.InputStream $r0;
        com.appmk.magazine.util.ByteOutputStream $r1;
        java.lang.Exception $r2;
        byte[] $r3;
        int $i0, varReplacer2140;
        long $l1, varReplacer2141;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = new com.appmk.magazine.util.ByteOutputStream;

     label1:
        specialinvoke $r1.<com.appmk.magazine.util.ByteOutputStream: void <init>()>();

        $r3 = newarray (byte)[1024];

     label2:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[])>($r3);

     label3:
        if $i0 > 0 goto label6;

     label4:
        $r3 = virtualinvoke $r1.<com.appmk.magazine.util.ByteOutputStream: byte[] getBytes()>();

        $i0 = lengthof $r3;

     label5:
        $l1 = (long) $i0;

        return $l1;

     label6:
        varReplacer2140 = 0;

        virtualinvoke $r1.<com.appmk.magazine.util.ByteOutputStream: void write(byte[],int,int)>($r3, varReplacer2140, $i0);

     label7:
        goto label2;

     label8:
        $r2 := @caughtexception;

        varReplacer2141 = 0L;

        return varReplacer2141;

        catch java.lang.Exception from label1 to label3 with label8;
        catch java.lang.Exception from label4 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static java.lang.String getMD5String(java.io.FileInputStream) throws java.io.IOException
    {
        java.io.FileInputStream $r0;
        java.nio.channels.FileChannel $r1;
        java.nio.channels.FileChannel$MapMode $r2;
        long $l0, varReplacer2138;
        java.nio.MappedByteBuffer $r3;
        java.security.MessageDigest $r4;
        byte[] $r5;
        java.lang.String $r6;

        nop;

        $r0 := @parameter0: java.io.FileInputStream;

        $r1 = virtualinvoke $r0.<java.io.FileInputStream: java.nio.channels.FileChannel getChannel()>();

        $r2 = <java.nio.channels.FileChannel$MapMode: java.nio.channels.FileChannel$MapMode READ_ONLY>;

        $l0 = staticinvoke <com.appmk.magazine.util.MD5File: long getFileSize(java.io.InputStream)>($r0);

        varReplacer2138 = 0L;

        $r3 = virtualinvoke $r1.<java.nio.channels.FileChannel: java.nio.MappedByteBuffer map(java.nio.channels.FileChannel$MapMode,long,long)>($r2, varReplacer2138, $l0);

        $r4 = <com.appmk.magazine.util.MD5File: java.security.MessageDigest messagedigest>;

        virtualinvoke $r4.<java.security.MessageDigest: void update(java.nio.ByteBuffer)>($r3);

        $r4 = <com.appmk.magazine.util.MD5File: java.security.MessageDigest messagedigest>;

        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        $r6 = staticinvoke <com.appmk.magazine.util.MD5File: java.lang.String bufferToHex(byte[])>($r5);

        return $r6;
    }

    public static boolean isTheSameFile(java.io.FileInputStream, java.io.FileInputStream) throws java.io.IOException
    {
        java.io.FileInputStream $r0, $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.io.FileInputStream;

        $r1 := @parameter1: java.io.FileInputStream;

        $r2 = staticinvoke <com.appmk.magazine.util.MD5File: java.lang.String getMD5String(java.io.FileInputStream)>($r0);

        $r3 = staticinvoke <com.appmk.magazine.util.MD5File: java.lang.String getMD5String(java.io.FileInputStream)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }
}
