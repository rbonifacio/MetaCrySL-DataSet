Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer162)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: b7eba0d39c128ee1824251e9187ed58744213a18370b1e6d268cec431dc1de6b
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: 43858d70e269b9aefc31e4cc8fc46dfb249bedc9ddbf236cbe2235d335e25503
		Secure: false
	Object:
		Variable: varReplacer162
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer162)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: 50787d590ecd814a7e38ee5e98e16f6885524482a9f8b57b05cd2fb0858fec00
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer159)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: 12ede7d14e773a3bcb3f37250f8c5bf5d5fb75102c9e01fe8ead8a17e83ec0de
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer918)
		Method: <com.facebook.ads.internal.util.q: void <init>(java.security.KeyStore)>
		SHA-256: 6d3059925e034da22cca903c7c5ce4f7b7f5353dbb518d8c933537efb7f3fbc0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: 7d25e2f8cec37c5f773b09c19b1e43c84652d184f2b06183f98b76dd8adf6ccb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.facebook.ads.internal.util.g: org.apache.http.client.HttpClient b()>
		SHA-256: c82c99734e4b51f21f191d0f90d43ec5f59be9a68965230c5a27c05f6e9a0e60
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.baidu.simeji.common.util.EncryptUtils: byte[] encryptAes(java.lang.String)>
		SHA-256: 7e5160b7666394d4855e5fa79b07d18e365d3658fff4e10438b9c46f9684a4a6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1739)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 76ae0ed3c7d126767a4517138c3170f0ffc8ae5a249101c263780d1324c3a62b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2001)
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: be708daa97bbe9ac96cff0b11480b8ee5942a85b247a5b6dfedb79e891a99304
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1963)
		Method: <com.baidu.simeji.common.util.MD5Utils: void <clinit>()>
		SHA-256: 1c154b628451d88615c4c0b6fca1b2f6f98f8f3c949ed3ae64b3c9ec6b5fe2b6
		Secure: false

Findings in Java Class: com.baidu.simeji.common.util.EncryptUtils

	 in Method: byte[] encryptAes(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #12ede7d14e773a3bcb3f37250f8c5bf5d5fb75102c9e01fe8ead8a17e83ec0de)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer159)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer162)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer163, $r3)


Findings in Java Class: com.facebook.ads.internal.util.q

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer916, r5, varReplacer916)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #6d3059925e034da22cca903c7c5ce4f7b7f5353dbb518d8c933537efb7f3fbc0)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer918)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer916, r5, varReplacer916)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1737, r7, varReplacer1737)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #76ae0ed3c7d126767a4517138c3170f0ffc8ae5a249101c263780d1324c3a62b)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1739)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1737, r7, varReplacer1737)


Findings in Java Class: com.baidu.simeji.common.util.MD5Utils

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1c154b628451d88615c4c0b6fca1b2f6f98f8f3c949ed3ae64b3c9ec6b5fe2b6)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1963)


Findings in Java Class: com.facebook.common.util.SecureHashUtil

	 in Method: java.lang.String makeSHA1HashBase64(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #be708daa97bbe9ac96cff0b11480b8ee5942a85b247a5b6dfedb79e891a99304)
			First parameter (with value "SHA-1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2001)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	RequiredPredicateError: 6
=====================================================================