abstract class com.pubnub.api.PubnubCryptoCore extends java.lang.Object
{
    protected static com.pubnub.api.Logger log;
    java.lang.String CIPHER_KEY;
    boolean INIT;
    java.lang.String IV;
    byte[] ivBytes;
    byte[] keyBytes;

    static void <clinit>()
    {
        com.pubnub.api.Logger $r0;

        nop;

        $r0 = new com.pubnub.api.Logger;

        specialinvoke $r0.<com.pubnub.api.Logger: void <init>(java.lang.Class)>(class "Lcom/pubnub/api/Worker;");

        <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.Logger log> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.pubnub.api.PubnubCryptoCore $r0;
        java.lang.String $r1;

        $r0 := @this: com.pubnub.api.PubnubCryptoCore;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.pubnub.api.PubnubCryptoCore: byte[] keyBytes> = null;

        $r0.<com.pubnub.api.PubnubCryptoCore: byte[] ivBytes> = null;

        $r0.<com.pubnub.api.PubnubCryptoCore: java.lang.String IV> = "0123456789012345";

        $r0.<com.pubnub.api.PubnubCryptoCore: boolean INIT> = 0;

        $r0.<com.pubnub.api.PubnubCryptoCore: java.lang.String CIPHER_KEY> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        com.pubnub.api.PubnubCryptoCore $r0;
        java.lang.String $r1, $r2, varReplacer3572;
        null_type varReplacer3569, varReplacer3570;
        int varReplacer3571;

        nop;

        $r0 := @this: com.pubnub.api.PubnubCryptoCore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer3570 = null;

        $r0.<com.pubnub.api.PubnubCryptoCore: byte[] keyBytes> = varReplacer3570;

        varReplacer3569 = null;

        $r0.<com.pubnub.api.PubnubCryptoCore: byte[] ivBytes> = varReplacer3569;

        varReplacer3572 = "0123456789012345";

        $r0.<com.pubnub.api.PubnubCryptoCore: java.lang.String IV> = varReplacer3572;

        varReplacer3571 = 0;

        $r0.<com.pubnub.api.PubnubCryptoCore: boolean INIT> = varReplacer3571;

        if $r2 == null goto label1;

        $r0.<com.pubnub.api.PubnubCryptoCore: java.lang.String IV> = $r2;

     label1:
        $r0.<com.pubnub.api.PubnubCryptoCore: java.lang.String CIPHER_KEY> = $r1;

        return;
    }

    public static byte[] hexEncode(byte[]) throws com.pubnub.api.PubnubException
    {
        byte[] $r0;
        java.lang.StringBuffer $r1, r5;
        int $i0, $i1, $i4, varReplacer3454, varReplacer3456, varReplacer3457;
        byte $b2;
        short $s3;
        java.lang.String $r2, varReplacer3455;
        java.lang.Throwable $r3;
        com.pubnub.api.PubnubError $r4;
        com.pubnub.api.PubnubException r6;
        java.io.UnsupportedEncodingException r7;

        nop;

        $r0 := @parameter0: byte[];

        r5 = new java.lang.StringBuffer;

        $r1 = r5;

        specialinvoke r5.<java.lang.StringBuffer: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $s3 = $b2 & 255;

        $i4 = $s3 + 256;

        varReplacer3454 = 16;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i4, varReplacer3454);

        varReplacer3456 = 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(varReplacer3456);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        varReplacer3455 = "UTF-8";

        $r0 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3455);

     label3:
        return $r0;

     label4:
        $r3 := @caughtexception;

        r6 = new com.pubnub.api.PubnubException;

        r7 = (java.io.UnsupportedEncodingException) $r3;

        $r2 = virtualinvoke r7.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        varReplacer3457 = 12;

        $r4 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3457, $r2);

        specialinvoke r6.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r4);

        throw r6;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static byte[] hexStringToByteArray(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i4, $i5;
        char $c3;
        byte $b6;

        $r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i1 / 2;

        $r1 = newarray (byte)[$i0];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i0 = $i2 / 2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        $i4 = $i4 << 4;

        $i5 = $i2 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i5);

        $i5 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, 16);

        $i4 = $i4 + $i5;

        $b6 = (byte) $i4;

        $r1[$i0] = $b6;

        $i2 = $i2 + 2;

        goto label1;

     label2:
        return $r1;
    }

    public static byte[] md5(java.lang.String) throws com.pubnub.api.PubnubException
    {
        java.lang.String $r0, varReplacer3458, varReplacer3459;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Throwable $r3, $r5;
        com.pubnub.api.PubnubError $r4;
        com.pubnub.api.PubnubException r6;
        java.security.NoSuchAlgorithmException r7;
        java.io.UnsupportedEncodingException r8;
        int varReplacer3460, varReplacer3461;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer3459 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3459);

        varReplacer3458 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3458);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r6 = new com.pubnub.api.PubnubException;

        r7 = (java.security.NoSuchAlgorithmException) $r3;

        $r0 = virtualinvoke r7.<java.security.NoSuchAlgorithmException: java.lang.String toString()>();

        varReplacer3460 = 118;

        $r4 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3460, $r0);

        specialinvoke r6.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r4);

        throw r6;

     label4:
        $r5 := @caughtexception;

        r6 = new com.pubnub.api.PubnubException;

        r8 = (java.io.UnsupportedEncodingException) $r5;

        $r0 = virtualinvoke r8.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        varReplacer3461 = 119;

        $r4 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3461, $r0);

        specialinvoke r6.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r4);

        throw r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    private static com.pubnub.api.PubnubError newCryptoError(int, java.lang.String)
    {
        int $i0;
        java.lang.String $r0;
        com.pubnub.api.PubnubError $r1;

        nop;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 = <com.pubnub.api.PubnubError: com.pubnub.api.PubnubError PNERROBJ_CRYPTO_ERROR>;

        $r1 = staticinvoke <com.pubnub.api.PubnubError: com.pubnub.api.PubnubError getErrorObject(com.pubnub.api.PubnubError,int,java.lang.String)>($r1, $i0, $r0);

        return $r1;
    }

    public static byte[] sha256(byte[]) throws com.pubnub.api.PubnubException
    {
        byte[] $r0;
        java.security.MessageDigest $r1;
        java.lang.Throwable $r2;
        java.lang.String $r3, varReplacer3566;
        com.pubnub.api.PubnubError $r4;
        com.pubnub.api.PubnubException r5;
        java.security.NoSuchAlgorithmException r6;
        int varReplacer3565;

        nop;

        $r0 := @parameter0: byte[];

     label1:
        varReplacer3566 = "SHA-256";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3566);

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        r5 = new com.pubnub.api.PubnubException;

        r6 = (java.security.NoSuchAlgorithmException) $r2;

        $r3 = virtualinvoke r6.<java.security.NoSuchAlgorithmException: java.lang.String toString()>();

        varReplacer3565 = 1111;

        $r4 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3565, $r3);

        specialinvoke r5.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r4);

        throw r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public void InitCiphers() throws com.pubnub.api.PubnubException
    {
        com.pubnub.api.PubnubCryptoCore $r0;
        boolean $z0;
        java.lang.String $r1, $r2, r6, varReplacer3557, varReplacer3558, varReplacer3562, varReplacer3564;
        byte[] $r3;
        java.lang.Throwable $r4;
        com.pubnub.api.PubnubError $r5;
        com.pubnub.api.PubnubException r7;
        java.io.UnsupportedEncodingException r8;
        int varReplacer3559, varReplacer3560, varReplacer3561, varReplacer3563;

        nop;

        $r0 := @this: com.pubnub.api.PubnubCryptoCore;

        $z0 = $r0.<com.pubnub.api.PubnubCryptoCore: boolean INIT>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r6 = new java.lang.String;

        $r1 = r6;

        $r2 = $r0.<com.pubnub.api.PubnubCryptoCore: java.lang.String CIPHER_KEY>;

     label2:
        varReplacer3558 = "UTF-8";

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3558);

        $r3 = staticinvoke <com.pubnub.api.PubnubCryptoCore: byte[] sha256(byte[])>($r3);

        $r3 = staticinvoke <com.pubnub.api.PubnubCryptoCore: byte[] hexEncode(byte[])>($r3);

        varReplacer3562 = "UTF-8";

        specialinvoke r6.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, varReplacer3562);

        varReplacer3559 = 0;

        varReplacer3560 = 32;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3559, varReplacer3560);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer3564 = "UTF-8";

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3564);

     label3:
        $r0.<com.pubnub.api.PubnubCryptoCore: byte[] keyBytes> = $r3;

        $r1 = $r0.<com.pubnub.api.PubnubCryptoCore: java.lang.String IV>;

     label4:
        varReplacer3557 = "UTF-8";

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3557);

     label5:
        $r0.<com.pubnub.api.PubnubCryptoCore: byte[] ivBytes> = $r3;

        varReplacer3561 = 1;

        $r0.<com.pubnub.api.PubnubCryptoCore: boolean INIT> = varReplacer3561;

        return;

     label6:
        $r4 := @caughtexception;

        r7 = new com.pubnub.api.PubnubException;

        r8 = (java.io.UnsupportedEncodingException) $r4;

        $r1 = virtualinvoke r8.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        varReplacer3563 = 11;

        $r5 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3563, $r1);

        specialinvoke r7.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r5);

        throw r7;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label6;
        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    public java.lang.String decrypt(java.lang.String) throws com.pubnub.api.PubnubException
    {
        com.pubnub.api.PubnubCryptoCore $r0;
        java.lang.String $r1, r17;
        javax.crypto.spec.IvParameterSpec $r2, r15;
        byte[] $r3;
        javax.crypto.spec.SecretKeySpec $r4, r16;
        javax.crypto.Cipher $r5;
        java.lang.Throwable $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        com.pubnub.api.PubnubError $r7;
        com.pubnub.api.PubnubException r18;
        java.lang.IllegalArgumentException r19;
        java.io.UnsupportedEncodingException r20;
        javax.crypto.IllegalBlockSizeException r21;
        javax.crypto.BadPaddingException r22;
        java.security.InvalidKeyException r23;
        java.security.InvalidAlgorithmParameterException r24;
        java.security.NoSuchAlgorithmException r25;
        javax.crypto.NoSuchPaddingException r26;

        $r0 := @this: com.pubnub.api.PubnubCryptoCore;

        $r1 := @parameter0: java.lang.String;

     label01:
        virtualinvoke $r0.<com.pubnub.api.PubnubCryptoCore: void InitCiphers()>();

     label02:
        r15 = new javax.crypto.spec.IvParameterSpec;

        $r2 = r15;

        $r3 = $r0.<com.pubnub.api.PubnubCryptoCore: byte[] ivBytes>;

     label03:
        specialinvoke r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

     label04:
        r16 = new javax.crypto.spec.SecretKeySpec;

        $r4 = r16;

        $r3 = $r0.<com.pubnub.api.PubnubCryptoCore: byte[] keyBytes>;

     label05:
        specialinvoke r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, "AES");

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS7Padding");

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r4, $r2);

     label06:
        r17 = new java.lang.String;

     label07:
        $r3 = staticinvoke <com.pubnub.api.Base64Encoder: byte[] decode(java.lang.String)>($r1);

        $r3 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        specialinvoke r17.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, "UTF-8");

     label08:
        return r17;

     label09:
        $r6 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r19 = (java.lang.IllegalArgumentException) $r6;

        $r1 = virtualinvoke r19.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        $r7 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(111, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r7);

        throw r18;

     label10:
        $r8 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r20 = (java.io.UnsupportedEncodingException) $r8;

        $r1 = virtualinvoke r20.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        $r7 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(112, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r7);

        throw r18;

     label11:
        $r9 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r21 = (javax.crypto.IllegalBlockSizeException) $r9;

        $r1 = virtualinvoke r21.<javax.crypto.IllegalBlockSizeException: java.lang.String toString()>();

        $r7 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(113, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r7);

        throw r18;

     label12:
        $r10 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r22 = (javax.crypto.BadPaddingException) $r10;

        $r1 = virtualinvoke r22.<javax.crypto.BadPaddingException: java.lang.String toString()>();

        $r7 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(114, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r7);

        throw r18;

     label13:
        $r11 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r23 = (java.security.InvalidKeyException) $r11;

        $r1 = virtualinvoke r23.<java.security.InvalidKeyException: java.lang.String toString()>();

        $r7 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(115, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r7);

        throw r18;

     label14:
        $r12 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r24 = (java.security.InvalidAlgorithmParameterException) $r12;

        $r1 = virtualinvoke r24.<java.security.InvalidAlgorithmParameterException: java.lang.String toString()>();

        $r7 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(116, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r7);

        throw r18;

     label15:
        $r13 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r25 = (java.security.NoSuchAlgorithmException) $r13;

        $r1 = virtualinvoke r25.<java.security.NoSuchAlgorithmException: java.lang.String toString()>();

        $r7 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(117, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r7);

        throw r18;

     label16:
        $r14 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r26 = (javax.crypto.NoSuchPaddingException) $r14;

        $r1 = virtualinvoke r26.<javax.crypto.NoSuchPaddingException: java.lang.String toString()>();

        $r7 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(118, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r7);

        throw r18;

        catch java.lang.IllegalArgumentException from label01 to label02 with label09;
        catch java.lang.IllegalArgumentException from label03 to label04 with label09;
        catch java.lang.IllegalArgumentException from label05 to label06 with label09;
        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label10;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label10;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label10;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label10;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label11;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label11;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label11;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label11;
        catch javax.crypto.BadPaddingException from label01 to label02 with label12;
        catch javax.crypto.BadPaddingException from label03 to label04 with label12;
        catch javax.crypto.BadPaddingException from label05 to label06 with label12;
        catch javax.crypto.BadPaddingException from label07 to label08 with label12;
        catch java.security.InvalidKeyException from label01 to label02 with label13;
        catch java.security.InvalidKeyException from label03 to label04 with label13;
        catch java.security.InvalidKeyException from label05 to label06 with label13;
        catch java.security.InvalidKeyException from label07 to label08 with label13;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label14;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label14;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label14;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label14;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label15;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label15;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label15;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label16;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label16;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label16;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label16;
    }

    public java.lang.String encrypt(java.lang.String) throws com.pubnub.api.PubnubException
    {
        com.pubnub.api.PubnubCryptoCore $r0;
        java.lang.String $r1, r17, varReplacer3547, varReplacer3549, varReplacer3550;
        javax.crypto.spec.IvParameterSpec $r2, r15;
        byte[] $r3;
        javax.crypto.spec.SecretKeySpec $r4, r16;
        javax.crypto.Cipher $r5;
        char[] $r6;
        java.lang.Throwable $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        com.pubnub.api.PubnubError $r8;
        com.pubnub.api.PubnubException r18;
        java.security.NoSuchAlgorithmException r19;
        javax.crypto.NoSuchPaddingException r20;
        java.security.InvalidKeyException r21;
        java.security.InvalidAlgorithmParameterException r22;
        java.io.UnsupportedEncodingException r23;
        javax.crypto.IllegalBlockSizeException r24;
        javax.crypto.BadPaddingException r25;
        int varReplacer3545, varReplacer3546, varReplacer3548, varReplacer3551, varReplacer3552, varReplacer3553, varReplacer3554, varReplacer3555;

        nop;

        $r0 := @this: com.pubnub.api.PubnubCryptoCore;

        $r1 := @parameter0: java.lang.String;

     label01:
        virtualinvoke $r0.<com.pubnub.api.PubnubCryptoCore: void InitCiphers()>();

     label02:
        r15 = new javax.crypto.spec.IvParameterSpec;

        $r2 = r15;

        $r3 = $r0.<com.pubnub.api.PubnubCryptoCore: byte[] ivBytes>;

     label03:
        specialinvoke r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

     label04:
        r16 = new javax.crypto.spec.SecretKeySpec;

        $r4 = r16;

        $r3 = $r0.<com.pubnub.api.PubnubCryptoCore: byte[] keyBytes>;

     label05:
        varReplacer3550 = "AES";

        specialinvoke r16.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3550);

        varReplacer3549 = "AES/CBC/PKCS7Padding";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3549);

        varReplacer3552 = 1;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3552, $r4, $r2);

     label06:
        r17 = new java.lang.String;

     label07:
        varReplacer3547 = "UTF-8";

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3547);

        $r3 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        $r6 = staticinvoke <com.pubnub.api.Base64Encoder: char[] encode(byte[])>($r3);

        specialinvoke r17.<java.lang.String: void <init>(char[])>($r6);

     label08:
        return r17;

     label09:
        $r7 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r19 = (java.security.NoSuchAlgorithmException) $r7;

        $r1 = virtualinvoke r19.<java.security.NoSuchAlgorithmException: java.lang.String toString()>();

        varReplacer3545 = 13;

        $r8 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3545, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r8);

        throw r18;

     label10:
        $r9 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r20 = (javax.crypto.NoSuchPaddingException) $r9;

        $r1 = virtualinvoke r20.<javax.crypto.NoSuchPaddingException: java.lang.String toString()>();

        varReplacer3551 = 14;

        $r8 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3551, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r8);

        throw r18;

     label11:
        $r10 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r21 = (java.security.InvalidKeyException) $r10;

        $r1 = virtualinvoke r21.<java.security.InvalidKeyException: java.lang.String toString()>();

        varReplacer3546 = 15;

        $r8 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3546, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r8);

        throw r18;

     label12:
        $r11 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r22 = (java.security.InvalidAlgorithmParameterException) $r11;

        $r1 = virtualinvoke r22.<java.security.InvalidAlgorithmParameterException: java.lang.String toString()>();

        varReplacer3548 = 16;

        $r8 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3548, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r8);

        throw r18;

     label13:
        $r12 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r23 = (java.io.UnsupportedEncodingException) $r12;

        $r1 = virtualinvoke r23.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        varReplacer3555 = 17;

        $r8 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3555, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r8);

        throw r18;

     label14:
        $r13 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r24 = (javax.crypto.IllegalBlockSizeException) $r13;

        $r1 = virtualinvoke r24.<javax.crypto.IllegalBlockSizeException: java.lang.String toString()>();

        varReplacer3553 = 18;

        $r8 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3553, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r8);

        throw r18;

     label15:
        $r14 := @caughtexception;

        r18 = new com.pubnub.api.PubnubException;

        r25 = (javax.crypto.BadPaddingException) $r14;

        $r1 = virtualinvoke r25.<javax.crypto.BadPaddingException: java.lang.String toString()>();

        varReplacer3554 = 19;

        $r8 = staticinvoke <com.pubnub.api.PubnubCryptoCore: com.pubnub.api.PubnubError newCryptoError(int,java.lang.String)>(varReplacer3554, $r1);

        specialinvoke r18.<com.pubnub.api.PubnubException: void <init>(com.pubnub.api.PubnubError)>($r8);

        throw r18;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label09;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label09;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label09;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label10;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label10;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label10;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label10;
        catch java.security.InvalidKeyException from label01 to label02 with label11;
        catch java.security.InvalidKeyException from label03 to label04 with label11;
        catch java.security.InvalidKeyException from label05 to label06 with label11;
        catch java.security.InvalidKeyException from label07 to label08 with label11;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label12;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label12;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label12;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label12;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label13;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label13;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label13;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label13;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label14;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label14;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label14;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label14;
        catch javax.crypto.BadPaddingException from label01 to label02 with label15;
        catch javax.crypto.BadPaddingException from label03 to label04 with label15;
        catch javax.crypto.BadPaddingException from label05 to label06 with label15;
        catch javax.crypto.BadPaddingException from label07 to label08 with label15;
    }
}
