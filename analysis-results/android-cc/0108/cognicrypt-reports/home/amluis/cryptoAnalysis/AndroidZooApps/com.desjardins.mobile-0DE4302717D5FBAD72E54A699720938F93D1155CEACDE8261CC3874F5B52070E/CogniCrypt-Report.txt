Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>($r3, varReplacer3400)
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: java.security.KeyPair createKeyPair(java.lang.String)>
		SHA-256: 2497974636840fba8b7d516ee32e5c704272cfe2c07c3a25dc9993d98871aff6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.wearable.PutDataRequest: void <clinit>()>
		SHA-256: 7c7914a5dbc342a0b07872e6ba9b92f3ce42103379b2a3186bbd078fe9a61ec
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2140)
		Method: <com.desjardins.mobile.commun.utilitaire.PackageManagerUtils: java.lang.String getCurrentSignature(java.lang.String,android.content.Context)>
		SHA-256: b9cc181cfc5e7f6570fc0979e45d05b83ea8bccec1de992131227cf74abbc5
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: $r9 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: java.security.KeyPair createKeyPair(java.lang.String)>
		SHA-256: c7114e453f492a3fdd720ca2e7e010170c2010f45294558b27f9e3d053320d51
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.desjardins.mobile.commun.utilitaire.PackageManagerUtils: java.lang.String getCurrentSignature(java.lang.String,android.content.Context)>
		SHA-256: e24a92e66cc017059b2b999c2de384cf89b5ce2808565100ae74ca993421545e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3415)
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: java.security.PrivateKey getPrivateKey(java.lang.String)>
		SHA-256: 196fa3b82dd4223f11ca41213ccf25fcceddca60b9dc316c8ffd1fbc8dade405
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.Signature
		Statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3392)
		Method: <com.desjardins.mobile.fingerprint.Fingerprint: boolean hasValidFingerprints()>
		SHA-256: aee8c7664c1b5cfc5b49989d7be30571049de691c2ce913cde551b1c3de0288b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6541)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 5e11a633d5dbc168da5fefac8381c3b514a3b6061ef6f936a34f6c6043d8af63
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 779fa9e7d07fc58ac6fb0f677b3796756777647dae3e7e2e128e2e27e33a0c70
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3406)
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: boolean deleteKeyPair(java.lang.String)>
		SHA-256: 49e7558da00e4d5cb111723b9baa03c10b0d1bf8ac10a25a69e738fff3eac870
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3158)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 4b04fa7929a09aa09c1b14d73bb7d8c4228da5d74d8690292b9f47a51a27fe46
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer3413, varReplacer3414)
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: java.security.PrivateKey getPrivateKey(java.lang.String)>
		SHA-256: 2da33714cef80cc56b0bacff75327214fa64b76bf961b94f1a3e2b380436d991
		Secure: false

Findings in Java Class: com.desjardins.mobile.commun.utilitaire.PackageManagerUtils

	 in Method: java.lang.String getCurrentSignature(java.lang.String,android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b9cc181cfc5e7f6570fc0979e45d05b83ea8bccec1de992131227cf74abbc5)
			First parameter (with value "SHA256") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2140)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4b04fa7929a09aa09c1b14d73bb7d8c4228da5d74d8690292b9f47a51a27fe46)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3158)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3159, varReplacer3159, varReplacer3159)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3159, varReplacer3159, varReplacer3159)


Findings in Java Class: com.desjardins.mobile.fingerprint.Fingerprint

	 in Method: boolean hasValidFingerprints()
		ConstraintError violating CrySL rule for java.security.Signature (on Object #aee8c7664c1b5cfc5b49989d7be30571049de691c2ce913cde551b1c3de0288b)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA}
			at statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3392)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #aee8c7664c1b5cfc5b49989d7be30571049de691c2ce913cde551b1c3de0288b)
			Operation on object of type java.security.Signature object not completed. Expected call to java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom), update, java.security.Signature: void initSign(java.security.PrivateKey)
			at statement: virtualinvoke $r0.<java.security.Signature: void initSign(java.security.PrivateKey)>($r2)


Findings in Java Class: com.desjardins.mobile.fingerprint.vault.Vault

	 in Method: boolean deleteKeyPair(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #49e7558da00e4d5cb111723b9baa03c10b0d1bf8ac10a25a69e738fff3eac870)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3406)


	 in Method: java.security.PrivateKey getPrivateKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #196fa3b82dd4223f11ca41213ccf25fcceddca60b9dc316c8ffd1fbc8dade405)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3415)


	 in Method: java.security.KeyPair createKeyPair(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared D S A
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared D H
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r8)


Findings in Java Class: com.squareup.okhttp.internal.Util

	 in Method: okio.ByteString sha1(okio.ByteString)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5e11a633d5dbc168da5fefac8381c3b514a3b6061ef6f936a34f6c6043d8af63)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6541)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	RequiredPredicateError: 5
	ConstraintError: 6
=====================================================================