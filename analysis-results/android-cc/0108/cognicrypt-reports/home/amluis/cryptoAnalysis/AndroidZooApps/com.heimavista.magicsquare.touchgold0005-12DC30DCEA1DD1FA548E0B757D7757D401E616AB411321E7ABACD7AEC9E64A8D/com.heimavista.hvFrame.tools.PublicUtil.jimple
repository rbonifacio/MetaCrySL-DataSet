public class com.heimavista.hvFrame.tools.PublicUtil extends java.lang.Object
{
    public static final int AUDIO;
    public static final int IMAGE;
    public static final int OTHER;
    public static final int VIDEO;
    private static final java.lang.String[] a;
    private static final java.lang.String[] b;
    private static final java.lang.String[] c;

    static void <clinit>()
    {
        java.lang.String[] $r0;

        nop;

        $r0 = newarray (java.lang.String)[14];

        $r0[0] = "MP3";

        $r0[1] = "M4A";

        $r0[2] = "WAV";

        $r0[3] = "AMR";

        $r0[4] = "AWB";

        $r0[5] = "WMA";

        $r0[6] = "OGG";

        $r0[7] = "MID";

        $r0[8] = "XMF";

        $r0[9] = "RTTTL";

        $r0[10] = "SMF";

        $r0[11] = "IMY";

        $r0[12] = "M3U";

        $r0[13] = "PLS";

        <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String[] a> = $r0;

        $r0 = newarray (java.lang.String)[8];

        $r0[0] = "MP4";

        $r0[1] = "M4V";

        $r0[2] = "3GP";

        $r0[3] = "3GPP";

        $r0[4] = "AVI";

        $r0[5] = "3G2";

        $r0[6] = "3GPP2";

        $r0[7] = "WMV";

        <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String[] b> = $r0;

        $r0 = newarray (java.lang.String)[7];

        $r0[0] = "JPG";

        $r0[1] = "JPEG";

        $r0[2] = "GIF";

        $r0[3] = "PNG";

        $r0[4] = "BMP";

        $r0[5] = "WBMP";

        $r0[6] = "PNG";

        <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String[] c> = $r0;

        return;
    }

    public void <init>()
    {
        com.heimavista.hvFrame.tools.PublicUtil $r0;

        $r0 := @this: com.heimavista.hvFrame.tools.PublicUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean chkFileDir(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        java.io.File $r1;
        int varReplacer2129, varReplacer2130;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String getDirFromFilePath(java.lang.String)>($r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label2;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

        return $z0;

     label1:
        varReplacer2129 = 1;

        return varReplacer2129;

     label2:
        varReplacer2130 = 0;

        return varReplacer2130;
    }

    public static org.json.JSONArray converListToJSONArray(java.util.List)
    {
        java.util.List $r0;
        org.json.JSONArray $r1, $r6;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.util.Map $r4;
        org.json.JSONObject $r5;

        $r0 := @parameter0: java.util.List;

        $r1 = new org.json.JSONArray;

        specialinvoke $r1.<org.json.JSONArray: void <init>()>();

        if $r0 == null goto label5;

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r1;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $r3 == null goto label3;

        $z0 = $r3 instanceof java.util.Map;

        if $z0 == 0 goto label3;

        $r4 = (java.util.Map) $r3;

        $r5 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: org.json.JSONObject converMapToJSON(java.util.Map)>($r4);

        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r5);

        goto label1;

     label3:
        if $r3 == null goto label4;

        $z0 = $r3 instanceof java.util.List;

        if $z0 == 0 goto label4;

        $r0 = (java.util.List) $r3;

        $r6 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: org.json.JSONArray converListToJSONArray(java.util.List)>($r0);

        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r6);

        goto label1;

     label4:
        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r3);

        goto label1;

     label5:
        return $r1;
    }

    public static org.json.JSONObject converMapToJSON(java.util.Map)
    {
        java.util.Map $r0;
        org.json.JSONObject $r1, $r7;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.String $r6;
        org.json.JSONException $r8, $r11, $r12;
        java.util.List $r9;
        org.json.JSONArray $r10;

        $r0 := @parameter0: java.util.Map;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        if $r0 == null goto label23;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label02;

        return $r1;

     label02:
        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r4 == null goto label10;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = $r4 instanceof java.util.Map;

        if $z0 == 0 goto label10;

     label03:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

     label04:
        $r6 = (java.lang.String) $r4;

     label05:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

     label06:
        $r0 = (java.util.Map) $r4;

     label07:
        $r7 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: org.json.JSONObject converMapToJSON(java.util.Map)>($r0);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r6, $r7);

     label08:
        goto label01;

     label09:
        $r8 := @caughtexception;

        virtualinvoke $r8.<org.json.JSONException: void printStackTrace()>();

        goto label01;

     label10:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        if $r4 == null goto label18;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $z0 = $r4 instanceof java.util.List;

        if $z0 == 0 goto label18;

     label11:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

     label12:
        $r6 = (java.lang.String) $r4;

     label13:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

     label14:
        $r9 = (java.util.List) $r4;

     label15:
        $r10 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: org.json.JSONArray converListToJSONArray(java.util.List)>($r9);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r6, $r10);

     label16:
        goto label01;

     label17:
        $r11 := @caughtexception;

        virtualinvoke $r11.<org.json.JSONException: void printStackTrace()>();

        goto label01;

     label18:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

     label19:
        $r6 = (java.lang.String) $r4;

     label20:
        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r6, $r4);

     label21:
        goto label01;

     label22:
        $r12 := @caughtexception;

        virtualinvoke $r12.<org.json.JSONException: void printStackTrace()>();

        goto label01;

     label23:
        return $r1;

        catch org.json.JSONException from label03 to label04 with label09;
        catch org.json.JSONException from label05 to label06 with label09;
        catch org.json.JSONException from label07 to label08 with label09;
        catch org.json.JSONException from label11 to label12 with label17;
        catch org.json.JSONException from label13 to label14 with label17;
        catch org.json.JSONException from label15 to label16 with label17;
        catch org.json.JSONException from label18 to label19 with label22;
        catch org.json.JSONException from label20 to label21 with label22;
    }

    public static java.lang.String convertTimeToHms(int)
    {
        int $i0, $i1, $i2;
        java.lang.Object[] $r0;
        java.lang.Integer $r1;
        java.lang.String $r2;

        $i0 := @parameter0: int;

        $i1 = $i0 / 1000;

        $i2 = $i1 / 60;

        $i0 = $i2 / 60;

        $i1 = $i1 % 60;

        $i2 = $i2 % 60;

        $r0 = newarray (java.lang.Object)[3];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r0[1] = $r1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[2] = $r1;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d:%02d:%02d", $r0);

        return $r2;
    }

    public static java.lang.String convertTimeToMs(int)
    {
        int $i0, $i1;
        java.lang.Object[] $r0;
        java.lang.Integer $r1;
        java.lang.String $r2, varReplacer392;

        nop;

        $i0 := @parameter0: int;

        $i1 = $i0 / 1000;

        $i0 = $i1 / 60;

        $i1 = $i1 % 60;

        $r0 = newarray (java.lang.Object)[2];

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[1] = $r1;

        varReplacer392 = "%02d:%02d";

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer392, $r0);

        return $r2;
    }

    public static boolean copyFile(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.File $r2, r8;
        boolean $z0;
        java.io.FileInputStream $r3, r9;
        java.io.FileOutputStream $r4, r10;
        byte[] $r5;
        int $i0;
        java.lang.Throwable $r6, $r7;
        java.io.FileNotFoundException r11;
        java.io.IOException r12;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r8 = new java.io.File;

        $r2 = r8;

        specialinvoke r8.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r2.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label13;

        $z0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: boolean chkFileDir(java.lang.String)>($r1);

        if $z0 == 0 goto label13;

        r9 = new java.io.FileInputStream;

        $r3 = r9;

     label01:
        specialinvoke r9.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label02:
        r10 = new java.io.FileOutputStream;

        $r4 = r10;

     label03:
        specialinvoke r10.<java.io.FileOutputStream: void <init>(java.lang.String)>($r1);

     label04:
        $r5 = newarray (byte)[5120];

     label05:
        $i0 = virtualinvoke $r3.<java.io.FileInputStream: int read(byte[])>($r5);

     label06:
        if $i0 != -1 goto label09;

     label07:
        virtualinvoke $r4.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r4.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label08:
        return 1;

     label09:
        virtualinvoke $r4.<java.io.FileOutputStream: void write(byte[],int,int)>($r5, 0, $i0);

     label10:
        goto label05;

     label11:
        $r6 := @caughtexception;

        r11 = (java.io.FileNotFoundException) $r6;

        virtualinvoke r11.<java.io.FileNotFoundException: void printStackTrace()>();

        return 0;

     label12:
        $r7 := @caughtexception;

        r12 = (java.io.IOException) $r7;

        virtualinvoke r12.<java.io.IOException: void printStackTrace()>();

     label13:
        return 0;

        catch java.io.FileNotFoundException from label01 to label02 with label11;
        catch java.io.FileNotFoundException from label03 to label04 with label11;
        catch java.io.FileNotFoundException from label05 to label06 with label11;
        catch java.io.FileNotFoundException from label07 to label08 with label11;
        catch java.io.FileNotFoundException from label09 to label10 with label11;
        catch java.io.IOException from label01 to label02 with label12;
        catch java.io.IOException from label03 to label04 with label12;
        catch java.io.IOException from label05 to label06 with label12;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.io.IOException from label09 to label10 with label12;
    }

    public static void copyFolder(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r4, $r9, varReplacer3773, varReplacer3774, varReplacer3775, varReplacer3777;
        int $i0, $i1, varReplacer3776;
        java.io.File $r2;
        java.lang.String[] $r3;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.io.FileInputStream $r6;
        java.io.FileOutputStream $r7;
        byte[] $r8;
        java.lang.Exception $r10;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

        $r2 = new java.io.File;

     label01:
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

     label02:
        $r2 = new java.io.File;

     label03:
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String[] list()>();

     label04:
        $i1 = lengthof $r3;

     label05:
        if $i0 < $i1 goto label06;

        return;

     label06:
        $r4 = <java.io.File: java.lang.String separator>;

     label07:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

     label08:
        if $z0 == 0 goto label24;

        $r2 = new java.io.File;

        $r5 = new java.lang.StringBuilder;

     label09:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r4 = $r3[$i0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r4);

     label10:
        $z0 = virtualinvoke $r2.<java.io.File: boolean isFile()>();

     label11:
        if $z0 == 0 goto label18;

        $r6 = new java.io.FileInputStream;

     label12:
        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label13:
        $r7 = new java.io.FileOutputStream;

        $r5 = new java.lang.StringBuilder;

     label14:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        varReplacer3775 = "/";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3775);

        $r4 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.lang.String)>($r4);

        $r8 = newarray (byte)[5120];

     label15:
        $i1 = virtualinvoke $r6.<java.io.FileInputStream: int read(byte[])>($r8);

     label16:
        if $i1 != -1 goto label30;

     label17:
        virtualinvoke $r7.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r7.<java.io.FileOutputStream: void close()>();

        virtualinvoke $r6.<java.io.FileInputStream: void close()>();

     label18:
        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

     label19:
        if $z0 == 0 goto label23;

        $r5 = new java.lang.StringBuilder;

     label20:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        varReplacer3777 = "/";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3777);

        $r4 = $r3[$i0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        $r5 = new java.lang.StringBuilder;

     label22:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        varReplacer3773 = "/";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3773);

        $r9 = $r3[$i0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: void copyFolder(java.lang.String,java.lang.String)>($r4, $r9);

     label23:
        $i0 = $i0 + 1;

        goto label04;

     label24:
        $r2 = new java.io.File;

        $r5 = new java.lang.StringBuilder;

     label25:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

     label26:
        $r4 = <java.io.File: java.lang.String separator>;

     label27:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = $r3[$i0];

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r4);

     label28:
        goto label10;

     label29:
        $r10 := @caughtexception;

        varReplacer3774 = "copy folder error";

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void d(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", varReplacer3774);

        virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>();

        return;

     label30:
        varReplacer3776 = 0;

        virtualinvoke $r7.<java.io.FileOutputStream: void write(byte[],int,int)>($r8, varReplacer3776, $i1);

     label31:
        goto label15;

        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Exception from label03 to label05 with label29;
        catch java.lang.Exception from label07 to label08 with label29;
        catch java.lang.Exception from label09 to label11 with label29;
        catch java.lang.Exception from label12 to label13 with label29;
        catch java.lang.Exception from label14 to label16 with label29;
        catch java.lang.Exception from label17 to label19 with label29;
        catch java.lang.Exception from label20 to label21 with label29;
        catch java.lang.Exception from label22 to label23 with label29;
        catch java.lang.Exception from label25 to label26 with label29;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.Exception from label30 to label31 with label29;
    }

    public static void deleteDir(java.io.File)
    {
        java.io.File $r0;
        int varReplacer3351;

        nop;

        $r0 := @parameter0: java.io.File;

        varReplacer3351 = 1;

        staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: void deleteDir(java.io.File,boolean)>($r0, varReplacer3351);

        return;
    }

    public static void deleteDir(java.io.File, boolean)
    {
        java.io.File $r0, $r1;
        boolean $z0, $z1;
        int $i0, $i1, varReplacer3352;
        java.io.File[] $r2;

        nop;

        $r0 := @parameter0: java.io.File;

        $z0 := @parameter1: boolean;

        if $r0 == null goto label6;

        $z1 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label6;

        $z1 = virtualinvoke $r0.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label2:
        if $i1 < $i0 goto label3;

        virtualinvoke $r0.<java.io.File: boolean delete()>();

        return;

     label3:
        $r1 = $r2[$i1];

        $z1 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label5;

        virtualinvoke $r1.<java.io.File: boolean delete()>();

     label4:
        $i1 = $i1 + 1;

        goto label2;

     label5:
        $z1 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label4;

        varReplacer3352 = 1;

        staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: void deleteDir(java.io.File,boolean)>($r1, varReplacer3352);

        goto label4;

     label6:
        return;
    }

    public static int diffDate(long, long)
    {
        long $l0, $l1;
        java.util.Date $r0, $r1;
        int $i2;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l1);

        $i2 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: int diffDate(java.util.Date,java.util.Date)>($r1, $r0);

        return $i2;
    }

    public static int diffDate(java.util.Date, java.util.Date)
    {
        java.util.Date $r0, $r1;
        java.text.SimpleDateFormat $r2;
        java.lang.String $r3;
        int $i0, $i1;

        $r0 := @parameter0: java.util.Date;

        $r1 := @parameter1: java.util.Date;

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd");

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r0);

        $i0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: int parseStringToInt(java.lang.String,int)>($r3, 0);

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        $i1 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: int parseStringToInt(java.lang.String,int)>($r3, 0);

        $i0 = $i0 - $i1;

        return $i0;
    }

    public static int dip2px(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0, $f1;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f1 * $f0;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }

    public static float dip2sp(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $i0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: int dip2px(android.content.Context,float)>($r0, $f0);

        $f0 = (float) $i0;

        $i0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: int px2sp(android.content.Context,float)>($r0, $f0);

        $f0 = (float) $i0;

        return $f0;
    }

    public static java.lang.String formatTimeString(long, java.lang.String)
    {
        long $l0;
        java.lang.String $r0;
        java.util.Date $r1;
        boolean $z0;
        java.text.SimpleDateFormat $r2;

        $l0 := @parameter0: long;

        $r0 := @parameter1: java.lang.String;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        return $r0;

     label1:
        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r1);

        return $r0;
    }

    public static java.lang.String formatTimeString(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        java.util.Date $r2;
        java.text.SimpleDateFormat $r3;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r2 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: java.util.Date parseStringToDate(java.lang.String)>($r1);

        if $r2 != null goto label2;

        return "";

     label2:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label3;

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r0);

        $r1 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

     label3:
        return $r1;
    }

    public static org.w3c.dom.Element generateDomElement(java.lang.String)
    {
        java.lang.String $r0;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        javax.xml.parsers.DocumentBuilder $r4;
        org.w3c.dom.Document $r5;
        org.w3c.dom.Element $r6;
        java.lang.Exception $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        $r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

     label1:
        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r1);

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.xmlpull.v1.XmlPullParser generateXmlPullParser(java.lang.String)
    {
        java.lang.String $r0, varReplacer1553;
        java.io.ByteArrayInputStream $r1;
        byte[] $r2;
        org.xmlpull.v1.XmlPullParser $r3;
        org.xmlpull.v1.XmlPullParserException $r4;
        null_type varReplacer1552;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.ByteArrayInputStream;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        $r3 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>();

     label1:
        varReplacer1553 = "UTF-8";

        interfaceinvoke $r3.<org.xmlpull.v1.XmlPullParser: void setInput(java.io.InputStream,java.lang.String)>($r1, varReplacer1553);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<org.xmlpull.v1.XmlPullParserException: void printStackTrace()>();

        varReplacer1552 = null;

        return varReplacer1552;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label3;
    }

    public static org.json.JSONObject getAddrByGeo(double, double)
    {
        double $d0, $d1;
        java.lang.String $r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.net.URL $r2;
        java.net.URLConnection $r3;
        java.net.HttpURLConnection $r4;
        java.io.InputStream $r5;
        java.io.BufferedReader $r6;
        java.io.InputStreamReader $r7;
        org.json.JSONObject $r8, $r9, $r11;
        org.json.JSONArray $r10, $r13;
        int $i0, $i1;
        java.lang.Exception $r12;
        org.json.JSONException $r14;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $r0 = staticinvoke <com.heimavista.hvFrame.tools.environment: java.lang.String getLanguage()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("cn");

        if $z0 == 0 goto label15;

        $r0 = "&language=zh-CN&sensor=true";

     label01:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://maps.google.com/maps/api/geocode/json?latlng=");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = new java.net.URL;

     label02:
        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r4 = (java.net.HttpURLConnection) $r3;

        $r5 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label03:
        $r6 = new java.io.BufferedReader;

        $r7 = new java.io.InputStreamReader;

     label04:
        specialinvoke $r7.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r6.<java.io.BufferedReader: void <init>(java.io.Reader)>($r7);

     label05:
        $r0 = virtualinvoke $r6.<java.io.BufferedReader: java.lang.String readLine()>();

     label06:
        if $r0 != null goto label17;

     label07:
        virtualinvoke $r6.<java.io.BufferedReader: void close()>();

        virtualinvoke $r4.<java.net.HttpURLConnection: void disconnect()>();

     label08:
        $r8 = new org.json.JSONObject;

        specialinvoke $r8.<org.json.JSONObject: void <init>()>();

        $r8 = new org.json.JSONObject;

        specialinvoke $r8.<org.json.JSONObject: void <init>()>();

        $r9 = new org.json.JSONObject;

     label09:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

        $r10 = virtualinvoke $r9.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("results");

        $r9 = virtualinvoke $r10.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r0 = virtualinvoke $r9.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("formatted_address");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("FullAddress", $r0);

        $r10 = virtualinvoke $r9.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("address_components");

     label10:
        $i0 = 0;

     label11:
        $i1 = virtualinvoke $r10.<org.json.JSONArray: int length()>();

     label12:
        if $i0 < $i1 goto label20;

     label13:
        $r11 = virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("geometry");

        $r11 = virtualinvoke $r11.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("location");

        $d0 = virtualinvoke $r11.<org.json.JSONObject: double getDouble(java.lang.String)>("lng");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("Lontidude", $d0);

        $r9 = virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("geometry");

        $r9 = virtualinvoke $r9.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("location");

        $d0 = virtualinvoke $r9.<org.json.JSONObject: double getDouble(java.lang.String)>("lat");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,double)>("Latitude", $d0);

     label14:
        return $r8;

     label15:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("tw");

        if $z0 == 0 goto label16;

        $r0 = "&language=zh-TW&sensor=true";

        goto label01;

     label16:
        $r0 = "&language=en&sensor=true";

        goto label01;

     label17:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label18:
        goto label05;

     label19:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

        goto label08;

     label20:
        $r11 = virtualinvoke $r10.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        $r13 = virtualinvoke $r11.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("types");

        $r0 = virtualinvoke $r13.<org.json.JSONArray: java.lang.String getString(int)>(0);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("street_number");

     label21:
        if $z0 == 0 goto label24;

     label22:
        $r0 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("long_name");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("SubStreet", $r0);

     label23:
        $i0 = $i0 + 1;

        goto label11;

     label24:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("route");

     label25:
        if $z0 == 0 goto label29;

     label26:
        $r0 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("long_name");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("Street", $r0);

     label27:
        goto label23;

     label28:
        $r14 := @caughtexception;

        virtualinvoke $r14.<org.json.JSONException: void printStackTrace()>();

        return $r8;

     label29:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sublocality");

     label30:
        if $z0 == 0 goto label33;

     label31:
        $r0 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("long_name");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("District", $r0);

     label32:
        goto label23;

     label33:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("locality");

     label34:
        if $z0 == 0 goto label37;

     label35:
        $r0 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("long_name");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("City", $r0);

     label36:
        goto label23;

     label37:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("administrative_area_level_1");

     label38:
        if $z0 == 0 goto label41;

     label39:
        $r0 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("long_name");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("Province", $r0);

     label40:
        goto label23;

     label41:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("country");

     label42:
        if $z0 == 0 goto label45;

     label43:
        $r0 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("long_name");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("Country", $r0);

     label44:
        goto label23;

     label45:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("postal_code");

     label46:
        if $z0 == 0 goto label23;

     label47:
        $r0 = virtualinvoke $r11.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("long_name");

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("PostalCode", $r0);

     label48:
        goto label23;

        catch java.lang.Exception from label02 to label03 with label19;
        catch java.lang.Exception from label04 to label06 with label19;
        catch java.lang.Exception from label07 to label08 with label19;
        catch org.json.JSONException from label09 to label10 with label28;
        catch org.json.JSONException from label11 to label12 with label28;
        catch org.json.JSONException from label13 to label14 with label28;
        catch java.lang.Exception from label17 to label18 with label19;
        catch org.json.JSONException from label20 to label21 with label28;
        catch org.json.JSONException from label22 to label23 with label28;
        catch org.json.JSONException from label24 to label25 with label28;
        catch org.json.JSONException from label26 to label27 with label28;
        catch org.json.JSONException from label29 to label30 with label28;
        catch org.json.JSONException from label31 to label32 with label28;
        catch org.json.JSONException from label33 to label34 with label28;
        catch org.json.JSONException from label35 to label36 with label28;
        catch org.json.JSONException from label37 to label38 with label28;
        catch org.json.JSONException from label39 to label40 with label28;
        catch org.json.JSONException from label41 to label42 with label28;
        catch org.json.JSONException from label43 to label44 with label28;
        catch org.json.JSONException from label45 to label46 with label28;
        catch org.json.JSONException from label47 to label48 with label28;
    }

    public static double[] getAround(double, double, int)
    {
        double $d0, $d1, $d2;
        int $i0;
        java.lang.Double $r0, $r1, $r2, $r3, $r4;
        double[] $r5;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $i0 := @parameter2: int;

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(111293.63611111112);

        $i0 = $i0 * 1000;

        $d0 = (double) $i0;

        $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $d1 = 1.0 / $d1;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $d1 = $d1 * $d0;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d1 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();

        $d2 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $d1 = $d1 - $d2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d1 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();

        $d2 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $d1 = $d1 + $d2;

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $d2 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();

        $d2 = $d2 * 0.017453292500000002;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d1 = $d1 * $d2;

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d1 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();

        $d1 = 1.0 / $d1;

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $d1 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();

        $d0 = $d1 * $d0;

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $d0 = $d0 - $d1;

        $r0 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

        $d0 = $d1 + $d0;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5 = newarray (double)[4];

        $d0 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        $r5[0] = $d0;

        $d0 = virtualinvoke $r0.<java.lang.Double: double doubleValue()>();

        $r5[1] = $d0;

        $d0 = virtualinvoke $r4.<java.lang.Double: double doubleValue()>();

        $r5[2] = $d0;

        $d0 = virtualinvoke $r1.<java.lang.Double: double doubleValue()>();

        $r5[3] = $d0;

        return $r5;
    }

    public static int getColor(java.lang.String)
    {
        java.lang.String $r0, $r1, $r3, $r5;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        java.lang.Integer $r2;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label4;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 == 0 goto label1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 6 goto label2;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r1, 16);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(2, 4);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r1, 16);

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r0, 16);

        $i2 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i0, $i1, $i2);

        return $i0;

     label2:
        if $i0 != 8 goto label3;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r1, 16);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(2, 4);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r1, 16);

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r1, 16);

        $i2 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(6, 8);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r0, 16);

        $i3 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $i0;

     label3:
        if $i0 != 3 goto label4;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, 2);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(2, 3);

        $r4 = new java.lang.StringBuilder;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r3, 16);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r4 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r1, 16);

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r4 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r0, 16);

        $i2 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>($i0, $i1, $i2);

        return $i0;

     label4:
        $i0 = staticinvoke <android.graphics.Color: int argb(int,int,int,int)>(0, 0, 0, 0);

        return $i0;
    }

    public static java.util.Map getCoordinate(double, double, int, int)
    {
        double $d0, $d1;
        int $i0, $i1;
        java.util.HashMap $r0, r9;
        java.lang.Double $r1;
        java.lang.StringBuilder $r2, r10;
        java.lang.String $r3, $r7;
        com.heimavista.hvFrame.network.httpWrapper $r4, r12;
        java.net.URI $r5, r11;
        boolean $z0;
        com.heimavista.hvFrame.vm.ParamJsonData $r6, r13;
        java.lang.Throwable $r8;
        java.net.URISyntaxException r14;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        r9 = new java.util.HashMap;

        $r0 = r9;

        specialinvoke r9.<java.util.HashMap: void <init>()>();

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("latitude", $r1);

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("longitude", $r1);

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://www.gpsspg.com/ajax/latlng_office.aspx?lat=");

        $r2 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&lng=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&type=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        r12 = new com.heimavista.hvFrame.network.httpWrapper;

        $r4 = r12;

        r11 = new java.net.URI;

        $r5 = r11;

     label01:
        specialinvoke r11.<java.net.URI: void <init>(java.lang.String)>($r3);

        specialinvoke r12.<com.heimavista.hvFrame.network.httpWrapper: void <init>(java.net.URI)>($r5);

        virtualinvoke $r4.<com.heimavista.hvFrame.network.httpWrapper: void addHeader(java.lang.String,java.lang.String)>("Host", "www.gpsspg.com");

        virtualinvoke $r4.<com.heimavista.hvFrame.network.httpWrapper: void addHeader(java.lang.String,java.lang.String)>("Referer", "http://www.gpsspg.com/iframe/latlng_google_121218.htm");

        virtualinvoke $r4.<com.heimavista.hvFrame.network.httpWrapper: boolean get()>();

        $z0 = virtualinvoke $r4.<com.heimavista.hvFrame.network.httpWrapper: boolean isError()>();

     label02:
        if $z0 != 0 goto label15;

        r10 = new java.lang.StringBuilder;

        $r2 = r10;

     label03:
        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Coordinate ");

        $r3 = virtualinvoke $r4.<com.heimavista.hvFrame.network.httpWrapper: java.lang.String getResponseString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void i(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r3);

     label04:
        r13 = new com.heimavista.hvFrame.vm.ParamJsonData;

        $r6 = r13;

     label05:
        $r3 = virtualinvoke $r4.<com.heimavista.hvFrame.network.httpWrapper: java.lang.String getResponseString()>();

        specialinvoke r13.<com.heimavista.hvFrame.vm.ParamJsonData: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<com.heimavista.hvFrame.vm.ParamJsonData: java.lang.String getStringValueByKey(java.lang.String,java.lang.String)>("status", "");

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ok");

     label06:
        if $z0 == 0 goto label15;

        $r3 = "gps";

        if $i1 != 0 goto label12;

        $r3 = "gps";

     label07:
        r10 = new java.lang.StringBuilder;

        $r2 = r10;

     label08:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".lat");

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r6.<com.heimavista.hvFrame.vm.ParamJsonData: java.lang.String getStringValueByKey(java.lang.String,java.lang.String)>($r7, "0.0");

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r7);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("latitude", $r1);

     label09:
        r10 = new java.lang.StringBuilder;

        $r2 = r10;

     label10:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".lng");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r6.<com.heimavista.hvFrame.vm.ParamJsonData: java.lang.String getStringValueByKey(java.lang.String,java.lang.String)>($r3, "0.0");

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r3);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("longitude", $r1);

     label11:
        return $r0;

     label12:
        if $i1 != 1 goto label13;

        $r3 = "google";

        goto label07;

     label13:
        if $i1 != 2 goto label07;

        $r3 = "baidu";

        goto label07;

     label14:
        $r8 := @caughtexception;

        r14 = (java.net.URISyntaxException) $r8;

        virtualinvoke r14.<java.net.URISyntaxException: void printStackTrace()>();

     label15:
        return $r0;

        catch java.net.URISyntaxException from label01 to label02 with label14;
        catch java.net.URISyntaxException from label03 to label04 with label14;
        catch java.net.URISyntaxException from label05 to label06 with label14;
        catch java.net.URISyntaxException from label08 to label09 with label14;
        catch java.net.URISyntaxException from label10 to label11 with label14;
    }

    public static java.lang.String getDirFromFilePath(java.lang.String)
    {
        java.lang.String $r0, varReplacer2132;
        boolean $z0;
        int $i0, varReplacer2134;
        null_type varReplacer2133;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        varReplacer2133 = null;

        return varReplacer2133;

     label1:
        varReplacer2132 = "/";

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer2132);

        varReplacer2134 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2134, $i0);

        return $r0;
    }

    public static float getDistance(double, double, double, double)
    {
        double $d0, $d1, $d2, $d3;
        float $f0;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 := @parameter3: double;

        $f0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: float getDistanceInMiles(double,double,double,double)>($d0, $d1, $d2, $d3);

        $f0 = $f0 / 1000.0F;

        return $f0;
    }

    public static java.lang.String getDistanceDisplay(float)
    {
        float $f0;
        java.text.DecimalFormat $r0;
        byte $b0;
        com.heimavista.hvFrame.logicCore.hvApp $r1;
        java.lang.String $r2;
        double $d0;
        java.lang.String[] $r3;

        $f0 := @parameter0: float;

        $r0 = new java.text.DecimalFormat;

        specialinvoke $r0.<java.text.DecimalFormat: void <init>(java.lang.String)>("#.#");

        $b0 = $f0 cmpg 100.0F;

        if $b0 >= 0 goto label1;

        $r1 = staticinvoke <com.heimavista.hvFrame.logicCore.hvApp: com.heimavista.hvFrame.logicCore.hvApp getInstance()>();

        $r2 = virtualinvoke $r1.<com.heimavista.hvFrame.logicCore.hvApp: java.lang.String getString(java.lang.String)>("map_distance_close");

        return $r2;

     label1:
        $b0 = $f0 cmpg 1000.0F;

        if $b0 >= 0 goto label2;

        $d0 = (double) $f0;

        $r2 = virtualinvoke $r0.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r2);

        $r1 = staticinvoke <com.heimavista.hvFrame.logicCore.hvApp: com.heimavista.hvFrame.logicCore.hvApp getInstance()>();

        $r3 = newarray (java.lang.String)[1];

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        $r3[0] = $r2;

        $r2 = virtualinvoke $r1.<com.heimavista.hvFrame.logicCore.hvApp: java.lang.String getString(java.lang.String,java.lang.String[])>("map_distance_nearby_meter", $r3);

        return $r2;

     label2:
        $b0 = $f0 cmpg 10000.0F;

        if $b0 >= 0 goto label3;

        $f0 = $f0 / 1000.0F;

        $d0 = (double) $f0;

        $r2 = virtualinvoke $r0.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r2);

        $r1 = staticinvoke <com.heimavista.hvFrame.logicCore.hvApp: com.heimavista.hvFrame.logicCore.hvApp getInstance()>();

        $r3 = newarray (java.lang.String)[1];

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        $r3[0] = $r2;

        $r2 = virtualinvoke $r1.<com.heimavista.hvFrame.logicCore.hvApp: java.lang.String getString(java.lang.String,java.lang.String[])>("map_distance_nearby_kmeter", $r3);

        return $r2;

     label3:
        $f0 = $f0 / 1000.0F;

        $d0 = (double) $f0;

        $r2 = virtualinvoke $r0.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r2);

        $r1 = staticinvoke <com.heimavista.hvFrame.logicCore.hvApp: com.heimavista.hvFrame.logicCore.hvApp getInstance()>();

        $r3 = newarray (java.lang.String)[1];

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        $r3[0] = $r2;

        $r2 = virtualinvoke $r1.<com.heimavista.hvFrame.logicCore.hvApp: java.lang.String getString(java.lang.String,java.lang.String[])>("map_distance_kmeter", $r3);

        return $r2;
    }

    public static float getDistanceInMiles(double, double, double, double)
    {
        double $d0, $d1, $d2, $d3;
        float[] $r0;
        float $f0;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 := @parameter2: double;

        $d3 := @parameter3: double;

        $r0 = newarray (float)[1];

        staticinvoke <android.location.Location: void distanceBetween(double,double,double,double,float[])>($d0, $d1, $d2, $d3, $r0);

        $f0 = $r0[0];

        return $f0;
    }

    public static double getDoubleValueByKey(java.util.Map, java.lang.String, double)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r3;
        double $d0, $d1;
        java.lang.String[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $d0 := @parameter2: double;

     label01:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

     label02:
        $i0 = 0;

     label03:
        $i1 = lengthof $r2;

     label04:
        if $i0 < $i1 goto label05;

        return $d0;

     label05:
        $i1 = lengthof $r2;

     label06:
        $i1 = $i1 + -1;

        if $i0 == $i1 goto label11;

     label07:
        $r3 = $r2[$i0];

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

     label08:
        if $z0 == 0 goto label18;

     label09:
        $r3 = $r2[$i0];

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r0 = (java.util.Map) $r4;

     label10:
        $i0 = $i0 + 1;

        goto label03;

     label11:
        $r3 = $r2[$i0];

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

     label12:
        if $z0 == 0 goto label10;

     label13:
        $r3 = $r2[$i0];

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

     label14:
        if $z0 != 0 goto label10;

     label15:
        $r3 = $r2[$i0];

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

     label16:
        return $d1;

     label17:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("get value error:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void e(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r1);

     label18:
        return $d0;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    public static double getDoubleValueByKey(org.w3c.dom.Element, java.lang.String, double)
    {
        org.w3c.dom.Element $r0;
        java.lang.String $r1;
        double $d0, $d1;
        boolean $z0;
        java.lang.Double $r2;
        java.lang.Exception $r3;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r1 := @parameter1: java.lang.String;

        $d0 := @parameter2: double;

        $r1 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>($r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label4;

     label1:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r1);

        $d1 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

     label2:
        return $d1;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label4:
        return $d0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getFileNameFromUrl(java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer319, varReplacer320, varReplacer321, varReplacer322, varReplacer323;
        int $i0, $i1, $i2;
        boolean $z0;
        byte[] $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer320 = "/";

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer320);

        $i0 = $i0 + 1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label1:
        varReplacer321 = "{";

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(varReplacer321);

        varReplacer322 = "}";

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(varReplacer322);

        if $i0 == -1 goto label2;

        if $i1 == -1 goto label2;

        $i2 = $i1 + 1;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        varReplacer319 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r1, varReplacer319);

     label2:
        if $i0 == -1 goto label3;

        if $i1 != -1 goto label1;

     label3:
        varReplacer323 = "&";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer323);

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String getMD5(byte[])>($r2);

     label4:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>($r0);

        return $r0;
    }

    public static java.lang.String getFilePathFromUri(android.net.Uri)
    {
        android.net.Uri $r0;
        com.heimavista.hvFrame.logicCore.hvApp $r1;
        android.app.Activity $r2;
        android.content.ContentResolver $r3;
        android.database.Cursor $r4;
        boolean $z0;
        java.lang.String $r5;

        $r0 := @parameter0: android.net.Uri;

        $r1 = staticinvoke <com.heimavista.hvFrame.logicCore.hvApp: com.heimavista.hvFrame.logicCore.hvApp getInstance()>();

        $r2 = virtualinvoke $r1.<com.heimavista.hvFrame.logicCore.hvApp: android.app.Activity getCurrentActivity()>();

        if $r2 != null goto label1;

        return "";

     label1:
        $r1 = staticinvoke <com.heimavista.hvFrame.logicCore.hvApp: com.heimavista.hvFrame.logicCore.hvApp getInstance()>();

        $r2 = virtualinvoke $r1.<com.heimavista.hvFrame.logicCore.hvApp: android.app.Activity getCurrentActivity()>();

        $r3 = virtualinvoke $r2.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $r4 = virtualinvoke $r3.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r0, null, null, null, null);

        if $r4 != null goto label2;

        return "";

     label2:
        $z0 = interfaceinvoke $r4.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<android.database.Cursor: java.lang.String getString(int)>(1);

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

        return $r5;

     label3:
        return "";
    }

    public static int getFileType(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.String[] $r1;
        java.util.List $r2, $r3, $r4;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String[] a>;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r1 = <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String[] b>;

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $r1 = <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String[] c>;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>($r0);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        return 2;

     label3:
        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r0);

        if $z0 == 0 goto label4;

        return 3;

     label4:
        return 0;
    }

    public static double getFloatValueByKey(org.json.JSONObject, java.lang.String, float)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        float $f0;
        boolean $z0;
        double $d0;
        java.lang.Exception $r2;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $f0 := @parameter2: float;

     label1:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>($r1);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $d0 = virtualinvoke $r0.<org.json.JSONObject: double getDouble(java.lang.String)>($r1);

     label4:
        return $d0;

     label5:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label6:
        $d0 = (double) $f0;

        return $d0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static float getFloatValueByKey(java.util.Map, java.lang.String, float)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r3;
        float $f0, $f1;
        java.lang.String[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $f0 := @parameter2: float;

     label01:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");

     label02:
        $i0 = 0;

     label03:
        $i1 = lengthof $r2;

     label04:
        if $i0 < $i1 goto label05;

        return $f0;

     label05:
        $i1 = lengthof $r2;

     label06:
        $i1 = $i1 + -1;

        if $i0 == $i1 goto label11;

     label07:
        $r3 = $r2[$i0];

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

     label08:
        if $z0 == 0 goto label18;

     label09:
        $r3 = $r2[$i0];

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r0 = (java.util.Map) $r4;

     label10:
        $i0 = $i0 + 1;

        goto label03;

     label11:
        $r3 = $r2[$i0];

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

     label12:
        if $z0 == 0 goto label10;

     label13:
        $r3 = $r2[$i0];

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

     label14:
        if $z0 != 0 goto label10;

     label15:
        $r3 = $r2[$i0];

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

     label16:
        return $f1;

     label17:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("get value error:");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void e(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r1);

     label18:
        return $f0;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    public static float getFloatValueByKey(org.w3c.dom.Element, java.lang.String, float)
    {
        org.w3c.dom.Element $r0;
        java.lang.String $r1;
        float $f0, $f1;
        boolean $z0;
        java.lang.Float $r2;
        java.lang.Exception $r3;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r1 := @parameter1: java.lang.String;

        $f0 := @parameter2: float;

        $r1 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>($r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label4;

     label1:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>($r1);

        $f1 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

     label2:
        return $f1;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label4:
        return $f0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getFullAddress(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.Exception $r4, $r5;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = "";

     label01:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("Province");

     label02:
        if $z0 == 0 goto label05;

        $r2 = new java.lang.StringBuilder;

     label03:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>("");

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Province");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r1 = $r3;

     label05:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("City");

     label06:
        if $z0 == 0 goto label09;

        $r2 = new java.lang.StringBuilder;

     label07:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("City");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r1 = $r3;

     label09:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("District");

     label10:
        if $z0 == 0 goto label13;

        $r2 = new java.lang.StringBuilder;

     label11:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("District");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r1 = $r3;

     label13:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("Street");

     label14:
        if $z0 == 0 goto label24;

        $r2 = new java.lang.StringBuilder;

     label15:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Street");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        $r1 = $r3;

     label17:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>("SubStreet");

     label18:
        if $z0 == 0 goto label25;

        $r2 = new java.lang.StringBuilder;

     label19:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("SubStreet");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label20:
        return $r3;

     label21:
        $r4 := @caughtexception;

        $r5 = $r4;

     label22:
        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        return $r1;

     label23:
        $r5 := @caughtexception;

        goto label22;

     label24:
        goto label17;

     label25:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label23;
        catch java.lang.Exception from label19 to label20 with label23;
    }

    public static org.json.JSONObject getGeoPointByAddress(java.lang.String)
    {
        java.lang.String $r0;
        org.apache.http.client.methods.HttpGet $r1;
        java.lang.StringBuilder $r2;
        org.apache.http.impl.client.DefaultHttpClient $r3;
        org.apache.http.HttpResponse $r4;
        org.apache.http.HttpEntity $r5;
        java.io.InputStream $r6;
        int $i0;
        org.json.JSONObject $r7, $r12;
        java.lang.Double $r8, $r9, $r13;
        java.lang.Object $r10;
        org.json.JSONArray $r11;
        double $d0;
        char $c1;
        java.lang.Throwable $r14, $r18;
        org.json.JSONException $r15, $r17;
        java.lang.Exception $r16;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.apache.http.client.methods.HttpGet;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("http://maps.google.com/maps/api/geocode/json?address=");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ka&sensor=false");

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.apache.http.client.methods.HttpGet: void <init>(java.lang.String)>($r0);

        $r3 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r3.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r4 = interfaceinvoke $r3.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r1);

        $r5 = interfaceinvoke $r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label02:
        $i0 = virtualinvoke $r6.<java.io.InputStream: int read()>();

     label03:
        if $i0 != -1 goto label17;

     label04:
        $r7 = new org.json.JSONObject;

        specialinvoke $r7.<org.json.JSONObject: void <init>()>();

        $r8 = new java.lang.Double;

        specialinvoke $r8.<java.lang.Double: void <init>(double)>(0.0);

        $r9 = new java.lang.Double;

        specialinvoke $r9.<java.lang.Double: void <init>(double)>(0.0);

        $r7 = new org.json.JSONObject;

     label05:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label06:
        $r2 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("address list:");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void i(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r0);

        $r10 = virtualinvoke $r7.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("results");

     label08:
        $r11 = (org.json.JSONArray) $r10;

     label09:
        $r12 = virtualinvoke $r11.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r12 = virtualinvoke $r12.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("geometry");

        $r12 = virtualinvoke $r12.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("location");

        $d0 = virtualinvoke $r12.<org.json.JSONObject: double getDouble(java.lang.String)>("lng");

        $r13 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label10:
        $r10 = virtualinvoke $r7.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("results");

     label11:
        $r11 = (org.json.JSONArray) $r10;

     label12:
        $r7 = virtualinvoke $r11.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>(0);

        $r7 = virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("geometry");

        $r7 = virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>("location");

        $d0 = virtualinvoke $r7.<org.json.JSONObject: double getDouble(java.lang.String)>("lat");

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label13:
        $r9 = $r8;

     label14:
        $r7 = new org.json.JSONObject;

        specialinvoke $r7.<org.json.JSONObject: void <init>()>();

     label15:
        virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("latitude", $r9);

        virtualinvoke $r7.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("longitude", $r13);

     label16:
        return $r7;

     label17:
        $c1 = (char) $i0;

     label18:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

     label19:
        goto label02;

     label20:
        $r14 := @caughtexception;

        goto label04;

     label21:
        $r15 := @caughtexception;

        $r13 = $r8;

     label22:
        virtualinvoke $r15.<org.json.JSONException: void printStackTrace()>();

        goto label14;

     label23:
        $r16 := @caughtexception;

        virtualinvoke $r16.<java.lang.Exception: void printStackTrace()>();

        return $r7;

     label24:
        $r17 := @caughtexception;

        $r15 = $r17;

        goto label22;

     label25:
        $r18 := @caughtexception;

        goto label04;

        catch org.apache.http.client.ClientProtocolException from label01 to label03 with label20;
        catch java.io.IOException from label01 to label03 with label25;
        catch org.json.JSONException from label05 to label06 with label21;
        catch org.json.JSONException from label07 to label08 with label21;
        catch org.json.JSONException from label09 to label10 with label21;
        catch org.json.JSONException from label10 to label11 with label24;
        catch org.json.JSONException from label12 to label13 with label24;
        catch java.lang.Exception from label15 to label16 with label23;
        catch org.apache.http.client.ClientProtocolException from label18 to label19 with label20;
        catch java.io.IOException from label18 to label19 with label25;
    }

    public static int getGravity(int, int)
    {
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 != 17 goto label01;

        return $i1;

     label01:
        if $i1 == 3 goto label02;

        if $i1 == 5 goto label02;

        if $i1 != 1 goto label07;

     label02:
        $i2 = 8388611 & $i0;

        if $i2 != 8388611 goto label03;

        $i0 = $i0 & -8388612;

     label03:
        $i2 = $i0 & 3;

        if $i2 != 3 goto label04;

        $i0 = $i0 & -4;

     label04:
        $i2 = $i0 & 5;

        if $i2 != 5 goto label05;

        $i0 = $i0 & -6;

     label05:
        if $i1 != 1 goto label06;

        $i2 = $i0 & 1;

        if $i2 != 1 goto label06;

        $i0 = $i0 & -2;

     label06:
        $i0 = $i1 | $i0;

        return $i0;

     label07:
        if $i1 == 48 goto label08;

        if $i1 == 80 goto label08;

        if $i1 != 16 goto label06;

     label08:
        $i2 = 8388613 & $i0;

        if $i2 != 8388613 goto label09;

        $i0 = $i0 & -8388614;

     label09:
        $i2 = $i0 & 48;

        if $i2 != 48 goto label10;

        $i0 = $i0 & -49;

     label10:
        $i2 = $i0 & 80;

        if $i2 != 80 goto label11;

        $i0 = $i0 & -81;

     label11:
        if $i1 != 16 goto label06;

        $i2 = $i0 & 16;

        if $i2 != 16 goto label06;

        $i0 = $i0 & -17;

        goto label06;
    }

    public static int getIntValue(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, varReplacer1551;
        int $i0, $i1;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Exception $r3;

        nop;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        varReplacer1551 = "PlayMode";

        $r1 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String getStringValue(org.xmlpull.v1.XmlPullParser,java.lang.String)>($r0, varReplacer1551);

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label2:
        if $z0 != 0 goto label6;

     label3:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

     label4:
        return $i1;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label6:
        return $i0;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static int getIntValueByKey(java.util.Map, java.lang.String, int)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r3, varReplacer1314, varReplacer1315;
        int $i0, $i1, $i2;
        java.lang.String[] $r2;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

     label01:
        varReplacer1314 = "\\.";

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1314);

     label02:
        $i1 = 0;

     label03:
        $i2 = lengthof $r2;

     label04:
        if $i1 < $i2 goto label05;

        return $i0;

     label05:
        $i2 = lengthof $r2;

     label06:
        $i2 = $i2 + -1;

        if $i1 == $i2 goto label11;

     label07:
        $r3 = $r2[$i1];

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

     label08:
        if $z0 == 0 goto label16;

     label09:
        $r3 = $r2[$i1];

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r0 = (java.util.Map) $r4;

     label10:
        $i1 = $i1 + 1;

        goto label03;

     label11:
        $r3 = $r2[$i1];

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

     label12:
        if $z0 == 0 goto label10;

     label13:
        $r3 = $r2[$i1];

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $i1 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: int parseStringToInt(java.lang.String,int)>($r3, $i0);

     label14:
        return $i1;

     label15:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        varReplacer1315 = "get value error:";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1315);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void e(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r1);

     label16:
        return $i0;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public static int getIntValueByKey(org.json.JSONObject, java.lang.String, int)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1, varReplacer1970, varReplacer1972;
        int $i0, $i1, varReplacer1971;
        boolean $z0;
        java.lang.Exception $r2;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

     label1:
        varReplacer1972 = "ID";

        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>(varReplacer1972);

     label2:
        if $z0 == 0 goto label6;

     label3:
        varReplacer1970 = "ID";

        $i1 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>(varReplacer1970);

     label4:
        return $i1;

     label5:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label6:
        varReplacer1971 = 0;

        return varReplacer1971;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static int getIntValueByKey(org.w3c.dom.Element, java.lang.String, int)
    {
        org.w3c.dom.Element $r0;
        java.lang.String $r1;
        int $i0, $i1;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.Exception $r3;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>($r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label4;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label4:
        return $i0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getLanguageWithLocal()
    {
        java.lang.String $r0, $r2, varReplacer995, varReplacer996, varReplacer997;
        java.util.Locale $r1;
        boolean $z0;

        nop;

        $r0 = "CN";

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String getCountry()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        varReplacer995 = "zh_CN";

        return varReplacer995;

     label1:
        $r0 = "TW";

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String getCountry()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        varReplacer996 = "zh_TW";

        return varReplacer996;

     label2:
        varReplacer997 = "en";

        return varReplacer997;
    }

    public static java.util.List getListByKey(java.util.Map, java.lang.String)
    {
        java.lang.String $r0, $r4, varReplacer2151, varReplacer2152;
        java.util.ArrayList $r1;
        java.util.Map $r2;
        java.lang.String[] $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r5;
        java.util.List $r6;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8;

        nop;

        $r2 := @parameter0: java.util.Map;

        $r0 := @parameter1: java.lang.String;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

     label01:
        varReplacer2151 = "\\.";

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer2151);

     label02:
        $i0 = 0;

     label03:
        $i1 = lengthof $r3;

     label04:
        if $i0 < $i1 goto label06;

     label05:
        return $r1;

     label06:
        $i1 = lengthof $r3;

     label07:
        $i1 = $i1 + -1;

        if $i0 == $i1 goto label13;

     label08:
        $r4 = $r3[$i0];

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

     label09:
        if $z0 == 0 goto label12;

     label10:
        $r4 = $r3[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r2 = (java.util.Map) $r5;

     label11:
        $i0 = $i0 + 1;

        goto label03;

     label12:
        return $r1;

     label13:
        $r4 = $r3[$i0];

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

     label14:
        if $z0 == 0 goto label17;

     label15:
        $r4 = $r3[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (java.util.List) $r5;

     label16:
        return $r6;

     label17:
        return $r1;

     label18:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        varReplacer2152 = "get value error:";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2152);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void e(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r4);

        goto label05;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label06 to label07 with label18;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label18;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Exception from label15 to label16 with label18;
    }

    public static java.lang.String getLocalFileContent(java.lang.String)
    {
        java.lang.String $r0;
        java.io.FileInputStream $r1, r6;
        java.io.File $r2, r5;
        java.io.ByteArrayOutputStream $r3, r7;
        int $i0;
        java.lang.Throwable $r4;
        java.io.IOException r8;
        null_type varReplacer958;

        nop;

        $r0 := @parameter0: java.lang.String;

        r6 = new java.io.FileInputStream;

        $r1 = r6;

        r5 = new java.io.File;

        $r2 = r5;

     label01:
        specialinvoke r5.<java.io.File: void <init>(java.lang.String)>($r0);

        specialinvoke r6.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label02:
        r7 = new java.io.ByteArrayOutputStream;

        $r3 = r7;

     label03:
        specialinvoke r7.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

     label05:
        if $i0 != -1 goto label08;

     label06:
        $r0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void i(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/AssetsManager;", $r0);

        $r0 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label07:
        return $r0;

     label08:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void write(int)>($i0);

     label09:
        goto label04;

     label10:
        $r4 := @caughtexception;

        r8 = (java.io.IOException) $r4;

        virtualinvoke r8.<java.io.IOException: void printStackTrace()>();

        varReplacer958 = null;

        return varReplacer958;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.io.IOException from label08 to label09 with label10;
    }

    public static java.lang.String getMD5(byte[])
    {
        byte[] $r0;
        char[] $r1, $r2;
        int $i0, $i1, $i2;
        java.security.MessageDigest $r3;
        java.lang.String $r4, varReplacer333;
        byte $b3, $b4;
        char $c5;
        java.lang.Exception $r5;
        null_type varReplacer332;

        nop;

        $r0 := @parameter0: byte[];

        $i1 = 0;

        $r1 = newarray (char)[16];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 97;

        $r1[11] = 98;

        $r1[12] = 99;

        $r1[13] = 100;

        $r1[14] = 101;

        $r1[15] = 102;

     label01:
        varReplacer333 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer333);

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

        $r2 = newarray (char)[32];

     label02:
        $i2 = 0;

     label03:
        if $i1 < 16 goto label06;

        $r4 = new java.lang.String;

     label04:
        specialinvoke $r4.<java.lang.String: void <init>(char[])>($r2);

     label05:
        return $r4;

     label06:
        $b3 = $r0[$i1];

     label07:
        $i0 = $i2 + 1;

        $b4 = $b3 >>> 4;

        $b4 = $b4 & 15;

     label08:
        $c5 = $r1[$b4];

        $r2[$i2] = $c5;

     label09:
        $i2 = $i0 + 1;

        $b3 = $b3 & 15;

     label10:
        $c5 = $r1[$b3];

        $r2[$i0] = $c5;

     label11:
        $i1 = $i1 + 1;

        goto label03;

     label12:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

        varReplacer332 = null;

        return varReplacer332;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public static java.util.Map getMapByKey(java.util.Map, java.lang.String)
    {
        java.lang.String $r0, $r4, varReplacer2287, varReplacer2288;
        java.util.HashMap $r1;
        java.util.Map $r2;
        java.lang.String[] $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7;

        nop;

        $r2 := @parameter0: java.util.Map;

        $r0 := @parameter1: java.lang.String;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

     label01:
        varReplacer2288 = "\\.";

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer2288);

     label02:
        $i0 = 0;

     label03:
        $i1 = lengthof $r3;

     label04:
        if $i0 < $i1 goto label06;

     label05:
        return $r1;

     label06:
        $i1 = lengthof $r3;

     label07:
        $i1 = $i1 + -1;

        if $i0 == $i1 goto label13;

     label08:
        $r4 = $r3[$i0];

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

     label09:
        if $z0 == 0 goto label12;

     label10:
        $r4 = $r3[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r2 = (java.util.Map) $r5;

     label11:
        $i0 = $i0 + 1;

        goto label03;

     label12:
        return $r1;

     label13:
        $r4 = $r3[$i0];

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

     label14:
        if $z0 == 0 goto label17;

     label15:
        $r4 = $r3[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r2 = (java.util.Map) $r5;

     label16:
        return $r2;

     label17:
        return $r1;

     label18:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        varReplacer2287 = "get value error:";

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2287);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void e(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r4);

        goto label05;

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label06 to label07 with label18;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label18;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Exception from label15 to label16 with label18;
    }

    public static java.lang.String getStringFromAssets(java.lang.String)
    {
        java.lang.String $r0;
        java.io.ByteArrayOutputStream $r1, r6;
        com.heimavista.hvFrame.logicCore.hvApp $r2;
        android.content.res.AssetManager $r3;
        java.io.InputStream $r4;
        int $i0;
        java.lang.Throwable $r5;
        java.io.IOException r7;
        null_type varReplacer1789;

        nop;

        $r0 := @parameter0: java.lang.String;

        r6 = new java.io.ByteArrayOutputStream;

        $r1 = r6;

        specialinvoke r6.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $r2 = staticinvoke <com.heimavista.hvFrame.logicCore.hvApp: com.heimavista.hvFrame.logicCore.hvApp getInstance()>();

        $r3 = virtualinvoke $r2.<com.heimavista.hvFrame.logicCore.hvApp: android.content.res.AssetManager getAssets()>();

        $r4 = virtualinvoke $r3.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r0);

     label2:
        $i0 = virtualinvoke $r4.<java.io.InputStream: int read()>();

     label3:
        if $i0 != -1 goto label6;

     label4:
        $r0 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label5:
        return $r0;

     label6:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i0);

     label7:
        goto label2;

     label8:
        $r5 := @caughtexception;

        r7 = (java.io.IOException) $r5;

        virtualinvoke r7.<java.io.IOException: void printStackTrace()>();

        varReplacer1789 = null;

        return varReplacer1789;

        catch java.io.IOException from label1 to label3 with label8;
        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    public static java.lang.String getStringValue(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser $r0;
        java.lang.String $r1, varReplacer1550;

        nop;

        $r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        $r1 := @parameter1: java.lang.String;

        varReplacer1550 = "";

        $r1 = interfaceinvoke $r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(varReplacer1550, $r1);

        return $r1;
    }

    public static java.lang.String getStringValueByKey(java.util.Map, java.lang.String, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r2, $r4, varReplacer584, varReplacer585;
        java.lang.String[] $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label01:
        varReplacer584 = "\\.";

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer584);

     label02:
        $i0 = 0;

     label03:
        $i1 = lengthof $r3;

     label04:
        if $i0 < $i1 goto label05;

        return $r2;

     label05:
        $i1 = lengthof $r3;

     label06:
        $i1 = $i1 + -1;

        if $i0 == $i1 goto label11;

     label07:
        $r4 = $r3[$i0];

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

     label08:
        if $z0 == 0 goto label18;

     label09:
        $r4 = $r3[$i0];

        $r5 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r0 = (java.util.Map) $r5;

     label10:
        $i0 = $i0 + 1;

        goto label03;

     label11:
        $r4 = $r3[$i0];

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

     label12:
        if $z0 == 0 goto label10;

     label13:
        $r4 = $r3[$i0];

        $r5 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label14:
        if $z0 != 0 goto label10;

     label15:
        $r4 = $r3[$i0];

        $r5 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

     label16:
        return $r4;

     label17:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        varReplacer585 = "get value error:";

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer585);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void e(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r1);

     label18:
        return $r2;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    public static java.lang.String getStringValueByKey(org.json.JSONObject, java.lang.String, java.lang.String)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1, $r2, varReplacer1384;
        boolean $z0;
        java.lang.Exception $r3;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        $z0 = virtualinvoke $r0.<org.json.JSONObject: boolean has(java.lang.String)>($r1);

     label2:
        if $z0 == 0 goto label6;

     label3:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r1);

     label4:
        return $r1;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label6:
        varReplacer1384 = "";

        return varReplacer1384;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String getStringValueByKey(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: org.w3c.dom.Element;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke $r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>($r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        return $r1;

     label1:
        return $r2;
    }

    public static boolean inArray(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object;

        if $r0 == null goto label4;

        if $r1 != null goto label1;

        return 0;

     label1:
        $i0 = lengthof $r0;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r2 = $r0[$i1];

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public static transient java.lang.Object invoke(java.lang.reflect.Method, java.lang.Object, java.lang.Object[])
    {
        java.lang.reflect.Method $r0;
        java.lang.Object $r1;
        java.lang.Object[] $r2;
        java.lang.StringBuilder $r3, r8;
        java.lang.String $r4, varReplacer187;
        java.lang.Throwable $r5, $r6;
        java.lang.RuntimeException $r7;
        java.lang.IllegalAccessException r9;
        java.lang.reflect.InvocationTargetException r10;
        null_type varReplacer185, varReplacer186, varReplacer188;

        nop;

        $r0 := @parameter0: java.lang.reflect.Method;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.Object[];

        r8 = new java.lang.StringBuilder;

        $r3 = r8;

     label1:
        varReplacer187 = "method:";

        specialinvoke r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer187);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void i(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r4);

        $r1 = virtualinvoke $r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r2);

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        r9 = (java.lang.IllegalAccessException) $r5;

        virtualinvoke r9.<java.lang.IllegalAccessException: void printStackTrace()>();

        varReplacer188 = null;

        return varReplacer188;

     label4:
        $r6 := @caughtexception;

        r10 = (java.lang.reflect.InvocationTargetException) $r6;

        virtualinvoke r10.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        varReplacer185 = null;

        return varReplacer185;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.RuntimeException: void printStackTrace()>();

        varReplacer186 = null;

        return varReplacer186;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public static transient java.lang.reflect.Method maybeGetMethod(java.lang.Class, java.lang.String, java.lang.Class[])
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Class[] $r2;
        java.lang.reflect.Method $r3;
        java.lang.Throwable $r4;
        java.lang.RuntimeException $r5;
        null_type varReplacer189, varReplacer190;

        nop;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Class[];

     label1:
        $r3 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r1, $r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        varReplacer189 = null;

        return varReplacer189;

     label4:
        $r5 := @caughtexception;

        varReplacer190 = null;

        return varReplacer190;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
    }

    public static long parseMillisToSeconds(long)
    {
        long $l0, $l1;

        $l0 := @parameter0: long;

        $l1 = $l0 % 1000L;

        $l0 = $l0 - $l1;

        $l0 = $l0 / 1000L;

        return $l0;
    }

    public static long parseSecondsToMillis(long)
    {
        long $l0;

        $l0 := @parameter0: long;

        $l0 = 1000L * $l0;

        return $l0;
    }

    public static java.util.Date parseStringToDate(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Date $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: java.util.Date parseStringToDate(java.lang.String,java.lang.String)>($r0, null);

        return $r1;
    }

    public static java.util.Date parseStringToDate(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.util.Date $r1;
        java.text.SimpleDateFormat $r3, r5;
        java.lang.Throwable $r4;
        java.text.ParseException r6;

        $r0 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 != null goto label1;

        $r2 = "yyyy-MM-dd HH:mm:ss";

     label1:
        r5 = new java.text.SimpleDateFormat;

        $r3 = r5;

        specialinvoke r5.<java.text.SimpleDateFormat: void <init>(java.lang.String)>($r2);

     label2:
        $r1 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        r6 = (java.text.ParseException) $r4;

        virtualinvoke r6.<java.text.ParseException: void printStackTrace()>();

        return null;

        catch java.text.ParseException from label2 to label3 with label4;
    }

    public static int parseStringToInt(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        boolean $z0;
        java.lang.Integer $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return $i0;

     label1:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r0);

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static float phoneFloat2Tablet(android.content.Context, float)
    {
        android.content.Context $r0;
        boolean $z0;
        float $f0;
        double $d0;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $z0 = staticinvoke <com.heimavista.hvFrame.tools.environment: boolean isTablet(android.content.Context)>($r0);

        if $z0 == 0 goto label1;

        $d0 = (double) $f0;

        $d0 = $d0 * 1.3;

        $f0 = (float) $d0;

     label1:
        return $f0;
    }

    public static int phoneInt2Tablet(android.content.Context, int)
    {
        android.content.Context $r0;
        boolean $z0;
        int $i0;
        double $d0;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $z0 = staticinvoke <com.heimavista.hvFrame.tools.environment: boolean isTablet(android.content.Context)>($r0);

        if $z0 == 0 goto label1;

        $d0 = (double) $i0;

        $d0 = $d0 * 1.3;

        $d0 = $d0 + 0.5;

        $i0 = (int) $d0;

     label1:
        return $i0;
    }

    public static float px2dip(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        float $f0, $f1;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = (float) $i0;

        $f0 = $f0 / $f1;

        return $f0;
    }

    public static int px2sp(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0, $f1;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 / $f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }

    public static java.lang.String readFile(java.lang.String)
    {
        java.lang.String $r0;
        int varReplacer2080;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer2080 = 0;

        $r0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: java.lang.String readFile(java.lang.String,boolean)>($r0, varReplacer2080);

        return $r0;
    }

    public static java.lang.String readFile(java.lang.String, boolean)
    {
        java.lang.String $r0, varReplacer81;
        boolean $z0;
        java.lang.StringBuffer $r1;
        java.io.FileReader $r2;
        java.io.File $r3;
        java.io.BufferedReader $r4;
        java.lang.Exception $r5;
        java.lang.Throwable $r6, $r8, $r9, $r10;
        java.lang.StringBuilder $r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r0);

     label01:
        $r4 = new java.io.BufferedReader;

        $r2 = new java.io.FileReader;

     label02:
        specialinvoke $r2.<java.io.FileReader: void <init>(java.io.File)>($r3);

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r2);

     label03:
        $r0 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label04:
        if $r0 != null goto label08;

     label05:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label06:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label07:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label08:
        if $z0 == 0 goto label17;

     label09:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label10:
        goto label03;

     label11:
        $r5 := @caughtexception;

     label12:
        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

     label13:
        if $r4 == null goto label07;

     label14:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label15:
        goto label07;

     label16:
        $r6 := @caughtexception;

        goto label07;

     label17:
        $r7 = new java.lang.StringBuilder;

     label18:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer81 = "\n";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer81);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label19:
        goto label03;

     label20:
        $r8 := @caughtexception;

     label21:
        if $r4 == null goto label23;

     label22:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label23:
        throw $r8;

     label24:
        $r9 := @caughtexception;

        goto label23;

     label25:
        $r10 := @caughtexception;

        goto label07;

     label26:
        $r8 := @caughtexception;

        $r4 = null;

        goto label21;

     label27:
        $r5 := @caughtexception;

        $r4 = null;

        goto label12;

        catch java.lang.Exception from label02 to label03 with label27;
        catch java.lang.Throwable from label01 to label03 with label26;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.io.IOException from label06 to label07 with label25;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label12 to label13 with label20;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Exception from label18 to label19 with label11;
        catch java.lang.Throwable from label17 to label19 with label20;
        catch java.io.IOException from label22 to label23 with label24;
    }

    public static boolean saveFile(java.io.InputStream, java.lang.String)
    {
        java.io.InputStream $r0;
        java.lang.String $r1, $r5, varReplacer2122, varReplacer2123, varReplacer2125, varReplacer2127;
        java.io.File $r2, $r8;
        java.io.RandomAccessFile $r3;
        boolean $z0;
        long $l0, $l2;
        java.lang.StringBuilder $r4;
        byte[] $r6;
        java.io.BufferedInputStream $r7;
        int $i1, varReplacer2124, varReplacer2126, varReplacer2128;
        java.lang.Throwable $r9;
        java.lang.Exception $r10;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: boolean chkFileDir(java.lang.String)>($r1);

        if $z0 == 0 goto label18;

        $l0 = 0L;

        $r2 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

     label01:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        varReplacer2127 = ".det";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2127);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r5);

        $r6 = newarray (byte)[1024];

     label02:
        $r7 = new java.io.BufferedInputStream;

     label03:
        specialinvoke $r7.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r0);

     label04:
        $r3 = new java.io.RandomAccessFile;

        $r4 = new java.lang.StringBuilder;

     label05:
        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        varReplacer2122 = ".det";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2122);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2125 = "rw";

        specialinvoke $r3.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r5, varReplacer2125);

     label06:
        $i1 = virtualinvoke $r7.<java.io.BufferedInputStream: int read(byte[])>($r6);

     label07:
        if $i1 > 0 goto label12;

     label08:
        virtualinvoke $r3.<java.io.RandomAccessFile: void close()>();

     label09:
        $r8 = new java.io.File;

     label10:
        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.File: boolean renameTo(java.io.File)>($r8);

        varReplacer2123 = "end save file";

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void d(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", varReplacer2123);

     label11:
        varReplacer2124 = 1;

        return varReplacer2124;

     label12:
        entermonitor $r3;

     label13:
        virtualinvoke $r3.<java.io.RandomAccessFile: void seek(long)>($l0);

        varReplacer2128 = 0;

        virtualinvoke $r3.<java.io.RandomAccessFile: void write(byte[],int,int)>($r6, varReplacer2128, $i1);

        exitmonitor $r3;

     label14:
        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        goto label06;

     label15:
        $r9 := @caughtexception;

     label16:
        exitmonitor $r3;

        throw $r9;

     label17:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>();

     label18:
        varReplacer2126 = 0;

        return varReplacer2126;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label10 to label11 with label17;
        catch java.lang.Exception from label12 to label13 with label17;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Exception from label16 to label17 with label17;
    }

    public static boolean saveFile(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r4, varReplacer2065, varReplacer2068, varReplacer2069, varReplacer2070, varReplacer2071, varReplacer2074, varReplacer2076, varReplacer2077, varReplacer2079;
        java.io.File $r2, $r12;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.net.URL $r5;
        java.net.URLConnection $r6;
        java.net.HttpURLConnection $r7;
        long $l0, $l2;
        byte[] $r8;
        java.io.BufferedInputStream $r9;
        java.io.InputStream $r10;
        java.io.RandomAccessFile $r11;
        int $i1, varReplacer2066, varReplacer2067, varReplacer2072, varReplacer2073, varReplacer2075, varReplacer2078;
        java.lang.Throwable $r13, $r14, $r16;
        java.lang.Exception $r15, $r17;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: boolean chkFileDir(java.lang.String)>($r1);

        if $z0 == 0 goto label33;

        $r3 = new java.lang.StringBuilder;

     label01:
        varReplacer2071 = "start save file:";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2071);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void d(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r4);

     label02:
        $r5 = new java.net.URL;

     label03:
        specialinvoke $r5.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r6 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

        $r7 = (java.net.HttpURLConnection) $r6;

        varReplacer2072 = 30000;

        virtualinvoke $r7.<java.net.HttpURLConnection: void setConnectTimeout(int)>(varReplacer2072);

        varReplacer2078 = 30000;

        virtualinvoke $r7.<java.net.HttpURLConnection: void setReadTimeout(int)>(varReplacer2078);

     label04:
        $r2 = new java.io.File;

        $r3 = new java.lang.StringBuilder;

     label05:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer2065 = ".det";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2065);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r0);

     label06:
        $l0 = 0L;

     label07:
        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label08:
        if $z0 == 0 goto label10;

     label09:
        $l0 = virtualinvoke $r2.<java.io.File: long length()>();

     label10:
        $r8 = newarray (byte)[1024];

     label11:
        $r3 = new java.lang.StringBuilder;

     label12:
        varReplacer2079 = "bytes=";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2079);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        varReplacer2076 = "-";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2076);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2068 = "Range";

        virtualinvoke $r7.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer2068, $r0);

        varReplacer2066 = 1;

        virtualinvoke $r7.<java.net.HttpURLConnection: void setAllowUserInteraction(boolean)>(varReplacer2066);

     label13:
        $r9 = new java.io.BufferedInputStream;

     label14:
        $r10 = virtualinvoke $r7.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r9.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r10);

     label15:
        $r11 = new java.io.RandomAccessFile;

        $r3 = new java.lang.StringBuilder;

     label16:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer2070 = ".det";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2070);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2074 = "rw";

        specialinvoke $r11.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r0, varReplacer2074);

     label17:
        $i1 = virtualinvoke $r9.<java.io.BufferedInputStream: int read(byte[])>($r8);

     label18:
        if $i1 > 0 goto label23;

     label19:
        virtualinvoke $r11.<java.io.RandomAccessFile: void close()>();

     label20:
        $r12 = new java.io.File;

     label21:
        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.File: boolean renameTo(java.io.File)>($r12);

        virtualinvoke $r7.<java.net.HttpURLConnection: void disconnect()>();

        varReplacer2077 = "end save file";

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void d(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", varReplacer2077);

     label22:
        varReplacer2073 = 1;

        return varReplacer2073;

     label23:
        entermonitor $r11;

     label24:
        virtualinvoke $r11.<java.io.RandomAccessFile: void seek(long)>($l0);

        varReplacer2075 = 0;

        virtualinvoke $r11.<java.io.RandomAccessFile: void write(byte[],int,int)>($r8, varReplacer2075, $i1);

        exitmonitor $r11;

     label25:
        $l2 = (long) $i1;

        $l0 = $l0 + $l2;

        goto label17;

     label26:
        $r13 := @caughtexception;

     label27:
        exitmonitor $r11;

     label28:
        throw $r13;

     label29:
        $r14 := @caughtexception;

     label30:
        throw $r14;

     label31:
        $r15 := @caughtexception;

        varReplacer2069 = "save file error";

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void e(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", varReplacer2069);

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label32;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label32:
        virtualinvoke $r15.<java.lang.Exception: void printStackTrace()>();

     label33:
        varReplacer2067 = 0;

        return varReplacer2067;

     label34:
        $r16 := @caughtexception;

     label35:
        throw $r16;

     label36:
        $r17 := @caughtexception;

     label37:
        virtualinvoke $r17.<java.lang.Exception: void printStackTrace()>();

     label38:
        goto label19;

        catch java.lang.Exception from label01 to label02 with label31;
        catch java.lang.Exception from label03 to label04 with label31;
        catch java.lang.Exception from label05 to label06 with label31;
        catch java.lang.Exception from label07 to label08 with label31;
        catch java.lang.Exception from label09 to label10 with label31;
        catch java.lang.Exception from label10 to label11 with label31;
        catch java.lang.Exception from label12 to label13 with label31;
        catch java.lang.Exception from label14 to label15 with label31;
        catch java.lang.Exception from label16 to label17 with label31;
        catch java.net.SocketException from label17 to label18 with label29;
        catch java.net.SocketTimeoutException from label17 to label18 with label34;
        catch java.lang.Exception from label17 to label18 with label36;
        catch java.lang.Exception from label19 to label20 with label31;
        catch java.lang.Exception from label21 to label22 with label31;
        catch java.lang.Exception from label23 to label24 with label36;
        catch java.lang.Throwable from label24 to label25 with label26;
        catch java.net.SocketException from label28 to label29 with label29;
        catch java.net.SocketTimeoutException from label28 to label29 with label34;
        catch java.lang.Exception from label27 to label29 with label36;
        catch java.lang.Exception from label30 to label31 with label31;
        catch java.lang.Exception from label35 to label36 with label31;
        catch java.lang.Exception from label37 to label38 with label31;
    }

    public static float sp2dip(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $i0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: int sp2px(android.content.Context,float)>($r0, $f0);

        $f0 = staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: float px2dip(android.content.Context,int)>($r0, $i0);

        return $f0;
    }

    public static int sp2px(android.content.Context, float)
    {
        android.content.Context $r0;
        float $f0, $f1;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $f0 := @parameter1: float;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f1 * $f0;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }

    public static java.lang.String sqliteEscape(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return "";

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("/", "//");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'", "\'\'");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[", "/[");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("]", "/]");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%", "/%");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&", "/&");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "/_");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("(", "/(");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(")", "/)");

        return $r0;
    }

    public static java.lang.String subString(java.lang.String, int, java.lang.String)
    {
        java.lang.String $r0, $r1, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuffer $r2, r6;
        boolean $z0;
        byte[] $r3;
        java.lang.Throwable $r5;
        java.io.UnsupportedEncodingException r7;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $i1 = 0;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        r6 = new java.lang.StringBuffer;

        $r2 = r6;

        specialinvoke r6.<java.lang.StringBuffer: void <init>()>();

        $i3 = 0;

     label01:
        if $i3 >= $i2 goto label02;

        $i4 = $i0 * 2;

        if $i1 < $i4 goto label08;

     label02:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label03:
        if $z0 != 0 goto label07;

     label04:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("GBK");

     label05:
        $i0 = lengthof $r3;

        if $i1 >= $i0 goto label07;

     label06:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

     label07:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label08:
        $i4 = $i3 + 1;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $r3 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $i4 = lengthof $r3;

        if $i4 != 1 goto label10;

        $i1 = $i1 + 1;

     label09:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $i3 = $i3 + 1;

        goto label01;

     label10:
        $i1 = $i1 + 2;

        goto label09;

     label11:
        $r5 := @caughtexception;

        r7 = (java.io.UnsupportedEncodingException) $r5;

        virtualinvoke r7.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label07;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label11;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label11;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label11;
    }

    public static java.lang.String toLowerCaseFirstOne(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        char $c0;
        int $i1;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c0);

        if $z0 != 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 <= 1 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $c0 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label2:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

     label3:
        return $r0;
    }

    public static java.lang.String toUpperCaseFirstOne(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        char $c0;
        int $i1;
        java.lang.StringBuilder $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c0);

        if $z0 != 0 goto label3;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 <= 1 goto label2;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $c0 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label2:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

     label3:
        return $r0;
    }

    public static void unzipFile(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer3453;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        varReplacer3453 = "";

        staticinvoke <com.heimavista.hvFrame.tools.PublicUtil: void unzipFile(java.lang.String,java.lang.String,java.lang.String)>($r0, $r1, varReplacer3453);

        return;
    }

    public static void unzipFile(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r4, varReplacer3454, varReplacer3455;
        java.lang.StringBuilder $r3;
        net.lingala.zip4j.core.ZipFile $r5;
        java.io.File $r6;
        boolean $z0;
        char[] $r7;
        java.lang.Exception $r8;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuilder;

     label01:
        varReplacer3455 = "start unzipFile:";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3455);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void d(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r4);

     label02:
        $r5 = new net.lingala.zip4j.core.ZipFile;

        $r6 = new java.io.File;

     label03:
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r1);

        specialinvoke $r5.<net.lingala.zip4j.core.ZipFile: void <init>(java.io.File)>($r6);

        $z0 = virtualinvoke $r5.<net.lingala.zip4j.core.ZipFile: boolean isValidZipFile()>();

     label04:
        if $z0 != 0 goto label05;

        return;

     label05:
        $r6 = new java.io.File;

     label06:
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r6.<java.io.File: boolean isDirectory()>();

     label07:
        if $z0 == 0 goto label11;

     label08:
        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

     label09:
        if $z0 != 0 goto label11;

     label10:
        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

     label11:
        $z0 = virtualinvoke $r5.<net.lingala.zip4j.core.ZipFile: boolean isEncrypted()>();

     label12:
        if $z0 == 0 goto label14;

     label13:
        $r7 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r5.<net.lingala.zip4j.core.ZipFile: void setPassword(char[])>($r7);

     label14:
        virtualinvoke $r5.<net.lingala.zip4j.core.ZipFile: void extractAll(java.lang.String)>($r0);

     label15:
        $r3 = new java.lang.StringBuilder;

        varReplacer3454 = "end unzipFile:";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3454);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.heimavista.hvFrame.logger.Logger: void d(java.lang.Class,java.lang.String)>(class "Lcom/heimavista/hvFrame/tools/PublicUtil;", $r0);

        return;

     label16:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        goto label15;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Exception from label10 to label12 with label16;
        catch java.lang.Exception from label13 to label15 with label16;
    }

    public static void writeToFile(java.lang.String, java.lang.String, boolean)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        java.io.BufferedWriter $r2;
        java.io.FileWriter $r3;
        java.lang.Exception $r4;
        int varReplacer1363;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r3 = new java.io.FileWriter;

     label1:
        varReplacer1363 = 0;

        specialinvoke $r3.<java.io.FileWriter: void <init>(java.lang.String,boolean)>($r0, varReplacer1363);

     label2:
        $r2 = new java.io.BufferedWriter;

     label3:
        specialinvoke $r2.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r3);

        virtualinvoke $r2.<java.io.BufferedWriter: void write(java.lang.String)>($r1);

        virtualinvoke $r2.<java.io.BufferedWriter: void close()>();

        virtualinvoke $r3.<java.io.FileWriter: void close()>();

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
