public class com.koi.live.utils.FileManager extends java.lang.Object
{
    static javax.crypto.Cipher cipher;
    static android.content.Context context;

    static void <clinit>()
    {
        null_type varReplacer277;

        nop;

        varReplacer277 = null;

        <com.koi.live.utils.FileManager: javax.crypto.Cipher cipher> = varReplacer277;

        return;
    }

    public void <init>()
    {
        com.koi.live.utils.FileManager $r0;

        $r0 := @this: com.koi.live.utils.FileManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean exists_cache(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1, $r3;
        android.content.Context $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = <com.koi.live.utils.FileManager: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        return $z0;
    }

    public static boolean exists_resource(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        android.content.Context $r2;
        android.content.res.AssetManager $r3;
        java.io.InputStream $r4;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.koi.live.utils.FileManager: android.content.Context context>;

     label1:
        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r4 = virtualinvoke $r3.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r0);

        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        return 0;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void init(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        java.lang.String $r4, varReplacer278, varReplacer280;
        byte[] $r5;
        int varReplacer279;

        nop;

        $r0 := @parameter0: android.content.Context;

        <com.koi.live.utils.FileManager: android.content.Context context> = $r0;

     label1:
        varReplacer278 = "RC4";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer278);

     label2:
        <com.koi.live.utils.FileManager: javax.crypto.Cipher cipher> = $r3;

        $r3 = <com.koi.live.utils.FileManager: javax.crypto.Cipher cipher>;

        $r2 = new javax.crypto.spec.SecretKeySpec;

        $r0 = <com.koi.live.utils.FileManager: android.content.Context context>;

     label3:
        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        varReplacer280 = "RC4";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer280);

        varReplacer279 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer279, $r2);

     label4:
        return;

     label5:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.io.InputStream open(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        java.io.InputStream $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.koi.live.utils.FileManager: java.io.InputStream open(java.lang.String,boolean)>($r0, 0);

        return $r1;
    }

    public static java.io.InputStream open(java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.String $r0;
        boolean $z0;
        java.io.InputStream $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.koi.live.utils.FileManager: java.io.InputStream open_cache(java.lang.String)>($r0);

        return $r1;

     label1:
        $r1 = staticinvoke <com.koi.live.utils.FileManager: java.io.InputStream open_resource(java.lang.String)>($r0);

        return $r1;
    }

    public static android.content.res.AssetFileDescriptor openFd(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        android.content.Context $r1;
        android.content.res.AssetManager $r2;
        android.content.res.AssetFileDescriptor $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = <com.koi.live.utils.FileManager: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r3 = virtualinvoke $r2.<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>($r0);

        return $r3;
    }

    public static java.io.InputStream open_cache(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        java.io.File $r1, $r3;
        java.util.zip.GZIPInputStream $r2;
        android.content.Context $r4;
        javax.crypto.CipherInputStream $r5;
        java.io.FileInputStream $r6;
        javax.crypto.Cipher $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r4 = <com.koi.live.utils.FileManager: android.content.Context context>;

        $r3 = virtualinvoke $r4.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r0);

        $r5 = new javax.crypto.CipherInputStream;

        $r2 = new java.util.zip.GZIPInputStream;

        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r2.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r6);

        $r7 = <com.koi.live.utils.FileManager: javax.crypto.Cipher cipher>;

        specialinvoke $r5.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r2, $r7);

        return $r5;
    }

    public static java.io.InputStream open_resource(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        javax.crypto.CipherInputStream $r1;
        java.util.zip.GZIPInputStream $r2;
        android.content.Context $r3;
        android.content.res.AssetManager $r4;
        java.io.InputStream $r5;
        javax.crypto.Cipher $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = new javax.crypto.CipherInputStream;

        $r2 = new java.util.zip.GZIPInputStream;

        $r3 = <com.koi.live.utils.FileManager: android.content.Context context>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.AssetManager getAssets()>();

        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r0);

        specialinvoke $r2.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r5);

        $r6 = <com.koi.live.utils.FileManager: javax.crypto.Cipher cipher>;

        specialinvoke $r1.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r2, $r6);

        return $r1;
    }

    public static java.io.InputStream open_resource_without_cipher(int) throws java.io.IOException
    {
        int $i0;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        java.io.InputStream $r2;

        $i0 := @parameter0: int;

        $r0 = <com.koi.live.utils.FileManager: android.content.Context context>;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

        return $r2;
    }
}
