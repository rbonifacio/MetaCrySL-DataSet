public class com.tricerion.lockscreen.utils.PatternUtils extends java.lang.Object
{
    public static java.lang.String salt;

    static void <clinit>()
    {
        java.lang.String varReplacer1657;

        nop;

        varReplacer1657 = "kyfUTF6u6fkJd5i8*^f65DYcj$#fcuHs";

        <com.tricerion.lockscreen.utils.PatternUtils: java.lang.String salt> = varReplacer1657;

        return;
    }

    public void <init>()
    {
        com.tricerion.lockscreen.utils.PatternUtils $r0;

        $r0 := @this: com.tricerion.lockscreen.utils.PatternUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String hashPattern(java.util.ArrayList)
    {
        java.util.ArrayList $r0;
        java.lang.String $r1, $r4;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5;

        nop;

        $r0 := @parameter0: java.util.ArrayList;

        $r1 = <com.tricerion.lockscreen.utils.PatternUtils: java.lang.String salt>;

        $r2 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = <com.tricerion.lockscreen.utils.PatternUtils: java.lang.String salt>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        $r4 = staticinvoke <com.tricerion.lockscreen.utils.PatternUtils: java.lang.String md5(java.lang.String)>($r1);

        return $r4;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer1658, varReplacer1659;
        java.lang.Throwable $r1;
        java.lang.StringBuffer $r2, r5;
        java.security.MessageDigest $r3;
        byte[] $r4;
        int $i0, $i1;
        byte $b2;
        short $s3;
        java.security.NoSuchAlgorithmException r6;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer1658 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1658);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        r5 = new java.lang.StringBuffer;

        $r2 = r5;

     label03:
        specialinvoke r5.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label08;

        $b2 = $r4[$i0];

        $s3 = $b2 & 255;

     label06:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        return $r0;

     label10:
        $r1 := @caughtexception;

        r6 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer1659 = "";

        return varReplacer1659;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label10;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label10;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label10;
    }
}
