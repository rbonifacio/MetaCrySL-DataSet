public class com.facebook.notifications.internal.asset.cache.ContentCache extends java.lang.Object implements com.facebook.notifications.internal.asset.AssetManager$AssetCache
{
    private static final java.lang.String LOG_TAG;
    private final java.util.Map cacheOperations;
    private java.util.Set cachedKeys;
    private final android.content.Context context;
    private final com.facebook.notifications.internal.asset.cache.DiskCache diskCache;
    private final java.lang.Thread downloadThread;
    private final com.facebook.notifications.internal.asset.cache.ContentDownloader downloader;
    private final java.lang.Object synchronizationMutex;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        nop;

        $r1 = class "Lcom/facebook/notifications/internal/asset/cache/ContentCache;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getCanonicalName()>();

        <com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.String LOG_TAG> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.facebook.notifications.internal.asset.cache.ContentCache $r0;
        android.content.Context $r1;
        com.facebook.notifications.internal.asset.cache.ContentDownloader $r2;
        com.facebook.notifications.internal.asset.cache.DiskCache $r3;
        java.lang.Thread $r4;
        java.lang.Object $r5;
        java.util.HashMap $r6;

        nop;

        $r0 := @this: com.facebook.notifications.internal.asset.cache.ContentCache;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: android.content.Context context> = $r1;

        $r2 = new com.facebook.notifications.internal.asset.cache.ContentDownloader;

        specialinvoke $r2.<com.facebook.notifications.internal.asset.cache.ContentDownloader: void <init>()>();

        $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: com.facebook.notifications.internal.asset.cache.ContentDownloader downloader> = $r2;

        $r3 = new com.facebook.notifications.internal.asset.cache.DiskCache;

        specialinvoke $r3.<com.facebook.notifications.internal.asset.cache.DiskCache: void <init>(android.content.Context)>($r1);

        $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: com.facebook.notifications.internal.asset.cache.DiskCache diskCache> = $r3;

        $r4 = new java.lang.Thread;

        $r2 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: com.facebook.notifications.internal.asset.cache.ContentDownloader downloader>;

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);

        $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Thread downloadThread> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Object synchronizationMutex> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.util.Map cacheOperations> = $r6;

        $r4 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Thread downloadThread>;

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        return;
    }

    static java.lang.Object access$000(com.facebook.notifications.internal.asset.cache.ContentCache)
    {
        com.facebook.notifications.internal.asset.cache.ContentCache $r0;
        java.lang.Object r1;

        $r0 := @parameter0: com.facebook.notifications.internal.asset.cache.ContentCache;

        r1 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Object synchronizationMutex>;

        return r1;
    }

    private static java.lang.String getCacheKey(java.net.URL)
    {
        java.net.URL $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, $r8, varReplacer1001, varReplacer1002, varReplacer1003;
        java.security.MessageDigest $r3;
        java.nio.charset.Charset $r4;
        byte[] $r5;
        java.lang.Object[] $r6;
        byte $b0;
        java.lang.Byte $r7;
        int $i1;

        nop;

        $r0 := @parameter0: java.net.URL;

        $r2 = virtualinvoke $r0.<java.net.URL: java.lang.String toString()>();

     label01:
        varReplacer1001 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1001);

        varReplacer1003 = "UTF-8";

        $r4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(varReplacer1003);

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5);

     label02:
        $r6 = newarray (java.lang.Object)[16];

        $b0 = $r5[0];

     label03:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label04:
        $r6[0] = $r7;

        $b0 = $r5[1];

     label05:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label06:
        $r6[1] = $r7;

        $b0 = $r5[2];

     label07:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label08:
        $r6[2] = $r7;

        $b0 = $r5[3];

     label09:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label10:
        $r6[3] = $r7;

        $b0 = $r5[4];

     label11:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label12:
        $r6[4] = $r7;

        $b0 = $r5[5];

     label13:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label14:
        $r6[5] = $r7;

        $b0 = $r5[6];

     label15:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label16:
        $r6[6] = $r7;

        $b0 = $r5[7];

     label17:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label18:
        $r6[7] = $r7;

        $b0 = $r5[8];

     label19:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label20:
        $r6[8] = $r7;

        $b0 = $r5[9];

     label21:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label22:
        $r6[9] = $r7;

        $b0 = $r5[10];

     label23:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label24:
        $r6[10] = $r7;

        $b0 = $r5[11];

     label25:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label26:
        $r6[11] = $r7;

        $b0 = $r5[12];

     label27:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label28:
        $r6[12] = $r7;

        $b0 = $r5[13];

     label29:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label30:
        $r6[13] = $r7;

        $b0 = $r5[14];

     label31:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label32:
        $r6[14] = $r7;

        $b0 = $r5[15];

     label33:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label34:
        $r6[15] = $r7;

     label35:
        varReplacer1002 = "%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x";

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer1002, $r6);

     label36:
        return $r8;

     label37:
        $r1 := @caughtexception;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        return $r2;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label37;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label37;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label37;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label37;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label37;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label37;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label37;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label37;
        catch java.security.NoSuchAlgorithmException from label17 to label18 with label37;
        catch java.security.NoSuchAlgorithmException from label19 to label20 with label37;
        catch java.security.NoSuchAlgorithmException from label21 to label22 with label37;
        catch java.security.NoSuchAlgorithmException from label23 to label24 with label37;
        catch java.security.NoSuchAlgorithmException from label25 to label26 with label37;
        catch java.security.NoSuchAlgorithmException from label27 to label28 with label37;
        catch java.security.NoSuchAlgorithmException from label29 to label30 with label37;
        catch java.security.NoSuchAlgorithmException from label31 to label32 with label37;
        catch java.security.NoSuchAlgorithmException from label33 to label34 with label37;
        catch java.security.NoSuchAlgorithmException from label35 to label36 with label37;
    }

    private boolean hasCachedData(java.lang.String)
    {
        com.facebook.notifications.internal.asset.cache.ContentCache $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        java.util.Set $r3;
        com.facebook.notifications.internal.asset.cache.DiskCache $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        nop;

        $r0 := @this: com.facebook.notifications.internal.asset.cache.ContentCache;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Object synchronizationMutex>;

        entermonitor $r2;

     label1:
        $r3 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.util.Set cachedKeys>;

        if $r3 != null goto label2;

        $r4 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: com.facebook.notifications.internal.asset.cache.DiskCache diskCache>;

        $r3 = virtualinvoke $r4.<com.facebook.notifications.internal.asset.cache.DiskCache: java.util.Set getCacheKeys()>();

        $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.util.Set cachedKeys> = $r3;

     label2:
        $r3 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.util.Set cachedKeys>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>($r1);

        exitmonitor $r2;

     label3:
        return $z0;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r2;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void cache(java.util.Set, com.facebook.notifications.internal.asset.cache.ContentCache$CompletionCallback)
    {
        com.facebook.notifications.internal.asset.cache.ContentCache $r0;
        java.util.Set $r1, $r6;
        com.facebook.notifications.internal.asset.cache.ContentCache$CompletionCallback $r2;
        java.util.HashSet $r3;
        com.facebook.notifications.internal.asset.cache.CacheOperation $r4;
        java.lang.Object $r5, $r8;
        int $i0;
        java.util.Iterator $r7;
        boolean $z0;
        java.net.URL $r9;
        java.lang.String $r10;
        java.lang.Throwable $r11;
        java.util.Map $r12;
        com.facebook.notifications.internal.asset.cache.ContentDownloader $r13;
        com.facebook.notifications.internal.asset.cache.DiskCache $r14;
        java.io.File $r15;
        com.facebook.notifications.internal.asset.cache.ContentCache$1 $r16;

        nop;

        $r0 := @this: com.facebook.notifications.internal.asset.cache.ContentCache;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: com.facebook.notifications.internal.asset.cache.ContentCache$CompletionCallback;

        $r4 = new com.facebook.notifications.internal.asset.cache.CacheOperation;

        specialinvoke $r4.<com.facebook.notifications.internal.asset.cache.CacheOperation: void <init>(java.util.Set,com.facebook.notifications.internal.asset.cache.ContentCache$CompletionCallback)>($r1, $r2);

        $r5 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Object synchronizationMutex>;

        entermonitor $r5;

        $i0 = 0;

     label1:
        $r6 = virtualinvoke $r4.<com.facebook.notifications.internal.asset.cache.CacheOperation: java.util.Set getUrlsToCache()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.net.URL) $r8;

        $r10 = staticinvoke <com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.String getCacheKey(java.net.URL)>($r9);

        $z0 = specialinvoke $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: boolean hasCachedData(java.lang.String)>($r10);

        if $z0 == 0 goto label5;

        interfaceinvoke $r7.<java.util.Iterator: void remove()>();

        goto label2;

     label3:
        $r11 := @caughtexception;

        exitmonitor $r5;

     label4:
        throw $r11;

     label5:
        $r12 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.util.Map cacheOperations>;

        $z0 = interfaceinvoke $r12.<java.util.Map: boolean containsKey(java.lang.Object)>($r10);

        if $z0 == 0 goto label6;

        $r12 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.util.Map cacheOperations>;

        $r8 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        $r6 = (java.util.Set) $r8;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r4);

        goto label2;

     label6:
        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $r12 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.util.Map cacheOperations>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r3);

        $r13 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: com.facebook.notifications.internal.asset.cache.ContentDownloader downloader>;

        $r14 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: com.facebook.notifications.internal.asset.cache.DiskCache diskCache>;

        $r10 = staticinvoke <com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.String getCacheKey(java.net.URL)>($r9);

        $r15 = virtualinvoke $r14.<com.facebook.notifications.internal.asset.cache.DiskCache: java.io.File fetch(java.lang.String)>($r10);

        $r16 = new com.facebook.notifications.internal.asset.cache.ContentCache$1;

        specialinvoke $r16.<com.facebook.notifications.internal.asset.cache.ContentCache$1: void <init>(com.facebook.notifications.internal.asset.cache.ContentCache,java.util.Set)>($r0, $r3);

        virtualinvoke $r13.<com.facebook.notifications.internal.asset.cache.ContentDownloader: void downloadAsync(java.net.URL,java.io.File,com.facebook.notifications.internal.asset.cache.ContentDownloader$DownloadCallback)>($r9, $r15, $r16);

        $i0 = $i0 + 1;

        goto label2;

     label7:
        if $i0 != 0 goto label8;

        interfaceinvoke $r2.<com.facebook.notifications.internal.asset.cache.ContentCache$CompletionCallback: void onCacheCompleted(java.util.Set)>($r1);

     label8:
        exitmonitor $r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label9 with label3;
    }

    public void clear(java.util.Set)
    {
        com.facebook.notifications.internal.asset.cache.ContentCache $r0;
        java.util.Set $r1;
        java.lang.Object $r2, $r4;
        java.util.Iterator $r3;
        boolean $z0;
        java.net.URL $r5;
        java.lang.String $r6;
        com.facebook.notifications.internal.asset.cache.DiskCache $r7;
        java.lang.Throwable $r8;

        nop;

        $r0 := @this: com.facebook.notifications.internal.asset.cache.ContentCache;

        $r1 := @parameter0: java.util.Set;

        $r2 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Object synchronizationMutex>;

        entermonitor $r2;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.net.URL) $r4;

        $r6 = staticinvoke <com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.String getCacheKey(java.net.URL)>($r5);

        $r7 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: com.facebook.notifications.internal.asset.cache.DiskCache diskCache>;

        virtualinvoke $r7.<com.facebook.notifications.internal.asset.cache.DiskCache: void remove(java.lang.String)>($r6);

        $r1 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.util.Set cachedKeys>;

        if $r1 == null goto label2;

        $r1 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.util.Set cachedKeys>;

        interfaceinvoke $r1.<java.util.Set: boolean remove(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label4:
        throw $r8;

     label5:
        exitmonitor $r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }

    public java.io.File getCachedFile(java.net.URL)
    {
        com.facebook.notifications.internal.asset.cache.ContentCache $r0;
        java.net.URL $r1;
        com.facebook.notifications.internal.asset.cache.DiskCache $r2;
        java.lang.String $r3;
        java.io.File $r4;
        boolean $z0;

        $r0 := @this: com.facebook.notifications.internal.asset.cache.ContentCache;

        $r1 := @parameter0: java.net.URL;

        $r2 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: com.facebook.notifications.internal.asset.cache.DiskCache diskCache>;

        $r3 = staticinvoke <com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.String getCacheKey(java.net.URL)>($r1);

        $r4 = virtualinvoke $r2.<com.facebook.notifications.internal.asset.cache.DiskCache: java.io.File fetch(java.lang.String)>($r3);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        return $r4;
    }

    public android.content.Context getContext()
    {
        com.facebook.notifications.internal.asset.cache.ContentCache $r0;
        android.content.Context r1;

        $r0 := @this: com.facebook.notifications.internal.asset.cache.ContentCache;

        r1 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: android.content.Context context>;

        return r1;
    }

    public void stop()
    {
        com.facebook.notifications.internal.asset.cache.ContentCache $r0;
        java.lang.Throwable $r1;
        java.lang.Thread $r2;

        nop;

        $r0 := @this: com.facebook.notifications.internal.asset.cache.ContentCache;

        $r2 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Thread downloadThread>;

        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();

        $r2 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Thread downloadThread>;

     label1:
        virtualinvoke $r2.<java.lang.Thread: void join()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = $r0.<com.facebook.notifications.internal.asset.cache.ContentCache: java.lang.Thread downloadThread>;

        virtualinvoke $r2.<java.lang.Thread: void interrupt()>();

        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
