Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.idscanbiometrics.idsmart.core.Configuration: java.lang.String b(android.content.Context)>
		SHA-256: a15279ea3c274ef77953938541e6a6705adc831d83c1088fc9dba02fef76627a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer840)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: 7930f47cc90d48450c11034c3bce8274b830f69cd5c1b02d93951d0a34c90d70
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7626)
		Method: <com.idscanbiometrics.idsmart.core.Configuration: java.lang.String b(android.content.Context)>
		SHA-256: e1a0241d256f597dca6bf745845252995e90c76cac544912c27fab446fe5e367
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.rockabyte.clanmo.maps.MAPSSession: java.lang.String a(java.lang.String)>
		SHA-256: 3e71d08ee9d8bb742780a6a4f97c3de79caa71c79fc772f95800e9198dbc2f9c
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: 6c3fed5bfb7cca823a11fe2f60db5e66d0a989c46007a79786ec33205bcd7f86
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveSigner: byte[] doSign(byte[])>
		SHA-256: 1c50c9c03a1e85f4143def81dc9f4534f9a40d413b2e1d723db91a5aa4923b41
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: java.security.Signature getSignatureInstance()>
		SHA-256: 5245505faa1caa67a21a8f77bf7afcdbd914eeb8cbdcc06c6e02f21254765066
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9398)
		Method: <com.rockabyte.clanmo.maps.MAPSSession: java.lang.String a(java.lang.String)>
		SHA-256: 1505b9e7fcf01dc425221861d72b365e93adcff90a5beb5bda973faec4d7a85a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: c50c5856adc6dd335933f6aa43e5218c9a622697e96f8e5365fe531fd6adb22f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: void <clinit>()>
		SHA-256: bd77c10f408e393bf6a88a9f259346bb12383ce9f5ef6237ca9f00f578063397
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: byte[] sign(byte[])>
		SHA-256: a0b59aec0970e094fd8b63d7a8b4da0534cea1330525d24478f2683e2897ba7a
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: d3f0f91386745ca7dc23fd0bb208ccc0d9e20d84a7747d2125114150f6519e0a
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke r17.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r2)
		Method: <io.jsonwebtoken.impl.DefaultJwtBuilder: java.lang.String compact()>
		SHA-256: 915f312d48a2ea64472aac6ff8acc977a91a49f05b9d24e29ec3e8cfc326eb5
		Secure: false
	Object:
		Variable: varReplacer839
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r1, varReplacer838, varReplacer839)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: 7205cad422814f74177c292b1638e5f673ea595137c01664624a8cb0e4b187ed
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dstags.sdk.airline.helpers.MessageSigner: byte[] a(java.security.cert.Certificate)>
		SHA-256: dfe32be2b3f014aeb7536ab40bc2a7c233d07b23b99cd9eba618b6c01598770e
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer842)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: d930cc99db17ce8ba97aa42fe9b31a5e42d43df373a101a4f69a335170021150
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r3)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: javax.crypto.Mac doGetMacInstance()>
		SHA-256: a1d1f1a96b2229cb8032249f276d2e6d47471c6890809e6db563b576e5d67a47
		Secure: true
	Object:
		Variable: varReplacer841
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer841)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: 5b48f3ae4507d8029f089fe77f37ccfcd971075cd8ab85aa3f124d8ab3b3c3a2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6130)
		Method: <com.dstags.sdk.airline.helpers.MessageSigner: byte[] a(java.security.cert.Certificate)>
		SHA-256: fb01b944f860da8ece364d1e9fb89f2886d1d3249e380a563a42199d409ce78d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r1, varReplacer838, varReplacer839)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: 5f7cb1cb45e5708c2dddcf33f5027ad6df00ca1d7b2f605d0beef945d8fc1251
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer841)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: d812faa92ae64cd53817082dc3f2d3d850dbf6838f707b60a7dfaae685d27dda
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <io.jsonwebtoken.impl.crypto.RsaSigner: byte[] doSign(byte[])>
		SHA-256: 98f07673a5eb06121abff36bf0c3b12a7dbc2d4e321f0ed06df14792992e8580
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r17.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r2)
		Method: <io.jsonwebtoken.impl.DefaultJwtBuilder: java.lang.String compact()>
		SHA-256: a8a413b36219b7702670cc7245294ea80709d3a024a3bad2c8bddc2d7a838466
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r0 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.rockabyte.android.encryption.AESEncryption: byte[] a(int,byte[],byte[],char[],byte[])>
		SHA-256: c5bac88afbfa8c3d3e0b4c0168904c22463707f4922c5878e83e86b8944ae7ef
		Secure: false

Findings in Java Class: com.rockabyte.android.encryption.AESEncryption

	 in Method: byte[] a(int,byte[],byte[],char[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer841)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #5f7cb1cb45e5708c2dddcf33f5027ad6df00ca1d7b2f605d0beef945d8fc1251)
			Third parameter (with value 256)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r1, varReplacer838, varReplacer839)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r7, $r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #5f7cb1cb45e5708c2dddcf33f5027ad6df00ca1d7b2f605d0beef945d8fc1251)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #7930f47cc90d48450c11034c3bce8274b830f69cd5c1b02d93951d0a34c90d70)
			First parameter (with value "PBEWithSHA256And128BITAES-CBC-BC") should be any of {Insecure}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer840)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r2, $r1, varReplacer838, varReplacer839)


Findings in Java Class: com.dstags.sdk.airline.helpers.MessageSigner

	 in Method: byte[] a(java.security.cert.Certificate)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb01b944f860da8ece364d1e9fb89f2886d1d3249e380a563a42199d409ce78d)
			First parameter (with value "SHA-1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6130)


Findings in Java Class: com.idscanbiometrics.idsmart.core.Configuration

	 in Method: java.lang.String b(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e1a0241d256f597dca6bf745845252995e90c76cac544912c27fab446fe5e367)
			First parameter (with value "SHA1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7626)


Findings in Java Class: com.rockabyte.clanmo.maps.MAPSSession

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1505b9e7fcf01dc425221861d72b365e93adcff90a5beb5bda973faec4d7a85a)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9398)


Findings in Java Class: io.jsonwebtoken.impl.crypto.RsaSigner

	 in Method: byte[] doSign(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)


Findings in Java Class: io.jsonwebtoken.impl.crypto.EllipticCurveSigner

	 in Method: byte[] doSign(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)


Findings in Java Class: io.jsonwebtoken.impl.DefaultJwtBuilder

	 in Method: java.lang.String compact()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r17.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	RequiredPredicateError: 8
	IncompleteOperationError: 1
=====================================================================