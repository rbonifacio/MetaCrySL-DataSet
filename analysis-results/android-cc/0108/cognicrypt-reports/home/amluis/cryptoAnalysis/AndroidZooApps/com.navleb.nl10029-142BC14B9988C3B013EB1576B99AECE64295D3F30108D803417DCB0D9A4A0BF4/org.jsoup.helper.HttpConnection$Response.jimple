public class org.jsoup.helper.HttpConnection$Response extends org.jsoup.helper.HttpConnection$Base implements org.jsoup.Connection$Response
{
    static final javax.net.ssl.HostnameVerifier DO_NOT_VERIFY;
    private static final int MAX_REDIRECTS;
    private static javax.net.ssl.SSLSocketFactory sslSocketFactory;
    private java.nio.ByteBuffer byteData;
    private java.lang.String charset;
    private java.lang.String contentType;
    private boolean executed;
    private int numRedirects;
    private int statusCode;
    private java.lang.String statusMessage;

    static void <clinit>()
    {
        org.jsoup.helper.HttpConnection$Response$1 $r0;

        nop;

        $r0 = new org.jsoup.helper.HttpConnection$Response$1;

        specialinvoke $r0.<org.jsoup.helper.HttpConnection$Response$1: void <init>()>();

        <org.jsoup.helper.HttpConnection$Response: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY> = $r0;

        return;
    }

    void <init>()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        null_type varReplacer245;
        int varReplacer246, varReplacer247;

        nop;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        varReplacer245 = null;

        specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(varReplacer245);

        varReplacer246 = 0;

        $r0.<org.jsoup.helper.HttpConnection$Response: boolean executed> = varReplacer246;

        varReplacer247 = 0;

        $r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = varReplacer247;

        return;
    }

    private void <init>(org.jsoup.helper.HttpConnection$Response) throws java.io.IOException
    {
        org.jsoup.helper.HttpConnection$Response $r0, $r1;
        int $i0, varReplacer298, varReplacer300;
        java.io.IOException $r2;
        java.lang.Object[] $r3;
        java.net.URL $r4;
        java.lang.String $r5, varReplacer301;
        null_type varReplacer299;

        nop;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: org.jsoup.helper.HttpConnection$Response;

        varReplacer299 = null;

        specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(varReplacer299);

        varReplacer300 = 0;

        $r0.<org.jsoup.helper.HttpConnection$Response: boolean executed> = varReplacer300;

        varReplacer298 = 0;

        $r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = varReplacer298;

        if $r1 == null goto label1;

        $i0 = $r1.<org.jsoup.helper.HttpConnection$Response: int numRedirects>;

        $i0 = $i0 + 1;

        $r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = $i0;

        $i0 = $r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects>;

        if $i0 < 20 goto label1;

        $r2 = new java.io.IOException;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke $r1.<org.jsoup.helper.HttpConnection$Response: java.net.URL url()>();

        $r3[0] = $r4;

        varReplacer301 = "Too many redirects occurred trying to load URL %s";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer301, $r3);

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        return;
    }

    private static java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request) throws java.io.IOException
    {
        org.jsoup.Connection$Request $r0;
        java.net.URL $r1;
        java.net.URLConnection $r2;
        java.net.HttpURLConnection $r3;
        org.jsoup.Connection$Method $r4, $r9;
        java.lang.String $r5, $r15, varReplacer284;
        int $i0, varReplacer282, varReplacer283;
        boolean $z0;
        javax.net.ssl.HttpsURLConnection $r6;
        javax.net.ssl.SSLSocketFactory $r7;
        javax.net.ssl.HostnameVerifier $r8;
        java.util.Map $r10;
        java.util.Set $r11;
        java.util.Iterator $r12;
        java.lang.Object $r13;
        java.util.Map$Entry $r14;

        nop;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        $r1 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = (java.net.HttpURLConnection) $r2;

        $r4 = interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r5 = virtualinvoke $r4.<org.jsoup.Connection$Method: java.lang.String name()>();

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r5);

        varReplacer283 = 0;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(varReplacer283);

        $i0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: int timeout()>();

        virtualinvoke $r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        $i0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: int timeout()>();

        virtualinvoke $r3.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        $z0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: boolean isSecure()>();

        if $z0 == 0 goto label1;

        staticinvoke <org.jsoup.helper.HttpConnection$Response: void initUnSecureSSL()>();

        $r6 = (javax.net.ssl.HttpsURLConnection) $r3;

        $r7 = <org.jsoup.helper.HttpConnection$Response: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        virtualinvoke $r6.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r7);

        $r6 = (javax.net.ssl.HttpsURLConnection) $r3;

        $r8 = <org.jsoup.helper.HttpConnection$Response: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

        virtualinvoke $r6.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r8);

     label1:
        $r4 = interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r9 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;

        if $r4 != $r9 goto label2;

        varReplacer282 = 1;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer282);

     label2:
        $r10 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Map cookies()>();

        $i0 = interfaceinvoke $r10.<java.util.Map: int size()>();

        if $i0 <= 0 goto label3;

        $r5 = staticinvoke <org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>($r0);

        varReplacer284 = "Cookie";

        virtualinvoke $r3.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>(varReplacer284, $r5);

     label3:
        $r10 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Map headers()>();

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (java.util.Map$Entry) $r13;

        $r13 = interfaceinvoke $r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r13;

        $r13 = interfaceinvoke $r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.lang.String) $r13;

        virtualinvoke $r3.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r5, $r15);

        goto label4;

     label5:
        return $r3;
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request) throws java.io.IOException
    {
        org.jsoup.Connection$Request $r0;
        org.jsoup.helper.HttpConnection$Response $r1;
        null_type varReplacer260;

        nop;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        varReplacer260 = null;

        $r1 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>($r0, varReplacer260);

        return $r1;
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request, org.jsoup.helper.HttpConnection$Response) throws java.io.IOException
    {
        org.jsoup.Connection$Request $r0;
        org.jsoup.helper.HttpConnection$Response $r1, $r9;
        java.net.URL $r2, $r10;
        java.lang.String $r3, $r16, varReplacer261, varReplacer262, varReplacer263, varReplacer264, varReplacer265, varReplacer267, varReplacer268, varReplacer269, varReplacer270;
        boolean $z0;
        org.jsoup.Connection$Method $r4, $r5;
        java.util.Collection $r6;
        int $i0, varReplacer266;
        java.net.HttpURLConnection $r7;
        java.io.OutputStream $r8;
        java.util.Map $r11;
        java.util.Set $r12;
        java.util.Iterator $r13;
        java.lang.Object $r14;
        java.util.Map$Entry $r15;
        java.io.IOException $r17;
        java.lang.StringBuilder $r18;
        java.io.BufferedInputStream $r19, $r20;
        java.util.zip.GZIPInputStream $r21;
        java.io.InputStream $r22;
        java.nio.ByteBuffer $r23;
        java.lang.Throwable $r24;

        nop;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        $r1 := @parameter1: org.jsoup.helper.HttpConnection$Response;

        varReplacer264 = "Request must not be null";

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>($r0, varReplacer264);

        $r2 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>();

        varReplacer270 = "http";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer270);

        if $z0 != 0 goto label01;

        varReplacer262 = "https";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer262);

        if $z0 == 0 goto label08;

     label01:
        $z0 = 1;

     label02:
        varReplacer263 = "Only http & https protocols supported";

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, varReplacer263);

        $r4 = interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r5 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;

        if $r4 != $r5 goto label03;

        $r6 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        $i0 = interfaceinvoke $r6.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label03;

        staticinvoke <org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>($r0);

     label03:
        $r7 = staticinvoke <org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>($r0);

        virtualinvoke $r7.<java.net.HttpURLConnection: void connect()>();

        $r4 = interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r5 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;

        if $r4 != $r5 goto label04;

        $z0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: boolean isRawData()>();

        if $z0 == 0 goto label09;

        $r3 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.lang.String rawData()>();

        $r8 = virtualinvoke $r7.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        staticinvoke <org.jsoup.helper.HttpConnection$Response: void writeRawPost(java.lang.String,java.io.OutputStream)>($r3, $r8);

     label04:
        $i0 = virtualinvoke $r7.<java.net.HttpURLConnection: int getResponseCode()>();

        $z0 = 0;

        if $i0 == 200 goto label06;

        if $i0 == 302 goto label05;

        if $i0 == 301 goto label05;

        if $i0 != 303 goto label10;

     label05:
        $z0 = 1;

     label06:
        $r9 = new org.jsoup.helper.HttpConnection$Response;

        specialinvoke $r9.<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>($r1);

        specialinvoke $r9.<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>($r7, $r1);

        if $z0 == 0 goto label12;

        $z0 = interfaceinvoke $r0.<org.jsoup.Connection$Request: boolean followRedirects()>();

        if $z0 == 0 goto label12;

        $r2 = new java.net.URL;

        $r10 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        varReplacer265 = "Location";

        $r3 = virtualinvoke $r9.<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>(varReplacer265);

        specialinvoke $r2.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r10, $r3);

        interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r2);

        $r11 = $r9.<org.jsoup.helper.HttpConnection$Response: java.util.Map cookies>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r15 = (java.util.Map$Entry) $r14;

        $r14 = interfaceinvoke $r15.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r14;

        $r14 = interfaceinvoke $r15.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (java.lang.String) $r14;

        interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r3, $r16);

        goto label07;

     label08:
        $z0 = 0;

        goto label02;

     label09:
        $r6 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        $r8 = virtualinvoke $r7.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        staticinvoke <org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>($r6, $r8);

        goto label04;

     label10:
        $r17 = new java.io.IOException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer269 = " error loading URL ";

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer269);

        $r2 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String toString()>();

        $r18 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r17;

     label11:
        $r1 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>($r0, $r9);

        return $r1;

     label12:
        $r19 = null;

     label13:
        varReplacer261 = "Content-Encoding";

        $z0 = virtualinvoke $r9.<org.jsoup.helper.HttpConnection$Response: boolean hasHeader(java.lang.String)>(varReplacer261);

     label14:
        if $z0 == 0 goto label22;

     label15:
        varReplacer267 = "Content-Encoding";

        $r3 = virtualinvoke $r9.<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>(varReplacer267);

        varReplacer268 = "gzip";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer268);

     label16:
        if $z0 == 0 goto label22;

     label17:
        $r20 = new java.io.BufferedInputStream;

        $r21 = new java.util.zip.GZIPInputStream;

        $r22 = virtualinvoke $r7.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r21.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r22);

        specialinvoke $r20.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r21);

     label18:
        $r19 = $r20;

     label19:
        $r23 = staticinvoke <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>($r19);

        $r9.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData> = $r23;

        $r3 = $r9.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        $r3 = staticinvoke <org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>($r3);

        $r9.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset> = $r3;

     label20:
        if $r19 == null goto label21;

        virtualinvoke $r19.<java.io.InputStream: void close()>();

     label21:
        varReplacer266 = 1;

        $r9.<org.jsoup.helper.HttpConnection$Response: boolean executed> = varReplacer266;

        return $r9;

     label22:
        $r20 = new java.io.BufferedInputStream;

        $r22 = virtualinvoke $r7.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r20.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r22);

     label23:
        $r19 = $r20;

        goto label19;

     label24:
        $r24 := @caughtexception;

        if $r19 == null goto label25;

        virtualinvoke $r19.<java.io.InputStream: void close()>();

     label25:
        throw $r24;

        catch java.lang.Throwable from label13 to label14 with label24;
        catch java.lang.Throwable from label15 to label16 with label24;
        catch java.lang.Throwable from label17 to label18 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    private static java.lang.String getRequestCookieString(org.jsoup.Connection$Request)
    {
        org.jsoup.Connection$Request $r0;
        java.lang.StringBuilder $r1, $r8;
        boolean $z0, $z1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        java.lang.Object $r5;
        java.util.Map$Entry $r6;
        java.lang.String $r7, varReplacer292;
        int varReplacer293;

        nop;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $z0 = 1;

        $r2 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Map cookies()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.util.Map$Entry) $r5;

        if $z0 != 0 goto label3;

        varReplacer292 = "; ";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer292);

     label2:
        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r5;

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer293 = 61;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer293);

        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r5;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static void initUnSecureSSL() throws java.io.IOException
    {
        java.lang.Object[] $r0;
        javax.net.ssl.SSLSocketFactory $r1;
        javax.net.ssl.SSLContext $r2;
        java.security.SecureRandom $r3, r7;
        java.lang.Throwable $r4, $r5;
        org.jsoup.helper.HttpConnection$Response$2 r6;
        java.io.IOException r8;
        javax.net.ssl.TrustManager[] r9;
        java.lang.String varReplacer294, varReplacer295, varReplacer297;
        null_type varReplacer296;

        nop;

        $r1 = <org.jsoup.helper.HttpConnection$Response: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r1 != null goto label9;

        $r0 = newarray (javax.net.ssl.TrustManager)[1];

        r6 = new org.jsoup.helper.HttpConnection$Response$2;

        specialinvoke r6.<org.jsoup.helper.HttpConnection$Response$2: void <init>()>();

        $r0[0] = r6;

     label1:
        varReplacer295 = "SSL";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer295);

     label2:
        r7 = new java.security.SecureRandom;

        $r3 = r7;

     label3:
        specialinvoke r7.<java.security.SecureRandom: void <init>()>();

     label4:
        r9 = (javax.net.ssl.TrustManager[]) $r0;

     label5:
        varReplacer296 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer296, r9, $r3);

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label6:
        <org.jsoup.helper.HttpConnection$Response: javax.net.ssl.SSLSocketFactory sslSocketFactory> = $r1;

        return;

     label7:
        $r4 := @caughtexception;

        r8 = new java.io.IOException;

        varReplacer297 = "Can\'t create unsecure trust manager";

        specialinvoke r8.<java.io.IOException: void <init>(java.lang.String)>(varReplacer297);

        throw r8;

     label8:
        $r5 := @caughtexception;

        r8 = new java.io.IOException;

        varReplacer294 = "Can\'t create unsecure trust manager";

        specialinvoke r8.<java.io.IOException: void <init>(java.lang.String)>(varReplacer294);

        throw r8;

     label9:
        return;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label7;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label7;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label7;
        catch java.security.KeyManagementException from label1 to label2 with label8;
        catch java.security.KeyManagementException from label3 to label4 with label8;
        catch java.security.KeyManagementException from label5 to label6 with label8;
    }

    private static void serialiseRequestUrl(org.jsoup.Connection$Request) throws java.io.IOException
    {
        org.jsoup.Connection$Request $r0;
        java.lang.StringBuilder $r1, $r4;
        java.net.URL $r2;
        boolean $z0, $z1;
        java.lang.String $r3, varReplacer285, varReplacer286, varReplacer288, varReplacer290;
        java.util.Collection $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        org.jsoup.Connection$KeyVal $r8;
        int varReplacer287, varReplacer289;

        nop;

        $r0 := @parameter0: org.jsoup.Connection$Request;

        $r2 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $z0 = 1;

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer285 = "://";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer285);

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getAuthority()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getPath()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer290 = "?";

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer290);

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>();

        if $r3 == null goto label1;

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getQuery()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $z0 = 0;

     label1:
        $r5 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        $r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.jsoup.Connection$KeyVal) $r7;

        if $z0 != 0 goto label4;

        varReplacer289 = 38;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer289);

     label3:
        $r3 = interfaceinvoke $r8.<org.jsoup.Connection$KeyVal: java.lang.String key()>();

        varReplacer288 = "UTF-8";

        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, varReplacer288);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer287 = 61;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer287);

        $r3 = interfaceinvoke $r8.<org.jsoup.Connection$KeyVal: java.lang.String value()>();

        varReplacer286 = "UTF-8";

        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, varReplacer286);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label2;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r2 = new java.net.URL;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r3);

        interfaceinvoke $r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r2);

        $r5 = interfaceinvoke $r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        interfaceinvoke $r5.<java.util.Collection: void clear()>();

        return;
    }

    private void setupFromConnection(java.net.HttpURLConnection, org.jsoup.Connection$Response) throws java.io.IOException
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.net.HttpURLConnection $r1;
        org.jsoup.Connection$Response $r2;
        org.jsoup.parser.TokenQueue $r3;
        java.lang.String $r4, $r14, varReplacer302, varReplacer303, varReplacer304;
        org.jsoup.Connection$Method $r5;
        java.net.URL $r6;
        int $i0, varReplacer305;
        java.util.Map $r7;
        java.util.Set $r8;
        java.util.Iterator $r9, $r13;
        boolean $z0;
        java.lang.Object $r10;
        java.util.Map$Entry $r11;
        java.util.List $r12;

        nop;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.net.HttpURLConnection;

        $r2 := @parameter1: org.jsoup.Connection$Response;

        $r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        $r5 = staticinvoke <org.jsoup.Connection$Method: org.jsoup.Connection$Method valueOf(java.lang.String)>($r4);

        $r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Method method> = $r5;

        $r6 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        $r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url> = $r6;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>();

        $r0.<org.jsoup.helper.HttpConnection$Response: int statusCode> = $i0;

        $r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String statusMessage> = $r4;

        $r4 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType> = $r4;

        $r7 = virtualinvoke $r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.util.Map$Entry) $r10;

        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.String) $r10;

        if $r4 == null goto label1;

        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.util.List) $r10;

        varReplacer303 = "Set-Cookie";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer303);

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke $r12.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        $r10 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r10;

        $r3 = new org.jsoup.parser.TokenQueue;

        specialinvoke $r3.<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>($r4);

        varReplacer302 = "=";

        $r4 = virtualinvoke $r3.<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>(varReplacer302);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        varReplacer304 = ";";

        $r14 = virtualinvoke $r3.<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>(varReplacer304);

        $r14 = virtualinvoke $r14.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r4, $r14);

        goto label2;

     label3:
        $z0 = interfaceinvoke $r12.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        varReplacer305 = 0;

        $r10 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(varReplacer305);

        $r14 = (java.lang.String) $r10;

        virtualinvoke $r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>($r4, $r14);

        goto label1;

     label4:
        if $r2 == null goto label6;

        $r7 = interfaceinvoke $r2.<org.jsoup.Connection$Response: java.util.Map cookies()>();

        $r8 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r11 = (java.util.Map$Entry) $r10;

        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.String) $r10;

        $z0 = virtualinvoke $r0.<org.jsoup.helper.HttpConnection$Response: boolean hasCookie(java.lang.String)>($r4);

        if $z0 != 0 goto label5;

        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r4 = (java.lang.String) $r10;

        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r14 = (java.lang.String) $r10;

        virtualinvoke $r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r4, $r14);

        goto label5;

     label6:
        return;
    }

    private static void writePost(java.util.Collection, java.io.OutputStream) throws java.io.IOException
    {
        java.util.Collection $r0;
        java.io.OutputStream $r1;
        java.io.OutputStreamWriter $r2;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        org.jsoup.Connection$KeyVal $r5;
        java.lang.String $r6, varReplacer276, varReplacer277, varReplacer280;
        int varReplacer278, varReplacer279;

        nop;

        $r0 := @parameter0: java.util.Collection;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = new java.io.OutputStreamWriter;

        varReplacer276 = "UTF-8";

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, varReplacer276);

        $z0 = 1;

        $r3 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.jsoup.Connection$KeyVal) $r4;

        if $z0 != 0 goto label3;

        varReplacer279 = 38;

        virtualinvoke $r2.<java.io.OutputStreamWriter: java.io.Writer append(char)>(varReplacer279);

     label2:
        $r6 = interfaceinvoke $r5.<org.jsoup.Connection$KeyVal: java.lang.String key()>();

        varReplacer280 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, varReplacer280);

        virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r6);

        varReplacer278 = 61;

        virtualinvoke $r2.<java.io.OutputStreamWriter: void write(int)>(varReplacer278);

        $r6 = interfaceinvoke $r5.<org.jsoup.Connection$KeyVal: java.lang.String value()>();

        varReplacer277 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, varReplacer277);

        virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r6);

        goto label1;

     label3:
        $z0 = 0;

        goto label2;

     label4:
        virtualinvoke $r2.<java.io.OutputStreamWriter: void close()>();

        return;
    }

    private static void writeRawPost(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.lang.String $r0, varReplacer281;
        java.io.OutputStream $r1;
        java.io.OutputStreamWriter $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.OutputStream;

        $r2 = new java.io.OutputStreamWriter;

        varReplacer281 = "UTF-8";

        specialinvoke $r2.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, varReplacer281);

        virtualinvoke $r2.<java.io.OutputStreamWriter: void write(java.lang.String)>($r0);

        virtualinvoke $r2.<java.io.OutputStreamWriter: void close()>();

        return;
    }

    public java.lang.String body()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        boolean $z0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        java.nio.ByteBuffer $r3;
        java.nio.CharBuffer $r4;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $z0 = $r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before getting response body");

        $r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        if $r1 != null goto label2;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r3 = $r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r4 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r3);

        $r1 = virtualinvoke $r4.<java.nio.CharBuffer: java.lang.String toString()>();

     label1:
        $r3 = $r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return $r1;

     label2:
        $r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r1);

        $r3 = $r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r4 = virtualinvoke $r2.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r3);

        $r1 = virtualinvoke $r4.<java.nio.CharBuffer: java.lang.String toString()>();

        goto label1;
    }

    public byte[] bodyAsBytes()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        byte[] $r1;
        boolean $z0;
        java.nio.ByteBuffer $r2;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $z0 = $r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before getting response body");

        $r2 = $r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r1 = virtualinvoke $r2.<java.nio.ByteBuffer: byte[] array()>();

        return $r1;
    }

    public java.lang.String charset()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.lang.String r1;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        return r1;
    }

    public java.lang.String contentType()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.lang.String r1;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        return r1;
    }

    public volatile java.lang.String cookie(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.lang.String $r1;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.lang.String;

        $r1 = specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String cookie(java.lang.String)>($r1);

        return $r1;
    }

    public volatile java.util.Map cookies()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.util.Map $r1;

        nop;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies()>();

        return $r1;
    }

    public volatile boolean hasCookie(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.lang.String $r1;
        boolean $z0;

        nop;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: boolean hasCookie(java.lang.String)>($r1);

        return $z0;
    }

    public volatile boolean hasHeader(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.lang.String $r1, varReplacer306;
        boolean $z0;

        nop;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.lang.String;

        varReplacer306 = "Content-Encoding";

        $z0 = specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: boolean hasHeader(java.lang.String)>(varReplacer306);

        return $z0;
    }

    public volatile java.lang.String header(java.lang.String)
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 := @parameter0: java.lang.String;

        $r1 = specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String header(java.lang.String)>($r1);

        return $r1;
    }

    public volatile java.util.Map headers()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.util.Map $r1;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers()>();

        return $r1;
    }

    public volatile org.jsoup.Connection$Method method()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        org.jsoup.Connection$Method $r1;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Method method()>();

        return $r1;
    }

    public org.jsoup.nodes.Document parse() throws java.io.IOException
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        boolean $z0;
        java.lang.String $r1, $r6, varReplacer341, varReplacer342, varReplacer343, varReplacer344, varReplacer345;
        java.io.IOException $r2;
        java.lang.Object[] $r3;
        java.net.URL $r4;
        java.nio.ByteBuffer $r5;
        org.jsoup.nodes.Document $r7;
        org.jsoup.nodes.Document$OutputSettings $r8;
        java.nio.charset.Charset $r9;

        nop;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $z0 = $r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;

        varReplacer342 = "Request must be executed (with .execute(), .get(), or .post() before parsing response";

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, varReplacer342);

        $r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        if $r1 == null goto label1;

        $r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        varReplacer343 = "text/";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer343);

        if $z0 != 0 goto label2;

        $r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        varReplacer341 = "application/xml";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer341);

        if $z0 != 0 goto label2;

        $r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        varReplacer344 = "application/xhtml+xml";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer344);

        if $z0 != 0 goto label2;

     label1:
        $r2 = new java.io.IOException;

        $r3 = newarray (java.lang.Object)[2];

        $r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        $r3[0] = $r1;

        $r4 = $r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url>;

        $r1 = virtualinvoke $r4.<java.net.URL: java.lang.String toString()>();

        $r3[1] = $r1;

        varReplacer345 = "Unhandled content type \"%s\" on URL %s. Must be text/*, application/xml, or application/xhtml+xml";

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer345, $r3);

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r1);

        throw $r2;

     label2:
        $r5 = $r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        $r4 = $r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url>;

        $r6 = virtualinvoke $r4.<java.net.URL: java.lang.String toExternalForm()>();

        $r7 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String)>($r5, $r1, $r6);

        $r5 = $r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r8 = virtualinvoke $r7.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();

        $r9 = virtualinvoke $r8.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset()>();

        $r1 = virtualinvoke $r9.<java.nio.charset.Charset: java.lang.String name()>();

        $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset> = $r1;

        return $r7;
    }

    public int statusCode()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        int i0;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        i0 = $r0.<org.jsoup.helper.HttpConnection$Response: int statusCode>;

        return i0;
    }

    public java.lang.String statusMessage()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.lang.String r1;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 = $r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String statusMessage>;

        return r1;
    }

    public volatile java.net.URL url()
    {
        org.jsoup.helper.HttpConnection$Response $r0;
        java.net.URL $r1;

        nop;

        $r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke $r0.<org.jsoup.helper.HttpConnection$Base: java.net.URL url()>();

        return $r1;
    }
}
