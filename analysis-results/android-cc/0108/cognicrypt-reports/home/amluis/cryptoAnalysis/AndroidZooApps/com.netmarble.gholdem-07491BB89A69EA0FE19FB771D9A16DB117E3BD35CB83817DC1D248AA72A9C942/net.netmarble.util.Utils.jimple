public class net.netmarble.util.Utils extends java.lang.Object
{
    static final java.lang.String TAG;

    public void <init>()
    {
        net.netmarble.util.Utils $r0;

        $r0 := @this: net.netmarble.util.Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void access$0(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <net.netmarble.util.Utils: void setCookie(android.content.Context,java.lang.String)>($r0, $r1);

        return;
    }

    private static java.lang.String capitalize(java.lang.String)
    {
        java.lang.String $r0, $r2, varReplacer2040;
        int $i0, varReplacer2039, varReplacer2041;
        char $c1;
        boolean $z0;
        java.lang.StringBuilder $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        varReplacer2040 = "";

        return varReplacer2040;

     label2:
        varReplacer2039 = 0;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(varReplacer2039);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c1);

        if $z0 != 0 goto label3;

        $r1 = new java.lang.StringBuilder;

        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        varReplacer2041 = 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(varReplacer2041);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return $r0;
    }

    public static boolean checkPermission(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        int $i0, varReplacer887, varReplacer888, varReplacer889;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        varReplacer887 = 0;

        return varReplacer887;

     label1:
        if $r1 == null goto label2;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>($r1);

        if $i0 != 0 goto label2;

        varReplacer888 = 1;

        return varReplacer888;

     label2:
        varReplacer889 = 0;

        return varReplacer889;
    }

    public static boolean checkSDK(net.netmarble.Channel)
    {
        net.netmarble.Channel $r0;
        java.lang.ClassNotFoundException $r1;
        java.lang.String $r2;
        int varReplacer4146, varReplacer4147;

        nop;

        $r0 := @parameter0: net.netmarble.Channel;

     label1:
        $r2 = virtualinvoke $r0.<net.netmarble.Channel: java.lang.String getPackageName()>();

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r2);

     label2:
        varReplacer4146 = 1;

        return varReplacer4146;

     label3:
        $r1 := @caughtexception;

        varReplacer4147 = 0;

        return varReplacer4147;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void clearEveryNetmarbleCookies(android.app.Activity)
    {
        android.app.Activity $r0;
        net.netmarble.util.Utils$1 $r1;

        $r0 := @parameter0: android.app.Activity;

        if $r0 != null goto label1;

        return;

     label1:
        $r1 = new net.netmarble.util.Utils$1;

        specialinvoke $r1.<net.netmarble.util.Utils$1: void <init>(android.app.Activity)>($r0);

        virtualinvoke $r0.<android.app.Activity: void runOnUiThread(java.lang.Runnable)>($r1);

        return;
    }

    public static int dpToPixel(float, android.content.Context)
    {
        float $f0, $f1;
        android.content.Context $r0;
        int $i0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;

        $f0 := @parameter0: float;

        $r0 := @parameter1: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 / 160.0F;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        return $i0;
    }

    private static java.lang.Object fromJson(java.lang.Object) throws org.json.JSONException
    {
        java.lang.Object $r0, $r1;
        boolean $z0;
        org.json.JSONObject $r2;
        java.util.Map $r3;
        org.json.JSONArray $r4;
        java.util.List $r5;
        null_type varReplacer8844;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <org.json.JSONObject: java.lang.Object NULL>;

        if $r0 != $r1 goto label1;

        varReplacer8844 = null;

        return varReplacer8844;

     label1:
        $z0 = $r0 instanceof org.json.JSONObject;

        if $z0 == 0 goto label2;

        $r2 = (org.json.JSONObject) $r0;

        $r3 = staticinvoke <net.netmarble.util.Utils: java.util.Map toMap(org.json.JSONObject)>($r2);

        return $r3;

     label2:
        $z0 = $r0 instanceof org.json.JSONArray;

        if $z0 == 0 goto label3;

        $r4 = (org.json.JSONArray) $r0;

        $r5 = staticinvoke <net.netmarble.util.Utils: java.util.List toList(org.json.JSONArray)>($r4);

        return $r5;

     label3:
        return $r0;
    }

    public static java.util.Map getAcceptLanguage()
    {
        java.util.HashMap $r0;
        java.lang.StringBuffer $r1;
        java.util.Locale $r2;
        java.lang.String $r3;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.util.Locale: java.lang.String getLanguage()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r3 = virtualinvoke $r2.<java.util.Locale: java.lang.String getCountry()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept-Language", $r3);

        return $r0;
    }

    public static java.lang.String getAdvertisingId(android.content.Context)
    {
        android.content.Context $r0;
        net.netmarble.Channel $r1;
        boolean $z0;
        net.netmarble.impl.GooglePlusImpl $r2;
        java.lang.String $r3;
        null_type varReplacer4145;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <net.netmarble.Channel: net.netmarble.Channel GooglePlus>;

        $z0 = staticinvoke <net.netmarble.util.Utils: boolean checkSDK(net.netmarble.Channel)>($r1);

        if $z0 != 0 goto label1;

        varReplacer4145 = null;

        return varReplacer4145;

     label1:
        $r2 = staticinvoke <net.netmarble.impl.GooglePlusImpl: net.netmarble.impl.GooglePlusImpl getInstance()>();

        $r3 = virtualinvoke $r2.<net.netmarble.impl.GooglePlusImpl: java.lang.String getAdvertisingId(android.content.Context)>($r0);

        return $r3;
    }

    public static java.lang.String getAndroidID(android.content.Context)
    {
        android.content.Context $r0;
        android.content.ContentResolver $r1;
        java.lang.String $r2, varReplacer2077, varReplacer2078, varReplacer2079;
        null_type varReplacer2076;

        nop;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        varReplacer2078 = "Utils";

        varReplacer2079 = "getAndroidID. context is null";

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>(varReplacer2078, varReplacer2079);

        varReplacer2076 = null;

        return varReplacer2076;

     label1:
        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer2077 = "android_id";

        $r2 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r1, varReplacer2077);

        return $r2;
    }

    public static int getAnimId(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        android.content.res.Resources $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r1, "anim", $r3);

        return $i0;
    }

    public static java.lang.String getAppVersion(android.content.Context)
    {
        android.content.Context $r0, $r2;
        java.lang.Throwable $r1;
        android.content.pm.PackageManager $r3;
        java.lang.String $r4, varReplacer2271, varReplacer2272;
        android.content.pm.PackageInfo $r5;
        android.content.pm.PackageManager$NameNotFoundException r6;
        int varReplacer2273;

        nop;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        varReplacer2271 = "";

        return varReplacer2271;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer2273 = 0;

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, varReplacer2273);

     label2:
        $r4 = $r5.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r4;

     label3:
        $r1 := @caughtexception;

        r6 = (android.content.pm.PackageManager$NameNotFoundException) $r1;

        virtualinvoke r6.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        varReplacer2272 = "";

        return varReplacer2272;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String getApplicationName(android.content.Context)
    {
        android.content.Context $r0, $r1;
        int $i0;
        android.content.pm.ApplicationInfo $r2;
        java.lang.String $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int labelRes>;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>($i0);

        return $r3;
    }

    public static java.lang.String getCellularKind(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.telephony.TelephonyManager $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        $i0 = virtualinvoke $r2.<android.telephony.TelephonyManager: int getNetworkType()>();

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label4;
            case 7: goto label3;
            case 8: goto label4;
            case 9: goto label4;
            case 10: goto label4;
            case 11: goto label3;
            case 12: goto label4;
            case 13: goto label5;
            case 14: goto label4;
            case 15: goto label4;
            default: goto label2;
        };

     label2:
        return "unknown";

     label3:
        return "2G";

     label4:
        return "3G";

     label5:
        return "4G";
    }

    public static java.lang.String getClipData(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.Object $r1;
        android.text.ClipboardManager $r2;
        boolean $z0;
        java.lang.CharSequence $r3;
        java.lang.String $r4;
        android.content.ClipboardManager $r5;
        android.content.ClipData $r6;
        android.content.ClipData$Item $r7;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r2 = (android.text.ClipboardManager) $r1;

        $z0 = virtualinvoke $r2.<android.text.ClipboardManager: boolean hasText()>();

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke $r2.<android.text.ClipboardManager: java.lang.CharSequence getText()>();

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        return $r4;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        $r5 = (android.content.ClipboardManager) $r1;

        $z0 = virtualinvoke $r5.<android.content.ClipboardManager: boolean hasPrimaryClip()>();

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r5.<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>();

        $i0 = virtualinvoke $r6.<android.content.ClipData: int getItemCount()>();

        if $i0 <= 0 goto label2;

        $r7 = virtualinvoke $r6.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(0);

        $r3 = virtualinvoke $r7.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        if $r3 == null goto label2;

        $r7 = virtualinvoke $r6.<android.content.ClipData: android.content.ClipData$Item getItemAt(int)>(0);

        $r3 = virtualinvoke $r7.<android.content.ClipData$Item: java.lang.CharSequence getText()>();

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        return $r4;

     label2:
        return null;
    }

    public static long getCurrentTimeMillis()
    {
        java.lang.Throwable $r0;
        long $l0;

        entermonitor class "Lnet/netmarble/util/Utils;";

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label2:
        exitmonitor class "Lnet/netmarble/util/Utils;";

        return $l0;

     label3:
        $r0 := @caughtexception;

        exitmonitor class "Lnet/netmarble/util/Utils;";

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.lang.String getDeviceModelName()
    {
        java.lang.String $r0, $r1, varReplacer2038;
        boolean $z0;
        java.lang.StringBuilder $r2;

        nop;

        $r0 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r1 = <android.os.Build: java.lang.String MODEL>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <net.netmarble.util.Utils: java.lang.String capitalize(java.lang.String)>($r1);

        return $r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        $r0 = staticinvoke <net.netmarble.util.Utils: java.lang.String capitalize(java.lang.String)>($r0);

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer2038 = " ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2038);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static int getDrawableId(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3, varReplacer3410, varReplacer3411;
        android.content.res.Resources $r2;
        int $i0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer3410 = "push_icon";

        varReplacer3411 = "drawable";

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>(varReplacer3410, varReplacer3411, $r3);

        return $i0;
    }

    public static java.lang.String getFacebookKeyHash(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.Signature $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, r11;
        android.content.pm.PackageInfo $r4;
        android.content.pm.Signature[] $r5;
        int $i0;
        java.security.MessageDigest $r6;
        byte[] $r7;
        java.lang.Throwable $r8, $r9;
        java.lang.Exception $r10;
        android.content.pm.PackageManager$NameNotFoundException r12;
        java.security.NoSuchAlgorithmException r13;

        $r0 := @parameter0: android.content.Context;

     label01:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 64);

     label02:
        $r5 = $r4.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $i0 = lengthof $r5;

     label03:
        if $i0 == 0 goto label12;

     label04:
        $r1 = $r5[0];

     label05:
        $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA");

        $r7 = virtualinvoke $r1.<android.content.pm.Signature: byte[] toByteArray()>();

        virtualinvoke $r6.<java.security.MessageDigest: void update(byte[])>($r7);

     label06:
        r11 = new java.lang.String;

     label07:
        $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        $r7 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r7, 0);

        specialinvoke r11.<java.lang.String: void <init>(byte[])>($r7);

     label08:
        return r11;

     label09:
        $r8 := @caughtexception;

        r12 = (android.content.pm.PackageManager$NameNotFoundException) $r8;

        virtualinvoke r12.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return null;

     label10:
        $r9 := @caughtexception;

        r13 = (java.security.NoSuchAlgorithmException) $r9;

        virtualinvoke r13.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return null;

     label11:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>();

     label12:
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label05 to label06 with label09;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label09;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label10;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label10;
        catch java.lang.Exception from label01 to label03 with label11;
        catch java.lang.Exception from label04 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
    }

    public static java.lang.String getFixedDeviceKey(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, varReplacer5830, varReplacer5831, varReplacer5832, varReplacer5834, varReplacer5835, varReplacer5838, varReplacer5839;
        boolean $z0;
        java.lang.StringBuilder $r3;
        null_type varReplacer5833, varReplacer5836, varReplacer5837;

        nop;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        varReplacer5834 = "Utils";

        varReplacer5835 = "context is null";

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>(varReplacer5834, varReplacer5835);

        varReplacer5833 = null;

        return varReplacer5833;

     label1:
        $r1 = staticinvoke <net.netmarble.util.Utils: java.lang.String getAndroidID(android.content.Context)>($r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label2;

        varReplacer5838 = "Utils";

        varReplacer5839 = "androidID is null or empty";

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>(varReplacer5838, varReplacer5839);

        varReplacer5836 = null;

        return varReplacer5836;

     label2:
        $r2 = staticinvoke <net.netmarble.Configuration: java.lang.String getGameCode()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label3;

        varReplacer5830 = "Utils";

        varReplacer5831 = "gameCode is null or empty";

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>(varReplacer5830, varReplacer5831);

        varReplacer5837 = null;

        return varReplacer5837;

     label3:
        $r3 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        varReplacer5832 = "_fixedDeviceKey_";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5832);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <net.netmarble.util.Utils: java.lang.String getMD5Digest(java.lang.String)>($r2);

        return $r2;
    }

    public static java.lang.String getFixedPlayerID(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>("Utils", "context is null");

        return null;

     label1:
        $r1 = staticinvoke <net.netmarble.util.Utils: java.lang.String getAndroidID(android.content.Context)>($r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label2;

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>("Utils", "androidID is null or empty");

        return null;

     label2:
        $r2 = staticinvoke <net.netmarble.Configuration: java.lang.String getGameCode()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label3;

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>("Utils", "gameCode is null or empty");

        return null;

     label3:
        $r3 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_fixedPlayerID_");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <net.netmarble.util.Utils: java.lang.String getMD5Digest(java.lang.String)>($r2);

        return $r2;
    }

    public static int getIconResourceID(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.ApplicationInfo $r1;
        int i0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        i0 = $r1.<android.content.pm.ApplicationInfo: int icon>;

        return i0;
    }

    public static int getLayoutId(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        android.content.res.Resources $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r1, "layout", $r3);

        return $i0;
    }

    private static java.lang.String getMD5Digest(java.lang.String)
    {
        java.lang.String $r0, varReplacer5843, varReplacer5844, varReplacer5848, varReplacer5849;
        java.lang.StringBuilder $r1, r7;
        boolean $z0;
        java.security.MessageDigest $r2;
        byte[] $r3;
        int $i0, $i1, varReplacer5846, varReplacer5847;
        java.util.Locale $r4;
        byte $b2;
        short $s3;
        java.lang.Throwable $r5, $r6;
        java.security.NoSuchAlgorithmException r8;
        java.io.UnsupportedEncodingException r9;
        null_type varReplacer5845, varReplacer5850, varReplacer5851;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label01;

        varReplacer5843 = "Utils";

        varReplacer5844 = "input is null or empty";

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>(varReplacer5843, varReplacer5844);

        varReplacer5845 = null;

        return varReplacer5845;

     label01:
        varReplacer5848 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5848);

        varReplacer5849 = "UTF-8";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5849);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

     label02:
        r7 = new java.lang.StringBuilder;

        $r1 = r7;

     label03:
        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r3;

        if $i0 < $i1 goto label10;

     label06:
        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

     label08:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r4);

     label09:
        return $r0;

     label10:
        $b2 = $r3[$i0];

        $s3 = $b2 & 255;

     label11:
        varReplacer5847 = 16;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($s3, varReplacer5847);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label12:
        if 1 != $i1 goto label14;

     label13:
        varReplacer5846 = 48;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer5846);

     label14:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label15:
        $i0 = $i0 + 1;

        goto label05;

     label16:
        $r5 := @caughtexception;

        r8 = (java.security.NoSuchAlgorithmException) $r5;

        virtualinvoke r8.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer5851 = null;

        return varReplacer5851;

     label17:
        $r6 := @caughtexception;

        r9 = (java.io.UnsupportedEncodingException) $r6;

        virtualinvoke r9.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        varReplacer5850 = null;

        return varReplacer5850;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label16;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label16;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label16;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label16;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label16;
        catch java.security.NoSuchAlgorithmException from label13 to label15 with label16;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label17;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label17;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label17;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label17;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label17;
        catch java.io.UnsupportedEncodingException from label13 to label15 with label17;
    }

    public static java.util.Map getMap(org.json.JSONObject, java.lang.String) throws org.json.JSONException
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        java.util.Map $r2;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r0 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject getJSONObject(java.lang.String)>($r1);

        $r2 = staticinvoke <net.netmarble.util.Utils: java.util.Map toMap(org.json.JSONObject)>($r0);

        return $r2;
    }

    public static boolean getMetaDataBoolean(android.content.Context, java.lang.String)
    {
        android.content.Context $r0, $r3;
        java.lang.String $r1, $r5, varReplacer3211, varReplacer3212, varReplacer3214, varReplacer3215, varReplacer3217;
        java.lang.Throwable $r2;
        android.content.pm.PackageManager $r4;
        android.content.pm.ApplicationInfo $r6;
        android.os.Bundle $r7;
        boolean $z0;
        java.lang.StringBuilder $r8, r9;
        android.content.pm.PackageManager$NameNotFoundException r10;
        int varReplacer3210, varReplacer3213, varReplacer3216;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        varReplacer3214 = "Utils";

        varReplacer3215 = "getMetaDataBoolean. context is null";

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>(varReplacer3214, varReplacer3215);

        varReplacer3210 = 0;

        return varReplacer3210;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer3216 = 128;

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r5, varReplacer3216);

     label2:
        $r7 = $r6.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label3:
        varReplacer3211 = "net.netmarble.push.custom.notify";

        $z0 = virtualinvoke $r7.<android.os.Bundle: boolean getBoolean(java.lang.String)>(varReplacer3211);

     label4:
        r9 = new java.lang.StringBuilder;

        $r8 = r9;

     label5:
        varReplacer3212 = "getMetaDataBoolean. value : ";

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3212);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3217 = "Utils";

        staticinvoke <net.netmarble.Log: void v(java.lang.String,java.lang.String)>(varReplacer3217, $r1);

     label6:
        return $z0;

     label7:
        $r2 := @caughtexception;

        r10 = (android.content.pm.PackageManager$NameNotFoundException) $r2;

        virtualinvoke r10.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        varReplacer3213 = 0;

        return varReplacer3213;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label7;
    }

    public static int getMetaDataInteger(android.content.Context, java.lang.String)
    {
        android.content.Context $r0, $r3;
        java.lang.String $r1, $r5;
        java.lang.Throwable $r2;
        android.content.pm.PackageManager $r4;
        android.content.pm.ApplicationInfo $r6;
        android.os.Bundle $r7;
        int $i0;
        java.lang.StringBuilder $r8, r9;
        android.content.pm.PackageManager$NameNotFoundException r10;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>("Utils", "getMetaDataInteger. context is null");

        return 0;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r5, 128);

     label2:
        $r7 = $r6.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label3:
        $i0 = virtualinvoke $r7.<android.os.Bundle: int getInt(java.lang.String)>($r1);

     label4:
        r9 = new java.lang.StringBuilder;

        $r8 = r9;

     label5:
        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("getMetaDataInteger. value : ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.netmarble.Log: void v(java.lang.String,java.lang.String)>("Utils", $r1);

     label6:
        return $i0;

     label7:
        $r2 := @caughtexception;

        r10 = (android.content.pm.PackageManager$NameNotFoundException) $r2;

        virtualinvoke r10.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label7;
    }

    public static java.lang.String getMetaDataString(android.content.Context, java.lang.String)
    {
        android.content.Context $r0, $r3;
        java.lang.String $r1, $r5, varReplacer3218, varReplacer3222, varReplacer3223, varReplacer3224, varReplacer3225;
        java.lang.Throwable $r2;
        android.content.pm.PackageManager $r4;
        android.content.pm.ApplicationInfo $r6;
        android.os.Bundle $r7;
        java.lang.StringBuilder $r8, r9;
        android.content.pm.PackageManager$NameNotFoundException r10;
        null_type varReplacer3219, varReplacer3221;
        int varReplacer3220;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        varReplacer3223 = "Utils";

        varReplacer3224 = "getMetaDataString. context is null";

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>(varReplacer3223, varReplacer3224);

        varReplacer3221 = null;

        return varReplacer3221;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer3220 = 128;

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r5, varReplacer3220);

     label2:
        $r7 = $r6.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label3:
        $r5 = virtualinvoke $r7.<android.os.Bundle: java.lang.String getString(java.lang.String)>($r1);

     label4:
        r9 = new java.lang.StringBuilder;

        $r8 = r9;

     label5:
        varReplacer3222 = "getMetaDataString. ";

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3222);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer3218 = " : ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3218);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3225 = "Utils";

        staticinvoke <net.netmarble.Log: void v(java.lang.String,java.lang.String)>(varReplacer3225, $r1);

     label6:
        return $r5;

     label7:
        $r2 := @caughtexception;

        r10 = (android.content.pm.PackageManager$NameNotFoundException) $r2;

        virtualinvoke r10.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        varReplacer3219 = null;

        return varReplacer3219;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label7;
    }

    public static java.lang.String getMobileNumber(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.telephony.TelephonyManager $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        return $r3;
    }

    public static java.lang.String getNetwork(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        android.net.NetworkInfo$State $r4, $r5;
        int varReplacer2021, varReplacer2027;
        java.lang.String varReplacer2022, varReplacer2023, varReplacer2024, varReplacer2025, varReplacer2026, varReplacer2028, varReplacer2029, varReplacer2030, varReplacer2031, varReplacer2032;

        nop;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        varReplacer2029 = "Utils";

        varReplacer2030 = "context is null";

        staticinvoke <net.netmarble.Log: void w(java.lang.String,java.lang.String)>(varReplacer2029, varReplacer2030);

        varReplacer2028 = "NONE";

        return varReplacer2028;

     label1:
        varReplacer2024 = "connectivity";

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer2024);

        $r2 = (android.net.ConnectivityManager) $r1;

        if $r2 != null goto label2;

        varReplacer2025 = "Utils";

        varReplacer2026 = "connectivityManager is null";

        staticinvoke <net.netmarble.Log: void w(java.lang.String,java.lang.String)>(varReplacer2025, varReplacer2026);

        varReplacer2032 = "NONE";

        return varReplacer2032;

     label2:
        varReplacer2021 = 0;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(varReplacer2021);

        if $r3 == null goto label4;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        if $r4 == null goto label4;

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r4 == $r5 goto label3;

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTING>;

        if $r4 != $r5 goto label4;

     label3:
        varReplacer2022 = "WWAN";

        return varReplacer2022;

     label4:
        varReplacer2027 = 1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(varReplacer2027);

        if $r3 == null goto label6;

        $r4 = virtualinvoke $r3.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        if $r4 == null goto label6;

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r4 == $r5 goto label5;

        $r5 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTING>;

        if $r4 != $r5 goto label6;

     label5:
        varReplacer2031 = "WIFI";

        return varReplacer2031;

     label6:
        varReplacer2023 = "NONE";

        return varReplacer2023;
    }

    public static java.lang.String getNetworkOperater(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.telephony.TelephonyManager $r2;
        java.lang.String $r3, varReplacer8891;
        null_type varReplacer8892;

        nop;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        varReplacer8892 = null;

        return varReplacer8892;

     label1:
        varReplacer8891 = "phone";

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer8891);

        $r2 = (android.telephony.TelephonyManager) $r1;

        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

        return $r3;
    }

    public static int getResourceId(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r4;
        android.content.res.Resources $r3;
        int $i0, varReplacer884, varReplacer885;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r0 != null goto label1;

        varReplacer885 = 0;

        return varReplacer885;

     label1:
        if $r1 == null goto label2;

        if $r2 == null goto label2;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r2, $r1, $r4);

        return $i0;

     label2:
        varReplacer884 = 0;

        return varReplacer884;
    }

    public static java.lang.String getScreenSize(android.content.Context)
    {
        android.content.Context $r0;
        int $i0, $i1;
        android.util.DisplayMetrics $r1;
        java.lang.StringBuffer $r2;
        java.lang.String $r3, varReplacer2017, varReplacer2018, varReplacer2019, varReplacer2020;
        java.lang.Object $r4;
        android.view.WindowManager $r5;
        android.view.Display $r6;

        nop;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        varReplacer2018 = "Utils";

        varReplacer2019 = "getScreenSize. context is null";

        staticinvoke <net.netmarble.Log: void e(java.lang.String,java.lang.String)>(varReplacer2018, varReplacer2019);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>()>();

        return $r3;

     label1:
        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        varReplacer2020 = "window";

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer2020);

        $r5 = (android.view.WindowManager) $r4;

        $r1 = new android.util.DisplayMetrics;

        specialinvoke $r1.<android.util.DisplayMetrics: void <init>()>();

        $r6 = interfaceinvoke $r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r6.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r1);

        $i1 = $r1.<android.util.DisplayMetrics: int widthPixels>;

        $i0 = $r1.<android.util.DisplayMetrics: int heightPixels>;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        varReplacer2017 = ", ";

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer2017);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static int getStringId(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        android.content.res.Resources $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r1, "string", $r3);

        return $i0;
    }

    public static int getTheme(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.PackageInfo $r4;
        android.content.pm.ApplicationInfo $r5;
        int i0;
        android.content.pm.PackageManager$NameNotFoundException r6;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 128);

     label2:
        $r5 = $r4.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        i0 = $r5.<android.content.pm.ApplicationInfo: int theme>;

        return i0;

     label3:
        $r1 := @caughtexception;

        r6 = (android.content.pm.PackageManager$NameNotFoundException) $r1;

        virtualinvoke r6.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static long getTime(java.lang.String)
    {
        java.lang.String $r0, varReplacer3227;
        java.lang.Throwable $r1;
        java.text.SimpleDateFormat $r2, r6;
        java.util.Date $r3, $r5;
        java.util.Locale $r4;
        long $l0, varReplacer3226;
        java.text.ParseException r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r3 = null;

        r6 = new java.text.SimpleDateFormat;

        $r2 = r6;

     label1:
        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        varReplacer3227 = "yyyy-MM-dd\'T\'HH:mm:ssZ";

        specialinvoke r6.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(varReplacer3227, $r4);

        $r5 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

     label2:
        $r3 = $r5;

     label3:
        if $r3 != null goto label5;

        varReplacer3226 = 0L;

        return varReplacer3226;

     label4:
        $r1 := @caughtexception;

        r7 = (java.text.ParseException) $r1;

        virtualinvoke r7.<java.text.ParseException: void printStackTrace()>();

        goto label3;

     label5:
        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        return $l0;

        catch java.text.ParseException from label1 to label2 with label4;
    }

    public static java.lang.String getTimeZone()
    {
        java.util.Locale $r0;
        java.util.TimeZone $r1;
        java.util.Calendar $r2;
        java.text.SimpleDateFormat $r3;
        java.util.Date $r4;
        java.lang.String $r5, $r7;
        java.lang.StringBuilder $r6;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>($r1, $r0);

        $r3 = new java.text.SimpleDateFormat;

        $r0 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("Z", $r0);

        $r4 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        $r5 = virtualinvoke $r3.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("GMT");

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(3, 5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String getTimeZoneOnLog()
    {
        java.lang.StringBuilder $r0;
        java.text.SimpleDateFormat $r1;
        java.util.Locale $r2;
        java.util.Calendar $r3;
        java.util.Date $r4;
        java.lang.String $r5, $r6, varReplacer2035, varReplacer2036;
        int varReplacer2033, varReplacer2034, varReplacer2037;

        nop;

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r4 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

        $r1 = new java.text.SimpleDateFormat;

        $r2 = <java.util.Locale: java.util.Locale US>;

        varReplacer2035 = "Z";

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(varReplacer2035, $r2);

        $r5 = virtualinvoke $r1.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r4);

        varReplacer2033 = 0;

        varReplacer2034 = 3;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2033, varReplacer2034);

        varReplacer2037 = 3;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int)>(varReplacer2037);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer2036 = ":";

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2036);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static int getViewId(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        android.content.res.Resources $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r1, "id", $r3);

        return $i0;
    }

    public static boolean isAvailableIntent(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        android.content.Intent $r2;
        android.net.Uri $r3;
        android.content.pm.PackageManager $r4;
        java.util.List $r5;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        return 0;

     label1:
        if $r1 == null goto label2;

        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r3);

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r2, 65536);

        if $r5 == null goto label2;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static boolean isEmptyObject(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        org.json.JSONArray $r1;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = virtualinvoke $r0.<org.json.JSONObject: org.json.JSONArray names()>();

        if $r1 != null goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isExistFile(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.io.File $r2, $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        $r3 = virtualinvoke $r0.<android.content.Context: java.io.File getFilesDir()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r1);

        if $r2 == null goto label1;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isInstalledPackage(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        android.content.pm.PackageManager $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 1);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static boolean isMainThread()
    {
        android.os.Looper $r0, $r1;

        $r0 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        $r1 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r0 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void printCOSDK(java.lang.String)
    {
        java.lang.String $r0, $r2;
        net.netmarble.Channel $r1;
        java.lang.Class $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6;
        java.lang.Exception $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 = <net.netmarble.Channel: net.netmarble.Channel CO>;

     label1:
        $r2 = virtualinvoke $r1.<net.netmarble.Channel: java.lang.String getPackageName()>();

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r2);

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.tencent.cosdk.api.COSDKApi");

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getCOSDKVersion", null);

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null);

        $r2 = (java.lang.String) $r5;

     label2:
        $r6 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("COSDK version ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r2);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void printFacebookSDK(java.lang.String)
    {
        java.lang.String $r0, $r2;
        net.netmarble.Channel $r1;
        java.lang.StringBuilder $r3;
        java.lang.ClassNotFoundException $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = <net.netmarble.Channel: net.netmarble.Channel Facebook>;

     label1:
        $r2 = virtualinvoke $r1.<net.netmarble.Channel: java.lang.String getPackageName()>();

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r2);

     label2:
        $r3 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Facebook SDK version ");

        $r2 = staticinvoke <com.facebook.Settings: java.lang.String getSdkVersion()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r2);

     label4:
        return;

     label5:
        $r4 := @caughtexception;

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label5;
        catch java.lang.ClassNotFoundException from label3 to label4 with label5;
    }

    public static void printGooglePlaySDK(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        net.netmarble.Channel $r2;
        int $i0;
        java.lang.StringBuilder $r4;
        android.content.res.Resources $r5;
        java.lang.ClassNotFoundException $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = <net.netmarble.Channel: net.netmarble.Channel GooglePlus>;

     label1:
        $r3 = virtualinvoke $r2.<net.netmarble.Channel: java.lang.String getPackageName()>();

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r3);

        $i0 = staticinvoke <net.netmarble.util.Utils: int getResourceId(android.content.Context,java.lang.String,java.lang.String)>($r0, "integer", "google_play_services_version");

     label2:
        if $i0 == 0 goto label6;

        $r4 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("GooglePlus SDK version ");

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>($i0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r1, $r3);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

     label6:
        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label5;
        catch java.lang.ClassNotFoundException from label3 to label4 with label5;
    }

    public static void printKakaoSDK(java.lang.String)
    {
        java.lang.String $r0, $r1;
        net.netmarble.Channel $r2;
        java.lang.ClassNotFoundException $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = <net.netmarble.Channel: net.netmarble.Channel Kakao>;

     label1:
        $r1 = virtualinvoke $r2.<net.netmarble.Channel: java.lang.String getPackageName()>();

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, "KaKao SDK version 1.3.2");

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void printMSDK(java.lang.String)
    {
        java.lang.String $r0, $r2;
        net.netmarble.Channel $r1;
        java.lang.Class $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object $r5;
        java.lang.StringBuilder $r6;
        java.lang.Exception $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 = <net.netmarble.Channel: net.netmarble.Channel QQ>;

     label1:
        $r2 = virtualinvoke $r1.<net.netmarble.Channel: java.lang.String getPackageName()>();

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r2);

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("com.tencent.msdk.api.WGPlatform");

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("WGGetVersion", null);

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, null);

        $r2 = (java.lang.String) $r5;

     label2:
        $r6 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("MSDK version ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r2);

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void printNaverSDK(java.lang.String)
    {
        java.lang.String $r0, $r1;
        net.netmarble.Channel $r2;
        java.lang.ClassNotFoundException $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = <net.netmarble.Channel: net.netmarble.Channel Naver>;

     label1:
        $r1 = virtualinvoke $r2.<net.netmarble.Channel: java.lang.String getPackageName()>();

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($r1);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, "Naver SDK version 4.1.3");

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    private static void setCookie(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        android.webkit.CookieManager $r3;
        android.webkit.CookieSyncManager $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <net.netmarble.util.CookieHelper: void start(android.content.Context)>($r0);

        $r3 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        virtualinvoke $r3.<android.webkit.CookieManager: void setAcceptCookie(boolean)>(1);

     label1:
        virtualinvoke $r3.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, "PublicToken=;expires=Sat, 1 Jan 2000 00:00:01 UTC");

        virtualinvoke $r3.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, "UserToken=;expires=Sat, 1 Jan 2000 00:00:01 UTC");

        virtualinvoke $r3.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, "PersistentToken=;expires=Sat, 1 Jan 2000 00:00:01 UTC");

        virtualinvoke $r3.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, "PersistentSignToken=;expires=Sat, 1 Jan 2000 00:00:01 UTC");

        virtualinvoke $r3.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, "SecureToken=;expires=Sat, 1 Jan 2000 00:00:01 UTC");

        virtualinvoke $r3.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, "MobileVerification=;expires=Sat, 1 Jan 2000 00:00:01 UTC");

        virtualinvoke $r3.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, "UserNumber=;expires=Sat, 1 Jan 2000 00:00:01 UTC");

        virtualinvoke $r3.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, "DisplayCn=;expires=Sat, 1 Jan 2000 00:00:01 UTC");

        virtualinvoke $r3.<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>($r1, "cn=;expires=Sat, 1 Jan 2000 00:00:01 UTC");

        virtualinvoke $r3.<android.webkit.CookieManager: void removeExpiredCookie()>();

     label2:
        $r4 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

        virtualinvoke $r4.<android.webkit.CookieSyncManager: void sync()>();

        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.Object toJSON(java.lang.Object)
    {
        java.lang.Exception $r0;
        java.lang.Object $r1;
        boolean $z0;
        org.json.JSONObject $r2;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator $r5;
        java.lang.String $r6;
        org.json.JSONArray $r7;
        java.lang.Iterable $r8;

        nop;

        $r1 := @parameter0: java.lang.Object;

        $z0 = $r1 instanceof java.util.Map;

        if $z0 == 0 goto label07;

        $r2 = new org.json.JSONObject;

     label01:
        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = (java.util.Map) $r1;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 != 0 goto label04;

        return $r2;

     label04:
        $r1 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r6 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r1 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r1 = staticinvoke <net.netmarble.util.Utils: java.lang.Object toJSON(java.lang.Object)>($r1);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r6, $r1);

     label05:
        goto label02;

     label06:
        $r0 := @caughtexception;

        virtualinvoke $r0.<java.lang.Exception: void printStackTrace()>();

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        return $r2;

     label07:
        $z0 = $r1 instanceof java.lang.Iterable;

        if $z0 == 0 goto label13;

        $r7 = new org.json.JSONArray;

     label08:
        specialinvoke $r7.<org.json.JSONArray: void <init>()>();

        $r8 = (java.lang.Iterable) $r1;

        $r5 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

     label10:
        if $z0 == 0 goto label14;

     label11:
        $r1 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r1 = staticinvoke <net.netmarble.util.Utils: java.lang.Object toJSON(java.lang.Object)>($r1);

        virtualinvoke $r7.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r1);

     label12:
        goto label09;

     label13:
        return $r1;

     label14:
        return $r7;

        catch java.lang.Exception from label01 to label03 with label06;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label10 with label06;
        catch java.lang.Exception from label11 to label12 with label06;
    }

    public static java.util.List toList(org.json.JSONArray) throws org.json.JSONException
    {
        org.json.JSONArray $r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r2;

        nop;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 < $i1 goto label2;

        return $r1;

     label2:
        $r2 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object get(int)>($i0);

        $r2 = staticinvoke <net.netmarble.util.Utils: java.lang.Object fromJson(java.lang.Object)>($r2);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        $i0 = $i0 + 1;

        goto label1;
    }

    public static java.util.Map toMap(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONObject $r0;
        java.util.HashMap $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return $r1;

     label2:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

        $r3 = staticinvoke <net.netmarble.util.Utils: java.lang.Object fromJson(java.lang.Object)>($r3);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        goto label1;
    }
}
