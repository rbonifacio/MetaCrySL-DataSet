final class com.oneaudience.sdk.a.a extends java.lang.Object
{
    private static final java.lang.String a;
    private static final com.oneaudience.sdk.a.a c;
    private java.security.interfaces.RSAPublicKey b;

    static void <clinit>()
    {
        com.oneaudience.sdk.a.b $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        com.oneaudience.sdk.a.a $r3;

        nop;

        $r2 = class "Lcom/oneaudience/sdk/a/a;";

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.oneaudience.sdk.a.a: java.lang.String a> = $r1;

        $r3 = new com.oneaudience.sdk.a.a;

        $r0 = new com.oneaudience.sdk.a.b;

        specialinvoke $r0.<com.oneaudience.sdk.a.b: void <init>()>();

        specialinvoke $r3.<com.oneaudience.sdk.a.a: void <init>(com.oneaudience.sdk.a.a$a)>($r0);

        <com.oneaudience.sdk.a.a: com.oneaudience.sdk.a.a c> = $r3;

        return;
    }

    private void <init>(com.oneaudience.sdk.a.a$a)
    {
        com.oneaudience.sdk.a.a $r0;
        com.oneaudience.sdk.a.a$a $r1;
        java.security.interfaces.RSAPublicKey $r2;

        nop;

        $r0 := @this: com.oneaudience.sdk.a.a;

        $r1 := @parameter0: com.oneaudience.sdk.a.a$a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<com.oneaudience.sdk.a.a$a: java.security.interfaces.RSAPublicKey a()>();

        $r0.<com.oneaudience.sdk.a.a: java.security.interfaces.RSAPublicKey b> = $r2;

        return;
    }

    public static com.oneaudience.sdk.a.a a()
    {
        com.oneaudience.sdk.a.a r0;

        nop;

        r0 = <com.oneaudience.sdk.a.a: com.oneaudience.sdk.a.a c>;

        return r0;
    }

    public java.lang.String a(java.lang.String)
    {
        com.oneaudience.sdk.a.a $r0;
        java.lang.String $r1, varReplacer3294, varReplacer3296, varReplacer3300, varReplacer3303, varReplacer3304, varReplacer3306, varReplacer3307;
        java.security.interfaces.RSAPublicKey $r2;
        javax.crypto.Cipher $r3;
        byte[] $r4;
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10;
        java.io.UnsupportedEncodingException r11;
        null_type varReplacer3292, varReplacer3293, varReplacer3295, varReplacer3297, varReplacer3298, varReplacer3301, varReplacer3302;
        int varReplacer3299, varReplacer3305;

        nop;

        $r0 := @this: com.oneaudience.sdk.a.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.oneaudience.sdk.a.a: java.security.interfaces.RSAPublicKey b>;

        if $r2 != null goto label01;

        varReplacer3293 = null;

        return varReplacer3293;

     label01:
        varReplacer3304 = "RSA/ECB/OAEPWithSHA1AndMGF1Padding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3304);

     label02:
        $r2 = $r0.<com.oneaudience.sdk.a.a: java.security.interfaces.RSAPublicKey b>;

     label03:
        varReplacer3305 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3305, $r2);

        varReplacer3306 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3306);

        $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        varReplacer3299 = 0;

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r4, varReplacer3299);

     label04:
        return $r1;

     label05:
        $r5 := @caughtexception;

        $r1 = <com.oneaudience.sdk.a.a: java.lang.String a>;

        varReplacer3300 = "unable to create cipher.";

        staticinvoke <com.oneaudience.sdk.b.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer3300, $r5);

        varReplacer3301 = null;

        return varReplacer3301;

     label06:
        $r6 := @caughtexception;

        $r1 = <com.oneaudience.sdk.a.a: java.lang.String a>;

        varReplacer3303 = "unable to create cipher.";

        staticinvoke <com.oneaudience.sdk.b.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer3303, $r6);

        varReplacer3297 = null;

        return varReplacer3297;

     label07:
        $r7 := @caughtexception;

        $r1 = <com.oneaudience.sdk.a.a: java.lang.String a>;

        varReplacer3294 = "unable to initialize cipher.";

        staticinvoke <com.oneaudience.sdk.b.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer3294, $r7);

        varReplacer3295 = null;

        return varReplacer3295;

     label08:
        $r8 := @caughtexception;

        $r1 = <com.oneaudience.sdk.a.a: java.lang.String a>;

        varReplacer3307 = "unable to cipher input text.";

        staticinvoke <com.oneaudience.sdk.b.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer3307, $r8);

        varReplacer3302 = null;

        return varReplacer3302;

     label09:
        $r9 := @caughtexception;

        $r1 = <com.oneaudience.sdk.a.a: java.lang.String a>;

        varReplacer3296 = "unable to cipher input text.";

        staticinvoke <com.oneaudience.sdk.b.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer3296, $r9);

        varReplacer3298 = null;

        return varReplacer3298;

     label10:
        $r10 := @caughtexception;

        r11 = (java.io.UnsupportedEncodingException) $r10;

        virtualinvoke r11.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        varReplacer3292 = null;

        return varReplacer3292;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label06;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label06;
        catch java.security.InvalidKeyException from label01 to label02 with label07;
        catch java.security.InvalidKeyException from label03 to label04 with label07;
        catch javax.crypto.BadPaddingException from label01 to label02 with label08;
        catch javax.crypto.BadPaddingException from label03 to label04 with label08;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label09;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label09;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label10;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label10;
    }
}
