Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.Constants: void loadCrashIdentifier(android.content.Context)>
		SHA-256: ed889f4295e234485f0c60f24b7d9258ce6347b24c571ec21325bade4675c1ae
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5390)
		Method: <com.helpshift.HSApiClient: java.lang.String getSignature(java.lang.String)>
		SHA-256: da0cf0bd93ff330668f8cafd8dcac275072326471743b2f70c83ee96b0d96ccb
		Secure: true
	Object:
		Variable: varReplacer3834
		Type: int
		Statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer3833, varReplacer3834)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: d62a011c3e7ba6a0a01a66971f97dec46aaf76476ed9a0e5ac2b0819e1d70387
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.iugome.igl.Helper$1: void run()>
		SHA-256: afe53ec9b28d8bf2f95a73849833318616de31825c660fd1b756b68a522ed48b
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3842)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 7d13a59253d2440521a1f812c424575f7d36f0b249dbccc1044aa8c02f2fa60d
		Secure: false
	Object:
		Variable: r20
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer3833, varReplacer3834)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 910597c1a52e1ba031f359f2c357cf171b12321e1d07d6ba24c55683e9b8c7d9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5392)
		Method: <com.helpshift.HSApiClient: java.lang.String getSignature(java.lang.String)>
		SHA-256: 7607cb1ccbf6fd8a325b850fcf94f0a31c300cb1dbeead5b86e92a6e99f59892
		Secure: false
	Object:
		Variable: r9
		Type: java.security.DigestInputStream
		Statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)
		Method: <com.leanplum.FileManager: com.leanplum.k a(java.io.InputStream)>
		SHA-256: 133c6271dfef209c4fe0ca5ec7a66d4f3f6886c0cfadc93cb686d64267a2b169
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 370c144343593a2f250efa941f352a4014e247d247772ee8513fb5ea08368c0d
		Secure: false
	Object:
		Variable: r21
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3845)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: d3b12aea321c95b44b57dad5a78e2d5636eb65f1553d471fb89412f0d1a49538
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: a3d08211d3ba404e6ba4646686ff2b51d3fd8d0e847ca8bb2960c48a82e64856
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 1bd65c7e3ef7c5880ee054dd01ba963cb9b0d277e32cad1c7526c867dab34e4b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3837)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: dbfa59b2e2b2891ee97d7e98a078f0a6e75b6114ee4372e1a7dd66f84e37b13e
		Secure: false
	Object:
		Variable: varReplacer3845
		Type: java.lang.String
		Statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3845)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: cf5253f9fa07a2c9826b1df170e1cecb21799cd35fee579c8af89b29042f2650
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2558)
		Method: <net.hockeyapp.android.Constants: void loadCrashIdentifier(android.content.Context)>
		SHA-256: 9d0146a00a8721c741edb119d2f7f48babb39ef5344610cbd904562430834829
		Secure: false
	Object:
		Variable: varReplacer5392
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5392)
		Method: <com.helpshift.HSApiClient: java.lang.String getSignature(java.lang.String)>
		SHA-256: 1453b148e4018b6b6d0df0885f9fe037984f50f30c9171a2a1eced977b453646
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2866)
		Method: <com.leanplum.FileManager: com.leanplum.k a(java.io.InputStream)>
		SHA-256: 8ef27d0d3f0e96b0a30ebfbb05a35b5a38dc97882a81a6ca14545254a93d5bc2
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <com.helpshift.HSApiClient: java.lang.String getSignature(java.lang.String)>
		SHA-256: 7ce6f01b3e8950a491644e247611cfb2f61ddbe5ef8f6fca0432db2aa1fb8dd0
		Secure: true
	Object:
		Variable: r22
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 9de94fb3b8b644281a93e70f5ced5a864e7605e93cd7ead74732dcaed3d32d5f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4993)
		Method: <com.leanplum.aW: javax.net.ssl.SSLSocketFactory b(com.leanplum.aW)>
		SHA-256: 798a8bd7af078e7de86aa7ed4b673d52a887af61fae354369640c4739b4e42a6
		Secure: false

Findings in Java Class: net.hockeyapp.android.Constants

	 in Method: void loadCrashIdentifier(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9d0146a00a8721c741edb119d2f7f48babb39ef5344610cbd904562430834829)
			First parameter (with value "SHA-1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2558)


Findings in Java Class: com.leanplum.FileManager

	 in Method: com.leanplum.k a(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #8ef27d0d3f0e96b0a30ebfbb05a35b5a38dc97882a81a6ca14545254a93d5bc2)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #133c6271dfef209c4fe0ca5ec7a66d4f3f6886c0cfadc93cb686d64267a2b169)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8ef27d0d3f0e96b0a30ebfbb05a35b5a38dc97882a81a6ca14545254a93d5bc2)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2866)


Findings in Java Class: com.facebook.internal.Utility

	 in Method: java.lang.String hashWithAlgorithm(java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00)
			First parameter (with value "SHA-1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: com.leanplum.a

	 in Method: byte[] a(int,java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #dbfa59b2e2b2891ee97d7e98a078f0a6e75b6114ee4372e1a7dd66f84e37b13e)
			First parameter (with value "PBEWithMD5And128BitAES-CBC-OpenSSL") should be any of {Insecure}
			at statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3837)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #910597c1a52e1ba031f359f2c357cf171b12321e1d07d6ba24c55683e9b8c7d9)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer3833, varReplacer3834)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r9, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #910597c1a52e1ba031f359f2c357cf171b12321e1d07d6ba24c55683e9b8c7d9)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer3833, varReplacer3834)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #910597c1a52e1ba031f359f2c357cf171b12321e1d07d6ba24c55683e9b8c7d9)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer3833, varReplacer3834)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer3833, varReplacer3834)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3845)


Findings in Java Class: com.leanplum.aW

	 in Method: javax.net.ssl.SSLSocketFactory b(com.leanplum.aW)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4994, varReplacer4994, varReplacer4994)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4994, varReplacer4994, varReplacer4994)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #798a8bd7af078e7de86aa7ed4b673d52a887af61fae354369640c4739b4e42a6)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4993)


Findings in Java Class: com.helpshift.HSApiClient

	 in Method: java.lang.String getSignature(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5392)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 1
	RequiredPredicateError: 8
	ConstraintError: 6
	IncompleteOperationError: 2
	TypestateError: 1
=====================================================================