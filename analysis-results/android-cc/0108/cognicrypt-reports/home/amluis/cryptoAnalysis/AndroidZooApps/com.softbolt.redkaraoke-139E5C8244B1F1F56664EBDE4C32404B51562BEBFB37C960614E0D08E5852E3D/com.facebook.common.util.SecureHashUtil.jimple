public class com.facebook.common.util.SecureHashUtil extends java.lang.Object
{
    static final byte[] HEX_CHAR_TABLE;

    static void <clinit>()
    {
        byte[] $r0;

        nop;

        $r0 = newarray (byte)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <com.facebook.common.util.SecureHashUtil: byte[] HEX_CHAR_TABLE> = $r0;

        return;
    }

    public void <init>()
    {
        com.facebook.common.util.SecureHashUtil $r0;

        $r0 := @this: com.facebook.common.util.SecureHashUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String convertToHex(byte[])
    {
        byte[] $r0, $r3;
        java.lang.StringBuilder $r1;
        int $i0, $i2;
        short $s1, $s4;
        java.lang.String $r2;
        byte $b3;
        char $c5;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        $i0 = lengthof $r0;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $b3 = $r0[$i2];

        $s4 = $b3 & 255;

        $r3 = <com.facebook.common.util.SecureHashUtil: byte[] HEX_CHAR_TABLE>;

        $s1 = $s4 >>> 4;

        $b3 = $r3[$s1];

        $c5 = (char) $b3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r3 = <com.facebook.common.util.SecureHashUtil: byte[] HEX_CHAR_TABLE>;

        $s1 = $s4 & 15;

        $b3 = $r3[$s1];

        $c5 = (char) $b3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String makeMD5Hash(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.RuntimeException $r1;
        byte[] $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r0 = staticinvoke <com.facebook.common.util.SecureHashUtil: java.lang.String makeMD5Hash(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String makeMD5Hash(byte[])
    {
        byte[] $r0;
        int $i0;
        java.security.MessageDigest $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3, $r5;
        java.lang.RuntimeException $r4;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

     label2:
        $i0 = lengthof $r0;

     label3:
        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r0, 0, $i0);

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r2 = staticinvoke <com.facebook.common.util.SecureHashUtil: java.lang.String convertToHex(byte[])>($r0);

     label4:
        return $r2;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label6:
        $r5 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
    }

    public static java.lang.String makeSHA1Hash(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.RuntimeException $r1;
        byte[] $r2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r0 = staticinvoke <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1Hash(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String makeSHA1Hash(byte[])
    {
        byte[] $r0;
        int $i0;
        java.security.MessageDigest $r1;
        java.lang.String $r2;
        java.lang.Throwable $r3, $r5;
        java.lang.RuntimeException $r4;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

     label2:
        $i0 = lengthof $r0;

     label3:
        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r0, 0, $i0);

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r2 = staticinvoke <com.facebook.common.util.SecureHashUtil: java.lang.String convertToHex(byte[])>($r0);

     label4:
        return $r2;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label6:
        $r5 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
    }

    public static java.lang.String makeSHA1HashBase64(byte[])
    {
        byte[] $r0;
        int $i0, varReplacer15704, varReplacer15705;
        java.security.MessageDigest $r1;
        java.lang.String $r2, varReplacer15706;
        java.lang.Throwable $r3;
        java.lang.RuntimeException $r4;

        nop;

        $r0 := @parameter0: byte[];

     label1:
        varReplacer15706 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15706);

     label2:
        $i0 = lengthof $r0;

     label3:
        varReplacer15704 = 0;

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r0, varReplacer15704, $i0);

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        varReplacer15705 = 11;

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r0, varReplacer15705);

     label4:
        return $r2;

     label5:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
    }
}
