Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2746)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 73db853e9c0660135329c01c835e489c7f72e398b35e7fdb01a092caf25ea07d
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2743)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 9df11eddf4002a49590d0073340c7de9e75d836bc6f2b36134c941ef1ba9fc8b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.symantec.android.machineidentifier.r: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: f2c7fcb3df82a62092a5b1513f3ede91007310b6e2f628bd506124b3f7eb0936
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2853)
		Method: <com.symantec.android.machineidentifier.r: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: de13e36ed6d3d529c482686105a3ea9f27461ed3ecab30ca90c4821a3a439b15
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer5378, varReplacer5379)
		Method: <com.symantec.applock.ai: javax.crypto.SecretKey f()>
		SHA-256: 9719b4e6e1c558555ae8d37982428beac8e89c855f4b59ff7aa6f0cda26b783
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer2744, varReplacer2745)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: a6ff1c61cbde279da53b5878fb6c79750db5826a785dcfd33452bae50e762b7c
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2741)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 30dc298cd7739a7d635ddcc7b07abee3f9f1fc877fe235d0971b4fdc2fb7d4fe
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3352)
		Method: <com.symantec.android.appstoreanalyzer.p: byte[] b(java.lang.String)>
		SHA-256: ce70ec8f830df5c237da1da2038e4423f002b20c9f2c89ebca5db1f0e4f8504b
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer5230)
		Method: <com.symantec.maf.ce.o: boolean b(java.lang.String,java.lang.String)>
		SHA-256: 3b7e16d520db2257d93e79f8875753872d85b802eca863af461aae0c5fefda3
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.symantec.applock.ai: javax.crypto.SecretKey f()>
		SHA-256: a283a088ce262fc172867bde4cea2afcae6555a4649cdda5587dd9edde05284e
		Secure: true
	Object:
		Variable: varReplacer2746
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2746)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: f67ade7acedca0a19d3f6c3c4de6a3dad0fe1b13a1946ff432451343e5e15ce8
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 482d867abb00b5fa8d1685e20890d1eb11dedb43c7827641f214e2f719e967b0
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: $r7 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2757)
		Method: <com.symantec.android.machineidentifier.c: void a(boolean)>
		SHA-256: 9c8c3bb0d4de92cb6558f8bb318283d44cc5f930d9ee723bd24d3ef5b8a5fa6e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5370)
		Method: <com.symantec.applock.ai: javax.crypto.SecretKey f()>
		SHA-256: b8c23f22764971d64358807d416b1ade29fbbf07f7ae4572272d560b4464bb8
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 482d867abb00b5fa8d1685e20890d1eb11dedb43c7827641f214e2f719e967b0
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 4b01a801d746959d736f4907318be4d7e4a334de59f9a1866c499330ff00ac80
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.symantec.android.appstoreanalyzer.p: byte[] b(java.lang.String)>
		SHA-256: c1bc17cd62e2b42a4b51ea56ca60c7820c2c961d15aacc3bbad37e9458181155
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer833)
		Method: <com.symantec.ping.PingTaskService: boolean a(com.symantec.ping.h)>
		SHA-256: ed67aeadec47d951ee66261d8068840a9a22c8b63070ce8e9b84f7b3a652d8cf
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2753)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 5c2bafb7b5596434fcb09f169746cfd2786c79a3e054a7184ec2962877e1ef74
		Secure: false
	Object:
		Variable: varReplacer2745
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer2744, varReplacer2745)
		Method: <com.symantec.android.machineidentifier.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2fcc4845efd1cc5fc3e8cf47b5b6b7dfd8fcf674a0d455d37d8ae28caa553b2a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r9.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.symantec.maf.ce.o: boolean b(java.lang.String,java.lang.String)>
		SHA-256: d483e74d15cdf9b97fa2cbcf53edae524f0ba713286a4044aa1fa825fc16b903
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5364)
		Method: <com.symantec.applock.ai: javax.crypto.Cipher e()>
		SHA-256: f378dbbfbecf44d56c257021a511ed5b361fe08f78d49e12818e33bd0224d439
		Secure: false

Findings in Java Class: com.symantec.ping.PingTaskService

	 in Method: boolean a(com.symantec.ping.h)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer842, r26, varReplacer842)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ed67aeadec47d951ee66261d8068840a9a22c8b63070ce8e9b84f7b3a652d8cf)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer833)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer842, r26, varReplacer842)


Findings in Java Class: com.symantec.android.machineidentifier.a

	 in Method: void <init>(byte[],java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a6ff1c61cbde279da53b5878fb6c79750db5826a785dcfd33452bae50e762b7c)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #5c2bafb7b5596434fcb09f169746cfd2786c79a3e054a7184ec2962877e1ef74)
			First parameter (with value "PBEWITHSHAAND256BITAES-CBC-BC") should be any of {Insecure}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2753)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2746)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer2744, varReplacer2745)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a6ff1c61cbde279da53b5878fb6c79750db5826a785dcfd33452bae50e762b7c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer2744, varReplacer2745)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a6ff1c61cbde279da53b5878fb6c79750db5826a785dcfd33452bae50e762b7c)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r1, varReplacer2744, varReplacer2745)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.symantec.android.machineidentifier.r

	 in Method: byte[] a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #de13e36ed6d3d529c482686105a3ea9f27461ed3ecab30ca90c4821a3a439b15)
			First parameter (with value "SHA1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2853)


Findings in Java Class: com.symantec.android.appstoreanalyzer.p

	 in Method: byte[] b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ce70ec8f830df5c237da1da2038e4423f002b20c9f2c89ebca5db1f0e4f8504b)
			First parameter (with value "SHA-1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3352)


Findings in Java Class: com.symantec.applock.ae

	 in Method: void a(com.symantec.applock.ag)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f378dbbfbecf44d56c257021a511ed5b361fe08f78d49e12818e33bd0224d439)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke $r2.<com.symantec.applock.ai: void a(android.support.v4.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback)>($r4)


Findings in Java Class: com.symantec.applock.ai

	 in Method: javax.crypto.SecretKey f()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #b8c23f22764971d64358807d416b1ade29fbbf07f7ae4572272d560b4464bb8)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5370)


Findings in Java Class: com.symantec.maf.ce.o

	 in Method: boolean b(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r9.<java.security.Signature: void initVerify(java.security.PublicKey)>($r8)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 22

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 8
	ConstraintError: 6
	NeverTypeOfError: 1
=====================================================================