Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer27031)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: e18ec13af48c34570975a544d1f4ba0582772a11a1ffd5bda4429f886f312fc5
		Secure: false
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23672)
		Method: <okhttp3.ag: void <init>(okhttp3.ai)>
		SHA-256: 47f2447d963d6b1201ff137792130d04c46eaff20e1e27894fbf698718f9591a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28248)
		Method: <com.paypal.android.sdk.ar: java.lang.String a(java.lang.String)>
		SHA-256: ba40c9a15f9fb544a02859218e69fd8e6c12afe1e212e1a0b3d66e9a111f8d09
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <utilslib.g: java.lang.String c(java.lang.String)>
		SHA-256: 8d6b06655ff3297536949e85638318ce3b3e4159205135c3e50bddb499af73f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer26861)
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: 4316b8fe9527567fbb97f6d04c4fe0aafb20136729cc9058c84fc88d3e518ac1
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer27032)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 752a2d6c0c7a375e206810c0b47a9d8d42ffaa3a83f913111e397336de541ee2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <utilslib.g: void <init>(android.content.Context)>
		SHA-256: aa867a8eeaf783aa542b950740bdf67aab6849cf884333f62afc1a67261dec44
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer27022, $i0, varReplacer27023)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: 9774817bafa35df9d7ca139798fdfecbf1c253df820d9d8b9ab45634dbf59602
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: 8a5be3712caa5c129ee8e8ebd37ff87a07e5b4b400d9c1f947beddfca957715a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1746)
		Method: <utilslib.g: void <init>(android.content.Context)>
		SHA-256: af6aa8bef5881d51646ee2303f70d969375a88baa31de88ea730ed2769dab56d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <utilslib.a: byte[] b(utilslib.b,utilslib.c)>
		SHA-256: deaa291ca3d0ffc59d7ad7c1373c0bb84caba0350d0558fb8d4c3e426704100e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer27210)
		Method: <utilslib.a: byte[] a(int)>
		SHA-256: b1add0ba8c2336e804cbf8aa0f0faa93e2b3b004b7c43b2e6fbe9f9846e8a4ec
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 9a19a49c55901b0c39c97709d7d8f5821b2dd27fc9657b9d21f54aba78321c4c
		Secure: false
	Object:
		Variable: varReplacer27038
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer27037, varReplacer27038)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 98b2f7ff2af288655f896c6095cc068f816cb683091a52c3d2617a4eb285d223
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.paypal.android.sdk.bk: void <init>(java.io.InputStream)>
		SHA-256: 91e8b28f911461d611cb6c91ce26981fd96629ddc47effbfee4107508e445622
		Secure: true
	Object:
		Variable: varReplacer27032
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer27032)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 6903b47d4f3770811ae4d5ad74c2d8217918a81b64b5810dcc0a844752d5a93
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdu(java.lang.String)>
		SHA-256: 91d6ae651ea468ee55b204b8531f2e40ebb8a460987b346249056da8de8b5b12
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27207)
		Method: <utilslib.a: utilslib.b a(byte[],utilslib.c)>
		SHA-256: af10b91a96fde08614380ef66c1c2a34de1bc914125fa8d7d596dde0a0452a23
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <utilslib.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3778)
		Method: <utilslib.g: java.lang.String c(java.lang.String)>
		SHA-256: 930678485c1aec6cd386b26f7fd14d909c029c336a2e62aebafc3e6523269744
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <utilslib.a: byte[] a(int)>
		SHA-256: fb29420aa97b5775051d78ac21aaddb65cadc18b767a2ea9df4d12c22313ecc6
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <utilslib.a: byte[] b(utilslib.b,utilslib.c)>
		SHA-256: 93956974d148af49c7bedf886430bab7e5a8bdbb54e9810aa547f86e20abd43c
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22911)
		Method: <com.paypal.android.sdk.bg: okhttp3.ai a(int,boolean,boolean,java.lang.String,java.lang.String)>
		SHA-256: 3a08528a9ad488004f3807fbe27527a600ba9239a8744393237838c2c8309619
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29848)
		Method: <okhttp3.internal.o: okio.ByteString a(okio.ByteString)>
		SHA-256: 76bea2edba0adcf3f2e7ff903c3c93f4e873d465a9afdcb894647cd90e5384ae
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <utilslib.a: utilslib.b a(byte[],utilslib.c)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <utilslib.g: void d()>
		SHA-256: decff693ee2c26a537ada762670d192f55bf3bd79d0f45c2e56e9690f5ac7147
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer26992)
		Method: <utilslib.a: byte[] b(utilslib.b,utilslib.c)>
		SHA-256: 687bf53841ef9f03cb9281086af1bd47a5db921e502795aba49ef3168c7f3d4b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1736)
		Method: <utilslib.g: java.security.SecureRandom e()>
		SHA-256: 2a1983d8d0651dda1da520b40bd846cb39b3254d50ade3ebc3b355482bb9d943
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27079)
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 9788fe449529531252c401fee6f1e767d1967c38b85bbd65972b2089e549b8fe
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer27030)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: ea1b93f9bcf236178e9f53b1456f7ad6891138a8d2c8477aa1ac3abfd2ab437
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1756)
		Method: <utilslib.g: javax.crypto.Cipher f()>
		SHA-256: eb726ebb2ed91d360548465fef5615102717570e82ec26347cdd08f8e6eca47e
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer27027)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: 68f4eb8b3df6e27f4733c9cee800601244a17a397565430dc58d7e68decf13c5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer26996)
		Method: <utilslib.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 59b9fd03d3d57bdceedfd6222000d276e1af3cac10cd0f5b6c1bc30f2566d392
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 11e4b9e822e63d4e2ebae0304751656dada7c05ac1ac98dc04c4fdb80ba34128
		Secure: true
	Object:
		Variable: varReplacer27109
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer27109)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: b8e5939bb6c1521dbaf26e7418871ec88e769ee16b9b56b5435c00834d71c7a7
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23621)
		Method: <com.paypal.android.sdk.bk: void <init>()>
		SHA-256: 5a318d698bce85bb999b93c743cbd54e413118040008533f8c4898e13c7efc32
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer27109)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1d2ade6557fd95012abd8aea7d7881ffb5782e2a6de24a364206b7e88c40f2c6
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23620)
		Method: <com.paypal.android.sdk.bk: void <init>(java.io.InputStream)>
		SHA-256: ebc2deeb2f03801b75b69d08c2c37b40acd9cc519ae2236f5afecf6a4403fad5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <utilslib.g: java.lang.String a(int)>
		SHA-256: c90f66b795d19daaa85e6efdc40f16cb85a607d421a103468da4a80ec047498e
		Secure: true
	Object:
		Variable: varReplacer27031
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer27031)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 4f94bc7da319b64c7742a25f2ad46b339fb67bf47f8ca2674cb12b77476d0867
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1733, varReplacer1734)
		Method: <utilslib.g: java.security.SecureRandom e()>
		SHA-256: 68cd7f940bbe16d5f637ff2f9e2ffe26287f66b298332f29943e3fc253a1a8d6
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: 7783709ffb59212b53ecfaa3646ac9e01977d69d48097298577a30772a4d8880
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.o: okio.ByteString a(okio.ByteString)>
		SHA-256: 600b67f7c7e61f9feb0865e2ba48f5ae35e101a57c7db3d07dd7066b87492fe6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <utilslib.a: utilslib.b a(byte[],utilslib.c)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer27106)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d91b5db312f23cd9d5feb16a139741f9c57f7c8dc44d55cb2e01085ef46c0d5
		Secure: true
	Object:
		Variable: varReplacer27023
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer27022, $i0, varReplacer27023)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: a6dd0a0cae1460d918d410cae06f0dbe2c503588baf9157e41e5c3575da298f3
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26822)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: b6d0e57b2c4b96ad2f281ccf2167a96aa32a80b76e7e3e3e55b8c97e44111856
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.paypal.android.sdk.ar: java.lang.String a(java.lang.String)>
		SHA-256: 51e13467ab151b2c36ea6e990fafcaf8145699ddd626190a58a24426292bcc39
		Secure: true
	Object:
		Variable: varReplacer1746
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1746)
		Method: <utilslib.g: void <init>(android.content.Context)>
		SHA-256: 7adecd38a6a6d927f76085619c3519d37f126085359353f8853b44f4312305e2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27378)
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: 149b4bc21b949046b0ae0fb62f732fda941de4f7ba2276f2ab66ec49adbfa135
		Secure: false
	Object:
		Variable: varReplacer27027
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer27027)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: 6878ce51e339654640dfb82056b7f61da42a61fd59436c5d7230e5e1b0c440e2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1754)
		Method: <utilslib.g: javax.crypto.Cipher f()>
		SHA-256: 68aab2b8e3a84e77a28b5b3d42f78509e4da285a9d38658f2d2a98cbbce9978c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer27037, varReplacer27038)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 2b75efdf202c2320b728b07a31355bb2ad372620a0528711aab9d27cab36ae40
		Secure: false

Findings in Java Class: utilslib.g

	 in Method: javax.crypto.Cipher f()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #68aab2b8e3a84e77a28b5b3d42f78509e4da285a9d38658f2d2a98cbbce9978c)
			First parameter (with value "AES") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1754)


	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #930678485c1aec6cd386b26f7fd14d909c029c336a2e62aebafc3e6523269744)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3778)


	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1746)


Findings in Java Class: com.paypal.android.sdk.bg

	 in Method: okhttp3.ai a(int,boolean,boolean,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3a08528a9ad488004f3807fbe27527a600ba9239a8744393237838c2c8309619)
			First parameter (with value "TLSv1") should be any of {Insecure}
			at statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22911)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22904, r23, varReplacer22904)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22904, r23, varReplacer22904)


Findings in Java Class: com.paypal.android.sdk.bk

	 in Method: void <init>(java.io.InputStream)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ebc2deeb2f03801b75b69d08c2c37b40acd9cc519ae2236f5afecf6a4403fad5)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23620)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23618, $r16, varReplacer23618)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23618, $r16, varReplacer23618)


	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23622, varReplacer23622, varReplacer23622)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23622, varReplacer23622, varReplacer23622)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5a318d698bce85bb999b93c743cbd54e413118040008533f8c4898e13c7efc32)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23621)


Findings in Java Class: okhttp3.ag

	 in Method: void <init>(okhttp3.ai)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23673, varReplacer23673, varReplacer23673)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #47f2447d963d6b1201ff137792130d04c46eaff20e1e27894fbf698718f9591a)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23672)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23673, varReplacer23673, varReplacer23673)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b6d0e57b2c4b96ad2f281ccf2167a96aa32a80b76e7e3e3e55b8c97e44111856)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26822)


Findings in Java Class: utilslib.a

	 in Method: utilslib.c a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer27022, $i0, varReplacer27023)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer27022, $i0, varReplacer27023)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer27027)


	 in Method: utilslib.c a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer27037, varReplacer27038)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer27032)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer27031)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #ea1b93f9bcf236178e9f53b1456f7ad6891138a8d2c8477aa1ac3abfd2ab437)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {Insecure}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer27030)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #2b75efdf202c2320b728b07a31355bb2ad372620a0528711aab9d27cab36ae40)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer27037, varReplacer27038)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #2b75efdf202c2320b728b07a31355bb2ad372620a0528711aab9d27cab36ae40)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: byte[] b(utilslib.b,utilslib.c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer26991, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: utilslib.b a(byte[],utilslib.c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27208, $r5, $r2)


Findings in Java Class: com.android.volley.InternalUtils

	 in Method: java.lang.String sha1Hash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9788fe449529531252c401fee6f1e767d1967c38b85bbd65972b2089e549b8fe)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27079)


Findings in Java Class: com.androidquery.util.AQUtility

	 in Method: byte[] getMD5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #149b4bc21b949046b0ae0fb62f732fda941de4f7ba2276f2ab66ec49adbfa135)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27378)


Findings in Java Class: okhttp3.internal.o

	 in Method: okio.ByteString a(okio.ByteString)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #76bea2edba0adcf3f2e7ff903c3c93f4e873d465a9afdcb894647cd90e5384ae)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29848)


Findings in Java Class: utilslib.p

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer27109)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 59

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 12
	ImpreciseValueExtractionError: 1
	NeverTypeOfError: 1
	IncompleteOperationError: 1
	RequiredPredicateError: 21
=====================================================================