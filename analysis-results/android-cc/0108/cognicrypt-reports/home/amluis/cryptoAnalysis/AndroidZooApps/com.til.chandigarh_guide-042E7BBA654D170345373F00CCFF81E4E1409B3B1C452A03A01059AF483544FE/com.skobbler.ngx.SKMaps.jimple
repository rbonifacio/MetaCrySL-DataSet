public final class com.skobbler.ngx.SKMaps extends java.lang.Object implements com.skobbler.ngx.SKPrepareMapTextureListener
{
    public static final byte CONNECTIVITY_MODE_OFFLINE;
    public static final byte CONNECTIVITY_MODE_ONLINE;
    private static com.skobbler.ngx.SKMaps a;
    public static boolean updateToLatestSDKVersion;
    private boolean b;
    private java.lang.String c;
    private com.skobbler.ngx.SKMapsInitSettings d;
    private java.lang.ref.SoftReference e;
    private java.lang.String f;
    private java.lang.String g;
    private android.os.Handler h;
    private com.skobbler.ngx.SKMapsInitializationListener i;
    private android.content.Context j;

    static void <clinit>()
    {
        java.lang.String varReplacer4032;
        int varReplacer4033;

        nop;

        varReplacer4032 = "ngnative";

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>(varReplacer4032);

        varReplacer4033 = 0;

        <com.skobbler.ngx.SKMaps: boolean updateToLatestSDKVersion> = varReplacer4033;

        return;
    }

    private void <init>()
    {
        com.skobbler.ngx.SKMaps $r0;
        android.os.Looper $r1;
        android.os.Handler $r2;
        java.lang.String varReplacer4234, varReplacer4235;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer4234 = "com/skobbler/ngx/SKMaps";

        varReplacer4235 = "downloadcallback";

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: int setdownloadcallbacks(java.lang.String,java.lang.String)>(varReplacer4234, varReplacer4235);

        $r2 = new android.os.Handler;

        $r1 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r2.<android.os.Handler: void <init>(android.os.Looper)>($r1);

        $r0.<com.skobbler.ngx.SKMaps: android.os.Handler h> = $r2;

        return;
    }

    static com.skobbler.ngx.SKMapsDownloadListener a(com.skobbler.ngx.SKMaps)
    {
        com.skobbler.ngx.SKMaps $r0;
        com.skobbler.ngx.SKMapsDownloadListener $r1;

        $r0 := @parameter0: com.skobbler.ngx.SKMaps;

        $r1 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsDownloadListener b()>();

        return $r1;
    }

    private static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, varReplacer6633, varReplacer6634;
        java.lang.StringBuffer $r1, r5;
        java.security.MessageDigest $r2;
        byte[] $r3;
        int $i0, $i1;
        byte $b2;
        short $s3;
        java.lang.Throwable $r4;
        java.security.NoSuchAlgorithmException r6;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer6634 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6634);

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label02:
        r5 = new java.lang.StringBuffer;

        $r1 = r5;

     label03:
        specialinvoke r5.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label08;

        $b2 = $r3[$i0];

        $s3 = $b2 & 255;

     label06:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label07:
        $i0 = $i0 + 1;

        goto label05;

     label08:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        return $r0;

     label10:
        $r4 := @caughtexception;

        r6 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer6633 = "";

        return varReplacer6633;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label10;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label10;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label10;
    }

    private void a()
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.StringBuilder $r1, $r26, r55;
        java.lang.String $r2, $r8, $r9, $r10, $r11, $r17, $r18, $r19, $r48, varReplacer6504, varReplacer6505, varReplacer6507, varReplacer6509, varReplacer6510, varReplacer6511, varReplacer6512, varReplacer6513, varReplacer6514, varReplacer6515, varReplacer6516, varReplacer6517, varReplacer6518, varReplacer6519, varReplacer6520, varReplacer6521, varReplacer6531, varReplacer6534, varReplacer6536, varReplacer6537, varReplacer6538, varReplacer6539, varReplacer6540, varReplacer6541, varReplacer6542, varReplacer6544, varReplacer6545, varReplacer6546, varReplacer6547, varReplacer6548, varReplacer6550, varReplacer6551, varReplacer6553, varReplacer6554, varReplacer6555, varReplacer6556, varReplacer6557, varReplacer6559, varReplacer6560, varReplacer6562, varReplacer6563, varReplacer6564, varReplacer6565, varReplacer6566, varReplacer6567, varReplacer6568, varReplacer6569, varReplacer6571, varReplacer6572, varReplacer6573, varReplacer6574, varReplacer6575, varReplacer6577, varReplacer6578, varReplacer6580, varReplacer6582, varReplacer6583, varReplacer6585, varReplacer6586, varReplacer6587, varReplacer6588, varReplacer6589, varReplacer6590, varReplacer6591, varReplacer6592, varReplacer6593, varReplacer6595, varReplacer6596, varReplacer6597, varReplacer6598, varReplacer6600, varReplacer6602, varReplacer6603, varReplacer6604, varReplacer6605, varReplacer6607, varReplacer6608, varReplacer6609, varReplacer6610, varReplacer6611, varReplacer6612, varReplacer6614, varReplacer6616, varReplacer6617, varReplacer6618, varReplacer6621, varReplacer6622, varReplacer6623, varReplacer6624, varReplacer6625, varReplacer6626, varReplacer6627, varReplacer6628, varReplacer6629, varReplacer6630, varReplacer6631;
        com.skobbler.ngx.SKMapsInitSettings $r3;
        com.skobbler.ngx.map.SKMapViewStyle $r4, r52;
        com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail $r5, $r12;
        com.skobbler.ngx.navigation.SKAdvisorSettings $r6, r53;
        boolean $z0;
        com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage $r7;
        int $i0, $i1, $i2, $i3, varReplacer6506, varReplacer6508, varReplacer6522, varReplacer6523, varReplacer6524, varReplacer6526, varReplacer6527, varReplacer6528, varReplacer6529, varReplacer6530, varReplacer6532, varReplacer6533, varReplacer6535, varReplacer6543, varReplacer6549, varReplacer6552, varReplacer6558, varReplacer6561, varReplacer6570, varReplacer6576, varReplacer6579, varReplacer6581, varReplacer6584, varReplacer6594, varReplacer6599, varReplacer6601, varReplacer6606, varReplacer6613, varReplacer6615, varReplacer6619, varReplacer6620;
        com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity $r13;
        android.content.Context $r14;
        android.content.res.Resources $r15;
        android.util.DisplayMetrics $r16, r61;
        float $f0, varReplacer6525;
        com.skobbler.ngx.SKProxySettings $r20, r54;
        long $l4;
        java.lang.Object $r21;
        android.telephony.TelephonyManager $r22;
        android.net.wifi.WifiManager $r23;
        android.net.wifi.WifiInfo $r24;
        android.content.ContentResolver $r25;
        java.lang.String[] $r27, $r28;
        android.content.pm.ApplicationInfo $r29;
        android.content.pm.PackageManager $r30;
        android.content.pm.PackageInfo $r31;
        java.lang.Throwable $r32, $r33, $r34, $r40, $r43, $r50, $r51;
        java.io.File $r35, $r38;
        java.util.UUID $r36;
        java.io.FileWriter $r37, r57;
        java.io.BufferedWriter $r39, r58;
        java.io.FileReader $r41, r59;
        java.io.BufferedReader $r42, r60;
        android.view.WindowManager $r44;
        android.view.Display $r45;
        com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType $r46;
        java.util.Locale $r47;
        com.skobbler.ngx.routing.SKRouteManager $r49;
        com.skobbler.ngx.SKMapsInitializationException r56;
        android.content.pm.PackageManager$NameNotFoundException r62;
        java.lang.SecurityException r63;
        java.io.IOException r64;
        android.content.res.Resources$NotFoundException r65;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        varReplacer6541 = "SKmaps";

        varReplacer6542 = " INITIALIZE SK MAPS WITH SETTINGS ";

        varReplacer6543 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6541, varReplacer6542, varReplacer6543);

        $r26 = new java.lang.StringBuilder;

        varReplacer6521 = "versionFileName = ";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6521);

        varReplacer6591 = "version3_android_3_0.txt";

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6591);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6593 = "SKmaps";

        varReplacer6594 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6593, $r2, varReplacer6594);

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r4 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: com.skobbler.ngx.map.SKMapViewStyle getCurrentMapViewStyle()>();

        if $r4 != null goto label88;

        r52 = new com.skobbler.ngx.map.SKMapViewStyle;

        $r4 = r52;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r2 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer6566 = "daystyle/";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6566);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6568 = "daystyle.json";

        specialinvoke r52.<com.skobbler.ngx.map.SKMapViewStyle: void <init>(java.lang.String,java.lang.String)>($r2, varReplacer6568);

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: void setCurrentMapViewStyle(com.skobbler.ngx.map.SKMapViewStyle)>($r4);

     label01:
        $r5 = virtualinvoke $r4.<com.skobbler.ngx.map.SKMapViewStyle: com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail getStyleDetail()>();

        if $r5 != null goto label44;

        $r5 = staticinvoke <com.skobbler.ngx.util.SKUtils: com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail getStyleDetailForDevice()>();

     label02:
        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r6 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: com.skobbler.ngx.navigation.SKAdvisorSettings getAdvisorSettings()>();

        if $r6 != null goto label87;

        varReplacer6547 = "SKmaps";

        varReplacer6548 = "initializeLibraryWithSettings - SKAdvisorSettings is null! creating it!";

        varReplacer6549 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6547, varReplacer6548, varReplacer6549);

        r53 = new com.skobbler.ngx.navigation.SKAdvisorSettings;

        specialinvoke r53.<com.skobbler.ngx.navigation.SKAdvisorSettings: void <init>()>();

        $r6 = r53;

     label03:
        $r2 = virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getAdvisorConfigPath()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label04;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r2 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer6514 = "Advisor";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6514);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: void setAdvisorConfigPath(java.lang.String)>($r2);

     label04:
        $r2 = virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getResourcePath()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label05;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r2 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer6623 = "Advisor/Languages";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6623);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: void setResourcePath(java.lang.String)>($r2);

     label05:
        $r7 = virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage getLanguage()>();

        if $r7 != null goto label06;

        $r7 = <com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage: com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage LANGUAGE_EN>;

        virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: void setLanguage(com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage)>($r7);

     label06:
        $r2 = virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getAdvisorVoice()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label07;

        varReplacer6630 = "en";

        virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: void setAdvisorVoice(java.lang.String)>(varReplacer6630);

     label07:
        $r26 = new java.lang.StringBuilder;

        varReplacer6559 = "initializeLibraryWithSettings - SKAdvisorSettings =  ";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6559);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6507 = "SKmaps";

        varReplacer6508 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6507, $r2, varReplacer6508);

        $r26 = new java.lang.StringBuilder;

        $r2 = virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getResourcePath()>();

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getAdvisorVoice()>();

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer6572 = "/advisor_configfiles/";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6572);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = new java.lang.StringBuilder;

        $r8 = virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getAdvisorConfigPath()>();

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        varReplacer6596 = "Visual/";

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6596);

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: java.lang.String getAdvisorConfigPath()>();

        $r7 = virtualinvoke $r6.<com.skobbler.ngx.navigation.SKAdvisorSettings: com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage getLanguage()>();

        $r10 = virtualinvoke $r7.<com.skobbler.ngx.navigation.SKAdvisorSettings$SKAdvisorLanguage: java.lang.String getValue()>();

        varReplacer6601 = 0;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void initadvisor(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>($r2, $r9, $r8, varReplacer6601, $r10);

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: void setAdvisorSettings(com.skobbler.ngx.navigation.SKAdvisorSettings)>($r6);

        $r26 = new java.lang.StringBuilder;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r2 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        varReplacer6515 = "/.Common/";

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6515);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r4.<com.skobbler.ngx.map.SKMapViewStyle: java.lang.String getResourceFolderPath()>();

        $r11 = virtualinvoke $r4.<com.skobbler.ngx.map.SKMapViewStyle: java.lang.String getStyleFileName()>();

        $r26 = new java.lang.StringBuilder;

        varReplacer6626 = "Map style json file ";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6626);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        varReplacer6628 = " styleDetail = ";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6628);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6612 = "SKmaps";

        varReplacer6613 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6612, $r9, varReplacer6613);

        $r12 = <com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail: com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail HIGH>;

        if $r5 != $r12 goto label45;

        $i0 = 96468992;

     label08:
        $r26 = new java.lang.StringBuilder;

        varReplacer6595 = "Style detail = ";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6595);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        varReplacer6573 = " Road Cache ";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6573);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer6509 = " POI cache = 4194304  SHAPE CACHE 50331648";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6509);

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6575 = "SKmaps";

        varReplacer6576 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6575, $r9, varReplacer6576);

        $r26 = new java.lang.StringBuilder;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r9 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        varReplacer6517 = ".Routing/";

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6517);

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = new java.lang.StringBuilder;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r10 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        varReplacer6545 = ".Shaders/";

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6545);

        $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapDetailLevel()>();

        $r13 = virtualinvoke $r4.<com.skobbler.ngx.map.SKMapViewStyle: com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity getDisplayPixelDensity()>();

        if $r13 != null goto label46;

        $r14 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        $r15 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        $r16 = virtualinvoke $r15.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r16.<android.util.DisplayMetrics: float density>;

        $r13 = staticinvoke <com.skobbler.ngx.util.SKUtils: com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity getDisplayDensity(float)>($f0);

     label09:
        $r26 = new java.lang.StringBuilder;

        varReplacer6551 = " shaders:";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6551);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r17 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6505 = "Resurse";

        varReplacer6506 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6505, $r17, varReplacer6506);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer6624 = "/";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6624);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r17 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapsPath()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r18 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getPreinstalledMapsPath()>();

        $r26 = new java.lang.StringBuilder;

        varReplacer6607 = "http://cache.sko.fm/ngxmaps/versioned/";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6607);

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r19 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapDetailLevel()>();

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r19 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r5.<com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail: int getValue()>();

        $i2 = virtualinvoke $r5.<com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail: int getValue()>();

        $i3 = virtualinvoke $r13.<com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity: int getValue()>();

        varReplacer6525 = 1.0F;

        varReplacer6526 = 0;

        varReplacer6527 = 0;

        varReplacer6528 = 1;

        varReplacer6529 = 7;

        varReplacer6530 = 1;

        varReplacer6531 = "OSM.txt";

        varReplacer6532 = 50331648;

        varReplacer6533 = 4194304;

        varReplacer6534 = "version3_android_3_0.txt";

        varReplacer6535 = 1;

        varReplacer6536 = "http://tst-tor.skobbler.net:57070";

        varReplacer6537 = "RSngx";

        varReplacer6538 = "20_5";

        varReplacer6539 = "NBngx";

        varReplacer6540 = "20_5";

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void init(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,int,int,boolean,int,boolean,int,java.lang.String,int,java.lang.String,int,int,int,java.lang.String,boolean,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r2, $r8, $r11, $r17, $r18, $r19, varReplacer6525, varReplacer6526, varReplacer6526, varReplacer6528, varReplacer6529, varReplacer6528, $i1, $r9, $i2, varReplacer6531, $i0, varReplacer6532, varReplacer6533, varReplacer6534, varReplacer6528, $r10, $i3, varReplacer6536, varReplacer6537, varReplacer6538, varReplacer6539, varReplacer6538);

        $r26 = new java.lang.StringBuilder;

        varReplacer6510 = " commonResourcesPath:";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6510);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6614 = "Resurse";

        varReplacer6615 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6614, $r2, varReplacer6615);

        varReplacer6519 = "http.proxyHost";

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer6519);

        varReplacer6608 = "http.proxyPort";

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer6608);

        varReplacer6577 = "http.proxyUser";

        $r9 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer6577);

        varReplacer6610 = "http.proxyPassword";

        $r10 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer6610);

        if $r2 == null goto label47;

        varReplacer6604 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6604);

        if $z0 != 0 goto label47;

        r54 = new com.skobbler.ngx.SKProxySettings;

        $r20 = r54;

        specialinvoke r54.<com.skobbler.ngx.SKProxySettings: void <init>()>();

        if $r8 == null goto label10;

        varReplacer6504 = "";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6504);

        if $z0 != 0 goto label10;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        virtualinvoke $r20.<com.skobbler.ngx.SKProxySettings: void setPort(int)>($i0);

     label10:
        virtualinvoke $r20.<com.skobbler.ngx.SKProxySettings: void setIp(java.lang.String)>($r2);

        virtualinvoke $r20.<com.skobbler.ngx.SKProxySettings: void setAuthentication(java.lang.String,java.lang.String)>($r9, $r10);

     label11:
        if $r20 == null goto label49;

        $r2 = virtualinvoke $r20.<com.skobbler.ngx.SKProxySettings: java.lang.String getUser()>();

        varReplacer6625 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6625);

        if $z0 != 0 goto label48;

        $r2 = virtualinvoke $r20.<com.skobbler.ngx.SKProxySettings: java.lang.String getPassword()>();

        varReplacer6518 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6518);

        if $z0 != 0 goto label48;

        $z0 = 1;

     label12:
        $r2 = virtualinvoke $r20.<com.skobbler.ngx.SKProxySettings: java.lang.String getIp()>();

        $i0 = virtualinvoke $r20.<com.skobbler.ngx.SKProxySettings: int getPort()>();

        $r8 = virtualinvoke $r20.<com.skobbler.ngx.SKProxySettings: java.lang.String getUser()>();

        $r9 = virtualinvoke $r20.<com.skobbler.ngx.SKProxySettings: java.lang.String getPassword()>();

        varReplacer6552 = 0;

        varReplacer6553 = "";

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean setproxy(int,java.lang.String,java.lang.String,int,boolean,java.lang.String,java.lang.String)>(varReplacer6552, varReplacer6553, $r2, $i0, $z0, $r8, $r9);

     label13:
        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $l4 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: long getCacheLimit()>();

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean setcachelimit(long)>($l4);

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $i0 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: int getConnectivityMode()>();

        if $i0 != 1 goto label50;

        $z0 = 1;

     label14:
        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setonline(boolean)>($z0);

        $r14 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        varReplacer6588 = "phone";

        $r21 = virtualinvoke $r14.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer6588);

        $r22 = (android.telephony.TelephonyManager) $r21;

        $r2 = null;

     label15:
        varReplacer6631 = "wifi";

        $r21 = virtualinvoke $r14.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer6631);

     label16:
        $r23 = (android.net.wifi.WifiManager) $r21;

        if $r23 == null goto label21;

     label17:
        $r24 = virtualinvoke $r23.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

     label18:
        if $r24 == null goto label21;

     label19:
        $r24 = virtualinvoke $r23.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r8 = virtualinvoke $r24.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

     label20:
        $r0.<com.skobbler.ngx.SKMaps: java.lang.String f> = $r8;

     label21:
        if $r22 == null goto label86;

     label22:
        $r8 = virtualinvoke $r22.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label23:
        $r9 = virtualinvoke $r22.<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>();

     label24:
        $r2 = $r9;

     label25:
        $r10 = null;

     label26:
        $r25 = virtualinvoke $r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer6587 = "android_id";

        $r9 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r25, varReplacer6587);

        $r26 = new java.lang.StringBuilder;

        $r1 = $r26;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r11 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String f>;

        if $r11 == null goto label27;

        $r11 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String f>;

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i0 <= 0 goto label27;

        $r11 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String f>;

        $r11 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r11);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label27:
        varReplacer6603 = ";";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6603);

        if $r10 == null goto label73;

        $r2 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r10);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label28:
        varReplacer6511 = ";";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6511);

        if $r9 == null goto label29;

        varReplacer6627 = "9774d56d682e549c";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6627);

        if $z0 != 0 goto label29;

        $i0 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i0 <= 0 goto label29;

        $r2 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label29:
        r55 = new java.lang.StringBuilder;

        varReplacer6571 = "UID = ";

        specialinvoke r55.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6571);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6569 = "SKmaps";

        varReplacer6570 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6569, $r2, varReplacer6570);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<com.skobbler.ngx.SKMaps: java.lang.String g> = $r2;

        $r27 = newarray (java.lang.String)[5];

        $r28 = newarray (java.lang.String)[5];

        $r27[0] = "osName";

        $r27[1] = "osVer";

        $r27[2] = "appName";

        $r27[3] = "appVer";

        $r28[0] = "android";

        $r2 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r28[1] = $r2;

        $r14 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

     label30:
        $r29 = virtualinvoke $r14.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

     label31:
        $i0 = $r29.<android.content.pm.ApplicationInfo: int labelRes>;

        $r14 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

     label32:
        $r2 = virtualinvoke $r14.<android.content.Context: java.lang.String getString(int)>($i0);

     label33:
        $r14 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

     label34:
        $r30 = virtualinvoke $r14.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label35:
        $r14 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

     label36:
        $r8 = virtualinvoke $r14.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer6584 = 0;

        $r31 = virtualinvoke $r30.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r8, varReplacer6584);

     label37:
        $r8 = $r31.<android.content.pm.PackageInfo: java.lang.String versionName>;

        if $r8 != null goto label42;

        r56 = new com.skobbler.ngx.SKMapsInitializationException;

     label38:
        varReplacer6555 = " SKMaps was not initialized. Please add in AndroidManifest.xml  android:versionName !!!! ";

        specialinvoke r56.<com.skobbler.ngx.SKMapsInitializationException: void <init>(java.lang.String)>(varReplacer6555);

     label39:
        throw r56;

     label40:
        $r32 := @caughtexception;

     label41:
        r62 = (android.content.pm.PackageManager$NameNotFoundException) $r32;

        virtualinvoke r62.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

     label42:
        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: void setAppName(java.lang.String)>($r2);

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: void setAppVersion(java.lang.String)>($r8);

        $r28[2] = $r2;

        $r28[3] = $r8;

        $r27[4] = "uid";

        $r2 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String g>;

        $r28[4] = $r2;

        $i0 = 0;

     label43:
        if $i0 >= 5 goto label76;

        $r26 = new java.lang.StringBuilder;

        varReplacer6567 = "i =  ";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6567);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer6512 = " key = ";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6512);

        $r2 = $r27[$i0];

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer6520 = " , value = ";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6520);

        $r2 = $r28[$i0];

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6578 = "SKmaps";

        varReplacer6579 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6578, $r2, varReplacer6579);

        $i0 = $i0 + 1;

        goto label43;

     label44:
        $r5 = virtualinvoke $r4.<com.skobbler.ngx.map.SKMapViewStyle: com.skobbler.ngx.map.SKMapViewStyle$SKMapStyleDetail getStyleDetail()>();

        goto label02;

     label45:
        $i0 = 67108864;

        goto label08;

     label46:
        $r13 = virtualinvoke $r4.<com.skobbler.ngx.map.SKMapViewStyle: com.skobbler.ngx.map.SKMapViewStyle$SKDisplayDensity getDisplayPixelDensity()>();

        goto label09;

     label47:
        $r26 = new java.lang.StringBuilder;

        varReplacer6629 = "found proxyUser: ";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6629);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer6585 = ", proxyPassword: ";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6585);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6560 = "SKmaps";

        varReplacer6561 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6560, $r2, varReplacer6561);

        $r20 = null;

        goto label11;

     label48:
        $z0 = 0;

        goto label12;

     label49:
        varReplacer6522 = 0;

        varReplacer6523 = 0;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean enableproxy(int,boolean)>(varReplacer6522, varReplacer6522);

        goto label13;

     label50:
        $z0 = 0;

        goto label14;

     label51:
        $r33 := @caughtexception;

        varReplacer6556 = "SKmaps";

        varReplacer6557 = "The app doesn\'t have android.permission.ACCESS_WIFI_STATE in manifest";

        varReplacer6558 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6556, varReplacer6557, varReplacer6558);

        goto label21;

     label52:
        $r34 := @caughtexception;

        $r8 = null;

     label53:
        $r26 = new java.lang.StringBuilder;

        varReplacer6602 = " SecurityException ";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6602);

        r63 = (java.lang.SecurityException) $r34;

        $r9 = virtualinvoke r63.<java.lang.SecurityException: java.lang.String getLocalizedMessage()>();

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6580 = "SKmaps";

        varReplacer6581 = 2;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6580, $r9, varReplacer6581);

        $r26 = new java.lang.StringBuilder;

        $r1 = $r26;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

     label54:
        $r9 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>($r9);

        varReplacer6592 = "/.Common/";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6592);

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label55:
        $r38 = new java.io.File;

        $r35 = $r38;

        $r26 = new java.lang.StringBuilder;

        $r1 = $r26;

     label56:
        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer6544 = "/.randomId.txt";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6544);

        $r9 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<java.io.File: void <init>(java.lang.String)>($r9);

        $z0 = virtualinvoke $r35.<java.io.File: boolean exists()>();

     label57:
        if $z0 != 0 goto label66;

     label58:
        $r36 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r9 = virtualinvoke $r36.<java.util.UUID: java.lang.String toString()>();

     label59:
        $r10 = $r9;

        r57 = new java.io.FileWriter;

        $r37 = r57;

     label60:
        $r38 = virtualinvoke $r35.<java.io.File: java.io.File getAbsoluteFile()>();

        specialinvoke r57.<java.io.FileWriter: void <init>(java.io.File)>($r38);

     label61:
        r58 = new java.io.BufferedWriter;

        $r39 = r58;

     label62:
        specialinvoke r58.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r37);

        virtualinvoke $r39.<java.io.BufferedWriter: void write(java.lang.String)>($r9);

        virtualinvoke $r39.<java.io.BufferedWriter: void close()>();

        virtualinvoke $r35.<java.io.File: boolean createNewFile()>();

     label63:
        goto label26;

     label64:
        $r40 := @caughtexception;

     label65:
        r64 = (java.io.IOException) $r40;

        virtualinvoke r64.<java.io.IOException: void printStackTrace()>();

        varReplacer6597 = "SKmaps";

        varReplacer6598 = "Failed installing files";

        varReplacer6599 = 2;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6597, varReplacer6598, varReplacer6599);

        goto label26;

     label66:
        r59 = new java.io.FileReader;

        $r41 = r59;

     label67:
        specialinvoke r59.<java.io.FileReader: void <init>(java.io.File)>($r35);

     label68:
        r60 = new java.io.BufferedReader;

        $r42 = r60;

     label69:
        specialinvoke r60.<java.io.BufferedReader: void <init>(java.io.Reader)>($r41);

        $r9 = virtualinvoke $r42.<java.io.BufferedReader: java.lang.String readLine()>();

     label70:
        $r10 = $r9;

     label71:
        virtualinvoke $r41.<java.io.FileReader: void close()>();

     label72:
        goto label26;

     label73:
        if $r8 == null goto label74;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i0 <= 0 goto label74;

        $r8 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r8);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label74:
        varReplacer6609 = ";";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6609);

        if $r2 == null goto label28;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label28;

        $r2 = staticinvoke <com.skobbler.ngx.SKMaps: java.lang.String a(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        goto label28;

     label75:
        $r43 := @caughtexception;

        r65 = (android.content.res.Resources$NotFoundException) $r43;

        virtualinvoke r65.<android.content.res.Resources$NotFoundException: void printStackTrace()>();

        r56 = new com.skobbler.ngx.SKMapsInitializationException;

        varReplacer6583 = " SKMaps was not initialized. Please add in strings.xml app_name key !!!! ";

        specialinvoke r56.<com.skobbler.ngx.SKMapsInitializationException: void <init>(java.lang.String)>(varReplacer6583);

        throw r56;

     label76:
        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setrequestparameters(java.lang.String[],java.lang.String[])>($r27, $r28);

        staticinvoke <com.skobbler.ngx.versioning.SKVersioningManager: com.skobbler.ngx.versioning.SKVersioningManager getInstance()>();

        varReplacer6524 = 3;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean updatemapversion(int)>(varReplacer6524);

        $r14 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r2 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getAppName()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r8 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getAppVersion()>();

        $r9 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String g>;

        r61 = new android.util.DisplayMetrics;

        specialinvoke r61.<android.util.DisplayMetrics: void <init>()>();

        varReplacer6586 = "window";

        $r21 = virtualinvoke $r14.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer6586);

        $r44 = (android.view.WindowManager) $r21;

        $r45 = interfaceinvoke $r44.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r45.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r61);

        $r45 = interfaceinvoke $r44.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $i0 = virtualinvoke $r45.<android.view.Display: int getRotation()>();

        lookupswitch($i0)
        {
            case 0: goto label79;
            case 1: goto label80;
            case 2: goto label81;
            case 3: goto label82;
            default: goto label77;
        };

     label77:
        $r46 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType UNKNOWN>;

        $i0 = virtualinvoke $r46.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

     label78:
        $r10 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r11 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r17 = <android.os.Build: java.lang.String MODEL>;

        $r47 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r18 = virtualinvoke $r47.<java.util.Locale: java.lang.String getLanguage()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r19 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        $r26 = new java.lang.StringBuilder;

        varReplacer6611 = "INITIALIZE FCD  accountKey=";

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6611);

        varReplacer6616 = "";

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6616);

        varReplacer6516 = " locale= ";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6516);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        varReplacer6600 = " macAddress=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6600);

        $r48 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String f>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        varReplacer6554 = " osName=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6554);

        varReplacer6621 = "android";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6621);

        varReplacer6565 = " osVersion=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6565);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        varReplacer6590 = " deviceMaker =";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6590);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        varReplacer6574 = " deviceModel=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6574);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        varReplacer6513 = " orientation= ";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6513);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer6589 = "  appid=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6589);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer6582 = " appName=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6582);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer6550 = " appVersion=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6550);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        varReplacer6622 = " serverUrl=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6622);

        varReplacer6546 = "http://tor.skobbler.net/tor";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6546);

        $r48 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6605 = "SKmaps";

        varReplacer6606 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6605, $r48, varReplacer6606);

        $r48 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String g>;

        varReplacer6562 = "";

        varReplacer6563 = "http://tor.skobbler.net/tor";

        varReplacer6564 = "android";

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void initfcd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(varReplacer6562, $r18, $r19, varReplacer6563, $r48, varReplacer6564, $r10, $r11, $r17, $i0, $r9, $r2, $r8);

        $r49 = staticinvoke <com.skobbler.ngx.routing.SKRouteManager: com.skobbler.ngx.routing.SKRouteManager getInstance()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r6 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: com.skobbler.ngx.navigation.SKAdvisorSettings getAdvisorSettings()>();

        virtualinvoke $r49.<com.skobbler.ngx.routing.SKRouteManager: boolean setAdvisorSettings(com.skobbler.ngx.navigation.SKAdvisorSettings)>($r6);

        varReplacer6617 = "SKmaps";

        varReplacer6618 = "PASSED INITALIZE WITH SETTINGS";

        varReplacer6619 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6617, varReplacer6618, varReplacer6619);

        varReplacer6620 = 1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void a(boolean)>(varReplacer6620);

        return;

     label79:
        $r46 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType PORTRAIT>;

        $i0 = virtualinvoke $r46.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

        goto label78;

     label80:
        $r46 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType LANDSCAPE_RIGHT>;

        $i0 = virtualinvoke $r46.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

        goto label78;

     label81:
        $r46 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType PORTRAIT_UPSIDEDOWN>;

        $i0 = virtualinvoke $r46.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

        goto label78;

     label82:
        $r46 = <com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType LANDSCAPE_LEFT>;

        $i0 = virtualinvoke $r46.<com.skobbler.ngx.map.SKMapSurfaceView$SKOrientationType: int getValue()>();

        goto label78;

     label83:
        $r50 := @caughtexception;

        $r8 = "";

        $r32 = $r50;

        goto label41;

     label84:
        $r51 := @caughtexception;

        $r40 = $r51;

        $r10 = null;

        goto label65;

     label85:
        $r34 := @caughtexception;

        goto label53;

     label86:
        $r2 = null;

        $r8 = null;

        goto label25;

     label87:
        goto label03;

     label88:
        goto label01;

        catch java.lang.SecurityException from label15 to label16 with label51;
        catch java.lang.SecurityException from label17 to label18 with label51;
        catch java.lang.SecurityException from label19 to label20 with label51;
        catch java.lang.SecurityException from label22 to label23 with label52;
        catch java.lang.SecurityException from label23 to label24 with label85;
        catch android.content.res.Resources$NotFoundException from label30 to label31 with label75;
        catch android.content.res.Resources$NotFoundException from label32 to label33 with label75;
        catch android.content.pm.PackageManager$NameNotFoundException from label34 to label35 with label83;
        catch android.content.pm.PackageManager$NameNotFoundException from label36 to label37 with label83;
        catch android.content.pm.PackageManager$NameNotFoundException from label38 to label39 with label40;
        catch java.io.IOException from label54 to label55 with label84;
        catch java.io.IOException from label56 to label57 with label84;
        catch java.io.IOException from label58 to label59 with label84;
        catch java.io.IOException from label60 to label61 with label64;
        catch java.io.IOException from label62 to label63 with label64;
        catch java.io.IOException from label67 to label68 with label84;
        catch java.io.IOException from label69 to label70 with label84;
        catch java.io.IOException from label71 to label72 with label64;
    }

    private void a(boolean)
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0;
        com.skobbler.ngx.SKMapsInitializationListener $r1;
        null_type varReplacer4131, varReplacer4132;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 := @parameter0: boolean;

        $r1 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitializationListener i>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitializationListener i>;

        interfaceinvoke $r1.<com.skobbler.ngx.SKMapsInitializationListener: void onLibraryInitialized(boolean)>($z0);

     label1:
        varReplacer4132 = null;

        $r0.<com.skobbler.ngx.SKMaps: android.content.Context j> = varReplacer4132;

        varReplacer4131 = null;

        $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitializationListener i> = varReplacer4131;

        return;
    }

    private static long b(java.lang.String)
    {
        java.lang.String $r0, varReplacer4090, varReplacer4091, varReplacer4093, varReplacer4095, varReplacer4096, varReplacer4097, varReplacer4098;
        android.os.StatFs $r1, r13;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r4;
        java.lang.Object[] $r5;
        java.lang.Object $r6;
        java.lang.Long $r7;
        long $l0, $l2, varReplacer4100;
        java.lang.Throwable $r8, $r10, $r11, $r12;
        java.lang.StringBuilder $r9, r14;
        int $i1, varReplacer4092, varReplacer4094, varReplacer4099;
        java.lang.NoSuchMethodException r15;

        nop;

        $r0 := @parameter0: java.lang.String;

        r13 = new android.os.StatFs;

     label01:
        specialinvoke r13.<android.os.StatFs: void <init>(java.lang.String)>($r0);

     label02:
        $r1 = r13;

     label03:
        if $r1 == null goto label19;

     label04:
        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

     label05:
        $r3 = newarray (java.lang.Class)[0];

     label06:
        varReplacer4095 = "getAvailableBytes";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(varReplacer4095, $r3);

     label07:
        if $r4 == null goto label18;

     label08:
        varReplacer4090 = "SKmaps";

        varReplacer4091 = "Using new API for getAvailableMemorySize method !!!";

        varReplacer4092 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer4090, varReplacer4091, varReplacer4092);

     label09:
        $r5 = newarray (java.lang.Object)[0];

     label10:
        $r6 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r5);

     label11:
        $r7 = (java.lang.Long) $r6;

     label12:
        $l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

     label13:
        return $l0;

     label14:
        $r8 := @caughtexception;

        r14 = new java.lang.StringBuilder;

        varReplacer4096 = "Exception when creating StatF ; message = ";

        specialinvoke r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4096);

        $r9 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4093 = "SKmaps";

        varReplacer4094 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer4093, $r0, varReplacer4094);

        $r1 = null;

        goto label03;

     label15:
        $r10 := @caughtexception;

        r14 = new java.lang.StringBuilder;

        varReplacer4097 = "Exception at getAvailableMemorySize method = ";

        specialinvoke r14.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4097);

        r15 = (java.lang.NoSuchMethodException) $r10;

        $r0 = virtualinvoke r15.<java.lang.NoSuchMethodException: java.lang.String getMessage()>();

        $r9 = virtualinvoke r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4098 = "SKmaps";

        varReplacer4099 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer4098, $r0, varReplacer4099);

        $r4 = null;

        goto label07;

     label16:
        $r11 := @caughtexception;

        $i1 = virtualinvoke $r1.<android.os.StatFs: int getAvailableBlocks()>();

        $l0 = (long) $i1;

        $i1 = virtualinvoke $r1.<android.os.StatFs: int getBlockSize()>();

        $l2 = (long) $i1;

        $l0 = $l0 * $l2;

        return $l0;

     label17:
        $r12 := @caughtexception;

        $i1 = virtualinvoke $r1.<android.os.StatFs: int getAvailableBlocks()>();

        $l0 = (long) $i1;

        $i1 = virtualinvoke $r1.<android.os.StatFs: int getBlockSize()>();

        $l2 = (long) $i1;

        $l0 = $l0 * $l2;

        return $l0;

     label18:
        $i1 = virtualinvoke $r1.<android.os.StatFs: int getAvailableBlocks()>();

        $l0 = (long) $i1;

        $i1 = virtualinvoke $r1.<android.os.StatFs: int getBlockSize()>();

        $l2 = (long) $i1;

        $l0 = $l0 * $l2;

        return $l0;

     label19:
        varReplacer4100 = 0L;

        return varReplacer4100;

        catch java.lang.IllegalArgumentException from label01 to label02 with label14;
        catch java.lang.NoSuchMethodException from label04 to label05 with label15;
        catch java.lang.NoSuchMethodException from label06 to label07 with label15;
        catch java.lang.IllegalAccessException from label08 to label09 with label16;
        catch java.lang.IllegalAccessException from label10 to label11 with label16;
        catch java.lang.IllegalAccessException from label12 to label13 with label16;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label17;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label17;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label17;
    }

    private com.skobbler.ngx.SKMapsDownloadListener b()
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.Object $r1;
        java.lang.ref.SoftReference $r2;
        com.skobbler.ngx.SKMapsDownloadListener $r3;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r2 = $r0.<com.skobbler.ngx.SKMaps: java.lang.ref.SoftReference e>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.skobbler.ngx.SKMaps: java.lang.ref.SoftReference e>;

        $r1 = virtualinvoke $r2.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r3 = (com.skobbler.ngx.SKMapsDownloadListener) $r1;

        return $r3;

     label1:
        return null;
    }

    private void downloadcallback(boolean, boolean)
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0, $z1;
        com.skobbler.ngx.SKMaps$1 $r1;
        com.skobbler.ngx.SKMapsDownloadListener $r2;
        android.os.Handler $r3;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        $r2 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsDownloadListener b()>();

        if $r2 == null goto label1;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: android.os.Handler h>;

        $r1 = new com.skobbler.ngx.SKMaps$1;

        specialinvoke $r1.<com.skobbler.ngx.SKMaps$1: void <init>(com.skobbler.ngx.SKMaps,boolean,boolean)>($r0, $z0, $z1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

     label1:
        return;
    }

    private native boolean enableproxy(int, boolean);

    private native boolean finalizelibrary();

    public static com.skobbler.ngx.SKMaps getInstance()
    {
        com.skobbler.ngx.SKMaps $r0;

        nop;

        $r0 = <com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMaps a>;

        if $r0 != null goto label1;

        $r0 = new com.skobbler.ngx.SKMaps;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void <init>()>();

        <com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMaps a> = $r0;

     label1:
        $r0 = <com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMaps a>;

        return $r0;
    }

    private native int getdefaultmaprepokey();

    private native java.lang.String getdeveloperkey();

    private native boolean getonline();

    private native void init(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, float, int, int, boolean, int, boolean, int, java.lang.String, int, java.lang.String, int, int, int, java.lang.String, boolean, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);

    private native void initadvisor(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String);

    private native void initfcd(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String);

    private native void registercoredump(java.lang.String);

    private native int revisionnumber();

    private native boolean setcachelimit(long);

    private native void setdeveloperkey(java.lang.String);

    private native int setdownloadcallbacks(java.lang.String, java.lang.String);

    private native void setneedonlineconnectiondelay(int);

    private native void setonline(boolean);

    private native boolean setproxy(int, java.lang.String, java.lang.String, int, boolean, java.lang.String, java.lang.String);

    private native void setrequestparameters(java.lang.String[], java.lang.String[]);

    private native int unzipfile(java.lang.String, java.lang.String);

    private native boolean updatemapversion(int);

    public final void destroySKMaps()
    {
        com.skobbler.ngx.SKMaps $r0;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = 0;

        return;
    }

    public final void enableProxy(boolean)
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0, $z1;
        com.skobbler.ngx.SKMapsInitializationException $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 := @parameter0: boolean;

        $z1 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z1 == 0 goto label1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean enableproxy(int,boolean)>(0, $z0);

        return;

     label1:
        $r1 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r1.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r1;
    }

    public final boolean finalizeLibrary()
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean finalizelibrary()>();

        return $z0;

     label1:
        return 0;
    }

    public final java.lang.String getApiKey()
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        r1 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String c>;

        return r1;
    }

    public final byte getConnectivityMode()
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0;
        com.skobbler.ngx.SKMapsInitializationException $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label2;

        $z0 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean getonline()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 2;

     label2:
        $r1 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r1.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r1;
    }

    public final com.skobbler.ngx.SKMapsInitSettings getMapInitSettings()
    {
        com.skobbler.ngx.SKMaps $r0;
        com.skobbler.ngx.SKMapsInitSettings r1;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        r1 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        return r1;
    }

    public final java.lang.String getObfuscatedApiKey()
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: java.lang.String getdeveloperkey()>();

        return $r1;
    }

    public final java.lang.String getSDKVersion()
    {
        com.skobbler.ngx.SKMaps $r0;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        return "3.0";
    }

    public final java.lang.String getUserId()
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        r1 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String g>;

        return r1;
    }

    public final void initializeSKMaps(android.app.Application, com.skobbler.ngx.SKMapsInitializationListener)
    {
        com.skobbler.ngx.SKMaps $r0;
        android.app.Application $r1;
        com.skobbler.ngx.SKMapsInitializationListener $r2;
        null_type varReplacer4041;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: android.app.Application;

        $r2 := @parameter1: com.skobbler.ngx.SKMapsInitializationListener;

        varReplacer4041 = null;

        virtualinvoke $r0.<com.skobbler.ngx.SKMaps: void initializeSKMaps(android.app.Application,com.skobbler.ngx.SKMapsInitializationListener,com.skobbler.ngx.SKMapsInitSettings)>($r1, $r2, varReplacer4041);

        return;
    }

    public final void initializeSKMaps(android.app.Application, com.skobbler.ngx.SKMapsInitializationListener, com.skobbler.ngx.SKMapsInitSettings)
    {
        com.skobbler.ngx.SKMaps $r0;
        android.app.Application $r1;
        com.skobbler.ngx.SKMapsInitializationListener $r2;
        com.skobbler.ngx.SKMapsInitSettings $r3, r18;
        java.lang.String $r4, $r5, $r14, varReplacer4042, varReplacer4047, varReplacer4048, varReplacer4050, varReplacer4051, varReplacer4056, varReplacer4057, varReplacer4058, varReplacer4060, varReplacer4063, varReplacer4064, varReplacer4065, varReplacer4067, varReplacer4068, varReplacer4073, varReplacer4076;
        boolean $z0;
        android.content.pm.PackageManager $r6;
        android.content.pm.ApplicationInfo $r7;
        android.os.Bundle $r8;
        java.lang.Throwable $r9;
        android.content.Context $r10;
        android.content.SharedPreferences $r11;
        java.lang.StringBuilder $r12, r19;
        java.io.File $r13;
        long $l0;
        byte $b1;
        android.content.SharedPreferences$Editor $r15;
        com.skobbler.ngx.SKMapsInitializationException r16;
        com.skobbler.ngx.SKDeveloperKeyException r17;
        com.skobbler.ngx.SKPrepareMapTextureThread r20;
        android.content.pm.PackageManager$NameNotFoundException r21;
        int varReplacer4043, varReplacer4044, varReplacer4046, varReplacer4049, varReplacer4052, varReplacer4053, varReplacer4054, varReplacer4055, varReplacer4059, varReplacer4061, varReplacer4066, varReplacer4069, varReplacer4074, varReplacer4075;
        null_type varReplacer4045, varReplacer4062, varReplacer4070, varReplacer4071, varReplacer4072;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: android.app.Application;

        $r2 := @parameter1: com.skobbler.ngx.SKMapsInitializationListener;

        $r3 := @parameter2: com.skobbler.ngx.SKMapsInitSettings;

        $r4 = null;

        $z0 = $r0.<com.skobbler.ngx.SKMaps: boolean b>;

        if $z0 != 0 goto label21;

        varReplacer4054 = 1;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = varReplacer4054;

        if $r1 != null goto label01;

        varReplacer4055 = 0;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = varReplacer4055;

        r16 = new com.skobbler.ngx.SKMapsInitializationException;

        varReplacer4047 = " SKMaps was not initialized. Please provide a valid Context !!!! ";

        specialinvoke r16.<com.skobbler.ngx.SKMapsInitializationException: void <init>(java.lang.String)>(varReplacer4047);

        throw r16;

     label01:
        $r5 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String c>;

        if $r5 != null goto label11;

     label02:
        $r6 = virtualinvoke $r1.<android.app.Application: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke $r1.<android.app.Application: java.lang.String getPackageName()>();

        varReplacer4075 = 128;

        $r7 = virtualinvoke $r6.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r5, varReplacer4075);

     label03:
        $r8 = $r7.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r8 == null goto label14;

     label04:
        varReplacer4057 = "com.skobbler.ngx.API_KEY";

        $r5 = virtualinvoke $r8.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer4057);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

     label05:
        if $z0 == 0 goto label09;

        varReplacer4044 = 0;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = varReplacer4044;

        r17 = new com.skobbler.ngx.SKDeveloperKeyException;

     label06:
        specialinvoke r17.<com.skobbler.ngx.SKDeveloperKeyException: void <init>()>();

     label07:
        throw r17;

     label08:
        $r9 := @caughtexception;

        r21 = (android.content.pm.PackageManager$NameNotFoundException) $r9;

        $r4 = virtualinvoke r21.<android.content.pm.PackageManager$NameNotFoundException: java.lang.String getMessage()>();

        varReplacer4073 = "SKmaps";

        varReplacer4074 = 2;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer4073, $r4, varReplacer4074);

        varReplacer4046 = 0;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = varReplacer4046;

        r17 = new com.skobbler.ngx.SKDeveloperKeyException;

        specialinvoke r17.<com.skobbler.ngx.SKDeveloperKeyException: void <init>()>();

        throw r17;

     label09:
        $r0.<com.skobbler.ngx.SKMaps: java.lang.String c> = $r5;

        $r5 = $r0.<com.skobbler.ngx.SKMaps: java.lang.String c>;

     label10:
        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setdeveloperkey(java.lang.String)>($r5);

     label11:
        $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitializationListener i> = $r2;

        $r0.<com.skobbler.ngx.SKMaps: android.content.Context j> = $r1;

        $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d> = $r3;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        if $r3 != null goto label12;

        r18 = new com.skobbler.ngx.SKMapsInitSettings;

        specialinvoke r18.<com.skobbler.ngx.SKMapsInitSettings: void <init>()>();

        $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d> = r18;

     label12:
        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r5 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        varReplacer4042 = "comSkobblerNgxPrefsName";

        varReplacer4043 = 0;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer4042, varReplacer4043);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label20;

        r19 = new java.lang.StringBuilder;

        $r12 = r19;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r13 = staticinvoke <android.os.Environment: java.io.File getDataDirectory()>();

        $r5 = virtualinvoke $r13.<java.io.File: java.lang.String getPath()>();

        $l0 = staticinvoke <com.skobbler.ngx.SKMaps: long b(java.lang.String)>($r5);

        $b1 = $l0 cmp 52428800L;

        if $b1 < 0 goto label17;

        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        $r13 = virtualinvoke $r10.<android.content.Context: java.io.File getFilesDir()>();

        if $r13 == null goto label18;

        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        $r13 = virtualinvoke $r10.<android.content.Context: java.io.File getFilesDir()>();

        $r4 = virtualinvoke $r13.<java.io.File: java.lang.String getPath()>();

     label13:
        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer4076 = "/SKMaps/";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4076);

        $r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4048 = "comSkobblerNgxMapResourcesPathKey";

        $r4 = interfaceinvoke $r11.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer4048, $r4);

        $r5 = $r4;

        r19 = new java.lang.StringBuilder;

        varReplacer4056 = "Determines the path that is suitable for installing the library";

        specialinvoke r19.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4056);

        $r12 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4058 = "SKmaps";

        varReplacer4059 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer4058, $r14, varReplacer4059);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label20;

        varReplacer4061 = 0;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = varReplacer4061;

        r16 = new com.skobbler.ngx.SKMapsInitializationException;

        varReplacer4060 = " SKMaps was not initialized. Please provide a valid path for the map resources !!!! ";

        specialinvoke r16.<com.skobbler.ngx.SKMapsInitializationException: void <init>(java.lang.String)>(varReplacer4060);

        throw r16;

     label14:
        varReplacer4049 = 0;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = varReplacer4049;

        r17 = new com.skobbler.ngx.SKDeveloperKeyException;

     label15:
        specialinvoke r17.<com.skobbler.ngx.SKDeveloperKeyException: void <init>()>();

     label16:
        throw r17;

     label17:
        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        varReplacer4070 = null;

        $r13 = virtualinvoke $r10.<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>(varReplacer4070);

        if $r13 == null goto label18;

        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        varReplacer4045 = null;

        $r13 = virtualinvoke $r10.<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>(varReplacer4045);

        $r5 = virtualinvoke $r13.<java.io.File: java.lang.String toString()>();

        $l0 = staticinvoke <com.skobbler.ngx.SKMaps: long b(java.lang.String)>($r5);

        $b1 = $l0 cmp 52428800L;

        if $b1 < 0 goto label18;

        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        varReplacer4071 = null;

        $r13 = virtualinvoke $r10.<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>(varReplacer4071);

        $r4 = virtualinvoke $r13.<java.io.File: java.lang.String toString()>();

        goto label13;

     label18:
        varReplacer4067 = "SKmaps";

        varReplacer4068 = "There is not enough memory on any storage, but return internal memory";

        varReplacer4069 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer4067, varReplacer4068, varReplacer4069);

        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        $r13 = virtualinvoke $r10.<android.content.Context: java.io.File getFilesDir()>();

        if $r13 == null goto label19;

        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        $r13 = virtualinvoke $r10.<android.content.Context: java.io.File getFilesDir()>();

        $r4 = virtualinvoke $r13.<java.io.File: java.lang.String getPath()>();

        goto label13;

     label19:
        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        varReplacer4072 = null;

        $r13 = virtualinvoke $r10.<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>(varReplacer4072);

        if $r13 == null goto label13;

        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        varReplacer4062 = null;

        $r13 = virtualinvoke $r10.<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>(varReplacer4062);

        $r4 = virtualinvoke $r13.<java.io.File: java.lang.String toString()>();

        goto label13;

     label20:
        $r15 = interfaceinvoke $r11.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer4063 = "comSkobblerNgxMapResourcesPathKey";

        interfaceinvoke $r15.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer4063, $r5);

        interfaceinvoke $r15.<android.content.SharedPreferences$Editor: boolean commit()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: void setMapResourcesPath(java.lang.String)>($r5);

        varReplacer4064 = "SKmaps";

        varReplacer4065 = " Lib not initialized - start SKPrepareMapTextureThread ";

        varReplacer4066 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer4064, varReplacer4065, varReplacer4066);

        r20 = new com.skobbler.ngx.SKPrepareMapTextureThread;

        $r10 = $r0.<com.skobbler.ngx.SKMaps: android.content.Context j>;

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r4 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesPath()>();

        $r3 = $r0.<com.skobbler.ngx.SKMaps: com.skobbler.ngx.SKMapsInitSettings d>;

        $r5 = virtualinvoke $r3.<com.skobbler.ngx.SKMapsInitSettings: java.lang.String getMapResourcesZipFileName()>();

        specialinvoke r20.<com.skobbler.ngx.SKPrepareMapTextureThread: void <init>(android.content.Context,java.lang.String,java.lang.String,com.skobbler.ngx.SKPrepareMapTextureListener)>($r10, $r4, $r5, $r0);

        virtualinvoke r20.<com.skobbler.ngx.SKPrepareMapTextureThread: void start()>();

        return;

     label21:
        varReplacer4050 = "SKmaps";

        varReplacer4051 = " Lib initialized";

        varReplacer4052 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer4050, varReplacer4051, varReplacer4052);

        varReplacer4053 = 1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void a(boolean)>(varReplacer4053);

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label02 to label03 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label04 to label05 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label10 to label11 with label08;
        catch android.content.pm.PackageManager$NameNotFoundException from label15 to label16 with label08;
    }

    public final boolean isSKMapsInitialized()
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean z0;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        z0 = $r0.<com.skobbler.ngx.SKMaps: boolean b>;

        return z0;
    }

    public final void onMapTexturesPrepared(boolean)
    {
        com.skobbler.ngx.SKMaps $r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, varReplacer6500, varReplacer6502;
        int varReplacer6501, varReplacer6503;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $z0 := @parameter0: boolean;

        $r1 = new java.lang.StringBuilder;

        varReplacer6502 = "onMapTexturesPrepared - ";

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer6502);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6500 = "SKmaps";

        varReplacer6501 = 0;

        staticinvoke <com.skobbler.ngx.util.SKLogging: void writeLog(java.lang.String,java.lang.String,int)>(varReplacer6500, $r2, varReplacer6501);

        if $z0 != 0 goto label1;

        $r0.<com.skobbler.ngx.SKMaps: boolean b> = $z0;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void a(boolean)>($z0);

        return;

     label1:
        varReplacer6503 = 0;

        <com.skobbler.ngx.SKMaps: boolean updateToLatestSDKVersion> = varReplacer6503;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void a()>();

        return;
    }

    public final void setApiKey(java.lang.String)
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.skobbler.ngx.SKMaps: java.lang.String c> = $r1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setdeveloperkey(java.lang.String)>($r1);

        return;
    }

    public final void setConnectivityMode(byte)
    {
        com.skobbler.ngx.SKMaps $r0;
        byte $b0;
        boolean $z0;
        com.skobbler.ngx.SKMapsInitializationException $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $b0 := @parameter0: byte;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label2;

        if $b0 != 1 goto label1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setonline(boolean)>(1);

        return;

     label1:
        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setonline(boolean)>(0);

        return;

     label2:
        $r1 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r1.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r1;
    }

    public final void setDownloadListener(com.skobbler.ngx.SKMapsDownloadListener)
    {
        com.skobbler.ngx.SKMaps $r0;
        com.skobbler.ngx.SKMapsDownloadListener $r1;
        java.lang.ref.SoftReference $r2;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: com.skobbler.ngx.SKMapsDownloadListener;

        $r0.<com.skobbler.ngx.SKMaps: java.lang.ref.SoftReference e> = null;

        if $r1 == null goto label1;

        $r2 = new java.lang.ref.SoftReference;

        specialinvoke $r2.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>($r1);

        $r0.<com.skobbler.ngx.SKMaps: java.lang.ref.SoftReference e> = $r2;

        return;

     label1:
        $r0.<com.skobbler.ngx.SKMaps: java.lang.ref.SoftReference e> = null;

        return;
    }

    public final void setOnlineConnectionNotificationDelay(int)
    {
        com.skobbler.ngx.SKMaps $r0;
        int $i0;
        boolean $z0;
        com.skobbler.ngx.SKMapsInitializationException $r1;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $i0 := @parameter0: int;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label1;

        specialinvoke $r0.<com.skobbler.ngx.SKMaps: void setneedonlineconnectiondelay(int)>($i0);

        return;

     label1:
        $r1 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r1.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r1;
    }

    public final boolean setProxy(com.skobbler.ngx.SKProxySettings)
    {
        com.skobbler.ngx.SKMaps $r0;
        com.skobbler.ngx.SKProxySettings $r1;
        boolean $z0;
        java.lang.String $r2, $r3, $r4, $r5;
        int $i0, $i1;
        com.skobbler.ngx.SKMapsInitializationException $r6;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: com.skobbler.ngx.SKProxySettings;

        $z0 = virtualinvoke $r0.<com.skobbler.ngx.SKMaps: boolean isSKMapsInitialized()>();

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getUser()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getPassword()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        $i0 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: int getProxyType()>();

        $r2 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getMask()>();

        $r3 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getIp()>();

        $i1 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: int getPort()>();

        $r4 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getUser()>();

        $r5 = virtualinvoke $r1.<com.skobbler.ngx.SKProxySettings: java.lang.String getPassword()>();

        $z0 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: boolean setproxy(int,java.lang.String,java.lang.String,int,boolean,java.lang.String,java.lang.String)>($i0, $r2, $r3, $i1, $z0, $r4, $r5);

        return $z0;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $r6 = new com.skobbler.ngx.SKMapsInitializationException;

        specialinvoke $r6.<com.skobbler.ngx.SKMapsInitializationException: void <init>()>();

        throw $r6;
    }

    public final int unzipFile(java.lang.String, java.lang.String)
    {
        com.skobbler.ngx.SKMaps $r0;
        java.lang.String $r1, $r2;
        int $i0;

        nop;

        $r0 := @this: com.skobbler.ngx.SKMaps;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $i0 = specialinvoke $r0.<com.skobbler.ngx.SKMaps: int unzipfile(java.lang.String,java.lang.String)>($r1, $r2);

        return $i0;
    }
}
