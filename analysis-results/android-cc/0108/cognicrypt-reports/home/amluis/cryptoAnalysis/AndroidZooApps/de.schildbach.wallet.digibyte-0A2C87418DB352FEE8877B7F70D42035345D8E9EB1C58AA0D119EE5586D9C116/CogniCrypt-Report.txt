Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r26
		Type: java.security.MessageDigest
		Statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4894)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 9851b652515d6b73df9e03718e547fae29a588fe02ea5d7a60dc04379381c253
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.bitcoin.crypto.KeyCrypterScrypt: void <clinit>()>
		SHA-256: fdba3ff09a29f7bd6f734efc4217ade56b46c6431eddfac7a2866238eec414d5
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r4, varReplacer6405)
		Method: <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>
		SHA-256: b0c2a605813179e0c97f7ac9fe78b27a49d5cf8666649fb9cffaa83f8e20a851
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 42405f43c07d0cd9ac87f0e4cabacd6c6d8859ff772f57160ec37ce6ebdf0f30
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3478)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 35367c72a25cdfcfea066a2fb6d5c9ff22b976357eb4f5b812eee2c4ae78e4c3
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: c802f952b3f7fbd04b9e61c85189101cdaa4ba6bbac327aa4fbf07b49ff3fc88
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6315)
		Method: <com.hashengineering.crypto.Skein: void <clinit>()>
		SHA-256: 1fcac43f4c6d1c7c690fbb7fb7247e5541129246af04914104a2bb0717d42bb
		Secure: true
	Object:
		Variable: $r26
		Type: java.security.MessageDigest
		Statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4937)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 908438e682ae5e45a1a33ce3e148b3767232147c345ef291124c2677b5315815
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>
		SHA-256: 546d290a2432772f7d77fd096aafe14fd3233a466aced47ca28eb87d03674bd9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r3.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r2, $r11)
		Method: <com.google.bitcoin.core.CheckpointManager: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)>
		SHA-256: b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer670)
		Method: <com.google.bitcoin.core.Utils: void <clinit>()>
		SHA-256: 76f69f9dae03e999ea278c9e6d5f0c8fb8c1671ec093d001f2135218d93a59e4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2435)
		Method: <com.google.bitcoin.core.Utils: byte[] sha256hash160(byte[])>
		SHA-256: 50d0b04e9e256c5a51c65c3369bfeafb671bf59d8666456f49f6c84fcbcd9c24
		Secure: true
	Object:
		Variable: varReplacer6402
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6402)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: 567e20648b0aa0c65f7282ead6e687336a22ef71b56dbe011c02d02ba88e500e
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3782)
		Method: <com.google.bitcoin.core.CheckpointManager: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)>
		SHA-256: 23dcbbec612e5b6df07ba442047ff6fe68aae922ad3347e9bf60a789a0a7cc50
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6403)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: 366c2e7c35845b37d3032f0de95340b2fa96df1f0167715975faa66e4da7258c
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3471)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>
		SHA-256: 688d985507fa7f3a136ba26c340e77585b2c6430a670a35e5bbfbdb22d4e8511
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <de.schildbach.wallet.util.Crypto: void <clinit>()>
		SHA-256: 85d47204815d2c880a4f9340a728bff586b271e476d0c85901ff5549e19af52b
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 8e31e01138be74028ef3a6b58db86216562b93149a95d68d64b87e6f3437ab3b
		Secure: true
	Object:
		Variable: $r28
		Type: java.security.Signature
		Statement: $r28 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: d3c7b83e7486f02ed3737d00a2cac468af662a3672495cefd4612607b0a6eeed
		Secure: false
	Object:
		Variable: $r30
		Type: byte[]
		Statement: $z0 = virtualinvoke $r28.<java.security.Signature: boolean verify(byte[])>($r30)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: 23ab06d7af157d4146cea1b1243ee9d40e5e853ed562861ee8ccf78940d8de6b
		Secure: false
	Object:
		Variable: r50
		Type: java.security.cert.PKIXParameters
		Statement: specialinvoke r50.<java.security.cert.PKIXParameters: void <init>(java.security.KeyStore)>($r23)
		Method: <com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>
		SHA-256: c91c5c04f9ad4493017b9698b5414d54240b894f945aec5970e752f66e428e43
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6402)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: 71b6a1693fc581a4f934d545150c19a63265fdd1a06de0f603b7478421631a0c
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.bitcoin.core.ECKey: void <clinit>()>
		SHA-256: b8182c8b806eae893d66be9f5681d586425e17587ba497b9aa5ad2da95e1152
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6356)
		Method: <com.hashengineering.crypto.Groestl: void <clinit>()>
		SHA-256: ca57186069fb643141e1eed6dcec99d93b55ecd344fd91b8cc6997bc2a6506ad
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.bitcoin.script.Script: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)>
		SHA-256: 1cbe63703d8dcb7bcc9a63ef04be35fce4fb3c8940944a5ffe8650363e1a9897
		Secure: false

Findings in Java Class: com.google.bitcoin.core.CheckpointManager

	 in Method: void <init>(com.google.bitcoin.core.NetworkParameters,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer3784)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b501322860cf6b46d4a3ca5a9672f34e477c550346be270e44218d81199ce94c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer3774)

		ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer3784)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #23dcbbec612e5b6df07ba442047ff6fe68aae922ad3347e9bf60a789a0a7cc50)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r2, $r11)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #23dcbbec612e5b6df07ba442047ff6fe68aae922ad3347e9bf60a789a0a7cc50)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()

		ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream
			at statement: virtualinvoke $r3.<java.security.DigestInputStream: void on(boolean)>(varReplacer3774)


Findings in Java Class: com.google.bitcoin.protocols.payments.PaymentSession

	 in Method: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r28.<java.security.Signature: void initVerify(java.security.PublicKey)>($r27)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #d3c7b83e7486f02ed3737d00a2cac468af662a3672495cefd4612607b0a6eeed)
			First parameter (with value "SHA1withRSA") should be any of {SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA}
			at statement: $r28 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)

		RequiredPredicateError violating CrySL rule for java.security.cert.PKIXParameters
			First parameter was not properly generated as generated Key Store
			at statement: specialinvoke r50.<java.security.cert.PKIXParameters: void <init>(java.security.KeyStore)>($r23)


	 in Method: java.security.KeyStore createKeyStore(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #35367c72a25cdfcfea066a2fb6d5c9ff22b976357eb4f5b812eee2c4ae78e4c3)
			First parameter (with value "AndroidCAStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3478)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #688d985507fa7f3a136ba26c340e77585b2c6430a670a35e5bbfbdb22d4e8511)
			First parameter (with value "JKS") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3471)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #42405f43c07d0cd9ac87f0e4cabacd6c6d8859ff772f57160ec37ce6ebdf0f30)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r5)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #c802f952b3f7fbd04b9e61c85189101cdaa4ba6bbac327aa4fbf07b49ff3fc88)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r5)


Findings in Java Class: com.google.bitcoin.script.Script

	 in Method: void executeScript(com.google.bitcoin.core.Transaction,long,com.google.bitcoin.script.Script,java.util.LinkedList)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #908438e682ae5e45a1a33ce3e148b3767232147c345ef291124c2677b5315815)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r26 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4937)


Findings in Java Class: com.lambdaworks.crypto.PBKDF

	 in Method: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)
		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Mac
			Constraint length(output1) + 0 > outOffset + 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r4, varReplacer6405)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #366c2e7c35845b37d3032f0de95340b2fa96df1f0167715975faa66e4da7258c)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #366c2e7c35845b37d3032f0de95340b2fa96df1f0167715975faa66e4da7258c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i3 = virtualinvoke $r0.<javax.crypto.Mac: int getMacLength()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #366c2e7c35845b37d3032f0de95340b2fa96df1f0167715975faa66e4da7258c)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r5)


Findings in Java Class: com.lambdaworks.crypto.SCrypt

	 in Method: byte[] scryptJ(byte[],byte[],int,int,int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #366c2e7c35845b37d3032f0de95340b2fa96df1f0167715975faa66e4da7258c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: staticinvoke <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>($r5, $r0, varReplacer6396, $r4, varReplacer6397)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6402)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	ForbiddenMethodError: 2
	TypestateError: 3
	IncompleteOperationError: 5
	RequiredPredicateError: 3
	ImpreciseValueExtractionError: 1
	ConstraintError: 4
=====================================================================