Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer2247, varReplacer2248)
		Method: <io.dcloud.common.adapter.util.DCloudTrustManager: java.security.SecureRandom createSecureRandom()>
		SHA-256: b903307fc6ee7a762a54fbe329ff7e9ffaef3cb66a649054964a26675e786b73
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.dcloud.common.util.HashUtils: java.lang.String getHash(java.lang.String)>
		SHA-256: 1fe9f1b37531e51a34535179f51212095739b0865ce76191f487ca079b76d5b9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3889)
		Method: <io.dcloud.common.util.Md5Utils: java.lang.String md5LowerCase(java.lang.String)>
		SHA-256: 848c52d7aa3c82af7bf53138e4d5bc5b9a0c1dd83a540bd49447011202faf493
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1631)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 825a4b3e00f62c3a89303bb2344c17872a76efed566cc300ac44e3ccc8853e5a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1632)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: ff894f6caa31be22b94ddd9269f83a440730b60b6ad62ce4df0ea5ac4d88407
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3897)
		Method: <io.dcloud.common.util.HashUtils: java.lang.String getHash(java.lang.String)>
		SHA-256: ccd21fcbcf378e7e56b17e70dd381c6ebcf83b023089c24fd62ec703c676e10e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.dcloud.common.util.Md5Utils: java.lang.String md5LowerCase(java.lang.String)>
		SHA-256: 1e65f2903e5e6ea436adc9bf07e125765e70ec2d08768e2d764096c6090ef31a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2244)
		Method: <io.dcloud.common.util.NetTool: java.net.HttpURLConnection createConnection(java.net.URL,java.lang.String)>
		SHA-256: adbf31c5cb514cff3e3d303c1cee3e2e2ee5ed4a72669fa2443e17ae940214f9
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: eb8d65f83999bdcf65378e7722b4d34834f48479554ef576b3cdb8a506884074
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 40cc8c3a68d9234209250460ce9b0386093dea54f2699629f5ca1a61d0ffea1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2249)
		Method: <io.dcloud.common.adapter.util.DCloudTrustManager: java.security.SecureRandom createSecureRandom()>
		SHA-256: f0c4e27346a268e7624beb086da4a8a65c7f992b2837e210b589f7931daea374
		Secure: true
	Object:
		Variable: varReplacer1632
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1632)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 97dc8d03feb3cac5f875fa84767434bee9fafa15f3c92abfa708103e165acfc8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: fc421115d3a426497bc3603cff7013166449bad8a60b3da1eb36aafbfef9ad78
		Secure: false

Findings in Java Class: io.dcloud.common.util.NetTool

	 in Method: java.net.HttpURLConnection createConnection(java.net.URL,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2241, r14, $r7)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #adbf31c5cb514cff3e3d303c1cee3e2e2ee5ed4a72669fa2443e17ae940214f9)
			First parameter (with value "TLSv1") should be any of {Insecure}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2244)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2241, r14, $r7)


Findings in Java Class: io.dcloud.common.util.Md5Utils

	 in Method: java.lang.String md5LowerCase(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #848c52d7aa3c82af7bf53138e4d5bc5b9a0c1dd83a540bd49447011202faf493)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3889)


Findings in Java Class: io.dcloud.common.util.HashUtils

	 in Method: java.lang.String getHash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ccd21fcbcf378e7e56b17e70dd381c6ebcf83b023089c24fd62ec703c676e10e)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3897)


Findings in Java Class: io.dcloud.common.util.AESUtil

	 in Method: byte[] encrypt(byte[],byte[],java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1632)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1630, $r5, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1630, $r5, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	ConstraintError: 3
=====================================================================