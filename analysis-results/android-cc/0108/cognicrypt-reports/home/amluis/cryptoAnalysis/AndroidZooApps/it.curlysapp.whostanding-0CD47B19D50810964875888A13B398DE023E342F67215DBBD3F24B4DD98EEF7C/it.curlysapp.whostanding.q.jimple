public class it.curlysapp.whostanding.q extends java.lang.Object
{
    javax.crypto.Cipher a;
    javax.crypto.Cipher b;

    public void <init>(java.lang.String)
    {
        it.curlysapp.whostanding.q $r0;
        java.lang.String $r1, varReplacer1161, varReplacer1163, varReplacer1165, varReplacer1166, varReplacer1167, varReplacer1169;
        byte[] $r2;
        javax.crypto.spec.PBEKeySpec $r3;
        char[] $r4;
        javax.crypto.SecretKeyFactory $r5;
        javax.crypto.SecretKey $r6;
        javax.crypto.Cipher $r7;
        javax.crypto.spec.PBEParameterSpec $r8;
        java.lang.Throwable $r9, $r11, $r12, $r13, $r14;
        java.io.PrintStream $r10;
        int varReplacer1162, varReplacer1164, varReplacer1168, varReplacer1170;

        nop;

        $r0 := @this: it.curlysapp.whostanding.q;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[8];

        $r2[0] = -87;

        $r2[1] = -101;

        $r2[2] = -56;

        $r2[3] = 50;

        $r2[4] = 86;

        $r2[5] = 52;

        $r2[6] = -29;

        $r2[7] = 3;

        $r3 = new javax.crypto.spec.PBEKeySpec;

     label01:
        $r4 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        varReplacer1164 = 19;

        specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)>($r4, $r2, varReplacer1164);

        varReplacer1161 = "PBEWithMD5AndDES";

        $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1161);

        $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

        $r1 = interfaceinvoke $r6.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

     label02:
        $r0.<it.curlysapp.whostanding.q: javax.crypto.Cipher a> = $r7;

     label03:
        $r1 = interfaceinvoke $r6.<javax.crypto.SecretKey: java.lang.String getAlgorithm()>();

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

     label04:
        $r0.<it.curlysapp.whostanding.q: javax.crypto.Cipher b> = $r7;

        $r8 = new javax.crypto.spec.PBEParameterSpec;

     label05:
        varReplacer1162 = 19;

        specialinvoke $r8.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer1162);

     label06:
        $r7 = $r0.<it.curlysapp.whostanding.q: javax.crypto.Cipher a>;

     label07:
        varReplacer1170 = 1;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1170, $r6, $r8);

     label08:
        $r7 = $r0.<it.curlysapp.whostanding.q: javax.crypto.Cipher b>;

     label09:
        varReplacer1168 = 2;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1168, $r6, $r8);

     label10:
        return;

     label11:
        $r9 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1169 = "EXCEPTION: InvalidAlgorithmParameterException";

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(varReplacer1169);

        return;

     label12:
        $r11 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1165 = "EXCEPTION: InvalidKeySpecException";

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(varReplacer1165);

        return;

     label13:
        $r12 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1167 = "EXCEPTION: NoSuchPaddingException";

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(varReplacer1167);

        return;

     label14:
        $r13 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1166 = "EXCEPTION: NoSuchAlgorithmException";

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(varReplacer1166);

        return;

     label15:
        $r14 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        varReplacer1163 = "EXCEPTION: InvalidKeyException";

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(varReplacer1163);

        return;

        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label11;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label11;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label11;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label11;
        catch java.security.InvalidAlgorithmParameterException from label09 to label10 with label11;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label12;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label12;
        catch java.security.spec.InvalidKeySpecException from label05 to label06 with label12;
        catch java.security.spec.InvalidKeySpecException from label07 to label08 with label12;
        catch java.security.spec.InvalidKeySpecException from label09 to label10 with label12;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label13;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label13;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label13;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label13;
        catch javax.crypto.NoSuchPaddingException from label09 to label10 with label13;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label14;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label14;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label14;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label14;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label14;
        catch java.security.InvalidKeyException from label01 to label02 with label15;
        catch java.security.InvalidKeyException from label03 to label04 with label15;
        catch java.security.InvalidKeyException from label05 to label06 with label15;
        catch java.security.InvalidKeyException from label07 to label08 with label15;
        catch java.security.InvalidKeyException from label09 to label10 with label15;
    }

    public java.lang.String estr(java.lang.String)
    {
        it.curlysapp.whostanding.q $r0;
        java.lang.String $r1, varReplacer1172;
        byte[] $r2;
        javax.crypto.Cipher $r3;
        java.lang.Throwable $r4, $r5, $r6;
        null_type varReplacer1171;

        nop;

        $r0 := @this: it.curlysapp.whostanding.q;

        $r1 := @parameter0: java.lang.String;

     label01:
        $r2 = staticinvoke <it.curlysapp.whostanding.a: byte[] decode(java.lang.String)>($r1);

     label02:
        $r3 = $r0.<it.curlysapp.whostanding.q: javax.crypto.Cipher b>;

     label03:
        $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2);

     label04:
        $r1 = new java.lang.String;

     label05:
        varReplacer1172 = "UTF8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, varReplacer1172);

     label06:
        return $r1;

     label07:
        $r4 := @caughtexception;

     label08:
        varReplacer1171 = null;

        return varReplacer1171;

     label09:
        $r5 := @caughtexception;

        goto label08;

     label10:
        $r6 := @caughtexception;

        goto label08;

        catch javax.crypto.BadPaddingException from label01 to label02 with label10;
        catch javax.crypto.BadPaddingException from label03 to label04 with label10;
        catch javax.crypto.BadPaddingException from label05 to label06 with label10;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label09;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label09;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label09;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label07;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label07;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label07;
    }
}
