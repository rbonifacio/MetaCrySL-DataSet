public class ph.teligent.nce.sip.LocalSipProfile extends java.lang.Object
{
    public static int DEFAULT_RELAY_RTCP_PORT;
    public static int DEFAULT_RELAY_RTP_PORT;
    public static java.lang.String tag;
    private java.lang.String MSISDN;
    private java.util.List audioFormats;
    private jsip.sip.header.CallIdHeader callIdHeader;
    private java.util.Map callTransactionMap;
    private java.lang.String cnonce;
    private java.lang.String creditCardURL;
    private java.lang.String displayName;
    private java.util.Map dtmfTransactionMap;
    private ph.teligent.nce.background.presence.InitialSubscribeManager initialSubscribeManager;
    private boolean isRoaming;
    private int localAudioRtcpPort;
    private int localAudioRtpPort;
    private java.lang.String localIpAddress;
    private int localSipPort;
    private int localVideoRtcpPort;
    private int localVideoRtpPort;
    private java.lang.String mcc;
    private jsip.sip.header.CallIdHeader messageIdHeader;
    private java.lang.String method;
    private int networkType;
    private java.lang.String nonce;
    private java.lang.String numberSelected;
    private java.lang.String publicIpAddress;
    private int publicSipPort;
    private java.lang.String realm;
    private java.util.Map receivedSmsMap;
    private java.util.Map roomTransactionMap;
    private int rport;
    private java.lang.String sipDomain;
    private java.lang.String sipInstance;
    private java.lang.String sipPassword;
    private int sipPort;
    private java.util.Map sipRequestTransactionMap;
    private java.util.Map sipResponseTransactionMap;
    private java.util.Map smsDeliveredNotificationMap;
    private java.util.Map smsReadNotificationMap;
    private java.util.Map smsTransactionMap;
    private boolean useLocal;
    private java.lang.String userName;
    private java.util.List videoFormats;

    static void <clinit>()
    {
        int varReplacer18207, varReplacer18208;

        nop;

        varReplacer18207 = 7078;

        <ph.teligent.nce.sip.LocalSipProfile: int DEFAULT_RELAY_RTP_PORT> = varReplacer18207;

        varReplacer18208 = 7079;

        <ph.teligent.nce.sip.LocalSipProfile: int DEFAULT_RELAY_RTCP_PORT> = varReplacer18208;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, $r2, $r3, varReplacer18375, varReplacer18396;
        int $i0, varReplacer18371, varReplacer18373, varReplacer18374, varReplacer18376, varReplacer18378, varReplacer18380, varReplacer18382, varReplacer18384, varReplacer18386, varReplacer18387, varReplacer18392, varReplacer18394, varReplacer18395, varReplacer18400, varReplacer18402, varReplacer18403, varReplacer18405, varReplacer18407, varReplacer18409, varReplacer18410, varReplacer18412;
        java.util.ArrayList $r4;
        double $d0;
        byte[] $r5;
        java.util.concurrent.ConcurrentHashMap $r6;
        float varReplacer18372, varReplacer18377, varReplacer18381, varReplacer18385, varReplacer18393, varReplacer18401, varReplacer18404, varReplacer18408, varReplacer18411;
        null_type varReplacer18379, varReplacer18383, varReplacer18388, varReplacer18389, varReplacer18390, varReplacer18391, varReplacer18397, varReplacer18398, varReplacer18399, varReplacer18406;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer18396 = "";

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String creditCardURL> = varReplacer18396;

        varReplacer18387 = 0;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int networkType> = varReplacer18387;

        varReplacer18374 = 0;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean isRoaming> = varReplacer18374;

        varReplacer18375 = "my";

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String mcc> = varReplacer18375;

        varReplacer18395 = 1;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean useLocal> = varReplacer18395;

        varReplacer18397 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map sipRequestTransactionMap> = varReplacer18397;

        varReplacer18383 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map sipResponseTransactionMap> = varReplacer18383;

        varReplacer18379 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsTransactionMap> = varReplacer18379;

        varReplacer18398 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsReadNotificationMap> = varReplacer18398;

        varReplacer18406 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsDeliveredNotificationMap> = varReplacer18406;

        varReplacer18390 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map dtmfTransactionMap> = varReplacer18390;

        varReplacer18388 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map roomTransactionMap> = varReplacer18388;

        varReplacer18391 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map receivedSmsMap> = varReplacer18391;

        varReplacer18389 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map callTransactionMap> = varReplacer18389;

        varReplacer18399 = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: ph.teligent.nce.background.presence.InitialSubscribeManager initialSubscribeManager> = varReplacer18399;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName> = $r1;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain> = $r2;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipPassword> = $r3;

        $i0 = <ph.teligent.nce.sip.SettingsProvider: int sipPort>;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int sipPort> = $i0;

        $i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int sipPort>;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int localSipPort> = $i0;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName> = $r1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.List audioFormats> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.List videoFormats> = $r4;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 10000.0;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getHexString(byte[])>($r5);

        <ph.teligent.nce.sip.LocalSipProfile: java.lang.String tag> = $r1;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        varReplacer18407 = 8;

        varReplacer18408 = 0.9F;

        varReplacer18409 = 1;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(varReplacer18407, varReplacer18408, varReplacer18409);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map sipRequestTransactionMap> = $r6;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        varReplacer18392 = 8;

        varReplacer18393 = 0.9F;

        varReplacer18394 = 1;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(varReplacer18392, varReplacer18393, varReplacer18394);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map sipResponseTransactionMap> = $r6;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        varReplacer18400 = 8;

        varReplacer18401 = 0.9F;

        varReplacer18402 = 1;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(varReplacer18400, varReplacer18401, varReplacer18402);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsTransactionMap> = $r6;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        varReplacer18376 = 8;

        varReplacer18377 = 0.9F;

        varReplacer18378 = 1;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(varReplacer18376, varReplacer18377, varReplacer18378);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map callTransactionMap> = $r6;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        varReplacer18403 = 8;

        varReplacer18404 = 0.9F;

        varReplacer18405 = 1;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(varReplacer18403, varReplacer18404, varReplacer18405);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsReadNotificationMap> = $r6;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        varReplacer18384 = 8;

        varReplacer18385 = 0.9F;

        varReplacer18386 = 1;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(varReplacer18384, varReplacer18385, varReplacer18386);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsDeliveredNotificationMap> = $r6;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        varReplacer18410 = 8;

        varReplacer18411 = 0.9F;

        varReplacer18412 = 1;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(varReplacer18410, varReplacer18411, varReplacer18412);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map dtmfTransactionMap> = $r6;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        varReplacer18380 = 8;

        varReplacer18381 = 0.9F;

        varReplacer18382 = 1;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(varReplacer18380, varReplacer18381, varReplacer18382);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map roomTransactionMap> = $r6;

        $r6 = new java.util.concurrent.ConcurrentHashMap;

        varReplacer18371 = 8;

        varReplacer18372 = 0.9F;

        varReplacer18373 = 1;

        specialinvoke $r6.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(varReplacer18371, varReplacer18372, varReplacer18373);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map receivedSmsMap> = $r6;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;
        double $d0;
        byte[] $r4;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        specialinvoke $r0.<ph.teligent.nce.sip.LocalSipProfile: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int sipPort> = $i0;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 10000.0;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getHexString(byte[])>($r4);

        <ph.teligent.nce.sip.LocalSipProfile: java.lang.String tag> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        int $i0;
        double $d0;
        byte[] $r5;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $i0 := @parameter3: int;

        $r4 := @parameter4: java.lang.String;

        specialinvoke $r0.<ph.teligent.nce.sip.LocalSipProfile: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName> = $r4;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 10000.0;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getHexString(byte[])>($r5);

        <ph.teligent.nce.sip.LocalSipProfile: java.lang.String tag> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        double $d0;
        byte[] $r5;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke $r0.<ph.teligent.nce.sip.LocalSipProfile: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName> = $r4;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 10000.0;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getHexString(byte[])>($r5);

        <ph.teligent.nce.sip.LocalSipProfile: java.lang.String tag> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.net.InetAddress)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, $r3;
        java.net.InetAddress $r2;
        int $i0;
        java.util.ArrayList $r4;
        double $d0;
        byte[] $r5;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.net.InetAddress;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String creditCardURL> = "";

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int networkType> = 0;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean isRoaming> = 0;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String mcc> = "my";

        $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean useLocal> = 1;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map sipRequestTransactionMap> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map sipResponseTransactionMap> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsTransactionMap> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsReadNotificationMap> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsDeliveredNotificationMap> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map dtmfTransactionMap> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map roomTransactionMap> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map receivedSmsMap> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map callTransactionMap> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: ph.teligent.nce.background.presence.InitialSubscribeManager initialSubscribeManager> = null;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName> = $r1;

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain> = $r3;

        $i0 = <ph.teligent.nce.sip.SettingsProvider: int sipPort>;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int sipPort> = $i0;

        $i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int sipPort>;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int localSipPort> = $i0;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName> = $r1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.List audioFormats> = $r4;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.List videoFormats> = $r4;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 10000.0;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r1 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getHexString(byte[])>($r5);

        <ph.teligent.nce.sip.LocalSipProfile: java.lang.String tag> = $r1;

        return;
    }

    private static final java.lang.String encode(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;
        int $i0, $i1, varReplacer20674, varReplacer20675;
        java.lang.StringBuilder $r2;
        byte $b2;
        short $s3;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = "";

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $i1 = $s3 + 256;

        varReplacer20674 = 16;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, varReplacer20674);

        varReplacer20675 = 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(varReplacer20675);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    public java.util.List getAudioFormats()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.List r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.List audioFormats>;

        return r1;
    }

    public jsip.sip.header.AuthorizationHeader getAuthorizationHeader(jsip.sip.header.HeaderFactory)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.header.HeaderFactory $r1;
        java.lang.String $r2, $r3, $r7, $r8, $r9, $r10;
        ph.teligent.jsip.sip.address.SipUri $r4, r14;
        java.security.MessageDigest $r5;
        long $l0;
        byte[] $r6;
        jsip.sip.header.AuthorizationHeader $r11;
        java.lang.Throwable $r12, $r13;
        java.security.NoSuchAlgorithmException r15;
        java.io.UnsupportedEncodingException r16;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: jsip.sip.header.HeaderFactory;

        r14 = new ph.teligent.jsip.sip.address.SipUri;

        $r4 = r14;

        specialinvoke r14.<ph.teligent.jsip.sip.address.SipUri: void <init>()>();

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

        virtualinvoke $r4.<ph.teligent.jsip.sip.address.SipUri: void setHost(java.lang.String)>($r2);

     label1:
        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label2:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r2;

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

     label3:
        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r6);

     label4:
        $r7 = new java.lang.String;

     label5:
        $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>();

        $r3 = staticinvoke <ph.teligent.nce.sip.LocalSipProfile: java.lang.String encode(byte[])>($r6);

        specialinvoke $r7.<java.lang.String: void <init>(java.lang.String)>($r3);

     label6:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r7;

     label7:
        $r7 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        $r8 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String realm>;

        $r9 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipPassword>;

        $r10 = virtualinvoke $r4.<ph.teligent.jsip.sip.address.SipUri: java.lang.String toString()>();

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String nonce>;

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        $r2 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r7, $r8, $r9, "REGISTER", $r10, $r2, "00000001", $r3, "auth");

        $r11 = interfaceinvoke $r1.<jsip.sip.header.HeaderFactory: jsip.sip.header.AuthorizationHeader createAuthorizationHeader(java.lang.String)>("Digest");

        interfaceinvoke $r11.<jsip.sip.header.AuthorizationHeader: void setAlgorithm(java.lang.String)>("MD5");

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String nonce>;

        interfaceinvoke $r11.<jsip.sip.header.AuthorizationHeader: void setNonce(java.lang.String)>($r3);

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String realm>;

        interfaceinvoke $r11.<jsip.sip.header.AuthorizationHeader: void setRealm(java.lang.String)>($r3);

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        interfaceinvoke $r11.<jsip.sip.header.AuthorizationHeader: void setUsername(java.lang.String)>($r3);

        interfaceinvoke $r11.<jsip.sip.header.AuthorizationHeader: void setURI(jsip.sip.address.URI)>($r4);

        interfaceinvoke $r11.<jsip.sip.header.AuthorizationHeader: void setResponse(java.lang.String)>($r2);

        interfaceinvoke $r11.<jsip.sip.header.AuthorizationHeader: void setQop(java.lang.String)>("auth");

        interfaceinvoke $r11.<jsip.sip.header.AuthorizationHeader: void setNonceCount(int)>(1);

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        interfaceinvoke $r11.<jsip.sip.header.AuthorizationHeader: void setCNonce(java.lang.String)>($r2);

        return $r11;

     label8:
        $r12 := @caughtexception;

        r15 = (java.security.NoSuchAlgorithmException) $r12;

        virtualinvoke r15.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label7;

     label9:
        $r13 := @caughtexception;

        r16 = (java.io.UnsupportedEncodingException) $r13;

        virtualinvoke r16.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label7;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label8;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label8;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label8;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label9;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label9;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label9;
    }

    public jsip.sip.header.CallIdHeader getCallIdHeader()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.header.CallIdHeader r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: jsip.sip.header.CallIdHeader callIdHeader>;

        return r1;
    }

    public java.util.Map getCallTransactionMap()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.Map r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map callTransactionMap>;

        return r1;
    }

    public java.lang.String getCreditCardURL()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String creditCardURL>;

        return r1;
    }

    public java.util.Map getDTMFTransactionMap()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.Map r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map dtmfTransactionMap>;

        return r1;
    }

    public java.lang.String getDisplayName()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, $r2, varReplacer20651;
        boolean $z0;
        ph.teligent.nce.utils.Common $r3;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 = "";

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName>;

        varReplacer20651 = "";

        $r2 = staticinvoke <ph.teligent.commons.util.text.NullChecker: java.lang.String a(java.lang.String,java.lang.String)>($r2, varReplacer20651);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <ph.teligent.nce.utils.Common: ph.teligent.nce.utils.Common b()>();

        $r1 = virtualinvoke $r3.<ph.teligent.nce.utils.Common: java.lang.String aV()>();

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName> = $r1;

     label1:
        $r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName>;

        return $r1;
    }

    public jsip.sip.header.FromHeader getFromHeader(jsip.sip.address.AddressFactory, jsip.sip.header.HeaderFactory)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.address.AddressFactory $r1;
        jsip.sip.header.HeaderFactory $r2;
        java.lang.String $r3, $r4;
        jsip.sip.address.SipURI $r5;
        jsip.sip.address.Address $r6;
        jsip.sip.header.FromHeader $r7;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: jsip.sip.address.AddressFactory;

        $r2 := @parameter1: jsip.sip.header.HeaderFactory;

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        $r4 = <ph.teligent.nce.sip.SettingsProvider: java.lang.String sipDomain>;

        $r5 = interfaceinvoke $r1.<jsip.sip.address.AddressFactory: jsip.sip.address.SipURI createSipURI(java.lang.String,java.lang.String)>($r3, $r4);

        $r6 = interfaceinvoke $r1.<jsip.sip.address.AddressFactory: jsip.sip.address.Address createAddress(jsip.sip.address.URI)>($r5);

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName>;

        interfaceinvoke $r6.<jsip.sip.address.Address: void setDisplayName(java.lang.String)>($r3);

        $r3 = <ph.teligent.nce.sip.LocalSipProfile: java.lang.String tag>;

        $r7 = interfaceinvoke $r2.<jsip.sip.header.HeaderFactory: jsip.sip.header.FromHeader createFromHeader(jsip.sip.address.Address,java.lang.String)>($r6, $r3);

        return $r7;
    }

    public ph.teligent.nce.background.presence.InitialSubscribeManager getInitialSubscribeManager()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        ph.teligent.nce.background.presence.InitialSubscribeManager r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: ph.teligent.nce.background.presence.InitialSubscribeManager initialSubscribeManager>;

        return r1;
    }

    public int getLocalAudioRtcpPort()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int localAudioRtcpPort>;

        return i0;
    }

    public int getLocalAudioRtpPort()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int i0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int localAudioRtpPort>;

        return i0;
    }

    public java.lang.String getLocalIpAddress()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, varReplacer19135;
        boolean $z0;
        android.content.Context $r2;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String localIpAddress>;

        if $r1 == null goto label1;

        $r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String localIpAddress>;

        if $r1 == null goto label2;

        $r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String localIpAddress>;

        varReplacer19135 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer19135);

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <ph.teligent.nce.VoopeeApplication: android.content.Context g()>();

        $r1 = staticinvoke <ph.teligent.commons.util.net.NetworkUtils: java.lang.String c(android.content.Context)>($r2);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String localIpAddress> = $r1;

     label2:
        $r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String localIpAddress>;

        return $r1;
    }

    public int getLocalSipPort()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int i0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int localSipPort>;

        return i0;
    }

    public int getLocalVideoRtcpPort()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int localVideoRtcpPort>;

        return i0;
    }

    public int getLocalVideoRtpPort()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int localVideoRtpPort>;

        return i0;
    }

    public java.lang.String getMSISDN()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String MSISDN>;

        return r1;
    }

    public jsip.sip.header.CallIdHeader getMessageIdHeader()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.header.CallIdHeader r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: jsip.sip.header.CallIdHeader messageIdHeader>;

        return r1;
    }

    public java.lang.String getMethod()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String method>;

        return r1;
    }

    public java.lang.String getMobileCountryCode()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String mcc>;

        return r1;
    }

    public int getNetworkType()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int $i0;
        ph.teligent.nce.sip.SipManager $r1;
        ph.teligent.nce.background.HalfPriceService $r2;
        java.lang.Exception $r3;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

     label1:
        $i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int networkType>;

     label2:
        if $i0 != 0 goto label4;

     label3:
        $r1 = staticinvoke <ph.teligent.nce.sip.SipManager: ph.teligent.nce.sip.SipManager getInstance()>();

        $r2 = virtualinvoke $r1.<ph.teligent.nce.sip.SipManager: ph.teligent.nce.background.HalfPriceService getHalfPriceService()>();

        virtualinvoke $r2.<ph.teligent.nce.background.HalfPriceService: void t()>();

     label4:
        $i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int networkType>;

        return $i0;

     label5:
        $r3 := @caughtexception;

        goto label4;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.String getNumberSelected()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String numberSelected>;

        return r1;
    }

    public jsip.sip.header.ProxyAuthorizationHeader getProxyAuthorizationHeader(jsip.sip.header.HeaderFactory)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.header.HeaderFactory $r1;
        java.lang.String $r2, $r3, $r4, $r8, $r9, $r10, $r11, varReplacer20652, varReplacer20654, varReplacer20655, varReplacer20656, varReplacer20657, varReplacer20658, varReplacer20659;
        ph.teligent.jsip.sip.address.SipUri $r5, r15;
        java.security.MessageDigest $r6;
        long $l0;
        byte[] $r7;
        jsip.sip.header.ProxyAuthorizationHeader $r12;
        java.lang.Throwable $r13, $r14;
        java.security.NoSuchAlgorithmException r16;
        java.io.UnsupportedEncodingException r17;
        int varReplacer20653;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: jsip.sip.header.HeaderFactory;

     label1:
        varReplacer20655 = "MD5";

        $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20655);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label2:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r2;

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

     label3:
        varReplacer20656 = "US-ASCII";

        $r7 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer20656);

        virtualinvoke $r6.<java.security.MessageDigest: void update(byte[])>($r7);

     label4:
        $r4 = new java.lang.String;

     label5:
        $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        $r3 = staticinvoke <ph.teligent.nce.sip.LocalSipProfile: java.lang.String encode(byte[])>($r7);

        specialinvoke $r4.<java.lang.String: void <init>(java.lang.String)>($r3);

     label6:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r4;

     label7:
        r15 = new ph.teligent.jsip.sip.address.SipUri;

        $r5 = r15;

        specialinvoke r15.<ph.teligent.jsip.sip.address.SipUri: void <init>()>();

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

        virtualinvoke $r5.<ph.teligent.jsip.sip.address.SipUri: void setHost(java.lang.String)>($r2);

        $r8 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        $r9 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String realm>;

        $r10 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipPassword>;

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String method>;

        $r11 = virtualinvoke $r5.<ph.teligent.jsip.sip.address.SipUri: java.lang.String toString()>();

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String nonce>;

        $r4 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        varReplacer20658 = "00000001";

        varReplacer20659 = "auth";

        $r2 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r8, $r9, $r10, $r2, $r11, $r3, varReplacer20658, $r4, varReplacer20659);

        varReplacer20657 = "Digest";

        $r12 = interfaceinvoke $r1.<jsip.sip.header.HeaderFactory: jsip.sip.header.ProxyAuthorizationHeader createProxyAuthorizationHeader(java.lang.String)>(varReplacer20657);

        varReplacer20654 = "MD5";

        interfaceinvoke $r12.<jsip.sip.header.ProxyAuthorizationHeader: void setAlgorithm(java.lang.String)>(varReplacer20654);

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String nonce>;

        interfaceinvoke $r12.<jsip.sip.header.ProxyAuthorizationHeader: void setNonce(java.lang.String)>($r3);

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String realm>;

        interfaceinvoke $r12.<jsip.sip.header.ProxyAuthorizationHeader: void setRealm(java.lang.String)>($r3);

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        interfaceinvoke $r12.<jsip.sip.header.ProxyAuthorizationHeader: void setUsername(java.lang.String)>($r3);

        interfaceinvoke $r12.<jsip.sip.header.ProxyAuthorizationHeader: void setURI(jsip.sip.address.URI)>($r5);

        interfaceinvoke $r12.<jsip.sip.header.ProxyAuthorizationHeader: void setResponse(java.lang.String)>($r2);

        varReplacer20652 = "auth";

        interfaceinvoke $r12.<jsip.sip.header.ProxyAuthorizationHeader: void setQop(java.lang.String)>(varReplacer20652);

        varReplacer20653 = 1;

        interfaceinvoke $r12.<jsip.sip.header.ProxyAuthorizationHeader: void setNonceCount(int)>(varReplacer20653);

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        interfaceinvoke $r12.<jsip.sip.header.ProxyAuthorizationHeader: void setCNonce(java.lang.String)>($r2);

        return $r12;

     label8:
        $r13 := @caughtexception;

        r16 = (java.security.NoSuchAlgorithmException) $r13;

        virtualinvoke r16.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label7;

     label9:
        $r14 := @caughtexception;

        r17 = (java.io.UnsupportedEncodingException) $r14;

        virtualinvoke r17.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label7;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label8;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label8;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label8;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label9;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label9;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label9;
    }

    public jsip.sip.header.ProxyAuthorizationHeader getProxyAuthorizationHeader(jsip.sip.header.HeaderFactory, ph.teligent.nce.background.presence.SubscribeTransaction)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.header.HeaderFactory $r1;
        ph.teligent.nce.background.presence.SubscribeTransaction $r2;
        java.lang.String $r3, $r4, $r6, $r7, $r10, $r11, $r12;
        ph.teligent.jsip.sip.address.SipUri $r5, r16;
        java.security.MessageDigest $r8;
        long $l0;
        byte[] $r9;
        jsip.sip.header.ProxyAuthorizationHeader $r13;
        java.lang.Throwable $r14, $r15;
        java.security.NoSuchAlgorithmException r17;
        java.io.UnsupportedEncodingException r18;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: jsip.sip.header.HeaderFactory;

        $r2 := @parameter1: ph.teligent.nce.background.presence.SubscribeTransaction;

        $r6 = $r2.<ph.teligent.nce.background.presence.SubscribeTransaction: java.lang.String c>;

        $r7 = $r2.<ph.teligent.nce.background.presence.SubscribeTransaction: java.lang.String b>;

        $r3 = $r2.<ph.teligent.nce.background.presence.SubscribeTransaction: java.lang.String a>;

     label1:
        $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label2:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r4;

        $r4 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

     label3:
        $r9 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        virtualinvoke $r8.<java.security.MessageDigest: void update(byte[])>($r9);

     label4:
        $r11 = new java.lang.String;

     label5:
        $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>();

        $r10 = staticinvoke <ph.teligent.nce.sip.LocalSipProfile: java.lang.String encode(byte[])>($r9);

        specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>($r10);

     label6:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r11;

     label7:
        r16 = new ph.teligent.jsip.sip.address.SipUri;

        $r5 = r16;

        specialinvoke r16.<ph.teligent.jsip.sip.address.SipUri: void <init>()>();

        $r4 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

        virtualinvoke $r5.<ph.teligent.jsip.sip.address.SipUri: void setHost(java.lang.String)>($r4);

        $r10 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        $r11 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipPassword>;

        $r12 = virtualinvoke $r5.<ph.teligent.jsip.sip.address.SipUri: java.lang.String toString()>();

        $r4 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        $r6 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $r7, $r11, $r6, $r12, $r3, "00000001", $r4, "auth");

        $r13 = interfaceinvoke $r1.<jsip.sip.header.HeaderFactory: jsip.sip.header.ProxyAuthorizationHeader createProxyAuthorizationHeader(java.lang.String)>("Digest");

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setAlgorithm(java.lang.String)>("MD5");

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setNonce(java.lang.String)>($r3);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setRealm(java.lang.String)>($r7);

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setUsername(java.lang.String)>($r3);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setURI(jsip.sip.address.URI)>($r5);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setResponse(java.lang.String)>($r6);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setQop(java.lang.String)>("auth");

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setNonceCount(int)>(1);

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setCNonce(java.lang.String)>($r3);

        return $r13;

     label8:
        $r14 := @caughtexception;

        r17 = (java.security.NoSuchAlgorithmException) $r14;

        virtualinvoke r17.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label7;

     label9:
        $r15 := @caughtexception;

        r18 = (java.io.UnsupportedEncodingException) $r15;

        virtualinvoke r18.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label7;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label8;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label8;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label8;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label9;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label9;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label9;
    }

    public jsip.sip.header.ProxyAuthorizationHeader getProxyAuthorizationHeader(jsip.sip.header.HeaderFactory, ph.teligent.nce.sip.transaction.DTMFTransaction)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.header.HeaderFactory $r1;
        ph.teligent.nce.sip.transaction.DTMFTransaction $r2;
        java.lang.String $r3, $r5, $r6, $r7, $r10, $r11, $r12;
        ph.teligent.jsip.sip.address.SipUri $r4, r16;
        java.security.MessageDigest $r8;
        long $l0;
        byte[] $r9;
        jsip.sip.header.ProxyAuthorizationHeader $r13;
        java.lang.Throwable $r14, $r15;
        java.security.NoSuchAlgorithmException r17;
        java.io.UnsupportedEncodingException r18;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: jsip.sip.header.HeaderFactory;

        $r2 := @parameter1: ph.teligent.nce.sip.transaction.DTMFTransaction;

        $r5 = virtualinvoke $r2.<ph.teligent.nce.sip.transaction.DTMFTransaction: java.lang.String getMethod()>();

        $r6 = virtualinvoke $r2.<ph.teligent.nce.sip.transaction.DTMFTransaction: java.lang.String getRealm()>();

        $r7 = virtualinvoke $r2.<ph.teligent.nce.sip.transaction.DTMFTransaction: java.lang.String getNonce()>();

     label1:
        $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label2:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r3;

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

     label3:
        $r9 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        virtualinvoke $r8.<java.security.MessageDigest: void update(byte[])>($r9);

     label4:
        $r11 = new java.lang.String;

     label5:
        $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>();

        $r10 = staticinvoke <ph.teligent.nce.sip.LocalSipProfile: java.lang.String encode(byte[])>($r9);

        specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>($r10);

     label6:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r11;

     label7:
        r16 = new ph.teligent.jsip.sip.address.SipUri;

        $r4 = r16;

        specialinvoke r16.<ph.teligent.jsip.sip.address.SipUri: void <init>()>();

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

        virtualinvoke $r4.<ph.teligent.jsip.sip.address.SipUri: void setHost(java.lang.String)>($r3);

        $r10 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        $r11 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipPassword>;

        $r12 = virtualinvoke $r4.<ph.teligent.jsip.sip.address.SipUri: java.lang.String toString()>();

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        $r5 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $r6, $r11, $r5, $r12, $r7, "00000001", $r3, "auth");

        $r13 = interfaceinvoke $r1.<jsip.sip.header.HeaderFactory: jsip.sip.header.ProxyAuthorizationHeader createProxyAuthorizationHeader(java.lang.String)>("Digest");

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setAlgorithm(java.lang.String)>("MD5");

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setNonce(java.lang.String)>($r7);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setRealm(java.lang.String)>($r6);

        $r6 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setUsername(java.lang.String)>($r6);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setURI(jsip.sip.address.URI)>($r4);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setResponse(java.lang.String)>($r5);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setQop(java.lang.String)>("auth");

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setNonceCount(int)>(1);

        $r6 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setCNonce(java.lang.String)>($r6);

        return $r13;

     label8:
        $r14 := @caughtexception;

        r17 = (java.security.NoSuchAlgorithmException) $r14;

        virtualinvoke r17.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label7;

     label9:
        $r15 := @caughtexception;

        r18 = (java.io.UnsupportedEncodingException) $r15;

        virtualinvoke r18.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label7;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label8;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label8;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label8;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label9;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label9;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label9;
    }

    public jsip.sip.header.ProxyAuthorizationHeader getProxyAuthorizationHeader(jsip.sip.header.HeaderFactory, ph.teligent.nce.sip.transaction.SmsTransaction)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.header.HeaderFactory $r1;
        ph.teligent.nce.sip.transaction.SmsTransaction $r2;
        java.lang.String $r3, $r5, $r6, $r7, $r10, $r11, $r12;
        ph.teligent.jsip.sip.address.SipUri $r4, r16;
        java.security.MessageDigest $r8;
        long $l0;
        byte[] $r9;
        jsip.sip.header.ProxyAuthorizationHeader $r13;
        java.lang.Throwable $r14, $r15;
        java.security.NoSuchAlgorithmException r17;
        java.io.UnsupportedEncodingException r18;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: jsip.sip.header.HeaderFactory;

        $r2 := @parameter1: ph.teligent.nce.sip.transaction.SmsTransaction;

        $r5 = virtualinvoke $r2.<ph.teligent.nce.sip.transaction.SmsTransaction: java.lang.String getMethod()>();

        $r6 = virtualinvoke $r2.<ph.teligent.nce.sip.transaction.SmsTransaction: java.lang.String getRealm()>();

        $r7 = virtualinvoke $r2.<ph.teligent.nce.sip.transaction.SmsTransaction: java.lang.String getNonce()>();

     label1:
        $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

     label2:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r3;

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

     label3:
        $r9 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        virtualinvoke $r8.<java.security.MessageDigest: void update(byte[])>($r9);

     label4:
        $r11 = new java.lang.String;

     label5:
        $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>();

        $r10 = staticinvoke <ph.teligent.nce.sip.LocalSipProfile: java.lang.String encode(byte[])>($r9);

        specialinvoke $r11.<java.lang.String: void <init>(java.lang.String)>($r10);

     label6:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce> = $r11;

     label7:
        r16 = new ph.teligent.jsip.sip.address.SipUri;

        $r4 = r16;

        specialinvoke r16.<ph.teligent.jsip.sip.address.SipUri: void <init>()>();

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

        virtualinvoke $r4.<ph.teligent.jsip.sip.address.SipUri: void setHost(java.lang.String)>($r3);

        $r10 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        $r11 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipPassword>;

        $r12 = virtualinvoke $r4.<ph.teligent.jsip.sip.address.SipUri: java.lang.String toString()>();

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        $r5 = staticinvoke <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r10, $r6, $r11, $r5, $r12, $r7, "00000001", $r3, "auth");

        $r13 = interfaceinvoke $r1.<jsip.sip.header.HeaderFactory: jsip.sip.header.ProxyAuthorizationHeader createProxyAuthorizationHeader(java.lang.String)>("Digest");

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setAlgorithm(java.lang.String)>("MD5");

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setNonce(java.lang.String)>($r7);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setRealm(java.lang.String)>($r6);

        $r6 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setUsername(java.lang.String)>($r6);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setURI(jsip.sip.address.URI)>($r4);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setResponse(java.lang.String)>($r5);

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setQop(java.lang.String)>("auth");

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setNonceCount(int)>(1);

        $r6 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String cnonce>;

        interfaceinvoke $r13.<jsip.sip.header.ProxyAuthorizationHeader: void setCNonce(java.lang.String)>($r6);

        return $r13;

     label8:
        $r14 := @caughtexception;

        r17 = (java.security.NoSuchAlgorithmException) $r14;

        virtualinvoke r17.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label7;

     label9:
        $r15 := @caughtexception;

        r18 = (java.io.UnsupportedEncodingException) $r15;

        virtualinvoke r18.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label7;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label8;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label8;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label8;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label9;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label9;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label9;
    }

    public java.lang.String getPublicIpAddress()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String publicIpAddress>;

        return r1;
    }

    public int getPublicSipPort()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int i0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int publicSipPort>;

        return i0;
    }

    public java.util.Map getReceivedSmsMap()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.Map r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map receivedSmsMap>;

        return r1;
    }

    public java.util.Map getRoomTransactionMap()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.Map r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map roomTransactionMap>;

        return r1;
    }

    public int getRport()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int rport>;

        return i0;
    }

    public java.lang.String getSipDomain()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

        return r1;
    }

    public java.lang.String getSipInstance()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipInstance>;

        return r1;
    }

    public java.lang.String getSipPassword()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipPassword>;

        return r1;
    }

    public int getSipPort()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int sipPort>;

        return i0;
    }

    public java.util.Map getSipRequestTransactionMap()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.Map r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map sipRequestTransactionMap>;

        return r1;
    }

    public java.util.Map getSipResponseTransactionMap()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.Map r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map sipResponseTransactionMap>;

        return r1;
    }

    public ph.teligent.jsip.sip.address.SipUri getSipUri()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        ph.teligent.jsip.sip.address.SipUri $r1, r4;
        boolean $z0;
        java.lang.String $r2;
        int $i0;
        java.lang.Throwable $r3;
        java.text.ParseException r5;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r4 = new ph.teligent.jsip.sip.address.SipUri;

        $r1 = r4;

        specialinvoke r4.<ph.teligent.jsip.sip.address.SipUri: void <init>()>();

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

     label1:
        virtualinvoke $r1.<ph.teligent.jsip.sip.address.SipUri: void setHost(java.lang.String)>($r2);

     label2:
        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        virtualinvoke $r1.<ph.teligent.jsip.sip.address.SipUri: void setUser(java.lang.String)>($r2);

        $z0 = virtualinvoke $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean isLocalProfile()>();

        if $z0 == 0 goto label4;

        $i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int localSipPort>;

        virtualinvoke $r1.<ph.teligent.jsip.sip.address.SipUri: void setPort(int)>($i0);

        return $r1;

     label3:
        $r3 := @caughtexception;

        r5 = (java.text.ParseException) $r3;

        virtualinvoke r5.<java.text.ParseException: void printStackTrace()>();

        goto label2;

     label4:
        return $r1;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public java.util.Map getSmsDeliveredNotificationMap()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.Map r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsReadNotificationMap>;

        return r1;
    }

    public java.util.Map getSmsReadNotificationMap()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.Map r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsReadNotificationMap>;

        return r1;
    }

    public java.util.Map getSmsTransactionMap()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.Map r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.Map smsTransactionMap>;

        return r1;
    }

    public jsip.sip.header.ToHeader getToHeader(jsip.sip.address.AddressFactory, jsip.sip.header.HeaderFactory)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.address.AddressFactory $r1;
        jsip.sip.header.HeaderFactory $r2;
        java.lang.String $r3, $r4;
        jsip.sip.address.SipURI $r5;
        jsip.sip.address.Address $r6;
        jsip.sip.header.ToHeader $r7;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: jsip.sip.address.AddressFactory;

        $r2 := @parameter1: jsip.sip.header.HeaderFactory;

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        $r4 = <ph.teligent.nce.sip.SettingsProvider: java.lang.String sipDomain>;

        $r5 = interfaceinvoke $r1.<jsip.sip.address.AddressFactory: jsip.sip.address.SipURI createSipURI(java.lang.String,java.lang.String)>($r3, $r4);

        $r6 = interfaceinvoke $r1.<jsip.sip.address.AddressFactory: jsip.sip.address.Address createAddress(jsip.sip.address.URI)>($r5);

        $r3 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName>;

        interfaceinvoke $r6.<jsip.sip.address.Address: void setDisplayName(java.lang.String)>($r3);

        $r7 = interfaceinvoke $r2.<jsip.sip.header.HeaderFactory: jsip.sip.header.ToHeader createToHeader(jsip.sip.address.Address,java.lang.String)>($r6, null);

        return $r7;
    }

    public java.lang.String getUserName()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, $r2, varReplacer18625;
        boolean $z0;
        ph.teligent.nce.utils.Common $r3;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 = "";

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        varReplacer18625 = "";

        $r2 = staticinvoke <ph.teligent.commons.util.text.NullChecker: java.lang.String a(java.lang.String,java.lang.String)>($r2, varReplacer18625);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <ph.teligent.nce.utils.Common: ph.teligent.nce.utils.Common b()>();

        $r1 = virtualinvoke $r3.<ph.teligent.nce.utils.Common: java.lang.String aV()>();

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName> = $r1;

     label1:
        $r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        return $r1;
    }

    public java.util.List getVideoFormats()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.List r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.List videoFormats>;

        return r1;
    }

    public boolean isLocalProfile()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

        if $r1 == null goto label1;

        $r1 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipPassword>;

        if $r1 == null goto label1;

        return 0;

     label1:
        return 1;
    }

    public boolean isRoaming()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        ph.teligent.nce.utils.Common $r1;
        java.lang.String $r2, varReplacer18420, varReplacer18421;
        boolean $z0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 = staticinvoke <ph.teligent.nce.utils.Common: ph.teligent.nce.utils.Common b()>();

        $r2 = virtualinvoke $r1.<ph.teligent.nce.utils.Common: java.lang.String be()>();

        varReplacer18421 = "GET FROM NETWORK";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer18421);

        if $z0 == 0 goto label1;

        $z0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean isRoaming>;

        return $z0;

     label1:
        $r1 = staticinvoke <ph.teligent.nce.utils.Common: ph.teligent.nce.utils.Common b()>();

        $r2 = virtualinvoke $r1.<ph.teligent.nce.utils.Common: java.lang.String be()>();

        varReplacer18420 = "ON";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer18420);

        return $z0;
    }

    public boolean isUseLocal()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        boolean z0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        z0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean useLocal>;

        return z0;
    }

    public void setAudioFormats(java.util.List)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.List $r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.util.List;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.List audioFormats> = $r1;

        return;
    }

    public void setCallIdHeader(jsip.sip.header.CallIdHeader)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.header.CallIdHeader $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: jsip.sip.header.CallIdHeader;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: jsip.sip.header.CallIdHeader callIdHeader> = $r1;

        return;
    }

    public void setCreditCardURL(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String creditCardURL> = $r1;

        return;
    }

    public void setDisplayName(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String displayName> = $r1;

        return;
    }

    public void setInitialSubscribeManager(ph.teligent.nce.background.presence.InitialSubscribeManager)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        ph.teligent.nce.background.presence.InitialSubscribeManager $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: ph.teligent.nce.background.presence.InitialSubscribeManager;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: ph.teligent.nce.background.presence.InitialSubscribeManager initialSubscribeManager> = $r1;

        return;
    }

    public void setLocalAudioRtcpPort(int)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int $i0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $i0 := @parameter0: int;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int localAudioRtcpPort> = $i0;

        return;
    }

    public void setLocalAudioRtpPort(int)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int $i0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $i0 := @parameter0: int;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int localAudioRtpPort> = $i0;

        return;
    }

    public void setLocalIpAddress(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, varReplacer18362;
        boolean $z0;
        android.content.Context $r2;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        if $r1 == null goto label2;

        varReplacer18362 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer18362);

        if $z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <ph.teligent.nce.VoopeeApplication: android.content.Context g()>();

        $r1 = staticinvoke <ph.teligent.commons.util.net.NetworkUtils: java.lang.String c(android.content.Context)>($r2);

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String localIpAddress> = $r1;

        return;

     label2:
        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String localIpAddress> = $r1;

        return;
    }

    public void setLocalSipPort(int)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int $i0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $i0 := @parameter0: int;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int localSipPort> = $i0;

        return;
    }

    public void setLocalVideoRtcpPort(int)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int $i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $i0 := @parameter0: int;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int localVideoRtcpPort> = $i0;

        return;
    }

    public void setLocalVideoRtpPort(int)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int $i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $i0 := @parameter0: int;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int localVideoRtpPort> = $i0;

        return;
    }

    public void setMSISDN(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String MSISDN> = $r1;

        return;
    }

    public void setMessageIdHeader(jsip.sip.header.CallIdHeader)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        jsip.sip.header.CallIdHeader $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: jsip.sip.header.CallIdHeader;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: jsip.sip.header.CallIdHeader messageIdHeader> = $r1;

        return;
    }

    public void setMethod(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String method> = $r1;

        return;
    }

    public void setMobileCountryCode(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, $r3, varReplacer18365, varReplacer18366, varReplacer18367;
        boolean $z0;
        ph.teligent.nce.utils.Common $r2;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        varReplacer18367 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer18367);

        if $z0 != 0 goto label1;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String mcc> = $r1;

        return;

     label1:
        $r1 = "";

        $r2 = staticinvoke <ph.teligent.nce.utils.Common: ph.teligent.nce.utils.Common b()>();

        $r3 = virtualinvoke $r2.<ph.teligent.nce.utils.Common: java.lang.String bf()>();

        varReplacer18365 = "";

        $r3 = staticinvoke <ph.teligent.commons.util.text.NullChecker: java.lang.String a(java.lang.String,java.lang.String)>($r3, varReplacer18365);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label2;

        varReplacer18366 = "my";

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String mcc> = varReplacer18366;

        return;

     label2:
        $r2 = staticinvoke <ph.teligent.nce.utils.Common: ph.teligent.nce.utils.Common b()>();

        $r1 = virtualinvoke $r2.<ph.teligent.nce.utils.Common: java.lang.String bf()>();

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String mcc> = $r1;

        return;
    }

    public void setNetworkType(int)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int $i0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $i0 := @parameter0: int;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int networkType> = $i0;

        return;
    }

    public void setNonce(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String nonce> = $r1;

        return;
    }

    public void setNumberSelected(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String numberSelected> = $r1;

        return;
    }

    public void setPublicIpAddress(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String publicIpAddress> = $r1;

        return;
    }

    public void setPublicSipPort(int)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int $i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $i0 := @parameter0: int;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int publicSipPort> = $i0;

        return;
    }

    public void setRealm(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String realm> = $r1;

        return;
    }

    public void setRoaming(boolean)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        boolean $z0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $z0 := @parameter0: boolean;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean isRoaming> = $z0;

        return;
    }

    public void setRport(int)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        int $i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $i0 := @parameter0: int;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: int rport> = $i0;

        return;
    }

    public void setSipDomain(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain> = $r1;

        return;
    }

    public void setSipInstance(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipInstance> = $r1;

        return;
    }

    public void setSipPassword(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1, varReplacer18363, varReplacer18364;
        java.lang.StringBuilder $r2;
        boolean $z0;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        varReplacer18363 = "setting password=\"";

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer18363);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer18364 = "\"";

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer18364);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipPassword> = $r1;

     label1:
        return;
    }

    public void setUseLocal(boolean)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        boolean $z0;
        int varReplacer20714;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $z0 := @parameter0: boolean;

        varReplacer20714 = 1;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean useLocal> = varReplacer20714;

        return;
    }

    public void setUserName(java.lang.String)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.lang.String;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName> = $r1;

        return;
    }

    public void setVideoFormats(java.util.List)
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        java.util.List $r1;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $r1 := @parameter0: java.util.List;

        $r0.<ph.teligent.nce.sip.LocalSipProfile: java.util.List videoFormats> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        ph.teligent.nce.sip.LocalSipProfile $r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: ph.teligent.nce.sip.LocalSipProfile;

        $z0 = virtualinvoke $r0.<ph.teligent.nce.sip.LocalSipProfile: boolean isLocalProfile()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = $r0.<ph.teligent.nce.sip.LocalSipProfile: int localSipPort>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String userName>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r2 = $r0.<ph.teligent.nce.sip.LocalSipProfile: java.lang.String sipDomain>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
