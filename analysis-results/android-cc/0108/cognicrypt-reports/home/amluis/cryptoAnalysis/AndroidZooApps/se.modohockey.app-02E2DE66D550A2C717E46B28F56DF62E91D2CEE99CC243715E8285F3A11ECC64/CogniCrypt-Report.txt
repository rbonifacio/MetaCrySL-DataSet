Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer517)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String decrypt(java.lang.String)>
		SHA-256: 280cdf7bf060f312cf5d847001637ce44b283b1c74d3e10f90fb9614ba05f3a4
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r4.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String generateAesKeyValue()>
		SHA-256: f3aa2d57e0b0838ed695325010934935338d83c59f3159f4d2152fa7347da8fa
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer180)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: javax.crypto.SecretKey generatePBEKey(char[],byte[],java.lang.String,int,int)>
		SHA-256: 114e8852de9d39afff26a86fde11d1ae3a0a68404cf87b8b5742ce64afb9e7cf
		Secure: false
	Object:
		Variable: varReplacer524
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer524)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String encrypt(java.lang.String)>
		SHA-256: a3d39beb36605a994412e32c32385c064c6b08503891bbdf953320d480eb1a06
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r14 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <se.accumulate.android.security.AppIdHandler: byte[] getAppIdKey(se.accumulate.android.IMeContext)>
		SHA-256: 6aed4d401adb0022a425271ca37332b72849ee38d27cc82c9bcf035184f21cc7
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String encrypt(java.lang.String)>
		SHA-256: c76a90aa0f353570596d0ed8c9f75aa729fb49e5a2af5f0aa4ebc1438abc87b2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: bb1708c8c860625e653bfcd02a2ceee7637202c4b42f9c00f973d1f7fa710711
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer524)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String encrypt(java.lang.String)>
		SHA-256: 73876f020cda0077a57b2e99d293d5fe77831623a2debf1ce3bb3eef294619d8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer181)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: javax.crypto.SecretKey generatePBEKey(char[],byte[],java.lang.String,int,int)>
		SHA-256: 24bc16db1b085ed63424c9663615dabd79ea1163174d5e32dea3658f7321d48
		Secure: false
	Object:
		Variable: varReplacer378
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer378)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: 63dbba6e7e53eedc7fad11f499196933a920b11396ad6790771afa5c1812beaf
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <se.accumulate.android.security.TamperValidation: java.lang.String createChecksum(android.content.Context)>
		SHA-256: 7ec5548c52803b4b0ddb548ec1b634face767f8681a2f5258d22355f3aab59f7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer171)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String generateAesKeyValue()>
		SHA-256: d4ee65d3af8a9c45c4d8defc9f28f4e0e4476811d21e4dc8201bc1e17b8f84e9
		Secure: true
	Object:
		Variable: varReplacer517
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer517)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String decrypt(java.lang.String)>
		SHA-256: 3660c5afed9eb2a8b9d4a5915b07774a2fe56eccd8f5f8228a75055b1ca3d6cc
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer360)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],android.content.Context)>
		SHA-256: ad3e0c9c318755af80be490bf1f3949ed2e7851f2e9b60c0dbb7d581ff1d17b6
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer375)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: 425b9bf7890b74e2a6e82033e59c429120e71bf0fd6f591c2e621076249438ea
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer346)
		Method: <se.accumulate.android.connection.RSAHandshakeEngine: byte[] generateAesKey()>
		SHA-256: 5cb6180ddbd50701aba77513049cb27c858a879f2330e04d2be9a48a5c15380b
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer372)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: 1d03bbd7077d6b50852722d7b5fffcc4e33a47a4ccbc54a44f2b166e11eb39c5
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <se.accumulate.android.security.AppIdHandler: byte[] getAppIdKeyDeprecated(se.accumulate.android.IMeContext)>
		SHA-256: adae5e692cabcf8975b8aefa3eb19966d9c2104e980a9f780ed32efab58d4313
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: 6f87aa551956e792d888baca017d28b3f2e620c6d4125798a0801f8126adc7db
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer274)
		Method: <se.accumulate.android.security.AppIdHandler: void storeAppIdentity(se.accumulate.me.core.communication.AppIdentity,se.accumulate.android.IMeContext)>
		SHA-256: b76c2b84322e56720fcf81e8466edb3fb63ad467b93cbb9e9a22fa31ba95875d
		Secure: false
	Object:
		Variable: varReplacer258
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer258)
		Method: <se.accumulate.android.security.AppIdHandler: se.accumulate.me.core.communication.AppIdentity loadAppIdentity(se.accumulate.android.IMeContext,java.lang.String,byte[])>
		SHA-256: 64909aa30d65b6521891ea4744bf0d3ca505a69bab7d5b9ddbc6a428dc6ea364
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] calculateRfc2104Hmac(byte[],byte[])>
		SHA-256: d7437a70ea3acf99f48ab7f1a49ab29eddc6f266d1f39bf3da154e8f097c48cc
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer357)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] calculateRfc2104Hmac(byte[],byte[])>
		SHA-256: c2e1231aac4cf1e0e48d434864ad99158ca781f9b0b03a2ccb01ffa97376845b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer306)
		Method: <se.accumulate.android.security.EncryptionEngine: boolean isSignatureValid(byte[],byte[],java.security.PublicKey)>
		SHA-256: fce969ed536a6b8b61731a4aa2801a23d14b4b2aa78ac7cc2534ea76a61f2b74
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] encrypt(byte[],android.content.Context)>
		SHA-256: fbc134d51694694aae4cc0173f3f67c72979ad9ff65e1c78cd5d80b5ecde64ff
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer277)
		Method: <se.accumulate.android.security.AppIdHandler: byte[] getAppIdKeyDeprecated(se.accumulate.android.IMeContext)>
		SHA-256: aabd29043df44811b1f67551223251674d09d6eea6adde3d30ff65073d458e8a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer371)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] rsaEncrypt(byte[],java.security.PublicKey)>
		SHA-256: a09e40609c9c6eca28a704d6c2a16b9f5e43f4979535d099480cc84c67333660
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String generateAesKeyValue()>
		SHA-256: 3c0c9222f6ff5fe291d2a302296dd5888b6150d346934cb0b35748687f8093c1
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String generateAesKeyValue()>
		SHA-256: bafde10d5e3a632b365993b80334f04c4e68006454b8e7a8f6d80dd28cddcef9
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r9 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] decrypt(byte[],android.content.Context)>
		SHA-256: 5c7e7cc797658fcdabe52bbbb897b6ae34970f5234dad239977a0cc51197c8a1
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer261)
		Method: <se.accumulate.android.security.AppIdHandler: byte[] getAppIdKey(se.accumulate.android.IMeContext)>
		SHA-256: e080473b45a3de3f6fed30996720e24b215e34746e404484f66dd301439cdc3e
		Secure: true
	Object:
		Variable: varReplacer362
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer362)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],android.content.Context)>
		SHA-256: a41d2ffb912ead15ca76af4151b83285ae25ccf59feaf4aac5939654b7079524
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer361)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],android.content.Context)>
		SHA-256: d3af7896bc29371f67c4ebbf8775646093a4b7eff1a59f0e4012a0b64f82d2bd
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.Cipher
		Statement: $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer275)
		Method: <se.accumulate.android.security.AppIdHandler: void storeAppIdentity(se.accumulate.me.core.communication.AppIdentity,se.accumulate.android.IMeContext)>
		SHA-256: 3a65b762fd4e4d0896def53a84f7cc0c9b9a7cc8b11537c62e1bd3db787876ee
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: javax.crypto.SecretKey generatePBEKey(char[],byte[],java.lang.String,int,int)>
		SHA-256: eaeaaecacf2670f8492c48d5a7da8774e5792d0c44de2cfcad7cee46498bf98e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer258)
		Method: <se.accumulate.android.security.AppIdHandler: se.accumulate.me.core.communication.AppIdentity loadAppIdentity(se.accumulate.android.IMeContext,java.lang.String,byte[])>
		SHA-256: e0cee3e26df93c543da8d70ef750eac2622b208a8b6b463e2851c6cad99d6994
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer513, varReplacer514)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String decrypt(java.lang.String)>
		SHA-256: ac5f1047048fa1f9785901bbfdb8cfb8138405d6474fc8f467f569fe7b369c3d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer303)
		Method: <se.accumulate.android.security.TamperValidation: java.lang.String createChecksum(android.content.Context)>
		SHA-256: 8cc0aad81f9ac544045733014b0604bbe8cbff890d1d0c596ade8926b756e643
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer256)
		Method: <se.accumulate.android.security.AppIdHandler: se.accumulate.me.core.communication.AppIdentity loadAppIdentity(se.accumulate.android.IMeContext,java.lang.String,byte[])>
		SHA-256: 460f4f64c985e6c08df1286c50112da828bb1f7c5e38f686dddea9074b710001
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: eadddf7e499ac035f9bf9bca15223b714ce8e753100638a3074519bd34aa2789
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <se.accumulate.android.security.AppIdHandler: se.accumulate.me.core.communication.AppIdentity loadAppIdentity(se.accumulate.android.IMeContext,java.lang.String,byte[])>
		SHA-256: 6d9c8a53d499df04d3ef89dc04e9e4f55e3433fdea9f8fb808d9d3861c83734e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] rsaEncrypt(byte[],java.security.PublicKey)>
		SHA-256: e90dee8d5261837dbf33199083e5e3f6fe4d3c945193e55f969ea3bd94789ece
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer378)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: 4c5195168d43d5f3c493cc87a990fcaf09731f5cc9e6cdfc00602952e37f0124
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer521, varReplacer522)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String encrypt(java.lang.String)>
		SHA-256: 2513c8af41a9a2b81bc1fb044194e852b2ebcff305c6ac747e0892d9bf3241a2
		Secure: false
	Object:
		Variable: varReplacer357
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer357)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] calculateRfc2104Hmac(byte[],byte[])>
		SHA-256: c90e750f9a10cc3387c30b5b5670efaeb1343ccae3907365cd6540368a1bc10c
		Secure: false
	Object:
		Variable: varReplacer274
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer274)
		Method: <se.accumulate.android.security.AppIdHandler: void storeAppIdentity(se.accumulate.me.core.communication.AppIdentity,se.accumulate.android.IMeContext)>
		SHA-256: f6509b01e99275dd6452d66c8d487d91d8c943c64cfd2160009e4b01a3ff9e24
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer356)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] calculateRfc2104Hmac(byte[],byte[])>
		SHA-256: 47aee4196c05518cff0d8ee5ccef983bcc2cc5c84f9121df853d365bcda86239
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] decrypt(byte[],android.content.Context)>
		SHA-256: 81a5ce0740ce2b3d42c6b74a57cc960694a25a2b5be879ed96b6018b57af99fa
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer444)
		Method: <se.accumulate.android.properties.DeviceId: java.lang.String generateRandomDeviceIdAlphaNum(int)>
		SHA-256: 40d111e4615d7f61800dc9a6c81114e5ff35b138eb162874dbcb2c4bd2e17e
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r12)
		Method: <se.accumulate.android.security.AppIdHandler: void storeAppIdentity(se.accumulate.me.core.communication.AppIdentity,se.accumulate.android.IMeContext)>
		SHA-256: 4bd72abec839b0d9e3d2aa8fce2924f3fbf4597c3429c2d8befc71cc0cc4d6c3
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: bb25b1e0936fe595c08f3cd3c1c2677924423a8b2f0968b009e3523aa6a1e309
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r2 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <se.accumulate.android.security.AppIdHandler: se.accumulate.me.core.communication.AppIdentity loadAppIdentity(se.accumulate.android.IMeContext,java.lang.String,byte[])>
		SHA-256: 4110cbc75bdbbbb3d8e885b630c40a9471c9c7923ba6b2d1cda3cbe9a15dcdfc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer362)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],android.content.Context)>
		SHA-256: 7f2cb352d331ed96aa75a818069bb956ed88fc2a950bc6c0d59c9248930107d7
		Secure: false
	Object:
		Variable: varReplacer180
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer180)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: javax.crypto.SecretKey generatePBEKey(char[],byte[],java.lang.String,int,int)>
		SHA-256: 89a2872f89b1065523aaa1fcc4d89ca45271e096b68520bb382b8c764a64f21f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <se.accumulate.android.connection.RSAHandshakeEngine: byte[] generateAesKey()>
		SHA-256: 230e6ca74d728dc81b5b32b8cdcb4add406b92b15a000cfe54f25e2d0cf3fbe3
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer381)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: 1503cfcaf244ae19871b2386dfca1411764fd4d8cedd2ec77a2151a5408f1431
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <se.accumulate.android.security.EncryptionEngine: boolean isSignatureValid(byte[],byte[],java.security.PublicKey)>
		SHA-256: ad8b99ea1a3ec78b4316d42ee007304f5d4327ab04e1549f95e43c9be6a794c5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <se.accumulate.android.security.EncryptionEngine: byte[] encrypt(byte[],android.content.Context)>
		SHA-256: fbc134d51694694aae4cc0173f3f67c72979ad9ff65e1c78cd5d80b5ecde64ff
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer379)
		Method: <se.accumulate.android.security.EncryptionEngine: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)>
		SHA-256: bffedd7cc139669f7302c93893c1b7dbd4322a5dfa24b35e48fe9c7388d9a8e9
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.closepayment.mobileorder.model.storage.SecurePreferences: java.lang.String decrypt(java.lang.String)>
		SHA-256: 44a09f863490cad53038f05fdddf0b35da10368876a0def9f20b85674f34550a
		Secure: false

Findings in Java Class: com.closepayment.mobileorder.model.storage.SecurePreferences

	 in Method: javax.crypto.SecretKey generatePBEKey(char[],byte[],java.lang.String,int,int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #114e8852de9d39afff26a86fde11d1ae3a0a68404cf87b8b5742ce64afb9e7cf)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer180)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #114e8852de9d39afff26a86fde11d1ae3a0a68404cf87b8b5742ce64afb9e7cf)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #114e8852de9d39afff26a86fde11d1ae3a0a68404cf87b8b5742ce64afb9e7cf)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer180)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #24bc16db1b085ed63424c9663615dabd79ea1163174d5e32dea3658f7321d48)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {Insecure}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer181)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer180)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #24bc16db1b085ed63424c9663615dabd79ea1163174d5e32dea3658f7321d48)
			First parameter (with value "PBEWithMD5AndDES") should be any of {Insecure}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer181)


	 in Method: java.lang.String decrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ac5f1047048fa1f9785901bbfdb8cfb8138405d6474fc8f467f569fe7b369c3d)
			First parameter (with value "AES") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer513, varReplacer514)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer517)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer515, $r3)


	 in Method: java.lang.String encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer523, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2513c8af41a9a2b81bc1fb044194e852b2ebcff305c6ac747e0892d9bf3241a2)
			First parameter (with value "AES") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer521, varReplacer522)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer524)


Findings in Java Class: se.accumulate.android.security.AppIdHandler

	 in Method: se.accumulate.me.core.communication.AppIdentity loadAppIdentity(se.accumulate.android.IMeContext,java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #460f4f64c985e6c08df1286c50112da828bb1f7c5e38f686dddea9074b710001)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer256)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer259, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer258)


	 in Method: void storeAppIdentity(se.accumulate.me.core.communication.AppIdentity,se.accumulate.android.IMeContext)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer272, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer274)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3a65b762fd4e4d0896def53a84f7cc0c9b9a7cc8b11537c62e1bd3db787876ee)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer275)


Findings in Java Class: se.accumulate.android.security.TamperValidation

	 in Method: java.lang.String createChecksum(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8cc0aad81f9ac544045733014b0604bbe8cbff890d1d0c596ade8926b756e643)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer303)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #8cc0aad81f9ac544045733014b0604bbe8cbff890d1d0c596ade8926b756e643)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: se.accumulate.android.security.EncryptionEngine

	 in Method: boolean isSignatureValid(byte[],byte[],java.security.PublicKey)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #fce969ed536a6b8b61731a4aa2801a23d14b4b2aa78ac7cc2534ea76a61f2b74)
			First parameter (with value "SHA1withRSA") should be any of {SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA}
			at statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer306)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2)


	 in Method: void setAesKey(byte[],android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer362)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ad3e0c9c318755af80be490bf1f3949ed2e7851f2e9b60c0dbb7d581ff1d17b6)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer360)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d3af7896bc29371f67c4ebbf8775646093a4b7eff1a59f0e4012a0b64f82d2bd)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer361)


	 in Method: void setAesKey(byte[],byte[],java.lang.String,java.lang.String,byte[],int,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer378)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer374, $r20)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #425b9bf7890b74e2a6e82033e59c429120e71bf0fd6f591c2e621076249438ea)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer375)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #425b9bf7890b74e2a6e82033e59c429120e71bf0fd6f591c2e621076249438ea)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r1 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer377, $r10)


	 in Method: byte[] calculateRfc2104Hmac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer357)


	 in Method: byte[] rsaEncrypt(byte[],java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer370, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 60

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 18
	TypestateError: 2
	NeverTypeOfError: 1
	IncompleteOperationError: 1
	ConstraintError: 12
=====================================================================