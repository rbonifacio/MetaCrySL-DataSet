Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cootek.smartinputv5.skin.keyboard_theme_blood_grotto-0F4110A8A1592DE8CCE249FE2E8B2F89060554C710D93E39F1CE8DA922626DCB.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer639)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 804686202bfcfa1a61be6ccaca99a8d4dcbab12bbb6e3a7923e9de4c1759b252
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7191)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: b46b02210a4dc118c45ec7bb44fbb05dddb9a3c3f975d9a37702612f4c74fc30
		Secure: false
	Object:
		Variable: $r19
		Type: javax.crypto.Cipher
		Statement: $r19 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer609)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: e93b29ba78c680ace10a38e5f4093fb1e6c486bc2126f6d7032fc31ea72e61b9
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r19.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: bed10e67db81dc5284f6022d4fe5225eeb88fc74ca61f05812736614d21780ce
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: f43f0b80cc24f7364199acb9950a0f04dbd8191c02216c1f94e49ad87e486405
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 779fa9e7d07fc58ac6fb0f677b3796756777647dae3e7e2e128e2e27e33a0c70
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cootek.tark.ads.utility.Utility: java.lang.String MD5(java.lang.String)>
		SHA-256: d583a1e3e9d3ae31b334801516f74bc02412fa1503a24c72f11297a20cce2b9a
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r16 = virtualinvoke $r19.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: a786b2349da436e1670c50fdaf6d4dbb4b36d69c9271bec07e6c3dedc3f381b3
		Secure: false
	Object:
		Variable: varReplacer638
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer638)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 9a3e392799f010c8788ed323c1df55997e258dc3beaeced44ab53a77625632cf
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okhttp3.internal.Util: okio.ByteString sha256(okio.ByteString)>
		SHA-256: b9fa638f7c73836986e4b143e5c8a0f5f8453b073695b12e807f45e7b460c05a
		Secure: true
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer496)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 29b87d41d1d610933301bffc079383b40b05e9697bfc3795444b7f90dfd788ca
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer499)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 96346eda84406884491160f58bca4a9546342982c42f81e56a00be6f859401d5
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.SSLContext
		Statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4443)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: bda5ba989415ec6fdf90b687fd6f31bad3af023f25016d914148f445ea88c50c
		Secure: false
	Object:
		Variable: varReplacer499
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer499)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: d5300a70c88fccaf3de1844878d2b5155839ff789b1097de03f799e2f3a652b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 69a6e11629d5ad4330e68020ab53d94117f3fa7ade657ab7d93f293532f4646b
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.MessageDigest
		Statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer611)
		Method: <com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>
		SHA-256: 5b7330f75464920e48db19a7e51cfff577b08576600443d9f83ecca6deac757e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer497)
		Method: <com.cootek.usage.e: javax.crypto.Cipher a(java.lang.String,int)>
		SHA-256: 99c5255fca275b9d142824883b9d8b38edaa8a4c5a6b789b1a031dbf79043eec
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6750)
		Method: <okhttp3.internal.Util: okio.ByteString sha256(okio.ByteString)>
		SHA-256: f788116e77a82c2b8d3f9082ce5f777a8956e3bab16871672c2dd74120019b09
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2159)
		Method: <com.cootek.tark.ads.utility.Utility: java.lang.String MD5(java.lang.String)>
		SHA-256: e3b11690b61c46961527fb8021355a0e757e42f523f864639b0d06c40b68c924
		Secure: false
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer638)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: d9ff80bbffb5f12bc39b1defdb74a46bb0edee47e174f1280066a75b6886c172
		Secure: false
	Object:
		Variable: r36
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16)
		Method: <com.cootek.usage.v: void a(com.cootek.usage.v,com.cootek.usage.UsageData)>
		SHA-256: 6686e0c6d6397311c0eb730cae9d461054f5173a001789ef723e66ae7d47a3e5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5151)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: fa3c27b4de91c98591f437f6659ebcc783941a59a6da8dc7f6c5a64636a1a486
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 2ad0333bd37733d881e1e75d1c5088ccdf12edb497eece16a7e2a254cc071845
		Secure: false

Findings in Java Class: com.cootek.usage.v

	 in Method: void a(com.cootek.usage.v,com.cootek.usage.UsageData)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #99c5255fca275b9d142824883b9d8b38edaa8a4c5a6b789b1a031dbf79043eec)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #6686e0c6d6397311c0eb730cae9d461054f5173a001789ef723e66ae7d47a3e5)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke r36.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r16)


Findings in Java Class: com.cootek.usage.e

	 in Method: javax.crypto.Cipher a(java.lang.String,int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #99c5255fca275b9d142824883b9d8b38edaa8a4c5a6b789b1a031dbf79043eec)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer497)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer499)


	 in Method: java.lang.String a(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #804686202bfcfa1a61be6ccaca99a8d4dcbab12bbb6e3a7923e9de4c1759b252)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, CBC, CTS, CTR, CFB}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer639)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer638)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer642, r8)


Findings in Java Class: com.cootek.tark.ads.utility.Utility

	 in Method: java.lang.String MD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e3b11690b61c46961527fb8021355a0e757e42f523f864639b0d06c40b68c924)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2159)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4444, varReplacer4444, varReplacer4444)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #bda5ba989415ec6fdf90b687fd6f31bad3af023f25016d914148f445ea88c50c)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4443)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4444, varReplacer4444, varReplacer4444)


Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5149, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #fa3c27b4de91c98591f437f6659ebcc783941a59a6da8dc7f6c5a64636a1a486)
			First parameter (with value "SSL") should be any of {Insecure}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5151)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5149, r12, $r3)


Findings in Java Class: okhttp3.internal.Util

	 in Method: okio.ByteString sha1(okio.ByteString)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b46b02210a4dc118c45ec7bb44fbb05dddb9a3c3f975d9a37702612f4c74fc30)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7191)


Findings in Java Class: com.cootek.usage.p

	 in Method: org.apache.http.client.methods.HttpPost c()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r19.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer607, $r18)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	ConstraintError: 6
	RequiredPredicateError: 8
=====================================================================
