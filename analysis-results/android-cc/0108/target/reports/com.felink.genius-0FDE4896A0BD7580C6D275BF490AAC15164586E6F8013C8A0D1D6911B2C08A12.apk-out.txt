Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.felink.genius-0FDE4896A0BD7580C6D275BF490AAC15164586E6F8013C8A0D1D6911B2C08A12.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 421700  5000
Alive 18586  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer14604)
		Method: <com.felink.ad.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: 4dc673b6702436f2f841e3d074f4b43d5424982550d838522c29355fc9cecdb3
		Secure: false
	Object:
		Variable: varReplacer7204
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7204)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 1a3146161b84d22aa540bba4424b3804e88e762e963316299d378ccb7c0a4c27
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7204)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: b85c0f4593f208241ca964395b2e49dd6ccec73e8d047af5251c3869c3b7720b
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2333)
		Method: <b.u: void <init>(b.u$a)>
		SHA-256: dd731735087b92d22a6ee452ec1bbdfa52859c46d5d866f2d89f489eff95f312
		Secure: false
	Object:
		Variable: varReplacer4839
		Type: java.lang.String
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4839)
		Method: <com.felink.ad.utils.m: java.lang.String b(java.lang.String)>
		SHA-256: c9990329bc2728cdba683301468580d037a178567648d10f58f3a7f79f30127e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.felink.ad.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: cf6543d34ef7a10f067feef69455b5d0d0ced9b03d306e1766fc602e17fe7ad6
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 150bd5b7f4fa98bd7d19b4334335a3f364b812a82990b17162c6a447c071634b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.felink.common.c.a: java.lang.String a(byte[],boolean)>
		SHA-256: a25b03c8a1c8821e8062ccacf408d1ea845feaa6bb545d0fb83f413ddf9e0a4f
		Secure: false
	Object:
		Variable: varReplacer3096
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer3096)
		Method: <com.felink.common.c.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: cebbe735e28665ecd7f4f8acaaab534799c707ed429d733316ce0f876b596202
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 9b8a78d9edc971be91147cb909e582cf4e5d47ad532216cffc3f02042f047f00
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2989)
		Method: <com.felink.gcm.internal.d.f: java.lang.String a(java.lang.String)>
		SHA-256: bc06178926ca37f148b462357c60927e59f77145f26ec8b5140e575973b62ea5
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3097)
		Method: <com.felink.common.c.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: b9782e3e66f86826d56d913f2e884f16cb7e6b55d72fd49059aeb2744a3f714a
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdQ(java.lang.String)>
		SHA-256: ca9f975c8e1ffdb250ef06ced06658b1b1fc2f5446abfce4b67e51b0b296c6b5
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.felink.ad.utils.m: java.lang.String b(java.lang.String)>
		SHA-256: f8078c5d35f1a1f8cde7f0c291855289958093cda4ab44f513b30987782588a2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11443)
		Method: <com.felink.analytics.a.m: java.lang.String a()>
		SHA-256: 574670c548926107d20cbd477ec380c9494b6d7a42294a535dcb4a4ae02cf80b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9075)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 29c4d834d89bbed789325893cabe2e32195437062d92c3f91690ff6ead1ab7e6
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7206)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 6e6c0c37aabcc54f1eec128f9fe88cd9774303a8732abd5a41187a0deb5d9470
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.felink.analytics.a.l: byte[] a(byte[],byte[])>
		SHA-256: 83ec238377107114c6283c6be45d8e0d190cb274a39138ad7e16b08f84a920d9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11257)
		Method: <com.felink.analytics.a.l: void a(byte[])>
		SHA-256: a1abaefa255e75756751b960e24ab16ce6552ef6f11aded2a323f2a5e09e794e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6286)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: b72fa4defdaba39c35e514abf8089ad52eba19151b9936f5473f837d24276c82
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11663)
		Method: <com.felink.common.a.a: b.u a(java.lang.String)>
		SHA-256: 918a671f02c4e432d75ec5213e1eeb86966bdd690cbfed3660076c8eae14df51
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4842)
		Method: <com.felink.ad.utils.m: java.lang.String b(java.lang.String)>
		SHA-256: 77eb3232b0a72c1d754137c4d2731ebb721329c565838168026bbdd02189e39e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <com.felink.analytics.a.l: byte[] a(byte[],byte[])>
		SHA-256: ffc10bca2a199daaba8b61ba57d369819ed1943b18e5818ae4db3a2f27a7de8f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer11251, $i1)
		Method: <com.felink.analytics.a.l: byte[] a(byte[],byte[],int,int)>
		SHA-256: e2590a16e3c2f3c0f4314a9a33656b0c34556e38de67e12d7e861fbc27dc568b
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <com.felink.analytics.a.l: byte[] a(byte[],byte[],int,int)>
		SHA-256: ffc10bca2a199daaba8b61ba57d369819ed1943b18e5818ae4db3a2f27a7de8f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14606)
		Method: <com.felink.ad.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: 8bf00dc2303f2eee0796555bae1bb9613de81ab02c4139fc634be0e910f92146
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <b.a.i: c.f a(c.f)>
		SHA-256: 5c767e19c0a6614324d260a63bb288583620d110fc8d8ff07214a0c38857f0ac
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer11251, $i1)
		Method: <com.felink.analytics.a.l: byte[] a(byte[],byte[],int,int)>
		SHA-256: 3a6ea06fad44e8dfcc8b591a794f4c54ef7a5db033db6ff60d8e04467f5f9ca8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12643)
		Method: <b.a.i: c.f a(c.f)>
		SHA-256: cf44b682b33c8957bd506ddaf817f102df237537dd34efe0345ed2fe0555364
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.felink.analytics.a.l: byte[] a(byte[],byte[])>
		SHA-256: 10022f3fcd90664655f476abbb4d69c835d3b4b744a7cf69a4233c32254bbd43
		Secure: false
	Object:
		Variable: varReplacer14604
		Type: java.lang.String
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer14604)
		Method: <com.felink.ad.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: bf7ca4e7e1e2763a9f1ce1ccb6c6a4304795c90ca686e552723c1fc02f7ae857
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.felink.common.c.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: ecfb9604701122e2226beb270c7e8c8b6acbc14d5fb30ec1d7e4f9869dd65af
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzxM()>
		SHA-256: be6f59935a526a49360ac54c2d2c6de8159890710d02d7faf54ad5e3f5ee648c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3070)
		Method: <com.felink.common.c.a: java.lang.String a(byte[],boolean)>
		SHA-256: f8242cf760b306924cbfe48f5f52ade66b72ced8f2d2706f785c8b19b5c6e265
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4839)
		Method: <com.felink.ad.utils.m: java.lang.String b(java.lang.String)>
		SHA-256: 631606c319c634d0d0db74fd6baa4df936558d72f00ef0b2e450f5836f23200d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: d0f6f4706546c156ee289b202709825e5df53f7e4f36e0982c154eb3536bcb6c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer3096)
		Method: <com.felink.common.c.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: ea28a67aa43d7e120e26e98798a67034d9aec4796cbb11c964840d8a4bef0031
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 2abb37024bd464fc0c2ccf69b2ceddf0aedb43bffcb4711b7b94cf28f4b552ea
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.felink.analytics.a.l: javax.crypto.spec.IvParameterSpec c(byte[])>
		SHA-256: c0cd8035ea11590e7341899ba45ae997ce98a52ce638a1fea017e26f16339d90
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 5a58416d1a9068e8adc9791ca5ff18d0a284cda03b2d6fec148fdd3e77eb7f4e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.felink.common.c.d: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 9c6107e5dbcb48ed0411a9076553f29baafa6ae55aec29163bcc9048725deddf
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer6352)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzxM()>
		SHA-256: 645bbbdfa858d0e7a620d30741b99a901bdb2730ad3ed14632e27c645202cd1
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.felink.analytics.a.l: void a(byte[])>
		SHA-256: 22d0320bc9517965856b186c6c13d2f0c4f88815aba39eb934322ad4184a425a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.felink.gcm.internal.d.f: java.lang.String a(java.lang.String)>
		SHA-256: c2e06dfe01820b839828dd443b25fea24d2276e60fa7df30642fda2b37b5adb7
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.felink.analytics.a.m: java.lang.String a()>
		SHA-256: 979f6c1bc093b7206ea4a486df6cb72a88274f85214e77355e4b7a7028e985eb
		Secure: false

Findings in Java Class: b.u

	 in Method: void <init>(b.u$a)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #dd731735087b92d22a6ee452ec1bbdfa52859c46d5d866f2d89f489eff95f312)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2333)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2330, varReplacer2330, varReplacer2330)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2330, varReplacer2330, varReplacer2330)


Findings in Java Class: com.felink.gcm.internal.d.f

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bc06178926ca37f148b462357c60927e59f77145f26ec8b5140e575973b62ea5)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2989)


Findings in Java Class: com.felink.common.c.a

	 in Method: java.lang.String a(byte[],boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f8242cf760b306924cbfe48f5f52ade66b72ced8f2d2706f785c8b19b5c6e265)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3070)


Findings in Java Class: com.felink.ad.utils.m

	 in Method: java.lang.String b(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4840, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #77eb3232b0a72c1d754137c4d2731ebb721329c565838168026bbdd02189e39e)
			First parameter (with value "DESede") should be any of {AES, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4842)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4839)


	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer14602, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8bf00dc2303f2eee0796555bae1bb9613de81ab02c4139fc634be0e910f92146)
			First parameter (with value "DESede") should be any of {AES, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14606)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer14604)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b72fa4defdaba39c35e514abf8089ad52eba19151b9936f5473f837d24276c82)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6286)


Findings in Java Class: com.facebook.ads.internal.util.s

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #29c4d834d89bbed789325893cabe2e32195437062d92c3f91690ff6ead1ab7e6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9075)


Findings in Java Class: com.felink.analytics.a.l

	 in Method: byte[] a(byte[],byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11250, $r3, $r4)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer11251, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11250, $r3, $r4)


	 in Method: void a(byte[])
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #a1abaefa255e75756751b960e24ab16ce6552ef6f11aded2a323f2a5e09e794e)
			First parameter (with value "DESede") should be any of {Insecure}
			at statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11257)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r4 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11441, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11441, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11441, $r3, $r4)


	 in Method: javax.crypto.spec.IvParameterSpec c(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.felink.analytics.a.m

	 in Method: java.lang.String a()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #574670c548926107d20cbd477ec380c9494b6d7a42294a535dcb4a4ae02cf80b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11443)


Findings in Java Class: com.felink.common.a.a

	 in Method: b.u a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11665, r9, varReplacer11665)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11665, r9, varReplacer11665)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #918a671f02c4e432d75ec5213e1eeb86966bdd690cbfed3660076c8eae14df51)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11663)


Findings in Java Class: b.a.i

	 in Method: c.f a(c.f)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cf44b682b33c8957bd506ddaf817f102df237537dd34efe0345ed2fe0555364)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12643)


Findings in Java Class: com.duapps.ad.base.a

	 in Method: byte[] a(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7205, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7204)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.felink.common.c.d

	 in Method: byte[] a(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3098, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3098, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer3096)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 48

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 23
	ImpreciseValueExtractionError: 1
	ConstraintError: 12
=====================================================================
