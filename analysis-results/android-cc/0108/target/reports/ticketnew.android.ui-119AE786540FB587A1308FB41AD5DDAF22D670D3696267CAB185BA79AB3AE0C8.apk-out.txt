Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/ticketnew.android.ui-119AE786540FB587A1308FB41AD5DDAF22D670D3696267CAB185BA79AB3AE0C8.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7096)
		Method: <com.facebook.appevents.AppEvent: java.lang.String b(java.lang.String)>
		SHA-256: 320a00508265a4ac519441537d50f6f5c95152534627c20699794c94f78bdf48
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: 946fbde51d1d82cb8c9c8781f208942a5bcd4b5dfbdfc60fd6e1c1748c1c327d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 7fdf9633958e5a79b855419b02fe2d5e9240f88364219bd86d94ab52959500f1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2584)
		Method: <ticketnew.android.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: 6cd919c8c5aa72de6f2569403e610a2f6e0c843edc90d65264b6d0c0263c8aa9
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2817)
		Method: <com.enstage.wibmo.a.e: void <clinit>()>
		SHA-256: 9a183f765580637701dfd23cbf43364c0fc07be865baa48545a7ff13125ecf65
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1567)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 4bc9b701f431e54ea2c5c1525fa02890948cb74bdc60e23d6a49130fe57f940b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2588)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 74e1b1999a1d52ebceaa7b2c174eadafd9933fdb05f5ccd66955d12ed07b88b7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: d4f75e7af8cb2b9beb9636be7f6c704b5761c6ad731b7764de675727d6a3d6ec
		Secure: false
	Object:
		Variable: varReplacer2588
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2588)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 5c18ae5d996e2edf304fafb42ab1a85bc06c05bbbc8b4dea1624e620f9d6dbd6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] getRawKey(byte[])>
		SHA-256: 1db58a57f7a01ae5ed6db8971432ce4d5e0513bec07b11602533597e19488ccc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1566)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: b042262363770b41c667e8aa824a28f418ebb0ba493a16ae4cf6c5e85a1ace0e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4243)
		Method: <com.enstage.wibmo.a.f: javax.net.ssl.TrustManager[] a(android.content.Context,int,char[])>
		SHA-256: 55dfee4ff4b11ee343014842f9083308f863653d4e62b209340aa320c077184a
		Secure: false
	Object:
		Variable: varReplacer1566
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1566)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 79f73f5851ac5a18b2f11fcdfe084b66ff7ae741bfa6dd02375cc72824dc6503
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: 59be999f21a029ef6241871ee4fdbde55aeef24a975cd5a53fdf342a502d8a66
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 6c7a05063baf69722bdf3472ac79dad7cd8cafa170f66aabf811c81773019fca
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2819)
		Method: <com.enstage.wibmo.a.e: void <clinit>()>
		SHA-256: c27734b7b98dc95c6845ada47565dcffac4a2a7de38784597334f3e80f29a7b8
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8609)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: 216807c4783bdcc6b54481ffc99de45af83653c2d1e165db42ef13df45181cac
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 4ff8afa2916954f9a0d986129d899a15493555d793f466f2b9548afac2d34340
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: c50c863f2ff909afe1b58e13fcfc3a87e89f420204d1c66094d663a6b251de35
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8608)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: f6c0e7c6292ba43e0fe4e5c223a3a8d36f668f222bfead6ed9daddcd8875df65
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ut.mini.d.g: byte[] c(byte[])>
		SHA-256: 910a757961425bd8f806989c996c4b93274b5c6a79a649165761076ae2d51d26
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1415)
		Method: <com.ut.mini.d.g: byte[] c(byte[])>
		SHA-256: 50136ccf9c34020ce901af48b44684610ce9484411792c5fadffd6e00d91f894
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: a61f0932c04ce188e6bb166225db66224e54563f8f737d09a20ff440584eb0f2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4242)
		Method: <com.enstage.wibmo.a.b: void b(android.content.Context)>
		SHA-256: fa7b8e2a9005f0e7c598c834183de4617332200d51ecb87abea0d794f98e98b0
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.appevents.AppEvent: java.lang.String b(java.lang.String)>
		SHA-256: 1dfe87dfae67bb8493fd875d5fa4cb62fbe80c3f2cec79ae8e1cfc55a11b1ede
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.enstage.wibmo.a.b: void b(android.content.Context)>
		SHA-256: c6501d07500f0fdf920c34ff00601a378eca5229b37f22825e2d0ed88541ec8c
		Secure: true
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: 1d15918481c23eaf8ad67f8473cd6270be855d0ac1ee537eaa95c40028eb8f0e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1571, varReplacer1572)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] getRawKey(byte[])>
		SHA-256: fafc734f801cb88d6bf401fa2c1a02db62fb1827a0de97c1a23a854cf788a453
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1570)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] getRawKey(byte[])>
		SHA-256: 53f73249a6d4d6aacfe8893ab55f6d2d1dfa26fcf629f288bfe99f8b5802ff8f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: dfdfbc12720b58582472a369ee7126d2c89ffccd15b06b641717c7d7a71ba579
		Secure: false
	Object:
		Variable: varReplacer8609
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8609)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: f13a2c66513f79d3294459a5d181f156332b9e53f297a0433318b632116281f8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: c56b4a53962695dba6cf0be5933bafaaae5ee8490208939544c98c05b06de931
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <ticketnew.android.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: 979f6c1bc093b7206ea4a486df6cb72a88274f85214e77355e4b7a7028e985eb
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4847)
		Method: <okhttp3.ah: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 3c03d2849377b8cc784dd1967bb6ee1c994da0236725215ea62d0d426078ad79
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 34aa3b6ee6c7ba7ca161fa3e216f9558d03e22fe0bd8369b62d3fa741d32e768
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1640)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: 7bb9426904057d4d6311b00575a1f958deead2067086c9873e3adcaf57655222
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2587)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 9e31b174b22229a537ae97812ec298dee4fb2bb76ad0fb18df21b1b0e7fba24
		Secure: false

Findings in Java Class: com.ut.mini.d.g

	 in Method: byte[] c(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #50136ccf9c34020ce901af48b44684610ce9484411792c5fadffd6e00d91f894)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1415)


Findings in Java Class: ticketnew.android.utils.m

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6cd919c8c5aa72de6f2569403e610a2f6e0c843edc90d65264b6d0c0263c8aa9)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2584)


Findings in Java Class: com.enstage.wibmo.a.e

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9a183f765580637701dfd23cbf43364c0fc07be865baa48545a7ff13125ecf65)
			First parameter (with value "SHA-1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2817)


Findings in Java Class: com.enstage.wibmo.a.b

	 in Method: void b(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r1, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r1, $r2)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #fa7b8e2a9005f0e7c598c834183de4617332200d51ecb87abea0d794f98e98b0)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4242)


Findings in Java Class: com.enstage.wibmo.a.f

	 in Method: javax.net.ssl.TrustManager[] a(android.content.Context,int,char[])
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #55dfee4ff4b11ee343014842f9083308f863653d4e62b209340aa320c077184a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r1)


Findings in Java Class: okhttp3.ah

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3c03d2849377b8cc784dd1967bb6ee1c994da0236725215ea62d0d426078ad79)
			First parameter (with value "TLS") should be any of {Insecure}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4847)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4848, r7, varReplacer4848)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4848, r7, varReplacer4848)


Findings in Java Class: com.facebook.appevents.AppEvent

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #320a00508265a4ac519441537d50f6f5c95152534627c20699794c94f78bdf48)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7096)


Findings in Java Class: com.ta.utdid2.android.utils.AESUtils

	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8607, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8607, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8609)


	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1568, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1566)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1573, $r2)


Findings in Java Class: ticketnew.android.user.c.a

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2589, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2588)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


Findings in Java Class: com.ta.utdid2.device.UTUtdid

	 in Method: java.lang.String _calcHmac(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 37

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 6
	RequiredPredicateError: 16
	NeverTypeOfError: 1
=====================================================================
