Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.RSAHelper: byte[] encryptByte(java.security.PublicKey,byte[])>
		SHA-256: 197908b4d90e930d9d21e9c6d6eee68b1a58101e9aeb2a9c18a48463c66469a8
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2096)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String encrypt(java.security.PublicKey,byte[])>
		SHA-256: 2197fd902e7952dcc385dc0e6b2324bc05cf19aea5ff2bfc69f46c0ad9e7b7bb
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer364)
		Method: <com.sz.fspmobile.net.HttpConnection: java.net.HttpURLConnection makeUrlConnection(java.net.URL)>
		SHA-256: d0af6661993670e418601d71070cb6068a0979dc50c95c20c5e0b6ef1c4c0d9a
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <ac.kr.seoultech.m2.SeoultechWebMainActivity: boolean isSign()>
		SHA-256: 2a5c03dd41a0dd95ed642ee3369f0d856b42ceaf934b9843510093384a8132a2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String decrypt(java.security.PrivateKey,byte[])>
		SHA-256: 8aa167dbffbcf550bbceb444befe29dfb71e9f4e122e0d88235b739a0d8ed937
		Secure: false
	Object:
		Variable: varReplacer367
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer367)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 17517d378dfd898e9f1d3444431dc726ee8c65d07d0c72b3d2b74b1337f042ed
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1762)
		Method: <ac.kr.seoultech.m2.SeoultechWebMainActivity: boolean isSign()>
		SHA-256: 571cabc824121a880a05c3b534bb7184c1ecfcff54414e2f88b639936da7dfc3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer375)
		Method: <com.sz.fspmobile.util.RSAHelper: byte[] encryptByte(java.security.PublicKey,byte[])>
		SHA-256: 184351223199f0dea2ece437d1c3e3934065f5e5c20ca90c3e7dbe3c47860ea2
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.sz.pns.base.service.NetworkThread: org.apache.http.client.HttpClient getNewHttpClient()>
		SHA-256: da8980864743f0640d37b8b11ed562c9b31c2fe6c7e80700587852e4e4610a40
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 2573436cc174414da03fbbb4ff96039e8f9916bdef82aa3b9b9fdbcb0aa02325
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String[] getRSAKey()>
		SHA-256: 30f4e34ed2923be51035a55458c82545690e94b3d59401fb8d0b927e728fe6b6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 789302a18c5e2e3df7de02544700bf2c7dcda4cb7bc2b0265733b92b52d4a856
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String encrypt(java.security.PublicKey,byte[])>
		SHA-256: 71e7df40425fc73a049bab9f3d8a35c60ecf0bedaf60d2e6ed69b55ad110da74
		Secure: false
	Object:
		Variable: varReplacer378
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer378)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: e876f0c117e29a2b3f8e1be395a1ceac823589281cabb3e429bdb9c216fcdaf
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: cf8d414a97af46b7e62f4e74025b21be177b2cdb90d0ea7798ba6cbb2cca4289
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 444fb612b39bd2468dc7589842a34b14cee885f2b5a9459a2702c898a76df7a2
		Secure: false
	Object:
		Variable: varReplacer369
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer369)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>
		SHA-256: 4ccfefd3d6d79da07c8532758698196782a585ad7094d68f03f5af79bee7003a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2090)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String decrypt(java.security.PrivateKey,byte[])>
		SHA-256: 9a8e6d07b2cef88d461693c7e9b025d2dee67bb5311a86cfe071114408d2e0e5
		Secure: false
	Object:
		Variable: r11
		Type: java.security.SecureRandom
		Statement: specialinvoke r11.<java.security.SecureRandom: void <init>()>()
		Method: <com.sz.fspmobile.net.HttpConnection: java.net.HttpURLConnection makeUrlConnection(java.net.URL)>
		SHA-256: a8f16148a51b6e4027b394f1f7ec20d4748c3daacee5cd39b336be8dcaf03a45
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1271)
		Method: <com.sz.pns.base.service.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 288ce61010d1d6c678e211b68fa5a0d895c1ea463b6babf71a9eec3a71a228bb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2087)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String[] getRSAKey()>
		SHA-256: 2eca2d3d999ebf3588556769b364f4c7458581af410c0d59baf49ad5ba210d53
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer378)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 507bf96c19db53a8cd6ce726f34b12f6bab003547aaed6f5457642ea31f4d7fc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 8684519ca95251366595f3b9551c1d3f8610dc7f121cbac20215755e79dbe9c9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer369)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>
		SHA-256: 6df0e5f1324949bc524c0b0a44d23eec388d5c49ae7e32882e8e4e7cc014148a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer367)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: a28e0f8d0ac645fbedfd7b07d4fde87a76795516cbbcf294decd68b0da22da87
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 4f55213a8d8360caf6ab536b211298eea927bc247fc707288ed14480b4d51c9b
		Secure: false

Findings in Java Class: com.sz.fspmobile.net.HttpConnection

	 in Method: java.net.HttpURLConnection makeUrlConnection(java.net.URL)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d0af6661993670e418601d71070cb6068a0979dc50c95c20c5e0b6ef1c4c0d9a)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer364)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer366, r13, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer366, r13, $r1)


Findings in Java Class: com.sz.fspmobile.util.AESHelper

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer367)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer368, $r2)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer368, $r2)


	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer378)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer377, $r2)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer369)


Findings in Java Class: com.sz.pns.base.service.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #288ce61010d1d6c678e211b68fa5a0d895c1ea463b6babf71a9eec3a71a228bb)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1271)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1272, r5, varReplacer1272)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1272, r5, varReplacer1272)


Findings in Java Class: ac.kr.seoultech.m2.SeoultechWebMainActivity

	 in Method: boolean isSign()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #571cabc824121a880a05c3b534bb7184c1ecfcff54414e2f88b639936da7dfc3)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1762)


Findings in Java Class: com.sz.fspmobile.util.RSAHelper

	 in Method: java.lang.String[] getRSAKey()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #2eca2d3d999ebf3588556769b364f4c7458581af410c0d59baf49ad5ba210d53)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer2086)


	 in Method: java.lang.String encrypt(java.security.PublicKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2097, $r0)


	 in Method: java.lang.String decrypt(java.security.PrivateKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2088, $r0)


	 in Method: byte[] encryptByte(java.security.PublicKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer376, $r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 26

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	RequiredPredicateError: 12
	ForbiddenMethodError: 1
=====================================================================