public class org.emdev.utils.StringUtils extends java.lang.Object
{
    public static final org.emdev.utils.StringUtils$NaturalFileComparator NFC;
    public static final org.emdev.utils.StringUtils$NaturalStringComparator NSC;

    static void <clinit>()
    {
        org.emdev.utils.StringUtils$NaturalStringComparator $r0;
        org.emdev.utils.StringUtils$NaturalFileComparator $r1;

        nop;

        $r0 = new org.emdev.utils.StringUtils$NaturalStringComparator;

        specialinvoke $r0.<org.emdev.utils.StringUtils$NaturalStringComparator: void <init>()>();

        <org.emdev.utils.StringUtils: org.emdev.utils.StringUtils$NaturalStringComparator NSC> = $r0;

        $r1 = new org.emdev.utils.StringUtils$NaturalFileComparator;

        specialinvoke $r1.<org.emdev.utils.StringUtils$NaturalFileComparator: void <init>()>();

        <org.emdev.utils.StringUtils: org.emdev.utils.StringUtils$NaturalFileComparator NFC> = $r1;

        return;
    }

    private void <init>()
    {
        org.emdev.utils.StringUtils $r0;

        $r0 := @this: org.emdev.utils.StringUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final int compareNatural(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.text.Collator $r2;
        char $c4, $c6;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i2 = 0;

        $i3 = 0;

        $r2 = staticinvoke <java.text.Collator: java.text.Collator getInstance()>();

     label01:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 != $i0 goto label02;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 != $i0 goto label02;

        return 0;

     label02:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 != $i0 goto label03;

        return -1;

     label03:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 != $i0 goto label04;

        return 1;

     label04:
        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label24;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label24;

        $i0 = 0;

     label05:
        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        if $c4 != 48 goto label06;

        $i0 = $i0 + 1;

        $i2 = $i2 + 1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 != $i1 goto label05;

     label06:
        $i1 = 0;

     label07:
        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        if $c4 != 48 goto label08;

        $i1 = $i1 + 1;

        $i3 = $i3 + 1;

        $i5 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 != $i5 goto label07;

     label08:
        $i5 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 == $i5 goto label09;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 != 0 goto label10;

     label09:
        $i5 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 == $i5 goto label01;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label01;

     label10:
        $i5 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 == $i5 goto label11;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 != 0 goto label12;

     label11:
        $i5 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 == $i5 goto label12;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label12;

        return -1;

     label12:
        $i5 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 == $i5 goto label13;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 != 0 goto label14;

     label13:
        return 1;

     label14:
        $i5 = 0;

     label15:
        if $i5 != 0 goto label16;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $c6 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $i5 = $c4 - $c6;

     label16:
        $i2 = $i2 + 1;

        $i3 = $i3 + 1;

        $i7 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 != $i7 goto label17;

        $i7 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 != $i7 goto label17;

        if $i5 != 0 goto label28;

        $i2 = $i0 - $i1;

        return $i2;

     label17:
        $i7 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 != $i7 goto label19;

        if $i5 != 0 goto label18;

        return -1;

     label18:
        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label28;

        return -1;

     label19:
        $i7 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 != $i7 goto label21;

        if $i5 != 0 goto label20;

        return 1;

     label20:
        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label28;

        return 1;

     label21:
        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 != 0 goto label22;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 != 0 goto label22;

        if $i5 == 0 goto label01;

        return $i5;

     label22:
        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 != 0 goto label23;

        return -1;

     label23:
        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 != 0 goto label15;

        return 1;

     label24:
        $i0 = $i2;

        $i1 = $i3;

     label25:
        $i2 = $i2 + 1;

        $i5 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 >= $i5 goto label26;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label25;

     label26:
        $i3 = $i3 + 1;

        $i5 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i3 >= $i5 goto label27;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c4);

        if $z0 == 0 goto label26;

     label27:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        $r4 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i1, $i3);

        $i0 = virtualinvoke $r2.<java.text.Collator: int compare(java.lang.String,java.lang.String)>($r3, $r4);

        if $i0 == 0 goto label01;

        return $i0;

     label28:
        return $i5;
    }

    public static java.util.Comparator getNaturalFileComparator()
    {
        org.emdev.utils.StringUtils$NaturalFileComparator r0;

        r0 = <org.emdev.utils.StringUtils: org.emdev.utils.StringUtils$NaturalFileComparator NFC>;

        return r0;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer3564;
        java.lang.Throwable $r1;
        int $i0, $i1, varReplacer3562, varReplacer3563;
        java.lang.StringBuilder $r2, r5;
        java.security.MessageDigest $r3;
        byte[] $r4;
        byte $b2;
        short $s3;
        char $c4;
        java.security.NoSuchAlgorithmException r6;
        null_type varReplacer3565;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer3564 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3564);

        virtualinvoke $r3.<java.security.MessageDigest: void reset()>();

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $i0 = lengthof $r4;

        r5 = new java.lang.StringBuilder;

        $r2 = r5;

        $i1 = $i0 << 1;

     label03:
        specialinvoke r5.<java.lang.StringBuilder: void <init>(int)>($i1);

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label10;

        $b2 = $r4[$i1];

        $s3 = $b2 & 240;

        $s3 = $s3 >> 4;

     label06:
        varReplacer3562 = 16;

        $c4 = staticinvoke <java.lang.Character: char forDigit(int,int)>($s3, varReplacer3562);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

     label07:
        $b2 = $r4[$i1];

        $b2 = $b2 & 15;

     label08:
        varReplacer3563 = 16;

        $c4 = staticinvoke <java.lang.Character: char forDigit(int,int)>($b2, varReplacer3563);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

     label09:
        $i1 = $i1 + 1;

        goto label05;

     label10:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        return $r0;

     label12:
        $r1 := @caughtexception;

        r6 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer3565 = null;

        return varReplacer3565;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label12;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label12;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label12;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label12;
    }

    public static java.lang.String merge(java.lang.String, java.util.Collection)
    {
        java.lang.String $r0, $r5;
        java.util.Collection $r1;
        java.lang.StringBuffer $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Collection;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $z0 = staticinvoke <org.emdev.utils.LengthUtils: boolean isNotEmpty(java.lang.String)>($r5);

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label2:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        goto label1;

     label3:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static transient java.lang.String merge(java.lang.String, java.lang.String[])
    {
        java.lang.String $r0, $r2;
        java.lang.String[] $r1;
        java.lang.StringBuffer $r3;
        int $i0, $i1, $i2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r2 = $r1[$i1];

        $z0 = staticinvoke <org.emdev.utils.LengthUtils: boolean isNotEmpty(java.lang.String)>($r2);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        if $i2 <= 0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label2:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r0 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    public static int split(char[], int, int, int[], int[])
    {
        char[] $r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1, $r2;
        boolean $z0;
        char $c6;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: int[];

        $r2 := @parameter4: int[];

        if $r0 != null goto label1;

        return 0;

     label1:
        if $i1 == 0 goto label7;

        $i2 = $i0;

        $i3 = $i0;

        $i4 = 0;

        $z0 = 0;

     label2:
        $i5 = $i0 + $i1;

        if $i2 >= $i5 goto label6;

        $c6 = $r0[$i2];

        if $c6 == 32 goto label3;

        $c6 = $r0[$i2];

        if $c6 == 13 goto label3;

        $c6 = $r0[$i2];

        if $c6 == 10 goto label3;

        $c6 = $r0[$i2];

        if $c6 != 9 goto label5;

     label3:
        if $z0 == 0 goto label4;

        $r1[$i4] = $i3;

        $i3 = $i2 - $i3;

        $r2[$i4] = $i3;

        $i4 = $i4 + 1;

        $z0 = 0;

     label4:
        $i2 = $i2 + 1;

        $i3 = $i2;

        goto label2;

     label5:
        $z0 = 1;

        $i2 = $i2 + 1;

        goto label2;

     label6:
        if $z0 == 0 goto label8;

        $r1[$i4] = $i3;

        $i0 = $i2 - $i3;

        $r2[$i4] = $i0;

        $i0 = $i4 + 1;

        return $i0;

     label7:
        return 0;

     label8:
        return $i4;
    }

    public static java.util.Set split(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.util.LinkedHashSet $r2;
        int $i0, $i1;
        java.lang.String[] $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.util.LinkedHashSet;

        specialinvoke $r2.<java.util.LinkedHashSet: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r0);

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r0 = $r3[$i1];

        $z0 = staticinvoke <org.emdev.utils.LengthUtils: boolean isNotEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label2;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r0);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $r2;
    }
}
