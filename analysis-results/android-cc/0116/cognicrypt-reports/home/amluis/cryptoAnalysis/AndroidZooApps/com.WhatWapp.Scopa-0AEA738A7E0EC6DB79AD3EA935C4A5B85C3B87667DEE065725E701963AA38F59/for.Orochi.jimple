public class for.Orochi extends java.lang.Object implements java.lang.Cloneable
{
    static final java.util.List a;
    static final java.util.List b;
    final int A;
    final int B;
    final int C;
    final for.Mature c;
    final java.net.Proxy d;
    final java.util.List e;
    final java.util.List f;
    final java.util.List g;
    final java.util.List h;
    final for.ChizuruKagura$KyoKusanagi i;
    final java.net.ProxySelector j;
    final for.LeonaHeidern k;
    final for.GoroDaimon l;
    final for.do.do.ChangKoehan m;
    final javax.net.SocketFactory n;
    final javax.net.ssl.SSLSocketFactory o;
    final for.do.'char'.BenimaruNikaido p;
    final javax.net.ssl.HostnameVerifier q;
    final for.HeavyD r;
    final for.BenimaruNikaido s;
    final for.BenimaruNikaido t;
    final for.RugalBernstein u;
    final for.Vice v;
    final boolean w;
    final boolean x;
    final boolean y;
    final int z;

    static void <clinit>()
    {
        for.KDash[] $r0;
        for.KDash $r1;
        java.util.List $r2;
        for.IoriYagami[] $r3;
        for.IoriYagami $r4;
        for.Orochi$1 $r5;

        nop;

        $r0 = newarray (for.KDash)[2];

        $r1 = <for.KDash: for.KDash d>;

        $r0[0] = $r1;

        $r1 = <for.KDash: for.KDash b>;

        $r0[1] = $r1;

        $r2 = staticinvoke <for.do.GoroDaimon: java.util.List a(java.lang.Object[])>($r0);

        <for.Orochi: java.util.List a> = $r2;

        $r3 = newarray (for.IoriYagami)[2];

        $r4 = <for.IoriYagami: for.IoriYagami a>;

        $r3[0] = $r4;

        $r4 = <for.IoriYagami: for.IoriYagami c>;

        $r3[1] = $r4;

        $r2 = staticinvoke <for.do.GoroDaimon: java.util.List a(java.lang.Object[])>($r3);

        <for.Orochi: java.util.List b> = $r2;

        $r5 = new for.Orochi$1;

        specialinvoke $r5.<for.Orochi$1: void <init>()>();

        <for.do.KyoKusanagi: for.do.KyoKusanagi a> = $r5;

        return;
    }

    public void <init>()
    {
        for.Orochi $r0;
        for.Orochi$KyoKusanagi $r1;

        $r0 := @this: for.Orochi;

        $r1 = new for.Orochi$KyoKusanagi;

        specialinvoke $r1.<for.Orochi$KyoKusanagi: void <init>()>();

        specialinvoke $r0.<for.Orochi: void <init>(for.Orochi$KyoKusanagi)>($r1);

        return;
    }

    void <init>(for.Orochi$KyoKusanagi)
    {
        for.Orochi $r0;
        for.Orochi$KyoKusanagi $r1;
        for.Mature $r2;
        java.net.Proxy $r3;
        java.util.List $r4;
        for.ChizuruKagura$KyoKusanagi $r5;
        java.net.ProxySelector $r6;
        for.LeonaHeidern $r7;
        for.GoroDaimon $r8;
        for.do.do.ChangKoehan $r9;
        javax.net.SocketFactory $r10;
        java.util.Iterator $r11;
        boolean $z0, $z1;
        java.lang.Object $r12;
        for.IoriYagami $r13;
        javax.net.ssl.SSLSocketFactory $r14;
        for.do.'char'.BenimaruNikaido $r15;
        javax.net.ssl.HostnameVerifier $r16;
        for.HeavyD $r17;
        for.BenimaruNikaido $r18;
        for.RugalBernstein $r19;
        for.Vice $r20;
        int $i0;
        javax.net.ssl.X509TrustManager $r21;

        nop;

        $r0 := @this: for.Orochi;

        $r1 := @parameter0: for.Orochi$KyoKusanagi;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<for.Orochi$KyoKusanagi: for.Mature a>;

        $r0.<for.Orochi: for.Mature c> = $r2;

        $r3 = $r1.<for.Orochi$KyoKusanagi: java.net.Proxy b>;

        $r0.<for.Orochi: java.net.Proxy d> = $r3;

        $r4 = $r1.<for.Orochi$KyoKusanagi: java.util.List c>;

        $r0.<for.Orochi: java.util.List e> = $r4;

        $r4 = $r1.<for.Orochi$KyoKusanagi: java.util.List d>;

        $r0.<for.Orochi: java.util.List f> = $r4;

        $r4 = $r1.<for.Orochi$KyoKusanagi: java.util.List e>;

        $r4 = staticinvoke <for.do.GoroDaimon: java.util.List a(java.util.List)>($r4);

        $r0.<for.Orochi: java.util.List g> = $r4;

        $r4 = $r1.<for.Orochi$KyoKusanagi: java.util.List f>;

        $r4 = staticinvoke <for.do.GoroDaimon: java.util.List a(java.util.List)>($r4);

        $r0.<for.Orochi: java.util.List h> = $r4;

        $r5 = $r1.<for.Orochi$KyoKusanagi: for.ChizuruKagura$KyoKusanagi g>;

        $r0.<for.Orochi: for.ChizuruKagura$KyoKusanagi i> = $r5;

        $r6 = $r1.<for.Orochi$KyoKusanagi: java.net.ProxySelector h>;

        $r0.<for.Orochi: java.net.ProxySelector j> = $r6;

        $r7 = $r1.<for.Orochi$KyoKusanagi: for.LeonaHeidern i>;

        $r0.<for.Orochi: for.LeonaHeidern k> = $r7;

        $r8 = $r1.<for.Orochi$KyoKusanagi: for.GoroDaimon j>;

        $r0.<for.Orochi: for.GoroDaimon l> = $r8;

        $r9 = $r1.<for.Orochi$KyoKusanagi: for.do.do.ChangKoehan k>;

        $r0.<for.Orochi: for.do.do.ChangKoehan m> = $r9;

        $r10 = $r1.<for.Orochi$KyoKusanagi: javax.net.SocketFactory l>;

        $r0.<for.Orochi: javax.net.SocketFactory n> = $r10;

        $r4 = $r0.<for.Orochi: java.util.List f>;

        $r11 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (for.IoriYagami) $r12;

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r13.<for.IoriYagami: boolean a()>();

        if $z0 == 0 goto label4;

     label2:
        $z0 = 1;

     label3:
        goto label1;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $r14 = $r1.<for.Orochi$KyoKusanagi: javax.net.ssl.SSLSocketFactory m>;

        if $r14 != null goto label6;

        if $z0 != 0 goto label8;

     label6:
        $r14 = $r1.<for.Orochi$KyoKusanagi: javax.net.ssl.SSLSocketFactory m>;

        $r0.<for.Orochi: javax.net.ssl.SSLSocketFactory o> = $r14;

        $r15 = $r1.<for.Orochi$KyoKusanagi: for.do.'char'.BenimaruNikaido n>;

        $r0.<for.Orochi: for.do.'char'.BenimaruNikaido p> = $r15;

     label7:
        $r16 = $r1.<for.Orochi$KyoKusanagi: javax.net.ssl.HostnameVerifier o>;

        $r0.<for.Orochi: javax.net.ssl.HostnameVerifier q> = $r16;

        $r17 = $r1.<for.Orochi$KyoKusanagi: for.HeavyD p>;

        $r15 = $r0.<for.Orochi: for.do.'char'.BenimaruNikaido p>;

        $r17 = virtualinvoke $r17.<for.HeavyD: for.HeavyD a(for.do.'char'.BenimaruNikaido)>($r15);

        $r0.<for.Orochi: for.HeavyD r> = $r17;

        $r18 = $r1.<for.Orochi$KyoKusanagi: for.BenimaruNikaido q>;

        $r0.<for.Orochi: for.BenimaruNikaido s> = $r18;

        $r18 = $r1.<for.Orochi$KyoKusanagi: for.BenimaruNikaido r>;

        $r0.<for.Orochi: for.BenimaruNikaido t> = $r18;

        $r19 = $r1.<for.Orochi$KyoKusanagi: for.RugalBernstein s>;

        $r0.<for.Orochi: for.RugalBernstein u> = $r19;

        $r20 = $r1.<for.Orochi$KyoKusanagi: for.Vice t>;

        $r0.<for.Orochi: for.Vice v> = $r20;

        $z0 = $r1.<for.Orochi$KyoKusanagi: boolean u>;

        $r0.<for.Orochi: boolean w> = $z0;

        $z0 = $r1.<for.Orochi$KyoKusanagi: boolean v>;

        $r0.<for.Orochi: boolean x> = $z0;

        $z0 = $r1.<for.Orochi$KyoKusanagi: boolean w>;

        $r0.<for.Orochi: boolean y> = $z0;

        $i0 = $r1.<for.Orochi$KyoKusanagi: int x>;

        $r0.<for.Orochi: int z> = $i0;

        $i0 = $r1.<for.Orochi$KyoKusanagi: int y>;

        $r0.<for.Orochi: int A> = $i0;

        $i0 = $r1.<for.Orochi$KyoKusanagi: int z>;

        $r0.<for.Orochi: int B> = $i0;

        $i0 = $r1.<for.Orochi$KyoKusanagi: int A>;

        $r0.<for.Orochi: int C> = $i0;

        return;

     label8:
        $r21 = specialinvoke $r0.<for.Orochi: javax.net.ssl.X509TrustManager z()>();

        $r14 = specialinvoke $r0.<for.Orochi: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>($r21);

        $r0.<for.Orochi: javax.net.ssl.SSLSocketFactory o> = $r14;

        $r15 = staticinvoke <for.do.'char'.BenimaruNikaido: for.do.'char'.BenimaruNikaido a(javax.net.ssl.X509TrustManager)>($r21);

        $r0.<for.Orochi: for.do.'char'.BenimaruNikaido p> = $r15;

        goto label7;
    }

    private javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
    {
        for.Orochi $r0;
        javax.net.ssl.X509TrustManager $r1;
        javax.net.ssl.SSLContext $r2;
        java.lang.Object[] $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        java.lang.Throwable $r5;
        java.lang.AssertionError r6;
        javax.net.ssl.TrustManager[] r7;
        null_type varReplacer2348, varReplacer2349;
        java.lang.String varReplacer2350;

        nop;

        $r0 := @this: for.Orochi;

        $r1 := @parameter0: javax.net.ssl.X509TrustManager;

     label1:
        varReplacer2350 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2350);

     label2:
        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        $r3[0] = $r1;

        r7 = (javax.net.ssl.TrustManager[]) $r3;

     label3:
        varReplacer2348 = null;

        varReplacer2349 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2348, r7, varReplacer2348);

        $r4 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        r6 = new java.lang.AssertionError;

        specialinvoke r6.<java.lang.AssertionError: void <init>()>();

        throw r6;

        catch java.security.GeneralSecurityException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label5;
    }

    private javax.net.ssl.X509TrustManager z()
    {
        for.Orochi $r0;
        java.lang.String $r1, varReplacer2346;
        javax.net.ssl.TrustManagerFactory $r2;
        javax.net.ssl.TrustManager[] $r3;
        int $i0;
        javax.net.ssl.TrustManager $r4;
        boolean $z0;
        java.lang.IllegalStateException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Throwable $r7;
        java.lang.AssertionError $r8;
        javax.net.ssl.X509TrustManager $r9;
        null_type varReplacer2347;

        nop;

        $r0 := @this: for.Orochi;

     label1:
        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1);

        varReplacer2347 = null;

        virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer2347);

        $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label2:
        $i0 = lengthof $r3;

        if $i0 != 1 goto label3;

        $r4 = $r3[0];

        $z0 = $r4 instanceof javax.net.ssl.X509TrustManager;

        if $z0 != 0 goto label7;

     label3:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer2346 = "Unexpected default trust managers:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2346);

        $r1 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r1);

     label5:
        throw $r5;

     label6:
        $r7 := @caughtexception;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label7:
        $r4 = $r3[0];

        $r9 = (javax.net.ssl.X509TrustManager) $r4;

        return $r9;

        catch java.security.GeneralSecurityException from label1 to label2 with label6;
        catch java.security.GeneralSecurityException from label4 to label5 with label6;
    }

    public int a()
    {
        for.Orochi $r0;
        int i0;

        $r0 := @this: for.Orochi;

        i0 = $r0.<for.Orochi: int z>;

        return i0;
    }

    public for.ChangKoehan a(for.Whip)
    {
        for.Orochi $r0;
        for.Whip $r1;
        for.Maxima $r2;
        int varReplacer6167;

        nop;

        $r0 := @this: for.Orochi;

        $r1 := @parameter0: for.Whip;

        $r2 = new for.Maxima;

        varReplacer6167 = 0;

        specialinvoke $r2.<for.Maxima: void <init>(for.Orochi,for.Whip,boolean)>($r0, $r1, varReplacer6167);

        return $r2;
    }

    public int b()
    {
        for.Orochi $r0;
        int i0;

        $r0 := @this: for.Orochi;

        i0 = $r0.<for.Orochi: int A>;

        return i0;
    }

    public int c()
    {
        for.Orochi $r0;
        int i0;

        $r0 := @this: for.Orochi;

        i0 = $r0.<for.Orochi: int B>;

        return i0;
    }

    public java.net.Proxy d()
    {
        for.Orochi $r0;
        java.net.Proxy r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: java.net.Proxy d>;

        return r1;
    }

    public java.net.ProxySelector e()
    {
        for.Orochi $r0;
        java.net.ProxySelector r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: java.net.ProxySelector j>;

        return r1;
    }

    public for.LeonaHeidern f()
    {
        for.Orochi $r0;
        for.LeonaHeidern r1;

        nop;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: for.LeonaHeidern k>;

        return r1;
    }

    for.do.do.ChangKoehan g()
    {
        for.Orochi $r0;
        for.GoroDaimon $r1;
        for.do.do.ChangKoehan r2;

        nop;

        $r0 := @this: for.Orochi;

        $r1 = $r0.<for.Orochi: for.GoroDaimon l>;

        if $r1 == null goto label1;

        $r1 = $r0.<for.Orochi: for.GoroDaimon l>;

        r2 = $r1.<for.GoroDaimon: for.do.do.ChangKoehan a>;

        return r2;

     label1:
        r2 = $r0.<for.Orochi: for.do.do.ChangKoehan m>;

        return r2;
    }

    public for.Vice h()
    {
        for.Orochi $r0;
        for.Vice r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: for.Vice v>;

        return r1;
    }

    public javax.net.SocketFactory i()
    {
        for.Orochi $r0;
        javax.net.SocketFactory r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: javax.net.SocketFactory n>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory j()
    {
        for.Orochi $r0;
        javax.net.ssl.SSLSocketFactory r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: javax.net.ssl.SSLSocketFactory o>;

        return r1;
    }

    public javax.net.ssl.HostnameVerifier k()
    {
        for.Orochi $r0;
        javax.net.ssl.HostnameVerifier r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: javax.net.ssl.HostnameVerifier q>;

        return r1;
    }

    public for.HeavyD l()
    {
        for.Orochi $r0;
        for.HeavyD r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: for.HeavyD r>;

        return r1;
    }

    public for.BenimaruNikaido m()
    {
        for.Orochi $r0;
        for.BenimaruNikaido r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: for.BenimaruNikaido t>;

        return r1;
    }

    public for.BenimaruNikaido n()
    {
        for.Orochi $r0;
        for.BenimaruNikaido r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: for.BenimaruNikaido s>;

        return r1;
    }

    public for.RugalBernstein o()
    {
        for.Orochi $r0;
        for.RugalBernstein r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: for.RugalBernstein u>;

        return r1;
    }

    public boolean p()
    {
        for.Orochi $r0;
        boolean z0;

        $r0 := @this: for.Orochi;

        z0 = $r0.<for.Orochi: boolean w>;

        return z0;
    }

    public boolean q()
    {
        for.Orochi $r0;
        boolean z0;

        $r0 := @this: for.Orochi;

        z0 = $r0.<for.Orochi: boolean x>;

        return z0;
    }

    public boolean r()
    {
        for.Orochi $r0;
        boolean z0;

        $r0 := @this: for.Orochi;

        z0 = $r0.<for.Orochi: boolean y>;

        return z0;
    }

    public for.Mature s()
    {
        for.Orochi $r0;
        for.Mature r1;

        nop;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: for.Mature c>;

        return r1;
    }

    public java.util.List t()
    {
        for.Orochi $r0;
        java.util.List r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: java.util.List e>;

        return r1;
    }

    public java.util.List u()
    {
        for.Orochi $r0;
        java.util.List r1;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: java.util.List f>;

        return r1;
    }

    public java.util.List v()
    {
        for.Orochi $r0;
        java.util.List r1;

        nop;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: java.util.List g>;

        return r1;
    }

    public java.util.List w()
    {
        for.Orochi $r0;
        java.util.List r1;

        nop;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: java.util.List h>;

        return r1;
    }

    for.ChizuruKagura$KyoKusanagi x()
    {
        for.Orochi $r0;
        for.ChizuruKagura$KyoKusanagi r1;

        nop;

        $r0 := @this: for.Orochi;

        r1 = $r0.<for.Orochi: for.ChizuruKagura$KyoKusanagi i>;

        return r1;
    }

    public for.Orochi$KyoKusanagi y()
    {
        for.Orochi $r0;
        for.Orochi$KyoKusanagi $r1;

        nop;

        $r0 := @this: for.Orochi;

        $r1 = new for.Orochi$KyoKusanagi;

        specialinvoke $r1.<for.Orochi$KyoKusanagi: void <init>(for.Orochi)>($r0);

        return $r1;
    }
}
