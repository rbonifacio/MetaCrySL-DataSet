public class com.applacarte.util.ALCUtils extends java.lang.Object
{
    public static final java.lang.String EMAIL_PATTERN;
    public static final java.lang.String OPACITY_25PERCENT_HEX;
    public static final java.lang.String OPACITY_80PERCENT_HEX;
    private static java.lang.String appVersion;

    static void <clinit>()
    {
        java.lang.String varReplacer1304;

        nop;

        varReplacer1304 = "";

        <com.applacarte.util.ALCUtils: java.lang.String appVersion> = varReplacer1304;

        return;
    }

    public void <init>()
    {
        com.applacarte.util.ALCUtils $r0;

        $r0 := @this: com.applacarte.util.ALCUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean cellular(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(0);

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean checkConnection(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnectedOrConnecting()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void clearAllSharedPreferences()
    {
        android.content.SharedPreferences $r0;
        android.content.SharedPreferences$Editor $r1;

        $r0 = staticinvoke <com.applacarte.util.ALCUtils: android.content.SharedPreferences getSharedPreference()>();

        $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r1 = interfaceinvoke $r1.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor clear()>();

        interfaceinvoke $r1.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static void closeSoftKeyboard(android.content.Context, android.view.View)
    {
        android.content.Context $r0;
        android.view.View $r1;
        java.lang.Exception $r2;
        java.lang.Object $r3;
        android.view.inputmethod.InputMethodManager $r4;
        android.os.IBinder $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.view.View;

        if $r1 == null goto label4;

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r4 = (android.view.inputmethod.InputMethodManager) $r3;

        $r5 = virtualinvoke $r1.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r4.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r5, 0);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int convertDpToPixel(int)
    {
        int $i0;
        float $f0, $f1;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;

        $i0 := @parameter0: int;

        $f0 = (float) $i0;

        $r0 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r2.<android.util.DisplayMetrics: float density>;

        $f0 = $f0 * $f1;

        $f0 = $f0 + 0.5F;

        $i0 = (int) $f0;

        return $i0;
    }

    public static java.util.Date covertTimeToLocalTimeZone(java.lang.String)
    {
        java.lang.String $r0, $r4;
        java.lang.Throwable $r1;
        java.text.SimpleDateFormat $r2, r7;
        java.util.Locale $r3;
        java.util.TimeZone $r5;
        java.util.Date $r6;
        java.text.ParseException r8;

        $r0 := @parameter0: java.lang.String;

        r7 = new java.text.SimpleDateFormat;

        $r2 = r7;

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke r7.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("EEE, dd MMM yyyy HH:mm:ss Z", $r3);

        $r4 = staticinvoke <android.text.format.Time: java.lang.String getCurrentTimezone()>();

        $r5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>($r4);

        virtualinvoke $r2.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r5);

     label1:
        $r6 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

     label2:
        return $r6;

     label3:
        $r1 := @caughtexception;

        r8 = (java.text.ParseException) $r1;

        virtualinvoke r8.<java.text.ParseException: void printStackTrace()>();

        return null;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public static java.lang.String decimalFormattedString(int, double)
    {
        int $i0;
        double $d0;
        java.util.Locale $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.lang.Object[] $r3;
        java.lang.Double $r4;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $r0 = <java.util.Locale: java.util.Locale US>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%.");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r3[0] = $r4;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r0, $r2, $r3);

        return $r2;
    }

    public static java.io.InputStream downloadUrl(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        java.net.URL $r1;
        java.net.URLConnection $r2;
        java.net.HttpURLConnection $r3;
        java.io.InputStream $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.net.URL;

        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = (java.net.HttpURLConnection) $r2;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setReadTimeout(int)>(10000);

        virtualinvoke $r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>(15000);

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        virtualinvoke $r3.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        virtualinvoke $r3.<java.net.HttpURLConnection: void connect()>();

        $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        return $r4;
    }

    public static int dpToPx(float)
    {
        float $f0, $f1;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        $f0 := @parameter0: float;

        $r0 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 / 160.0F;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        return $i0;
    }

    public static float dpToPxF(float)
    {
        float $f0, $f1;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        $f0 := @parameter0: float;

        $r0 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 / 160.0F;

        $f0 = $f1 * $f0;

        return $f0;
    }

    public static java.lang.String encodeImageURLtoASCIIString(java.lang.String)
    {
        java.lang.String $r0, $r3;
        java.lang.Throwable $r1;
        boolean $z0;
        java.net.URI $r2;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label4;

        $r2 = new java.net.URI;

     label1:
        specialinvoke $r2.<java.net.URI: void <init>(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.net.URI: java.lang.String toASCIIString()>();

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        return $r0;

     label4:
        return "";

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public static java.lang.String getApplicationBuildVersion()
    {
        java.lang.Throwable $r0;
        java.lang.StringBuilder $r1, r6;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        java.lang.String $r4;
        android.content.pm.PackageInfo $r5;
        int $i0;
        android.content.pm.PackageManager$NameNotFoundException r7;

        r6 = new java.lang.StringBuilder;

        $r1 = r6;

     label1:
        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r2 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r4 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r5 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, 0);

     label2:
        $i0 = $r5.<android.content.pm.PackageInfo: int versionCode>;

     label3:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $r4;

     label5:
        $r0 := @caughtexception;

        r7 = (android.content.pm.PackageManager$NameNotFoundException) $r0;

        virtualinvoke r7.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return "";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    public static java.lang.String getApplicationName()
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        $r0 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r0 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r3 = virtualinvoke $r1.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r2);

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        return $r4;
    }

    public static int getColorInt(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r1, r6;
        java.lang.Throwable $r3;
        java.lang.Class $r4;
        java.lang.Exception $r5;
        java.lang.NumberFormatException r7;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label10;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label10;

     label01:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("#");

     label02:
        if $z0 == 0 goto label05;

     label03:
        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r0);

     label04:
        return $i0;

     label05:
        r6 = new java.lang.StringBuilder;

        $r1 = r6;

     label06:
        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>($r2);

     label07:
        return $i0;

     label08:
        $r3 := @caughtexception;

        $r4 = class "Lcom/applacarte/util/ALCUtils;";

        $r2 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NumberFormatException for ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <moacreative.utils.MCLog: void e(java.lang.String,java.lang.String)>($r2, $r0);

        r7 = (java.lang.NumberFormatException) $r3;

        virtualinvoke r7.<java.lang.NumberFormatException: void printStackTrace()>();

        return -16777216;

     label09:
        $r5 := @caughtexception;

        $r4 = class "Lcom/applacarte/util/ALCUtils;";

        $r2 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        r6 = new java.lang.StringBuilder;

        specialinvoke r6.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown color exception ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <moacreative.utils.MCLog: void e(java.lang.String,java.lang.String)>($r2, $r0);

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

     label10:
        return -16777216;

        catch java.lang.NumberFormatException from label01 to label02 with label08;
        catch java.lang.NumberFormatException from label03 to label04 with label08;
        catch java.lang.NumberFormatException from label06 to label07 with label08;
        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label06 to label07 with label09;
    }

    public static int getColorIntWithAlpha(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0;
        java.lang.Object[] $r2;

        $r1 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label3;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 2 goto label3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 == 0 goto label2;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = $r0;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("#%s", $r2);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("#", $r0);

     label1:
        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r1);

        return $i0;

     label2:
        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = $r0;

        $r2[1] = $r1;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("#%s%s", $r2);

        goto label1;

     label3:
        return -16777216;
    }

    public static java.lang.String getColorString(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String getColorStringWithAlpha(int,java.lang.String)>($i0, "");

        return $r0;
    }

    public static java.lang.String getColorString(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        java.lang.Object[] $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = $r0;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("#%s", $r1);

     label2:
        return $r0;
    }

    public static java.lang.String getColorStringWithAlpha(int, java.lang.String)
    {
        int $i0;
        java.lang.String $r0, $r2;
        java.lang.Exception $r1;
        java.lang.Object[] $r3;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

     label2:
        if $i0 <= 2 goto label6;

     label3:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(2);

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = $r0;

        $r3[1] = $r2;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("#%s%s", $r3);

     label4:
        return $r0;

     label5:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return "#ff000000";

     label6:
        return "";

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String getCurrentApplicationVersion()
    {
        java.lang.Throwable $r0;
        java.lang.String $r1;
        int $i0;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageInfo $r4;
        android.content.pm.PackageManager$NameNotFoundException r5;

        $r1 = <com.applacarte.util.ALCUtils: java.lang.String appVersion>;

        if $r1 == null goto label1;

        $r1 = <com.applacarte.util.ALCUtils: java.lang.String appVersion>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r1 = <com.applacarte.util.ALCUtils: java.lang.String appVersion>;

        return $r1;

     label1:
        $r2 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r1 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, 0);

     label2:
        $r1 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r1;

     label3:
        $r0 := @caughtexception;

        r5 = (android.content.pm.PackageManager$NameNotFoundException) $r0;

        virtualinvoke r5.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        return "";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static double getDecimalValue(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Exception $r1;
        double $d0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

     label2:
        return $d0;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return 0.0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getDeviceID()
    {
        short $s0;
        java.lang.Throwable $r0;
        java.lang.String $r1, $r6, $r8, $r11, varReplacer2908, varReplacer2909, varReplacer2910, varReplacer2912, varReplacer2913, varReplacer2914, varReplacer2915, varReplacer2916;
        int $i1, $i2, varReplacer2911;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.telephony.TelephonyManager $r4;
        java.lang.StringBuilder $r5, r15;
        android.content.ContentResolver $r7;
        android.net.wifi.WifiManager $r9;
        android.net.wifi.WifiInfo $r10;
        java.security.MessageDigest $r12, $r13;
        byte[] $r14;
        byte $b3;
        java.security.NoSuchAlgorithmException r16;

        nop;

        $r1 = <com.applacarte.util.ALCSettings: java.lang.String DEVICE_ID>;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label8;

        $r2 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        varReplacer2910 = "phone";

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer2910);

        $r4 = (android.telephony.TelephonyManager) $r3;

        $r1 = virtualinvoke $r4.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer2913 = "35";

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2913);

        $r6 = <android.os.Build: java.lang.String BOARD>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String BRAND>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String CPU_ABI>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String DEVICE>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String DISPLAY>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String HOST>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String ID>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String MANUFACTURER>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String MODEL>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String PRODUCT>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String TAGS>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String TYPE>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = <android.os.Build: java.lang.String USER>;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer2908 = "android_id";

        $r8 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r7, varReplacer2908);

        varReplacer2914 = "wifi";

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer2914);

        $r9 = (android.net.wifi.WifiManager) $r3;

        $r10 = virtualinvoke $r9.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r11 = virtualinvoke $r10.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = null;

     label1:
        varReplacer2916 = "MD5";

        $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2916);

     label2:
        $r12 = $r13;

     label3:
        $r14 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        varReplacer2911 = 0;

        virtualinvoke $r12.<java.security.MessageDigest: void update(byte[],int,int)>($r14, varReplacer2911, $i1);

        $r14 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>();

        $r6 = new java.lang.String;

        $r1 = $r6;

        specialinvoke $r6.<java.lang.String: void <init>()>();

        $i1 = 0;

     label4:
        $i2 = lengthof $r14;

        if $i1 >= $i2 goto label7;

        $b3 = $r14[$i1];

        $s0 = $b3 & 255;

        if $s0 > 15 goto label5;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2909 = "0";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2909);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = $i1 + 1;

        goto label4;

     label6:
        $r0 := @caughtexception;

        r16 = (java.security.NoSuchAlgorithmException) $r0;

        virtualinvoke r16.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label3;

     label7:
        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        <com.applacarte.util.ALCSettings: java.lang.String DEVICE_ID> = $r1;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer2915 = "DEVICE_ID: ";

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2915);

        $r1 = <com.applacarte.util.ALCSettings: java.lang.String DEVICE_ID>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2912 = "ALCUtils: ";

        staticinvoke <moacreative.utils.MCLog: void d(java.lang.String,java.lang.String)>(varReplacer2912, $r1);

     label8:
        $r1 = <com.applacarte.util.ALCSettings: java.lang.String DEVICE_ID>;

        return $r1;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
    }

    public static java.lang.String getHttpsUrl(java.lang.String)
    {
        java.lang.Exception $r0;
        java.lang.String $r1, $r2;
        boolean $z0;
        int $i0;
        java.lang.Object[] $r3;

        $r1 := @parameter0: java.lang.String;

     label01:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label02:
        if $z0 != 0 goto label14;

     label03:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("https");

     label04:
        if $z0 != 0 goto label14;

     label05:
        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("http");

     label06:
        if $z0 == 0 goto label14;

     label07:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(":");

     label08:
        $i0 = $i0 + 1;

     label09:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

     label10:
        $r1 = $r2;

     label11:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = $r2;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("https:%s", $r3);

     label12:
        return $r2;

     label13:
        $r0 := @caughtexception;

        virtualinvoke $r0.<java.lang.Exception: void printStackTrace()>();

     label14:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public static com.nostra13.universalimageloader.core.DisplayImageOptions getRoundImageOptions()
    {
        com.nostra13.universalimageloader.core.DisplayImageOptions$Builder $r0, $r1;
        int $i0;
        com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer $r2;
        com.nostra13.universalimageloader.core.DisplayImageOptions $r3;

        $r0 = new com.nostra13.universalimageloader.core.DisplayImageOptions$Builder;

        specialinvoke $r0.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: void <init>()>();

        $i0 = <com.applacarte.R$drawable: int ic_blank_img>;

        $r1 = virtualinvoke $r0.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int)>($i0);

        $r1 = virtualinvoke $r1.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean)>(1);

        $r1 = virtualinvoke $r1.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisk(boolean)>(1);

        $r1 = virtualinvoke $r1.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean)>(1);

        $r2 = new com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;

        specialinvoke $r2.<com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer: void <init>(int)>(20);

        virtualinvoke $r1.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.universalimageloader.core.display.BitmapDisplayer)>($r2);

        $r3 = virtualinvoke $r0.<com.nostra13.universalimageloader.core.DisplayImageOptions$Builder: com.nostra13.universalimageloader.core.DisplayImageOptions build()>();

        return $r3;
    }

    public static android.content.SharedPreferences getSharedPreference()
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r1;
        java.lang.String varReplacer1306;
        int varReplacer1307;

        nop;

        $r0 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        varReplacer1306 = "AppLaCartePref";

        varReplacer1307 = 0;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer1306, varReplacer1307);

        return $r1;
    }

    public static java.lang.String getTemplateFromResourceId(int)
    {
        int $i0;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        java.io.InputStream $r2;
        java.lang.String $r3;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

        if $r2 == null goto label1;

        $r3 = staticinvoke <com.applacarte.cache.FileLoader: java.lang.String convertInputStreamToString(java.io.InputStream)>($r2);

        return $r3;

     label1:
        return "";
    }

    public static java.lang.String getTemplateFromResources(java.lang.String)
    {
        java.lang.String $r0, $r4;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3;
        int $i0;
        java.io.InputStream $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("raw/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r0, null, $r4);

        $r1 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r2.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

        if $r5 == null goto label1;

        $r0 = staticinvoke <com.applacarte.cache.FileLoader: java.lang.String convertInputStreamToString(java.io.InputStream)>($r5);

        return $r0;

     label1:
        return "";
    }

    public static java.lang.String getTicketingUserAgent()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String getUserAgentMaster(boolean)>(1);

        return $r0;
    }

    public static java.lang.String getUserAgent()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String getUserAgentMaster(boolean)>(0);

        return $r0;
    }

    public static java.lang.String getUserAgentMaster(boolean)
    {
        boolean $z0;
        java.lang.String $r0, $r1, $r2;
        java.lang.StringBuilder $r3;

        $z0 := @parameter0: boolean;

        if $z0 == 0 goto label2;

        $r0 = <com.applacarte.util.ALCSettings: java.lang.String API_ALC_V3_TOKEN>;

     label1:
        $r1 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String getApplicationName()>();

        $r2 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String getCurrentApplicationVersion()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[AppLaCarte:k=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&v=");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Linux; Android ");

        $r1 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") Version/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Mobile/ ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r0 = <com.applacarte.util.ALCSettings: java.lang.String API_ALC_V2_TOKEN>;

        goto label1;
    }

    public static int invertColorBrightness(int, float)
    {
        int $i0;
        float $f0, $f1;
        float[] $r0;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r0 = newarray (float)[3];

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, $r0);

        $f1 = $r0[2];

        $f0 = $f1 * $f0;

        $f0 = 1.0F - $f0;

        $r0[2] = $f0;

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>($r0);

        return $i0;
    }

    public static boolean isAppNewVersionAvailable(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.lang.Exception $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String getCurrentApplicationVersion()>();

        $r2 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String normalisedVersion(java.lang.String)>($r2);

        $r0 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String normalisedVersion(java.lang.String)>($r0);

        $i0 = virtualinvoke $r0.<java.lang.String: int compareTo(java.lang.String)>($r2);

     label2:
        if $i0 <= 0 goto label4;

        return 1;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

     label4:
        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isDefaultScreen()
    {
        int $i0;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_HEIGHT>;

        if $i0 <= 480 goto label1;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_HEIGHT>;

        if $i0 >= 1024 goto label1;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_WIDTH>;

        if $i0 <= 320 goto label1;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_WIDTH>;

        if $i0 >= 720 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isEmpty(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isLargeScreen()
    {
        int $i0;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_HEIGHT>;

        if $i0 <= 480 goto label1;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_WIDTH>;

        if $i0 <= 320 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isLatLngValid(double, double)
    {
        double $d0, $d1;
        boolean $z0;
        int $i0;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z0 != 0 goto label1;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, 0.0);

        if $i0 == 0 goto label1;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, 0.0);

        if $i0 == 0 goto label1;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, -200.0);

        if $i0 == 0 goto label1;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, -200.0);

        if $i0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isNetworkAvailable(android.content.Context)
    {
        android.content.Context $r0;
        android.net.NetworkInfo $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        android.net.ConnectivityManager $r3;
        android.net.NetworkInfo[] $r4;
        android.net.NetworkInfo$State $r5, $r6;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r3 = (android.net.ConnectivityManager) $r2;

        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r1 = $r4[$i1];

        $r5 = virtualinvoke $r1.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r6 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r5 == $r6 goto label2;

        $r5 = virtualinvoke $r1.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r6 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTING>;

        if $r5 != $r6 goto label3;

     label2:
        return 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    public static boolean isNetworkConnectivityAvailabe(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        boolean $z0;
        android.net.NetworkInfo[] $r4;
        int $i0, $i1;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label3;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnectedOrConnecting()>();

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label3;

        $r3 = $r4[$i0];

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnectedOrConnecting()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean isNotEmpty(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.applacarte.util.ALCUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isOSVersionIsICS()
    {
        int $i0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isSmallScreen()
    {
        int $i0;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_HEIGHT>;

        if $i0 > 480 goto label1;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_WIDTH>;

        if $i0 > 320 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isStampExpired(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.text.SimpleDateFormat $r2, r6;
        java.lang.Throwable $r3;
        java.util.Date $r4, $r5;
        boolean $z0;
        java.text.ParseException r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        r6 = new java.text.SimpleDateFormat;

        $r2 = r6;

        specialinvoke r6.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

     label1:
        $r4 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

        $r5 = staticinvoke <com.applacarte.util.ALCUtils: java.util.Date covertTimeToLocalTimeZone(java.lang.String)>($r1);

        $r0 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r5);

        $r5 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

        $z0 = virtualinvoke $r5.<java.util.Date: boolean after(java.util.Date)>($r4);

     label2:
        if $z0 == 0 goto label4;

        return 1;

     label3:
        $r3 := @caughtexception;

        r7 = (java.text.ParseException) $r3;

        virtualinvoke r7.<java.text.ParseException: void printStackTrace()>();

     label4:
        return 0;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public static boolean isValidEmail(android.widget.EditText)
    {
        android.widget.EditText $r0;
        android.text.Editable $r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        java.util.regex.Pattern $r4;
        java.util.regex.Matcher $r5;

        $r0 := @parameter0: android.widget.EditText;

        $r1 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r0.<android.widget.EditText: android.text.Editable getText()>();

        $r3 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$");

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke $r5.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isWxgaScreen()
    {
        int $i0;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_HEIGHT>;

        if $i0 < 720 goto label1;

        $i0 = <com.applacarte.util.ALCSettings: int SCREEN_WIDTH>;

        if $i0 < 1024 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static int makeColorDarker(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int makeColorDarker(int,float)>($i0, 0.5F);

        return $i0;
    }

    public static int makeColorDarker(int, float)
    {
        int $i0;
        float $f0, $f1;
        float[] $r0;

        $i0 := @parameter0: int;

        $f0 := @parameter1: float;

        $r0 = newarray (float)[3];

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>($i0, $r0);

        $f1 = $r0[2];

        $f0 = $f1 * $f0;

        $r0[2] = $f0;

        $i0 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>($r0);

        return $i0;
    }

    public static java.lang.String normalisedVersion(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String normalisedVersion(java.lang.String,java.lang.String,int)>($r0, ".", 4);

        return $r0;
    }

    private static java.lang.String normalisedVersion(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r5;
        java.util.regex.Pattern $r3;
        java.lang.String[] $r4;
        java.lang.Object[] $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r1, 16);

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String[] split(java.lang.CharSequence)>($r0);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i1 = lengthof $r4;

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $r0 = $r4[$i2];

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(115);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r0;

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r1, $r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static void openActionViewIntent(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        android.content.Intent $r2, r7;
        android.net.Uri $r3;
        com.applacarte.GlobalVariables $r4;
        java.lang.Throwable $r5;
        java.lang.Exception $r6;
        android.content.ActivityNotFoundException r8;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <moacreative.utils.MCLog: void d(java.lang.String,java.lang.String)>("", "openActionViewIntent()");

        <com.applacarte.GlobalVariables: boolean isComingFromOutsideApp> = 1;

        r7 = new android.content.Intent;

        $r2 = r7;

     label1:
        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        specialinvoke r7.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r3);

        virtualinvoke $r2.<android.content.Intent: android.content.Intent addFlags(int)>(1074266112);

        $r4 = staticinvoke <com.applacarte.GlobalVariables: com.applacarte.GlobalVariables getInstance()>();

        virtualinvoke $r4.<com.applacarte.GlobalVariables: void setShouldLoadThemeOnNextResume(boolean)>(0);

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r2);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

        r8 = (android.content.ActivityNotFoundException) $r5;

        virtualinvoke r8.<android.content.ActivityNotFoundException: void printStackTrace()>();

        return;

     label4:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static java.lang.String parseYoutubeVideoId(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;

        $r1 = "watch?v=";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("www.youtube.com");

        if $z0 == 0 goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("watch?v=");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("watch?v=");

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("&");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(38);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        return $r0;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(int)>(47);

        $i0 = $i0 + 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r0;

     label2:
        return "";

     label3:
        return $r0;
    }

    public static android.content.Intent restoreIntent()
    {
        java.lang.Throwable $r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2;
        android.content.Intent $r3;
        java.net.URISyntaxException r4;

        $r1 = staticinvoke <com.applacarte.util.ALCUtils: android.content.SharedPreferences getSharedPreference()>();

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("NOTIF_INTENT", "");

     label1:
        $r3 = staticinvoke <android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>($r2, 0);

     label2:
        return $r3;

     label3:
        $r0 := @caughtexception;

        r4 = (java.net.URISyntaxException) $r0;

        virtualinvoke r4.<java.net.URISyntaxException: void printStackTrace()>();

        return null;

        catch java.net.URISyntaxException from label1 to label2 with label3;
    }

    public static java.lang.String roundOfTODecimal(double, int)
    {
        double $d0;
        int $i0;
        java.util.Locale $r0;
        java.text.NumberFormat $r1;
        java.text.DecimalFormat $r2;
        java.lang.String $r3;

        $d0 := @parameter0: double;

        $i0 := @parameter1: int;

        $r0 = <java.util.Locale: java.util.Locale US>;

        $r1 = staticinvoke <java.text.NumberFormat: java.text.NumberFormat getNumberInstance(java.util.Locale)>($r0);

        $r2 = (java.text.DecimalFormat) $r1;

        virtualinvoke $r2.<java.text.DecimalFormat: void setMaximumFractionDigits(int)>($i0);

        $r3 = virtualinvoke $r2.<java.text.DecimalFormat: java.lang.String format(double)>($d0);

        return $r3;
    }

    public static void saveIntent(android.content.Intent)
    {
        android.content.Intent $r0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Intent;

        $r1 = staticinvoke <com.applacarte.util.ALCUtils: android.content.SharedPreferences getSharedPreference()>();

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = virtualinvoke $r0.<android.content.Intent: java.lang.String toUri(int)>(0);

        $r2 = interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("NOTIF_INTENT", $r3);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static void setAppVersion(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        <com.applacarte.util.ALCUtils: java.lang.String appVersion> = $r0;

        return;
    }

    public static void setBooleanPreference(java.lang.String, boolean)
    {
        java.lang.String $r0, varReplacer1305;
        boolean $z0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <com.applacarte.util.ALCUtils: android.content.SharedPreferences getSharedPreference()>();

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer1305 = "is_notification_badge_required";

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>(varReplacer1305, $z0);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static void setIntPreference(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = staticinvoke <com.applacarte.util.ALCUtils: android.content.SharedPreferences getSharedPreference()>();

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>($r0, $i0);

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static void setStringPreference(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        android.content.SharedPreferences $r2;
        android.content.SharedPreferences$Editor $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.applacarte.util.ALCUtils: android.content.SharedPreferences getSharedPreference()>();

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r0, $r1);

        interfaceinvoke $r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;
    }

    public static void showSoftKeyBoard(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        java.lang.Object $r2;
        android.view.inputmethod.InputMethodManager $r3;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r3 = (android.view.inputmethod.InputMethodManager) $r2;

        virtualinvoke $r3.<android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>(2, 0);

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static android.os.Bundle startMembershipModule(android.app.Activity, com.applacarte.model.ThemeInfo, com.moacreative.membership.ui.MembershipHostFragment$EntryType)
    {
        android.app.Activity $r0;
        com.applacarte.model.ThemeInfo $r1;
        com.moacreative.membership.ui.MembershipHostFragment$EntryType $r2;
        java.util.HashMap $r3, r10;
        int $i0;
        android.os.Bundle $r4, r9;
        java.lang.String $r5;
        boolean $z0;
        java.lang.Integer $r6;
        byte $b1;
        java.lang.StringBuilder $r7, r11;
        android.content.res.Resources $r8;
        java.io.Serializable r12;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: com.applacarte.model.ThemeInfo;

        $r2 := @parameter2: com.moacreative.membership.ui.MembershipHostFragment$EntryType;

        r9 = new android.os.Bundle;

        $r4 = r9;

        specialinvoke r9.<android.os.Bundle: void <init>()>();

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getRID()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label7;

        r10 = new java.util.HashMap;

        $r3 = r10;

        specialinvoke r10.<java.util.HashMap: void <init>()>();

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getHeaderBGColor()>();

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("header_bg", $r6);

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getHeaderColor()>();

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("header_font", $r6);

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getSlideHeaderBG()>();

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("menu_header_bg", $r6);

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getSlideHeaderFont()>();

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("menu_header_font", $r6);

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getSlideHeaderLine()>();

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("menu_header_line", $r6);

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getSlideCellBG()>();

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("menu_cell_bg", $r6);

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getSlideCellFont()>();

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("menu_cell_font", $r6);

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getSlideCellLine()>();

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("menu_cell_line", $r6);

        $z0 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: boolean getForceLogin()>();

        if $z0 == 0 goto label4;

        $b1 = 1;

     label1:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b1);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("force_login", $r6);

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getHintColor()>();

        if $r5 == null goto label5;

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getHintColor()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getHintColor()>();

        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hint_color", $r6);

     label2:
        $i0 = <com.applacarte.R$drawable: int login_logo>;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("R-");

        $r5 = virtualinvoke $r1.<com.applacarte.model.ThemeInfo: java.lang.String getRID()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.moacreative.membership.PuttiMember: void initMembership(android.content.Context,java.lang.String,java.util.Map,int,boolean,android.app.Activity)>($r0, $r5, $r3, $i0, 1, $r0);

        $r8 = virtualinvoke $r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $i0 = <com.applacarte.R$bool: int is_tablet>;

        $z0 = virtualinvoke $r8.<android.content.res.Resources: boolean getBoolean(int)>($i0);

        if $z0 == 0 goto label6;

        $i0 = <com.applacarte.R$drawable: int tablet_splash_icon>;

     label3:
        r12 = (java.io.Serializable) $r2;

        virtualinvoke $r4.<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>("membership_entry_type", r12);

        $r5 = staticinvoke <com.applacarte.util.ALCUtils: java.lang.String getApplicationName()>();

        virtualinvoke $r4.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("app_name", $r5);

        virtualinvoke $r4.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("is_tablet", $z0);

        virtualinvoke $r4.<android.os.Bundle: void putInt(java.lang.String,int)>("splash_or_google_play_image", $i0);

        return $r4;

     label4:
        $b1 = 0;

        goto label1;

     label5:
        $i0 = staticinvoke <com.applacarte.util.ALCUtils: int getColorInt(java.lang.String)>("9f9f9f");

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hint_color", $r6);

        goto label2;

     label6:
        $i0 = <com.applacarte.R$drawable: int background_splash>;

        goto label3;

     label7:
        return $r4;
    }

    public static android.graphics.drawable.Drawable tintIcon(android.graphics.drawable.Drawable, int)
    {
        android.graphics.drawable.Drawable $r0, $r2;
        int $i0;
        android.graphics.PorterDuff$Mode $r1;

        $r0 := @parameter0: android.graphics.drawable.Drawable;

        $i0 := @parameter1: int;

        $r2 = virtualinvoke $r0.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>();

        $r1 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r1);

        return $r0;
    }

    public static java.lang.String toURLEncoder(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        java.io.UnsupportedEncodingException r2;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "utf-8");

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        r2 = (java.io.UnsupportedEncodingException) $r1;

        virtualinvoke r2.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return "";

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static void unbindDrawables(android.view.View)
    {
        android.view.View $r0, $r3;
        android.graphics.drawable.Drawable $r1;
        boolean $z0;
        int $i0, $i1;
        android.view.ViewGroup $r2;

        $r0 := @parameter0: android.view.View;

        $r1 = virtualinvoke $r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if $r1 == null goto label1;

        $r1 = virtualinvoke $r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

     label1:
        $z0 = $r0 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        $i0 = 0;

     label2:
        $r2 = (android.view.ViewGroup) $r0;

        $i1 = virtualinvoke $r2.<android.view.ViewGroup: int getChildCount()>();

        if $i0 >= $i1 goto label3;

        $r2 = (android.view.ViewGroup) $r0;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View getChildAt(int)>($i0);

        staticinvoke <com.applacarte.util.ALCUtils: void unbindDrawables(android.view.View)>($r3);

        $i0 = $i0 + 1;

        goto label2;

     label3:
        $z0 = $r0 instanceof android.widget.AdapterView;

        if $z0 != 0 goto label4;

        $r2 = (android.view.ViewGroup) $r0;

        virtualinvoke $r2.<android.view.ViewGroup: void removeAllViews()>();

     label4:
        return;
    }

    public static boolean validGPSRange(double, double)
    {
        double $d0, $d1, $d2;
        byte $b0;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d2 = $d1 * -1.0;

        $b0 = $d0 cmpg $d2;

        if $b0 >= 0 goto label1;

        return 0;

     label1:
        $b0 = $d1 cmpg $d0;

        if $b0 < 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static boolean validateTabType(java.lang.String)
    {
        java.lang.String $r0, $r1, $r3;
        java.lang.String[] $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.applacarte.util.ALCSettings: java.lang.String[] TAB_TYPE_ARR>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r2[$i1];

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static int valueToDp(int)
    {
        int $i0;
        float $f0, $f1;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.applacarte.ALCCoreApplication: android.content.Context getAppContext()>();

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r2.<android.util.DisplayMetrics: float density>;

        $f1 = (float) $i0;

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        return $i0;
    }

    public static boolean wifi(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(1);

        if $r3 == null goto label1;

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnected()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
