public class com.xomodigital.azimov.util.MathUtil extends java.lang.Object
{
    static final java.lang.String HEX;
    public static final java.util.Random RANDOM;
    static final java.lang.String TAG;

    static void <clinit>()
    {
        java.util.Random $r0;

        nop;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <com.xomodigital.azimov.util.MathUtil: java.util.Random RANDOM> = $r0;

        return;
    }

    public void <init>()
    {
        com.xomodigital.azimov.util.MathUtil $r0;

        $r0 := @this: com.xomodigital.azimov.util.MathUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static float clamp(float, float, float)
    {
        float $f0, $f1, $f2;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f2);

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        return $f0;
    }

    public static java.lang.String hash(java.io.FileInputStream, java.lang.String)
    {
        java.io.FileInputStream $r0;
        java.lang.String $r1;
        byte[] $r2;
        java.security.DigestInputStream $r3, r13;
        java.security.MessageDigest $r4, $r5;
        java.lang.Object $r6;
        int $i0;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, $r12;
        java.io.InputStream r14;

        $r0 := @parameter0: java.io.FileInputStream;

        $r1 := @parameter1: java.lang.String;

        $r4 = null;

     label01:
        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1);

     label02:
        $r4 = $r5;

     label03:
        $r6 = $r0;

        $r2 = newarray (byte)[1024];

     label04:
        r13 = new java.security.DigestInputStream;

     label05:
        $r3 = r13;

     label06:
        specialinvoke r13.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r0, $r4);

     label07:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r2);

     label08:
        if $i0 != -1 goto label07;

     label09:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label10:
        if $r4 == null goto label26;

        $r2 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        $r1 = staticinvoke <com.xomodigital.azimov.util.MathUtil: java.lang.String hexEncoded(byte[])>($r2);

        return $r1;

     label11:
        $r7 := @caughtexception;

        staticinvoke <com.xomodigital.azimov.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Math", $r1, $r7);

        goto label03;

     label12:
        $r8 := @caughtexception;

        staticinvoke <com.xomodigital.azimov.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Math", $r1, $r8);

        goto label10;

     label13:
        $r9 := @caughtexception;

     label14:
        staticinvoke <com.xomodigital.azimov.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Math", $r1, $r9);

     label15:
        r14 = (java.io.InputStream) $r6;

     label16:
        virtualinvoke r14.<java.io.InputStream: void close()>();

     label17:
        goto label10;

     label18:
        $r10 := @caughtexception;

        staticinvoke <com.xomodigital.azimov.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Math", $r1, $r10);

        goto label10;

     label19:
        $r11 := @caughtexception;

     label20:
        r14 = (java.io.InputStream) $r6;

     label21:
        virtualinvoke r14.<java.io.InputStream: void close()>();

     label22:
        throw $r11;

     label23:
        $r12 := @caughtexception;

        staticinvoke <com.xomodigital.azimov.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>("Math", $r1, $r12);

        goto label22;

     label24:
        $r11 := @caughtexception;

        $r6 = $r3;

        goto label20;

     label25:
        $r9 := @caughtexception;

        $r6 = $r3;

        goto label14;

     label26:
        return "";

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label11;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.lang.Throwable from label04 to label05 with label19;
        catch java.lang.Throwable from label06 to label07 with label19;
        catch java.io.IOException from label07 to label08 with label25;
        catch java.lang.Throwable from label07 to label08 with label24;
        catch java.io.IOException from label09 to label10 with label12;
        catch java.lang.Throwable from label14 to label15 with label19;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label21 to label22 with label23;
    }

    public static java.lang.String hash(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r3, varReplacer2347, varReplacer2348, varReplacer2349, varReplacer2350;
        java.lang.Throwable $r2;
        boolean $z0;
        java.security.MessageDigest $r4;
        byte[] $r5;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = "";

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        varReplacer2348 = "";

        return varReplacer2348;

     label1:
        varReplacer2347 = "MD5";

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2347);

        virtualinvoke $r4.<java.security.MessageDigest: void reset()>();

        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r5);

        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.xomodigital.azimov.util.MathUtil: java.lang.String hexEncoded(byte[])>($r5);

     label2:
        $r3 = $r0;

     label3:
        return $r3;

     label4:
        $r2 := @caughtexception;

        varReplacer2349 = "Math";

        varReplacer2350 = "MD5";

        staticinvoke <com.xomodigital.azimov.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2349, varReplacer2350, $r2);

        goto label3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
    }

    public static java.lang.String hexEncoded(byte[])
    {
        byte[] $r0, $r1;
        int $i0, $i2, $i3, $i4;
        byte $b1, $b5;
        java.lang.String $r2;
        char $c6;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i2 = lengthof $r0;

        $i2 = $i2 * 2;

        $r1 = newarray (byte)[$i2];

        $i2 = 0;

        $i3 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $b1 = $r0[$i2];

        $i4 = $i3 + 1;

        $r2 = "0123456789abcdef";

        $b5 = $b1 >> 4;

        $b5 = $b5 & 15;

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($b5);

        $b5 = (byte) $c6;

        $r1[$i3] = $b5;

        $i3 = $i4 + 1;

        $r2 = "0123456789abcdef";

        $b1 = $b1 & 15;

        $c6 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($b1);

        $b1 = (byte) $c6;

        $r1[$i4] = $b1;

        $i2 = $i2 + 1;

        goto label1;

     label2:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r1);

        return $r2;
    }

    public static java.lang.String hmac(java.lang.String, java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException
    {
        java.lang.String $r0, $r1, $r2;
        javax.crypto.Mac $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        byte[] $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2);

        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r0 = virtualinvoke $r3.<javax.crypto.Mac: java.lang.String getAlgorithm()>();

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r0);

        virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r4);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r5 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5);

        $r0 = staticinvoke <com.xomodigital.azimov.util.MathUtil: java.lang.String hexEncoded(byte[])>($r5);

        return $r0;
    }

    public static java.lang.String md5(java.io.FileInputStream)
    {
        java.io.FileInputStream $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.io.FileInputStream;

        $r1 = staticinvoke <com.xomodigital.azimov.util.MathUtil: java.lang.String hash(java.io.FileInputStream,java.lang.String)>($r0, "MD5");

        return $r1;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer2346;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer2346 = "MD5";

        $r0 = staticinvoke <com.xomodigital.azimov.util.MathUtil: java.lang.String hash(java.lang.String,java.lang.String)>($r0, varReplacer2346);

        return $r0;
    }

    public static java.lang.Double parseDouble(java.lang.String, java.lang.Double)
    {
        java.lang.String $r0;
        java.lang.Double $r1, $r3;
        java.lang.Throwable $r2;
        double $d0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Double;

        if $r0 == null goto label4;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

     label2:
        return $r3;

     label3:
        $r2 := @caughtexception;

     label4:
        return $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static int parseInteger(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1;
        java.lang.Throwable $r1;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $r0 == null goto label4;

     label1:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        return $i1;

     label3:
        $r1 := @caughtexception;

     label4:
        return $i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.Integer parseInteger(java.lang.String, java.lang.Integer)
    {
        java.lang.String $r0;
        java.lang.Integer $r1, $r3;
        java.lang.Throwable $r2;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Integer;

        if $r0 == null goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

     label2:
        return $r3;

     label3:
        $r2 := @caughtexception;

     label4:
        return $r1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.Long parseLong(java.lang.String, java.lang.Long)
    {
        java.lang.String $r0;
        java.lang.Long $r1, $r3;
        java.lang.Throwable $r2;
        long $l0;
        null_type varReplacer2827;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.Long;

        if $r0 == null goto label4;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label2:
        return $r3;

     label3:
        $r2 := @caughtexception;

     label4:
        varReplacer2827 = null;

        return varReplacer2827;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.String random_string(int)
    {
        int $i0;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 = staticinvoke <com.xomodigital.azimov.util.MathUtil: java.lang.String random_string(int,int)>($i0, $i0);

        return $r0;
    }

    public static java.lang.String random_string(int, int)
    {
        int $i0, $i1, $i2;
        java.lang.StringBuffer $r0;
        java.util.Random $r1;
        java.lang.String $r2;
        byte[] $r3;
        byte $b3;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = <com.xomodigital.azimov.util.MathUtil: java.util.Random RANDOM>;

        $i1 = $i1 - $i0;

        $i1 = $i1 + 1;

        $i1 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>($i1);

        $i0 = $i0 + $i1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r2 = new java.lang.String;

        $r3 = newarray (byte)[1];

        $r1 = <com.xomodigital.azimov.util.MathUtil: java.util.Random RANDOM>;

        $i2 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(58);

        $i2 = $i2 + 65;

        $b3 = (byte) $i2;

        $r3[0] = $b3;

        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String sha1(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.xomodigital.azimov.util.MathUtil: java.lang.String hash(java.lang.String,java.lang.String)>($r0, "SHA-1");

        return $r0;
    }

    public static java.lang.String sha256(java.io.FileInputStream)
    {
        java.io.FileInputStream $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.io.FileInputStream;

        $r1 = staticinvoke <com.xomodigital.azimov.util.MathUtil: java.lang.String hash(java.io.FileInputStream,java.lang.String)>($r0, "SHA-256");

        return $r1;
    }

    public static java.lang.String sha256(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.xomodigital.azimov.util.MathUtil: java.lang.String hash(java.lang.String,java.lang.String)>($r0, "SHA-256");

        return $r0;
    }

    public static java.lang.String urlEncoded(java.lang.String)
    {
        java.lang.String $r0, $r5;
        char $c0;
        java.lang.StringBuffer $r1, r6;
        int $i1, $i2, $i4;
        java.lang.Throwable $r2;
        byte[] $r3;
        byte $b3;
        java.lang.StringBuilder $r4, r7;
        boolean $z0;
        java.io.UnsupportedEncodingException r8;

        $r0 := @parameter0: java.lang.String;

        r6 = new java.lang.StringBuffer;

        $r1 = r6;

        specialinvoke r6.<java.lang.StringBuffer: void <init>()>();

     label01:
        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label02:
        $i1 = lengthof $r3;

        $i2 = 0;

     label03:
        if $i2 >= $i1 goto label11;

        $b3 = $r3[$i2];

        $c0 = (char) $b3;

        if $c0 != 32 goto label06;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);

     label04:
        $i2 = $i2 + 1;

        goto label03;

     label05:
        $r2 := @caughtexception;

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Math.url_encoded(");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r8 = (java.io.UnsupportedEncodingException) $r2;

        $r5 = virtualinvoke r8.<java.io.UnsupportedEncodingException: java.lang.String toString()>();

        staticinvoke <com.xomodigital.azimov.util.Log: void e(java.lang.String,java.lang.String)>($r0, $r5);

        goto label02;

     label06:
        if $c0 < 65 goto label07;

        if $c0 <= 90 goto label09;

     label07:
        if $c0 < 97 goto label08;

        if $c0 <= 122 goto label09;

     label08:
        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        if $z0 != 0 goto label09;

        $r0 = ".-~_";

        $i4 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>($c0);

        if $i4 < 0 goto label10;

     label09:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        goto label04;

     label10:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(37);

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($c0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        goto label04;

     label11:
        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label05;
    }
}
