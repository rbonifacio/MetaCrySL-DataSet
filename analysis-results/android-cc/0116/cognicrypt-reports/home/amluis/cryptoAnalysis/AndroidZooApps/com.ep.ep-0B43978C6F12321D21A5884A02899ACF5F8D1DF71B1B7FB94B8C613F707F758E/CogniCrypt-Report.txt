Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer5872
		Type: java.lang.String
		Statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5872)
		Method: <com.amap.api.location.core.e: javax.crypto.spec.SecretKeySpec c(java.lang.String)>
		SHA-256: b4cc27e3ca1ef094e99f1cc464d0600691e9e8100f6e08ba40ca4c17855afcf9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.k: byte[] a(java.io.File)>
		SHA-256: 432a600c2d8de042b03291ce9b2032c06ba1fd3b5c962d7da8ef56372a7beb53
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.location.core.g: java.lang.String a(java.lang.String)>
		SHA-256: 5e2682cfd2c13b1e4c2b93bbabc0edfebe2b204bd2e9981461b509e1f710b2bb
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c8b8edeb084b423f81d7a0d57970247bbc398d800e6083a5bf891e70d459c550
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 2dd4888322a471b8f76ac18dc66756736304ba06184ce0a981df36dbcde06d84
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5872)
		Method: <com.amap.api.location.core.e: javax.crypto.spec.SecretKeySpec c(java.lang.String)>
		SHA-256: 68bcd1da373a72fdc52a74e5faf9f29ffaa47352ea309f3e213f61d2fe4f14a5
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5849)
		Method: <com.amap.api.location.core.c: java.lang.String d(android.content.Context)>
		SHA-256: ad424e4898c511c34722f792e1c4b0ac05e77c0315869a4fe93935afa6931958
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.location.core.e: byte[] a(byte[],java.lang.String)>
		SHA-256: c49ba6a6738730d7d1c34137324d75853b5fddd82db75a4c635a0406a85e49b9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4124)
		Method: <com.aps.b: void <init>()>
		SHA-256: 5671ffede7c4511928c42979d9bbc8ca6e1eee37ba6fbfe7ec811fa5e51e8f3f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5960)
		Method: <com.amap.api.location.core.e: byte[] a(byte[],java.security.Key)>
		SHA-256: 9e78628334c018726dea0c4ed0fedd4ce74b73610ad374256cad6ce4d54c139f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.location.core.e: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: ff482def6760aa2906d37658bd58fb7a6ad1db01873e35d548f7c4c11be06645
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.location.core.e: byte[] a(byte[],byte[])>
		SHA-256: b764e8d1d590042e15a7c4e06733b9c74a78d2497d838d2f316efd44320772de
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.b: java.lang.String a(java.lang.String)>
		SHA-256: 8bd01f1b13cea1ee8aa7b22593d126b95c382be3720f2aa7242a6d10f9579e18
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.b: java.lang.String a(byte[])>
		SHA-256: c628812986aa0803ebeb428bf3cb6c4e0ffeec807a375948f2bd267392ca2e50
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer5944)
		Method: <com.amap.api.location.core.c: java.lang.String a(java.lang.String)>
		SHA-256: 9375ae030fa985bf45cdb210b199f1a68b8f8035ac32d071147be54ccffc253f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.aps.p: java.lang.String c(java.lang.String)>
		SHA-256: 17da8b0a90d881d915f42bfc6c1c75527c19ad2e3fd5feb56ad02946a16d29ae
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer896)
		Method: <com.artifex.mupdflib.MD5: java.lang.String MD5Hash(java.lang.String)>
		SHA-256: 604d7a9b788051c07f1e7dd2aa951b77ff5069fbde3df56a7d6c69068356eabb
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 588587d694ec45e0e1a875a0176b4380a9d5faa5cea08af2231614568eac49d1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7336)
		Method: <com.aps.p: java.lang.String c(java.lang.String)>
		SHA-256: 961c82694e6f7fe2e0408d3ceef33c8370f192c8ad4014e21531c50ce3ff804f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.k: byte[] a(java.io.File)>
		SHA-256: d4a88e2082e0816474d26b7fdde67dbd6a0f6d182636878fc7f363f65d038f1e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5813)
		Method: <com.amap.api.location.core.g: java.lang.String a(java.lang.String)>
		SHA-256: dc5236e13c8aeea7da37c6dec19c313f3e4a556084682c61761ef3b3bb08a62a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5954)
		Method: <com.amap.api.location.core.e: byte[] a(byte[],byte[])>
		SHA-256: 7dcd8b80ebde9a023f4ead20890b4c878f35c2a9cb30ba48ca16a1146f44133f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.aps.b: void <init>()>
		SHA-256: 823f3bf0bcce3e25dc6be77eea1c9caeee124c35cdbbf9ec46fd43c93110f96c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e08d1cb2a337a72390b00629a9822529204c43915aa5fa11084d68a3f66f2e3a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.amap.api.location.core.e: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: d1413394d02dc541b61f5fa107dccf1c93bddeccbbb838c72870d47c6d46b1c4
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.an: java.lang.String b(java.lang.String)>
		SHA-256: 2f4846d454385afcd61ee9347049ac845ee5be653d77deaca7797c5053921706
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 83800ab520dfbf96375afce1af57d177a62869f0256e2d4fa8475e3f03ac6dde
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 3f5b7ea2761505c4243638277dab672f1824c5a3ce2b162aeb17ed438b0345a2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.b: java.lang.String b(java.lang.String)>
		SHA-256: ff71dc46c695623c670c8240acd12d816d6ab87408538525e2231bf86013b15f
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5956)
		Method: <com.amap.api.location.core.e: byte[] a(byte[],byte[])>
		SHA-256: 2d90206001abd68fc36a9ae1956178d4c9ee0148345d260abd5f15373a0d08e
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.artifex.mupdflib.MD5: java.lang.String MD5Hash(java.lang.String)>
		SHA-256: 7e73f53e23936ccefc713221689603bf8069f07dd1b7d8aa141cf7c47e3e3744
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.b: java.lang.String a(java.lang.String)>
		SHA-256: 98215ece6f6a60ce0739e1b9a0ef278f9806b9bc5c5215dc8b7f4f137f5edc6e
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r4.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.location.core.c: java.lang.String a(java.lang.String)>
		SHA-256: c78c105c4a5419914b1886f667455ac6dfe7657d424aaf76ff8ae65edffeadfe
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.location.core.e: byte[] a(byte[],java.security.Key)>
		SHA-256: 20738642fd8122fab1cb2327fe327ebd649651e3055ba06d00696fa588e8360a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: cf97a861c5e3ae97cdd2e650024174ec10a08d9c7f6897fb894fc99150b49b1e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: bd6f140a409b2b8eea4c643222d309349b5be56c53e649cd4f35ecf7db68f749
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5870)
		Method: <com.amap.api.location.core.e: byte[] a(byte[],java.lang.String)>
		SHA-256: fde8be3def915d791089a93f414dfabb3413a0be7f7cfe93e9210825a2151a30
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.b: java.lang.String a(byte[])>
		SHA-256: c89c52a35213273fab58ed00b4ede4a7d35bfa3a9666dfaac9c015c5e897e09b
		Secure: true
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d4ee72875b7bf463710251b50b5a7d1fc255565e41a8f450fef64e40d8bf7aea
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <com.aps.b: void <init>()>
		SHA-256: f78929cffa5b15aa63b62cf2dfe170637f31c21ebbe965c8a1f22eb8e342f33b
		Secure: false
	Object:
		Variable: varReplacer5956
		Type: java.lang.String
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5956)
		Method: <com.amap.api.location.core.e: byte[] a(byte[],byte[])>
		SHA-256: f93e4878ba87e98b30be80f355ca53977317666f61d3c2c0f58353e7ad036b4a
		Secure: true
	Object:
		Variable: varReplacer4124
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4124)
		Method: <com.aps.b: void <init>()>
		SHA-256: 737f2831e607303ea4b23ded3400059670a03126e8331e77b314f918e8ef5e68
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.location.core.c: java.lang.String a(java.lang.String)>
		SHA-256: 98742e9a30f203aaa38502d17a14c9ca401880588499484370262ef20fe13ece
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.b: java.lang.String b(java.lang.String)>
		SHA-256: f4d7c55029da89fb4a614390eefcb44ebfbc25ddf5a4e8739894a432c9e4eaef
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.amap.api.location.core.c: java.lang.String d(android.content.Context)>
		SHA-256: 71833b6fb71822d85df8473a8cfef6993961a6f01b9b68e750de32d0775357ec
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.an: java.lang.String b(java.lang.String)>
		SHA-256: 78fae8e6b8309207c5bd6135520f58e47270c41258e3022a837d120477a44aa1
		Secure: true
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <cn.jpush.android.util.i: java.lang.String o(java.lang.String)>
		SHA-256: 51b85c2e92f8e2060c908f8ee508af6780142ca4b7716a081768d372523396a7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.location.core.e: byte[] a(byte[],byte[])>
		SHA-256: 9837aa6a61e26643220ab3735b3497b0bfac77e49024e30609803a5a350374a2
		Secure: false

Findings in Java Class: com.artifex.mupdflib.MD5

	 in Method: java.lang.String MD5Hash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #604d7a9b788051c07f1e7dd2aa951b77ff5069fbde3df56a7d6c69068356eabb)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer896)


Findings in Java Class: cn.jpush.android.util.k

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d4a88e2082e0816474d26b7fdde67dbd6a0f6d182636878fc7f363f65d038f1e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.amap.api.location.a

	 in Method: void <init>(android.content.Context,android.location.LocationManager)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f78929cffa5b15aa63b62cf2dfe170637f31c21ebbe965c8a1f22eb8e342f33b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r7.<com.amap.api.location.c: void <init>(android.content.Context,com.amap.api.location.a$a,com.amap.api.location.a)>($r1, $r5, $r0)


Findings in Java Class: com.amap.api.location.core.g

	 in Method: java.lang.String a(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #dc5236e13c8aeea7da37c6dec19c313f3e4a556084682c61761ef3b3bb08a62a)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #dc5236e13c8aeea7da37c6dec19c313f3e4a556084682c61761ef3b3bb08a62a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte), java.security.MessageDigest: void update(byte[])
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #dc5236e13c8aeea7da37c6dec19c313f3e4a556084682c61761ef3b3bb08a62a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = null

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #dc5236e13c8aeea7da37c6dec19c313f3e4a556084682c61761ef3b3bb08a62a)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5813)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #dc5236e13c8aeea7da37c6dec19c313f3e4a556084682c61761ef3b3bb08a62a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5813)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #dc5236e13c8aeea7da37c6dec19c313f3e4a556084682c61761ef3b3bb08a62a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.amap.api.location.core.c

	 in Method: java.lang.String d(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ad424e4898c511c34722f792e1c4b0ac05e77c0315869a4fe93935afa6931958)
			First parameter (with value "SHA1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5849)


	 in Method: java.lang.String a(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #9375ae030fa985bf45cdb210b199f1a68b8f8035ac32d071147be54ccffc253f)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = null

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #9375ae030fa985bf45cdb210b199f1a68b8f8035ac32d071147be54ccffc253f)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer5944)


Findings in Java Class: com.amap.api.location.core.e

	 in Method: java.lang.String b(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d1413394d02dc541b61f5fa107dccf1c93bddeccbbb838c72870d47c6d46b1c4)
			First parameter (with value "SHA1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d1413394d02dc541b61f5fa107dccf1c93bddeccbbb838c72870d47c6d46b1c4)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fde8be3def915d791089a93f414dfabb3413a0be7f7cfe93e9210825a2151a30)
			First parameter (with value "AES/ECB/ZeroBytePadding") should be any of AES/{OFB, GCM, CBC, CTS, CTR, CFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5870)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5869, $r2)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5957, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7dcd8b80ebde9a023f4ead20890b4c878f35c2a9cb30ba48ca16a1146f44133f)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, GCM, CBC, CTS, CTR, CFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5954)


	 in Method: javax.crypto.spec.SecretKeySpec c(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5872)


	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5961, $r1)


Findings in Java Class: com.aps.p

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #961c82694e6f7fe2e0408d3ceef33c8370f192c8ad4014e21531c50ce3ff804f)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7336)


Findings in Java Class: cn.jpush.android.util.a

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1940, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1940, $r5, $r7)


Findings in Java Class: com.aps.b

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4124)


Findings in Java Class: cn.jpush.android.util.i

	 in Method: java.lang.String o(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1953, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1953, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1953, $r4, $r7)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 48

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 8
	TypestateError: 2
	IncompleteOperationError: 7
	RequiredPredicateError: 15
=====================================================================