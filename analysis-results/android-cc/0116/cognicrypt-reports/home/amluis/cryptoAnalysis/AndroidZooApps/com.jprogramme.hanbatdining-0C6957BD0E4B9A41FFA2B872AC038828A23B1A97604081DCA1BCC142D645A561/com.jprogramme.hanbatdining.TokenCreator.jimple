public class com.jprogramme.hanbatdining.TokenCreator extends java.lang.Object
{

    public void <init>()
    {
        com.jprogramme.hanbatdining.TokenCreator $r0;

        $r0 := @this: com.jprogramme.hanbatdining.TokenCreator;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final java.lang.String generateReqToken(java.lang.String)
    {
        java.lang.String $r0;
        int varReplacer87;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer87 = 1;

        $r0 = staticinvoke <com.jprogramme.hanbatdining.TokenCreator: java.lang.String generateReqToken(java.lang.String,boolean)>($r0, varReplacer87);

        return $r0;
    }

    public static final java.lang.String generateReqToken(java.lang.String, boolean)
    {
        java.lang.String $r0, $r7, varReplacer88, varReplacer89, varReplacer90, varReplacer91, varReplacer94, varReplacer95;
        boolean $z0;
        java.util.Date $r1;
        java.lang.Exception $r2;
        java.util.Random $r3;
        com.jprogramme.commonclass.TrippleDES $r4;
        java.lang.Object[] $r5;
        int $i0, varReplacer92, varReplacer93;
        java.lang.Integer $r6;
        java.lang.StringBuilder $r8;
        long $l1;
        java.lang.Long $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        $r4 = new com.jprogramme.commonclass.TrippleDES;

     label01:
        specialinvoke $r4.<com.jprogramme.commonclass.TrippleDES: void <init>()>();

        $r5 = newarray (java.lang.Object)[2];

        varReplacer93 = 26;

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(varReplacer93);

     label02:
        $i0 = $i0 + 97;

     label03:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[0] = $r6;

        varReplacer92 = 26;

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(varReplacer92);

     label04:
        $i0 = $i0 + 97;

     label05:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r5[1] = $r6;

        varReplacer94 = "%c%c";

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer94, $r5);

     label06:
        $r8 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer91 = "|APIR|";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer91);

        $r5 = newarray (java.lang.Object)[1];

        $l1 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r5[0] = $r9;

        varReplacer95 = "%d";

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer95, $r5);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer89 = "|";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer89);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = virtualinvoke $r4.<com.jprogramme.commonclass.TrippleDES: java.lang.String encrypt(java.lang.String)>($r0);

     label08:
        $r7 = $r0;

     label09:
        varReplacer90 = "UTF-8";

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, varReplacer90);

     label10:
        $r7 = $r0;

        return $r7;

     label11:
        $r2 := @caughtexception;

        varReplacer88 = "";

        return varReplacer88;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
}
