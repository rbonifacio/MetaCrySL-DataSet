public class com.och.BillionGraves.ActivityMethods$encrypt extends java.lang.Object
{

    public void <init>()
    {
        com.och.BillionGraves.ActivityMethods$encrypt $r0;

        $r0 := @this: com.och.BillionGraves.ActivityMethods$encrypt;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String asHex(byte[])
    {
        byte[] $r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        byte $b2;
        short $s3;
        long $l4;
        java.lang.String $r2;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuffer;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label3;

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        if $s3 >= 16 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("0");

     label2:
        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $l4 = (long) $s3;

        $r2 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l4, 16);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String decrypt(byte[], byte[]) throws java.lang.Exception
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        java.lang.String $r4, varReplacer3084, varReplacer3086;
        int varReplacer3085;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer3086 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3086);

        varReplacer3084 = "AES";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3084);

        varReplacer3085 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3085, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[])>($r0);

        return $r4;
    }

    public static byte[] encryptS(java.lang.String, byte[]) throws java.lang.Exception
    {
        java.lang.String $r0, varReplacer379, varReplacer380;
        byte[] $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        int varReplacer381;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer380 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer380);

        varReplacer379 = "AES";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer379);

        varReplacer381 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer381, $r2);

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r1;
    }

    public static byte[] generateKey()
    {
        java.lang.Throwable $r0;
        javax.crypto.KeyGenerator $r1;
        javax.crypto.SecretKey $r2;
        byte[] $r3;
        java.security.NoSuchAlgorithmException r4;
        int varReplacer382;
        null_type varReplacer383;
        java.lang.String varReplacer384;

     label1:
        nop;

        varReplacer384 = "AES";

        $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer384);

        varReplacer382 = 128;

        virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int)>(varReplacer382);

        $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label2:
        return $r3;

     label3:
        $r0 := @caughtexception;

        r4 = (java.security.NoSuchAlgorithmException) $r0;

        virtualinvoke r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer383 = null;

        return varReplacer383;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }
}
