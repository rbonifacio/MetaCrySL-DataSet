public class com.deltadna.android.sdk.net.NetworkManager extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.lang.String collectUrl;
    private final com.deltadna.android.sdk.net.NetworkDispatcher dispatcher;
    private final java.lang.String engageUrl;
    private final java.lang.String hash;
    private final java.security.MessageDigest md5;
    private final com.deltadna.android.sdk.helpers.Settings settings;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0;
        java.lang.Class $r1;
        java.lang.String $r2, varReplacer3036;

        nop;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        varReplacer3036 = "deltaDNA ";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3036);

        $r1 = class "Lcom/deltadna/android/sdk/net/NetworkManager;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.deltadna.android.sdk.net.NetworkManager: java.lang.String TAG> = $r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, com.deltadna.android.sdk.helpers.Settings, java.lang.String)
    {
        com.deltadna.android.sdk.net.NetworkManager $r0;
        java.lang.String $r1, $r2, $r3, $r5, varReplacer3038, varReplacer3040;
        com.deltadna.android.sdk.helpers.Settings $r4;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;
        java.security.MessageDigest $r8, $r9;
        boolean $z0;
        com.deltadna.android.sdk.net.NetworkDispatcher $r10;
        int varReplacer3039, varReplacer3041;

        nop;

        $r0 := @this: com.deltadna.android.sdk.net.NetworkManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.deltadna.android.sdk.helpers.Settings;

        $r5 := @parameter4: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer3039 = 47;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer3039);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String collectUrl> = $r2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer3041 = 47;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer3041);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String engageUrl> = $r1;

        $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.helpers.Settings settings> = $r4;

        $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String hash> = $r5;

        $r8 = null;

        if $r5 == null goto label3;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label3;

     label1:
        varReplacer3038 = "MD5";

        $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3038);

     label2:
        $r8 = $r9;

     label3:
        $r0.<com.deltadna.android.sdk.net.NetworkManager: java.security.MessageDigest md5> = $r8;

        $r10 = new com.deltadna.android.sdk.net.NetworkDispatcher;

        specialinvoke $r10.<com.deltadna.android.sdk.net.NetworkDispatcher: void <init>()>();

        $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.net.NetworkDispatcher dispatcher> = $r10;

        return;

     label4:
        $r6 := @caughtexception;

        $r1 = <com.deltadna.android.sdk.net.NetworkManager: java.lang.String TAG>;

        varReplacer3040 = "Events will not be hashed";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer3040, $r6);

        goto label3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
    }

    private java.lang.String buildHashedEndpoint(java.lang.String, java.lang.String)
    {
        com.deltadna.android.sdk.net.NetworkManager $r0;
        java.lang.String $r1, $r2;
        byte $b0;
        java.lang.StringBuilder $r3, $r6;
        java.lang.Throwable $r4;
        java.security.MessageDigest $r5;
        byte[] $r7;
        int $i1, $i2;
        java.util.Locale $r8;
        java.lang.Object[] $r9;
        java.lang.Byte $r10;
        java.lang.IllegalStateException $r11;

        $r0 := @this: com.deltadna.android.sdk.net.NetworkManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r1 = $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String hash>;

        if $r1 == null goto label7;

        $r5 = $r0.<com.deltadna.android.sdk.net.NetworkManager: java.security.MessageDigest md5>;

        if $r5 == null goto label7;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/hash/");

        $r6 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label2:
        $r1 = $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String hash>;

     label3:
        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label4:
        $r5 = $r0.<com.deltadna.android.sdk.net.NetworkManager: java.security.MessageDigest md5>;

        $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7);

        $i1 = lengthof $r7;

        $i2 = 0;

     label5:
        if $i2 >= $i1 goto label7;

        $b0 = $r7[$i2];

        $r8 = <java.util.Locale: java.util.Locale US>;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r9[0] = $r10;

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r8, "%02X", $r9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $i2 = $i2 + 1;

        goto label5;

     label6:
        $r4 := @caughtexception;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($r4);

        throw $r11;

     label7:
        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label6;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label6;
    }

    public com.deltadna.android.sdk.net.CancelableRequest collect(org.json.JSONObject, com.deltadna.android.sdk.listeners.RequestListener)
    {
        com.deltadna.android.sdk.net.NetworkManager $r0;
        org.json.JSONObject $r1;
        com.deltadna.android.sdk.listeners.RequestListener $r2;
        com.deltadna.android.sdk.net.NetworkDispatcher $r3;
        com.deltadna.android.sdk.net.Request$Builder $r4;
        com.deltadna.android.sdk.net.RequestBody $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r7, $r8;
        com.deltadna.android.sdk.helpers.Settings $r9;
        int $i0;
        com.deltadna.android.sdk.net.Request $r10;
        com.deltadna.android.sdk.net.CancelableRequest $r11;

        $r0 := @this: com.deltadna.android.sdk.net.NetworkManager;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: com.deltadna.android.sdk.listeners.RequestListener;

        $r3 = $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.net.NetworkDispatcher dispatcher>;

        $r4 = new com.deltadna.android.sdk.net.Request$Builder;

        specialinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: void <init>()>();

        $r5 = staticinvoke <com.deltadna.android.sdk.net.RequestBody: com.deltadna.android.sdk.net.RequestBody json(org.json.JSONObject)>($r1);

        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder post(com.deltadna.android.sdk.net.RequestBody)>($r5);

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("eventList");

        if $z0 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String collectUrl>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/bulk");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        $r7 = specialinvoke $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String buildHashedEndpoint(java.lang.String,java.lang.String)>($r7, $r8);

     label1:
        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder url(java.lang.String)>($r7);

        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder header(java.lang.String,java.lang.String)>("Accept", "application/json");

        $r9 = $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.helpers.Settings settings>;

        $i0 = virtualinvoke $r9.<com.deltadna.android.sdk.helpers.Settings: int getHttpRequestMaxRetries()>();

        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder maxRetries(int)>($i0);

        $r9 = $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.helpers.Settings settings>;

        $i0 = virtualinvoke $r9.<com.deltadna.android.sdk.helpers.Settings: int getHttpRequestRetryDelay()>();

        $i0 = $i0 * 1000;

        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder retryDelay(int)>($i0);

        $r9 = $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.helpers.Settings settings>;

        $i0 = virtualinvoke $r9.<com.deltadna.android.sdk.helpers.Settings: int getHttpRequestCollectTimeout()>();

        $i0 = $i0 * 1000;

        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder connectionTimeout(int)>($i0);

        $r10 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request build()>();

        $r11 = virtualinvoke $r3.<com.deltadna.android.sdk.net.NetworkDispatcher: com.deltadna.android.sdk.net.CancelableRequest enqueue(com.deltadna.android.sdk.net.Request,com.deltadna.android.sdk.listeners.RequestListener)>($r10, $r2);

        return $r11;

     label2:
        $r7 = $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String collectUrl>;

        $r8 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        $r7 = specialinvoke $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String buildHashedEndpoint(java.lang.String,java.lang.String)>($r7, $r8);

        goto label1;
    }

    public com.deltadna.android.sdk.net.CancelableRequest engage(org.json.JSONObject, com.deltadna.android.sdk.listeners.RequestListener)
    {
        com.deltadna.android.sdk.net.NetworkManager $r0;
        org.json.JSONObject $r1;
        com.deltadna.android.sdk.listeners.RequestListener $r2;
        com.deltadna.android.sdk.net.NetworkDispatcher $r3;
        com.deltadna.android.sdk.net.Request$Builder $r4;
        com.deltadna.android.sdk.net.RequestBody $r5;
        java.lang.String $r6, $r7;
        com.deltadna.android.sdk.helpers.Settings $r8;
        int $i0;
        com.deltadna.android.sdk.net.Request $r9;
        com.deltadna.android.sdk.net.ResponseBodyConverter $r10;
        com.deltadna.android.sdk.net.CancelableRequest $r11;

        $r0 := @this: com.deltadna.android.sdk.net.NetworkManager;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 := @parameter1: com.deltadna.android.sdk.listeners.RequestListener;

        $r3 = $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.net.NetworkDispatcher dispatcher>;

        $r4 = new com.deltadna.android.sdk.net.Request$Builder;

        specialinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: void <init>()>();

        $r5 = staticinvoke <com.deltadna.android.sdk.net.RequestBody: com.deltadna.android.sdk.net.RequestBody json(org.json.JSONObject)>($r1);

        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder post(com.deltadna.android.sdk.net.RequestBody)>($r5);

        $r6 = $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String engageUrl>;

        $r7 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        $r6 = specialinvoke $r0.<com.deltadna.android.sdk.net.NetworkManager: java.lang.String buildHashedEndpoint(java.lang.String,java.lang.String)>($r6, $r7);

        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder url(java.lang.String)>($r6);

        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder header(java.lang.String,java.lang.String)>("Accept", "application/json");

        $r8 = $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.helpers.Settings settings>;

        $i0 = virtualinvoke $r8.<com.deltadna.android.sdk.helpers.Settings: int getHttpRequestEngageTimeout()>();

        $i0 = $i0 * 1000;

        $r4 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder connectionTimeout(int)>($i0);

        $r9 = virtualinvoke $r4.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request build()>();

        $r10 = <com.deltadna.android.sdk.net.ResponseBodyConverter: com.deltadna.android.sdk.net.ResponseBodyConverter JSON>;

        $r11 = virtualinvoke $r3.<com.deltadna.android.sdk.net.NetworkDispatcher: com.deltadna.android.sdk.net.CancelableRequest enqueue(com.deltadna.android.sdk.net.Request,com.deltadna.android.sdk.net.ResponseBodyConverter,com.deltadna.android.sdk.listeners.RequestListener)>($r9, $r10, $r2);

        return $r11;
    }

    public com.deltadna.android.sdk.net.CancelableRequest fetch(java.lang.String, java.io.File, com.deltadna.android.sdk.listeners.RequestListener)
    {
        com.deltadna.android.sdk.net.NetworkManager $r0;
        java.lang.String $r1;
        java.io.File $r2;
        com.deltadna.android.sdk.listeners.RequestListener $r3;
        com.deltadna.android.sdk.net.NetworkDispatcher $r4;
        com.deltadna.android.sdk.net.Request$Builder $r5;
        com.deltadna.android.sdk.helpers.Settings $r6;
        int $i0;
        com.deltadna.android.sdk.net.Request $r7;
        com.deltadna.android.sdk.net.NetworkManager$1 $r8;
        com.deltadna.android.sdk.net.CancelableRequest $r9;

        $r0 := @this: com.deltadna.android.sdk.net.NetworkManager;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.io.File;

        $r3 := @parameter2: com.deltadna.android.sdk.listeners.RequestListener;

        $r4 = $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.net.NetworkDispatcher dispatcher>;

        $r5 = new com.deltadna.android.sdk.net.Request$Builder;

        specialinvoke $r5.<com.deltadna.android.sdk.net.Request$Builder: void <init>()>();

        $r5 = virtualinvoke $r5.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder get()>();

        $r5 = virtualinvoke $r5.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder url(java.lang.String)>($r1);

        $r6 = $r0.<com.deltadna.android.sdk.net.NetworkManager: com.deltadna.android.sdk.helpers.Settings settings>;

        $i0 = virtualinvoke $r6.<com.deltadna.android.sdk.helpers.Settings: int getHttpRequestEngageTimeout()>();

        $i0 = $i0 * 1000;

        $r5 = virtualinvoke $r5.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request$Builder connectionTimeout(int)>($i0);

        $r7 = virtualinvoke $r5.<com.deltadna.android.sdk.net.Request$Builder: com.deltadna.android.sdk.net.Request build()>();

        $r8 = new com.deltadna.android.sdk.net.NetworkManager$1;

        specialinvoke $r8.<com.deltadna.android.sdk.net.NetworkManager$1: void <init>(com.deltadna.android.sdk.net.NetworkManager,java.io.File)>($r0, $r2);

        $r9 = virtualinvoke $r4.<com.deltadna.android.sdk.net.NetworkDispatcher: com.deltadna.android.sdk.net.CancelableRequest enqueue(com.deltadna.android.sdk.net.Request,com.deltadna.android.sdk.net.ResponseBodyConverter,com.deltadna.android.sdk.listeners.RequestListener)>($r7, $r8, $r3);

        return $r9;
    }
}
