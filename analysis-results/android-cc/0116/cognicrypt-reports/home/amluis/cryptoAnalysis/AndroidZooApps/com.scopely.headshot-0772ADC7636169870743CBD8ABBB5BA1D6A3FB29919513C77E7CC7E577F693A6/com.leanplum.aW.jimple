final class com.leanplum.aW extends java.lang.Object
{
    private java.net.URI a;
    private com.leanplum.ba b;
    private java.net.Socket c;
    private java.lang.Thread d;
    private android.os.HandlerThread e;
    private android.os.Handler f;
    private java.util.List g;
    private com.leanplum.p h;
    private final java.lang.Object i;

    public void <init>(java.net.URI, com.leanplum.ba, java.util.List)
    {
        com.leanplum.aW $r0;
        java.net.URI $r1;
        com.leanplum.ba $r2;
        java.util.List $r3;
        android.os.Looper $r4;
        java.lang.Object $r5;
        com.leanplum.p $r6;
        android.os.HandlerThread $r7;
        android.os.Handler $r8;
        java.lang.String varReplacer3865;
        null_type varReplacer3866;

        nop;

        $r0 := @this: com.leanplum.aW;

        $r1 := @parameter0: java.net.URI;

        $r2 := @parameter1: com.leanplum.ba;

        $r3 := @parameter2: java.util.List;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        $r0.<com.leanplum.aW: java.lang.Object i> = $r5;

        $r0.<com.leanplum.aW: java.net.URI a> = $r1;

        $r0.<com.leanplum.aW: com.leanplum.ba b> = $r2;

        varReplacer3866 = null;

        $r0.<com.leanplum.aW: java.util.List g> = varReplacer3866;

        $r6 = new com.leanplum.p;

        specialinvoke $r6.<com.leanplum.p: void <init>(com.leanplum.aW)>($r0);

        $r0.<com.leanplum.aW: com.leanplum.p h> = $r6;

        $r7 = new android.os.HandlerThread;

        varReplacer3865 = "websocket-thread";

        specialinvoke $r7.<android.os.HandlerThread: void <init>(java.lang.String)>(varReplacer3865);

        $r0.<com.leanplum.aW: android.os.HandlerThread e> = $r7;

        $r7 = $r0.<com.leanplum.aW: android.os.HandlerThread e>;

        virtualinvoke $r7.<android.os.HandlerThread: void start()>();

        $r8 = new android.os.Handler;

        $r7 = $r0.<com.leanplum.aW: android.os.HandlerThread e>;

        $r4 = virtualinvoke $r7.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r8.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        $r0.<com.leanplum.aW: android.os.Handler f> = $r8;

        return;
    }

    static java.lang.String a(com.leanplum.aW, com.leanplum.q)
    {
        com.leanplum.aW $r0;
        com.leanplum.q $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r3, varReplacer4988;
        char $c2;
        null_type varReplacer4989, varReplacer4990;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        $r1 := @parameter1: com.leanplum.q;

        $i0 = virtualinvoke $r1.<com.leanplum.q: int read()>();

        $i1 = $i0;

        if $i0 != -1 goto label1;

        varReplacer4989 = null;

        return varReplacer4989;

     label1:
        $r2 = new java.lang.StringBuilder;

        varReplacer4988 = "";

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4988);

     label2:
        if $i1 != 10 goto label3;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label3:
        if $i1 == 13 goto label4;

        $c2 = (char) $i1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label4:
        $i0 = virtualinvoke $r1.<com.leanplum.q: int read()>();

        $i1 = $i0;

        if $i0 != -1 goto label2;

        varReplacer4990 = null;

        return varReplacer4990;
    }

    static java.net.URI a(com.leanplum.aW)
    {
        com.leanplum.aW $r0;
        java.net.URI r1;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        r1 = $r0.<com.leanplum.aW: java.net.URI a>;

        return r1;
    }

    static org.apache.http.StatusLine a(com.leanplum.aW, java.lang.String)
    {
        com.leanplum.aW $r0;
        java.lang.String $r1;
        boolean $z0;
        org.apache.http.message.BasicLineParser $r2;
        org.apache.http.StatusLine $r3;
        null_type varReplacer4991;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        varReplacer4991 = null;

        return varReplacer4991;

     label1:
        $r2 = new org.apache.http.message.BasicLineParser;

        specialinvoke $r2.<org.apache.http.message.BasicLineParser: void <init>()>();

        $r3 = staticinvoke <org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser)>($r1, $r2);

        return $r3;
    }

    static void a(com.leanplum.aW, java.net.Socket)
    {
        com.leanplum.aW $r0;
        java.net.Socket $r1;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        $r1 := @parameter1: java.net.Socket;

        $r0.<com.leanplum.aW: java.net.Socket c> = $r1;

        return;
    }

    static javax.net.ssl.SSLSocketFactory b(com.leanplum.aW)
    {
        com.leanplum.aW $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.lang.String varReplacer4993;
        null_type varReplacer4994, varReplacer4995, varReplacer4996;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        varReplacer4993 = "TLS";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4993);

        varReplacer4994 = null;

        varReplacer4995 = null;

        varReplacer4996 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4994, varReplacer4994, varReplacer4994);

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        return $r2;
    }

    static org.apache.http.Header b(com.leanplum.aW, java.lang.String)
    {
        com.leanplum.aW $r0;
        java.lang.String $r1;
        org.apache.http.Header $r2;
        org.apache.http.message.BasicLineParser $r3;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        $r1 := @parameter1: java.lang.String;

        $r3 = new org.apache.http.message.BasicLineParser;

        specialinvoke $r3.<org.apache.http.message.BasicLineParser: void <init>()>();

        $r2 = staticinvoke <org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser)>($r1, $r3);

        return $r2;
    }

    static java.net.Socket c(com.leanplum.aW)
    {
        com.leanplum.aW $r0;
        java.net.Socket r1;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        r1 = $r0.<com.leanplum.aW: java.net.Socket c>;

        return r1;
    }

    static java.lang.String d(com.leanplum.aW)
    {
        com.leanplum.aW $r0;
        byte[] $r1;
        int $i0, $i1, varReplacer4992;
        java.lang.String $r2;
        double $d0;
        byte $b2;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        $r1 = newarray (byte)[16];

        $i0 = 0;

     label1:
        if $i0 < 16 goto label2;

        varReplacer4992 = 0;

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r1, varReplacer4992);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r2;

     label2:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 256.0;

        $i1 = (int) $d0;

        $b2 = (byte) $i1;

        $r1[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label1;
    }

    static java.util.List e(com.leanplum.aW)
    {
        com.leanplum.aW $r0;
        java.util.List r1;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        r1 = $r0.<com.leanplum.aW: java.util.List g>;

        return r1;
    }

    static com.leanplum.ba f(com.leanplum.aW)
    {
        com.leanplum.aW $r0;
        com.leanplum.ba r1;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        r1 = $r0.<com.leanplum.aW: com.leanplum.ba b>;

        return r1;
    }

    static com.leanplum.p g(com.leanplum.aW)
    {
        com.leanplum.aW $r0;
        com.leanplum.p r1;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        r1 = $r0.<com.leanplum.aW: com.leanplum.p h>;

        return r1;
    }

    static java.lang.Object h(com.leanplum.aW)
    {
        com.leanplum.aW $r0;
        java.lang.Object r1;

        nop;

        $r0 := @parameter0: com.leanplum.aW;

        r1 = $r0.<com.leanplum.aW: java.lang.Object i>;

        return r1;
    }

    public final com.leanplum.ba a()
    {
        com.leanplum.aW $r0;
        com.leanplum.ba r1;

        nop;

        $r0 := @this: com.leanplum.aW;

        r1 = $r0.<com.leanplum.aW: com.leanplum.ba b>;

        return r1;
    }

    public final void a(java.lang.String)
    {
        com.leanplum.aW $r0;
        java.lang.String $r1;
        byte[] $r2;
        com.leanplum.p $r3;

        nop;

        $r0 := @this: com.leanplum.aW;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.leanplum.aW: com.leanplum.p h>;

        $r2 = virtualinvoke $r3.<com.leanplum.p: byte[] a(java.lang.String)>($r1);

        virtualinvoke $r0.<com.leanplum.aW: void a(byte[])>($r2);

        return;
    }

    final void a(byte[])
    {
        com.leanplum.aW $r0;
        byte[] $r1;
        android.os.Handler $r2;
        com.leanplum.aZ $r3;

        nop;

        $r0 := @this: com.leanplum.aW;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<com.leanplum.aW: android.os.Handler f>;

        $r3 = new com.leanplum.aZ;

        specialinvoke $r3.<com.leanplum.aZ: void <init>(com.leanplum.aW,byte[])>($r0, $r1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    public final void b()
    {
        com.leanplum.aW $r0;
        com.leanplum.aX $r1;
        boolean $z0;
        java.lang.Thread $r2;

        nop;

        $r0 := @this: com.leanplum.aW;

        $r2 = $r0.<com.leanplum.aW: java.lang.Thread d>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.leanplum.aW: java.lang.Thread d>;

        $z0 = virtualinvoke $r2.<java.lang.Thread: boolean isAlive()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.Thread;

        $r1 = new com.leanplum.aX;

        specialinvoke $r1.<com.leanplum.aX: void <init>(com.leanplum.aW)>($r0);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        $r0.<com.leanplum.aW: java.lang.Thread d> = $r2;

        $r2 = $r0.<com.leanplum.aW: java.lang.Thread d>;

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    public final void c()
    {
        com.leanplum.aW $r0;
        com.leanplum.aY $r1;
        java.net.Socket $r2;
        android.os.Handler $r3;

        nop;

        $r0 := @this: com.leanplum.aW;

        $r2 = $r0.<com.leanplum.aW: java.net.Socket c>;

        if $r2 == null goto label1;

        $r3 = $r0.<com.leanplum.aW: android.os.Handler f>;

        $r1 = new com.leanplum.aY;

        specialinvoke $r1.<com.leanplum.aY: void <init>(com.leanplum.aW)>($r0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

     label1:
        return;
    }
}
