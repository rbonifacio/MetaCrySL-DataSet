public class skiracer.storage.RestUrls extends java.lang.Object
{
    private static java.lang.String APP_TYPE_KEY;
    private static java.lang.String APP_TYPE_VALUE;
    private static final java.lang.String ARG_CATALOG_ZIPFILE;
    public static final int ARG_CODE;
    private static final java.lang.String[] ARG_STATES;
    public static final int AUS_CODE;
    private static final java.lang.String AUS_HIGHLOW_TIDE_STATION_CATALOG_FILE;
    private static final java.lang.String AUT_CATALOG_ZIPFILE;
    public static final int AUT_CODE;
    private static final java.lang.String[] AUT_STATES;
    private static java.lang.String BASE_DOMAIN_HOST;
    private static java.lang.String BASE_DOMAIN_HOST_FOR_APPWORLD;
    private static java.lang.String BATCHEND;
    private static final java.lang.String BEGINDATE_KEY;
    private static final java.lang.String BEGINDATE_KEY_OUR;
    private static final java.lang.String BEL_CATALOG_ZIPFILE;
    public static final int BEL_CODE;
    private static final java.lang.String[] BEL_STATES;
    private static final java.lang.String BOTTOM_RIGHT_LATITUDE_KEY;
    private static final java.lang.String BOTTOM_RIGHT_LONGITUDE_KEY;
    private static final java.lang.String BRA_CATALOG_ZIPFILE;
    public static final int BRA_CODE;
    private static final java.lang.String[] BRA_STATES;
    public static final int CANADA_CODE;
    private static final java.lang.String[] CANADA_STATES;
    private static final java.lang.String CAN_CATALOG_ZIPFILE;
    private static final java.lang.String CAN_HIGHLOW_TIDE_STATION_CATALOG_FILE;
    private static final java.lang.String CAN_TIDAL_CURRENTS_CATALOG_FILE;
    private static final java.lang.String CATALOG_FILE_NAME;
    private static java.lang.String CATALOG_LIST_FILENAME;
    private static final java.lang.String CBN_CATALOG_ZIPFILE;
    public static final int CBN_CODE;
    private static final java.lang.String[] CBN_STATES;
    private static java.lang.String CHECK_VERSION_REST_PATH;
    private static final java.lang.String CONST1;
    private static final java.lang.String CONST2;
    private static java.lang.String CONST_M;
    private static java.lang.String CONST_ONE;
    private static java.lang.String CONST_ZERO;
    public static final java.lang.String COUNTRY_CODE_KEY;
    static java.lang.String DEBUG_DOMAIN_NAME;
    private static final java.lang.String DERIVE_COUNTRY_KEY;
    private static final java.lang.String DEU_CATALOG_ZIPFILE;
    public static final int DEU_CODE;
    private static final java.lang.String DEU_HIGHLOW_TIDE_STATION_CATALOG_FILE;
    private static final java.lang.String[] DEU_STATES;
    private static java.lang.String DEVICEID_KEY;
    private static java.lang.String DEVICE_META_KEY_EXPORT;
    private static final java.lang.String DNK_CATALOG_ZIPFILE;
    public static final int DNK_CODE;
    private static final java.lang.String[] DNK_STATES;
    static java.lang.String DSN_KEY;
    private static java.lang.String EMAIL_ADDR;
    private static java.lang.String EMAIL_ONLY;
    private static final java.lang.String ENDDATE_KEY;
    private static final java.lang.String ENDDATE_KEY_OUR;
    private static final java.lang.String EQUIVALENT_QUADS_RESTPATH;
    private static final java.lang.String ESP_CATALOG_ZIPFILE;
    public static final int ESP_CODE;
    private static final java.lang.String[] ESP_STATES;
    private static final java.lang.String EST_CATALOG_ZIPFILE;
    public static final int EST_CODE;
    private static final java.lang.String[] EST_STATES;
    private static java.lang.String EXTENSION_KEY;
    private static java.lang.String EXTENSION_VALUE;
    private static java.lang.String FILENAME_KEY;
    private static final java.lang.String FIN_CATALOG_ZIPFILE;
    public static final int FIN_CODE;
    private static final java.lang.String[] FIN_STATES;
    public static final int FJI_CODE;
    public static final int FLK_CODE;
    private static java.lang.String FORCED_REEXPORT;
    private static final java.lang.String FORMAT_KEY;
    public static final int FRA_CODE;
    public static final int FRO_CODE;
    private static final java.lang.String GBR_CATALOG_ZIPFILE;
    public static final int GBR_CODE;
    private static final java.lang.String GBR_HIGHLOW_TIDE_STATION_CATALOG_FILE;
    private static final java.lang.String[] GBR_STATES;
    static java.lang.String GET_SUBSCRIPTIONS_RESTPATH;
    public static final int GRC_CODE;
    static java.lang.String GRID_FILE_NAME;
    public static final int GRL_CODE;
    private static final java.lang.String HRV_CATALOG_ZIPFILE;
    public static final int HRV_CODE;
    private static final java.lang.String[] HRV_STATES;
    public static final int IDN_CODE;
    private static final java.lang.String IEU_CATALOG_ZIPFILE;
    public static final int IEU_CODE;
    private static final java.lang.String[] IEU_STATES;
    private static final java.lang.String IN_APP_KEY;
    private static final java.lang.String IN_APP_VALUE;
    private static final java.lang.String ISL_CATALOG_ZIPFILE;
    public static final int ISL_CODE;
    private static final java.lang.String[] ISL_STATES;
    public static final int ITA_CODE;
    private static java.lang.String KEY_KEY;
    public static final int LKD_CODE;
    private static final java.lang.String LOCALE_KEY;
    private static final java.lang.String LVA_CATALOG_ZIPFILE;
    public static final int LVA_CODE;
    private static final java.lang.String[] LVA_STATES;
    private static java.lang.String MAP_PARTS_FILE;
    private static java.lang.String MAP_PARTS_RESTPATH;
    private static java.lang.String MARINE_WEATHER_PARTS_RESTPATH;
    private static final java.lang.String MLT_CATALOG_ZIPFILE;
    public static final int MLT_CODE;
    private static final java.lang.String[] MLT_STATES;
    private static java.lang.String MPROPERTY_KEY;
    private static java.lang.String MPROPERTY_VALUE_NAUTICAL;
    public static final int MUS_CODE;
    public static final java.lang.String MY_SECRET_KEY;
    private static final java.lang.String[] NEW_ZEALAND_STATES;
    private static java.lang.String NEXT_STREAMING_PART_KEY;
    private static final java.lang.String NLD_CATALOG_ZIPFILE;
    public static final int NLD_CODE;
    private static final java.lang.String NLD_HIGHLOW_TIDE_STATION_CATALOG_FILE;
    private static final java.lang.String[] NLD_STATES;
    private static final java.lang.String NOR_CATALOG_ZIPFILE;
    public static final int NOR_CODE;
    private static final java.lang.String NOR_HIGHLOW_TIDE_STATION_CATALOG_FILE;
    private static final java.lang.String[] NOR_STATES;
    public static final int NUM_COUNTRY_CODES;
    private static final java.lang.String NZL_CATALOG_ZIPFILE;
    public static final int NZL_CODE;
    private static final java.lang.String NZL_HIGHLOW_TIDE_STATION_CATALOG_FILE;
    private static final java.lang.String OMN_CATALOG_ZIPFILE;
    public static final int OMN_CODE;
    private static final java.lang.String[] OMN_STATES;
    private static final java.lang.String ORDERS_KEY;
    private static final java.lang.String PACKAGE_NAME_CLIENT_KEY;
    private static java.lang.String PACKAGE_NAME_KEY;
    private static java.lang.String PLATFORM_TYPE_KEY;
    private static java.lang.String PLATFORM_TYPE_KEY_IN_IOS;
    private static java.lang.String PLATFORM_TYPE_KEY_UNIF;
    private static java.lang.String PLATFORM_TYPE_VALUE;
    private static java.lang.String PLATFORM_TYPE_VALUE_UNIF_ANDROID;
    private static java.lang.String PLATFORM_TYPE_VALUE_UNIF_BBX;
    private static java.lang.String PREFIX_FOR_INTERVAL_FILE;
    private static final java.lang.String PRT_CATALOG_ZIPFILE;
    public static final int PRT_CODE;
    private static final java.lang.String[] PRT_STATES;
    private static java.lang.String RAND_KEY;
    private static final java.lang.String RATING_PARAMS_RESTPATH;
    private static final java.lang.String RENDER_KEY;
    private static final java.lang.String RENDER_VALUE;
    private static java.lang.String RESORTID_KEY;
    private static java.lang.String REST_PATH_UPLOAD_TRACKS;
    public static final int RUR_CODE;
    public static final int RUS_CODE;
    public static final int SAU_CODE;
    private static java.lang.String SEARCH_RESTPATH;
    private static final java.lang.String SEND_STATS_RESTPATH;
    private static java.lang.String SERVER_API_KEY;
    private static java.lang.String SERVER_API_KEY_VALUE;
    private static final java.lang.String SIGNATURE_KEY;
    private static java.lang.String SIZE_KEY;
    private static java.lang.String SOFTWARE_TYPE_KEY;
    private static final java.lang.String SOURCE_LIST_FILE_NAME;
    private static final java.lang.String[] STATE_NAMES_ARRAY;
    private static java.lang.String STATIC_FILE_RESTPATH;
    private static final java.lang.String STATIONID_KEY;
    private static final java.lang.String STATIONID_KEY_OUR;
    private static final java.lang.String STATION_TYPE_KEY;
    private static final java.lang.String STATION_TYPE_VALUE_ACTIVE_CURRENT;
    private static final java.lang.String STATION_TYPE_VALUE_HIGH_LOW_TIDE;
    private static final java.lang.String STATION_TYPE_VALUE_TIDAL_CURRENT;
    private static final java.lang.String STORE_NAME_KEY;
    private static final java.lang.String SUBMIT_KEY;
    private static java.lang.String SUPER_PART_KEY;
    public static final int SWE_CODE;
    static java.lang.String TEST_MAPLIST_FILENAME;
    private static final java.lang.String TILE_SERVER_HOST;
    private static final java.lang.String TOKENURLS_KEY;
    private static final java.lang.String TOP_LEFT_LATITUDE_KEY;
    private static final java.lang.String TOP_LEFT_LONGITUDE_KEY;
    private static java.lang.String TRACK_SOURCE_KEY;
    private static java.lang.String TRACK_SOURCE_VALUE;
    public static final int TUR_CODE;
    public static final int UKR_CODE;
    public static final int UNKNOWN_CODE;
    private static final java.lang.String UPGRADE_TO_PAID_RESTPATH;
    private static final java.lang.String USA_CATALOG_ZIPFILE;
    public static final int USA_CODE;
    private static final java.lang.String USA_CURRENT_STATION_FILE;
    private static final java.lang.String USA_HIGHLOW_TIDE_STATION_CATALOG_FILE;
    private static final java.lang.String USA_TIDAL_CURRENTS_CATALOG_FILE;
    private static java.lang.String UUID_KEY;
    private static java.lang.String VERIFY_KEY_REST_PATH;
    private static java.lang.String VERSION_KEY;
    public static final int XMD_CODE;
    private static final java.lang.String XML_VALUE;
    public static final int XSE_CODE;
    private static final java.lang.String ZAF_CATALOG_ZIPFILE;
    public static final int ZAF_CODE;
    private static final java.lang.String[] ZAF_STATES;
    private static final java.lang.String ZOOM_KEY;
    public static final java.lang.String[] _countryNames;
    private static java.lang.String _deviceId;
    private static final java.lang.String[] _featuredByCountryHttp;
    private static java.util.Comparator _nameComparator;
    public static final java.lang.String[] _serverSideCountryNames;
    private static skiracer.storage.RestUrls _singleton;
    public static final java.lang.String[] _twoLetterCodes;
    java.lang.String DSN_TO_MAP_RESTPATH;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        skiracer.storage.RestUrls$1 $r1;
        java.lang.String $r2, varReplacer751, varReplacer752, varReplacer753, varReplacer754, varReplacer755, varReplacer756, varReplacer757, varReplacer758, varReplacer759, varReplacer760, varReplacer761, varReplacer762, varReplacer763, varReplacer764, varReplacer765, varReplacer766, varReplacer767, varReplacer768, varReplacer769, varReplacer770, varReplacer771, varReplacer772, varReplacer773, varReplacer775, varReplacer776, varReplacer777, varReplacer778, varReplacer779, varReplacer780, varReplacer781, varReplacer782, varReplacer783, varReplacer784, varReplacer785, varReplacer786, varReplacer787, varReplacer788, varReplacer789, varReplacer790, varReplacer791, varReplacer792, varReplacer793, varReplacer794, varReplacer795, varReplacer796, varReplacer797, varReplacer798, varReplacer799, varReplacer800, varReplacer801, varReplacer803, varReplacer804, varReplacer805;
        null_type varReplacer774, varReplacer802;

        nop;

        varReplacer802 = null;

        <skiracer.storage.RestUrls: skiracer.storage.RestUrls _singleton> = varReplacer802;

        varReplacer774 = null;

        <skiracer.storage.RestUrls: java.lang.String _deviceId> = varReplacer774;

        varReplacer795 = "k";

        <skiracer.storage.RestUrls: java.lang.String KEY_KEY> = varReplacer795;

        varReplacer759 = "i";

        <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY> = varReplacer759;

        varReplacer768 = "www.gpsnauticalcharts.com";

        <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST> = varReplacer768;

        varReplacer758 = "www.gpsnauticalcharts.com";

        <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST_FOR_APPWORLD> = varReplacer758;

        varReplacer766 = "/stores/get_maps_status/";

        <skiracer.storage.RestUrls: java.lang.String VERIFY_KEY_REST_PATH> = varReplacer766;

        varReplacer755 = "v";

        <skiracer.storage.RestUrls: java.lang.String VERSION_KEY> = varReplacer755;

        varReplacer756 = "p";

        <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY> = varReplacer756;

        varReplacer792 = "android";

        <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_VALUE> = varReplacer792;

        varReplacer775 = "t";

        <skiracer.storage.RestUrls: java.lang.String SOFTWARE_TYPE_KEY> = varReplacer775;

        varReplacer780 = "/main/software/";

        <skiracer.storage.RestUrls: java.lang.String CHECK_VERSION_REST_PATH> = varReplacer780;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "maps.t";

        $r0[1] = "ca_maps.t";

        $r0[2] = "nz_maps.t";

        <skiracer.storage.RestUrls: java.lang.String[] _featuredByCountryHttp> = $r0;

        $r0 = newarray (java.lang.String)[43];

        $r0[0] = "USA";

        $r0[1] = "Canada";

        $r0[2] = "New Zealand";

        $r0[3] = "United Kingdom";

        $r0[4] = "Netherlands";

        $r0[5] = "Belgium";

        $r0[6] = "Iceland";

        $r0[7] = "Germany";

        $r0[8] = "Caribbean";

        $r0[9] = "South Africa";

        $r0[10] = "Oman";

        $r0[11] = "Croatia";

        $r0[12] = "Estonia";

        $r0[13] = "Argentina";

        $r0[14] = "Malta";

        $r0[15] = "Spain";

        $r0[16] = "Portugal";

        $r0[17] = "Brazil";

        $r0[18] = "Latvia";

        $r0[19] = "Austria";

        $r0[20] = "Denmark";

        $r0[21] = "Europe Rivers(Inland)";

        $r0[22] = "Finland";

        $r0[23] = "Norway";

        $r0[24] = "Sweden";

        $r0[25] = "Ukraine(Black Sea)";

        $r0[26] = "Australia";

        $r0[27] = "Russia";

        $r0[28] = "Persian / Arabian Gulf & Red Sea";

        $r0[29] = "Malaysia / South China Sea";

        $r0[30] = "Malta, Cyprus, Crete and South Mediterranean";

        $r0[31] = "Seychelles / Mauritius";

        $r0[32] = "Maldives/Sri Lanka";

        $r0[33] = "Falklands Islands";

        $r0[34] = "Fiji/Vanuatu";

        $r0[35] = "Scotia Sea";

        $r0[36] = "Greenland";

        $r0[37] = "Faroe Islands";

        $r0[38] = "France";

        $r0[39] = "Italy";

        $r0[40] = "Greece";

        $r0[41] = "Turkey";

        $r0[42] = "Russia(RR)";

        <skiracer.storage.RestUrls: java.lang.String[] _countryNames> = $r0;

        $r0 = newarray (java.lang.String)[43];

        $r0[0] = "USA";

        $r0[1] = "CAN";

        $r0[2] = "NZL";

        $r0[3] = "GBR";

        $r0[4] = "NLD";

        $r0[5] = "BEL";

        $r0[6] = "ISL";

        $r0[7] = "DEU";

        $r0[8] = "CBN";

        $r0[9] = "ZAF";

        $r0[10] = "OMN";

        $r0[11] = "HRV";

        $r0[12] = "EST";

        $r0[13] = "ARG";

        $r0[14] = "MLT";

        $r0[15] = "ESP";

        $r0[16] = "PRT";

        $r0[17] = "BRA";

        $r0[18] = "LVA";

        $r0[19] = "AUT";

        $r0[20] = "DNK";

        $r0[21] = "IEU";

        $r0[22] = "FIN";

        $r0[23] = "NOR";

        $r0[24] = "SWE";

        $r0[25] = "UKR";

        $r0[26] = "AUS";

        $r0[27] = "RUS";

        $r0[28] = "SAU";

        $r0[29] = "IDN";

        $r0[30] = "XMD";

        $r0[31] = "MUS";

        $r0[32] = "LKD";

        $r0[33] = "FLK";

        $r0[34] = "FJI";

        $r0[35] = "XSE";

        $r0[36] = "GRL";

        $r0[37] = "FRO";

        $r0[38] = "FRA";

        $r0[39] = "ITA";

        $r0[40] = "GRC";

        $r0[41] = "TUR";

        $r0[42] = "RUR";

        <skiracer.storage.RestUrls: java.lang.String[] _serverSideCountryNames> = $r0;

        $r0 = newarray (java.lang.String)[43];

        $r0[0] = "US";

        $r0[1] = "CA";

        $r0[2] = "NZ";

        $r0[3] = "GB";

        $r0[4] = "NL";

        $r0[5] = "BE";

        $r0[6] = "IS";

        $r0[7] = "DE";

        $r0[8] = "CB";

        $r0[9] = "ZA";

        $r0[10] = "OM";

        $r0[11] = "HR";

        $r0[12] = "EE";

        $r0[13] = "AR";

        $r0[14] = "MT";

        $r0[15] = "ES";

        $r0[16] = "PT";

        $r0[17] = "BR";

        $r0[18] = "LV";

        $r0[19] = "AT";

        $r0[20] = "DK";

        $r0[21] = "II";

        $r0[22] = "FI";

        $r0[23] = "NO";

        $r0[24] = "SE";

        $r0[25] = "UA";

        $r0[26] = "AU";

        $r0[27] = "RU";

        $r0[28] = "SA";

        $r0[29] = "ID";

        $r0[30] = "XM";

        $r0[31] = "MU";

        $r0[32] = "LK";

        $r0[33] = "FK";

        $r0[34] = "FJ";

        $r0[35] = "XS";

        $r0[36] = "GL";

        $r0[37] = "FO";

        $r0[38] = "FR";

        $r0[39] = "IT";

        $r0[40] = "GR";

        $r0[41] = "TR";

        $r0[42] = "RR";

        <skiracer.storage.RestUrls: java.lang.String[] _twoLetterCodes> = $r0;

        varReplacer769 = "/stores/get_new_map_file_marine/";

        <skiracer.storage.RestUrls: java.lang.String MAP_PARTS_RESTPATH> = varReplacer769;

        varReplacer753 = "f";

        <skiracer.storage.RestUrls: java.lang.String FILENAME_KEY> = varReplacer753;

        varReplacer786 = "r";

        <skiracer.storage.RestUrls: java.lang.String RESORTID_KEY> = varReplacer786;

        varReplacer776 = "rand";

        <skiracer.storage.RestUrls: java.lang.String RAND_KEY> = varReplacer776;

        varReplacer799 = "app";

        <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY> = varReplacer799;

        varReplacer784 = "marine";

        <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE> = varReplacer784;

        varReplacer794 = "s";

        <skiracer.storage.RestUrls: java.lang.String SIZE_KEY> = varReplacer794;

        varReplacer778 = "p";

        <skiracer.storage.RestUrls: java.lang.String SUPER_PART_KEY> = varReplacer778;

        varReplacer752 = "n";

        <skiracer.storage.RestUrls: java.lang.String NEXT_STREAMING_PART_KEY> = varReplacer752;

        varReplacer788 = "ver";

        <skiracer.storage.RestUrls: java.lang.String SERVER_API_KEY> = varReplacer788;

        varReplacer785 = "1";

        <skiracer.storage.RestUrls: java.lang.String SERVER_API_KEY_VALUE> = varReplacer785;

        varReplacer760 = "package";

        <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY> = varReplacer760;

        varReplacer765 = "map.xml";

        <skiracer.storage.RestUrls: java.lang.String MAP_PARTS_FILE> = varReplacer765;

        varReplacer790 = "/stores/upload_tracks_nautical";

        <skiracer.storage.RestUrls: java.lang.String REST_PATH_UPLOAD_TRACKS> = varReplacer790;

        $r1 = new skiracer.storage.RestUrls$1;

        specialinvoke $r1.<skiracer.storage.RestUrls$1: void <init>()>();

        <skiracer.storage.RestUrls: java.util.Comparator _nameComparator> = $r1;

        varReplacer782 = "/stores/searchmarine";

        <skiracer.storage.RestUrls: java.lang.String SEARCH_RESTPATH> = varReplacer782;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Norway";

        <skiracer.storage.RestUrls: java.lang.String[] NOR_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Finland";

        <skiracer.storage.RestUrls: java.lang.String[] FIN_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Europe";

        <skiracer.storage.RestUrls: java.lang.String[] IEU_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Denmark";

        <skiracer.storage.RestUrls: java.lang.String[] DNK_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Austria";

        <skiracer.storage.RestUrls: java.lang.String[] AUT_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Latvia";

        <skiracer.storage.RestUrls: java.lang.String[] LVA_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Brazil";

        <skiracer.storage.RestUrls: java.lang.String[] BRA_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Portugal";

        <skiracer.storage.RestUrls: java.lang.String[] PRT_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Spain";

        <skiracer.storage.RestUrls: java.lang.String[] ESP_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Malta";

        <skiracer.storage.RestUrls: java.lang.String[] MLT_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Argentina";

        <skiracer.storage.RestUrls: java.lang.String[] ARG_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Estonia";

        <skiracer.storage.RestUrls: java.lang.String[] EST_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Oman";

        <skiracer.storage.RestUrls: java.lang.String[] OMN_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Croatia";

        <skiracer.storage.RestUrls: java.lang.String[] HRV_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All South Africa";

        <skiracer.storage.RestUrls: java.lang.String[] ZAF_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Caribbean";

        <skiracer.storage.RestUrls: java.lang.String[] CBN_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Germany";

        <skiracer.storage.RestUrls: java.lang.String[] DEU_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Iceland";

        <skiracer.storage.RestUrls: java.lang.String[] ISL_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Belgium";

        <skiracer.storage.RestUrls: java.lang.String[] BEL_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Netherlands";

        <skiracer.storage.RestUrls: java.lang.String[] NLD_STATES> = $r0;

        $r0 = newarray (java.lang.String)[10];

        $r0[0] = "<pick Region>";

        $r0[1] = "BRISTOL CHANNEL & SOUTH IRELAND";

        $r0[2] = "ENGLAND S COAST & SCILLIES";

        $r0[3] = "IRELAND W C-KENMARE R-FORELAND";

        $r0[4] = "IRISH SEA";

        $r0[5] = "N&E SCOTLAND-LEWIS-FORTH-N ISLES";

        $r0[6] = "NORTH SEA-FORTH-THAMES ENTRANCE";

        $r0[7] = "SCOTLAND KINTYRE-LOCH BROOM";

        $r0[8] = "THAMES-MEDWAY & APPROACHES";

        $r0[9] = "OTHERS";

        <skiracer.storage.RestUrls: java.lang.String[] GBR_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All Canada";

        <skiracer.storage.RestUrls: java.lang.String[] CANADA_STATES> = $r0;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "<pick Region>";

        $r0[1] = "All New Zealand";

        <skiracer.storage.RestUrls: java.lang.String[] NEW_ZEALAND_STATES> = $r0;

        $r0 = newarray (java.lang.String)[36];

        $r0[0] = "<pick state>";

        $r0[1] = "Alabama";

        $r0[2] = "Alaska";

        $r0[3] = "California";

        $r0[4] = "Connecticut";

        $r0[5] = "Delaware";

        $r0[6] = "Florida";

        $r0[7] = "Georgia";

        $r0[8] = "Hawaii";

        $r0[9] = "Idaho";

        $r0[10] = "Illinois";

        $r0[11] = "Indiana";

        $r0[12] = "Louisiana";

        $r0[13] = "Maine";

        $r0[14] = "Maine";

        $r0[15] = "Maryland";

        $r0[16] = "Massachusetts";

        $r0[17] = "Michigan";

        $r0[18] = "Mississippi";

        $r0[19] = "Nevada";

        $r0[20] = "New Hampshire";

        $r0[21] = "New Jersey";

        $r0[22] = "New York";

        $r0[23] = "North Carolina";

        $r0[24] = "Ohio";

        $r0[25] = "Oregon";

        $r0[26] = "Pacific Ocean";

        $r0[27] = "Pennsylvania";

        $r0[28] = "Puerto Rico";

        $r0[29] = "Rhode Island";

        $r0[30] = "South Carolina";

        $r0[31] = "Texas";

        $r0[32] = "Vermont";

        $r0[33] = "Virgnia";

        $r0[34] = "Washington";

        $r0[35] = "Wisconsin";

        <skiracer.storage.RestUrls: java.lang.String[] STATE_NAMES_ARRAY> = $r0;

        varReplacer789 = "/stores/get_static_file/";

        <skiracer.storage.RestUrls: java.lang.String STATIC_FILE_RESTPATH> = varReplacer789;

        varReplacer762 = "/stores/get_marine_station/";

        <skiracer.storage.RestUrls: java.lang.String MARINE_WEATHER_PARTS_RESTPATH> = varReplacer762;

        varReplacer798 = "catalog.xml";

        <skiracer.storage.RestUrls: java.lang.String CATALOG_LIST_FILENAME> = varReplacer798;

        varReplacer767 = "emailaddr";

        <skiracer.storage.RestUrls: java.lang.String EMAIL_ADDR> = varReplacer767;

        varReplacer805 = "emailonly";

        <skiracer.storage.RestUrls: java.lang.String EMAIL_ONLY> = varReplacer805;

        varReplacer803 = "mproperyty";

        <skiracer.storage.RestUrls: java.lang.String MPROPERTY_KEY> = varReplacer803;

        varReplacer801 = "gpsnauticalcharts";

        <skiracer.storage.RestUrls: java.lang.String MPROPERTY_VALUE_NAUTICAL> = varReplacer801;

        varReplacer793 = "batchend";

        <skiracer.storage.RestUrls: java.lang.String BATCHEND> = varReplacer793;

        varReplacer763 = "m";

        <skiracer.storage.RestUrls: java.lang.String CONST_M> = varReplacer763;

        varReplacer804 = "0";

        <skiracer.storage.RestUrls: java.lang.String CONST_ZERO> = varReplacer804;

        varReplacer781 = "1";

        <skiracer.storage.RestUrls: java.lang.String CONST_ONE> = varReplacer781;

        varReplacer791 = "track_source";

        <skiracer.storage.RestUrls: java.lang.String TRACK_SOURCE_KEY> = varReplacer791;

        varReplacer764 = "6528743564";

        <skiracer.storage.RestUrls: java.lang.String TRACK_SOURCE_VALUE> = varReplacer764;

        varReplacer772 = "forcedreexport";

        <skiracer.storage.RestUrls: java.lang.String FORCED_REEXPORT> = varReplacer772;

        varReplacer751 = "extension";

        <skiracer.storage.RestUrls: java.lang.String EXTENSION_KEY> = varReplacer751;

        varReplacer777 = "gpxgz";

        <skiracer.storage.RestUrls: java.lang.String EXTENSION_VALUE> = varReplacer777;

        varReplacer787 = "uuid";

        <skiracer.storage.RestUrls: java.lang.String UUID_KEY> = varReplacer787;

        varReplacer783 = "device";

        <skiracer.storage.RestUrls: java.lang.String DEVICE_META_KEY_EXPORT> = varReplacer783;

        varReplacer800 = "device";

        <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_IN_IOS> = varReplacer800;

        varReplacer770 = "platform";

        <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_UNIF> = varReplacer770;

        varReplacer797 = "android";

        <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_VALUE_UNIF_ANDROID> = varReplacer797;

        varReplacer773 = "blackberry";

        <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_VALUE_UNIF_BBX> = varReplacer773;

        varReplacer754 = "global_area_gen_";

        <skiracer.storage.RestUrls: java.lang.String PREFIX_FOR_INTERVAL_FILE> = varReplacer754;

        varReplacer757 = "grid_pbfs.json";

        <skiracer.storage.RestUrls: java.lang.String GRID_FILE_NAME> = varReplacer757;

        varReplacer761 = "dsn";

        <skiracer.storage.RestUrls: java.lang.String DSN_KEY> = varReplacer761;

        varReplacer779 = "maplist.txt";

        <skiracer.storage.RestUrls: java.lang.String TEST_MAPLIST_FILENAME> = varReplacer779;

        varReplacer796 = "denali1.zapto.org";

        <skiracer.storage.RestUrls: java.lang.String DEBUG_DOMAIN_NAME> = varReplacer796;

        varReplacer771 = "/stores/get_subscriptions/";

        <skiracer.storage.RestUrls: java.lang.String GET_SUBSCRIPTIONS_RESTPATH> = varReplacer771;

        $r2 = <skiracer.storage.RestUrls: java.lang.String STATIC_FILE_RESTPATH>;

        <skiracer.storage.RestUrls: java.lang.String RATING_PARAMS_RESTPATH> = $r2;

        return;
    }

    public void <init>()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String varReplacer1533;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer1533 = "/stores/marine_dsn_to_map_id";

        $r0.<skiracer.storage.RestUrls: java.lang.String DSN_TO_MAP_RESTPATH> = varReplacer1533;

        return;
    }

    private static final void addLocaleParam(java.util.Vector)
    {
        java.util.Vector $r0;
        java.util.Locale $r1;
        java.lang.String $r2, varReplacer2330;
        java.lang.Exception $r3;

        nop;

        $r0 := @parameter0: java.util.Vector;

     label1:
        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String getLanguage()>();

        varReplacer2330 = "lang";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r0, varReplacer2330, $r2);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void addParameter(java.util.Vector, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r3, varReplacer6745, varReplacer6746, varReplacer6747, varReplacer6748, varReplacer6749;
        boolean $z0;
        java.lang.StringBuilder $r4;
        skiracer.util.Pair $r5;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        if $r3 == null goto label3;

        varReplacer6745 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6745);

        if $z0 != 0 goto label3;

        varReplacer6747 = "fname";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6747);

        if $z0 != 0 goto label1;

        varReplacer6746 = "state";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6746);

        if $z0 == 0 goto label2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer6749 = "\'";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6749);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer6748 = "\'";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6748);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r5 = new skiracer.util.Pair;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r5);

     label3:
        return;
    }

    static void addParameterIfNotEmpty(java.util.Vector, java.lang.String, java.lang.String)
    {
        java.util.Vector $r0;
        java.lang.String $r1, $r2, varReplacer2329;
        boolean $z0;
        skiracer.util.Pair $r3;

        nop;

        $r0 := @parameter0: java.util.Vector;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r2 == null goto label1;

        varReplacer2329 = "";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer2329);

        if $z0 != 0 goto label1;

        $r3 = new skiracer.util.Pair;

        specialinvoke $r3.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>($r3);

     label1:
        return;
    }

    private java.lang.String[] createStatesForCountry(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, varReplacer2864;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "<pick Region>";

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer2864 = "All ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2864);

        $r3 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getCountryName(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[1] = $r3;

        return $r1;
    }

    private java.lang.String getCatalogZipFileName(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0;
        java.lang.String $r1, varReplacer8076;
        java.util.Locale $r2;
        java.lang.StringBuilder $r3;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getServerSideCountryName(int)>($i0);

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer8076 = "catalog.zip";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8076);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    private java.lang.String getCurrentStationUrl(java.util.Vector, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r3;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r2 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStationDataHttpUrl(java.util.Vector,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, "", "", "currentsactivestation", $r3);

        return $r2;
    }

    private static java.lang.String getDeviceMetaStringForExport()
    {
        java.lang.String $r0, $r1, $r2, $r3, varReplacer4236, varReplacer4237;
        java.lang.StringBuilder $r4;

        nop;

        $r0 = "";

        $r1 = <android.os.Build: java.lang.String MODEL>;

        if $r1 == null goto label1;

        $r0 = $r1;

     label1:
        $r1 = "";

        $r2 = <android.os.Build: java.lang.String DISPLAY>;

        if $r2 == null goto label2;

        $r1 = $r2;

     label2:
        $r2 = "";

        $r3 = <android.os.Build: java.lang.String PRODUCT>;

        if $r3 == null goto label3;

        $r2 = $r3;

     label3:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer4237 = ", ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4237);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer4236 = ", ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4236);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    private java.util.Vector getEquivalentQuadsForLegacyMapsUrlParameters()
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r3;
        skiracer.util.Pair $r4;
        java.lang.StringBuilder $r5;
        long $l0;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        $r2 = staticinvoke <skiracer.storage.DeviceContext: java.lang.String getLegacyDeviceId()>();

        $r3 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, $r3, $r2);

        $r2 = staticinvoke <skiracer.storage.AppType: java.lang.String getPackageName()>();

        $r4 = new skiracer.util.Pair;

        $r3 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new skiracer.util.Pair;

        $r3 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_UNIF>;

        $r3 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getPlatformTypeValueUnif()>();

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_IN_IOS>;

        $r3 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getPlatformTypeValueUnif()>();

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY>;

        $r3 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, "render", "vector");

        $r4 = virtualinvoke $r0.<skiracer.storage.RestUrls: skiracer.util.Pair getSignaturePair(java.util.Vector,java.util.Vector)>($r1, null);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return $r1;
    }

    private java.lang.String getHighLowTideStaionCatalogHttpUrl(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        $r1 = "";

        if $i0 != 0 goto label2;

        $r1 = "usatidestns.zip";

     label1:
        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStaticFileHttpUrl(java.lang.String)>($r1);

        return $r1;

     label2:
        if $i0 != 7 goto label3;

        $r1 = "deutidestns.zip";

        goto label1;

     label3:
        if $i0 != 3 goto label4;

        $r1 = "gbrtidestns.zip";

        goto label1;

     label4:
        if $i0 != 2 goto label5;

        $r1 = "nzltidestns.zip";

        goto label1;

     label5:
        if $i0 != 1 goto label6;

        $r1 = "cantidestns.zip";

        goto label1;

     label6:
        if $i0 != 26 goto label7;

        $r1 = "austidestns.zip";

        goto label1;

     label7:
        if $i0 != 4 goto label8;

        $r1 = "nldtidestns.zip";

        goto label1;

     label8:
        if $i0 != 23 goto label1;

        $r1 = "nortidestns.zip";

        goto label1;
    }

    private java.lang.String getHighLowTideStationDataHttpUrl(java.util.Vector, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r3, $r4, $r5;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r2 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStationDataHttpUrl(java.util.Vector,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, "tideprediction", $r5);

        return $r2;
    }

    public static skiracer.storage.RestUrls getInstance()
    {
        java.lang.String $r0;
        skiracer.storage.RestUrls $r1;

        nop;

        $r1 = <skiracer.storage.RestUrls: skiracer.storage.RestUrls _singleton>;

        if $r1 != null goto label1;

        $r1 = new skiracer.storage.RestUrls;

        specialinvoke $r1.<skiracer.storage.RestUrls: void <init>()>();

        <skiracer.storage.RestUrls: skiracer.storage.RestUrls _singleton> = $r1;

        $r0 = staticinvoke <skiracer.storage.DeviceContext: java.lang.String getDeviceId()>();

        <skiracer.storage.RestUrls: java.lang.String _deviceId> = $r0;

     label1:
        $r1 = <skiracer.storage.RestUrls: skiracer.storage.RestUrls _singleton>;

        return $r1;
    }

    private static java.lang.String getPlatformTypeValueUnif()
    {
        boolean $z0;
        java.lang.String r0;

        nop;

        $z0 = staticinvoke <skiracer.storage.AppType: boolean isPlaybook()>();

        if $z0 == 0 goto label1;

        r0 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_VALUE_UNIF_BBX>;

        return r0;

     label1:
        r0 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_VALUE_UNIF_ANDROID>;

        return r0;
    }

    public static java.lang.String getSignature(java.lang.String, java.util.Vector) throws java.security.NoSuchAlgorithmException, java.lang.NullPointerException, java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, $r7, varReplacer2544, varReplacer2545;
        java.util.Vector $r1;
        java.lang.StringBuffer $r2;
        java.util.Comparator $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        skiracer.util.Pair $r6;
        byte[] $r8;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Vector;

        $r3 = <skiracer.storage.RestUrls: java.util.Comparator _nameComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r1, $r3);

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        varReplacer2545 = "#!o k x h dkl ldsf /bin/perl";

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer2545);

        $r4 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (skiracer.util.Pair) $r5;

        $r5 = $r6.<skiracer.util.Pair: java.lang.Object first>;

        $r0 = (java.lang.String) $r5;

        $r5 = $r6.<skiracer.util.Pair: java.lang.Object second>;

        $r7 = (java.lang.String) $r5;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label1;

     label2:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        varReplacer2544 = "UTF-8";

        $r8 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2544);

        $r8 = staticinvoke <skiracer.storage.RestUrls: byte[] sampleMD5Digest(byte[])>($r8);

        $r0 = staticinvoke <skiracer.util.ByteUtilities: java.lang.String toHexString(byte[])>($r8);

        return $r0;
    }

    private java.lang.String getStaticFileHttpUrl(java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStaticFileHttpUrlForDomain(java.lang.String,java.lang.String)>($r2, $r1);

        return $r1;
    }

    private java.lang.String getStaticFileHttpUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;
        int varReplacer2549;
        null_type varReplacer2550;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String STATIC_FILE_RESTPATH>;

        varReplacer2549 = -1;

        varReplacer2550 = null;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, varReplacer2549, $r2, varReplacer2550);

        return $r1;
    }

    private java.lang.String getStaticFileHttpUrlForDomain(java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;
        java.util.Vector $r3;
        java.io.PrintStream $r4;
        int varReplacer2318;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getStaticFileHttpUrlParameters(java.lang.String)>($r2);

        $r2 = <skiracer.storage.RestUrls: java.lang.String STATIC_FILE_RESTPATH>;

        varReplacer2318 = -1;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, varReplacer2318, $r2, $r3);

        virtualinvoke $r3.<java.util.Vector: void removeAllElements()>();

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return $r1;
    }

    private java.util.Vector getStaticFileHttpUrlParameters(java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r4, $r6, varReplacer2325, varReplacer2326, varReplacer2327, varReplacer2328;
        java.util.Vector $r2;
        java.lang.StringBuilder $r3;
        skiracer.util.Pair $r5;
        long $l0;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2328 = "";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2328);

        $r4 = <skiracer.storage.RestUrls: java.lang.String _deviceId>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new skiracer.util.Pair;

        $r6 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r4);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        $r4 = <skiracer.storage.RestUrls: java.lang.String FILENAME_KEY>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r1);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2327 = "";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2327);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new skiracer.util.Pair;

        $r4 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r1);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_UNIF>;

        $r4 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getPlatformTypeValueUnif()>();

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r4);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_IN_IOS>;

        $r4 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getPlatformTypeValueUnif()>();

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r4);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY>;

        $r4 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r4);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r1 = staticinvoke <skiracer.storage.AppType: java.lang.String getPackageName()>();

        $r5 = new skiracer.util.Pair;

        $r4 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r1);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        varReplacer2325 = "render";

        varReplacer2326 = "vector";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r2, varReplacer2325, varReplacer2326);

        return $r2;
    }

    private java.lang.String getStationDataHttpUrl(java.util.Vector, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6;
        java.io.PrintStream $r7;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getStationDataHttpUrlParameters(java.util.Vector,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, $r5, $r6);

        $r3 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String MARINE_WEATHER_PARTS_RESTPATH>;

        $r2 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r3, -1, $r2, $r1);

        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return $r2;
    }

    private java.lang.String getStationDataHttpUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;
        int varReplacer7731;
        null_type varReplacer7732;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String MARINE_WEATHER_PARTS_RESTPATH>;

        varReplacer7731 = -1;

        varReplacer7732 = null;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, varReplacer7731, $r2, varReplacer7732);

        return $r1;
    }

    private java.util.Vector getStationDataHttpUrlParameters(java.util.Vector, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1, $r8;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r11, $r13, varReplacer7717, varReplacer7718, varReplacer7719, varReplacer7720, varReplacer7721, varReplacer7722, varReplacer7723, varReplacer7724, varReplacer7725, varReplacer7726, varReplacer7727, varReplacer7728, varReplacer7729, varReplacer7730;
        java.lang.Exception $r7;
        java.util.Enumeration $r9;
        boolean $z0;
        java.lang.Object $r10;
        skiracer.util.Pair $r12;
        java.lang.StringBuilder $r14;
        long $l0;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        $r8 = new java.util.Vector;

        specialinvoke $r8.<java.util.Vector: void <init>()>();

        if $r1 == null goto label2;

        $r9 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r11 = (java.lang.String) $r10;

        $r12 = new skiracer.util.Pair;

        $r13 = <skiracer.storage.RestUrls: java.lang.String KEY_KEY>;

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r13, $r11);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        goto label1;

     label2:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer7726 = "";

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7726);

        $r11 = <skiracer.storage.RestUrls: java.lang.String _deviceId>;

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new skiracer.util.Pair;

        $r13 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r13, $r11);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        $r12 = new skiracer.util.Pair;

        varReplacer7730 = "stationinfo";

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer7730, $r5);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        $r12 = new skiracer.util.Pair;

        varReplacer7727 = "stationid";

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer7727, $r2);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r8);

        varReplacer7724 = "currentsactivestation";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7724);

        if $z0 != 0 goto label3;

        $r12 = new skiracer.util.Pair;

        varReplacer7722 = "begindate";

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer7722, $r3);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        $r12 = new skiracer.util.Pair;

        varReplacer7717 = "enddate";

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer7717, $r4);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

     label3:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer7725 = "";

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7725);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = new skiracer.util.Pair;

        $r3 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        $r12 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY>;

        $r3 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r3);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        $r12 = new skiracer.util.Pair;

        varReplacer7720 = "inapp";

        varReplacer7721 = "1";

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer7720, varReplacer7721);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        $r2 = staticinvoke <skiracer.storage.AppType: java.lang.String getPackageName()>();

        $r12 = new skiracer.util.Pair;

        $r3 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r2);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        if $r6 == null goto label4;

        varReplacer7723 = "";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7723);

        if $z0 != 0 goto label4;

        $r12 = new skiracer.util.Pair;

        varReplacer7728 = "orders";

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer7728, $r6);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

     label4:
        varReplacer7729 = "#!o k x h dkl ldsf /bin/perl";

        $r2 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getSignature(java.lang.String,java.util.Vector)>(varReplacer7729, $r8);

     label5:
        $r12 = new skiracer.util.Pair;

        varReplacer7718 = "sig";

        specialinvoke $r12.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer7718, $r2);

        virtualinvoke $r8.<java.util.Vector: void addElement(java.lang.Object)>($r12);

        return $r8;

     label6:
        $r7 := @caughtexception;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        varReplacer7719 = "Signing error ";

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7719);

        $r2 = virtualinvoke $r7.<java.lang.Exception: java.lang.String toString()>();

        $r14 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    private java.lang.String getTidalCurrentStationDataHttpUrl(java.util.Vector, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r3, $r4, $r5;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r2 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStationDataHttpUrl(java.util.Vector,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, "currentsprediction", $r5);

        return $r2;
    }

    private java.lang.String getTidalCurrentsStationCatalogHttpUrl(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        $r1 = "";

        if $i0 != 0 goto label2;

        $r1 = "usacurrstns.zip";

     label1:
        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStaticFileHttpUrl(java.lang.String)>($r1);

        return $r1;

     label2:
        if $i0 != 1 goto label1;

        $r1 = "cancurrstns.zip";

        goto label1;
    }

    public static boolean isValidCountryCode(int)
    {
        int $i0, varReplacer748, varReplacer749;

        nop;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        if $i0 >= 42 goto label1;

        varReplacer748 = 1;

        return varReplacer748;

     label1:
        varReplacer749 = 0;

        return varReplacer749;
    }

    private static byte[] sampleMD5Digest(byte[]) throws java.security.NoSuchAlgorithmException, java.lang.NullPointerException
    {
        byte[] $r0;
        java.security.MessageDigest $r1;
        java.lang.String varReplacer2546;

        nop;

        $r0 := @parameter0: byte[];

        varReplacer2546 = "MD5";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2546);

        virtualinvoke $r1.<java.security.MessageDigest: void reset()>();

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        return $r0;
    }

    void addCommonParameters(java.util.Vector)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.Exception $r2;
        java.lang.String $r3, $r4, varReplacer8637, varReplacer8638, varReplacer8639, varReplacer8640, varReplacer8641, varReplacer8642, varReplacer8643;
        java.lang.StringBuilder $r5;
        long $l0;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r3 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_UNIF>;

        $r4 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getPlatformTypeValueUnif()>();

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, $r3, $r4);

        $r3 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY>;

        $r4 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, $r3, $r4);

        $r3 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getDeviceMetaStringForExport()>();

        $r4 = <skiracer.storage.RestUrls: java.lang.String DEVICE_META_KEY_EXPORT>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, $r4, $r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer8639 = "";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8639);

        $r3 = <skiracer.storage.RestUrls: java.lang.String _deviceId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, $r4, $r3);

        $r3 = staticinvoke <skiracer.storage.AppType: java.lang.String getPackageName()>();

        $r4 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, $r4, $r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer8640 = "";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8640);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, $r4, $r3);

        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r1);

        varReplacer8637 = "render";

        varReplacer8638 = "vector";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, varReplacer8637, varReplacer8638);

     label1:
        varReplacer8641 = "#!o k x h dkl ldsf /bin/perl";

        $r3 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getSignature(java.lang.String,java.util.Vector)>(varReplacer8641, $r1);

     label2:
        varReplacer8642 = "sig";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r1, varReplacer8642, $r3);

        return;

     label3:
        $r2 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer8643 = "Signing error ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8643);

        $r3 = virtualinvoke $r2.<java.lang.Exception: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getApplicationName()
    {
        skiracer.storage.RestUrls $r0;

        $r0 := @this: skiracer.storage.RestUrls;

        return "TopoSports";
    }

    public java.lang.String getAvailableBaseMapSourcesUrl()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStaticFileHttpUrl(java.lang.String)>("bgmaps.txt");

        return $r1;
    }

    public java.lang.String getCatalogFileUrl(android.content.Context)
    {
        skiracer.storage.RestUrls $r0;
        android.content.Context $r1;
        java.io.File $r2;
        java.lang.String $r3, $r4, varReplacer8014, varReplacer8015;
        boolean $z0;
        java.lang.StringBuilder $r5;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getFilesDir()>();

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = $r3;

        varReplacer8015 = "/";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(varReplacer8015);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer8014 = "/";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8014);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = <skiracer.storage.RestUrls: java.lang.String CATALOG_LIST_FILENAME>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getCatalogHttpUrl(java.lang.String, java.util.Vector)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r3;
        java.util.Vector $r2;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Vector;

        $r2 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getCatalogHttpUrlParameters(java.lang.String,java.util.Vector)>($r1, $r2);

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r3 = <skiracer.storage.RestUrls: java.lang.String STATIC_FILE_RESTPATH>;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, -1, $r3, $r2);

        virtualinvoke $r2.<java.util.Vector: void removeAllElements()>();

        return $r1;
    }

    public java.lang.String getCatalogHttpUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStaticFileHttpUrlBase()>();

        return $r1;
    }

    public java.util.Vector getCatalogHttpUrlParameters(java.lang.String, java.util.Vector)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r6, varReplacer2536, varReplacer2537, varReplacer2538, varReplacer2539;
        java.util.Vector $r2, $r3;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        skiracer.util.Pair $r7;
        null_type varReplacer2540;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Vector;

        varReplacer2536 = "catalog.xml";

        $r3 = specialinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getStaticFileHttpUrlParameters(java.lang.String)>(varReplacer2536);

        varReplacer2538 = "intelligent";

        varReplacer2539 = "1";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, varReplacer2538, varReplacer2539);

        varReplacer2537 = "orders";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, varReplacer2537, $r1);

        if $r2 == null goto label2;

        $r4 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r1 = (java.lang.String) $r5;

        $r6 = <skiracer.storage.RestUrls: java.lang.String KEY_KEY>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, $r6, $r1);

        goto label1;

     label2:
        varReplacer2540 = null;

        $r7 = virtualinvoke $r0.<skiracer.storage.RestUrls: skiracer.util.Pair getSignaturePair(java.util.Vector,java.util.Vector)>($r3, varReplacer2540);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r7);

        return $r3;
    }

    public int getCountryCodeFromServerSideCountryName(java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.String[] $r3;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r3 = <skiracer.storage.RestUrls: java.lang.String[] _serverSideCountryNames>;

        $i0 = lengthof $r3;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = <skiracer.storage.RestUrls: java.lang.String[] _serverSideCountryNames>;

        $r2 = $r3[$i1];

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public int getCountryCodeFromServerSideSubscriptionName(java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r3;
        int $i0, $i1;
        java.lang.String[] $r2;
        java.util.Locale $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 = <skiracer.storage.RestUrls: java.lang.String[] _twoLetterCodes>;

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = <skiracer.storage.RestUrls: java.lang.String[] _twoLetterCodes>;

        $r3 = $r2[$i1];

        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("marine");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public java.lang.String getCountryName(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _countryNames>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _countryNames>;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _countryNames>;

        $r2 = $r1[0];

        return $r2;
    }

    public java.lang.String getCurrentStationListHttpUrl(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        $r1 = "";

        if $i0 != 0 goto label1;

        $r1 = "usaactistns.zip";

     label1:
        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStaticFileHttpUrl(java.lang.String)>($r1);

        return $r1;
    }

    public java.lang.String getCurrentStationUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStationDataHttpUrlBase()>();

        return $r1;
    }

    public java.lang.String getCurrentStationUrlOrig(java.lang.String, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2, $r3;
        java.util.Vector $r4;
        skiracer.util.Pair $r5;
        java.lang.StringBuilder $r6;
        long $l0;
        java.io.PrintStream $r7;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        $r5 = new skiracer.util.Pair;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>("stationId", $r1);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>("beginDate", $r2);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>("endDate", $r3);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>("format", "xml");

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>("Submit", "Submit");

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r1);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>("opendap.co-ops.nos.noaa.gov/axis/webservices/currents/response.jsp", -1, "", $r4);

        virtualinvoke $r4.<java.util.Vector: void removeAllElements()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return $r1;
    }

    public java.util.Vector getCurrentStationUrlParameters(java.util.Vector, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r3, varReplacer7713, varReplacer7714, varReplacer7715;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        varReplacer7713 = "";

        varReplacer7714 = "";

        varReplacer7715 = "currentsactivestation";

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getStationDataHttpUrlParameters(java.util.Vector,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, varReplacer7713, varReplacer7713, varReplacer7715, $r3);

        return $r1;
    }

    public java.lang.String getDsnToMapKeyUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;
        int varReplacer8634;
        null_type varReplacer8635;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = $r0.<skiracer.storage.RestUrls: java.lang.String DSN_TO_MAP_RESTPATH>;

        varReplacer8634 = -1;

        varReplacer8635 = null;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, varReplacer8634, $r2, varReplacer8635);

        return $r1;
    }

    public java.util.Vector getDsnToMapKeyUrlParameters(java.util.Vector, java.util.Vector, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1, $r2, $r4;
        java.lang.String $r3, $r7, $r8, varReplacer8636;
        java.util.Enumeration $r5;
        boolean $z0;
        java.lang.Object $r6;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.util.Vector;

        $r3 := @parameter2: java.lang.String;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        if $r1 == null goto label2;

        $r5 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = (java.lang.String) $r6;

        $r8 = <skiracer.storage.RestUrls: java.lang.String DSN_KEY>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r4, $r8, $r7);

        goto label1;

     label2:
        if $r2 == null goto label4;

        $r5 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r7 = (java.lang.String) $r6;

        $r8 = <skiracer.storage.RestUrls: java.lang.String KEY_KEY>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r4, $r8, $r7);

        goto label3;

     label4:
        varReplacer8636 = "orders";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r4, varReplacer8636, $r3);

        virtualinvoke $r0.<skiracer.storage.RestUrls: void addCommonParameters(java.util.Vector)>($r4);

        return $r4;
    }

    public java.lang.String getEquivalentQuadsForLegacyMapsUrl()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1;
        java.util.Vector $r2;

        $r0 := @this: skiracer.storage.RestUrls;

        $r2 = specialinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getEquivalentQuadsForLegacyMapsUrlParameters()>();

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, -1, "/stores/get_dsns_for_migration/", $r2);

        virtualinvoke $r2.<java.util.Vector: void removeAllElements()>();

        return $r1;
    }

    public java.lang.String getFileHttpUrl(java.lang.String, java.util.Vector, java.lang.String, boolean, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r7;
        java.util.Vector $r2;
        boolean $z0, $z1, $z2;
        int $i0;
        java.io.PrintStream $r8;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Vector;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $i0 := @parameter4: int;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: java.lang.String;

        $r6 := @parameter7: java.lang.String;

        $r7 := @parameter8: java.lang.String;

        $z1 := @parameter9: boolean;

        $z2 := @parameter10: boolean;

        $r2 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getFileHttpUrlParameters(java.lang.String,java.util.Vector,java.lang.String,boolean,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>($r1, $r2, $r3, $z0, $i0, $r4, $r5, $r6, $r7, $z1, $z2);

        $r3 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r1 = <skiracer.storage.RestUrls: java.lang.String MAP_PARTS_RESTPATH>;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r3, -1, $r1, $r2);

        virtualinvoke $r2.<java.util.Vector: void removeAllElements()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return $r1;
    }

    public java.lang.String getFileHttpUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String MAP_PARTS_RESTPATH>;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, -1, $r2, null);

        return $r1;
    }

    public java.util.Vector getFileHttpUrlParameters(java.lang.String, java.util.Vector, java.lang.String, boolean, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r7, $r12, $r14, varReplacer8562, varReplacer8563, varReplacer8564, varReplacer8565, varReplacer8566, varReplacer8567, varReplacer8568, varReplacer8569, varReplacer8570, varReplacer8571, varReplacer8572, varReplacer8573, varReplacer8574, varReplacer8575, varReplacer8576, varReplacer8577, varReplacer8578, varReplacer8579;
        java.util.Vector $r2, $r9;
        boolean $z0, $z1, $z2;
        int $i0;
        java.lang.Exception $r8;
        java.util.Enumeration $r10;
        java.lang.Object $r11;
        skiracer.util.Pair $r13;
        java.lang.StringBuilder $r15;
        long $l1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Vector;

        $r3 := @parameter2: java.lang.String;

        $z0 := @parameter3: boolean;

        $i0 := @parameter4: int;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: java.lang.String;

        $r6 := @parameter7: java.lang.String;

        $r7 := @parameter8: java.lang.String;

        $z1 := @parameter9: boolean;

        $z2 := @parameter10: boolean;

        $r9 = new java.util.Vector;

        specialinvoke $r9.<java.util.Vector: void <init>()>();

        if $r2 == null goto label2;

        $r10 = virtualinvoke $r2.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z1 = interfaceinvoke $r10.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r12 = (java.lang.String) $r11;

        $r13 = new skiracer.util.Pair;

        $r14 = <skiracer.storage.RestUrls: java.lang.String KEY_KEY>;

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r14, $r12);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer8575 = "";

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8575);

        $r12 = <skiracer.storage.RestUrls: java.lang.String _deviceId>;

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new skiracer.util.Pair;

        $r14 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r14, $r12);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        $r13 = new skiracer.util.Pair;

        $r12 = <skiracer.storage.RestUrls: java.lang.String FILENAME_KEY>;

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r12, $r3);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        $r13 = new skiracer.util.Pair;

        $r3 = <skiracer.storage.RestUrls: java.lang.String RESORTID_KEY>;

        varReplacer8566 = "";

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, varReplacer8566);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r9);

        if $z0 == 0 goto label3;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer8571 = "";

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8571);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new skiracer.util.Pair;

        $r3 = <skiracer.storage.RestUrls: java.lang.String SIZE_KEY>;

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

     label3:
        goto label4;

     label4:
        varReplacer8572 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer8572);

        if $z0 != 0 goto label5;

        $r13 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String NEXT_STREAMING_PART_KEY>;

        varReplacer8569 = "";

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, varReplacer8569);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

     label5:
        $r13 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String SERVER_API_KEY>;

        $r3 = <skiracer.storage.RestUrls: java.lang.String SERVER_API_KEY_VALUE>;

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r3);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer8573 = "";

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8573);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = new skiracer.util.Pair;

        $r3 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r1);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        $r13 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY>;

        $r3 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r3);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        $r13 = new skiracer.util.Pair;

        varReplacer8576 = "inapp";

        varReplacer8577 = "1";

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer8576, varReplacer8577);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        varReplacer8562 = "tokenurls";

        varReplacer8563 = "1";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r9, varReplacer8562, varReplacer8563);

        varReplacer8578 = "render";

        varReplacer8579 = "vector";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r9, varReplacer8578, varReplacer8579);

        if $r6 == null goto label6;

        varReplacer8564 = "";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer8564);

        if $z0 != 0 goto label6;

        $r13 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r6);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

     label6:
        if $r7 == null goto label7;

        varReplacer8574 = "";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer8574);

        if $z0 != 0 goto label7;

        $r13 = new skiracer.util.Pair;

        varReplacer8568 = "orders";

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer8568, $r7);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

     label7:
        varReplacer8567 = "#!o k x h dkl ldsf /bin/perl";

        $r1 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getSignature(java.lang.String,java.util.Vector)>(varReplacer8567, $r9);

     label8:
        $r13 = new skiracer.util.Pair;

        varReplacer8565 = "sig";

        specialinvoke $r13.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer8565, $r1);

        virtualinvoke $r9.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        return $r9;

     label9:
        $r8 := @caughtexception;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer8570 = "Signing error ";

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8570);

        $r1 = virtualinvoke $r8.<java.lang.Exception: java.lang.String toString()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label8;

        catch java.lang.Exception from label7 to label8 with label9;
    }

    public java.lang.String getGlobalAreaTileUrl(int, int, int, int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1;
        java.util.Locale $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getServerSideTwoLetterCode(int)>($i0);

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://54.227.241.87/tiles/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String getGpxPostUrl()
    {
        skiracer.storage.RestUrls $r0;
        skiracer.storage.TrackStorePreferences $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = staticinvoke <skiracer.storage.TrackStorePreferences: skiracer.storage.TrackStorePreferences getInstance()>();

        $z0 = virtualinvoke $r1.<skiracer.storage.TrackStorePreferences: boolean getDisableUploadProxy()>();

        if $z0 == 0 goto label1;

        return "http://www.mountaindynamics.com/en/ffupload.php";

     label1:
        $z0 = <skiracer.util.FileUtil: boolean NEW_SHARING_ENABLED>;

        if $z0 == 0 goto label2;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r3 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/stores/upload_tracks_to_account");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r3 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = <skiracer.storage.RestUrls: java.lang.String REST_PATH_UPLOAD_TRACKS>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getGridTileJsonUrl()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = <skiracer.storage.RestUrls: java.lang.String GRID_FILE_NAME>;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStaticFileHttpUrl(java.lang.String)>($r1);

        return $r1;
    }

    public java.lang.String getHighLowTideStationDataHttpUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStationDataHttpUrlBase()>();

        return $r1;
    }

    public java.util.Vector getHighLowTideStationDataHttpUrlParameters(java.util.Vector, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r3, $r4, $r5, varReplacer7847;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        varReplacer7847 = "tideprediction";

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getStationDataHttpUrlParameters(java.util.Vector,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, varReplacer7847, $r5);

        return $r1;
    }

    public java.lang.String getKeyVerifyHttpUrl(java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2, $r6;
        java.lang.Exception $r3;
        java.util.Vector $r4;
        skiracer.util.Pair $r5;
        java.lang.StringBuilder $r7;
        long $l0;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        $r5 = new skiracer.util.Pair;

        $r6 = <skiracer.storage.RestUrls: java.lang.String KEY_KEY>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r1);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = <skiracer.storage.RestUrls: java.lang.String _deviceId>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new skiracer.util.Pair;

        $r6 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r1);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY>;

        $r6 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r6);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new skiracer.util.Pair;

        $r6 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r6, $r1);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r5 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r4);

     label1:
        $r1 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getSignature(java.lang.String,java.util.Vector)>("#!o k x h dkl ldsf /bin/perl", $r4);

     label2:
        $r5 = new skiracer.util.Pair;

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>("sig", $r1);

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String VERIFY_KEY_REST_PATH>;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, -1, $r2, $r4);

        virtualinvoke $r4.<java.util.Vector: void removeAllElements()>();

        return $r1;

     label3:
        $r3 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signing error ");

        $r1 = virtualinvoke $r3.<java.lang.Exception: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getMapPartsHttpUrl(java.lang.String, java.util.Vector, boolean, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r3, $r4, $r5, $r6;
        java.util.Vector $r2;
        boolean $z0, $z1, $z2;
        int $i0;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Vector;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: java.lang.String;

        $z1 := @parameter7: boolean;

        $z2 := @parameter8: boolean;

        $r6 = <skiracer.storage.RestUrls: java.lang.String MAP_PARTS_FILE>;

        $r1 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getFileHttpUrl(java.lang.String,java.util.Vector,java.lang.String,boolean,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>($r1, $r2, $r6, $z0, $i0, null, $r3, $r4, $r5, $z1, $z2);

        return $r1;
    }

    public java.lang.String getMapPartsHttpUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getFileHttpUrlBase()>();

        return $r1;
    }

    public java.util.Vector getMapPartsHttpUrlParameters(java.lang.String, java.util.Vector, boolean, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r3, $r4, $r5, $r6, varReplacer8558, varReplacer8560;
        java.util.Vector $r2;
        boolean $z0, $z1, $z2;
        int $i0, varReplacer8561;
        null_type varReplacer8559;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Vector;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: java.lang.String;

        $z1 := @parameter7: boolean;

        $z2 := @parameter8: boolean;

        $r6 = <skiracer.storage.RestUrls: java.lang.String MAP_PARTS_FILE>;

        varReplacer8558 = "";

        varReplacer8559 = null;

        varReplacer8560 = "";

        varReplacer8561 = 1;

        $r2 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getFileHttpUrlParameters(java.lang.String,java.util.Vector,java.lang.String,boolean,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(varReplacer8558, $r2, $r6, $z0, $i0, varReplacer8559, varReplacer8558, $r4, $r5, $z1, varReplacer8561);

        return $r2;
    }

    public java.util.Vector getParametersForExport(java.lang.String, boolean, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2, $r5, $r6;
        boolean $z0;
        java.util.Vector $r3;
        skiracer.util.Pair $r4;
        java.lang.StringBuilder $r7;
        long $l0;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        $r4 = new skiracer.util.Pair;

        $r5 = <skiracer.storage.RestUrls: java.lang.String CONST_M>;

        $r6 = <skiracer.storage.RestUrls: java.lang.String CONST_ZERO>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r5, $r6);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>("MAX_FILE_SIZE", "2097152");

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r5 = <skiracer.storage.RestUrls: java.lang.String EMAIL_ADDR>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r5, $r1);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String EMAIL_ONLY>;

        $r5 = <skiracer.storage.RestUrls: java.lang.String CONST_ONE>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r5);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String MPROPERTY_KEY>;

        $r5 = <skiracer.storage.RestUrls: java.lang.String MPROPERTY_VALUE_NAUTICAL>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r5);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String BATCHEND>;

        $r5 = <skiracer.storage.RestUrls: java.lang.String CONST_ZERO>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r5);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String EXTENSION_KEY>;

        $r5 = <skiracer.storage.RestUrls: java.lang.String EXTENSION_VALUE>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r5);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>("Action", "Upload");

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String TRACK_SOURCE_KEY>;

        $r5 = <skiracer.storage.RestUrls: java.lang.String TRACK_SOURCE_VALUE>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r5);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String UUID_KEY>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_UNIF>;

        $r2 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getPlatformTypeValueUnif()>();

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r1 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getDeviceMetaStringForExport()>();

        $r4 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String DEVICE_META_KEY_EXPORT>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r1);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r3);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r1 = <skiracer.storage.RestUrls: java.lang.String _deviceId>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r1);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r1 = staticinvoke <skiracer.storage.AppType: java.lang.String getPackageName()>();

        $r4 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r1);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r1);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String FORCED_REEXPORT>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String CONST_ONE>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return $r3;

     label1:
        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String FORCED_REEXPORT>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String CONST_ZERO>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r2);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return $r3;
    }

    public java.lang.String getPurchasedSubsHttpUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;
        int varReplacer8553;
        null_type varReplacer8554;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String GET_SUBSCRIPTIONS_RESTPATH>;

        varReplacer8553 = -1;

        varReplacer8554 = null;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, varReplacer8553, $r2, varReplacer8554);

        return $r1;
    }

    public java.util.Vector getPurchasedSubsHttpUrlParameters(java.lang.String, java.util.Vector, boolean, int, java.lang.String, java.lang.String, java.lang.String, boolean, boolean)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r3, $r4, $r5, varReplacer8555, varReplacer8556;
        java.util.Vector $r2;
        boolean $z0, $z1, $z2;
        int $i0, varReplacer8557;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Vector;

        $z0 := @parameter2: boolean;

        $i0 := @parameter3: int;

        $r3 := @parameter4: java.lang.String;

        $r4 := @parameter5: java.lang.String;

        $r5 := @parameter6: java.lang.String;

        $z1 := @parameter7: boolean;

        $z2 := @parameter8: boolean;

        varReplacer8555 = "";

        varReplacer8556 = "";

        varReplacer8557 = 1;

        $r2 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getMapPartsHttpUrlParameters(java.lang.String,java.util.Vector,boolean,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>(varReplacer8555, $r2, $z0, $i0, varReplacer8555, $r4, $r5, $z1, varReplacer8557);

        return $r2;
    }

    public java.lang.String getRatingParamsHttpUrl(java.util.Vector)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1, $r3;
        java.lang.String $r2, $r7, varReplacer6015;
        java.util.Enumeration $r4;
        boolean $z0;
        java.lang.Object $r5;
        skiracer.util.Pair $r6;
        java.io.PrintStream $r8;
        int varReplacer6014;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        varReplacer6015 = "rparams.txt";

        $r3 = specialinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getStaticFileHttpUrlParameters(java.lang.String)>(varReplacer6015);

        if $r1 == null goto label2;

        $r4 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (skiracer.util.Pair) $r5;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r2 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getDeviceMetaStringForExport()>();

        $r7 = <skiracer.storage.RestUrls: java.lang.String DEVICE_META_KEY_EXPORT>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, $r7, $r2);

        $r7 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String RATING_PARAMS_RESTPATH>;

        varReplacer6014 = -1;

        $r2 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r7, varReplacer6014, $r2, $r3);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r2);

        return $r2;
    }

    public java.lang.String getRenewUrl()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, varReplacer6836, varReplacer6837, varReplacer6838, varReplacer6839;
        long $l0;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        varReplacer6836 = "http://";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6836);

        $r2 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer6837 = "/main/renew";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6837);

        varReplacer6838 = "?";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6838);

        $r2 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer6839 = "=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6839);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getResortListHttpUrl(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, varReplacer2048, varReplacer2049, varReplacer2050, varReplacer2051, varReplacer2052, varReplacer2053, varReplacer2054, varReplacer2055;
        long $l2;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _featuredByCountryHttp>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer2049 = "http://";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2049);

        $r3 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2055 = "/static_html/";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2055);

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _featuredByCountryHttp>;

        $r3 = $r1[$i0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2053 = "?";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2053);

        $r3 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2048 = "=";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2048);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer2054 = "http://";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2054);

        $r3 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2052 = "/static_html/";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2052);

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _featuredByCountryHttp>;

        $r3 = $r1[0];

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2051 = "?";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2051);

        $r3 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2050 = "=";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2050);

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.String getRncCatalogHttpUrl(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label02;

        $r1 = "usacatalog.zip";

     label01:
        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStaticFileHttpUrl(java.lang.String)>($r1);

        return $r1;

     label02:
        if $i0 != 1 goto label03;

        $r1 = "cancatalog.zip";

        goto label01;

     label03:
        if $i0 != 3 goto label04;

        $r1 = "gbrcatalog.zip";

        goto label01;

     label04:
        if $i0 != 4 goto label05;

        $r1 = "nldcatalog.zip";

        goto label01;

     label05:
        if $i0 != 5 goto label06;

        $r1 = "belcatalog.zip";

        goto label01;

     label06:
        if $i0 != 6 goto label07;

        $r1 = "islcatalog.zip";

        goto label01;

     label07:
        if $i0 != 7 goto label08;

        $r1 = "deucatalog.zip";

        goto label01;

     label08:
        if $i0 != 8 goto label09;

        $r1 = "cbncatalog.zip";

        goto label01;

     label09:
        if $i0 != 9 goto label10;

        $r1 = "zafcatalog.zip";

        goto label01;

     label10:
        if $i0 != 10 goto label11;

        $r1 = "omncatalog.zip";

        goto label01;

     label11:
        if $i0 != 11 goto label12;

        $r1 = "hrvcatalog.zip";

        goto label01;

     label12:
        if $i0 != 12 goto label13;

        $r1 = "estcatalog.zip";

        goto label01;

     label13:
        if $i0 != 13 goto label14;

        $r1 = "argcatalog.zip";

        goto label01;

     label14:
        if $i0 != 14 goto label15;

        $r1 = "mltcatalog.zip";

        goto label01;

     label15:
        if $i0 != 15 goto label16;

        $r1 = "espcatalog.zip";

        goto label01;

     label16:
        if $i0 != 16 goto label17;

        $r1 = "prtcatalog.zip";

        goto label01;

     label17:
        if $i0 != 17 goto label18;

        $r1 = "bracatalog.zip";

        goto label01;

     label18:
        if $i0 != 18 goto label19;

        $r1 = "lvacatalog.zip";

        goto label01;

     label19:
        if $i0 != 19 goto label20;

        $r1 = "autcatalog.zip";

        goto label01;

     label20:
        if $i0 != 20 goto label21;

        $r1 = "dnkcatalog.zip";

        goto label01;

     label21:
        if $i0 != 2 goto label22;

        $r1 = "nzlcatalog.zip";

        goto label01;

     label22:
        if $i0 != 21 goto label23;

        $r1 = "ieucatalog.zip";

        goto label01;

     label23:
        if $i0 != 22 goto label24;

        $r1 = "fincatalog.zip";

        goto label01;

     label24:
        if $i0 != 23 goto label25;

        $r1 = "norcatalog.zip";

        goto label01;

     label25:
        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getCatalogZipFileName(int)>($i0);

        goto label01;
    }

    public java.lang.String getSearchUrl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Vector, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21;
        java.util.Vector $r16;
        java.io.PrintStream $r22;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        $r7 := @parameter6: java.lang.String;

        $r8 := @parameter7: java.lang.String;

        $r9 := @parameter8: java.lang.String;

        $r10 := @parameter9: java.lang.String;

        $r11 := @parameter10: java.lang.String;

        $r12 := @parameter11: java.lang.String;

        $r13 := @parameter12: java.lang.String;

        $r14 := @parameter13: java.lang.String;

        $r15 := @parameter14: java.lang.String;

        $r16 := @parameter15: java.util.Vector;

        $r17 := @parameter16: java.lang.String;

        $r18 := @parameter17: java.lang.String;

        $r19 := @parameter18: java.lang.String;

        $r20 := @parameter19: java.lang.String;

        $r21 := @parameter20: java.lang.String;

        $r16 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getSearchUrlParameters(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Vector,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21);

        $r2 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r1 = <skiracer.storage.RestUrls: java.lang.String SEARCH_RESTPATH>;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r2, -1, $r1, $r16);

        virtualinvoke $r16.<java.util.Vector: void removeAllElements()>();

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return $r1;
    }

    public java.lang.String getSearchUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;
        int varReplacer8596;
        null_type varReplacer8597;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String SEARCH_RESTPATH>;

        varReplacer8596 = -1;

        varReplacer8597 = null;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, varReplacer8596, $r2, varReplacer8597);

        return $r1;
    }

    public java.util.Vector getSearchUrlParameters(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Vector, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, varReplacer8598, varReplacer8599, varReplacer8600, varReplacer8601, varReplacer8602, varReplacer8603, varReplacer8604, varReplacer8605, varReplacer8606, varReplacer8607, varReplacer8608, varReplacer8609, varReplacer8610, varReplacer8611, varReplacer8612, varReplacer8613, varReplacer8614, varReplacer8615, varReplacer8616, varReplacer8617, varReplacer8618, varReplacer8619, varReplacer8620, varReplacer8621, varReplacer8622, varReplacer8623, varReplacer8624, varReplacer8625, varReplacer8626, varReplacer8627, varReplacer8628, varReplacer8629, varReplacer8630, varReplacer8631;
        java.util.Vector $r16, $r23;
        java.lang.Exception $r22;
        java.util.Enumeration $r24;
        boolean $z0;
        java.lang.Object $r25;
        java.lang.StringBuilder $r26;
        long $l0;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        $r7 := @parameter6: java.lang.String;

        $r8 := @parameter7: java.lang.String;

        $r9 := @parameter8: java.lang.String;

        $r10 := @parameter9: java.lang.String;

        $r11 := @parameter10: java.lang.String;

        $r12 := @parameter11: java.lang.String;

        $r13 := @parameter12: java.lang.String;

        $r14 := @parameter13: java.lang.String;

        $r15 := @parameter14: java.lang.String;

        $r16 := @parameter15: java.util.Vector;

        $r17 := @parameter16: java.lang.String;

        $r18 := @parameter17: java.lang.String;

        $r19 := @parameter18: java.lang.String;

        $r20 := @parameter19: java.lang.String;

        $r21 := @parameter20: java.lang.String;

        $r23 = new java.util.Vector;

        specialinvoke $r23.<java.util.Vector: void <init>()>();

        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r23);

        varReplacer8626 = "fname";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8626, $r1);

        varReplacer8628 = "state";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8628, $r2);

        varReplacer8616 = "op";

        varReplacer8617 = "1";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8616, varReplacer8617);

        varReplacer8600 = "cnty";

        varReplacer8601 = "";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8600, varReplacer8601);

        varReplacer8613 = "cell";

        varReplacer8614 = "";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8613, varReplacer8614);

        varReplacer8606 = "x1";

        varReplacer8607 = "";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8606, varReplacer8607);

        varReplacer8620 = "y1";

        varReplacer8621 = "";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8620, varReplacer8621);

        varReplacer8622 = "x2";

        varReplacer8623 = "";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8622, varReplacer8623);

        varReplacer8624 = "y2";

        varReplacer8625 = "";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8624, varReplacer8625);

        varReplacer8608 = "fid";

        varReplacer8609 = "";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8608, varReplacer8609);

        varReplacer8605 = "lat";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8605, $r11);

        varReplacer8603 = "lon";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8603, $r12);

        varReplacer8629 = "zoom";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8629, $r13);

        varReplacer8610 = "country";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8610, $r14);

        varReplacer8615 = "tllon";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8615, $r17);

        varReplacer8611 = "tllat";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8611, $r18);

        varReplacer8604 = "brlon";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8604, $r19);

        varReplacer8627 = "brlat";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8627, $r20);

        $r1 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY>;

        $r2 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, $r1, $r2);

        $r1 = <skiracer.storage.RestUrls: java.lang.String RESORTID_KEY>;

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, $r1, $r15);

        varReplacer8598 = "intelligent";

        varReplacer8599 = "1";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8598, varReplacer8599);

        if $r16 == null goto label2;

        $r24 = virtualinvoke $r16.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r24.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r25 = interfaceinvoke $r24.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r1 = (java.lang.String) $r25;

        $r2 = <skiracer.storage.RestUrls: java.lang.String KEY_KEY>;

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, $r2, $r1);

        goto label1;

     label2:
        $r1 = staticinvoke <skiracer.storage.AppType: java.lang.String getPackageName()>();

        $r2 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, $r2, $r1);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        varReplacer8619 = "";

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8619);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, $r2, $r1);

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        varReplacer8618 = "";

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8618);

        $r1 = <skiracer.storage.RestUrls: java.lang.String _deviceId>;

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, $r2, $r1);

        varReplacer8630 = "orders";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8630, $r21);

     label3:
        varReplacer8612 = "#!o k x h dkl ldsf /bin/perl";

        $r1 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getSignature(java.lang.String,java.util.Vector)>(varReplacer8612, $r23);

     label4:
        varReplacer8602 = "sig";

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r23, varReplacer8602, $r1);

        return $r23;

     label5:
        $r22 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        varReplacer8631 = "Signing error ";

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer8631);

        $r1 = virtualinvoke $r22.<java.lang.Exception: java.lang.String toString()>();

        $r26 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.String getSendAppRateStatsUrl(java.util.Vector)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        skiracer.util.Pair $r2;
        java.lang.String $r3, $r4, varReplacer6740, varReplacer6741, varReplacer6743, varReplacer6744;
        boolean $z0;
        java.lang.StringBuilder $r5;
        long $l0;
        java.io.PrintStream $r6;
        int varReplacer6742;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 = new skiracer.util.Pair;

        $r3 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY>;

        $r4 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_VALUE>;

        specialinvoke $r2.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, $r4);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $r3 = staticinvoke <skiracer.storage.AppType: java.lang.String getPackageName()>();

        if $r3 == null goto label1;

        varReplacer6744 = "";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer6744);

        if $z0 != 0 goto label1;

        $r2 = new skiracer.util.Pair;

        $r4 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        specialinvoke $r2.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r3);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

     label1:
        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer6741 = "";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6741);

        $r3 = <skiracer.storage.RestUrls: java.lang.String _deviceId>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        specialinvoke $r0.<skiracer.storage.RestUrls: void addParameter(java.util.Vector,java.lang.String,java.lang.String)>($r1, $r4, $r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer6740 = "";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6740);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new skiracer.util.Pair;

        $r4 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r2.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r3);

        virtualinvoke $r1.<java.util.Vector: void addElement(java.lang.Object)>($r2);

        $r3 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        varReplacer6742 = -1;

        varReplacer6743 = "/main/update_event/";

        $r3 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r3, varReplacer6742, varReplacer6743, $r1);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r3);

        return $r3;
    }

    public java.lang.String getServerSideCountryName(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _serverSideCountryNames>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _serverSideCountryNames>;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _serverSideCountryNames>;

        $r2 = $r1[0];

        return $r2;
    }

    public java.lang.String getServerSideSubscriptionName(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0, $i1;
        java.lang.String $r1, varReplacer6719, varReplacer6720;
        java.lang.String[] $r2;
        java.util.Locale $r3;
        java.lang.StringBuilder $r4;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r2 = <skiracer.storage.RestUrls: java.lang.String[] _serverSideCountryNames>;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label1;

        $r2 = <skiracer.storage.RestUrls: java.lang.String[] _twoLetterCodes>;

        $r1 = $r2[$i0];

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer6719 = "marine";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6719);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        varReplacer6720 = "unknown";

        return varReplacer6720;
    }

    public java.lang.String getServerSideTwoLetterCode(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _serverSideCountryNames>;

        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label1;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _twoLetterCodes>;

        $r2 = $r1[$i0];

        return $r2;

     label1:
        $r1 = <skiracer.storage.RestUrls: java.lang.String[] _twoLetterCodes>;

        $r2 = $r1[0];

        return $r2;
    }

    public skiracer.util.Pair getSignaturePair(java.util.Vector, java.util.Vector)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1, $r2, $r4;
        java.lang.Exception $r3;
        skiracer.util.Pair $r5;
        java.util.Enumeration $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.String $r8, $r9, varReplacer2541, varReplacer2542, varReplacer2543;
        java.lang.StringBuilder $r10;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.util.Vector;

        $r4 = new java.util.Vector;

        specialinvoke $r4.<java.util.Vector: void <init>()>();

        if $r1 == null goto label2;

        $r6 = virtualinvoke $r1.<java.util.Vector: java.util.Enumeration elements()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (skiracer.util.Pair) $r7;

        virtualinvoke $r4.<java.util.Vector: void addElement(java.lang.Object)>($r5);

        goto label1;

     label2:
        goto label3;

     label3:
        varReplacer2541 = "#!o k x h dkl ldsf /bin/perl";

        $r8 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getSignature(java.lang.String,java.util.Vector)>(varReplacer2541, $r4);

     label4:
        $r5 = new skiracer.util.Pair;

        varReplacer2543 = "sig";

        specialinvoke $r5.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>(varReplacer2543, $r8);

        return $r5;

     label5:
        $r3 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer2542 = "Signing error ";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2542);

        $r8 = virtualinvoke $r3.<java.lang.Exception: java.lang.String toString()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.String[] getStates(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0;
        java.lang.String[] $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label01;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] STATE_NAMES_ARRAY>;

        return $r1;

     label01:
        if $i0 != 3 goto label02;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] GBR_STATES>;

        return $r1;

     label02:
        if $i0 != 4 goto label03;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] NLD_STATES>;

        return $r1;

     label03:
        if $i0 != 5 goto label04;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] BEL_STATES>;

        return $r1;

     label04:
        if $i0 != 6 goto label05;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] ISL_STATES>;

        return $r1;

     label05:
        if $i0 != 1 goto label06;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] CANADA_STATES>;

        return $r1;

     label06:
        if $i0 != 7 goto label07;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] DEU_STATES>;

        return $r1;

     label07:
        if $i0 != 8 goto label08;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] CBN_STATES>;

        return $r1;

     label08:
        if $i0 != 9 goto label09;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] ZAF_STATES>;

        return $r1;

     label09:
        if $i0 != 10 goto label10;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] OMN_STATES>;

        return $r1;

     label10:
        if $i0 != 11 goto label11;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] HRV_STATES>;

        return $r1;

     label11:
        if $i0 != 12 goto label12;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] EST_STATES>;

        return $r1;

     label12:
        if $i0 != 13 goto label13;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] ARG_STATES>;

        return $r1;

     label13:
        if $i0 != 14 goto label14;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] MLT_STATES>;

        return $r1;

     label14:
        if $i0 != 15 goto label15;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] ESP_STATES>;

        return $r1;

     label15:
        if $i0 != 16 goto label16;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] PRT_STATES>;

        return $r1;

     label16:
        if $i0 != 17 goto label17;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] BRA_STATES>;

        return $r1;

     label17:
        if $i0 != 18 goto label18;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] LVA_STATES>;

        return $r1;

     label18:
        if $i0 != 19 goto label19;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] AUT_STATES>;

        return $r1;

     label19:
        if $i0 != 20 goto label20;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] DNK_STATES>;

        return $r1;

     label20:
        if $i0 != 2 goto label21;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] NEW_ZEALAND_STATES>;

        return $r1;

     label21:
        if $i0 != 21 goto label22;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] IEU_STATES>;

        return $r1;

     label22:
        if $i0 != 22 goto label23;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] FIN_STATES>;

        return $r1;

     label23:
        if $i0 != 23 goto label24;

        $r1 = <skiracer.storage.RestUrls: java.lang.String[] NOR_STATES>;

        return $r1;

     label24:
        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String[] createStatesForCountry(int)>($i0);

        return $r1;
    }

    public java.lang.String getSupportEmail()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String varReplacer1848;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        varReplacer1848 = "support@gpsnauticalcharts.com";

        return varReplacer1848;
    }

    public java.lang.String getTestMapListUrl()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r2 = <skiracer.storage.RestUrls: java.lang.String DEBUG_DOMAIN_NAME>;

        $r1 = <skiracer.storage.RestUrls: java.lang.String TEST_MAPLIST_FILENAME>;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStaticFileHttpUrlForDomain(java.lang.String,java.lang.String)>($r2, $r1);

        return $r1;
    }

    public java.lang.String getTestUrl()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        long $l0;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r2 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/static_html/test.txt");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r2 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getTidalCurrentStationDataHttpUrlBase()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getStationDataHttpUrlBase()>();

        return $r1;
    }

    public java.util.Vector getTidalCurrentStationDataHttpUrlParameters(java.util.Vector, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.util.Vector $r1;
        java.lang.String $r2, $r3, $r4, $r5, varReplacer7716;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.util.Vector;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        varReplacer7716 = "currentsprediction";

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.util.Vector getStationDataHttpUrlParameters(java.util.Vector,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3, $r4, varReplacer7716, $r5);

        return $r1;
    }

    public java.lang.String getTileIntervalHttpUrl(int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0;
        java.lang.String $r1, $r4;
        java.util.Locale $r2;
        java.lang.StringBuilder $r3;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        $r1 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getServerSideCountryName(int)>($i0);

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://54.227.241.87/static_html/");

        $r4 = <skiracer.storage.RestUrls: java.lang.String PREFIX_FOR_INTERVAL_FILE>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".zip");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.String getTosUrl()
    {
        skiracer.storage.RestUrls $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, varReplacer4772, varReplacer4773;
        long $l0;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        varReplacer4772 = "http://www.gpsnauticalcharts.com/main/tos?";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4772);

        $r2 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4773 = "=";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4773);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getUpdateCheckUrl(java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r4, varReplacer4651;
        java.util.Vector $r2;
        skiracer.util.Pair $r3;
        java.lang.StringBuilder $r5;
        long $l0;
        int varReplacer4652;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        $r3 = new skiracer.util.Pair;

        $r4 = <skiracer.storage.RestUrls: java.lang.String VERSION_KEY>;

        specialinvoke $r3.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r1);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        $r3 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY>;

        $r4 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_VALUE>;

        specialinvoke $r3.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r4);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        $r3 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String SOFTWARE_TYPE_KEY>;

        $r4 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        specialinvoke $r3.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r4);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer4651 = "";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4651);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = new skiracer.util.Pair;

        $r4 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r3.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r4, $r1);

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>($r3);

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        $r4 = <skiracer.storage.RestUrls: java.lang.String CHECK_VERSION_REST_PATH>;

        varReplacer4652 = -1;

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, varReplacer4652, $r4, $r2);

        virtualinvoke $r2.<java.util.Vector: void removeAllElements()>();

        return $r1;
    }

    public java.lang.String getUpdateToPaidUrl(java.lang.String, java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1, $r2, $r5, varReplacer4226, varReplacer4227, varReplacer4228, varReplacer4230, varReplacer4231, varReplacer4232, varReplacer4233, varReplacer4234, varReplacer4235;
        java.util.Vector $r3;
        boolean $z0;
        skiracer.util.Pair $r4;
        java.lang.StringBuilder $r6;
        long $l0;
        java.io.PrintStream $r7;
        int varReplacer4229;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        varReplacer4232 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer4232);

        if $z0 != 0 goto label1;

        $r4 = new skiracer.util.Pair;

        $r5 = <skiracer.storage.RestUrls: java.lang.String RESORTID_KEY>;

        varReplacer4235 = "";

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r5, varReplacer4235);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

     label1:
        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_IN_IOS>;

        $r5 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getPlatformTypeValueUnif()>();

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r5);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r1 = staticinvoke <skiracer.storage.AppType: java.lang.String getClientPackageName()>();

        varReplacer4234 = "packcli";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, varReplacer4234, $r1);

        $r1 = staticinvoke <skiracer.storage.AppType: java.lang.String getStoreName()>();

        varReplacer4233 = "store";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, varReplacer4233, $r1);

        $r4 = new skiracer.util.Pair;

        $r1 = <skiracer.storage.RestUrls: java.lang.String PLATFORM_TYPE_KEY_UNIF>;

        $r5 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getPlatformTypeValueUnif()>();

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r1, $r5);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        $r1 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_KEY>;

        $r5 = <skiracer.storage.RestUrls: java.lang.String APP_TYPE_VALUE>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, $r1, $r5);

        $r1 = staticinvoke <skiracer.storage.RestUrls: java.lang.String getDeviceMetaStringForExport()>();

        $r5 = <skiracer.storage.RestUrls: java.lang.String DEVICE_META_KEY_EXPORT>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, $r5, $r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer4231 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4231);

        $r1 = <skiracer.storage.RestUrls: java.lang.String _deviceId>;

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = <skiracer.storage.RestUrls: java.lang.String DEVICEID_KEY>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, $r5, $r1);

        $r1 = <skiracer.storage.RestUrls: java.lang.String PACKAGE_NAME_KEY>;

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, $r1, $r2);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer4226 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4226);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new skiracer.util.Pair;

        $r2 = <skiracer.storage.RestUrls: java.lang.String RAND_KEY>;

        specialinvoke $r4.<skiracer.util.Pair: void <init>(java.lang.Object,java.lang.Object)>($r2, $r1);

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        staticinvoke <skiracer.storage.RestUrls: void addLocaleParam(java.util.Vector)>($r3);

        varReplacer4227 = "render";

        varReplacer4228 = "vector";

        staticinvoke <skiracer.storage.RestUrls: void addParameterIfNotEmpty(java.util.Vector,java.lang.String,java.lang.String)>($r3, varReplacer4227, varReplacer4228);

        $r1 = <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST>;

        varReplacer4229 = -1;

        varReplacer4230 = "/main/upgrade_from_trial/";

        $r1 = staticinvoke <skiracer.util.UrlUtil: java.lang.String buildUrl(java.lang.String,int,java.lang.String,java.util.Vector)>($r1, varReplacer4229, varReplacer4230, $r3);

        virtualinvoke $r3.<java.util.Vector: void removeAllElements()>();

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r1);

        return $r1;
    }

    public java.lang.String getWeatherCatalogHttpUrl(int, int)
    {
        skiracer.storage.RestUrls $r0;
        int $i0, $i1;
        java.lang.String $r1, varReplacer2317;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 != 0 goto label1;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getHighLowTideStaionCatalogHttpUrl(int)>($i0);

        return $r1;

     label1:
        if $i1 != 1 goto label2;

        $r1 = specialinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getTidalCurrentsStationCatalogHttpUrl(int)>($i0);

        return $r1;

     label2:
        if $i1 != 2 goto label3;

        $r1 = virtualinvoke $r0.<skiracer.storage.RestUrls: java.lang.String getCurrentStationListHttpUrl(int)>($i0);

        return $r1;

     label3:
        varReplacer2317 = "";

        return varReplacer2317;
    }

    public java.lang.String getWebsite()
    {
        skiracer.storage.RestUrls $r0;

        $r0 := @this: skiracer.storage.RestUrls;

        return "http://www.gpsnauticalcharts.com";
    }

    public void setBaseDomain(java.lang.String)
    {
        skiracer.storage.RestUrls $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: skiracer.storage.RestUrls;

        $r1 := @parameter0: java.lang.String;

        <skiracer.storage.RestUrls: java.lang.String BASE_DOMAIN_HOST> = $r1;

        return;
    }
}
