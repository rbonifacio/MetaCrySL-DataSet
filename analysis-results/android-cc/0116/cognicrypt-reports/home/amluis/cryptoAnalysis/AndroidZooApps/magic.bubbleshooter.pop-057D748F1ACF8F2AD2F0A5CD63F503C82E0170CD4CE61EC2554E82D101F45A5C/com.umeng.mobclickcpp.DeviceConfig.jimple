public class com.umeng.mobclickcpp.DeviceConfig extends java.lang.Object
{
    private static boolean CheckDevice;
    public static final int DEFAULT_TIMEZONE;
    protected static final java.lang.String LOG_TAG;
    private static final java.lang.String MOBILE_NETWORK;
    protected static final java.lang.String UNKNOW;
    private static final java.lang.String WIFI;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        int varReplacer1117;

        nop;

        $r1 = class "Lcom/umeng/mobclickcpp/DeviceConfig;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG> = $r0;

        varReplacer1117 = 1;

        <com.umeng.mobclickcpp.DeviceConfig: boolean CheckDevice> = varReplacer1117;

        return;
    }

    public void <init>()
    {
        com.umeng.mobclickcpp.DeviceConfig $r0;

        $r0 := @this: com.umeng.mobclickcpp.DeviceConfig;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.String byte2HexFormatted(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1, $r4;
        int $i0, $i1, $i3, varReplacer1134;
        java.lang.String $r2, $r3, varReplacer1135;
        byte $b2;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $b2 = $r0[$i0];

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($b2);

        $r3 = $r2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 1 goto label3;

        $r4 = new java.lang.StringBuilder;

        varReplacer1135 = "0";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1135);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        if $i1 <= 2 goto label4;

        $i3 = $i1 + -2;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>($i3, $i1);

     label4:
        $r2 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i1 = lengthof $r0;

        $i1 = $i1 + -1;

        if $i0 >= $i1 goto label5;

        varReplacer1134 = 58;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer1134);

     label5:
        $i0 = $i0 + 1;

        goto label1;
    }

    public static boolean checkPermission(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        android.content.pm.PackageManager $r2;
        int $i0, varReplacer1228, varReplacer1229;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $i0 = virtualinvoke $r2.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>($r1, $r3);

        if $i0 == 0 goto label1;

        varReplacer1229 = 0;

        return varReplacer1229;

     label1:
        varReplacer1228 = 1;

        return varReplacer1228;
    }

    public static java.lang.String getAppLabel(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;
        java.lang.Object $r5;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 0);

     label2:
        if $r4 == null goto label5;

        $r5 = virtualinvoke $r2.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r4);

     label3:
        $r3 = (java.lang.String) $r5;

        return $r3;

     label4:
        $r1 := @caughtexception;

        $r4 = null;

        goto label2;

     label5:
        $r5 = "";

        goto label3;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    public static java.lang.String getAppVersionCode(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        int $i0, varReplacer1099;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, varReplacer1098;
        android.content.pm.PackageInfo $r4;

        nop;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1099 = 0;

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, varReplacer1099);

     label2:
        $i0 = $r4.<android.content.pm.PackageInfo: int versionCode>;

     label3:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

     label4:
        return $r3;

     label5:
        $r1 := @caughtexception;

        varReplacer1098 = "Unknown";

        return varReplacer1098;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
    }

    public static java.lang.String getAppVersionName(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, varReplacer1101;
        android.content.pm.PackageInfo $r4;
        int varReplacer1100;

        nop;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1100 = 0;

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, varReplacer1100);

     label2:
        $r3 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r3;

     label3:
        $r1 := @caughtexception;

        varReplacer1101 = "Unknown";

        return varReplacer1101;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String getAppkey(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;
        android.os.Bundle $r5;

        $r0 := @parameter0: android.content.Context;

     label01:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

     label02:
        if $r4 == null goto label09;

     label03:
        $r5 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $r3 = virtualinvoke $r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>("UMENG_APPKEY");

     label04:
        if $r3 == null goto label07;

     label05:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

     label06:
        return $r3;

     label07:
        $r3 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

     label08:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Could not read UMENG_APPKEY meta-data from AndroidManifest.xml.");

     label09:
        return null;

     label10:
        $r1 := @caughtexception;

        $r3 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Could not read UMENG_APPKEY meta-data from AndroidManifest.xml.", $r1);

        goto label09;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    public static java.lang.String getApplicationLable(android.content.Context)
    {
        android.content.Context $r0;
        android.content.pm.PackageManager $r1;
        android.content.pm.ApplicationInfo $r2;
        java.lang.CharSequence $r3;
        java.lang.String $r4;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r3 = virtualinvoke $r1.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r2);

        $r4 = interfaceinvoke $r3.<java.lang.CharSequence: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String getCPU()
    {
        java.io.FileReader $r0;
        java.io.BufferedReader $r1;
        int $i0, varReplacer1102, varReplacer1103;
        java.lang.String $r2, $r3, varReplacer1104, varReplacer1105, varReplacer1106;
        java.lang.Throwable $r4, $r5;

        nop;

        $r2 = null;

        $r0 = new java.io.FileReader;

     label01:
        varReplacer1106 = "/proc/cpuinfo";

        specialinvoke $r0.<java.io.FileReader: void <init>(java.lang.String)>(varReplacer1106);

     label02:
        if $r0 == null goto label17;

        $r1 = new java.io.BufferedReader;

     label03:
        varReplacer1102 = 1024;

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r0, varReplacer1102);

     label04:
        $r3 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        $r2 = $r3;

     label06:
        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

        virtualinvoke $r0.<java.io.FileReader: void close()>();

     label07:
        if $r2 == null goto label08;

        varReplacer1103 = 58;

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>(varReplacer1103);

        $i0 = $i0 + 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

     label08:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r2;

     label09:
        $r4 := @caughtexception;

     label10:
        $r3 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

     label11:
        varReplacer1104 = "Could not read from file /proc/cpuinfo";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, varReplacer1104, $r4);

     label12:
        goto label07;

     label13:
        $r5 := @caughtexception;

     label14:
        $r3 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1105 = "Could not open file /proc/cpuinfo";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, varReplacer1105, $r5);

        goto label07;

     label15:
        $r5 := @caughtexception;

        goto label14;

     label16:
        $r4 := @caughtexception;

        goto label10;

     label17:
        goto label07;

        catch java.io.FileNotFoundException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label09;
        catch java.io.IOException from label04 to label05 with label16;
        catch java.io.IOException from label06 to label07 with label16;
        catch java.io.FileNotFoundException from label11 to label12 with label15;
    }

    public static java.lang.String getChannel(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3;
        android.content.pm.ApplicationInfo $r4;
        android.os.Bundle $r5;
        java.lang.Object $r6;

        $r0 := @parameter0: android.content.Context;

     label01:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r3, 128);

     label02:
        if $r4 == null goto label13;

     label03:
        $r5 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

     label04:
        if $r5 == null goto label13;

     label05:
        $r5 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        $r6 = virtualinvoke $r5.<android.os.Bundle: java.lang.Object get(java.lang.String)>("UMENG_CHANNEL");

     label06:
        if $r6 == null goto label13;

     label07:
        $r3 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

     label08:
        if $r3 == null goto label09;

        return $r3;

     label09:
        $r3 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

     label10:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, "Could not read UMENG_CHANNEL meta-data from AndroidManifest.xml.");

     label11:
        return "Unknown";

     label12:
        $r1 := @caughtexception;

        $r3 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, "Could not read UMENG_CHANNEL meta-data from AndroidManifest.xml.");

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

     label13:
        return "Unknown";

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public static java.lang.String getDeviceId(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1, $r2;
        java.lang.String $r3, $r6, $r7, $r10, varReplacer1149, varReplacer1150, varReplacer1151, varReplacer1152, varReplacer1153, varReplacer1154, varReplacer1155, varReplacer1156, varReplacer1157, varReplacer1158, varReplacer1159, varReplacer1160, varReplacer1161, varReplacer1162, varReplacer1163;
        java.lang.Object $r4;
        android.telephony.TelephonyManager $r5;
        int $i0;
        boolean $z0;
        java.lang.StringBuilder $r8;
        android.content.ContentResolver $r9;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r3 = "";

        varReplacer1157 = "phone";

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1157);

        $r5 = (android.telephony.TelephonyManager) $r4;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label09;

     label01:
        varReplacer1158 = "android.permission.READ_PHONE_STATE";

        $z0 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: boolean checkPermission(android.content.Context,java.lang.String)>($r0, varReplacer1158);

     label02:
        if $z0 == 0 goto label06;

     label03:
        $r6 = virtualinvoke $r5.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label04:
        $r3 = $r6;

        $r7 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        $r8 = new java.lang.StringBuilder;

     label05:
        varReplacer1154 = "getDeviceId, IMEI: ";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1154);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, $r6);

     label06:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label16;

        $r3 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String getMacShell()>();

        $r7 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        $r8 = new java.lang.StringBuilder;

        varReplacer1149 = "getDeviceId, mc: ";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1149);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, $r6);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label16;

        $r9 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer1159 = "android_id";

        $r7 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r9, varReplacer1159);

        $r3 = $r7;

        $r6 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        $r8 = new java.lang.StringBuilder;

        varReplacer1152 = "getDeviceId, android_id: ";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1152);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r6, $r10);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z0 == 0 goto label17;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label07;

        $r3 = <android.os.Build: java.lang.String SERIAL>;

     label07:
        $r7 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        $r8 = new java.lang.StringBuilder;

        varReplacer1161 = "getDeviceId, serial no: ";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1161);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, $r6);

        return $r3;

     label08:
        $r1 := @caughtexception;

        $r7 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1162 = "No IMEI.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, varReplacer1162, $r1);

        goto label06;

     label09:
        if $r5 != null goto label10;

        $r7 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1156 = "No IMEI.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, varReplacer1156);

     label10:
        varReplacer1160 = "android.permission.READ_PHONE_STATE";

        $z0 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: boolean checkPermission(android.content.Context,java.lang.String)>($r0, varReplacer1160);

     label11:
        if $z0 == 0 goto label14;

     label12:
        $r7 = virtualinvoke $r5.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label13:
        $r3 = $r7;

     label14:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label18;

        $r3 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1163 = "No IMEI.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, varReplacer1163);

        $r3 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String getMac(android.content.Context)>($r0);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label18;

        $r3 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1151 = "Failed to take mac as IMEI. Try to use Secure.ANDROID_ID instead.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r3, varReplacer1151);

        $r9 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer1153 = "android_id";

        $r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r9, varReplacer1153);

        $r7 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        $r8 = new java.lang.StringBuilder;

        varReplacer1155 = "getDeviceId: Secure.ANDROID_ID: ";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1155);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r7, $r6);

        return $r3;

     label15:
        $r2 := @caughtexception;

        $r7 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1150 = "No IMEI.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r7, varReplacer1150, $r2);

        goto label14;

     label16:
        return $r3;

     label17:
        return $r7;

     label18:
        return $r3;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label12 to label13 with label15;
    }

    public static java.lang.String getDeviceIdUmengMD5(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        java.lang.StringBuffer $r2;
        short $s0;
        java.security.MessageDigest $r3;
        java.lang.String $r4, varReplacer1113, varReplacer1114, varReplacer1115;
        byte[] $r5;
        int $i1, $i2;
        byte $b3;

        nop;

        $r0 := @parameter0: android.content.Context;

     label01:
        varReplacer1115 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1115);

        $r4 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String getDeviceId(android.content.Context)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r5);

        $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r2 = new java.lang.StringBuffer;

     label03:
        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i1 = 0;

     label05:
        $i2 = lengthof $r5;

        if $i1 < $i2 goto label08;

     label06:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label07:
        return $r4;

     label08:
        $b3 = $r5[$i1];

        $s0 = $b3 & 255;

     label09:
        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s0);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label10:
        $i1 = $i1 + 1;

        goto label05;

     label11:
        $r1 := @caughtexception;

        $r4 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1114 = "getMD5 error";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, varReplacer1114, $r1);

        varReplacer1113 = "";

        return varReplacer1113;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label11;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label11;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label11;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label11;
    }

    public static java.lang.String getDisplayResolution(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        int $i0, $i1;
        android.util.DisplayMetrics $r2;
        java.lang.Object $r3;
        android.view.WindowManager $r4;
        android.view.Display $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r7;

        $r0 := @parameter0: android.content.Context;

        $r2 = new android.util.DisplayMetrics;

     label1:
        specialinvoke $r2.<android.util.DisplayMetrics: void <init>()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r4 = (android.view.WindowManager) $r3;

        $r5 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r5.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r2);

        $i1 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        $i0 = $r2.<android.util.DisplayMetrics: int heightPixels>;

     label2:
        $r6 = new java.lang.StringBuilder;

     label3:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $r7;

     label5:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return "Unknown";

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String[] getGPU(javax.microedition.khronos.opengles.GL10)
    {
        javax.microedition.khronos.opengles.GL10 $r0;
        java.lang.Exception $r1;
        java.lang.String[] $r2;
        java.lang.String $r3, $r4;

        $r0 := @parameter0: javax.microedition.khronos.opengles.GL10;

     label1:
        $r2 = newarray (java.lang.String)[2];

        $r3 = interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>(7936);

        $r4 = interfaceinvoke $r0.<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>(7937);

        $r2[0] = $r3;

        $r2[1] = $r4;

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        $r3 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "Could not read gpu infor:", $r1);

        $r2 = newarray (java.lang.String)[0];

        return $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.util.Set getInstalledPackages(android.content.Context)
    {
        android.content.Context $r0;
        java.util.HashSet $r1;
        android.content.pm.PackageManager $r2;
        java.util.List $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        android.content.pm.PackageInfo $r5;
        java.lang.String $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(0);

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 < $i1 goto label2;

        return $r1;

     label2:
        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i0);

        $r5 = (android.content.pm.PackageInfo) $r4;

        $r6 = $r5.<android.content.pm.PackageInfo: java.lang.String packageName>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $i0 = $i0 + 1;

        goto label1;
    }

    public static int getIntervalSeconds(java.util.Date, java.util.Date)
    {
        java.util.Date $r0, $r1, $r2;
        long $l0, $l1;
        boolean $z0;
        int $i2;

        $r1 := @parameter0: java.util.Date;

        $r2 := @parameter1: java.util.Date;

        $z0 = virtualinvoke $r1.<java.util.Date: boolean after(java.util.Date)>($r2);

        if $z0 == 0 goto label1;

        $r0 = $r1;

        $r1 = $r2;

        $r2 = $r0;

     label1:
        $l0 = virtualinvoke $r1.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke $r2.<java.util.Date: long getTime()>();

        $l0 = $l1 - $l0;

        $l0 = $l0 / 1000L;

        $i2 = (int) $l0;

        return $i2;
    }

    private static java.util.Locale getLocale(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.content.res.Configuration $r2;
        java.util.Locale $r3;
        android.content.ContentResolver $r4;
        java.lang.String $r5, varReplacer1144;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r3 = null;

        $r2 = new android.content.res.Configuration;

     label1:
        specialinvoke $r2.<android.content.res.Configuration: void <init>()>();

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>($r4, $r2);

     label2:
        if $r2 == null goto label4;

     label3:
        $r3 = $r2.<android.content.res.Configuration: java.util.Locale locale>;

     label4:
        if $r3 != null goto label6;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        return $r3;

     label5:
        $r1 := @caughtexception;

        $r5 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1144 = "fail to read user config locale";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, varReplacer1144);

        goto label4;

     label6:
        return $r3;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String[] getLocaleInfo(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String[] $r1;
        java.lang.Exception $r2;
        java.util.Locale $r3;
        java.lang.String $r4, varReplacer1095;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = newarray (java.lang.String)[2];

     label01:
        $r3 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.util.Locale getLocale(android.content.Context)>($r0);

     label02:
        if $r3 == null goto label04;

     label03:
        $r4 = virtualinvoke $r3.<java.util.Locale: java.lang.String getCountry()>();

        $r1[0] = $r4;

        $r4 = virtualinvoke $r3.<java.util.Locale: java.lang.String getLanguage()>();

        $r1[1] = $r4;

     label04:
        $r4 = $r1[0];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label05:
        if $z0 == 0 goto label07;

     label06:
        $r1[0] = "Unknown";

     label07:
        $r4 = $r1[1];

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label08:
        if $z0 == 0 goto label12;

     label09:
        $r1[1] = "Unknown";

     label10:
        return $r1;

     label11:
        $r2 := @caughtexception;

        $r4 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1095 = "error in getLocaleInfo";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, varReplacer1095, $r2);

     label12:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label05 with label11;
        catch java.lang.Exception from label06 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static android.location.Location getLocation(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        java.lang.Object $r2;
        android.location.LocationManager $r3;
        boolean $z0;
        android.location.Location $r4;
        java.lang.String $r5, $r7;
        java.lang.StringBuilder $r6;
        double $d0;

        $r0 := @parameter0: android.content.Context;

     label01:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("location");

        $r3 = (android.location.LocationManager) $r2;

        $z0 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: boolean checkPermission(android.content.Context,java.lang.String)>($r0, "android.permission.ACCESS_FINE_LOCATION");

     label02:
        if $z0 == 0 goto label07;

     label03:
        $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("gps");

     label04:
        if $r4 == null goto label07;

        $r5 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

     label05:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("get location from gps:");

        $d0 = virtualinvoke $r4.<android.location.Location: double getLatitude()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $d0 = virtualinvoke $r4.<android.location.Location: double getLongitude()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7);

     label06:
        return $r4;

     label07:
        $z0 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: boolean checkPermission(android.content.Context,java.lang.String)>($r0, "android.permission.ACCESS_COARSE_LOCATION");

     label08:
        if $z0 == 0 goto label13;

     label09:
        $r4 = virtualinvoke $r3.<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>("network");

     label10:
        if $r4 == null goto label13;

        $r5 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("get location from network:");

        $d0 = virtualinvoke $r4.<android.location.Location: double getLatitude()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $d0 = virtualinvoke $r4.<android.location.Location: double getLongitude()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r7);

     label12:
        return $r4;

     label13:
        $r5 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

     label14:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, "Could not get location from GPS or Cell-id, lack ACCESS_COARSE_LOCATION or ACCESS_COARSE_LOCATION permission?");

     label15:
        return null;

     label16:
        $r1 := @caughtexception;

        $r5 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        $r7 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r5, $r7);

        return null;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Exception from label05 to label06 with label16;
        catch java.lang.Exception from label07 to label08 with label16;
        catch java.lang.Exception from label09 to label10 with label16;
        catch java.lang.Exception from label11 to label12 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    private static java.lang.String getM(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        java.lang.Object $r2;
        android.net.wifi.WifiManager $r3;
        boolean $z0;
        android.net.wifi.WifiInfo $r4;
        java.lang.String $r5, $r7, varReplacer1258, varReplacer1259, varReplacer1260, varReplacer1261, varReplacer1262, varReplacer1263;
        java.lang.StringBuilder $r6;

        nop;

        $r0 := @parameter0: android.content.Context;

     label1:
        varReplacer1258 = "wifi";

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1258);

        $r3 = (android.net.wifi.WifiManager) $r2;

        varReplacer1262 = "android.permission.ACCESS_WIFI_STATE";

        $z0 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: boolean checkPermission(android.content.Context,java.lang.String)>($r0, varReplacer1262);

     label2:
        if $z0 == 0 goto label5;

     label3:
        $r4 = virtualinvoke $r3.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r5 = virtualinvoke $r4.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

     label4:
        return $r5;

     label5:
        $r5 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

     label6:
        varReplacer1261 = "Could not get mac address.[no permission android.permission.ACCESS_WIFI_STATE";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, varReplacer1261);

     label7:
        varReplacer1263 = "";

        return varReplacer1263;

     label8:
        $r1 := @caughtexception;

        $r5 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

        varReplacer1260 = "Could not get mac address.";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1260);

        $r7 = virtualinvoke $r1.<java.lang.Exception: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r5, $r7);

        varReplacer1259 = "";

        return varReplacer1259;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static java.lang.String getMac(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 23 goto label1;

        $r1 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String getMacShell()>();

        if $r1 != null goto label2;

        $r1 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String getM(android.content.Context)>($r0);

        return $r1;

     label1:
        $r1 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String getM(android.content.Context)>($r0);

     label2:
        return $r1;
    }

    private static java.lang.String getMacShell()
    {
        java.lang.Exception $r0;
        java.lang.String[] $r1;
        java.lang.String $r2, varReplacer1230;
        boolean $z0;
        int $i0, $i1;
        null_type varReplacer1231;

        nop;

        $z0 = <com.umeng.mobclickcpp.DeviceConfig: boolean CheckDevice>;

        if $z0 == 0 goto label2;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "/sys/class/net/wlan0/address";

        $r1[1] = "/sys/class/net/eth0/address";

        $r1[2] = "/sys/devices/virtual/net/wlan0/address";

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 < $i1 goto label3;

     label2:
        varReplacer1231 = null;

        return varReplacer1231;

     label3:
        $r2 = $r1[$i0];

        $r2 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String reaMac(java.lang.String)>($r2);

     label4:
        if $r2 != null goto label7;

     label5:
        $i0 = $i0 + 1;

        goto label1;

     label6:
        $r0 := @caughtexception;

        $r2 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1230 = "open file  Failed";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r2, varReplacer1230, $r0);

        goto label5;

     label7:
        return $r2;

        catch java.lang.Exception from label3 to label4 with label6;
    }

    public static java.lang.String[] getNetworkAccessMode(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        java.lang.String[] $r2;
        android.content.pm.PackageManager $r3;
        java.lang.String $r4, varReplacer1092, varReplacer1094;
        int $i0, varReplacer1091, varReplacer1093;
        java.lang.Object $r5;
        android.net.ConnectivityManager $r6;
        android.net.NetworkInfo $r7;
        android.net.NetworkInfo$State $r8, $r9;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = "Unknown";

        $r2[1] = "Unknown";

     label01:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1094 = "android.permission.ACCESS_NETWORK_STATE";

        $i0 = virtualinvoke $r3.<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>(varReplacer1094, $r4);

     label02:
        if $i0 == 0 goto label05;

     label03:
        $r2[0] = "Unknown";

     label04:
        return $r2;

     label05:
        varReplacer1092 = "connectivity";

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1092);

        $r6 = (android.net.ConnectivityManager) $r5;

     label06:
        if $r6 != null goto label10;

     label07:
        $r2[0] = "Unknown";

     label08:
        return $r2;

     label09:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return $r2;

     label10:
        varReplacer1093 = 1;

        $r7 = virtualinvoke $r6.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(varReplacer1093);

        $r8 = virtualinvoke $r7.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

     label11:
        $r9 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r8 != $r9 goto label14;

     label12:
        $r2[0] = "Wi-Fi";

     label13:
        return $r2;

     label14:
        varReplacer1091 = 0;

        $r7 = virtualinvoke $r6.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(varReplacer1091);

        $r8 = virtualinvoke $r7.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

     label15:
        $r9 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r8 != $r9 goto label17;

     label16:
        $r2[0] = "2G/3G";

        $r4 = virtualinvoke $r7.<android.net.NetworkInfo: java.lang.String getSubtypeName()>();

        $r2[1] = $r4;

     label17:
        return $r2;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label09;
        catch java.lang.Exception from label12 to label13 with label09;
        catch java.lang.Exception from label14 to label15 with label09;
        catch java.lang.Exception from label16 to label17 with label09;
    }

    public static java.lang.String getNetworkOperatorName(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        java.lang.Object $r2;
        android.telephony.TelephonyManager $r3;
        java.lang.String $r4;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r3 = (android.telephony.TelephonyManager) $r2;

     label2:
        if $r3 != null goto label3;

        return "Unknown";

     label3:
        $r4 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

     label4:
        return $r4;

     label5:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return "Unknown";

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String getOperator(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        java.lang.Object $r2;
        android.telephony.TelephonyManager $r3;
        java.lang.String $r4, varReplacer1088, varReplacer1089, varReplacer1090;

        nop;

        $r0 := @parameter0: android.content.Context;

     label1:
        varReplacer1089 = "phone";

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1089);

        $r3 = (android.telephony.TelephonyManager) $r2;

        $r4 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

     label2:
        return $r4;

     label3:
        $r1 := @caughtexception;

        $r4 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1090 = "read carrier fail";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, varReplacer1090, $r1);

        varReplacer1088 = "Unknown";

        return varReplacer1088;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getPackageName(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        return $r1;
    }

    public static java.lang.String getResolution(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.util.DisplayMetrics $r2;
        java.lang.StringBuffer $r3;
        java.lang.Object $r4;
        android.view.WindowManager $r5;
        android.view.Display $r6;
        int $i0, $i1, $i2;
        android.content.pm.ApplicationInfo $r7;
        java.lang.String $r8, varReplacer1107, varReplacer1108, varReplacer1109, varReplacer1110, varReplacer1111, varReplacer1112;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = new android.util.DisplayMetrics;

     label01:
        specialinvoke $r2.<android.util.DisplayMetrics: void <init>()>();

        varReplacer1109 = "window";

        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1109);

        $r5 = (android.view.WindowManager) $r4;

        $r6 = interfaceinvoke $r5.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r6.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r2);

     label02:
        $i0 = -1;

        $i1 = -1;

     label03:
        $r7 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i2 = $r7.<android.content.pm.ApplicationInfo: int flags>;

     label04:
        $i2 = $i2 & 8192;

        if $i2 != 0 goto label07;

     label05:
        varReplacer1112 = "noncompatWidthPixels";

        $i0 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: int reflectMetrics(java.lang.Object,java.lang.String)>($r2, varReplacer1112);

     label06:
        varReplacer1108 = "noncompatHeightPixels";

        $i1 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: int reflectMetrics(java.lang.Object,java.lang.String)>($r2, varReplacer1108);

     label07:
        if $i0 == -1 goto label08;

        if $i1 != -1 goto label09;

     label08:
        $i0 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        $i1 = $r2.<android.util.DisplayMetrics: int heightPixels>;

     label09:
        $r3 = new java.lang.StringBuffer;

     label10:
        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        varReplacer1110 = "*";

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer1110);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r8 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

     label11:
        return $r8;

     label12:
        $r1 := @caughtexception;

        $r8 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1107 = "read resolution fail";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, varReplacer1107, $r1);

        varReplacer1111 = "Unknown";

        return varReplacer1111;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public static java.lang.String getSign(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1, $r15, $r16, $r17, $r18;
        java.io.ByteArrayInputStream $r2, r19;
        android.content.pm.Signature[] $r3;
        android.content.pm.PackageManager $r4;
        android.content.pm.PackageInfo $r5, $r7;
        java.lang.String $r6, varReplacer1082, varReplacer1086;
        android.content.pm.Signature $r8;
        byte[] $r9;
        java.security.cert.CertificateFactory $r10, $r11;
        java.security.cert.X509Certificate $r12;
        java.security.cert.Certificate $r13;
        java.security.MessageDigest $r14;
        android.content.pm.PackageManager$NameNotFoundException r20;
        java.security.cert.CertificateException r21;
        java.security.NoSuchAlgorithmException r22;
        java.security.cert.CertificateEncodingException r23;
        int varReplacer1083;
        null_type varReplacer1084, varReplacer1085;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = null;

     label01:
        $r6 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String getPackageName(android.content.Context)>($r0);

        varReplacer1083 = 64;

        $r7 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r6, varReplacer1083);

     label02:
        $r5 = $r7;

     label03:
        $r3 = $r5.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r8 = $r3[0];

        $r9 = virtualinvoke $r8.<android.content.pm.Signature: byte[] toByteArray()>();

        r19 = new java.io.ByteArrayInputStream;

        $r2 = r19;

        specialinvoke r19.<java.io.ByteArrayInputStream: void <init>(byte[])>($r9);

        $r10 = null;

     label04:
        varReplacer1086 = "X509";

        $r11 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer1086);

     label05:
        $r10 = $r11;

     label06:
        $r12 = null;

     label07:
        $r13 = virtualinvoke $r10.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2);

     label08:
        $r12 = (java.security.cert.X509Certificate) $r13;

     label09:
        varReplacer1082 = "MD5";

        $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1082);

        $r9 = virtualinvoke $r12.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r9 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest(byte[])>($r9);

        $r6 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String byte2HexFormatted(byte[])>($r9);

     label10:
        return $r6;

     label11:
        $r15 := @caughtexception;

        r20 = (android.content.pm.PackageManager$NameNotFoundException) $r15;

        virtualinvoke r20.<android.content.pm.PackageManager$NameNotFoundException: void printStackTrace()>();

        goto label03;

     label12:
        $r16 := @caughtexception;

        r21 = (java.security.cert.CertificateException) $r16;

        virtualinvoke r21.<java.security.cert.CertificateException: void printStackTrace()>();

        goto label06;

     label13:
        $r17 := @caughtexception;

        r21 = (java.security.cert.CertificateException) $r17;

        virtualinvoke r21.<java.security.cert.CertificateException: void printStackTrace()>();

        goto label09;

     label14:
        $r1 := @caughtexception;

        r22 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r22.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer1084 = null;

        return varReplacer1084;

     label15:
        $r18 := @caughtexception;

        r23 = (java.security.cert.CertificateEncodingException) $r18;

        virtualinvoke r23.<java.security.cert.CertificateEncodingException: void printStackTrace()>();

        varReplacer1085 = null;

        return varReplacer1085;

        catch android.content.pm.PackageManager$NameNotFoundException from label01 to label02 with label11;
        catch java.security.cert.CertificateException from label04 to label05 with label12;
        catch java.security.cert.CertificateException from label07 to label08 with label13;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label14;
        catch java.security.cert.CertificateEncodingException from label09 to label10 with label15;
    }

    public static java.lang.String getTimeString(java.util.Date)
    {
        java.util.Date $r0;
        java.text.SimpleDateFormat $r1;
        java.lang.String $r2;

        $r0 := @parameter0: java.util.Date;

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r2 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r0);

        return $r2;
    }

    public static int getTimeZone(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        java.util.Locale $r2;
        java.util.Calendar $r3;
        java.util.TimeZone $r4;
        int $i0, varReplacer1096;
        java.lang.String $r5, varReplacer1097;

        nop;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.util.Locale getLocale(android.content.Context)>($r0);

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r2);

     label2:
        if $r3 == null goto label6;

     label3:
        $r4 = virtualinvoke $r3.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        $i0 = virtualinvoke $r4.<java.util.TimeZone: int getRawOffset()>();

     label4:
        $i0 = $i0 / 3600000;

        return $i0;

     label5:
        $r1 := @caughtexception;

        $r5 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        varReplacer1097 = "error in getTimeZone";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, varReplacer1097, $r1);

     label6:
        varReplacer1096 = 8;

        return varReplacer1096;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String getToday()
    {
        java.util.Date $r0;
        java.text.SimpleDateFormat $r1;
        java.lang.String $r2;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>()>();

        $r1 = new java.text.SimpleDateFormat;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd");

        $r2 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r0);

        return $r2;
    }

    public static boolean isAppInstalled(java.lang.String, android.content.Context)
    {
        java.lang.String $r0;
        android.content.Context $r1;
        java.lang.Throwable $r2;
        android.content.pm.PackageManager $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        $r3 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

     label1:
        virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r0, 1);

     label2:
        return 1;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static boolean isChinese(android.content.Context)
    {
        android.content.Context $r0;
        java.util.Locale $r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        java.lang.String $r4, $r5;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r1 = $r3.<android.content.res.Configuration: java.util.Locale locale>;

        $r4 = virtualinvoke $r1.<java.util.Locale: java.lang.String toString()>();

        $r1 = <java.util.Locale: java.util.Locale CHINA>;

        $r5 = virtualinvoke $r1.<java.util.Locale: java.lang.String toString()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }

    public static boolean isDebug(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int flags>;

     label2:
        $i0 = $i0 & 2;

        if $i0 == 0 goto label4;

        return 1;

     label3:
        $r1 := @caughtexception;

     label4:
        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isOnline(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        java.lang.Object $r2;
        android.net.ConnectivityManager $r3;
        android.net.NetworkInfo $r4;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r3 = (android.net.ConnectivityManager) $r2;

        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label2:
        if $r4 == null goto label5;

     label3:
        $z0 = virtualinvoke $r4.<android.net.NetworkInfo: boolean isConnectedOrConnecting()>();

     label4:
        return $z0;

     label5:
        return 0;

     label6:
        $r1 := @caughtexception;

        return 1;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public static boolean isScreenPortrait(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.content.res.Configuration $r2;
        int $i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r2.<android.content.res.Configuration: int orientation>;

        if $i0 != 1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isSdCardWrittenable()
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("mounted");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static boolean isWiFiAvailable(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        java.lang.String[] $r2;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = "Wi-Fi";

        $r2 = staticinvoke <com.umeng.mobclickcpp.DeviceConfig: java.lang.String[] getNetworkAccessMode(android.content.Context)>($r0);

        $r3 = $r2[0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    private static java.lang.String reaMac(java.lang.String) throws java.io.FileNotFoundException
    {
        java.lang.String $r0, $r4, varReplacer1267;
        java.io.FileReader $r1, r14;
        java.io.BufferedReader $r2, $r3, r15;
        java.lang.Throwable $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        java.lang.StringBuilder $r6, r16;
        java.io.IOException r17;
        null_type varReplacer1264, varReplacer1265, varReplacer1268;
        int varReplacer1266;

        nop;

        $r0 := @parameter0: java.lang.String;

        r14 = new java.io.FileReader;

        $r1 = r14;

        specialinvoke r14.<java.io.FileReader: void <init>(java.lang.String)>($r0);

        $r3 = null;

        if $r1 == null goto label34;

     label01:
        r15 = new java.io.BufferedReader;

     label02:
        $r2 = r15;

     label03:
        varReplacer1266 = 1024;

        specialinvoke r15.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r1, varReplacer1266);

     label04:
        $r4 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label05:
        if $r1 == null goto label07;

     label06:
        virtualinvoke $r1.<java.io.FileReader: void close()>();

     label07:
        if $r2 == null goto label31;

     label08:
        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

     label09:
        return $r4;

     label10:
        $r5 := @caughtexception;

     label11:
        $r4 = <com.umeng.mobclickcpp.DeviceConfig: java.lang.String LOG_TAG>;

        r16 = new java.lang.StringBuilder;

     label12:
        $r6 = r16;

     label13:
        varReplacer1267 = "Could not read from file ";

        specialinvoke r16.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1267);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, $r0, $r5);

     label14:
        if $r1 == null goto label16;

     label15:
        virtualinvoke $r1.<java.io.FileReader: void close()>();

     label16:
        if $r3 == null goto label34;

     label17:
        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

     label18:
        varReplacer1264 = null;

        return varReplacer1264;

     label19:
        $r7 := @caughtexception;

        r17 = (java.io.IOException) $r7;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

        varReplacer1265 = null;

        return varReplacer1265;

     label20:
        $r8 := @caughtexception;

        r17 = (java.io.IOException) $r8;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

        goto label16;

     label21:
        $r9 := @caughtexception;

     label22:
        if $r1 == null goto label24;

     label23:
        virtualinvoke $r1.<java.io.FileReader: void close()>();

     label24:
        if $r3 == null goto label26;

     label25:
        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

     label26:
        throw $r9;

     label27:
        $r10 := @caughtexception;

        r17 = (java.io.IOException) $r10;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

        goto label24;

     label28:
        $r11 := @caughtexception;

        r17 = (java.io.IOException) $r11;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

        goto label26;

     label29:
        $r12 := @caughtexception;

        r17 = (java.io.IOException) $r12;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

        goto label07;

     label30:
        $r13 := @caughtexception;

        r17 = (java.io.IOException) $r13;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

     label31:
        return $r4;

     label32:
        $r9 := @caughtexception;

        $r3 = $r2;

        goto label22;

     label33:
        $r5 := @caughtexception;

        $r3 = $r2;

        goto label11;

     label34:
        varReplacer1268 = null;

        return varReplacer1268;

        catch java.io.IOException from label03 to label04 with label10;
        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.io.IOException from label04 to label05 with label33;
        catch java.lang.Throwable from label04 to label05 with label32;
        catch java.io.IOException from label06 to label07 with label29;
        catch java.io.IOException from label08 to label09 with label30;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label13 to label14 with label21;
        catch java.io.IOException from label15 to label16 with label20;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label23 to label24 with label27;
        catch java.io.IOException from label25 to label26 with label28;
    }

    private static int reflectMetrics(java.lang.Object, java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        java.lang.Class $r3;
        java.lang.reflect.Field $r4;
        int $i0, varReplacer1146, varReplacer1147;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.String;

        $r3 = class "Landroid/util/DisplayMetrics;";

     label1:
        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>($r1);

        varReplacer1146 = 1;

        virtualinvoke $r4.<java.lang.reflect.Field: void setAccessible(boolean)>(varReplacer1146);

        $i0 = virtualinvoke $r4.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r0);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        varReplacer1147 = -1;

        return varReplacer1147;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean setCheckDevice(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.umeng.mobclickcpp.DeviceConfig: boolean CheckDevice> = $z0;

        return 1;
    }

    public static java.util.Date toTime(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Exception $r1;
        java.text.SimpleDateFormat $r2;
        java.util.Date $r3;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.text.SimpleDateFormat;

     label1:
        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd HH:mm:ss");

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
