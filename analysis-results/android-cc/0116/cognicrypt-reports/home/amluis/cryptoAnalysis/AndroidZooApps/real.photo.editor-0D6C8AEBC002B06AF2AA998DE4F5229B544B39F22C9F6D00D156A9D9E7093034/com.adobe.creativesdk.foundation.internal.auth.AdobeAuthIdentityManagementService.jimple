public class com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService extends java.lang.Object
{
    private static final java.lang.String AdobeAuthIMSAgeVerificationError;
    private static final java.lang.String AdobeAuthIMSEmailVerificationError;
    private static final java.lang.String AdobeAuthIMSTermsOfUseError;
    private static final java.lang.String AdobeAuthKeychainEntitlements;
    private static final int DEFAULT_ACCESS_TOKEN_EXPIRY;
    private static final int DEFAULT_DEVICE_TOKEN_EXPIRY;
    private static final int DEFAULT_REFRESH_TOKEN_EXPIRY;
    private static final java.lang.String[] IMS_CREATIVE_SDK_SCOPES;
    public static final java.lang.String IMS_KEY_ACCESS_TOKEN;
    private static final java.lang.String IMS_KEY_ADOBE_ID;
    private static final java.lang.String IMS_KEY_CLIENT_ID;
    private static final java.lang.String IMS_KEY_CLIENT_SECRET;
    private static final java.lang.String IMS_KEY_CODE;
    private static final java.lang.String IMS_KEY_CONTINUATION_TOKEN;
    private static final java.lang.String IMS_KEY_DEVICE;
    private static final java.lang.String IMS_KEY_DEVICE_ID;
    private static final java.lang.String IMS_KEY_DEVICE_TOKEN;
    private static final java.lang.String IMS_KEY_DISPLAY_NAME;
    private static final java.lang.String IMS_KEY_EMAIL;
    private static final java.lang.String IMS_KEY_EMAIL_VERIFIED;
    private static final java.lang.String IMS_KEY_ERROR;
    private static final java.lang.String IMS_KEY_EXPIRES_AT;
    private static final java.lang.String IMS_KEY_EXPIRES_IN;
    private static final java.lang.String IMS_KEY_FIRST_NAME;
    private static final java.lang.String IMS_KEY_GRANT_TYPE;
    private static final java.lang.String IMS_KEY_JUMP;
    private static final java.lang.String IMS_KEY_LAST_NAME;
    private static final java.lang.String IMS_KEY_REDIRECT_URI;
    public static final java.lang.String IMS_KEY_REFRESH_TOKEN;
    private static final java.lang.String IMS_KEY_SCOPE;
    private static final java.lang.String IMS_KEY_TOKEN;
    private static final java.lang.String T;
    private static volatile com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService sharedInstance;
    private volatile java.lang.String accessToken;
    private volatile java.util.Date accessTokenExpirationTime;
    private volatile java.lang.String adobeID;
    private final com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain;
    private com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher cipher;
    private volatile java.lang.String clientID;
    private volatile java.lang.String clientScope;
    private volatile java.lang.String clientSecret;
    private volatile java.lang.String clientState;
    private volatile java.lang.String continuationToken;
    private volatile java.lang.String deviceID;
    private volatile java.lang.String deviceName;
    private volatile java.lang.String deviceToken;
    private volatile java.util.Date deviceTokenExpirationTime;
    private volatile java.lang.String displayName;
    private volatile java.lang.String emailAddress;
    private volatile java.lang.String emailVerified;
    private volatile java.util.Set entitlements;
    private com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment environment;
    private volatile java.lang.String firstName;
    private com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType grantType;
    private volatile java.lang.String imsHost;
    private volatile java.lang.String isEnterPrise;
    private volatile java.lang.String lastName;
    private com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpService networkService;
    private volatile java.lang.String refreshToken;
    private volatile java.util.Date refreshTokenExpirationTime;
    private volatile java.lang.String sharedDeviceToken;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        null_type varReplacer3783;

        nop;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "creative_sdk";

        $r0[1] = "AdobeID";

        <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String[] IMS_CREATIVE_SDK_SCOPES> = $r0;

        varReplacer3783 = null;

        <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService sharedInstance> = varReplacer3783;

        return;
    }

    private void <init>()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr $r1;
        byte[] $r2;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment $r4;
        null_type varReplacer3827;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr getInstance()>();

        $r2 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAuthAESKeyMgr: byte[] getFoundationAuthAESKey()>();

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setCipherKey(byte[])>($r2);

        $r3 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain;

        specialinvoke $r3.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService)>($r0);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain> = $r3;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void setSharedKeychain(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain)>($r3);

        $r4 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment AdobeAuthIMSEnvironmentProductionUS>;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setEnvironment(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment)>($r4);

        varReplacer3827 = null;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAdditionalClientScopes(java.lang.String[])>(varReplacer3827);

        return;
    }

    static void access$000(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService, java.lang.String, com.adobe.creativesdk.foundation.IAdobeGenericCompletionCallback, com.adobe.creativesdk.foundation.IAdobeGenericErrorCallback)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.IAdobeGenericCompletionCallback $r2;
        com.adobe.creativesdk.foundation.IAdobeGenericErrorCallback $r3;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.adobe.creativesdk.foundation.IAdobeGenericCompletionCallback;

        $r3 := @parameter3: com.adobe.creativesdk.foundation.IAdobeGenericErrorCallback;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void profileFromServiceWithAccessToken(java.lang.String,com.adobe.creativesdk.foundation.IAdobeGenericCompletionCallback,com.adobe.creativesdk.foundation.IAdobeGenericErrorCallback)>($r1, $r2, $r3);

        return;
    }

    static void access$100(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService, org.json.JSONException, com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        org.json.JSONException $r1;
        com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient $r2;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter1: org.json.JSONException;

        $r2 := @parameter2: com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void onJSONException(org.json.JSONException,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)>($r1, $r2);

        return;
    }

    static org.json.JSONObject access$200(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService, com.adobe.creativesdk.foundation.network.AdobeNetworkException)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.network.AdobeNetworkException $r1;
        org.json.JSONObject $r2;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter1: com.adobe.creativesdk.foundation.network.AdobeNetworkException;

        $r2 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: org.json.JSONObject getUserInteractionDataFor(com.adobe.creativesdk.foundation.network.AdobeNetworkException)>($r1);

        return $r2;
    }

    static com.adobe.creativesdk.foundation.auth.AdobeAuthException access$300(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService, org.json.JSONObject)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        org.json.JSONObject $r1;
        com.adobe.creativesdk.foundation.auth.AdobeAuthException $r2;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter1: org.json.JSONObject;

        $r2 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.auth.AdobeAuthException createAuthErrorForContinuableEvent(org.json.JSONObject)>($r1);

        return $r2;
    }

    static com.adobe.creativesdk.foundation.auth.AdobeAuthException access$400(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService, com.adobe.creativesdk.foundation.network.AdobeNetworkException)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.network.AdobeNetworkException $r1;
        com.adobe.creativesdk.foundation.auth.AdobeAuthException $r2;

        nop;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter1: com.adobe.creativesdk.foundation.network.AdobeNetworkException;

        $r2 = specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.auth.AdobeAuthException createAuthError(com.adobe.creativesdk.foundation.network.AdobeNetworkException)>($r1);

        return $r2;
    }

    static java.lang.String access$500(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken>;

        return r1;
    }

    static void access$600(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService, java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setDeviceTokenExpiration(java.lang.String)>($r1);

        return;
    }

    static void access$700(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService, com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType, java.util.Date)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType $r1;
        java.util.Date $r2;

        $r0 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter1: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType;

        $r2 := @parameter2: java.util.Date;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setTokenExpirationTime(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType,java.util.Date)>($r1, $r2);

        return;
    }

    private com.adobe.creativesdk.foundation.auth.AdobeAuthException createAuthError(com.adobe.creativesdk.foundation.network.AdobeNetworkException)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.network.AdobeNetworkException $r1;
        com.adobe.creativesdk.foundation.network.AdobeNetworkException$AdobeNetworkErrorCode $r2, $r3;
        com.adobe.creativesdk.foundation.auth.AdobeAuthException $r4;
        com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode $r5;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.network.AdobeNetworkException;

        $r2 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.network.AdobeNetworkException: com.adobe.creativesdk.foundation.network.AdobeNetworkException$AdobeNetworkErrorCode getErrorCode()>();

        $r3 = <com.adobe.creativesdk.foundation.network.AdobeNetworkException$AdobeNetworkErrorCode: com.adobe.creativesdk.foundation.network.AdobeNetworkException$AdobeNetworkErrorCode AdobeNetworkErrorOffline>;

        if $r2 != $r3 goto label1;

        $r4 = new com.adobe.creativesdk.foundation.auth.AdobeAuthException;

        $r5 = <com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode: com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode ADOBE_AUTH_ERROR_CODE_OFFLINE>;

        specialinvoke $r4.<com.adobe.creativesdk.foundation.auth.AdobeAuthException: void <init>(com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode)>($r5);

        return $r4;

     label1:
        $r4 = new com.adobe.creativesdk.foundation.auth.AdobeAuthException;

        $r5 = <com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode: com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode ADOBE_AUTH_ERROR_CODE_NETWORK_ERROR>;

        specialinvoke $r4.<com.adobe.creativesdk.foundation.auth.AdobeAuthException: void <init>(com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode)>($r5);

        return $r4;
    }

    private com.adobe.creativesdk.foundation.auth.AdobeAuthException createAuthErrorForContinuableEvent(org.json.JSONObject)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        org.json.JSONObject $r1;
        com.adobe.creativesdk.foundation.auth.AdobeAuthException $r2;
        java.lang.String $r3;
        byte $b0;
        int $i1;
        boolean $z0;
        com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode $r4;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: org.json.JSONObject;

        $r2 = null;

        if $r1 != null goto label01;

        return null;

     label01:
        $r3 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("error");

        if $r3 == null goto label10;

        $b0 = -1;

        $i1 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        lookupswitch($i1)
        {
            case -1766661833: goto label05;
            case -171684462: goto label04;
            case 522321180: goto label06;
            default: goto label02;
        };

     label02:
        lookupswitch($b0)
        {
            case 0: goto label07;
            case 1: goto label08;
            case 2: goto label09;
            default: goto label03;
        };

     label03:
        return $r2;

     label04:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ride_AdobeID_acct_evs");

        if $z0 == 0 goto label02;

        $b0 = 0;

        goto label02;

     label05:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ride_AdobeID_acct_terms");

        if $z0 == 0 goto label02;

        $b0 = 1;

        goto label02;

     label06:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("ride_AdobeID_acct_actreq");

        if $z0 == 0 goto label02;

        $b0 = 2;

        goto label02;

     label07:
        $r2 = new com.adobe.creativesdk.foundation.auth.AdobeAuthException;

        $r4 = <com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode: com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode ADOBE_AUTH_ERROR_CODE_EMAIL_VERIFICATION>;

        specialinvoke $r2.<com.adobe.creativesdk.foundation.auth.AdobeAuthException: void <init>(com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode)>($r4);

        goto label03;

     label08:
        $r2 = new com.adobe.creativesdk.foundation.auth.AdobeAuthException;

        $r4 = <com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode: com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode ADOBE_AUTH_ERROR_CODE_UPDATED_TOU>;

        specialinvoke $r2.<com.adobe.creativesdk.foundation.auth.AdobeAuthException: void <init>(com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode)>($r4);

        goto label03;

     label09:
        $r2 = new com.adobe.creativesdk.foundation.auth.AdobeAuthException;

        $r4 = <com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode: com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode ADOBE_AUTH_ERROR_CODE_AGE_VERIFICATION>;

        specialinvoke $r2.<com.adobe.creativesdk.foundation.auth.AdobeAuthException: void <init>(com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode)>($r4);

        goto label03;

     label10:
        return null;
    }

    public static com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService getSharedInstance()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.Throwable $r1;

        nop;

        $r0 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService sharedInstance>;

        if $r0 != null goto label3;

        entermonitor class "Lcom/adobe/creativesdk/foundation/internal/auth/AdobeAuthIdentityManagementService;";

     label1:
        $r0 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService sharedInstance>;

        if $r0 != null goto label2;

        $r0 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void <init>()>();

        <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService sharedInstance> = $r0;

     label2:
        exitmonitor class "Lcom/adobe/creativesdk/foundation/internal/auth/AdobeAuthIdentityManagementService;";

     label3:
        $r0 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService sharedInstance>;

        return $r0;

     label4:
        $r1 := @caughtexception;

     label5:
        exitmonitor class "Lcom/adobe/creativesdk/foundation/internal/auth/AdobeAuthIdentityManagementService;";

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private org.json.JSONObject getUserInteractionDataFor(com.adobe.creativesdk.foundation.network.AdobeNetworkException)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.network.AdobeNetworkException $r1;
        org.json.JSONObject $r2, $r3;
        java.util.HashMap $r4;
        java.lang.String $r5, $r8;
        java.lang.Object $r6;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpResponse $r7;
        boolean $z0;
        org.json.JSONException $r9;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.network.AdobeNetworkException;

        $r3 = null;

        $r4 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.network.AdobeNetworkException: java.util.HashMap getData()>();

        $r5 = staticinvoke <com.adobe.creativesdk.foundation.network.AdobeNetworkException: java.lang.String getKeyForResponse()>();

        $r6 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpResponse) $r6;

        $r5 = virtualinvoke $r7.<com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpResponse: java.lang.String getDataString()>();

        if $r5 == null goto label15;

        $r2 = new org.json.JSONObject;

     label01:
        specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r5);

     label02:
        $r5 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("error");

        $r8 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>("jump");

     label03:
        if $r5 == null goto label10;

        if $r8 == null goto label10;

        if $r5 == null goto label14;

     label04:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("ride_AdobeID_acct_evs");

     label05:
        if $z0 != 0 goto label14;

     label06:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("ride_AdobeID_acct_terms");

     label07:
        if $z0 != 0 goto label14;

     label08:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("ride_AdobeID_acct_actreq");

     label09:
        if $z0 != 0 goto label14;

     label10:
        return null;

     label11:
        $r9 := @caughtexception;

     label12:
        virtualinvoke $r9.<org.json.JSONException: void printStackTrace()>();

        return $r3;

     label13:
        $r9 := @caughtexception;

        $r3 = $r2;

        goto label12;

     label14:
        return $r2;

     label15:
        return null;

        catch org.json.JSONException from label01 to label02 with label11;
        catch org.json.JSONException from label02 to label03 with label13;
        catch org.json.JSONException from label04 to label05 with label13;
        catch org.json.JSONException from label06 to label07 with label13;
        catch org.json.JSONException from label08 to label09 with label13;
    }

    private void makeHTTPOperationForURL(java.net.URL, com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod, java.util.Map, java.lang.String, com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.net.URL $r1;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod $r2, $r8;
        java.util.Map $r3;
        java.lang.String $r4, $r10, varReplacer4008, varReplacer4009;
        com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler $r5;
        java.lang.Exception $r6;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequest $r7;
        boolean $z0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r9;
        android.os.Handler $r11;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpService $r12;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkRequestPriority $r13;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r14;
        java.lang.Class $r15;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod;

        $r3 := @parameter2: java.util.Map;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler;

        $r7 = new com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequest;

        specialinvoke $r7.<com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequest: void <init>(java.net.URL,com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod,java.util.Map)>($r1, $r2, $r3);

        $r8 = <com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod AdobeNetworkHttpRequestMethodGET>;

        if $r2 != $r8 goto label1;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r9 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r10 = virtualinvoke $r9.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getAdobeID()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID> = $r10;

        virtualinvoke $r7.<com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequest: void setQueryParams(java.util.Map)>($r3);

     label1:
        $r8 = <com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod AdobeNetworkHttpRequestMethodPOST>;

        if $r2 != $r8 goto label2;

        virtualinvoke $r7.<com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequest: void setBody(java.util.Map)>($r3);

     label2:
        varReplacer4008 = "Content-Type";

        varReplacer4009 = "application/x-www-form-urlencoded";

        virtualinvoke $r7.<com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequest: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer4008, varReplacer4009);

        $r11 = new android.os.Handler;

     label3:
        specialinvoke $r11.<android.os.Handler: void <init>()>();

     label4:
        $r12 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpService networkService>;

        $r13 = <com.adobe.creativesdk.foundation.internal.net.AdobeNetworkRequestPriority: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkRequestPriority NORMAL>;

        virtualinvoke $r12.<com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpService: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpTaskHandle getResponseForDataRequest(com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequest,com.adobe.creativesdk.foundation.internal.net.AdobeNetworkRequestPriority,com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler,android.os.Handler)>($r7, $r13, $r5, $r11);

        return;

     label5:
        $r6 := @caughtexception;

        $r11 = null;

        $r14 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r15 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r15.<java.lang.Class: java.lang.String getSimpleName()>();

        $r10 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r14, $r4, $r10, $r6);

        goto label4;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void onJSONException(org.json.JSONException, com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        org.json.JSONException $r1;
        com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient $r2;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r3;
        com.adobe.creativesdk.foundation.auth.AdobeAuthException $r4;
        com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode $r5;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: org.json.JSONException;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient;

        $r3 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r3, "AuthIMS", "Error parsing JSON", $r1);

        $r4 = new com.adobe.creativesdk.foundation.auth.AdobeAuthException;

        $r5 = <com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode: com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode ADOBE_AUTH_ERROR_CODE_UNKNOWN_ERROR>;

        specialinvoke $r4.<com.adobe.creativesdk.foundation.auth.AdobeAuthException: void <init>(com.adobe.creativesdk.foundation.auth.AdobeAuthErrorCode)>($r5);

        interfaceinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient: void onError(com.adobe.creativesdk.foundation.auth.AdobeAuthException)>($r4);

        return;
    }

    private void profileFromServiceWithAccessToken(java.lang.String, com.adobe.creativesdk.foundation.IAdobeGenericCompletionCallback, com.adobe.creativesdk.foundation.IAdobeGenericErrorCallback)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, $r11, $r12;
        com.adobe.creativesdk.foundation.IAdobeGenericCompletionCallback $r2;
        com.adobe.creativesdk.foundation.IAdobeGenericErrorCallback $r3;
        java.lang.Exception $r4;
        com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession $r5;
        android.os.Handler $r6;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$11 $r7;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$12 $r8;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r9;
        java.lang.Class $r10;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.IAdobeGenericCompletionCallback;

        $r3 := @parameter2: com.adobe.creativesdk.foundation.IAdobeGenericErrorCallback;

        $r5 = staticinvoke <com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession getSharedSession()>();

        virtualinvoke $r5.<com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: void refreshEndpoint()>();

        $r6 = new android.os.Handler;

     label1:
        specialinvoke $r6.<android.os.Handler: void <init>()>();

     label2:
        $r7 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$11;

        specialinvoke $r7.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$11: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.IAdobeGenericCompletionCallback)>($r0, $r2);

        $r8 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$12;

        specialinvoke $r8.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$12: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.IAdobeGenericErrorCallback)>($r0, $r3);

        virtualinvoke $r5.<com.adobe.creativesdk.foundation.adobeinternal.entitlement.AdobeEntitlementSession: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpTaskHandle getUserProfileForToken(java.lang.String,com.adobe.creativesdk.foundation.IAdobeGenericCompletionCallback,com.adobe.creativesdk.foundation.IAdobeGenericErrorCallback,android.os.Handler)>($r1, $r7, $r8, $r6);

        return;

     label3:
        $r4 := @caughtexception;

        $r6 = null;

        $r9 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r10 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r9, $r11, $r12, $r4);

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void removeAnySharedSSOAcount()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder $r2;
        android.content.Context $r3;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceID()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = staticinvoke <com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder: com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder getSharedApplicationContextHolder()>();

        $r3 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.common.AdobeCommonApplicationContextHolder: android.content.Context getApplicationContext()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCSDKAdobeIdAuthenticatorHelper: void removeCurrentSharedAdobeIDFromAccountManager(android.content.Context)>($r3);

        return;
    }

    private void resetKeys()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level WARN>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r1, "AuthIMS", "resetKeys");

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void resetTokens()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String accessToken> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String sharedDeviceToken> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String continuationToken> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date accessTokenExpirationTime> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date deviceTokenExpirationTime> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date refreshTokenExpirationTime> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String displayName> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String firstName> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String lastName> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Set entitlements> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailAddress> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailVerified> = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String isEnterPrise> = null;

        return;
    }

    private void setAccessTokenExpiration(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType AccessToken>;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setTokenExpiration(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType,java.lang.String,int)>($r2, $r1, 86400);

        return;
    }

    private void setDeviceTokenExpiration(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType $r2;
        int varReplacer3978;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType DeviceToken>;

        varReplacer3978 = 15768000;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setTokenExpiration(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType,java.lang.String,int)>($r2, $r1, varReplacer3978);

        return;
    }

    private void setDeviceTokenExpirationTime(java.util.Date)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Date $r1;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer4094, varReplacer4095, varReplacer4096;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.util.Date;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date deviceTokenExpirationTime> = $r1;

        varReplacer4094 = "DeviceTokenExpiration";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>(varReplacer4094, $r1);

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer4096 = "Setting DeviceTokenExpirationTime : ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4096);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4095 = "AuthIMS";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r2, varReplacer4095, $r4);

        return;
    }

    private void setEntitlements(java.util.Set)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Set $r1;
        java.lang.StringBuilder $r2, $r6;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String $r5;
        int $i0;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.util.Set;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Set entitlements> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        goto label1;

     label2:
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i0 = $i0 + -1;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("Entitlements", $r5);

        return;
    }

    private void setRefreshTokenExpiration(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType RefreshToken>;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setTokenExpiration(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType,java.lang.String,int)>($r2, $r1, 1209600);

        return;
    }

    private void setRefreshTokenExpirationTime(java.util.Date)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Date $r1;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer4100, varReplacer4101, varReplacer4102;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.util.Date;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date refreshTokenExpirationTime> = $r1;

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer4102 = "Setting Refresh Token Expiration Time ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4102);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4100 = "AuthIMS";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r2, varReplacer4100, $r4);

        varReplacer4101 = "RefreshTokenExpiration";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>(varReplacer4101, $r1);

        return;
    }

    private void setTokenExpiration(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType, java.lang.String, int)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType $r1;
        java.lang.String $r2;
        int $i0, varReplacer4053, varReplacer4054;
        java.util.Calendar $r3;
        java.util.Date $r4;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$8 $r5;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        varReplacer4053 = 13;

        varReplacer4054 = 15768000;

        virtualinvoke $r3.<java.util.Calendar: void add(int,int)>(varReplacer4053, varReplacer4054);

        $r4 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setTokenExpirationTime(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType,java.util.Date)>($r1, $r4);

        $r5 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$8;

        specialinvoke $r5.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$8: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType)>($r0, $r1);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void getTokenExpirationTime(java.lang.String,com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)>($r2, $r5);

        return;
    }

    private void setTokenExpirationTime(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType, java.util.Date)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType $r1;
        java.util.Date $r2;
        int[] $r3;
        int $i0;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, varReplacer4055, varReplacer4056;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType;

        $r2 := @parameter1: java.util.Date;

        $r3 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$13: int[] $SwitchMap$com$adobe$creativesdk$foundation$internal$auth$AdobeAuthIdentityManagementService$TokenType>;

        $i0 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$TokenType: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        $r4 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer4055 = "unknown token type ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4055);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4056 = "AuthIMS";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r4, varReplacer4056, $r6);

        return;

     label2:
        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setDeviceTokenExpirationTime(java.util.Date)>($r2);

        return;

     label3:
        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAccessTokenExpirationTime(java.util.Date)>($r2);

        return;

     label4:
        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setRefreshTokenExpirationTime(java.util.Date)>($r2);

        return;
    }

    private void updateEntitlements(java.util.Set)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Set $r1;
        java.lang.StringBuilder $r2, $r6;
        boolean $z0;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        java.lang.String $r5;
        int $i0;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.util.Set;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Set entitlements> = $r1;

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("Entitlements", "");

        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        goto label3;

     label4:
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i0 = $i0 + -1;

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("Entitlements", $r5);

        return;
    }

    void addToKeychain(java.lang.String, java.lang.Object)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r3;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        if $r1 == null goto label1;

        if $r2 == null goto label1;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        virtualinvoke $r3.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void updateOrAddKey(java.lang.String,java.lang.Object)>($r1, $r2);

        return;

     label1:
        if $r1 == null goto label2;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        virtualinvoke $r3.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>($r1);

     label2:
        return;
    }

    public void clearContinuableEventInfo()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>("ContinuableEventJumpURL");

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void deleteKey(java.lang.String)>("ContinuableEventErrorCode");

        return;
    }

    void fetchEntitlements()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void fetchEntitlements(com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)>(null);

        return;
    }

    public void fetchEntitlements(com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler;

        return;
    }

    public java.lang.String getAccessToken()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer3784, varReplacer3785, varReplacer3786, varReplacer3787;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;
        java.util.Date $r3, $r4;
        long $l0, $l1;
        byte $b2;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.StringBuilder $r6;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String accessToken>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r3 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Date getAccessTokenExpiration()>();

        if $r3 == null goto label2;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $l1 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label2;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getAccessToken()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String accessToken> = $r1;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer3784 = "Getting Access Token; (inside if)ExpirationDate : ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3784);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3786 = "AuthIMS";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r5, varReplacer3786, $r1);

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String accessToken>;

        return $r1;

     label2:
        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer3787 = "Getting Access Token; (inside else)ExpirationDate : ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3787);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3785 = "AuthIMS";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r5, varReplacer3785, $r1);

        goto label1;
    }

    public java.util.Date getAccessTokenExpirationTime()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Date $r1, $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;
        long $l0;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date accessTokenExpirationTime>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Date getAccessTokenExpiration()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date accessTokenExpirationTime> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date accessTokenExpirationTime>;

        if $r1 == null goto label2;

        $r1 = new java.util.Date;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date accessTokenExpirationTime>;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r4 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting the access token expiration time : ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r4, "AuthIMS", $r6);

        return $r1;

     label2:
        return null;
    }

    protected void getAccessTokenWithAuthCode(java.lang.String, com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, $r5;
        com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback $r2;
        java.util.HashMap $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$3 $r4;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType $r6, $r7;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r8;
        java.lang.StringBuilder $r9;
        java.util.Date $r10;
        java.net.URL $r11;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod $r12;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback;

        $r5 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        if $r5 != null goto label1;

        interfaceinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback: void onInvalidClientId()>();

        return;

     label1:
        $r5 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientSecret()>();

        if $r5 != null goto label2;

        interfaceinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback: void onInvalidClientSecret()>();

        return;

     label2:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("grant_type", "authorization_code");

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("code", $r1);

        $r6 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType grantType>;

        $r7 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType AdobeAuthIMSGrantTypeDevice>;

        if $r6 != $r7 goto label3;

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceID()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("device_id", $r1);

     label3:
        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("client_id", $r1);

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientSecret()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("client_secret", $r1);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("redirect_uri", "signin://complete");

        $r8 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inside getAccessTokenWithAuthCode() ");

        $r10 = new java.util.Date;

        specialinvoke $r10.<java.util.Date: void <init>()>();

        $r1 = virtualinvoke $r10.<java.util.Date: java.lang.String toString()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r8, "AuthIMS", $r1);

        $r11 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.net.URL getTokenURL()>();

        $r12 = <com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod AdobeNetworkHttpRequestMethodPOST>;

        $r4 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$3;

        specialinvoke $r4.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$3: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)>($r0, $r2);

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void makeHTTPOperationForURL(java.net.URL,com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod,java.util.Map,java.lang.String,com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)>($r11, $r12, $r3, "application/x-www-form-urlencoded", $r4);

        return;
    }

    public void getAccessTokenWithDeviceToken(java.lang.String, com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, $r5, varReplacer3979, varReplacer3980, varReplacer3981, varReplacer3982, varReplacer3983, varReplacer3984, varReplacer3985, varReplacer3986, varReplacer3987, varReplacer3988, varReplacer3989, varReplacer3990;
        com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback $r2;
        java.util.HashMap $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$4 $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r6;
        java.lang.StringBuilder $r7;
        java.util.Date $r8;
        java.net.URL $r9;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod $r10;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback;

        $r5 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceID()>();

        if $r5 != null goto label1;

        interfaceinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback: void onInvalidDeviceId()>();

        return;

     label1:
        $r5 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        if $r5 != null goto label2;

        interfaceinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback: void onInvalidClientId()>();

        return;

     label2:
        $r5 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientSecret()>();

        if $r5 != null goto label3;

        interfaceinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback: void onInvalidClientSecret()>();

        return;

     label3:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        varReplacer3980 = "grant_type";

        varReplacer3981 = "device";

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3980, varReplacer3981);

        varReplacer3982 = "device_token";

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3982, $r1);

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceID()>();

        varReplacer3986 = "device_id";

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3986, $r1);

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        varReplacer3979 = "client_id";

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3979, $r1);

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientSecret()>();

        varReplacer3989 = "client_secret";

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3989, $r1);

        varReplacer3987 = "redirect_uri";

        varReplacer3988 = "signin://complete";

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3987, varReplacer3988);

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientScope>;

        varReplacer3983 = "scope";

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3983, $r1);

        $r6 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer3984 = "Inside getAccessTokenWithDeviceToken() ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3984);

        $r8 = new java.util.Date;

        specialinvoke $r8.<java.util.Date: void <init>()>();

        $r1 = virtualinvoke $r8.<java.util.Date: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3985 = "AuthIMS";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r6, varReplacer3985, $r1);

        $r9 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.net.URL getTokenURL()>();

        $r10 = <com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod AdobeNetworkHttpRequestMethodPOST>;

        $r4 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$4;

        specialinvoke $r4.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$4: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)>($r0, $r2);

        varReplacer3990 = "application/x-www-form-urlencoded";

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void makeHTTPOperationForURL(java.net.URL,com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod,java.util.Map,java.lang.String,com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)>($r9, $r10, $r3, varReplacer3990, $r4);

        return;
    }

    public java.lang.String getAdobeID()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        boolean $z0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getAdobeID()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID>;

        return $r1;
    }

    java.net.URL getAuthURL()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.Throwable $r1;
        java.net.URL $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer5003, varReplacer5004;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        null_type varReplacer5002;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r2 = new java.net.URL;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label2:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost>;

     label3:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getLoginAPI()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4);

     label4:
        return $r2;

     label5:
        $r1 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        varReplacer5003 = "AuthIMS";

        varReplacer5004 = "Invalid auth URL";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, varReplacer5003, varReplacer5004, $r1);

        varReplacer5002 = null;

        return varReplacer5002;

        catch java.net.MalformedURLException from label1 to label2 with label5;
        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    public com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher getCipher()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher r1;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher cipher>;

        return r1;
    }

    public java.lang.String getClientID()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer4002;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientID>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        varReplacer4002 = "ClientId";

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer4002);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientID> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientID>;

        return $r1;
    }

    public java.lang.String getClientSecret()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer4003;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientSecret>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        varReplacer4003 = "ClientSecret";

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer4003);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientSecret> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientSecret>;

        return $r1;
    }

    public java.lang.String getClientState()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer5005;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientState>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        varReplacer5005 = "ClientState";

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer5005);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientState> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientState>;

        return $r1;
    }

    public java.lang.String getContinuationToken()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String continuationToken>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getContinuationToken()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String continuationToken> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String continuationToken>;

        return $r1;
    }

    public java.lang.String getContiuableEventErrorCode()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getContiuableEventErrorCode()>();

        return $r1;
    }

    public java.lang.String getContiuableEventJumpURL()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getContiuableEventJumpURL()>();

        return $r1;
    }

    java.lang.String getCurrentLocale()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Locale $r1;
        java.lang.String $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r2 = virtualinvoke $r1.<java.util.Locale: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String getDeviceID()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer4001;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceID>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        varReplacer4001 = "DeviceId";

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer4001);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceID> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceID>;

        return $r1;
    }

    public java.lang.String getDeviceName()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer5006;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceName>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        varReplacer5006 = "DeviceName";

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String findKey(java.lang.String)>(varReplacer5006);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceName> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceName>;

        return $r1;
    }

    public java.lang.String getDeviceToken()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;
        java.util.Date $r3, $r4;
        long $l0, $l1;
        byte $b2;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r3 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Date getDeviceTokenExpiration()>();

        if $r3 == null goto label2;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $l1 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label2;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getDeviceToken()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken> = $r1;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting Device Token; (inside if)ExpirationDate : ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r5, "AuthIMS", $r1);

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken>;

        return $r1;

     label2:
        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting Device Token; (inside else)ExpirationDate : ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r5, "AuthIMS", $r1);

        goto label1;
    }

    public java.util.Date getDeviceTokenExpirationTime()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Date $r1, $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;
        long $l0;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date deviceTokenExpirationTime>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Date getDeviceTokenExpiration()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date deviceTokenExpirationTime> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date deviceTokenExpirationTime>;

        if $r1 == null goto label2;

        $r1 = new java.util.Date;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date deviceTokenExpirationTime>;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r4 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting DeviceTokenExpirationTime : ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r4, "AuthIMS", $r6);

        return $r1;

     label2:
        return null;
    }

    java.net.URL getDeviceURL()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.Throwable $r1;
        java.net.URL $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r2 = new java.net.URL;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label2:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost>;

     label3:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ims/login/v1/device");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4);

     label4:
        return $r2;

     label5:
        $r1 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "AuthIMS", "Invalid device url", $r1);

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label5;
        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    public java.lang.String getDisplayName()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String displayName>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getDisplayName()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String displayName> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String displayName>;

        return $r1;
    }

    public java.lang.String getEmailAddress()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailAddress>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getEmailAddress()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailAddress> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailAddress>;

        return $r1;
    }

    public java.lang.String getEmailVerified()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailVerified>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getEmailVerified()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailVerified> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailVerified>;

        return $r1;
    }

    public java.util.Set getEntitlements()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Set $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Set entitlements>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Set getEntitlements()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Set entitlements> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Set entitlements>;

        return $r1;
    }

    public com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment getEnvironment()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment r1;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment environment>;

        return r1;
    }

    public java.lang.String getFirstName()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String firstName>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getFirstName()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String firstName> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String firstName>;

        return $r1;
    }

    public java.lang.String getImsHost()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost>;

        return r1;
    }

    public java.lang.String getIsEnterPrise()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String isEnterPrise>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getEnterpriseInfo()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String isEnterPrise> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String isEnterPrise>;

        return $r1;
    }

    java.lang.String getLastName()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String lastName>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getLastName()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String lastName> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String lastName>;

        return $r1;
    }

    java.lang.String getLoginAPI()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, varReplacer5007, varReplacer5008;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        varReplacer5007 = "/ims/authorize/";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5007);

        $r2 = "v1";

        varReplacer5008 = "v1";

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5008);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    java.lang.String getLoginAPIVersion()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String varReplacer5009;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        varReplacer5009 = "v1";

        return varReplacer5009;
    }

    java.lang.String getLogoutAPI()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/ims/logout/");

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getLogoutAPIVersion()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    java.lang.String getLogoutAPIVersion()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        return "v1";
    }

    public java.lang.String getRefreshToken()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;
        java.util.Date $r3, $r4;
        long $l0, $l1;
        byte $b2;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.StringBuilder $r6;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r3 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Date getRefreshTokenExpiration()>();

        if $r3 == null goto label2;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $l1 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $l0 = $l0 - $l1;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label2;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.lang.String getRefreshToken()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken> = $r1;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting Refresh Token; (inside if)ExpirationDate : ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r5, "AuthIMS", $r1);

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken>;

        return $r1;

     label2:
        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting Refresh Token; (inside else)ExpirationDate : ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r5, "AuthIMS", $r1);

        goto label1;
    }

    public java.util.Date getRefreshTokenExpirationTime()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Date $r1, $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;
        long $l0;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date refreshTokenExpirationTime>;

        if $r1 != null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        $r1 = virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: java.util.Date getRefreshTokenExpiration()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date refreshTokenExpirationTime> = $r1;

     label1:
        $r1 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date refreshTokenExpirationTime>;

        if $r1 == null goto label2;

        $r1 = new java.util.Date;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date refreshTokenExpirationTime>;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        $r4 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting Refresh Token Expiration Time : ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r4, "AuthIMS", $r6);

        return $r1;

     label2:
        return null;
    }

    public java.net.URL getSignInURL()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.net.URL $r1;
        java.lang.String $r2, $r6, $r7, varReplacer4982, varReplacer4983, varReplacer4984, varReplacer4985, varReplacer4986, varReplacer4987, varReplacer4988, varReplacer4989, varReplacer4990, varReplacer4991, varReplacer4992, varReplacer4993, varReplacer4994, varReplacer4995, varReplacer4996, varReplacer4998, varReplacer4999, varReplacer5000, varReplacer5001;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType $r3, $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;
        java.lang.Throwable $r8, $r10, $r11;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r9;
        null_type varReplacer4997;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.net.URL getAuthURL()>();

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String toString()>();

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType grantType>;

        $r4 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType AdobeAuthIMSGrantTypeAuthorization>;

        if $r3 != $r4 goto label08;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4995 = "?redirect_uri=signin%3A%2F%2Fcomplete&scope=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4995);

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientScope>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4990 = "&force_marketing_permission=true&idp_flow=login&client_id=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4990);

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4983 = "&dc=false&locale=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4983);

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getCurrentLocale()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r6 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientState()>();

        if $r6 == null goto label05;

        $r6 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientState()>();

        varReplacer4999 = "";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer4999);

        if $z0 != 0 goto label05;

        $r6 = null;

     label02:
        $r7 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientState()>();

        varReplacer4996 = "UTF-8";

        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r7, varReplacer4996);

     label03:
        $r6 = $r7;

     label04:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4994 = "&state=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4994);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r1 = new java.net.URL;

     label06:
        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2);

     label07:
        return $r1;

     label08:
        $r6 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceID()>();

        varReplacer4987 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, varReplacer4987);

     label09:
        $r7 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceName()>();

        varReplacer4993 = "UTF-8";

        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r7, varReplacer4993);

     label10:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4984 = "?redirect_uri=signin%3A%2F%2Fcomplete&scope=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4984);

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientScope>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4985 = "&force_marketing_permission=true&idp_flow=login&response_type=device&device_id=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4985);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer4986 = "&device_name=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4986);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer4998 = "&client_id=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4998);

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4982 = "&dc=false&locale=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4982);

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getCurrentLocale()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label11:
        $r8 := @caughtexception;

        $r9 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        varReplacer4991 = "AuthIMS";

        varReplacer4992 = "Error during encode";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r9, varReplacer4991, varReplacer4992, $r8);

        $r6 = "";

        $r7 = "";

        goto label10;

     label12:
        $r10 := @caughtexception;

        $r9 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        varReplacer5000 = "AuthIMS";

        varReplacer5001 = "Error during encode process";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r9, varReplacer5000, varReplacer5001, $r10);

        goto label04;

     label13:
        $r11 := @caughtexception;

        $r9 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        varReplacer4988 = "AuthIMS";

        varReplacer4989 = "Sign in url is malformed";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r9, varReplacer4988, varReplacer4989, $r11);

        varReplacer4997 = null;

        return varReplacer4997;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label12;
        catch java.net.MalformedURLException from label06 to label07 with label13;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label11;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label11;
    }

    java.net.URL getSignOutURL()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.net.URL $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getLogoutAPI()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("access_token");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String accessToken>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("client_id");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("client_secret");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r3 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientSecret()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = new java.net.URL;

     label1:
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r3);

     label2:
        return $r4;

     label3:
        $r1 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "AuthIMS", "Malformed exception", $r1);

        return null;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public java.net.URL getSignUpURL()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.net.URL $r1;
        java.lang.String $r2, $r6, $r7, varReplacer4962, varReplacer4963, varReplacer4964, varReplacer4965, varReplacer4966, varReplacer4967, varReplacer4968, varReplacer4969, varReplacer4970, varReplacer4971, varReplacer4972, varReplacer4974, varReplacer4975, varReplacer4976, varReplacer4977, varReplacer4978, varReplacer4979, varReplacer4980, varReplacer4981;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType $r3, $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;
        java.lang.Throwable $r8, $r10, $r11;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r9;
        null_type varReplacer4973;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.net.URL getAuthURL()>();

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String toString()>();

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType grantType>;

        $r4 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType AdobeAuthIMSGrantTypeAuthorization>;

        if $r3 != $r4 goto label08;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4971 = "?redirect_uri=signin%3A%2F%2Fcomplete&scope=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4971);

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientScope>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4964 = "&idp_flow=create_account&force_marketing_permission=true&client_id=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4964);

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4975 = "&locale=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4975);

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getCurrentLocale()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r6 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientState()>();

        if $r6 == null goto label05;

        $r6 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientState()>();

        varReplacer4970 = "";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer4970);

        if $z0 != 0 goto label05;

        $r6 = null;

     label02:
        $r7 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientState()>();

        varReplacer4981 = "UTF-8";

        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r7, varReplacer4981);

     label03:
        $r6 = $r7;

     label04:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4962 = "&state=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4962);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r1 = new java.net.URL;

     label06:
        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r2);

     label07:
        return $r1;

     label08:
        $r6 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceID()>();

        varReplacer4974 = "UTF-8";

        $r6 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, varReplacer4974);

     label09:
        $r7 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceName()>();

        varReplacer4972 = "UTF-8";

        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r7, varReplacer4972);

     label10:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4968 = "?redirect_uri=signin%3A%2F%2Fcomplete&scope=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4968);

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientScope>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4969 = "&idp_flow=create_account&force_marketing_permission=true&response_type=device&device_id=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4969);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer4967 = "&device_name=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4967);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer4980 = "&client_id=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4980);

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer4963 = "&locale=";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4963);

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getCurrentLocale()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label11:
        $r8 := @caughtexception;

        $r6 = null;

        $r7 = null;

        $r9 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        varReplacer4965 = "AuthIMS";

        varReplacer4966 = "Error during encode process";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r9, varReplacer4965, varReplacer4966, $r8);

        goto label10;

     label12:
        $r10 := @caughtexception;

        $r9 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        varReplacer4976 = "AuthIMS";

        varReplacer4977 = "Error during encode process";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r9, varReplacer4976, varReplacer4977, $r10);

        goto label04;

     label13:
        $r11 := @caughtexception;

        $r9 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        varReplacer4978 = "AuthIMS";

        varReplacer4979 = "Malformed url";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r9, varReplacer4978, varReplacer4979, $r11);

        varReplacer4973 = null;

        return varReplacer4973;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label12;
        catch java.net.MalformedURLException from label06 to label07 with label13;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label11;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label11;
    }

    public void getTokenExpirationTime(java.lang.String, com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, $r6, varReplacer4057, varReplacer4058, varReplacer4059;
        com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler $r2;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod $r3;
        java.util.HashMap $r4;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$9 $r5;
        com.adobe.creativesdk.foundation.network.AdobeNetworkException $r7;
        com.adobe.creativesdk.foundation.network.AdobeNetworkException$AdobeNetworkErrorCode $r8;
        java.net.URL $r9;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler;

        $r6 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        if $r6 == null goto label1;

        $r6 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientSecret()>();

        if $r6 != null goto label2;

     label1:
        $r7 = new com.adobe.creativesdk.foundation.network.AdobeNetworkException;

        $r8 = <com.adobe.creativesdk.foundation.network.AdobeNetworkException$AdobeNetworkErrorCode: com.adobe.creativesdk.foundation.network.AdobeNetworkException$AdobeNetworkErrorCode AdobeNetworkErrorBadRequest>;

        specialinvoke $r7.<com.adobe.creativesdk.foundation.network.AdobeNetworkException: void <init>(com.adobe.creativesdk.foundation.network.AdobeNetworkException$AdobeNetworkErrorCode)>($r8);

        interfaceinvoke $r2.<com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler: void onError(com.adobe.creativesdk.foundation.network.AdobeNetworkException)>($r7);

        return;

     label2:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        varReplacer4059 = "token";

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer4059, $r1);

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        varReplacer4057 = "client_id";

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer4057, $r1);

        $r9 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.net.URL getValidateTokenURL()>();

        $r3 = <com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod AdobeNetworkHttpRequestMethodGET>;

        $r5 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$9;

        specialinvoke $r5.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$9: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)>($r0, $r2);

        varReplacer4058 = "application/x-www-form-urlencoded";

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void makeHTTPOperationForURL(java.net.URL,com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod,java.util.Map,java.lang.String,com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)>($r9, $r3, $r4, varReplacer4058, $r5);

        return;
    }

    java.net.URL getTokenURL()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.Throwable $r1;
        java.net.URL $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer4005, varReplacer4006, varReplacer4007;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        null_type varReplacer4004;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r2 = new java.net.URL;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label2:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost>;

     label3:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer4007 = "/ims/token/v1";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4007);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4);

     label4:
        return $r2;

     label5:
        $r1 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        varReplacer4005 = "AuthIMS";

        varReplacer4006 = "Invalid token url";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, varReplacer4005, varReplacer4006, $r1);

        varReplacer4004 = null;

        return varReplacer4004;

        catch java.net.MalformedURLException from label1 to label2 with label5;
        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    java.net.URL getValidateTokenURL()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.Throwable $r1;
        java.net.URL $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer4090, varReplacer4091, varReplacer4092;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        null_type varReplacer4093;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r2 = new java.net.URL;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label2:
        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost>;

     label3:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer4090 = "/ims/validate_token/v1";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4090);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.net.URL: void <init>(java.lang.String)>($r4);

     label4:
        return $r2;

     label5:
        $r1 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        varReplacer4091 = "AuthIMS";

        varReplacer4092 = "Invalid validate token url";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r5, varReplacer4091, varReplacer4092);

        varReplacer4093 = null;

        return varReplacer4093;

        catch java.net.MalformedURLException from label1 to label2 with label5;
        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    void invalidateAccessToken()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Date $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = new java.util.Date;

        specialinvoke $r1.<java.util.Date: void <init>()>();

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAccessTokenExpirationTime(java.util.Date)>($r1);

        return;
    }

    protected void parseFromProfile(org.json.JSONObject)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        org.json.JSONObject $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: org.json.JSONObject;

        return;
    }

    protected void parseResponse(com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject, boolean)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject $r1;
        boolean $z0, $z1;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r2;
        java.lang.String $r3, $r5;
        java.lang.StringBuilder $r4;
        long $l0;
        java.lang.Long $r6;
        java.util.Calendar $r7;
        int $i1;
        java.util.Date $r8;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject;

        $z0 := @parameter1: boolean;

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level INFO>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r2, "AuthIMS", "parseResponse..");

        $r3 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: java.lang.String getString(java.lang.String)>("userId");

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z1 == 0 goto label1;

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adobe ID missing : response ");

        $r5 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r2, "AuthIMS", $r5);

     label1:
        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAdobeID(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: java.lang.String getString(java.lang.String)>("access_token");

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAccessToken(java.lang.String)>($r3);

        $z1 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: boolean has(java.lang.String)>("device_token");

        if $z1 == 0 goto label2;

        $r3 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: java.lang.String getString(java.lang.String)>("device_token");

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setDeviceToken(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: java.lang.String getString(java.lang.String)>("device_token");

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setDeviceTokenExpiration(java.lang.String)>($r3);

     label2:
        $z1 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: boolean has(java.lang.String)>("refresh_token");

        if $z1 == 0 goto label3;

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: java.lang.String getString(java.lang.String)>("refresh_token");

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setRefreshToken(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: java.lang.String getString(java.lang.String)>("refresh_token");

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setRefreshTokenExpiration(java.lang.String)>($r3);

     label3:
        $r3 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: java.lang.String getString(java.lang.String)>("continuation_token");

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setContinuationToken(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.utils.AdobeJSONObject: java.lang.String getString(java.lang.String)>("expires_in");

        if $r3 == null goto label5;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        $l0 = $l0 / 1000L;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r7 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i1 = virtualinvoke $r6.<java.lang.Long: int intValue()>();

        virtualinvoke $r7.<java.util.Calendar: void add(int,int)>(13, $i1);

        $r8 = virtualinvoke $r7.<java.util.Calendar: java.util.Date getTime()>();

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAccessTokenExpirationTime(java.util.Date)>($r8);

     label4:
        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void fetchEntitlements()>();

        return;

     label5:
        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAccessTokenExpirationTime(java.util.Date)>(null);

        goto label4;
    }

    void refreshAccessToken(java.lang.String, com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, $r5;
        com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback $r2;
        java.util.HashMap $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$10 $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r6;
        java.lang.StringBuilder $r7;
        java.util.Date $r8;
        java.net.URL $r9;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod $r10;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback;

        $r5 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        if $r5 != null goto label1;

        interfaceinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback: void onInvalidClientId()>();

        return;

     label1:
        $r5 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientSecret()>();

        if $r5 != null goto label2;

        interfaceinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback: void onInvalidClientSecret()>();

        return;

     label2:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("grant_type", "refresh_token");

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("refresh_token", $r1);

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientID()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("client_id", $r1);

        $r1 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getClientSecret()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("client_secret", $r1);

        $r6 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Refreshing Access Token ");

        $r8 = new java.util.Date;

        specialinvoke $r8.<java.util.Date: void <init>()>();

        $r1 = virtualinvoke $r8.<java.util.Date: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r6, "AuthIMS", $r1);

        $r9 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.net.URL getTokenURL()>();

        $r10 = <com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod AdobeNetworkHttpRequestMethodPOST>;

        $r4 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$10;

        specialinvoke $r4.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$10: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)>($r0, $r2);

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void makeHTTPOperationForURL(java.net.URL,com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod,java.util.Map,java.lang.String,com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)>($r9, $r10, $r3, "application/x-www-form-urlencoded", $r4);

        return;
    }

    void setAccessToken(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r2;
        java.lang.StringBuilder $r3;
        java.util.Date $r4;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String accessToken> = $r1;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("AccessToken", $r1);

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting the access token ");

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $r1 = virtualinvoke $r4.<java.util.Date: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r2, "AuthIMS", $r1);

        return;
    }

    public void setAccessTokenExpirationTime(java.util.Date)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.util.Date $r1;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer4097, varReplacer4098, varReplacer4099;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.util.Date;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.util.Date accessTokenExpirationTime> = $r1;

        varReplacer4098 = "AccessTokenExpiration";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>(varReplacer4098, $r1);

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer4097 = "Setting the expiration time of access token : ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4097);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer4099 = "AuthIMS";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r2, varReplacer4099, $r4);

        return;
    }

    public void setAdditionalClientScopes(java.lang.String[])
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String[] $r1, $r4;
        java.lang.StringBuilder $r2, $r9;
        java.util.LinkedHashSet $r3;
        java.util.List $r5;
        int $i0, $i1, $i2, varReplacer3929;
        java.lang.String $r6, varReplacer3928;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String[];

        $r3 = new java.util.LinkedHashSet;

        $r4 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String[] IMS_CREATIVE_SDK_SCOPES>;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r5);

        goto label1;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r3.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r8;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer3928 = ",";

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3928);

        goto label2;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

        $i0 = $i0 + -1;

        varReplacer3929 = 0;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int,int)>(varReplacer3929, $i0);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientScope> = $r6;

        return;
    }

    void setAdobeID(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        boolean $z0;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r2;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r3;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r2, "AuthIMS", "adobeID empty.");

     label1:
        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String adobeID> = $r1;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        virtualinvoke $r3.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void updateOrAddKey(java.lang.String,java.lang.Object)>("AdobeID", $r1);

        return;
    }

    public void setAuthenticationParameters(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        null_type varReplacer4400, varReplacer4401, varReplacer4402;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setClientID(java.lang.String)>($r1);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setClientSecret(java.lang.String)>($r2);

        varReplacer4400 = null;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setClientState(java.lang.String)>(varReplacer4400);

        varReplacer4401 = null;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setDeviceID(java.lang.String)>(varReplacer4401);

        varReplacer4402 = null;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setDeviceName(java.lang.String)>(varReplacer4402);

        return;
    }

    public void setCipherKey(byte[])
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        byte[] $r1, $r2;
        java.lang.Exception $r3;
        int $i0, varReplacer3920, varReplacer3921;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.Class $r6;
        java.lang.String $r7, $r8, varReplacer3919;
        java.lang.IllegalArgumentException $r9;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: byte[];

        if $r1 != null goto label1;

        return;

     label1:
        $i0 = lengthof $r1;

        $r2 = newarray (byte)[$i0];

        $i0 = lengthof $r1;

        varReplacer3920 = 0;

        varReplacer3921 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer3920, $r2, varReplacer3920, $i0);

     label2:
        $r4 = staticinvoke <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher createInstance(byte[])>($r2);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher cipher> = $r4;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r3.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r7, $r8, $r3);

        $r9 = new java.lang.IllegalArgumentException;

        varReplacer3919 = "CSDK Foundation Auth : Cannot create Cipher Instance !";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer3919);

        throw $r9;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    void setClientID(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer4403;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientID> = $r1;

        varReplacer4403 = "ClientId";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>(varReplacer4403, $r1);

        return;
    }

    void setClientSecret(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer4404;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientSecret> = $r1;

        varReplacer4404 = "ClientSecret";

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>(varReplacer4404, $r1);

        return;
    }

    public void setClientState(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer4405;
        null_type varReplacer4406, varReplacer4407;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        varReplacer4407 = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String clientState> = varReplacer4407;

        varReplacer4405 = "ClientState";

        varReplacer4406 = null;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>(varReplacer4405, varReplacer4406);

        return;
    }

    void setContinuationToken(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String continuationToken> = $r1;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("ContinuationToken", $r1);

        return;
    }

    void setContiuableEventErrorCode(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void updateOrAddKey(java.lang.String,java.lang.Object)>("ContinuableEventErrorCode", $r1);

        return;
    }

    void setContiuableEventJumpURL(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain $r2;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain authKeychain>;

        virtualinvoke $r2.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthKeychain: void updateOrAddKey(java.lang.String,java.lang.Object)>("ContinuableEventJumpURL", $r1);

        return;
    }

    protected void setDeviceID(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer4409;
        null_type varReplacer4408, varReplacer4410;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        varReplacer4408 = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceID> = varReplacer4408;

        varReplacer4409 = "DeviceId";

        varReplacer4410 = null;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>(varReplacer4409, varReplacer4410);

        return;
    }

    void setDeviceName(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer4411;
        null_type varReplacer4412, varReplacer4413;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        varReplacer4413 = null;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceName> = varReplacer4413;

        varReplacer4411 = "DeviceName";

        varReplacer4412 = null;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>(varReplacer4411, varReplacer4412);

        return;
    }

    void setDeviceToken(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, $r5;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r2;
        java.lang.StringBuilder $r3;
        java.util.Date $r4;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken> = $r1;

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting Device Token ");

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $r5 = virtualinvoke $r4.<java.util.Date: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r2, "AuthIMS", $r5);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("DeviceToken", $r1);

        return;
    }

    void setDisplayName(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String displayName> = $r1;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("DisplayName", $r1);

        return;
    }

    void setEmailAddress(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailAddress> = $r1;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("Email", $r1);

        return;
    }

    void setEmailVerified(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String emailVerified> = $r1;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("EmailVerified", $r1);

        return;
    }

    public void setEnvironment(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment $r1;
        int $i0;
        int[] $r2;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpService $r3;
        java.lang.String $r4, varReplacer3922, varReplacer3923, varReplacer3924, varReplacer3926, varReplacer3927;
        com.adobe.creativesdk.foundation.internal.auth.AdobeInvalidIMSHostException $r5;
        null_type varReplacer3925;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment;

        $r2 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$13: int[] $SwitchMap$com$adobe$creativesdk$foundation$internal$auth$AdobeAuthIMSEnvironment>;

        $i0 = virtualinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment: int ordinal()>();

        $i0 = $r2[$i0];

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label1;
        };

     label1:
        varReplacer3927 = "https://ims-na1.adobelogin.com";

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost> = varReplacer3927;

     label2:
        $r3 = new com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpService;

        $r4 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost>;

        varReplacer3924 = "Adobe Creative SDK";

        varReplacer3925 = null;

        specialinvoke $r3.<com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpService: void <init>(java.lang.String,java.lang.String,java.util.Map)>($r4, varReplacer3924, varReplacer3925);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpService networkService> = $r3;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSEnvironment environment> = $r1;

        return;

     label3:
        varReplacer3922 = "https://ims-na1-stg1.adobelogin.com";

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost> = varReplacer3922;

        goto label2;

     label4:
        varReplacer3923 = "https://ims-na1-qa1.adobelogin.com";

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost> = varReplacer3923;

        goto label2;

     label5:
        varReplacer3926 = "https://ims-na1-qa2.adobelogin.com";

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost> = varReplacer3926;

        goto label2;

     label6:
        $r5 = new com.adobe.creativesdk.foundation.internal.auth.AdobeInvalidIMSHostException;

        specialinvoke $r5.<com.adobe.creativesdk.foundation.internal.auth.AdobeInvalidIMSHostException: void <init>()>();

        throw $r5;
    }

    void setFirstName(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String firstName> = $r1;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("FirstName", $r1);

        return;
    }

    public void setGrantType(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType $r1;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSGrantType grantType> = $r1;

        return;
    }

    protected void setImsHost(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String imsHost> = $r1;

        return;
    }

    public void setIsEnterPrise(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String isEnterPrise> = $r1;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("EnterpriseInfo", $r1);

        return;
    }

    void setLastName(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String lastName> = $r1;

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("LastName", $r1);

        return;
    }

    void setRefreshToken(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, $r5;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r2;
        java.lang.StringBuilder $r3;
        java.util.Date $r4;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken> = $r1;

        $r2 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting Refresh Token ");

        $r4 = new java.util.Date;

        specialinvoke $r4.<java.util.Date: void <init>()>();

        $r5 = virtualinvoke $r4.<java.util.Date: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r2, "AuthIMS", $r5);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void addToKeychain(java.lang.String,java.lang.Object)>("RefreshToken", $r1);

        return;
    }

    public void signIn(com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient $r1;
        java.lang.String $r2;
        boolean $z0;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$1 $r4;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$2 $r5;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSInfoNeeded $r6;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient;

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceToken()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken> = $r2;

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getRefreshToken()>();

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken> = $r2;

        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getDeviceID()>();

        if $r2 == null goto label1;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken> = null;

     label2:
        $r2 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getRefreshToken()>();

        if $r2 == null goto label3;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken>;

        if $r2 == null goto label4;

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label4;

     label3:
        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken> = null;

     label4:
        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken>;

        if $r2 == null goto label5;

        $r3 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r3, "AuthIMS", "Trying to refresh the access token with refresh token");

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String refreshToken>;

        $r4 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$1;

        specialinvoke $r4.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$1: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)>($r0, $r1);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void refreshAccessToken(java.lang.String,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)>($r2, $r4);

        return;

     label5:
        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken>;

        if $r2 == null goto label6;

        $r3 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r3, "AuthIMS", "Trying to refresh the access token with device token");

        $r2 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String deviceToken>;

        $r5 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$2;

        specialinvoke $r5.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$2: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)>($r0, $r1);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void getAccessTokenWithDeviceToken(java.lang.String,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)>($r2, $r5);

        return;

     label6:
        $r3 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r3, "AuthIMS", "Show signin UI");

        $r6 = <com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSInfoNeeded: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSInfoNeeded AdobeAuthIMSInfoNeededUsernameAndPassword>;

        interfaceinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient: void onInfoNeeded(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIMSInfoNeeded)>($r6);

        return;
    }

    public void signInWithAuthCode(java.lang.String, com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1;
        com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient $r2;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$5 $r4;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient;

        $r3 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r3, "AuthIMS", "trying to sign in with authCode");

        $r4 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$5;

        specialinvoke $r4.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$5: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)>($r0, $r2);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void getAccessTokenWithAuthCode(java.lang.String,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)>($r1, $r4);

        return;
    }

    public void signInWithDeviceToken(java.lang.String, com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, varReplacer3976, varReplacer3977;
        com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient $r2;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r3;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$6 $r4;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient;

        $r3 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        varReplacer3976 = "AuthIMS";

        varReplacer3977 = "trying to sign in with authCode";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r3, varReplacer3976, varReplacer3977);

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setDeviceTokenExpiration(java.lang.String)>($r1);

        $r4 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$6;

        specialinvoke $r4.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$6: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,java.lang.String,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignInClient)>($r0, $r1, $r2);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void getAccessTokenWithDeviceToken(java.lang.String,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthTokenCallback)>($r1, $r4);

        return;
    }

    public void signOut(com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignOutClient)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignOutClient $r1;
        java.util.HashMap $r2;
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$7 $r3;
        java.lang.String $r4;
        java.net.URL $r5;
        com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod $r6;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r7;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignOutClient;

        $r4 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.lang.String getAccessToken()>();

        if $r4 == null goto label1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $r3 = new com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$7;

        specialinvoke $r3.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService$7: void <init>(com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService,com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignOutClient)>($r0, $r1);

        $r5 = virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: java.net.URL getSignOutURL()>();

        $r6 = <com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod: com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod AdobeNetworkHttpRequestMethodGET>;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void makeHTTPOperationForURL(java.net.URL,com.adobe.creativesdk.foundation.internal.net.AdobeNetworkHttpRequestMethod,java.util.Map,java.lang.String,com.adobe.creativesdk.foundation.internal.net.IAdobeNetworkCompletionHandler)>($r5, $r6, $r2, null, $r3);

        $r7 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r7, "AuthIMS", "Trying to reset tokens from signOut()(accessToken is not null)");

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void resetKeys()>();

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void removeAnySharedSSOAcount()>();

        return;

     label1:
        $r7 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r7, "AuthIMS", "Trying to reset tokens from signOut()(accessToken is null)");

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void resetKeys()>();

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void removeAnySharedSSOAcount()>();

        interfaceinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.IAdobeAuthIMSSignOutClient: void onSuccess()>();

        return;
    }

    public void stuffCredentialsWithAccessToken(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $r6 := @parameter5: java.lang.String;

        $r7 := @parameter6: java.lang.String;

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void resetKeys()>();

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAccessToken(java.lang.String)>($r1);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAdobeID(java.lang.String)>($r2);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setDisplayName(java.lang.String)>($r3);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setFirstName(java.lang.String)>($r4);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setLastName(java.lang.String)>($r5);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setEmailAddress(java.lang.String)>($r6);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setEmailVerified(java.lang.String)>($r7);

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void setAccessTokenExpiration(java.lang.String)>($r1);

        virtualinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void fetchEntitlements()>();

        return;
    }

    public void switchAccount()
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService $r0;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r1;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService;

        $r1 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level DEBUG>;

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String)>($r1, "AuthIMS", "SWITCH Account");

        specialinvoke $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeAuthIdentityManagementService: void resetKeys()>();

        return;
    }
}
