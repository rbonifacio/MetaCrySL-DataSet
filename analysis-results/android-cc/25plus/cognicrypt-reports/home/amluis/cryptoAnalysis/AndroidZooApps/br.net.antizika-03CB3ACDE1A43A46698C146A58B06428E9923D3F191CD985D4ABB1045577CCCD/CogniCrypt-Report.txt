Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer779)
		Method: <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: 3df0e80fe79d0119bea9afbbd85dd22a11f4bc91bb4115e6ddabbb7f18d9da0b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: 945ea0db034ee1722d3497bc82f4cb4404300ebc4c3f0135354193331d62525d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1192)
		Method: <com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: void <init>(java.io.InputStream)>
		SHA-256: d75beda018da1b231f0c8e18ce42262f365920c7e8c736ab807b6c03d0635b4a
		Secure: false
	Object:
		Variable: $r0
		Type: com.amazonaws.internal.SdkDigestInputStream
		Statement: specialinvoke $r0.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r1, $r2)
		Method: <com.amazonaws.internal.SdkDigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>
		SHA-256: 37ec91b9c70498deee384abb3d8453db61af27abf0e3a615ecac43b672eaab8d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: 9b29e7f4f0670fa75d98d95799f570e20f54b1f5c2cb137736235224e1c6972f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: 550b2765d9e9428e8a020375877dcf930c7849e0f6bb937b691b5d60187d87e2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer777)
		Method: <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(byte[])>
		SHA-256: 46f984e45138314f57cdf812aeb65aaa48dd528c23608acf324732be29c9cbe2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3169)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: 9f239cd947e0ea062a220970c54c689abdcded5be328b8a8640700bdafebf1c6
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: d9a98346e677ffb63ddaa4ad06019dce7d22173d7a471f02d2172f2f8674eb6d
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: d4c5d7aac9ff44f535a68d6731e0a1b66fc7a03345b2bb1f92df730333e69e32
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3121)
		Method: <com.amazonaws.http.UrlHttpClient: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)>
		SHA-256: 57fcfd4b1e6b4598e1d43410646b538c8668ee158ff8e4178d7498dcbc135802
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(byte[])>
		SHA-256: b4b07a2c8a1cc58f9c6f2a811abd7936918d1734a1961ea3d7bc602acda7bf4d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r5)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: 13e7ed320837264340b1c5899ecaf6f2a8a94354dfa1852b00167b9a72933d17
		Secure: true

Findings in Java Class: com.amazonaws.util.Md5Utils

	 in Method: byte[] computeMD5Hash(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #46f984e45138314f57cdf812aeb65aaa48dd528c23608acf324732be29c9cbe2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer777)


	 in Method: byte[] computeMD5Hash(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #3df0e80fe79d0119bea9afbbd85dd22a11f4bc91bb4115e6ddabbb7f18d9da0b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3df0e80fe79d0119bea9afbbd85dd22a11f4bc91bb4115e6ddabbb7f18d9da0b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer779)


Findings in Java Class: com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream

	 in Method: void <init>(java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d75beda018da1b231f0c8e18ce42262f365920c7e8c736ab807b6c03d0635b4a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1192)


Findings in Java Class: com.amazonaws.services.s3.AmazonS3Client

	 in Method: com.amazonaws.services.s3.model.PutObjectResult putObject(com.amazonaws.services.s3.model.PutObjectRequest)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d75beda018da1b231f0c8e18ce42262f365920c7e8c736ab807b6c03d0635b4a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r39.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: void <init>(java.io.InputStream)>($r9)


Findings in Java Class: com.amazonaws.auth.AbstractAWSSigner

	 in Method: byte[] hash(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #37ec91b9c70498deee384abb3d8453db61af27abf0e3a615ecac43b672eaab8d)
			Operation on object of type com.amazonaws.internal.SdkDigestInputStream object not completed. Expected call to read
			at statement: $r5 = virtualinvoke $r3.<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>()


	 in Method: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)


Findings in Java Class: com.amazonaws.http.UrlHttpClient

	 in Method: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3119, $r2, varReplacer3119)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #57fcfd4b1e6b4598e1d43410646b538c8668ee158ff8e4178d7498dcbc135802)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3121)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3119, $r2, varReplacer3119)


Findings in Java Class: com.google.android.gms.ads.internal.util.client.zza

	 in Method: java.lang.String zzaH(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9f239cd947e0ea062a220970c54c689abdcded5be328b8a8640700bdafebf1c6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3169)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	RequiredPredicateError: 3
	TypestateError: 1
	IncompleteOperationError: 2
=====================================================================