public class com.code.vnproapps.helper.Helper extends java.lang.Object
{

    public void <init>()
    {
        com.code.vnproapps.helper.Helper $r0;

        $r0 := @this: com.code.vnproapps.helper.Helper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String base64Encode(java.lang.String)
    {
        java.lang.String $r0, r3, varReplacer522, varReplacer523, varReplacer524;
        java.lang.Throwable $r1;
        byte[] $r2;
        java.io.UnsupportedEncodingException r4;
        int varReplacer521;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer522 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer522);

        varReplacer521 = 0;

        $r2 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r2, varReplacer521);

     label2:
        r3 = new java.lang.String;

     label3:
        varReplacer523 = "UTF8";

        specialinvoke r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, varReplacer523);

     label4:
        return r3;

     label5:
        $r1 := @caughtexception;

        r4 = (java.io.UnsupportedEncodingException) $r1;

        virtualinvoke r4.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        varReplacer524 = "";

        return varReplacer524;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    public static boolean checkValidDate(java.lang.String)
    {
        java.lang.String $r0, varReplacer1360, varReplacer1361, varReplacer1362, varReplacer1364, varReplacer1365;
        java.lang.Exception $r1;
        java.text.SimpleDateFormat $r2;
        java.util.Date $r3, $r5;
        java.lang.StringBuilder $r4;
        int $i0, varReplacer1363, varReplacer1366;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = new java.text.SimpleDateFormat;

     label1:
        varReplacer1365 = "dd/MM/yyyy HH:mm:ss";

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(varReplacer1365);

     label2:
        $r4 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1360 = " 00:00:00";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1360);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1361 = "dateInString";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1361, $r0);

        $r5 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

     label4:
        $r3 = new java.util.Date;

     label5:
        specialinvoke $r3.<java.util.Date: void <init>()>();

        $i0 = virtualinvoke $r3.<java.util.Date: int compareTo(java.util.Date)>($r5);

     label6:
        if $i0 > 0 goto label8;

        varReplacer1366 = 1;

        return varReplacer1366;

     label7:
        $r1 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        varReplacer1364 = "";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1364);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1362 = "dateInString e";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1362, $r0);

     label8:
        varReplacer1363 = 0;

        return varReplacer1363;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static boolean checkexistSdcard()
    {
        java.io.File $r0;

        $r0 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        if $r0 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public static java.lang.String convertFormatDate(java.lang.String)
    {
        java.lang.String $r0, varReplacer2235, varReplacer2236, varReplacer2237;
        java.text.SimpleDateFormat $r1, $r2;
        java.util.Date $r3;
        java.lang.Exception $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.text.SimpleDateFormat;

     label1:
        varReplacer2236 = "yyyy-MM-dd";

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(varReplacer2236);

     label2:
        $r2 = new java.text.SimpleDateFormat;

     label3:
        varReplacer2235 = "dd/MM/yyyy";

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(varReplacer2235);

        $r3 = virtualinvoke $r1.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r3);

     label4:
        return $r0;

     label5:
        $r4 := @caughtexception;

        varReplacer2237 = "01/01/2000";

        return varReplacer2237;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String dateTimeNowToString()
    {
        java.util.Calendar $r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(1);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(5);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(10);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(12);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = virtualinvoke $r0.<java.util.Calendar: int get(int)>(13);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static int getRandom()
    {
        java.util.Random $r0;
        int $i0;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        $i0 = virtualinvoke $r0.<java.util.Random: int nextInt()>();

        if $i0 < 0 goto label1;

        return $i0;

     label1:
        $i0 = neg $i0;

        return $i0;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer2166, varReplacer2167, varReplacer2168;
        java.lang.Throwable $r1;
        java.lang.StringBuffer $r2, r6;
        java.security.MessageDigest $r3;
        byte[] $r4;
        int $i0, $i1;
        byte $b2;
        short $s3;
        java.lang.StringBuilder $r5, r7;
        java.security.NoSuchAlgorithmException r8;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer2167 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2167);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        r6 = new java.lang.StringBuffer;

        $r2 = r6;

     label03:
        specialinvoke r6.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label13;

        $b2 = $r4[$i0];

        $s3 = $b2 & 255;

     label06:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

     label07:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label08:
        if $i1 >= 2 goto label11;

        r7 = new java.lang.StringBuilder;

        $r5 = r7;

     label09:
        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer2168 = "0";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2168);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        goto label07;

     label11:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label12:
        $i0 = $i0 + 1;

        goto label05;

     label13:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label14:
        return $r0;

     label15:
        $r1 := @caughtexception;

        r8 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r8.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer2166 = "";

        return varReplacer2166;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label15;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label15;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label15;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label15;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label15;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label15;
    }

    public static java.lang.String posToString(int)
    {
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, varReplacer428, varReplacer429, varReplacer430;

        nop;

        $i0 := @parameter0: int;

        if $i0 >= 10 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        varReplacer430 = "00";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer430);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        if $i0 >= 100 goto label2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        varReplacer428 = "0";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer428);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        varReplacer429 = "";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer429);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String secondToString(int)
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, varReplacer802, varReplacer803;

        nop;

        $i0 := @parameter0: int;

        $i1 = $i0 / 1000;

        $i0 = $i1 / 60;

        $i1 = $i1 % 60;

        if $i1 >= 10 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer803 = ":0";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer803);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer802 = ":";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer802);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
