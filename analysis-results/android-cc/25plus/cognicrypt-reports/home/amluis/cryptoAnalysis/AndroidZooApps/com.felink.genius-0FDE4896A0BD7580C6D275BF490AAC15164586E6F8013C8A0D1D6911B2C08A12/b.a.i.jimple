public final class b.a.i extends java.lang.Object
{
    public static final byte[] a;
    public static final java.lang.String[] b;
    public static final java.nio.charset.Charset c;
    public static final java.util.TimeZone d;
    private static final java.util.regex.Pattern e;

    static void <clinit>()
    {
        byte[] $r0;
        java.lang.String[] $r1;
        java.nio.charset.Charset $r2;
        java.util.TimeZone $r3;
        java.util.regex.Pattern $r4;
        java.lang.String varReplacer1609, varReplacer1610, varReplacer1611;

        nop;

        $r0 = newarray (byte)[0];

        <b.a.i: byte[] a> = $r0;

        $r1 = newarray (java.lang.String)[0];

        <b.a.i: java.lang.String[] b> = $r1;

        varReplacer1609 = "UTF-8";

        $r2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(varReplacer1609);

        <b.a.i: java.nio.charset.Charset c> = $r2;

        varReplacer1611 = "GMT";

        $r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(varReplacer1611);

        <b.a.i: java.util.TimeZone d> = $r3;

        varReplacer1610 = "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)";

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(varReplacer1610);

        <b.a.i: java.util.regex.Pattern e> = $r4;

        return;
    }

    public static int a(java.lang.String, int, int)
    {
        java.lang.String $r0;
        int $i0, $i2;
        char $c1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i2 := @parameter2: int;

     label1:
        if $i0 >= $i2 goto label4;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        lookupswitch($c1)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 12: goto label3;
            case 13: goto label3;
            case 32: goto label3;
            default: goto label2;
        };

     label2:
        return $i0;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        return $i2;
    }

    public static int a(java.lang.String, int, int, char)
    {
        java.lang.String $r0;
        int $i0, $i3;
        char $c1, $c2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i3 := @parameter2: int;

        $c1 := @parameter3: char;

     label1:
        if $i0 >= $i3 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 != $c1 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $i3;
    }

    public static int a(java.lang.String, int, int, java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1, $i3;
        char $c2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: java.lang.String;

     label1:
        if $i0 >= $i1 goto label3;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        $i3 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c2);

        if $i3 == -1 goto label2;

        return $i0;

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $i1;
    }

    public static c.f a(c.f)
    {
        c.f $r0;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.Throwable $r3;
        java.lang.AssertionError $r4;
        java.lang.String varReplacer12643;

        nop;

        $r0 := @parameter0: c.f;

     label1:
        varReplacer12643 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12643);

        $r2 = virtualinvoke $r0.<c.f: byte[] g()>();

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

        $r0 = staticinvoke <c.f: c.f a(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r3);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String a(b.q)
    {
        b.q $r0;
        int $i0, $i1;
        java.lang.String $r1, varReplacer12480;
        java.lang.StringBuilder $r2;

        nop;

        $r0 := @parameter0: b.q;

        $i0 = virtualinvoke $r0.<b.q: int g()>();

        $r1 = virtualinvoke $r0.<b.q: java.lang.String b()>();

        $i1 = staticinvoke <b.q: int a(java.lang.String)>($r1);

        if $i0 == $i1 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<b.q: java.lang.String f()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer12480 = ":";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer12480);

        $i0 = virtualinvoke $r0.<b.q: int g()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label1:
        $r1 = virtualinvoke $r0.<b.q: java.lang.String f()>();

        return $r1;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Locale $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        null_type varReplacer11800, varReplacer11801;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r0 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>($r0);

     label2:
        $r1 = <java.util.Locale: java.util.Locale US>;

     label3:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean isEmpty()>();

     label4:
        if $z0 == 0 goto label5;

        varReplacer11800 = null;

        return varReplacer11800;

     label5:
        $z0 = staticinvoke <b.a.i: boolean c(java.lang.String)>($r0);

     label6:
        if $z0 != 0 goto label8;

        return $r0;

     label7:
        $r2 := @caughtexception;

     label8:
        varReplacer11801 = null;

        return varReplacer11801;

        catch java.lang.IllegalArgumentException from label1 to label2 with label7;
        catch java.lang.IllegalArgumentException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label5 to label6 with label7;
    }

    public static java.util.List a(java.util.List)
    {
        java.util.List $r0;
        java.util.ArrayList $r1;

        nop;

        $r0 := @parameter0: java.util.List;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        $r0 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r0;
    }

    public static transient java.util.List a(java.lang.Object[])
    {
        java.lang.Object[] $r0;
        java.lang.Object $r1;
        java.util.List $r2;

        nop;

        $r0 := @parameter0: java.lang.Object[];

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r0 = (java.lang.Object[]) $r1;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r2;
    }

    private static java.util.List a(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] $r0, $r1;
        java.util.ArrayList $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object[];

        $r1 := @parameter1: java.lang.Object[];

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label5;

        $r3 = $r0[$i2];

        $i1 = lengthof $r1;

        $i3 = 0;

     label2:
        if $i3 >= $i1 goto label3;

        $r4 = $r1[$i3];

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r4);

     label3:
        $i2 = $i2 + 1;

        goto label1;

     label4:
        $i3 = $i3 + 1;

        goto label2;

     label5:
        return $r2;
    }

    public static java.util.Map a(java.util.Map)
    {
        java.util.Map $r0;
        java.util.LinkedHashMap $r1;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>(java.util.Map)>($r0);

        $r0 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r0;
    }

    public static java.util.concurrent.ThreadFactory a(java.lang.String, boolean)
    {
        java.lang.String $r0;
        boolean $z0;
        b.a.i$1 $r1;
        int varReplacer2321;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = new b.a.i$1;

        varReplacer2321 = 1;

        specialinvoke $r1.<b.a.i$1: void <init>(java.lang.String,boolean)>($r0, varReplacer2321);

        return $r1;
    }

    public static void a(long, long, long)
    {
        long $l0, $l1, $l2, $l3;
        byte $b4;
        java.lang.ArrayIndexOutOfBoundsException $r0;

        nop;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $l2 := @parameter2: long;

        $l3 = 0L | $l2;

        $b4 = $l3 cmp 0L;

        if $b4 < 0 goto label1;

        $b4 = 0L cmp $l0;

        if $b4 > 0 goto label1;

        $l0 = $l0 - 0L;

        $b4 = $l0 cmp $l2;

        if $b4 >= 0 goto label2;

     label1:
        $r0 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r0;

     label2:
        return;
    }

    public static void a(java.io.Closeable)
    {
        java.io.Closeable $r0;
        java.lang.RuntimeException $r1;
        java.lang.Exception $r2;

        nop;

        $r0 := @parameter0: java.io.Closeable;

        if $r0 == null goto label5;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        throw $r1;

     label4:
        $r2 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static void a(java.io.Closeable, java.io.Closeable)
    {
        java.io.Closeable $r0, $r1;
        java.lang.Throwable $r2, $r3;
        boolean $z0;
        java.io.IOException $r4;
        java.lang.RuntimeException $r5;
        java.lang.Error $r6;
        java.lang.AssertionError $r7;

        nop;

        $r0 := @parameter0: java.io.Closeable;

        $r1 := @parameter1: java.io.Closeable;

        $r2 = null;

     label1:
        interfaceinvoke $r0.<java.io.Closeable: void close()>();

     label2:
        interfaceinvoke $r1.<java.io.Closeable: void close()>();

     label3:
        if $r2 != null goto label5;

        return;

     label4:
        $r3 := @caughtexception;

        if $r2 != null goto label3;

        $r2 = $r3;

        goto label3;

     label5:
        $z0 = $r2 instanceof java.io.IOException;

        if $z0 == 0 goto label6;

        $r4 = (java.io.IOException) $r2;

        throw $r4;

     label6:
        $z0 = $r2 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label7;

        $r5 = (java.lang.RuntimeException) $r2;

        throw $r5;

     label7:
        $z0 = $r2 instanceof java.lang.Error;

        if $z0 == 0 goto label8;

        $r6 = (java.lang.Error) $r2;

        throw $r6;

     label8:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r2);

        throw $r7;

     label9:
        $r2 := @caughtexception;

        goto label2;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static void a(java.net.Socket)
    {
        java.net.Socket $r0;
        boolean $z0;
        java.lang.AssertionError $r1;
        java.lang.RuntimeException $r2;
        java.lang.Exception $r3;

        nop;

        $r0 := @parameter0: java.net.Socket;

        if $r0 == null goto label6;

     label1:
        virtualinvoke $r0.<java.net.Socket: void close()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $z0 = staticinvoke <b.a.i: boolean a(java.lang.AssertionError)>($r1);

        if $z0 != 0 goto label6;

        throw $r1;

     label4:
        $r2 := @caughtexception;

        throw $r2;

     label5:
        $r3 := @caughtexception;

     label6:
        return;

        catch java.lang.AssertionError from label1 to label2 with label3;
        catch java.lang.RuntimeException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public static boolean a(c.r, int, java.util.concurrent.TimeUnit)
    {
        c.r $r0;
        int $i0, varReplacer12722, varReplacer12723;
        java.util.concurrent.TimeUnit $r1;
        boolean $z0;
        java.lang.Throwable $r2;

        nop;

        $r0 := @parameter0: c.r;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

     label1:
        varReplacer12723 = 100;

        $z0 = staticinvoke <b.a.i: boolean b(c.r,int,java.util.concurrent.TimeUnit)>($r0, varReplacer12723, $r1);

     label2:
        return $z0;

     label3:
        $r2 := @caughtexception;

        varReplacer12722 = 0;

        return varReplacer12722;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static boolean a(java.lang.AssertionError)
    {
        java.lang.AssertionError $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, varReplacer12280;
        boolean $z0;
        int varReplacer12278, varReplacer12279;

        nop;

        $r0 := @parameter0: java.lang.AssertionError;

        $r1 = virtualinvoke $r0.<java.lang.AssertionError: java.lang.Throwable getCause()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r0.<java.lang.AssertionError: java.lang.String getMessage()>();

        if $r2 == null goto label1;

        $r2 = virtualinvoke $r0.<java.lang.AssertionError: java.lang.String getMessage()>();

        varReplacer12280 = "getsockname failed";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer12280);

        if $z0 == 0 goto label1;

        varReplacer12279 = 1;

        return varReplacer12279;

     label1:
        varReplacer12278 = 0;

        return varReplacer12278;
    }

    public static boolean a(java.lang.Object, java.lang.Object)
    {
        java.lang.Object $r0, $r1;
        boolean $z0;
        int varReplacer15492, varReplacer15493;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Object;

        if $r0 == $r1 goto label1;

        if $r0 == null goto label2;

        $z0 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        varReplacer15492 = 1;

        return varReplacer15492;

     label2:
        varReplacer15493 = 0;

        return varReplacer15493;
    }

    public static boolean a(java.lang.String[], java.lang.String)
    {
        java.lang.String[] $r0;
        java.lang.String $r1;
        java.util.List $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        return $z0;
    }

    public static java.lang.Object[] a(java.lang.Class, java.lang.Object[], java.lang.Object[])
    {
        java.lang.Class $r0;
        java.lang.Object[] $r1, $r2;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r4;

        $r0 := @parameter0: java.lang.Class;

        $r1 := @parameter1: java.lang.Object[];

        $r2 := @parameter2: java.lang.Object[];

        $r3 = staticinvoke <b.a.i: java.util.List a(java.lang.Object[],java.lang.Object[])>($r1, $r2);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r0, $i0);

        $r1 = (java.lang.Object[]) $r4;

        $r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        return $r1;
    }

    public static int b(java.lang.String, int, int)
    {
        java.lang.String $r0;
        int $i0, $i2;
        char $c1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i2 := @parameter1: int;

        $i0 := @parameter2: int;

        $i0 = $i0 + -1;

     label1:
        if $i0 < $i2 goto label4;

        $c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        lookupswitch($c1)
        {
            case 9: goto label3;
            case 10: goto label3;
            case 12: goto label3;
            case 13: goto label3;
            case 32: goto label3;
            default: goto label2;
        };

     label2:
        $i2 = $i0 + 1;

        return $i2;

     label3:
        $i0 = $i0 + -1;

        goto label1;

     label4:
        return $i2;
    }

    public static boolean b(c.r, int, java.util.concurrent.TimeUnit)
    {
        c.r $r0;
        int $i0, varReplacer12684, varReplacer12685;
        java.util.concurrent.TimeUnit $r1;
        byte $b1;
        long $l2, $l3, $l4, varReplacer12683;
        c.s $r2;
        boolean $z0;
        c.c $r3;
        java.lang.Throwable $r4, $r5;

        nop;

        $r0 := @parameter0: c.r;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.util.concurrent.TimeUnit;

        $l2 = staticinvoke <java.lang.System: long nanoTime()>();

        $r2 = interfaceinvoke $r0.<c.r: c.s a()>();

        $z0 = virtualinvoke $r2.<c.s: boolean f_()>();

        if $z0 == 0 goto label10;

        $r2 = interfaceinvoke $r0.<c.r: c.s a()>();

        $l3 = virtualinvoke $r2.<c.s: long d()>();

        $l3 = $l3 - $l2;

     label01:
        $r2 = interfaceinvoke $r0.<c.r: c.s a()>();

        $l4 = (long) $i0;

        $l4 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toNanos(long)>($l4);

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>($l3, $l4);

        $l4 = $l4 + $l2;

        virtualinvoke $r2.<c.s: c.s a(long)>($l4);

     label02:
        $r3 = new c.c;

     label03:
        specialinvoke $r3.<c.c: void <init>()>();

     label04:
        varReplacer12683 = 2048L;

        $l4 = interfaceinvoke $r0.<c.r: long a(c.c,long)>($r3, varReplacer12683);

     label05:
        $b1 = $l4 cmp -1L;

        if $b1 == 0 goto label11;

     label06:
        virtualinvoke $r3.<c.c: void r()>();

     label07:
        goto label04;

     label08:
        $r4 := @caughtexception;

        $b1 = $l3 cmp 9223372036854775807L;

        if $b1 != 0 goto label14;

        $r2 = interfaceinvoke $r0.<c.r: c.s a()>();

        virtualinvoke $r2.<c.s: c.s f()>();

     label09:
        varReplacer12684 = 0;

        return varReplacer12684;

     label10:
        $l3 = 9223372036854775807L;

        goto label01;

     label11:
        $b1 = $l3 cmp 9223372036854775807L;

        if $b1 != 0 goto label13;

        $r2 = interfaceinvoke $r0.<c.r: c.s a()>();

        virtualinvoke $r2.<c.s: c.s f()>();

     label12:
        varReplacer12685 = 1;

        return varReplacer12685;

     label13:
        $r2 = interfaceinvoke $r0.<c.r: c.s a()>();

        $l2 = $l3 + $l2;

        virtualinvoke $r2.<c.s: c.s a(long)>($l2);

        goto label12;

     label14:
        $r2 = interfaceinvoke $r0.<c.r: c.s a()>();

        $l2 = $l3 + $l2;

        virtualinvoke $r2.<c.s: c.s a(long)>($l2);

        goto label09;

     label15:
        $r5 := @caughtexception;

        $b1 = $l3 cmp 9223372036854775807L;

        if $b1 != 0 goto label17;

        $r2 = interfaceinvoke $r0.<c.r: c.s a()>();

        virtualinvoke $r2.<c.s: c.s f()>();

     label16:
        throw $r5;

     label17:
        $r2 = interfaceinvoke $r0.<c.r: c.s a()>();

        $l2 = $l3 + $l2;

        virtualinvoke $r2.<c.s: c.s a(long)>($l2);

        goto label16;

        catch java.io.InterruptedIOException from label03 to label05 with label08;
        catch java.io.InterruptedIOException from label06 to label07 with label08;
        catch java.lang.Throwable from label02 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
    }

    public static boolean b(java.lang.String)
    {
        java.lang.String $r0;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher $r2;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = <b.a.i: java.util.regex.Pattern e>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public static java.lang.String[] b(java.lang.String[], java.lang.String)
    {
        java.lang.String[] $r0, $r2;
        java.lang.String $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String[];

        $r1 := @parameter1: java.lang.String;

        $i0 = lengthof $r0;

        $i0 = $i0 + 1;

        $r2 = newarray (java.lang.String)[$i0];

        $i0 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r2, 0, $i0);

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

        $r2[$i0] = $r1;

        return $r2;
    }

    public static java.lang.String c(java.lang.String, int, int)
    {
        java.lang.String $r0;
        int $i0, $i1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = staticinvoke <b.a.i: int a(java.lang.String,int,int)>($r0, $i0, $i1);

        $i1 = staticinvoke <b.a.i: int b(java.lang.String,int,int)>($r0, $i0, $i1);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        return $r0;
    }

    private static boolean c(java.lang.String)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1, varReplacer11822, varReplacer11823, varReplacer11824;
        char $c2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label5;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i0);

        if $c2 <= 31 goto label2;

        if $c2 < 127 goto label3;

     label2:
        varReplacer11823 = 1;

        return varReplacer11823;

     label3:
        $r1 = " #%/:?@[\\]";

        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c2);

        if $i1 == -1 goto label4;

        varReplacer11822 = 1;

        return varReplacer11822;

     label4:
        $i0 = $i0 + 1;

        goto label1;

     label5:
        varReplacer11824 = 0;

        return varReplacer11824;
    }
}
