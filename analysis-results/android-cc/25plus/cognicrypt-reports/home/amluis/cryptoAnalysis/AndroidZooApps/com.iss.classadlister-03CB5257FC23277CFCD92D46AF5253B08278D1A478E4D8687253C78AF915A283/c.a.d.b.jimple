public class c.a.d.b extends c.a.d.c
{

    public void <init>()
    {
        c.a.d.b $r0;

        nop;

        $r0 := @this: c.a.d.b;

        specialinvoke $r0.<c.a.d.c: void <init>()>();

        return;
    }

    public java.lang.String a()
    {
        c.a.d.b $r0;
        java.lang.String varReplacer5564;

        nop;

        $r0 := @this: c.a.d.b;

        varReplacer5564 = "HMAC-SHA1";

        return varReplacer5564;
    }

    public java.lang.String a(c.a.c.b, c.a.c.a)
    {
        c.a.d.b $r0;
        c.a.c.b $r1;
        c.a.c.a $r2;
        java.lang.StringBuilder $r3, r11;
        java.lang.String $r4, varReplacer5585, varReplacer5587, varReplacer5588, varReplacer5589, varReplacer5590;
        byte[] $r5;
        javax.crypto.spec.SecretKeySpec $r6, r12;
        javax.crypto.Mac $r7;
        c.a.d.d $r8, r13;
        java.lang.Throwable $r9, $r10;
        c.a.b.d r14;
        java.lang.Exception r15;
        int varReplacer5586;

        nop;

        $r0 := @this: c.a.d.b;

        $r1 := @parameter0: c.a.c.b;

        $r2 := @parameter1: c.a.c.a;

        r11 = new java.lang.StringBuilder;

        $r3 = r11;

     label1:
        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<c.a.d.b: java.lang.String b()>();

        $r4 = staticinvoke <c.a.b: java.lang.String a(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer5586 = 38;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer5586);

        $r4 = virtualinvoke $r0.<c.a.d.b: java.lang.String c()>();

        $r4 = staticinvoke <c.a.b: java.lang.String a(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5590 = "UTF-8";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5590);

     label2:
        r12 = new javax.crypto.spec.SecretKeySpec;

        $r6 = r12;

     label3:
        varReplacer5588 = "HmacSHA1";

        specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer5588);

        varReplacer5589 = "HmacSHA1";

        $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5589);

        virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r6);

     label4:
        r13 = new c.a.d.d;

        $r8 = r13;

     label5:
        specialinvoke r13.<c.a.d.d: void <init>(c.a.c.b,c.a.c.a)>($r1, $r2);

        $r4 = virtualinvoke $r8.<c.a.d.d: java.lang.String a()>();

        varReplacer5587 = "SBS";

        staticinvoke <c.a.b: void a(java.lang.String,java.lang.String)>(varReplacer5587, $r4);

        varReplacer5585 = "UTF-8";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5585);

        $r5 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5);

        $r4 = virtualinvoke $r0.<c.a.d.b: java.lang.String a(byte[])>($r5);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

     label6:
        return $r4;

     label7:
        $r9 := @caughtexception;

        r14 = new c.a.b.d;

        r15 = (java.lang.Exception) $r9;

        specialinvoke r14.<c.a.b.d: void <init>(java.lang.Exception)>(r15);

        throw r14;

     label8:
        $r10 := @caughtexception;

        r14 = new c.a.b.d;

        r15 = (java.lang.Exception) $r10;

        specialinvoke r14.<c.a.b.d: void <init>(java.lang.Exception)>(r15);

        throw r14;

        catch java.security.GeneralSecurityException from label1 to label2 with label7;
        catch java.security.GeneralSecurityException from label3 to label4 with label7;
        catch java.security.GeneralSecurityException from label5 to label6 with label7;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label8;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label8;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label8;
    }
}
