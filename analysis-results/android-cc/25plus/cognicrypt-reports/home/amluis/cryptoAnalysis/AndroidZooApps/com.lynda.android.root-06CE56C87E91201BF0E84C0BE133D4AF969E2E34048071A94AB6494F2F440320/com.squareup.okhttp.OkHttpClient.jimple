public class com.squareup.okhttp.OkHttpClient extends java.lang.Object implements java.lang.Cloneable
{
    private static final java.util.List x;
    private static final java.util.List y;
    private static javax.net.ssl.SSLSocketFactory z;
    private final com.squareup.okhttp.internal.RouteDatabase A;
    com.squareup.okhttp.Dispatcher a;
    public java.net.Proxy b;
    public java.util.List c;
    public java.util.List d;
    public final java.util.List e;
    public final java.util.List f;
    public java.net.ProxySelector g;
    public java.net.CookieHandler h;
    com.squareup.okhttp.internal.InternalCache i;
    public com.squareup.okhttp.Cache j;
    public javax.net.SocketFactory k;
    public javax.net.ssl.SSLSocketFactory l;
    public javax.net.ssl.HostnameVerifier m;
    public com.squareup.okhttp.CertificatePinner n;
    public com.squareup.okhttp.Authenticator o;
    public com.squareup.okhttp.ConnectionPool p;
    public com.squareup.okhttp.Dns q;
    public boolean r;
    public boolean s;
    public boolean t;
    public int u;
    public int v;
    public int w;

    static void <clinit>()
    {
        com.squareup.okhttp.Protocol[] $r0;
        com.squareup.okhttp.Protocol $r1;
        java.util.List $r2;
        com.squareup.okhttp.ConnectionSpec[] $r3;
        com.squareup.okhttp.ConnectionSpec $r4;
        com.squareup.okhttp.OkHttpClient$1 $r5;

        nop;

        $r0 = newarray (com.squareup.okhttp.Protocol)[3];

        $r1 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol d>;

        $r0[0] = $r1;

        $r1 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol c>;

        $r0[1] = $r1;

        $r1 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol b>;

        $r0[2] = $r1;

        $r2 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List a(java.lang.Object[])>($r0);

        <com.squareup.okhttp.OkHttpClient: java.util.List x> = $r2;

        $r3 = newarray (com.squareup.okhttp.ConnectionSpec)[3];

        $r4 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec a>;

        $r3[0] = $r4;

        $r4 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec b>;

        $r3[1] = $r4;

        $r4 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec c>;

        $r3[2] = $r4;

        $r2 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List a(java.lang.Object[])>($r3);

        <com.squareup.okhttp.OkHttpClient: java.util.List y> = $r2;

        $r5 = new com.squareup.okhttp.OkHttpClient$1;

        specialinvoke $r5.<com.squareup.okhttp.OkHttpClient$1: void <init>()>();

        <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal b> = $r5;

        return;
    }

    public void <init>()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.ArrayList $r1;
        com.squareup.okhttp.internal.RouteDatabase $r2;
        com.squareup.okhttp.Dispatcher $r3;
        int varReplacer3750, varReplacer3751, varReplacer3752, varReplacer3753, varReplacer3754, varReplacer3755;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List e> = $r1;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List f> = $r1;

        varReplacer3755 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean r> = varReplacer3755;

        varReplacer3752 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean s> = varReplacer3752;

        varReplacer3751 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean t> = varReplacer3751;

        varReplacer3754 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int u> = varReplacer3754;

        varReplacer3753 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int v> = varReplacer3753;

        varReplacer3750 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int w> = varReplacer3750;

        $r2 = new com.squareup.okhttp.internal.RouteDatabase;

        specialinvoke $r2.<com.squareup.okhttp.internal.RouteDatabase: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase A> = $r2;

        $r3 = new com.squareup.okhttp.Dispatcher;

        specialinvoke $r3.<com.squareup.okhttp.Dispatcher: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher a> = $r3;

        return;
    }

    private void <init>(com.squareup.okhttp.OkHttpClient)
    {
        com.squareup.okhttp.OkHttpClient $r0, $r1;
        java.util.ArrayList $r2;
        com.squareup.okhttp.internal.RouteDatabase $r3;
        com.squareup.okhttp.Dispatcher $r4;
        java.net.Proxy $r5;
        java.util.List $r6, $r7;
        java.net.ProxySelector $r8;
        java.net.CookieHandler $r9;
        com.squareup.okhttp.Cache $r10;
        com.squareup.okhttp.internal.InternalCache $r11;
        javax.net.SocketFactory $r12;
        javax.net.ssl.SSLSocketFactory $r13;
        javax.net.ssl.HostnameVerifier $r14;
        com.squareup.okhttp.CertificatePinner $r15;
        com.squareup.okhttp.Authenticator $r16;
        com.squareup.okhttp.ConnectionPool $r17;
        com.squareup.okhttp.Dns $r18;
        boolean $z0;
        int $i0, varReplacer6406, varReplacer6407, varReplacer6408, varReplacer6409, varReplacer6410, varReplacer6411;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List e> = $r2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List f> = $r2;

        varReplacer6410 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean r> = varReplacer6410;

        varReplacer6408 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean s> = varReplacer6408;

        varReplacer6406 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean t> = varReplacer6406;

        varReplacer6411 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int u> = varReplacer6411;

        varReplacer6409 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int v> = varReplacer6409;

        varReplacer6407 = 10000;

        $r0.<com.squareup.okhttp.OkHttpClient: int w> = varReplacer6407;

        $r3 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase A>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase A> = $r3;

        $r4 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher a>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher a> = $r4;

        $r5 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.Proxy b>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.Proxy b> = $r5;

        $r6 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List c>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List c> = $r6;

        $r6 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List d>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List d> = $r6;

        $r6 = $r0.<com.squareup.okhttp.OkHttpClient: java.util.List e>;

        $r7 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List e>;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r6 = $r0.<com.squareup.okhttp.OkHttpClient: java.util.List f>;

        $r7 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List f>;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r8 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector g>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector g> = $r8;

        $r9 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler h>;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler h> = $r9;

        $r10 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache j>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache j> = $r10;

        $r10 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache j>;

        if $r10 == null goto label2;

        $r10 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache j>;

        $r11 = $r10.<com.squareup.okhttp.Cache: com.squareup.okhttp.internal.InternalCache a>;

     label1:
        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache i> = $r11;

        $r12 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory k>;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory k> = $r12;

        $r13 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory l>;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory l> = $r13;

        $r14 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier m>;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier m> = $r14;

        $r15 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner n>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner n> = $r15;

        $r16 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator o>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator o> = $r16;

        $r17 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool p>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool p> = $r17;

        $r18 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dns q>;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dns q> = $r18;

        $z0 = $r1.<com.squareup.okhttp.OkHttpClient: boolean r>;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean r> = $z0;

        $z0 = $r1.<com.squareup.okhttp.OkHttpClient: boolean s>;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean s> = $z0;

        $z0 = $r1.<com.squareup.okhttp.OkHttpClient: boolean t>;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean t> = $z0;

        $i0 = $r1.<com.squareup.okhttp.OkHttpClient: int u>;

        $r0.<com.squareup.okhttp.OkHttpClient: int u> = $i0;

        $i0 = $r1.<com.squareup.okhttp.OkHttpClient: int v>;

        $r0.<com.squareup.okhttp.OkHttpClient: int v> = $i0;

        $i0 = $r1.<com.squareup.okhttp.OkHttpClient: int w>;

        $r0.<com.squareup.okhttp.OkHttpClient: int w> = $i0;

        return;

     label2:
        $r11 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache i>;

        goto label1;
    }

    private javax.net.ssl.SSLSocketFactory c()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.SSLSocketFactory $r1;
        javax.net.ssl.SSLContext $r2;
        java.lang.Throwable $r3, $r5;
        java.lang.AssertionError $r4;
        java.lang.String varReplacer6412;
        null_type varReplacer6413, varReplacer6414, varReplacer6415;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        entermonitor $r0;

     label1:
        $r1 = <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory z>;

     label2:
        if $r1 != null goto label5;

     label3:
        varReplacer6412 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6412);

        varReplacer6413 = null;

        varReplacer6414 = null;

        varReplacer6415 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6413, varReplacer6413, varReplacer6413);

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label4:
        <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory z> = $r1;

     label5:
        $r1 = <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory z>;

     label6:
        exitmonitor $r0;

        return $r1;

     label7:
        $r3 := @caughtexception;

     label8:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label9:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.security.GeneralSecurityException from label3 to label4 with label7;
        catch java.lang.Throwable from label3 to label5 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    public final com.squareup.okhttp.Call a(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.Call $r2;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r2 = new com.squareup.okhttp.Call;

        specialinvoke $r2.<com.squareup.okhttp.Call: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request)>($r0, $r1);

        return $r2;
    }

    final com.squareup.okhttp.OkHttpClient a()
    {
        com.squareup.okhttp.OkHttpClient $r0, $r1;
        java.net.ProxySelector $r2;
        java.net.CookieHandler $r3;
        javax.net.SocketFactory $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        javax.net.ssl.HostnameVerifier $r6;
        com.squareup.okhttp.internal.tls.OkHostnameVerifier $r7;
        com.squareup.okhttp.CertificatePinner $r8;
        com.squareup.okhttp.Authenticator $r9;
        com.squareup.okhttp.ConnectionPool $r10;
        java.util.List $r11;
        com.squareup.okhttp.Dns $r12;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 = new com.squareup.okhttp.OkHttpClient;

        specialinvoke $r1.<com.squareup.okhttp.OkHttpClient: void <init>(com.squareup.okhttp.OkHttpClient)>($r0);

        $r2 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector g>;

        if $r2 != null goto label01;

        $r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector g> = $r2;

     label01:
        $r3 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler h>;

        if $r3 != null goto label02;

        $r3 = staticinvoke <java.net.CookieHandler: java.net.CookieHandler getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler h> = $r3;

     label02:
        $r4 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory k>;

        if $r4 != null goto label03;

        $r4 = staticinvoke <javax.net.SocketFactory: javax.net.SocketFactory getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory k> = $r4;

     label03:
        $r5 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory l>;

        if $r5 != null goto label04;

        $r5 = specialinvoke $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory c()>();

        $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory l> = $r5;

     label04:
        $r6 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier m>;

        if $r6 != null goto label05;

        $r7 = <com.squareup.okhttp.internal.tls.OkHostnameVerifier: com.squareup.okhttp.internal.tls.OkHostnameVerifier a>;

        $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier m> = $r7;

     label05:
        $r8 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner n>;

        if $r8 != null goto label06;

        $r8 = <com.squareup.okhttp.CertificatePinner: com.squareup.okhttp.CertificatePinner a>;

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.CertificatePinner n> = $r8;

     label06:
        $r9 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator o>;

        if $r9 != null goto label07;

        $r9 = <com.squareup.okhttp.internal.http.AuthenticatorAdapter: com.squareup.okhttp.Authenticator a>;

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator o> = $r9;

     label07:
        $r10 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool p>;

        if $r10 != null goto label08;

        $r10 = staticinvoke <com.squareup.okhttp.ConnectionPool: com.squareup.okhttp.ConnectionPool a()>();

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool p> = $r10;

     label08:
        $r11 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List c>;

        if $r11 != null goto label09;

        $r11 = <com.squareup.okhttp.OkHttpClient: java.util.List x>;

        $r1.<com.squareup.okhttp.OkHttpClient: java.util.List c> = $r11;

     label09:
        $r11 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List d>;

        if $r11 != null goto label10;

        $r11 = <com.squareup.okhttp.OkHttpClient: java.util.List y>;

        $r1.<com.squareup.okhttp.OkHttpClient: java.util.List d> = $r11;

     label10:
        $r12 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dns q>;

        if $r12 != null goto label11;

        $r12 = <com.squareup.okhttp.Dns: com.squareup.okhttp.Dns a>;

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dns q> = $r12;

     label11:
        return $r1;
    }

    public final com.squareup.okhttp.OkHttpClient a(com.squareup.okhttp.Cache)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Cache $r1;
        null_type varReplacer5167;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Cache;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache j> = $r1;

        varReplacer5167 = null;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache i> = varReplacer5167;

        return $r0;
    }

    public final com.squareup.okhttp.OkHttpClient a(java.lang.Object)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.lang.Object $r1;
        com.squareup.okhttp.Dispatcher $r2;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher a>;

        virtualinvoke $r2.<com.squareup.okhttp.Dispatcher: void a(java.lang.Object)>($r1);

        return $r0;
    }

    public final com.squareup.okhttp.OkHttpClient a(java.util.List)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.List $r1;
        com.squareup.okhttp.Protocol $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.util.List;

        $r1 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List a(java.util.List)>($r1);

        $r2 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol b>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("protocols doesn\'t contain http/1.1: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $r2 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol a>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("protocols must not contain http/1.0: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label2:
        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(null);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("protocols must not contain null");

        throw $r3;

     label3:
        $r1 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List a(java.util.List)>($r1);

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List c> = $r1;

        return $r0;
    }

    public final void a(long, java.util.concurrent.TimeUnit)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r1;
        byte $b2;
        java.lang.IllegalArgumentException $r2;
        int $i3;
        java.lang.String varReplacer5155, varReplacer5156, varReplacer5157, varReplacer5158;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5155 = "timeout < 0";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5155);

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5156 = "unit == null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5156);

        throw $r2;

     label2:
        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $b2 = $l1 cmp 2147483647L;

        if $b2 <= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5157 = "Timeout too large.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5157);

        throw $r2;

     label3:
        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5158 = "Timeout too small.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5158);

        throw $r2;

     label4:
        $i3 = (int) $l1;

        $r0.<com.squareup.okhttp.OkHttpClient: int u> = $i3;

        return;
    }

    public final com.squareup.okhttp.OkHttpClient b()
    {
        com.squareup.okhttp.OkHttpClient $r0, $r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 = new com.squareup.okhttp.OkHttpClient;

        specialinvoke $r1.<com.squareup.okhttp.OkHttpClient: void <init>(com.squareup.okhttp.OkHttpClient)>($r0);

        return $r1;
    }

    public final void b(long, java.util.concurrent.TimeUnit)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r1;
        byte $b2;
        java.lang.IllegalArgumentException $r2;
        int $i3;
        java.lang.String varReplacer5159, varReplacer5160, varReplacer5161, varReplacer5162;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5159 = "timeout < 0";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5159);

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5162 = "unit == null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5162);

        throw $r2;

     label2:
        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $b2 = $l1 cmp 2147483647L;

        if $b2 <= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5161 = "Timeout too large.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5161);

        throw $r2;

     label3:
        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5160 = "Timeout too small.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5160);

        throw $r2;

     label4:
        $i3 = (int) $l1;

        $r0.<com.squareup.okhttp.OkHttpClient: int v> = $i3;

        return;
    }

    public final void c(long, java.util.concurrent.TimeUnit)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        long $l0, $l1;
        java.util.concurrent.TimeUnit $r1;
        byte $b2;
        java.lang.IllegalArgumentException $r2;
        int $i3;
        java.lang.String varReplacer5163, varReplacer5164, varReplacer5165, varReplacer5166;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b2 = $l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5163 = "timeout < 0";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5163);

        throw $r2;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5165 = "unit == null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5165);

        throw $r2;

     label2:
        $l1 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>($l0);

        $b2 = $l1 cmp 2147483647L;

        if $b2 <= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5164 = "Timeout too large.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5164);

        throw $r2;

     label3:
        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label4;

        $b2 = $l0 cmp 0L;

        if $b2 <= 0 goto label4;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer5166 = "Timeout too small.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer5166);

        throw $r2;

     label4:
        $i3 = (int) $l1;

        $r0.<com.squareup.okhttp.OkHttpClient: int w> = $i3;

        return;
    }

    public java.lang.Object clone()
    {
        com.squareup.okhttp.OkHttpClient $r0;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r0 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient b()>();

        return $r0;
    }
}
