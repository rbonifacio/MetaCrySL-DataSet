public final class com.paypal.android.sdk.y extends java.lang.Object
{
    private static java.lang.String a;
    private java.lang.String b;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        nop;

        $r1 = class "Lcom/paypal/android/sdk/y;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.paypal.android.sdk.y: java.lang.String a> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.paypal.android.sdk.y $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: com.paypal.android.sdk.y;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.paypal.android.sdk.y: java.lang.String b> = $r1;

        return;
    }

    private static java.lang.String a(java.lang.Exception)
    {
        java.lang.Exception $r0;
        java.lang.String $r1, $r2;
        null_type varReplacer13123;

        nop;

        $r0 := @parameter0: java.lang.Exception;

        $r2 = <com.paypal.android.sdk.y: java.lang.String a>;

        $r1 = virtualinvoke $r0.<java.lang.Exception: java.lang.String getMessage()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, $r1);

        varReplacer13123 = null;

        return varReplacer13123;
    }

    public final java.lang.String a(java.lang.String)
    {
        com.paypal.android.sdk.y $r0;
        java.lang.String $r1, $r3;
        javax.crypto.spec.DESKeySpec $r2, r15;
        byte[] $r4;
        javax.crypto.SecretKeyFactory $r5;
        javax.crypto.SecretKey $r6;
        javax.crypto.Cipher $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.Exception r16;
        null_type varReplacer13125;

        nop;

        $r0 := @this: com.paypal.android.sdk.y;

        $r1 := @parameter0: java.lang.String;

        varReplacer13125 = null;

        return varReplacer13125;
    }

    public final java.lang.String b(java.lang.String)
    {
        com.paypal.android.sdk.y $r0;
        java.lang.String $r1, $r3, varReplacer13117, varReplacer13120, varReplacer13121;
        javax.crypto.spec.DESKeySpec $r2, r15;
        byte[] $r4;
        javax.crypto.SecretKeyFactory $r5;
        javax.crypto.SecretKey $r6;
        javax.crypto.Cipher $r7;
        java.lang.Throwable $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        java.lang.Exception r16;
        int varReplacer13118, varReplacer13119;
        null_type varReplacer13122;

        nop;

        $r0 := @this: com.paypal.android.sdk.y;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label01;

        varReplacer13122 = null;

        return varReplacer13122;

     label01:
        r15 = new javax.crypto.spec.DESKeySpec;

        $r2 = r15;

        $r3 = $r0.<com.paypal.android.sdk.y: java.lang.String b>;

     label02:
        varReplacer13121 = "UTF8";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer13121);

        specialinvoke r15.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r4);

        varReplacer13117 = "DES";

        $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13117);

        $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2);

        varReplacer13118 = 0;

        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, varReplacer13118);

        varReplacer13120 = "DES";

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13120);

        varReplacer13119 = 2;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer13119, $r6);

        $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

     label03:
        $r3 = new java.lang.String;

     label04:
        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r4);

     label05:
        return $r3;

     label06:
        $r8 := @caughtexception;

        r16 = (java.lang.Exception) $r8;

        $r1 = staticinvoke <com.paypal.android.sdk.y: java.lang.String a(java.lang.Exception)>(r16);

        return $r1;

     label07:
        $r9 := @caughtexception;

        r16 = (java.lang.Exception) $r9;

        $r1 = staticinvoke <com.paypal.android.sdk.y: java.lang.String a(java.lang.Exception)>(r16);

        return $r1;

     label08:
        $r10 := @caughtexception;

        r16 = (java.lang.Exception) $r10;

        $r1 = staticinvoke <com.paypal.android.sdk.y: java.lang.String a(java.lang.Exception)>(r16);

        return $r1;

     label09:
        $r11 := @caughtexception;

        r16 = (java.lang.Exception) $r11;

        $r1 = staticinvoke <com.paypal.android.sdk.y: java.lang.String a(java.lang.Exception)>(r16);

        return $r1;

     label10:
        $r12 := @caughtexception;

        r16 = (java.lang.Exception) $r12;

        $r1 = staticinvoke <com.paypal.android.sdk.y: java.lang.String a(java.lang.Exception)>(r16);

        return $r1;

     label11:
        $r13 := @caughtexception;

        r16 = (java.lang.Exception) $r13;

        $r1 = staticinvoke <com.paypal.android.sdk.y: java.lang.String a(java.lang.Exception)>(r16);

        return $r1;

     label12:
        $r14 := @caughtexception;

        r16 = (java.lang.Exception) $r14;

        $r1 = staticinvoke <com.paypal.android.sdk.y: java.lang.String a(java.lang.Exception)>(r16);

        return $r1;

        catch java.security.InvalidKeyException from label02 to label03 with label06;
        catch java.security.InvalidKeyException from label04 to label05 with label06;
        catch java.io.UnsupportedEncodingException from label02 to label03 with label07;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label07;
        catch java.security.spec.InvalidKeySpecException from label02 to label03 with label08;
        catch java.security.spec.InvalidKeySpecException from label04 to label05 with label08;
        catch java.security.NoSuchAlgorithmException from label02 to label03 with label09;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label09;
        catch javax.crypto.BadPaddingException from label02 to label03 with label10;
        catch javax.crypto.BadPaddingException from label04 to label05 with label10;
        catch javax.crypto.NoSuchPaddingException from label02 to label03 with label11;
        catch javax.crypto.NoSuchPaddingException from label04 to label05 with label11;
        catch javax.crypto.IllegalBlockSizeException from label02 to label03 with label12;
        catch javax.crypto.IllegalBlockSizeException from label04 to label05 with label12;
    }
}
