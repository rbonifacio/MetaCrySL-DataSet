Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1514)
		Method: <com.google.ads.conversiontracking.a: java.lang.String a(android.content.Context)>
		SHA-256: b1d0a5552c4e7f4d685769b1a3d5667034d577c79b1d10769ce8d9f44150bba4
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.Mac
		Statement: $r16 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4347)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: 6a8f444971ce01a0d80f4276734c48fe1b287ff2c1b91666df67935e145699dd
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzboo()>
		SHA-256: 6e12a7bb2b24475bd6745f5821ada3db111ba63ce3858525cd47bbf531156fea
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: 909c9be208b5de558dd460505e071fd5538daa1dad981e4386470d779b744154
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7630)
		Method: <com.evernote.clients.EvernoteUtil: byte[] hash(java.io.InputStream)>
		SHA-256: 157600a322d904f408c43dc4f67dc936f2832d7e42c88f37b457ecc7e6bbef22
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mazdigital.mazsdk.AmazonClientManager: byte[] computeMD5Hash(byte[])>
		SHA-256: a8cb464c86a204401b04f54280e9fc5967c279b70ebd163b988cc267953315b6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8344)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 345f1ba767f914c52f3a2a2665b24935020dd10ad446b91600786e281840f7e8
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r1)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: 488b88b3f688420287b7604652189a59811a12f76fd341846335258d549bee3a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2638)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: 49ca41d716c94efba7cf2ba07597f514751f2030f6d6053175940765852c010d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4360)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: byte[] computeMD5Hash(byte[])>
		SHA-256: 5fd2226ac8e6cc8a089297e96830bc7144e9d0a104795bb40fe8e708dd63ea79
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzkv(java.lang.String)>
		SHA-256: 4b0a8f6cb5756ba3a33be755f09732973db48f869275eade9d6df208f3cd420f
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r16.<javax.crypto.Mac: byte[] doFinal(byte[])>($r10)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: a1c5710c24dc81a6f9480b1893d8dc24a8f8395b7ec03734ba415bd3b41464e0
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2636)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: a4aeeeb1ec4b1e764a371792f05f82e56d4ed4e38c19ce5eb750040e6b43c8c3
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer8386)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzboo()>
		SHA-256: df82df1a1066b095dfbd19857e517add7004326bc850d0b62a6f07de7a7fac27
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.evernote.clients.EvernoteUtil: byte[] hash(java.io.InputStream)>
		SHA-256: 9cb79236a130da63ec31076c909321853fc0ee1c32fbfeb3c0e2486a7553453d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: varReplacer2636
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2636)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: cd0a5225ff9597f8916bfde35df7839b12451eb2e796ed5c798c5dc0cb2fdf1e
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.conversiontracking.a: java.lang.String a(android.content.Context)>
		SHA-256: bd6e8124add6e4635d892f43581b08341b21b261205ec0e1e3ee57d9a1c2bed9
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r1)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: ba800de4ee400f0d8212c55c8fba85bbea2ad894911c956996d81af351be7fa0
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true

Findings in Java Class: com.google.ads.conversiontracking.a

	 in Method: java.lang.String a(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b1d0a5552c4e7f4d685769b1a3d5667034d577c79b1d10769ce8d9f44150bba4)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1514)


Findings in Java Class: com.mazdigital.mazsdk.StreamUtils

	 in Method: java.lang.String decrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #49ca41d716c94efba7cf2ba07597f514751f2030f6d6053175940765852c010d)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CBC, CTS, CTR, CFB}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2638)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2636)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2637, $r4)


Findings in Java Class: com.mazdigital.mazsdk.AmazonClientManager

	 in Method: byte[] computeMD5Hash(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5fd2226ac8e6cc8a089297e96830bc7144e9d0a104795bb40fe8e708dd63ea79)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4360)


	 in Method: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r1)


Findings in Java Class: com.evernote.clients.EvernoteUtil

	 in Method: byte[] hash(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #157600a322d904f408c43dc4f67dc936f2832d7e42c88f37b457ecc7e6bbef22)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #157600a322d904f408c43dc4f67dc936f2832d7e42c88f37b457ecc7e6bbef22)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7630)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #345f1ba767f914c52f3a2a2665b24935020dd10ad446b91600786e281840f7e8)
			First parameter (with value "SHA1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8344)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 23

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 6
	TypestateError: 1
=====================================================================