public class com.niceplay.niceplayevent.NPOpenIDHttp extends android.os.AsyncTask
{
    private java.lang.String APIURL_TW;
    private java.lang.String ClientIP;
    private int Code;
    private java.lang.String CompanyName;
    private java.lang.String ENCRYPT_KEY;
    private java.lang.String GameName;
    private java.lang.String PrivateKey;
    private java.lang.String Ts;
    private java.lang.String UserID;
    private android.content.Context context;
    private java.util.List nameValuePairs;
    private com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener onOpenIdAuthServiceListener;
    private java.lang.String openid;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        com.niceplay.niceplayevent.NPOpenIDHttp $r0;
        java.lang.String $r1, $r2, $r3, $r4, varReplacer2589, varReplacer2590, varReplacer2591, varReplacer2592;

        nop;

        $r0 := @this: com.niceplay.niceplayevent.NPOpenIDHttp;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        specialinvoke $r0.<android.os.AsyncTask: void <init>()>();

        varReplacer2589 = "https://api.9splay.com/api/NicePlayOpenID";

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String APIURL_TW> = varReplacer2589;

        varReplacer2591 = "GOOGLE";

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String CompanyName> = varReplacer2591;

        varReplacer2592 = "";

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String PrivateKey> = varReplacer2592;

        varReplacer2590 = "9@a8i7Az";

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String ENCRYPT_KEY> = varReplacer2590;

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String openid> = $r1;

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String GameName> = $r2;

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String CompanyName> = $r3;

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String PrivateKey> = $r4;

        return;
    }

    public static java.lang.String MD5(java.lang.String)
    {
        java.lang.String $r0, varReplacer2607, varReplacer2608, varReplacer2609;
        byte[] $r1;
        java.lang.Exception $r2;
        java.lang.StringBuffer $r3;
        short $s0;
        java.security.MessageDigest $r4;
        char[] $r5;
        int $i1, $i2;
        char $c3;
        byte $b4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer2607 = "MD5";

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2607);

     label2:
        $r5 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $i1 = lengthof $r5;

        $r1 = newarray (byte)[$i1];

        $i1 = 0;

     label3:
        $i2 = lengthof $r5;

        if $i1 < $i2 goto label6;

        $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r1);

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $i1 = 0;

     label4:
        $i2 = lengthof $r1;

        if $i1 < $i2 goto label7;

        $r0 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label5:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        varReplacer2609 = "";

        return varReplacer2609;

     label6:
        $c3 = $r5[$i1];

        $b4 = (byte) $c3;

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label3;

     label7:
        $b4 = $r1[$i1];

        $s0 = $b4 & 255;

        if $s0 >= 16 goto label8;

        varReplacer2608 = "0";

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer2608);

     label8:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s0);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        $i1 = $i1 + 1;

        goto label4;

        catch java.lang.Exception from label1 to label2 with label5;
    }

    public static void OpenID(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        return;
    }

    protected transient volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.niceplay.niceplayevent.NPOpenIDHttp $r0;
        java.lang.String $r1;
        java.lang.Object[] $r2;
        java.lang.String[] $r3;

        nop;

        $r0 := @this: com.niceplay.niceplayevent.NPOpenIDHttp;

        $r2 := @parameter0: java.lang.Object[];

        $r3 = (java.lang.String[]) $r2;

        $r1 = virtualinvoke $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String doInBackground(java.lang.String[])>($r3);

        return $r1;
    }

    protected transient java.lang.String doInBackground(java.lang.String[])
    {
        com.niceplay.niceplayevent.NPOpenIDHttp $r0;
        java.lang.String[] $r1;
        long $l0;
        java.lang.String $r2, $r4, $r5, varReplacer2593, varReplacer2594, varReplacer2595, varReplacer2596, varReplacer2597, varReplacer2598, varReplacer2599, varReplacer2600, varReplacer2601, varReplacer2602, varReplacer2603, varReplacer2604, varReplacer2605, varReplacer2606;
        java.lang.StringBuilder $r3;
        java.util.ArrayList $r6;
        java.util.List $r7;
        org.apache.http.message.BasicNameValuePair $r8;

        nop;

        $r0 := @this: com.niceplay.niceplayevent.NPOpenIDHttp;

        $r1 := @parameter0: java.lang.String[];

        virtualinvoke $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: void getClientIP()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 / 1000L;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String Ts> = $r2;

        $r2 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String APIURL_TW>;

        $r3 = new java.lang.StringBuilder;

        $r4 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String CompanyName>;

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4);

        $r4 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String GameName>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String openid>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String Ts>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String PrivateKey>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String MD5(java.lang.String)>($r4);

        $r3 = new java.lang.StringBuilder;

        varReplacer2593 = "sign: CompanyName:";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2593);

        $r5 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String CompanyName>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer2596 = ",GameName: ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2596);

        $r5 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String GameName>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer2602 = ",openid: ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2602);

        $r5 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String openid>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2603 = "tag";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer2603, $r5);

        $r3 = new java.lang.StringBuilder;

        varReplacer2598 = "sign: APiURl:";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2598);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2594 = "tag";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer2594, $r5);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.util.List nameValuePairs> = $r6;

        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.util.List nameValuePairs>;

        $r8 = new org.apache.http.message.BasicNameValuePair;

        $r5 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String CompanyName>;

        varReplacer2601 = "CompanyName";

        specialinvoke $r8.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(varReplacer2601, $r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.util.List nameValuePairs>;

        $r8 = new org.apache.http.message.BasicNameValuePair;

        $r5 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String GameName>;

        varReplacer2599 = "GameName";

        specialinvoke $r8.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(varReplacer2599, $r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.util.List nameValuePairs>;

        $r8 = new org.apache.http.message.BasicNameValuePair;

        $r5 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String openid>;

        varReplacer2595 = "UserID";

        specialinvoke $r8.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(varReplacer2595, $r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.util.List nameValuePairs>;

        $r8 = new org.apache.http.message.BasicNameValuePair;

        $r5 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String ClientIP>;

        varReplacer2606 = "ClientIP";

        specialinvoke $r8.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(varReplacer2606, $r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.util.List nameValuePairs>;

        $r8 = new org.apache.http.message.BasicNameValuePair;

        $r5 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String Ts>;

        varReplacer2597 = "Ts";

        specialinvoke $r8.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(varReplacer2597, $r5);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.util.List nameValuePairs>;

        $r8 = new org.apache.http.message.BasicNameValuePair;

        varReplacer2604 = "sign";

        specialinvoke $r8.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(varReplacer2604, $r4);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.util.List nameValuePairs>;

        $r2 = virtualinvoke $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String getHtmlString(java.util.List,java.lang.String)>($r7, $r2);

        $r3 = new java.lang.StringBuilder;

        varReplacer2600 = "send result:   ";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2600);

        $r4 = virtualinvoke $r2.<java.lang.String: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2605 = "tag";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer2605, $r4);

        return $r2;
    }

    public void getClientIP()
    {
        com.niceplay.niceplayevent.NPOpenIDHttp $r0;
        java.lang.Throwable $r1;
        java.net.InetAddress $r2;
        java.lang.String $r3;
        java.net.UnknownHostException r4;

        nop;

        $r0 := @this: com.niceplay.niceplayevent.NPOpenIDHttp;

     label1:
        $r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

     label2:
        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String ClientIP> = $r3;

        return;

     label3:
        $r1 := @caughtexception;

        r4 = (java.net.UnknownHostException) $r1;

        virtualinvoke r4.<java.net.UnknownHostException: void printStackTrace()>();

        return;

        catch java.net.UnknownHostException from label1 to label2 with label3;
    }

    public java.lang.String getHtmlString(java.util.List, java.lang.String)
    {
        com.niceplay.niceplayevent.NPOpenIDHttp $r0;
        java.util.List $r1;
        java.lang.String $r2, varReplacer2610;
        org.apache.http.client.methods.HttpPost $r3;
        org.apache.http.impl.client.DefaultHttpClient $r4;
        java.lang.Exception $r5;
        int $i0;
        org.apache.http.client.entity.UrlEncodedFormEntity $r6;
        org.apache.http.HttpResponse $r7;
        org.apache.http.HttpEntity $r8;
        java.io.InputStream $r9;
        null_type varReplacer2611;

        nop;

        $r0 := @this: com.niceplay.niceplayevent.NPOpenIDHttp;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: java.lang.String;

        $r4 = new org.apache.http.impl.client.DefaultHttpClient;

     label01:
        specialinvoke $r4.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

     label02:
        $r3 = new org.apache.http.client.methods.HttpPost;

     label03:
        specialinvoke $r3.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r2);

     label04:
        if $r1 == null goto label08;

     label05:
        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

     label06:
        if $i0 <= 0 goto label08;

        $r6 = new org.apache.http.client.entity.UrlEncodedFormEntity;

     label07:
        varReplacer2610 = "UTF-8";

        specialinvoke $r6.<org.apache.http.client.entity.UrlEncodedFormEntity: void <init>(java.util.List,java.lang.String)>($r1, varReplacer2610);

        virtualinvoke $r3.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r6);

     label08:
        $r7 = interfaceinvoke $r4.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r3);

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label09:
        if $r8 == null goto label13;

     label10:
        $r9 = interfaceinvoke $r8.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r2 = virtualinvoke $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: java.lang.String getStringFromInputStream(java.io.InputStream)>($r9);

        virtualinvoke $r9.<java.io.InputStream: void close()>();

     label11:
        return $r2;

     label12:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace()>();

     label13:
        varReplacer2611 = null;

        return varReplacer2611;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    java.lang.String getStringFromInputStream(java.io.InputStream)
    {
        com.niceplay.niceplayevent.NPOpenIDHttp $r0;
        java.io.InputStream $r1;
        byte[] $r2;
        java.lang.Throwable $r3;
        java.io.ByteArrayOutputStream $r4, r5;
        int $i0, varReplacer2612;
        java.lang.String r6;
        java.io.IOException r7;
        null_type varReplacer2613;

        nop;

        $r0 := @this: com.niceplay.niceplayevent.NPOpenIDHttp;

        $r1 := @parameter0: java.io.InputStream;

        $r2 = newarray (byte)[1024];

        if $r1 != null goto label1;

        varReplacer2613 = null;

        return varReplacer2613;

     label1:
        r5 = new java.io.ByteArrayOutputStream;

        $r4 = r5;

        specialinvoke r5.<java.io.ByteArrayOutputStream: void <init>()>();

     label2:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r2);

     label3:
        if $i0 != -1 goto label5;

     label4:
        r6 = new java.lang.String;

        $r2 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke r6.<java.lang.String: void <init>(byte[])>($r2);

        return r6;

     label5:
        varReplacer2612 = 0;

        virtualinvoke $r4.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, varReplacer2612, $i0);

     label6:
        goto label2;

     label7:
        $r3 := @caughtexception;

        r7 = (java.io.IOException) $r3;

        virtualinvoke r7.<java.io.IOException: void printStackTrace()>();

        goto label4;

        catch java.io.IOException from label2 to label3 with label7;
        catch java.io.IOException from label5 to label6 with label7;
    }

    protected volatile void onPostExecute(java.lang.Object)
    {
        com.niceplay.niceplayevent.NPOpenIDHttp $r0;
        java.lang.Object $r1;
        java.lang.String $r2;

        $r0 := @this: com.niceplay.niceplayevent.NPOpenIDHttp;

        $r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.String) $r1;

        virtualinvoke $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: void onPostExecute(java.lang.String)>($r2);

        return;
    }

    protected void onPostExecute(java.lang.String)
    {
        com.niceplay.niceplayevent.NPOpenIDHttp $r0;
        java.lang.String $r1, $r5, $r6;
        org.json.JSONException $r2;
        org.json.JSONObject $r3;
        java.lang.StringBuilder $r4;
        int $i0;
        com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener $r7;

        $r0 := @this: com.niceplay.niceplayevent.NPOpenIDHttp;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<android.os.AsyncTask: void onPostExecute(java.lang.Object)>($r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("result:");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("tag", $r5);

        $r3 = new org.json.JSONObject;

     label01:
        specialinvoke $r3.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        $i0 = virtualinvoke $r3.<org.json.JSONObject: int getInt(java.lang.String)>("Code");

     label02:
        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: int Code> = $i0;

        $i0 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: int Code>;

        if $i0 != 1 goto label07;

     label03:
        $r1 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("UID");

        $r5 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Account");

        $r6 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Token");

     label04:
        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener onOpenIdAuthServiceListener>;

        $i0 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: int Code>;

     label05:
        interfaceinvoke $r7.<com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener: void onAuthServiceCompletion(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($i0, $r1, $r5, null, $r6, null);

     label06:
        return;

     label07:
        $i0 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: int Code>;

        if $i0 != 2 goto label13;

     label08:
        $r1 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("UID");

        $r5 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Token");

     label09:
        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener onOpenIdAuthServiceListener>;

        $i0 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: int Code>;

     label10:
        interfaceinvoke $r7.<com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener: void onAuthServiceCompletion(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($i0, $r1, null, null, $r5, null);

     label11:
        return;

     label12:
        $r2 := @caughtexception;

        virtualinvoke $r2.<org.json.JSONException: void printStackTrace()>();

        return;

     label13:
        $r1 = virtualinvoke $r3.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("Msg");

     label14:
        $r7 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener onOpenIdAuthServiceListener>;

        $i0 = $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: int Code>;

     label15:
        interfaceinvoke $r7.<com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener: void onAuthServiceCompletion(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($i0, null, null, null, null, $r1);

     label16:
        return;

        catch org.json.JSONException from label01 to label02 with label12;
        catch org.json.JSONException from label03 to label04 with label12;
        catch org.json.JSONException from label05 to label06 with label12;
        catch org.json.JSONException from label08 to label09 with label12;
        catch org.json.JSONException from label10 to label11 with label12;
        catch org.json.JSONException from label13 to label14 with label12;
        catch org.json.JSONException from label15 to label16 with label12;
    }

    public void setOnOpenIdAuthServiceListener(com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener)
    {
        com.niceplay.niceplayevent.NPOpenIDHttp $r0;
        com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener $r1;

        nop;

        $r0 := @this: com.niceplay.niceplayevent.NPOpenIDHttp;

        $r1 := @parameter0: com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener;

        $r0.<com.niceplay.niceplayevent.NPOpenIDHttp: com.niceplay.niceplayevent.NPOpenIDHttp$OnOpenIdAuthServiceListener onOpenIdAuthServiceListener> = $r1;

        return;
    }
}
