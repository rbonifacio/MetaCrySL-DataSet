Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: a57b552f1f5a5ae3dec2c94fbcb56bd6fba7a2b1730b6b1e05a1d9a706bd6397
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: 70689dc977ebdfdd7bb3c2121cd13676312d3624e6f46f2100504b953dd6f8bb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1320)
		Method: <rm.com.android.sdk.data.utils.HttpManager: void trustAllHosts(java.lang.String)>
		SHA-256: fe772ca0b961d1c168eaa3e38bed0848e38f27febbfc38fc4b8662f3469c24c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1381)
		Method: <rm.com.android.sdk.data.utils.AES: java.lang.String SHA1(java.lang.String)>
		SHA-256: 852b88a876d3949192d079a0c8383e296a1bccc1126fd427de1c80a4e8f5e25b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1326)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: ee7352f304dc953da4e1dede38bbccbd6e000fb182108affcb4ae873986eafc6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: ab5e3da847a7acd234a3d361a1e2267d884b2a37b48442be8572884b3d3ca3f6
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1330)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: c789ac7fcf2320674799ee81d43bf3c1aa2022eeaad27922f458bdb21516241c
		Secure: false
	Object:
		Variable: r7
		Type: java.security.SecureRandom
		Statement: specialinvoke r7.<java.security.SecureRandom: void <init>()>()
		Method: <rm.com.android.sdk.data.utils.HttpManager: void trustAllHosts(java.lang.String)>
		SHA-256: 980cc57db710a1a44b6d6158f2a78e7a94bdea944549a0cc791066b487668975
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: 1c41bbf10d21b0d2111f0b97739d22914eb3ea748007ec051021d0839d5a7e99
		Secure: false
	Object:
		Variable: varReplacer1331
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1331)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: 90fb0a7c79d646c212b3e9735d0379d711a73290582baae68db503fead3e6b05
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1334)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: eeb13cb7458b8c4c46dd420ffbf7c9eaf84016b5791652dd120afed5cec5b9cc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1331)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: 639fb18939e8b9c47c2782c233b48b5bde72bfce536d5d22fb960cdc58cdd558
		Secure: false
	Object:
		Variable: varReplacer1330
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1330)
		Method: <rm.com.android.sdk.utils.RmEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: eabd312e70d56bf64bc16dd97d7af16cb83250c544ef7e861b8a6a704af5341d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <rm.com.android.sdk.data.utils.AES: java.lang.String SHA1(java.lang.String)>
		SHA-256: 5108e0e4a2c4cda5d6035edfa8d416998e89e1473d12fb3522b321d73553e6ad
		Secure: false

Findings in Java Class: rm.com.android.sdk.data.utils.HttpManager

	 in Method: void trustAllHosts(java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #fe772ca0b961d1c168eaa3e38bed0848e38f27febbfc38fc4b8662f3469c24c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1320)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1319, r8, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1319, r8, $r4)


Findings in Java Class: rm.com.android.sdk.data.utils.AES

	 in Method: java.lang.String SHA1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #852b88a876d3949192d079a0c8383e296a1bccc1126fd427de1c80a4e8f5e25b)
			First parameter (with value "SHA-1") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1381)


Findings in Java Class: rm.com.android.sdk.utils.RmEncryption

	 in Method: java.lang.String encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1328, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1328, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1330)


	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1332, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1331)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 9
	ConstraintError: 2
=====================================================================