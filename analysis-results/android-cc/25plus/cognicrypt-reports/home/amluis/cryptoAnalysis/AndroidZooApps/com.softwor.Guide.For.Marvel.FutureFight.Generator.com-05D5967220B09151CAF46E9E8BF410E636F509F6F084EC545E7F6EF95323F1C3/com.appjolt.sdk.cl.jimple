final class com.appjolt.sdk.cl extends java.lang.Object
{
    private static final java.lang.String a;
    private static final com.appjolt.sdk.cl d;
    private javax.crypto.spec.SecretKeySpec b;
    private javax.crypto.spec.IvParameterSpec c;

    static void <clinit>()
    {
        com.appjolt.sdk.cm $r0;
        java.lang.String $r1;
        java.lang.Class $r2;
        com.appjolt.sdk.cl $r3;

        nop;

        $r2 = class "Lcom/appjolt/sdk/cl;";

        $r1 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.appjolt.sdk.cl: java.lang.String a> = $r1;

        $r3 = new com.appjolt.sdk.cl;

        $r0 = new com.appjolt.sdk.cm;

        specialinvoke $r0.<com.appjolt.sdk.cm: void <init>()>();

        specialinvoke $r3.<com.appjolt.sdk.cl: void <init>(com.appjolt.sdk.cn)>($r0);

        <com.appjolt.sdk.cl: com.appjolt.sdk.cl d> = $r3;

        return;
    }

    private void <init>(com.appjolt.sdk.cn)
    {
        com.appjolt.sdk.cl $r0;
        com.appjolt.sdk.cn $r1;
        java.lang.String $r2, varReplacer62;
        byte[] $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        javax.crypto.spec.IvParameterSpec $r5;

        nop;

        $r0 := @this: com.appjolt.sdk.cl;

        $r1 := @parameter0: com.appjolt.sdk.cn;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke $r1.<com.appjolt.sdk.cn: java.lang.String a()>();

        $r3 = specialinvoke $r0.<com.appjolt.sdk.cl: byte[] f(java.lang.String)>($r2);

        $r4 = new javax.crypto.spec.SecretKeySpec;

        varReplacer62 = "AES";

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer62);

        $r0.<com.appjolt.sdk.cl: javax.crypto.spec.SecretKeySpec b> = $r4;

        $r5 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        $r0.<com.appjolt.sdk.cl: javax.crypto.spec.IvParameterSpec c> = $r5;

        return;
    }

    public static com.appjolt.sdk.cl a()
    {
        com.appjolt.sdk.cl r0;

        nop;

        r0 = <com.appjolt.sdk.cl: com.appjolt.sdk.cl d>;

        return r0;
    }

    public static transient boolean a(java.lang.String, java.lang.String[])
    {
        java.lang.String $r0, $r3;
        java.lang.String[] $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String[];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean matches(java.lang.String)>("^.*\\?.*$");

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\?", 2);

        $r0 = $r2[1];

        $z0 = staticinvoke <com.appjolt.sdk.utils.lang.k: boolean b(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label4;

        $i0 = lengthof $r1;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r3 = $r1[$i1];

        $z0 = virtualinvoke $r0.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label2;

        return 0;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    private byte[] f(java.lang.String)
    {
        com.appjolt.sdk.cl $r0;
        java.lang.String $r1, varReplacer68, varReplacer70;
        int $i0, $i1, varReplacer66, varReplacer67;
        byte[] $r2, $r3;
        java.lang.Throwable $r4;
        null_type varReplacer69;

        nop;

        $r0 := @this: com.appjolt.sdk.cl;

        $r1 := @parameter0: java.lang.String;

     label1:
        varReplacer68 = "UTF-8";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer68);

     label2:
        $r3 = newarray (byte)[16];

        $i1 = lengthof $r2;

        $i0 = lengthof $r3;

     label3:
        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        varReplacer66 = 0;

        varReplacer67 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer66, $r3, varReplacer66, $i0);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r1 = <com.appjolt.sdk.cl: java.lang.String a>;

        varReplacer70 = "unable to provide key..";

        staticinvoke <com.appjolt.sdk.utils.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer70, $r4);

        varReplacer69 = null;

        return varReplacer69;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    public android.net.Uri a(android.net.Uri)
    {
        com.appjolt.sdk.cl $r0;
        android.net.Uri $r1;
        java.lang.String $r2;

        $r0 := @this: com.appjolt.sdk.cl;

        $r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        $r2 = virtualinvoke $r0.<com.appjolt.sdk.cl: java.lang.String c(java.lang.String)>($r2);

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        return $r1;
    }

    public java.lang.String a(java.lang.String)
    {
        com.appjolt.sdk.cl $r0;
        java.lang.String $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.Cipher $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        byte[] $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        $r0 := @this: com.appjolt.sdk.cl;

        $r1 := @parameter0: java.lang.String;

     label01:
        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

     label02:
        $r4 = $r0.<com.appjolt.sdk.cl: javax.crypto.spec.SecretKeySpec b>;

        $r2 = $r0.<com.appjolt.sdk.cl: javax.crypto.spec.IvParameterSpec c>;

     label03:
        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r4, $r2);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r5, 0);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(?:\\r\\n|\\n\\r|\\n|\\r)", "");

     label04:
        return $r1;

     label05:
        $r6 := @caughtexception;

        $r1 = <com.appjolt.sdk.cl: java.lang.String a>;

        staticinvoke <com.appjolt.sdk.utils.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "unable to create cipher.", $r6);

     label06:
        return null;

     label07:
        $r7 := @caughtexception;

        $r1 = <com.appjolt.sdk.cl: java.lang.String a>;

        staticinvoke <com.appjolt.sdk.utils.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "unable to initialize cipher.", $r7);

        goto label06;

     label08:
        $r8 := @caughtexception;

        $r1 = <com.appjolt.sdk.cl: java.lang.String a>;

        staticinvoke <com.appjolt.sdk.utils.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "unable to create cipher.", $r8);

        goto label06;

     label09:
        $r9 := @caughtexception;

        $r1 = <com.appjolt.sdk.cl: java.lang.String a>;

        staticinvoke <com.appjolt.sdk.utils.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "unable to initialize cipher.", $r9);

        goto label06;

     label10:
        $r10 := @caughtexception;

        $r1 = <com.appjolt.sdk.cl: java.lang.String a>;

        staticinvoke <com.appjolt.sdk.utils.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "unable to cipher input text.", $r10);

        goto label06;

     label11:
        $r11 := @caughtexception;

        $r1 = <com.appjolt.sdk.cl: java.lang.String a>;

        staticinvoke <com.appjolt.sdk.utils.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "unable to cipher input text.", $r11);

        goto label06;

     label12:
        $r12 := @caughtexception;

        $r1 = <com.appjolt.sdk.cl: java.lang.String a>;

        staticinvoke <com.appjolt.sdk.utils.d: void b(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, "unable to cipher input text.", $r12);

        goto label06;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label07;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label07;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label08;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label08;
        catch java.security.InvalidKeyException from label01 to label02 with label09;
        catch java.security.InvalidKeyException from label03 to label04 with label09;
        catch javax.crypto.BadPaddingException from label01 to label02 with label10;
        catch javax.crypto.BadPaddingException from label03 to label04 with label10;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label11;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label11;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label12;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label12;
    }

    public android.net.Uri b(android.net.Uri)
    {
        com.appjolt.sdk.cl $r0;
        android.net.Uri $r1;
        java.lang.String $r2;

        $r0 := @this: com.appjolt.sdk.cl;

        $r1 := @parameter0: android.net.Uri;

        $r2 = virtualinvoke $r1.<android.net.Uri: java.lang.String toString()>();

        $r2 = virtualinvoke $r0.<com.appjolt.sdk.cl: java.lang.String e(java.lang.String)>($r2);

        $r1 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r2);

        return $r1;
    }

    public java.lang.String b(java.lang.String)
    {
        com.appjolt.sdk.cl $r0;
        java.lang.String $r1, $r5, varReplacer164, varReplacer165, varReplacer167;
        javax.crypto.Cipher $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        byte[] $r6;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8;
        int varReplacer162, varReplacer166;
        null_type varReplacer163;

        nop;

        $r0 := @this: com.appjolt.sdk.cl;

        $r1 := @parameter0: java.lang.String;

     label1:
        varReplacer164 = "AES/CBC/PKCS5Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer164);

        $r3 = $r0.<com.appjolt.sdk.cl: javax.crypto.spec.SecretKeySpec b>;

        $r4 = $r0.<com.appjolt.sdk.cl: javax.crypto.spec.IvParameterSpec c>;

        varReplacer162 = 2;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer162, $r3, $r4);

     label2:
        $r5 = new java.lang.String;

     label3:
        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer166 = 0;

        $r6 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r6, varReplacer166);

        $r6 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        varReplacer167 = "UTF-8";

        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r6, varReplacer167);

     label4:
        return $r5;

     label5:
        $r7 := @caughtexception;

        $r5 = <com.appjolt.sdk.cl: java.lang.String a>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer165 = "unable to decrypt text: ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer165);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.appjolt.sdk.utils.d: void e(java.lang.String,java.lang.String)>($r5, $r1);

        varReplacer163 = null;

        return varReplacer163;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.lang.String c(java.lang.String)
    {
        com.appjolt.sdk.cl $r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r4;
        java.lang.Exception $r5;

        $r0 := @this: com.appjolt.sdk.cl;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>("^.*\\?.*$");

        if $z0 == 0 goto label4;

        $r1 = staticinvoke <com.appjolt.sdk.utils.j: java.lang.String a(java.lang.String)>($r1);

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\?", 2);

        $r3 = $r2[1];

        $z0 = staticinvoke <com.appjolt.sdk.utils.lang.k: boolean b(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r2[0];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r0 = staticinvoke <com.appjolt.sdk.cl: com.appjolt.sdk.cl a()>();

        $r3 = $r2[1];

        $r3 = virtualinvoke $r0.<com.appjolt.sdk.cl: java.lang.String a(java.lang.String)>($r3);

        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, "UTF-8");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

     label4:
        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String d(java.lang.String)
    {
        com.appjolt.sdk.cl $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;

        $r0 := @this: com.appjolt.sdk.cl;

        $r1 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.appjolt.sdk.utils.j: java.lang.String a(java.lang.String)>($r1);

     label1:
        $r0 = staticinvoke <com.appjolt.sdk.cl: com.appjolt.sdk.cl a()>();

        $r1 = virtualinvoke $r0.<com.appjolt.sdk.cl: java.lang.String a(java.lang.String)>($r1);

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        return "Encrypt Exception";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String e(java.lang.String)
    {
        com.appjolt.sdk.cl $r0;
        java.lang.String $r1, $r3;
        boolean $z0;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r4;
        java.lang.Exception $r5;

        $r0 := @this: com.appjolt.sdk.cl;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>("^.*\\?.*$");

        if $z0 == 0 goto label4;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\?", 2);

        $r3 = $r2[1];

        $z0 = staticinvoke <com.appjolt.sdk.utils.lang.k: boolean b(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label4;

        $r4 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = $r2[0];

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r0 = staticinvoke <com.appjolt.sdk.cl: com.appjolt.sdk.cl a()>();

        $r3 = $r2[1];

        $r3 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r3, "UTF-8");

        $r3 = virtualinvoke $r0.<com.appjolt.sdk.cl: java.lang.String b(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

     label4:
        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
