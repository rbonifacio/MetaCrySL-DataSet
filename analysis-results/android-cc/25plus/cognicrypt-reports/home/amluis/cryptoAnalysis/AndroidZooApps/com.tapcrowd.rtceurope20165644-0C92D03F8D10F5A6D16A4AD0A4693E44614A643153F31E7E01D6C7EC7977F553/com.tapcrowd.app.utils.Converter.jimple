public class com.tapcrowd.app.utils.Converter extends java.lang.Object
{

    public void <init>()
    {
        com.tapcrowd.app.utils.Converter $r0;

        $r0 := @this: com.tapcrowd.app.utils.Converter;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static android.graphics.Bitmap RGB565toARGB888(android.graphics.Bitmap)
    {
        android.graphics.Bitmap $r0;
        int[] $r1;
        int $i0, $i1, $i2;
        android.graphics.Bitmap$Config $r2;

        $r0 := @parameter0: android.graphics.Bitmap;

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $i0 = $i0 * $i1;

        $r1 = newarray (int)[$i0];

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r0.<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>($r1, 0, $i0, 0, 0, $i1, $i2);

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        $r2 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        $r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i0, $i1, $r2);

        $i0 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke $r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke $r0.<android.graphics.Bitmap: int getHeight()>();

        virtualinvoke $r0.<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>($r1, 0, $i0, 0, 0, $i1, $i2);

        return $r0;
    }

    public static android.graphics.Bitmap blur(android.content.Context, android.graphics.Bitmap)
    {
        android.content.Context $r0;
        android.graphics.Bitmap $r1, $r2;
        int $i0, $i1;
        float $f0;
        android.renderscript.RenderScript $r3;
        android.renderscript.Element $r4;
        android.renderscript.ScriptIntrinsicBlur $r5;
        android.renderscript.Allocation $r6, $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.graphics.Bitmap;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<android.graphics.Bitmap: int getWidth()>();

        $f0 = (float) $i0;

        $f0 = $f0 * 0.4F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $i1 = virtualinvoke $r1.<android.graphics.Bitmap: int getHeight()>();

        $f0 = (float) $i1;

        $f0 = $f0 * 0.4F;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r1, $i0, $i1, 0);

        $r1 = staticinvoke <com.tapcrowd.app.utils.Converter: android.graphics.Bitmap RGB565toARGB888(android.graphics.Bitmap)>($r1);

        $r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>($r1);

        $r3 = staticinvoke <android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)>($r0);

        $r4 = staticinvoke <android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>($r3);

        $r5 = staticinvoke <android.renderscript.ScriptIntrinsicBlur: android.renderscript.ScriptIntrinsicBlur create(android.renderscript.RenderScript,android.renderscript.Element)>($r3, $r4);

        $r6 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>($r3, $r1);

        $r7 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>($r3, $r2);

        virtualinvoke $r5.<android.renderscript.ScriptIntrinsicBlur: void setRadius(float)>(7.5F);

        virtualinvoke $r5.<android.renderscript.ScriptIntrinsicBlur: void setInput(android.renderscript.Allocation)>($r6);

        virtualinvoke $r5.<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation)>($r7);

        virtualinvoke $r7.<android.renderscript.Allocation: void copyTo(android.graphics.Bitmap)>($r2);

        return $r2;

     label1:
        return $r1;
    }

    public static int convertDpToPixel(float, android.content.Context)
    {
        float $f0, $f1;
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int $i0;

        nop;

        $f0 := @parameter0: float;

        $r0 := @parameter1: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        $f1 = (float) $i0;

        $f1 = $f1 / 160.0F;

        $f0 = $f0 * $f1;

        $i0 = (int) $f0;

        return $i0;
    }

    public static int dateToInt(int, int, int)
    {
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;
    }

    public static int dateToInt(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        java.lang.StringBuilder $r3;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i0;
    }

    public static java.lang.String dateToTimeAgo(java.util.Date)
    {
        java.util.Date $r0;
        double $d0, $d1;
        java.lang.Exception $r1;
        int $i0;
        long $l1;
        byte $b2;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.util.Date;

     label01:
        $l1 = virtualinvoke $r0.<java.util.Date: long getTime()>();

     label02:
        $l1 = $l1 / 1000L;

        $d0 = (double) $l1;

     label03:
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

     label04:
        $r0 = new java.util.Date;

     label05:
        specialinvoke $r0.<java.util.Date: void <init>()>();

        $l1 = virtualinvoke $r0.<java.util.Date: long getTime()>();

     label06:
        $l1 = $l1 / 1000L;

        $d1 = (double) $l1;

     label07:
        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d1);

     label08:
        $d0 = $d1 - $d0;

        $b2 = $d0 cmpg 0.0;

        if $b2 >= 0 goto label09;

        return "...";

     label09:
        $b2 = $d0 cmpl 0.0;

        if $b2 != 0 goto label10;

        return "now";

     label10:
        $b2 = $d0 cmpg 60.0;

        if $b2 >= 0 goto label15;

        $r2 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label12:
        $i0 = (int) $d0;

     label13:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        return $r3;

     label15:
        $b2 = $d0 cmpg 3600.0;

        if $b2 >= 0 goto label22;

        $r2 = new java.lang.StringBuilder;

     label16:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label17:
        $d0 = $d0 / 60.0;

     label18:
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

     label19:
        $i0 = (int) $d0;

     label20:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("m");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        return $r3;

     label22:
        $b2 = $d0 cmpg 86400.0;

        if $b2 >= 0 goto label29;

        $r2 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label24:
        $d0 = $d0 / 3600.0;

     label25:
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

     label26:
        $i0 = (int) $d0;

     label27:
        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("h");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label28:
        return $r3;

     label29:
        $d0 = $d0 / 86400.0;

     label30:
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

     label31:
        $i0 = (int) $d0;

        if $i0 != 1 goto label32;

        return "1d";

     label32:
        $r2 = new java.lang.StringBuilder;

     label33:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label34:
        return $r3;

     label35:
        $r1 := @caughtexception;

        return "";

        catch java.lang.Exception from label01 to label02 with label35;
        catch java.lang.Exception from label03 to label04 with label35;
        catch java.lang.Exception from label05 to label06 with label35;
        catch java.lang.Exception from label07 to label08 with label35;
        catch java.lang.Exception from label11 to label12 with label35;
        catch java.lang.Exception from label13 to label14 with label35;
        catch java.lang.Exception from label16 to label17 with label35;
        catch java.lang.Exception from label18 to label19 with label35;
        catch java.lang.Exception from label20 to label21 with label35;
        catch java.lang.Exception from label23 to label24 with label35;
        catch java.lang.Exception from label25 to label26 with label35;
        catch java.lang.Exception from label27 to label28 with label35;
        catch java.lang.Exception from label30 to label31 with label35;
        catch java.lang.Exception from label33 to label34 with label35;
    }

    public static java.lang.String datesToString(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.util.Date $r1, $r2;
        java.text.SimpleDateFormat $r3;
        java.lang.String $r4, $r5, $r6;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: android.content.Context;

        $r4 := @parameter1: java.lang.String;

        $r5 := @parameter2: java.lang.String;

        if $r4 == null goto label3;

        if $r5 == null goto label3;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("1970-01-01");

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "");

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("-", "");

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(6, 8);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r1 = new java.util.Date;

        $i0 = $i0 + -1900;

        $i1 = $i1 + -1;

        specialinvoke $r1.<java.util.Date: void <init>(int,int,int)>($i0, $i1, $i2);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, 4);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(4, 6);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(6, 8);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r2 = new java.util.Date;

        $i0 = $i0 + -1900;

        $i1 = $i1 + -1;

        specialinvoke $r2.<java.util.Date: void <init>(int,int,int)>($i0, $i1, $i2);

        $r3 = new java.text.SimpleDateFormat;

        specialinvoke $r3.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("dd MMMM yyyy");

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label2;

        $r4 = staticinvoke <com.tapcrowd.app.utils.Dateparser: java.lang.String toDate(android.content.Context,java.util.Date)>($r0, $r1);

        return $r4;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = staticinvoke <com.tapcrowd.app.utils.Dateparser: java.lang.String toDate(android.content.Context,java.util.Date)>($r0, $r1);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r4 = staticinvoke <com.tapcrowd.app.utils.Dateparser: java.lang.String toDate(android.content.Context,java.util.Date)>($r0, $r2);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label3:
        return "";
    }

    public static java.lang.String getInitial(java.lang.String)
    {
        int $i0, $i1, $i2;
        java.lang.String $r0, $r1;
        java.util.Locale $r2;
        java.lang.String[] $r3;
        java.lang.StringBuilder $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = "";

        if $r0 != null goto label1;

        $r0 = "";

     label1:
        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2);

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $i1 = 0;

        $i0 = lengthof $r3;

     label2:
        if $i1 >= $i0 goto label5;

        $r0 = $r3[$i1];

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 != 0 goto label4;

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = $r3[$i1];

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = $r0;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i2 < 2 goto label3;

        return $r0;

     label5:
        return $r1;
    }

    public static java.lang.String intToTime(int)
    {
        int $i0, $i1;
        float $f0;
        java.lang.StringBuilder $r0;
        java.lang.String $r1, $r2;

        $i0 := @parameter0: int;

        $i1 = $i0 / 60;

        $f0 = (float) $i1;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f0);

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = $r1;

        $i1 = $i0 % 60;

        if $i1 >= 10 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i0 = $i0 % 60;

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer360;
        java.lang.Throwable $r1;
        int $i0, $i1, varReplacer358, varReplacer359;
        java.lang.StringBuilder $r2, r5;
        java.security.MessageDigest $r3;
        byte[] $r4;
        byte $b2;
        short $s3;
        char $c4;
        java.security.NoSuchAlgorithmException r6;
        null_type varReplacer361;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer360 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer360);

        virtualinvoke $r3.<java.security.MessageDigest: void reset()>();

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $i0 = lengthof $r4;

        r5 = new java.lang.StringBuilder;

        $r2 = r5;

        $i1 = $i0 << 1;

     label03:
        specialinvoke r5.<java.lang.StringBuilder: void <init>(int)>($i1);

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label10;

        $b2 = $r4[$i1];

        $s3 = $b2 & 240;

        $s3 = $s3 >> 4;

     label06:
        varReplacer359 = 16;

        $c4 = staticinvoke <java.lang.Character: char forDigit(int,int)>($s3, varReplacer359);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

     label07:
        $b2 = $r4[$i1];

        $b2 = $b2 & 15;

     label08:
        varReplacer358 = 16;

        $c4 = staticinvoke <java.lang.Character: char forDigit(int,int)>($b2, varReplacer358);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

     label09:
        $i1 = $i1 + 1;

        goto label05;

     label10:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        return $r0;

     label12:
        $r1 := @caughtexception;

        r6 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer361 = null;

        return varReplacer361;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label12;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label12;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label12;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label12;
    }

    public static java.lang.String timeAgoToTime(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        return null;
    }

    public static int timeToInt(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1;
        java.lang.String[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("h");

        $r0 = $r1[0];

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $r0 = $r1[1];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        $i1 = $i1 * 60;

        $i0 = $i1 + $i0;

        return $i0;
    }

    public static int timeToIntMin(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.String[] $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("h");

        $r0 = $r1[1];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i0;
    }

    public static java.lang.String timeToTimeAgo(java.lang.String)
    {
        java.lang.String $r0;
        java.util.Date $r1;
        java.lang.Exception $r2;
        double $d0, $d1;
        int $i0;
        long $l1;
        byte $b2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.util.Date;

     label01:
        specialinvoke $r1.<java.util.Date: void <init>(java.lang.String)>($r0);

        $l1 = virtualinvoke $r1.<java.util.Date: long getTime()>();

     label02:
        $l1 = $l1 / 1000L;

        $d0 = (double) $l1;

     label03:
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

     label04:
        $r1 = new java.util.Date;

     label05:
        specialinvoke $r1.<java.util.Date: void <init>()>();

        $l1 = virtualinvoke $r1.<java.util.Date: long getTime()>();

     label06:
        $l1 = $l1 / 1000L;

        $d1 = (double) $l1;

     label07:
        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d1);

     label08:
        $d0 = $d1 - $d0;

        $b2 = $d0 cmpg 0.0;

        if $b2 >= 0 goto label09;

        return "...";

     label09:
        $b2 = $d0 cmpl 0.0;

        if $b2 != 0 goto label10;

        return "now";

     label10:
        $b2 = $d0 cmpg 60.0;

        if $b2 >= 0 goto label15;

        $r3 = new java.lang.StringBuilder;

     label11:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label12:
        $i0 = (int) $d0;

     label13:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        return $r0;

     label15:
        $b2 = $d0 cmpg 3600.0;

        if $b2 >= 0 goto label22;

        $r3 = new java.lang.StringBuilder;

     label16:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label17:
        $d0 = $d0 / 60.0;

     label18:
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

     label19:
        $i0 = (int) $d0;

     label20:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("m");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        return $r0;

     label22:
        $b2 = $d0 cmpg 86400.0;

        if $b2 >= 0 goto label29;

        $r3 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label24:
        $d0 = $d0 / 3600.0;

     label25:
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

     label26:
        $i0 = (int) $d0;

     label27:
        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("h");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label28:
        return $r0;

     label29:
        $d0 = $d0 / 86400.0;

     label30:
        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

     label31:
        $i0 = (int) $d0;

        if $i0 != 1 goto label32;

        return "1d";

     label32:
        $r3 = new java.lang.StringBuilder;

     label33:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("d");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label34:
        return $r0;

     label35:
        $r2 := @caughtexception;

        return "";

        catch java.lang.Exception from label01 to label02 with label35;
        catch java.lang.Exception from label03 to label04 with label35;
        catch java.lang.Exception from label05 to label06 with label35;
        catch java.lang.Exception from label07 to label08 with label35;
        catch java.lang.Exception from label11 to label12 with label35;
        catch java.lang.Exception from label13 to label14 with label35;
        catch java.lang.Exception from label16 to label17 with label35;
        catch java.lang.Exception from label18 to label19 with label35;
        catch java.lang.Exception from label20 to label21 with label35;
        catch java.lang.Exception from label23 to label24 with label35;
        catch java.lang.Exception from label25 to label26 with label35;
        catch java.lang.Exception from label27 to label28 with label35;
        catch java.lang.Exception from label30 to label31 with label35;
        catch java.lang.Exception from label33 to label34 with label35;
    }

    public static java.lang.String unicodeToString(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        return $r0;

     label1:
        return "";
    }

    public static java.lang.String urlToName(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        return "";

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("");

        if $z0 == 0 goto label2;

        return "";

     label2:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("http://", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("tapcrowd.com", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("admin.", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("cache", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("/", "");

        return $r0;
    }
}
