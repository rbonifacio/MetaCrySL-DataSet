public class com.wunderlist.sdk.GoDaddySecurityContext extends java.lang.Object implements com.wunderlist.sdk.ISecurityContext
{
    private static final java.lang.String CERTPATH;

    public void <init>()
    {
        com.wunderlist.sdk.GoDaddySecurityContext $r0;

        nop;

        $r0 := @this: com.wunderlist.sdk.GoDaddySecurityContext;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.net.ssl.TrustManager[] getGoDaddyTrustmanager()
    {
        javax.net.ssl.TrustManagerFactory $r0;
        javax.net.ssl.TrustManager[] $r1;
        null_type varReplacer1822;

        nop;

        $r0 = staticinvoke <com.wunderlist.sdk.GoDaddySecurityContext: javax.net.ssl.TrustManagerFactory getPinnedTrustManagerFactory()>();

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        return $r1;

     label1:
        varReplacer1822 = null;

        return varReplacer1822;
    }

    private static java.security.cert.Certificate getGodaddyRoot()
    {
        java.io.BufferedInputStream $r0, r12;
        java.security.cert.Certificate $r1, $r5;
        java.security.cert.CertificateFactory $r2;
        java.lang.Class $r3;
        java.io.InputStream $r4;
        java.lang.StringBuilder $r6, r13;
        java.security.cert.X509Certificate $r7;
        java.security.Principal $r8;
        java.lang.String $r9, varReplacer1827, varReplacer1829, varReplacer1830;
        java.lang.Throwable $r10, $r11;
        java.lang.Exception r14;
        int varReplacer1828;

        nop;

        $r1 = null;

     label01:
        varReplacer1829 = "X.509";

        $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer1829);

     label02:
        r12 = new java.io.BufferedInputStream;

        $r0 = r12;

        $r3 = class "Lcom/wunderlist/sdk/GoDaddySecurityContext;";

     label03:
        varReplacer1827 = "/godaddy.cer";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(varReplacer1827);

        specialinvoke r12.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);

     label04:
        $r5 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r0);

     label05:
        $r1 = $r5;

     label06:
        r13 = new java.lang.StringBuilder;

     label07:
        $r6 = r13;

     label08:
        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        varReplacer1830 = "ca=";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1830);

        $r7 = (java.security.cert.X509Certificate) $r5;

        $r8 = virtualinvoke $r7.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1828 = 1;

        staticinvoke <com.wunderlist.sdk.Log: void debug(boolean,java.lang.String)>(varReplacer1828, $r9);

     label09:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label10:
        return $r5;

     label11:
        $r10 := @caughtexception;

     label12:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

        throw $r10;

     label13:
        $r11 := @caughtexception;

     label14:
        r14 = (java.lang.Exception) $r11;

        virtualinvoke r14.<java.lang.Exception: void printStackTrace()>();

        return $r1;

     label15:
        $r11 := @caughtexception;

        goto label14;

        catch java.security.cert.CertificateException from label01 to label02 with label13;
        catch java.security.cert.CertificateException from label03 to label04 with label13;
        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.security.cert.CertificateException from label09 to label10 with label13;
        catch java.security.cert.CertificateException from label12 to label13 with label13;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.io.IOException from label12 to label13 with label15;
    }

    public static javax.net.ssl.SSLContext getPinnedSSLContext()
    {
        javax.net.ssl.TrustManager[] $r0;
        javax.net.ssl.SSLContext $r1;
        java.lang.Throwable $r2;
        java.security.GeneralSecurityException r3;
        java.lang.String varReplacer1818;
        null_type varReplacer1819, varReplacer1820, varReplacer1821;

        nop;

        $r0 = staticinvoke <com.wunderlist.sdk.GoDaddySecurityContext: javax.net.ssl.TrustManager[] getGoDaddyTrustmanager()>();

        if $r0 == null goto label5;

     label1:
        varReplacer1818 = "TLS";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1818);

        varReplacer1819 = null;

        varReplacer1820 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1819, $r0, varReplacer1819);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

     label4:
        r3 = (java.security.GeneralSecurityException) $r2;

        virtualinvoke r3.<java.security.GeneralSecurityException: void printStackTrace()>();

     label5:
        varReplacer1821 = null;

        return varReplacer1821;

     label6:
        $r2 := @caughtexception;

        goto label4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.KeyManagementException from label1 to label2 with label6;
    }

    public static javax.net.ssl.TrustManagerFactory getPinnedTrustManagerFactory()
    {
        java.security.cert.Certificate $r0;
        java.lang.String $r1, varReplacer1826;
        java.security.KeyStore $r2;
        javax.net.ssl.TrustManagerFactory $r3;
        java.lang.Throwable $r4;
        java.lang.Exception r5;
        null_type varReplacer1823, varReplacer1824, varReplacer1825;

     label1:
        nop;

        $r0 = staticinvoke <com.wunderlist.sdk.GoDaddySecurityContext: java.security.cert.Certificate getGodaddyRoot()>();

        $r1 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1);

        varReplacer1823 = null;

        varReplacer1824 = null;

        virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer1823, varReplacer1823);

        varReplacer1826 = "ca";

        virtualinvoke $r2.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(varReplacer1826, $r0);

        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1);

        virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r2);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

     label4:
        r5 = (java.lang.Exception) $r4;

        virtualinvoke r5.<java.lang.Exception: void printStackTrace()>();

        varReplacer1825 = null;

        return varReplacer1825;

     label5:
        $r4 := @caughtexception;

        goto label4;

     label6:
        $r4 := @caughtexception;

        goto label4;

     label7:
        $r4 := @caughtexception;

        goto label4;

        catch java.security.cert.CertificateException from label1 to label2 with label6;
        catch java.io.IOException from label1 to label2 with label7;
        catch java.security.KeyStoreException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
    }

    public javax.net.ssl.SSLContext getSSLContext()
    {
        com.wunderlist.sdk.GoDaddySecurityContext $r0;
        javax.net.ssl.SSLContext $r1;

        nop;

        $r0 := @this: com.wunderlist.sdk.GoDaddySecurityContext;

        $r1 = staticinvoke <com.wunderlist.sdk.GoDaddySecurityContext: javax.net.ssl.SSLContext getPinnedSSLContext()>();

        return $r1;
    }

    public javax.net.ssl.TrustManagerFactory getTrustManagerFactory()
    {
        com.wunderlist.sdk.GoDaddySecurityContext $r0;
        javax.net.ssl.TrustManagerFactory $r1;

        $r0 := @this: com.wunderlist.sdk.GoDaddySecurityContext;

        $r1 = staticinvoke <com.wunderlist.sdk.GoDaddySecurityContext: javax.net.ssl.TrustManagerFactory getPinnedTrustManagerFactory()>();

        return $r1;
    }
}
