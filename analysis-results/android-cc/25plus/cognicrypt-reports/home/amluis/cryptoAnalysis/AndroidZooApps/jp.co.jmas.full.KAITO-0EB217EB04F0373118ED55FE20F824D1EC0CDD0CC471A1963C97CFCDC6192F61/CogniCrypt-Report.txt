Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <jp.co.cec.module.serverAction.ServerHttps: void <init>(android.content.Context,java.lang.String,java.lang.String[])>
		SHA-256: 5c20288382bcf0a1627715b310cf727c36369d6746bce4d31f3047df6489b5fb
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3331)
		Method: <ch.boye.httpclientandroidlib.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 2cfd33f96872e0bece181dd13670f0e179cac8da53bf6ce41a6cc3325f0f13be
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12129)
		Method: <org.mozilla.gecko.updater.UpdateService: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: d55146116dccc3cc5526e4c5c581752b4c5461f9ad9ea0a710b73ea1fdac8917
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6576)
		Method: <jp.co.cec.module.serverAction.MySSLSocketFactory: void <init>(android.content.Context,java.security.KeyStore,java.lang.String,java.lang.String[])>
		SHA-256: 76bc5e92e5fe7408258d6a6f763b88dffc75b7244477c4621ad9fd97e684f201
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)>
		SHA-256: 8d880835e7f352b72277cb342ada320ac4ef0e1cf4825b19c38a652440e84c82
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.cec_ltd.cloudappbase.util.libs.SubString: java.lang.String digestMd5(java.lang.String)>
		SHA-256: f8372a358335b2d34f602261a48f75c2b5cefa34d9201c9688bae9c3cc44ca11
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 2f3806df3da28fe0dd00b1490efaf1a439d9488f1b4544c31f1cc2a9107706a2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12661)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha256(byte[])>
		SHA-256: 6cbd0ea5786c9ea6f1a5dfc75f919af13ee14af7c70115941dc7bfa044ffb20c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10246)
		Method: <jp.co.jmas.full.KAITO.kaito.KAITODocProvider: byte[] getHash(byte[])>
		SHA-256: 3e564a20db9bb2bd07388fd1fde40047cb56425d3c8e28b0c07a436bdf9cbc50
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.mozilla.gecko.sync.Utils: void <clinit>()>
		SHA-256: 21751f7aecf1d291eda3d279cbf29dd85f2a1ab722649b63742a78fd41b9d237
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6489)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 74e6a354ac7711fbcdf73d64f0416ed929d7e85a29205b49bc63a2049b7470c2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6065)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 9bce0dc9cb309c907f43bd6fbcea539cd5c5b6def8dd95019bf93519354699c5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha1(java.lang.String)>
		SHA-256: ec199ae83a39452e9e22622462749cc1ea1e28d0822420c6bb51715a21643f77
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha256(byte[])>
		SHA-256: 9ced9c51c14331591363970df2ef4929fe6f001ffc3faa22cbe577fc8899fde4
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer12549)
		Method: <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)>
		SHA-256: 2818596057e25539e5488165d71ece765f3f45feb2e2ec98e25dc7bbbb1d71d1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6316)
		Method: <jp.co.cec_ltd.cloudappbase.util.libs.SubString: java.lang.String digestMd5(java.lang.String)>
		SHA-256: bc5da3634696654b32c5d2a4f08b63017bffc396bb1860fb54fe03b6533c9307
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.mozilla.gecko.sync.net.BaseResource: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()>
		SHA-256: 921527a4d56c9731eabbd204e7f3975b795533b68dde403bf13034be3bf0ecb6
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.mozilla.gecko.kaito.KAITOLoader: java.lang.String getSha1Digest(byte[])>
		SHA-256: ad4d8b5ab9fee2ddb62bb97c75692549f6435d0c3eda7f5c5cb8b3dbe8e417f6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6185)
		Method: <org.mozilla.gecko.kaito.activate.KAITOSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 5fea55ae24ca8e21e9d1a8a5d89c467bed3ba6eede678417386673f2a307a923
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10413)
		Method: <org.mozilla.gecko.sync.net.BaseResource: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()>
		SHA-256: 1538843f97be664d7091e5b378446a8020b0985d8db28bca2986ebf28165d78b
		Secure: false
	Object:
		Variable: varReplacer6489
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6489)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 9eb8e3833d1c6a798debfe54b04865f6125309a38e0b0c6082d7bcca89b21d29
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6066)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: c4d5f79f17c9c55c6dccbaf1c7e7028058983b066953c5d82d45c16222a01290
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 16fbdee3ccf53566f47857ba4ca4b44fb5e9d395e6f918a68cd3d7ad2b4abc32
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.jmas.full.KAITO.kaito.KAITODocProvider: byte[] getHash(byte[])>
		SHA-256: 45df943665d57a6c59517ee4ee10162192ebff7b2b89b043b64462c976e14017
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.mozilla.gecko.updater.UpdateService: boolean verifyDownloadedPackage(java.io.File)>
		SHA-256: 4ac6f5b22eca17889109082c03467dfaeae8a7313547682c44458185824f732e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6491)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 54f56b83cb6e4b12a53cffcd7522365d6b2e26d59072dbb165c5e21a09c76ec9
		Secure: false
	Object:
		Variable: varReplacer6065
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6065)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: c75fb0eacbe07f7406fa2cd1c2ef9faf79a35a69112fe9fc41772ea4744b1e1f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6040)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: java.lang.String getSha1Digest(byte[])>
		SHA-256: 2f3cb7edc624cdd80268eae96086ae26089263b1920b505b257ebece121b63b4
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <org.mozilla.gecko.kaito.activate.MultiProxyHttpRequest: org.apache.http.client.HttpClient getHttpClient(org.mozilla.gecko.kaito.activate.KAITOProxy)>
		SHA-256: 1550e599c346e1b335a45b5cfa0f723491256651b00c75d73c02a1cde82c0974
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11181)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha1(java.lang.String)>
		SHA-256: 6f2479aa3d84e5633bde308603851fcb40047421b41dbdd1eef069ffffa17d2
		Secure: false

Findings in Java Class: ch.boye.httpclientandroidlib.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2cfd33f96872e0bece181dd13670f0e179cac8da53bf6ce41a6cc3325f0f13be)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3331)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3332, varReplacer3332, varReplacer3332)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3332, varReplacer3332, varReplacer3332)


Findings in Java Class: org.mozilla.gecko.kaito.KAITOLoader

	 in Method: java.lang.String getSha1Digest(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2f3cb7edc624cdd80268eae96086ae26089263b1920b505b257ebece121b63b4)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6040)


	 in Method: byte[] decrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6074, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c4d5f79f17c9c55c6dccbaf1c7e7028058983b066953c5d82d45c16222a01290)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, GCM, CBC, CTS, CTR, CFB}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6066)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6065)


	 in Method: byte[] encrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6490, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6489)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #54f56b83cb6e4b12a53cffcd7522365d6b2e26d59072dbb165c5e21a09c76ec9)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{OFB, GCM, CBC, CTS, CTR, CFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6491)


Findings in Java Class: org.mozilla.gecko.kaito.activate.KAITOSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6181, r5, varReplacer6181)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6181, r5, varReplacer6181)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5fea55ae24ca8e21e9d1a8a5d89c467bed3ba6eede678417386673f2a307a923)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6185)


Findings in Java Class: jp.co.cec_ltd.cloudappbase.util.libs.SubString

	 in Method: java.lang.String digestMd5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bc5da3634696654b32c5d2a4f08b63017bffc396bb1860fb54fe03b6533c9307)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6316)


Findings in Java Class: jp.co.cec.module.serverAction.MySSLSocketFactory

	 in Method: void <init>(android.content.Context,java.security.KeyStore,java.lang.String,java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6577, r8, varReplacer6577)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #76bc5e92e5fe7408258d6a6f763b88dffc75b7244477c4621ad9fd97e684f201)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6576)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6577, r8, varReplacer6577)


Findings in Java Class: jp.co.jmas.full.KAITO.kaito.KAITODocProvider

	 in Method: byte[] getHash(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3e564a20db9bb2bd07388fd1fde40047cb56425d3c8e28b0c07a436bdf9cbc50)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10246)


Findings in Java Class: org.mozilla.gecko.sync.net.BaseResource

	 in Method: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10410, varReplacer10410, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1538843f97be664d7091e5b378446a8020b0985d8db28bca2986ebf28165d78b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10413)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10410, varReplacer10410, $r3)


Findings in Java Class: org.mozilla.gecko.sync.Utils

	 in Method: byte[] sha1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6f2479aa3d84e5633bde308603851fcb40047421b41dbdd1eef069ffffa17d2)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11181)


Findings in Java Class: org.mozilla.gecko.updater.UpdateService

	 in Method: boolean verifyDownloadedPackage(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d55146116dccc3cc5526e4c5c581752b4c5461f9ad9ea0a710b73ea1fdac8917)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d55146116dccc3cc5526e4c5c581752b4c5461f9ad9ea0a710b73ea1fdac8917)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <org.mozilla.gecko.updater.UpdateService: java.security.MessageDigest createMessageDigest(java.lang.String)>($r3)


Findings in Java Class: org.mozilla.gecko.browserid.DSACryptoImplementation

	 in Method: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #2818596057e25539e5488165d71ece765f3f45feb2e2ec98e25dc7bbbb1d71d1)
			First parameter (with value 1024) should be any of {2048}
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer12548)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	IncompleteOperationError: 1
	ConstraintError: 11
	RequiredPredicateError: 12
=====================================================================