public class org.seokmun.doban.lib.HttpUtil extends java.lang.Object
{
    static final javax.net.ssl.HostnameVerifier DO_NOT_VERIFY;
    static final java.lang.String LOGTAG;

    static void <clinit>()
    {
        org.seokmun.doban.lib.HttpUtil$1 $r0;

        nop;

        $r0 = new org.seokmun.doban.lib.HttpUtil$1;

        specialinvoke $r0.<org.seokmun.doban.lib.HttpUtil$1: void <init>()>();

        <org.seokmun.doban.lib.HttpUtil: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY> = $r0;

        return;
    }

    public void <init>()
    {
        org.seokmun.doban.lib.HttpUtil $r0;

        $r0 := @this: org.seokmun.doban.lib.HttpUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String doGet(java.lang.String)
    {
        java.lang.String $r0, varReplacer1625;
        null_type varReplacer1626, varReplacer1627;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer1625 = "GET";

        varReplacer1626 = null;

        varReplacer1627 = null;

        $r0 = staticinvoke <org.seokmun.doban.lib.HttpUtil: java.lang.String downloadHtml(java.lang.String,java.lang.String,byte[],java.lang.String)>($r0, varReplacer1625, varReplacer1626, varReplacer1626);

        return $r0;
    }

    public static java.lang.String doGet(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        java.util.HashMap $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r0 = staticinvoke <org.seokmun.doban.lib.HttpUtil: java.lang.String doGet(java.lang.String,java.util.HashMap)>($r0, $r3);

        return $r0;
    }

    public static java.lang.String doGet(java.lang.String, java.util.HashMap)
    {
        java.lang.String $r0;
        java.util.HashMap $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.HashMap;

        $r2 = staticinvoke <org.seokmun.doban.lib.HttpUtil: byte[] parsePostData(java.util.HashMap)>($r1);

        $r0 = staticinvoke <org.seokmun.doban.lib.HttpUtil: java.lang.String downloadHtml(java.lang.String,java.lang.String,byte[],java.lang.String)>($r0, "GET", $r2, null);

        return $r0;
    }

    public static java.lang.String doPost(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2;
        java.util.HashMap $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        $r0 = staticinvoke <org.seokmun.doban.lib.HttpUtil: java.lang.String doPost(java.lang.String,java.util.HashMap)>($r0, $r3);

        return $r0;
    }

    public static java.lang.String doPost(java.lang.String, java.util.HashMap)
    {
        java.lang.String $r0, varReplacer1712;
        java.util.HashMap $r1;
        byte[] $r2;
        null_type varReplacer1713;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.HashMap;

        $r2 = staticinvoke <org.seokmun.doban.lib.HttpUtil: byte[] parsePostData(java.util.HashMap)>($r1);

        varReplacer1712 = "POST";

        varReplacer1713 = null;

        $r0 = staticinvoke <org.seokmun.doban.lib.HttpUtil: java.lang.String downloadHtml(java.lang.String,java.lang.String,byte[],java.lang.String)>($r0, varReplacer1712, $r2, varReplacer1713);

        return $r0;
    }

    public static java.lang.String downloadHtml(java.lang.String, java.lang.String, byte[], java.lang.String)
    {
        java.lang.String $r0, $r6, $r7, $r8, varReplacer1629, varReplacer1632, varReplacer1634, varReplacer1636, varReplacer1638;
        byte[] $r1;
        java.io.BufferedReader $r2, r20;
        java.lang.Exception $r3;
        java.lang.StringBuilder $r4, $r17, r21;
        java.net.URL $r5, r18;
        boolean $z0;
        java.net.URLConnection $r9;
        javax.net.ssl.HttpsURLConnection $r10;
        javax.net.ssl.HostnameVerifier $r11;
        java.lang.Object $r12;
        int $i0, varReplacer1628, varReplacer1630, varReplacer1633, varReplacer1635, varReplacer1637;
        java.io.OutputStream $r13;
        java.util.Map $r14;
        java.io.InputStreamReader $r15, r19;
        java.io.InputStream $r16;
        java.net.HttpURLConnection r22;
        null_type varReplacer1631;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r6 := @parameter1: java.lang.String;

        $r1 := @parameter2: byte[];

        $r7 := @parameter3: java.lang.String;

        if $r6 != null goto label01;

        $r6 = "POST";

     label01:
        $r7 = "application/x-www-form-urlencoded";

        $r17 = new java.lang.StringBuilder;

        $r4 = $r17;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        r18 = new java.net.URL;

        $r5 = r18;

     label02:
        specialinvoke r18.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r8 = virtualinvoke $r5.<java.net.URL: java.lang.String getProtocol()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer1636 = "https";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1636);

     label03:
        if $z0 == 0 goto label30;

     label04:
        staticinvoke <org.seokmun.doban.lib.HttpUtil: void trustAllHosts()>();

        $r9 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

        $r10 = (javax.net.ssl.HttpsURLConnection) $r9;

     label05:
        $r11 = <org.seokmun.doban.lib.HttpUtil: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

     label06:
        virtualinvoke $r10.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r11);

     label07:
        $r12 = $r10;

     label08:
        if $r12 == null goto label29;

     label09:
        r22 = (java.net.HttpURLConnection) $r12;

        varReplacer1628 = 5000;

        virtualinvoke r22.<java.net.HttpURLConnection: void setConnectTimeout(int)>(varReplacer1628);

        r22 = (java.net.HttpURLConnection) $r12;

        varReplacer1637 = 0;

        virtualinvoke r22.<java.net.HttpURLConnection: void setUseCaches(boolean)>(varReplacer1637);

        r22 = (java.net.HttpURLConnection) $r12;

        virtualinvoke r22.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r6);

        r22 = (java.net.HttpURLConnection) $r12;

        varReplacer1638 = "Content-Type";

        virtualinvoke r22.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer1638, $r7);

     label10:
        $r7 = "POST";

     label11:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label12:
        if $z0 == 0 goto label32;

     label13:
        r22 = (java.net.HttpURLConnection) $r12;

        varReplacer1633 = 1;

        virtualinvoke r22.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer1633);

     label14:
        if $r1 == null goto label16;

     label15:
        $i0 = lengthof $r1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        r22 = (java.net.HttpURLConnection) $r12;

        varReplacer1634 = "Content-Length";

        virtualinvoke r22.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer1634, $r6);

        r22 = (java.net.HttpURLConnection) $r12;

        $r13 = virtualinvoke r22.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r1);

        virtualinvoke $r13.<java.io.OutputStream: void close()>();

     label16:
        r22 = (java.net.HttpURLConnection) $r12;

        $i0 = virtualinvoke r22.<java.net.HttpURLConnection: int getResponseCode()>();

     label17:
        if $i0 != 200 goto label28;

     label18:
        varReplacer1632 = "https://doin.seokmun.org/mobile/app_login/";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1632);

     label19:
        if $z0 != 0 goto label22;

     label20:
        varReplacer1629 = "https://doin.seokmun.org/mobile/app_login_check/";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1629);

     label21:
        if $z0 == 0 goto label23;

     label22:
        r22 = (java.net.HttpURLConnection) $r12;

        $r14 = virtualinvoke r22.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        staticinvoke <org.seokmun.doban.lib.HttpUtil: void setCookie(java.util.Map)>($r14);

     label23:
        r20 = new java.io.BufferedReader;

        $r2 = r20;

        r19 = new java.io.InputStreamReader;

        $r15 = r19;

     label24:
        r22 = (java.net.HttpURLConnection) $r12;

        $r16 = virtualinvoke r22.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke r19.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r16);

        specialinvoke r20.<java.io.BufferedReader: void <init>(java.io.Reader)>($r15);

     label25:
        $r0 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label26:
        if $r0 != null goto label35;

     label27:
        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

     label28:
        r22 = (java.net.HttpURLConnection) $r12;

        virtualinvoke r22.<java.net.HttpURLConnection: void disconnect()>();

     label29:
        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;

     label30:
        $r9 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

        $r12 = (java.net.HttpURLConnection) $r9;

     label31:
        goto label08;

     label32:
        r22 = (java.net.HttpURLConnection) $r12;

        varReplacer1630 = 0;

        virtualinvoke r22.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer1630);

     label33:
        goto label16;

     label34:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        varReplacer1631 = null;

        return varReplacer1631;

     label35:
        r21 = new java.lang.StringBuilder;

        $r17 = r21;

     label36:
        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke r21.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer1635 = 10;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer1635);

        $r0 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label37:
        goto label25;

        catch java.lang.Exception from label02 to label03 with label34;
        catch java.lang.Exception from label04 to label05 with label34;
        catch java.lang.Exception from label06 to label07 with label34;
        catch java.lang.Exception from label09 to label10 with label34;
        catch java.lang.Exception from label11 to label12 with label34;
        catch java.lang.Exception from label13 to label14 with label34;
        catch java.lang.Exception from label15 to label17 with label34;
        catch java.lang.Exception from label18 to label19 with label34;
        catch java.lang.Exception from label20 to label21 with label34;
        catch java.lang.Exception from label22 to label23 with label34;
        catch java.lang.Exception from label24 to label26 with label34;
        catch java.lang.Exception from label27 to label29 with label34;
        catch java.lang.Exception from label30 to label31 with label34;
        catch java.lang.Exception from label32 to label33 with label34;
        catch java.lang.Exception from label36 to label37 with label34;
    }

    public static byte[] parsePostData(java.util.HashMap)
    {
        java.util.HashMap $r0;
        java.lang.Exception $r1;
        java.lang.StringBuffer $r2;
        int $i0;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.String $r5, $r10, varReplacer563, varReplacer564, varReplacer566, varReplacer567;
        byte[] $r6;
        java.lang.Object $r7;
        java.util.Map$Entry $r8;
        java.lang.StringBuilder $r9;
        null_type varReplacer562, varReplacer565;

        nop;

        $r0 := @parameter0: java.util.HashMap;

        if $r0 != null goto label01;

        varReplacer565 = null;

        return varReplacer565;

     label01:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $i0 = 0;

     label02:
        $r3 = virtualinvoke $r0.<java.util.HashMap: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label04:
        if $z0 != 0 goto label07;

     label05:
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        varReplacer566 = "UTF8";

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer566);

     label06:
        return $r6;

     label07:
        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

     label08:
        if $r7 == null goto label03;

        $r9 = new java.lang.StringBuilder;

     label09:
        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r7;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        varReplacer563 = "=";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer563);

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.lang.String) $r7;

        varReplacer567 = "UTF-8";

        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, varReplacer567);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r10 = $r5;

        if $i0 <= 0 goto label13;

        $r9 = new java.lang.StringBuilder;

     label11:
        varReplacer564 = "&";

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer564);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r10 = $r5;

     label13:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label14:
        $i0 = $i0 + 1;

        goto label03;

     label15:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        varReplacer562 = null;

        return varReplacer562;

        catch java.lang.Exception from label02 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label15;
        catch java.lang.Exception from label07 to label08 with label15;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }

    public static void setCookie(java.util.Map)
    {
        java.util.Map $r0;

        nop;

        $r0 := @parameter0: java.util.Map;

        return;
    }

    private static void trustAllHosts()
    {
        java.lang.Exception $r0;
        java.lang.Object[] $r1;
        javax.net.ssl.SSLContext $r2;
        java.security.SecureRandom $r3, r6;
        javax.net.ssl.SSLSocketFactory $r4;
        org.seokmun.doban.lib.HttpUtil$2 r5;
        javax.net.ssl.TrustManager[] r7;
        java.lang.String varReplacer1640;
        null_type varReplacer1641;

        nop;

        $r1 = newarray (javax.net.ssl.TrustManager)[1];

        r5 = new org.seokmun.doban.lib.HttpUtil$2;

        specialinvoke r5.<org.seokmun.doban.lib.HttpUtil$2: void <init>()>();

        $r1[0] = r5;

     label1:
        varReplacer1640 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1640);

     label2:
        r6 = new java.security.SecureRandom;

        $r3 = r6;

     label3:
        specialinvoke r6.<java.security.SecureRandom: void <init>()>();

        r7 = (javax.net.ssl.TrustManager[]) $r1;

        varReplacer1641 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1641, r7, $r3);

        $r4 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r4);

     label4:
        return;

     label5:
        $r0 := @caughtexception;

        virtualinvoke $r0.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
