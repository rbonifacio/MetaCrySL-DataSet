class ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory extends org.apache.http.conn.ssl.SSLSocketFactory
{
    protected javax.net.ssl.SSLContext sslContext;

    public void <init>(java.security.KeyStore)
    {
        ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory $r0;
        java.security.KeyStore $r1;
        java.lang.Object[] $r2;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.KeyManager[] $r4;
        java.lang.String $r5, varReplacer18622;
        javax.net.ssl.KeyManagerFactory $r6, $r7;
        char[] $r8;
        java.security.KeyStore[] $r9;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15;
        ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager r16;
        java.security.SecureRandom r17;
        javax.net.ssl.TrustManager[] r18;
        java.security.UnrecoverableKeyException r19;
        java.security.KeyStoreException r20;
        java.security.NoSuchAlgorithmException r21;

        nop;

        $r0 := @this: ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory;

        $r1 := @parameter0: java.security.KeyStore;

        specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>($r1);

        varReplacer18622 = "TLS";

        $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer18622);

        $r0.<ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext> = $r3;

        $r4 = staticinvoke <ph.teligent.nce.webservice.HttpClient: javax.net.ssl.KeyManager[] access$000()>();

        if $r4 != null goto label05;

     label01:
        $r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r6 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r5);

     label02:
        $r7 = $r6;

     label03:
        $r8 = staticinvoke <ph.teligent.nce.webservice.HttpClient: char[] access$100()>();

        virtualinvoke $r6.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r8);

     label04:
        $r4 = virtualinvoke $r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();

        staticinvoke <ph.teligent.nce.webservice.HttpClient: javax.net.ssl.KeyManager[] access$002(javax.net.ssl.KeyManager[])>($r4);

     label05:
        $r3 = $r0.<ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r4 = staticinvoke <ph.teligent.nce.webservice.HttpClient: javax.net.ssl.KeyManager[] access$000()>();

        $r2 = newarray (javax.net.ssl.TrustManager)[1];

        r16 = new ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager;

        $r9 = newarray (java.security.KeyStore)[1];

        $r9[0] = $r1;

        specialinvoke r16.<ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager: void <init>(java.security.KeyStore[])>($r9);

        $r2[0] = r16;

        r17 = new java.security.SecureRandom;

        specialinvoke r17.<java.security.SecureRandom: void <init>()>();

        r18 = (javax.net.ssl.TrustManager[]) $r2;

        virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, r18, r17);

        return;

     label06:
        $r10 := @caughtexception;

        $r7 = null;

        $r11 = $r10;

     label07:
        r19 = (java.security.UnrecoverableKeyException) $r11;

        virtualinvoke r19.<java.security.UnrecoverableKeyException: void printStackTrace()>();

        goto label04;

     label08:
        $r12 := @caughtexception;

        $r7 = null;

        $r13 = $r12;

     label09:
        r20 = (java.security.KeyStoreException) $r13;

        virtualinvoke r20.<java.security.KeyStoreException: void printStackTrace()>();

        goto label04;

     label10:
        $r14 := @caughtexception;

        $r7 = null;

        $r15 = $r14;

     label11:
        r21 = (java.security.NoSuchAlgorithmException) $r15;

        virtualinvoke r21.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label04;

     label12:
        $r15 := @caughtexception;

        goto label11;

     label13:
        $r13 := @caughtexception;

        goto label09;

     label14:
        $r11 := @caughtexception;

        goto label07;

        catch java.security.UnrecoverableKeyException from label01 to label02 with label06;
        catch java.security.KeyStoreException from label01 to label02 with label08;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.UnrecoverableKeyException from label03 to label04 with label14;
        catch java.security.KeyStoreException from label03 to label04 with label13;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
    }

    public java.net.Socket createSocket()
    {
        ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;

        $r0 := @this: ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory;

        $r1 = $r0.<ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r3;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean)
    {
        ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;

        $r0 := @this: ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        return $r1;
    }
}
