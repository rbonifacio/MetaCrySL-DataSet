public class com.kidoz.sdk.api.general.utils.EncoderUtils extends java.lang.Object
{
    private static final int BYTE_MSK;
    private static final java.lang.String HEX_DIGITS;
    private static final int HEX_DIGIT_BITS;
    private static final int HEX_DIGIT_MASK;
    public static final java.lang.String TAG;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        nop;

        $r1 = class "Lcom/kidoz/sdk/api/general/utils/EncoderUtils;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.kidoz.sdk.api.general.utils.EncoderUtils: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>()
    {
        com.kidoz.sdk.api.general.utils.EncoderUtils $r0;

        $r0 := @this: com.kidoz.sdk.api.general.utils.EncoderUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String SHA1(java.lang.String)
    {
        java.lang.String $r0, $r4, varReplacer1493, varReplacer1494;
        java.lang.Exception $r1;
        byte[] $r2;
        java.lang.StringBuilder $r3;
        null_type varReplacer1495;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer1493 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1493);

        $r0 = staticinvoke <com.kidoz.sdk.api.general.utils.EncoderUtils: java.lang.String computeSha1OfByteArray(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        $r0 = <com.kidoz.sdk.api.general.utils.EncoderUtils: java.lang.String TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer1494 = "Error when trying to convert string to SHA1: ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1494);

        $r4 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kidoz.sdk.api.general.utils.SDKLogger: void printErrorLog(java.lang.String,java.lang.String)>($r0, $r4);

        varReplacer1495 = null;

        return varReplacer1495;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.String computeSha1OfByteArray(byte[]) throws java.lang.UnsupportedOperationException
    {
        byte[] $r0;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        java.lang.String $r3, varReplacer1496;
        java.lang.UnsupportedOperationException $r4;

        nop;

        $r0 := @parameter0: byte[];

     label1:
        varReplacer1496 = "SHA-1";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1496);

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r3 = staticinvoke <com.kidoz.sdk.api.general.utils.EncoderUtils: java.lang.String toHexString(byte[])>($r0);

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r1);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String encryptWithMD5(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Exception $r1;
        java.math.BigInteger $r2;
        java.security.MessageDigest $r3;
        byte[] $r4;
        int $i0;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label10;

     label01:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        virtualinvoke $r3.<java.security.MessageDigest: void reset()>();

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r2 = new java.math.BigInteger;

     label03:
        specialinvoke $r2.<java.math.BigInteger: void <init>(int,byte[])>(1, $r4);

        $r0 = virtualinvoke $r2.<java.math.BigInteger: java.lang.String toString(int)>(16);

     label04:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label05:
        if $i0 >= 32 goto label08;

        $r5 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        goto label04;

     label08:
        return $r0;

     label09:
        $r1 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t create MD5: ");

        $r0 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kidoz.sdk.api.general.utils.SDKLogger: void printErrorLog(java.lang.String)>($r0);

     label10:
        return null;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label06 to label07 with label09;
    }

    private static java.lang.String toHexString(byte[])
    {
        byte[] $r0;
        byte $b0;
        short $s1, $s4;
        java.lang.StringBuilder $r1, $r3;
        int $i2, $i3;
        java.lang.String $r2;
        char $c5;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        $i2 = lengthof $r0;

        $i2 = $i2 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i2);

        $i2 = lengthof $r0;

        $i3 = 0;

     label1:
        if $i3 >= $i2 goto label2;

        $b0 = $r0[$i3];

        $s1 = $b0 & 255;

        $r2 = "0123456789ABCDEF";

        $s4 = $s1 >>> 4;

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($s4);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $r2 = "0123456789ABCDEF";

        $s1 = $s1 & 15;

        $c5 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($s1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i3 = $i3 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toMD5(java.lang.String)
    {
        java.lang.String $r0, $r6;
        java.lang.Exception $r1;
        java.math.BigInteger $r2;
        java.security.MessageDigest $r3;
        byte[] $r4;
        int $i0;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label10;

     label01:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        virtualinvoke $r3.<java.security.MessageDigest: void reset()>();

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r2 = new java.math.BigInteger;

     label03:
        specialinvoke $r2.<java.math.BigInteger: void <init>(int,byte[])>(1, $r4);

        $r0 = virtualinvoke $r2.<java.math.BigInteger: java.lang.String toString(int)>(16);

     label04:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label05:
        if $i0 >= 32 goto label08;

        $r5 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        goto label04;

     label08:
        return $r0;

     label09:
        $r1 := @caughtexception;

        $r0 = <com.kidoz.sdk.api.general.utils.EncoderUtils: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t create MD5: ");

        $r6 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.kidoz.sdk.api.general.utils.SDKLogger: void printErrorLog(java.lang.String,java.lang.String)>($r0, $r6);

     label10:
        return null;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label04 to label05 with label09;
        catch java.lang.Exception from label06 to label07 with label09;
    }
}
