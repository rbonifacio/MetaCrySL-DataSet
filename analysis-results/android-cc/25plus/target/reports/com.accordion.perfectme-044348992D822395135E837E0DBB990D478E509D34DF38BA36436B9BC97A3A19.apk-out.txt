Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.accordion.perfectme-044348992D822395135E837E0DBB990D478E509D34DF38BA36436B9BC97A3A19.apk
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer516)
		Method: <com.tencent.bugly.legu.proguard.af: byte[] a(byte[])>
		SHA-256: e589518b3fd4942155b64cfbb3193fc8be101f1956fa3ee997d10aa4300e8b9
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.legu.proguard.af: byte[] a(byte[])>
		SHA-256: a083f16754a111eeaca1e2fd5172487fbf6e4f736a06f763225f8aaf5b81958e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1739)
		Method: <com.tencent.StubShell.a: java.lang.String a(java.io.InputStream)>
		SHA-256: 59b943107e608094d603f2338b0a1309d3dd9b8f38a490162d5854f3ffd7bd63
		Secure: false
	Object:
		Variable: varReplacer526
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer526)
		Method: <com.tencent.bugly.legu.proguard.ae: byte[] a(byte[])>
		SHA-256: 20e41305278870d624dc1fa45e183ffeeefb68c310a3532ba43f2b6091b75c1d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.legu.proguard.af: byte[] a(byte[])>
		SHA-256: 5e5bf379b7bd5b97f81dadc39946b76c3f7d76f05526f9082cced7a7c9e48966
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tencent.bugly.legu.proguard.a: byte[] b(int,byte[],byte[])>
		SHA-256: 901f51dcc1eab57d8d0a0a6a4a18cbc40c940fcacd3133bac628cf2fb6661282
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.StubShell.a: java.lang.String a(java.io.InputStream)>
		SHA-256: 94dacef5038b9fd5dcf8e37f15750ede1c794ee5e2ec5487426703309c52fd62
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = interfaceinvoke $r8.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.tencent.bugly.legu.proguard.a: byte[] a(int)>
		SHA-256: 94b1945aef29601e10128305e3090f4cbdfcef9f5804d9b8d53ba21fe0b64313
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.legu.proguard.ae: byte[] a(byte[])>
		SHA-256: ffa5b23ed28a4dd5b25bdec8ca4356de9f8907c516e4448937636427a5eb19cb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2025)
		Method: <com.tencent.bugly.legu.proguard.a: byte[] a(int,byte[],byte[])>
		SHA-256: 5d002f719b3b4e27b5dd68eb55a41671e808e830f4af22da40c9ca331bfb0e65
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.KeyGenerator
		Statement: $r6 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1681)
		Method: <com.tencent.bugly.legu.proguard.a: byte[] a(int)>
		SHA-256: 50735fbfec44d960eb50ccc28f1d00e7c93980484924c630dead1dad3cbe5d95
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer527)
		Method: <com.tencent.bugly.legu.proguard.ae: byte[] a(byte[])>
		SHA-256: 4c8805849897924910606ff7ec6e192d3a2113f207c52e00f149c1730706802b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tencent.bugly.legu.proguard.a: byte[] a(int,byte[],byte[])>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer526)
		Method: <com.tencent.bugly.legu.proguard.ae: byte[] a(byte[])>
		SHA-256: 7ab841186224f0eea9189f8e256e4fa8d7433a88acee100b8f54864a26f6c469
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2022)
		Method: <com.tencent.bugly.legu.proguard.a: byte[] b(int,byte[],byte[])>
		SHA-256: fadf2a3b707507ffe39339e283f0072fd3e55c5bf14d576163a3b9a730822c36
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2026)
		Method: <com.tencent.bugly.legu.proguard.a: byte[] a(int,byte[],byte[])>
		SHA-256: ebf7913586392a09c80be640d83ad9fb7ba94ab7e762b71bde4078f9e7e62c2c
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.tencent.bugly.legu.proguard.a: byte[] a(int)>
		SHA-256: 70833cfcbc5d2c27d396a5c56a0b7c9d134772efa0b8cc3475649c7af280fbfa
		Secure: true
	Object:
		Variable: varReplacer2025
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2025)
		Method: <com.tencent.bugly.legu.proguard.a: byte[] a(int,byte[],byte[])>
		SHA-256: 1063066105d1775093029ce06aa8031b093e235c66fd2aa8f7331dba68a38533
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tencent.bugly.legu.proguard.a: byte[] a(int,byte[],byte[])>
		SHA-256: 655cecbf31ebe6a542bbf9dfffce540c2dd9f684098c0dd0c88d0a240e8143d9
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.legu.proguard.ae: byte[] a(byte[])>
		SHA-256: 138bd9695ae6e5ad998913ce43b78feb5de1c8ab14a8f0e82d0d68f897dca60e
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.tencent.bugly.legu.proguard.a: byte[] a(int)>
		SHA-256: 5610145a09a7bb214f230ffcd546db69ba939fbd18273272977b5e9f5d649600
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer518)
		Method: <com.tencent.bugly.legu.proguard.af: byte[] a(byte[])>
		SHA-256: 5b80ff317f08510d3ab5c95dc6342c60498ce4a3951374ba6b4989a94faa3c58
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.legu.proguard.af: byte[] a(byte[])>
		SHA-256: 6f212fd969e9171ce08bf4d1e289877af8000f513b92c4a566d112ac1f4890b9
		Secure: false

Findings in Java Class: com.tencent.bugly.legu.proguard.af

	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer514, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e589518b3fd4942155b64cfbb3193fc8be101f1956fa3ee997d10aa4300e8b9)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES_128, AES, AES_256, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer516)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #5b80ff317f08510d3ab5c95dc6342c60498ce4a3951374ba6b4989a94faa3c58)
			First parameter (with value "DES") should be any of {PBKDF2withHmacSHA384, PBEwithHmacSHA224AndAES_256, PBKDF2withHmacSHA512, PBKDF2withHmacSHA224, PBEwithHmacSHA512AndAES_128, PBEwithHmacSHA224AndAES_128, PBEwithHmacSHA256AndAES_128, PBEwithHmacSHA512AndAES_256, Insecure, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer518)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)


Findings in Java Class: com.tencent.StubShell.a

	 in Method: java.lang.String a(java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #59b943107e608094d603f2338b0a1309d3dd9b8f38a490162d5854f3ffd7bd63)
			First parameter (with value "MD5") should be any of {SHA256, SHA384, SHA-256, SHA-512, SHA-384, SHA512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1739)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #59b943107e608094d603f2338b0a1309d3dd9b8f38a490162d5854f3ffd7bd63)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.tencent.bugly.legu.proguard.ae

	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer522, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer526)


Findings in Java Class: com.tencent.bugly.legu.proguard.a

	 in Method: byte[] a(int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2025)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


	 in Method: byte[] b(int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2024, $r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 23

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	RequiredPredicateError: 11
	ConstraintError: 3
=====================================================================
