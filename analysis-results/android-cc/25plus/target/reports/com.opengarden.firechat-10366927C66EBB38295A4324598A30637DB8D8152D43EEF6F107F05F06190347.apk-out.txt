Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.opengarden.firechat-10366927C66EBB38295A4324598A30637DB8D8152D43EEF6F107F05F06190347.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1570)
		Method: <org.jsoup.helper.HttpConnection$Response: void b()>
		SHA-256: 6c3731286f10913662661dc417fd7cbd6f10f2f6b14e329e4d0a05ace05f2f0f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10198)
		Method: <b.a.j: c.i b(c.i)>
		SHA-256: c997136be05ce60693a9dcd0df980d6b82e44a685e56e303834968c1e3c235a2
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.h: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 17a4207782cd4016caf857666b408e8e923a66fe77c19724e9227de6fa2f1210
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.h: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 7f2287f59d6a255406bc4b98d50510cf18c3958510c6a05df9078c5f076acd3d
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.h: java.security.KeyPair f(java.lang.String)>
		SHA-256: 24a919800770e2fd34d549c3c5f6ab39e4f2b3dafeca4e9fd6f238d268f96440
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.f: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 8f6be8718b6ce42eda38f8bc1516d42c504890382c6206269b5dfd8f0721fe14
		Secure: false
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: specialinvoke r8.<java.security.SecureRandom: void <init>()>()
		Method: <org.jsoup.helper.HttpConnection$Response: void b()>
		SHA-256: 7669b6e3e9060ae1a9cdf3d8340611a564cf1d08b11678f34087bb62800291e2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3773)
		Method: <com.opengarden.firechat.jd: byte[] a(byte[])>
		SHA-256: 7806dc8ca56c84b63ab64d549b4ed369e5e746e5a8088c78889ec31853a734ad
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2654)
		Method: <com.opengarden.firechat.jd: java.lang.String a(java.lang.String)>
		SHA-256: 509eae8c16fa3dc77d57aeb89be21408fd554a04c622b1f8ff5385c6b95fca4
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPairGenerator
		Statement: $r10 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3482, varReplacer3483)
		Method: <org.b.a.a.a.e: void d(android.content.Context)>
		SHA-256: cd7b1b38ed8243f50e4bc289478f75d88798611c6d23f17045256e92b3d26c7b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 667d1c74233dc4695844b2a369b7ca168b7b3f396ce37cb94fd304b9f22f5e14
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10709)
		Method: <b.a.j: c.i a(c.i)>
		SHA-256: a4a2b83d2148686f5d085127654583d97e8bd80739c79ff2f4e7c002ee329349
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.d: java.security.KeyPair a()>
		SHA-256: ae7746e749ad19dd80543f36ba9cb19737eb4241dd2be71bfd11344b3c774935
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.opengarden.firechat.jd: java.lang.String a(java.lang.String)>
		SHA-256: b18b79bed1eadd3ee1c6ac04c5e1783ae0e6842533239eb870c2b54f7ab84937
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3715)
		Method: <com.google.android.gms.iid.d: java.security.KeyPair a()>
		SHA-256: 511180a1f5dab5504cfc405dd4dd54686195e64eb5a05b876eda3a32c4f00add
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6542)
		Method: <b.ag: void <init>(b.ag$a)>
		SHA-256: 62d7b940f65e07729e473f4bfcd19b4d8cdd7db292fc888d21c65cbb2ea67c9c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.f: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 60071d2e275abb1b0fb62b829eb21083d67334fd3281007b168151a2d2806a9d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: a4e4ecffbfa24945c7b9252e6e971a5919b9c0bad5744e4045419497644909c7
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3477)
		Method: <org.b.a.a.a.e: void d(android.content.Context)>
		SHA-256: afe7059f06ecec8af0e79addca6c4d5efd7dbffc9392d9b8c70c7feda0ec4900
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.amplitude.api.PinnedAmplitudeClient$SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: a15ee14efb694e46cc74b38929d712c409b73d1527bab6370b3050bb91f89b68
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.SSLContext
		Statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6715)
		Method: <com.amplitude.api.PinnedAmplitudeClient$SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: b944c42c0cc2ae8d81d4b68eaca91c20069c2fd37a1fb049ffd8e4e8995f8416
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <b.a.j: c.i b(c.i)>
		SHA-256: 489933113c268a7e7f05aa40b5ef1fa1199672afd48e2e11dd964911c5915718
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <b.a.j: c.i a(c.i)>
		SHA-256: 452b0d9cd384aa6871806e5550b266d194a41d69fe5a3baec7348f6bc0482d2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.opengarden.firechat.jd: byte[] a(byte[])>
		SHA-256: 65570709533a986352450f9aaa6ceba0b09dfb624be8577978bdad5a6155fee7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3674)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 2ff9a1c6cddec8360c20b54281b8da6cd3b4aa6d82f6f20ae0dca71dd414e8c9
		Secure: false

Findings in Java Class: org.jsoup.helper.HttpConnection$Response

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1569, r10, $r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #6c3731286f10913662661dc417fd7cbd6f10f2f6b14e329e4d0a05ace05f2f0f)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1570)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1569, r10, $r0)


Findings in Java Class: com.opengarden.firechat.jd

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #509eae8c16fa3dc77d57aeb89be21408fd554a04c622b1f8ff5385c6b95fca4)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2654)


	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7806dc8ca56c84b63ab64d549b4ed369e5e746e5a8088c78889ec31853a734ad)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3773)


Findings in Java Class: com.google.android.gms.iid.f

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #8f6be8718b6ce42eda38f8bc1516d42c504890382c6206269b5dfd8f0721fe14)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.a

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2ff9a1c6cddec8360c20b54281b8da6cd3b4aa6d82f6f20ae0dca71dd414e8c9)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3674)


Findings in Java Class: b.ag

	 in Method: void <init>(b.ag$a)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #62d7b940f65e07729e473f4bfcd19b4d8cdd7db292fc888d21c65cbb2ea67c9c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6542)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6538, varReplacer6538, varReplacer6538)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6538, varReplacer6538, varReplacer6538)


Findings in Java Class: com.amplitude.api.PinnedAmplitudeClient$SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6711, $r14, varReplacer6711)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b944c42c0cc2ae8d81d4b68eaca91c20069c2fd37a1fb049ffd8e4e8995f8416)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.1, TLSv1, Insecure}
			at statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6715)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6711, $r14, varReplacer6711)


Findings in Java Class: b.a.j

	 in Method: c.i a(c.i)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a4a2b83d2148686f5d085127654583d97e8bd80739c79ff2f4e7c002ee329349)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10709)


Findings in Java Class: org.b.a.a.a.e

	 in Method: void d(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r10.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r11)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 8
	RequiredPredicateError: 8
=====================================================================
