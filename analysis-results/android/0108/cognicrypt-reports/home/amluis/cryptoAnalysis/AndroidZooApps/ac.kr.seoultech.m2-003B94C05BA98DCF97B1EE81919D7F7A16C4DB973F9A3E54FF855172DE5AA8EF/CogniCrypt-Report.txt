Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer474)
		Method: <com.sz.pns.base.service.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 85838fce2975c250c5a211b43595bbbfdf92e1f8005125f8f014ea5472f6b3fa
		Secure: false
	Object:
		Variable: varReplacer287
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer287)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: b00eb24487c033ee0a41e1bb6bcc505091f8e3dd74fd94e734d804aad8459674
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 8684519ca95251366595f3b9551c1d3f8610dc7f121cbac20215755e79dbe9c9
		Secure: false
	Object:
		Variable: varReplacer698
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer698)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 4c97a832d7f69c1dd6af335cc18c040692eb64884af2631c735d226f0edb8660
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer287)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 8f520c9b68f9a6e2bf92e0a342edb8b2fa4302f568d1c5a85b5ab292f6e6a939
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String encrypt(java.security.PublicKey,byte[])>
		SHA-256: 71e7df40425fc73a049bab9f3d8a35c60ecf0bedaf60d2e6ed69b55ad110da74
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2090)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String decrypt(java.security.PrivateKey,byte[])>
		SHA-256: 9a8e6d07b2cef88d461693c7e9b025d2dee67bb5311a86cfe071114408d2e0e5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2097)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String encrypt(java.security.PublicKey,byte[])>
		SHA-256: 15ba8851c49b9b36dc07b63a64e564f261c20d439e2612d78a67ef1f818d7b88
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 789302a18c5e2e3df7de02544700bf2c7dcda4cb7bc2b0265733b92b52d4a856
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer698)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 62e52341390dcb05de78df9e290aa2addd463dd61157dc80ca53c78161a89295
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String decrypt(java.security.PrivateKey,byte[])>
		SHA-256: 8aa167dbffbcf550bbceb444befe29dfb71e9f4e122e0d88235b739a0d8ed937
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1131)
		Method: <com.sz.fspmobile.util.RSAHelper: byte[] encryptByte(java.security.PublicKey,byte[])>
		SHA-256: b66201bddb1db58c3b842aac7c8fe257e9b6ae229bb0a8fba538b3012307fca1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2084)
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String[] getRSAKey()>
		SHA-256: b8e805a855037a7efba18d21cc2f14654333dc88096366c8b83080e74962a42e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 2573436cc174414da03fbbb4ff96039e8f9916bdef82aa3b9b9fdbcb0aa02325
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.sz.fspmobile.util.RSAHelper: java.lang.String[] getRSAKey()>
		SHA-256: 30f4e34ed2923be51035a55458c82545690e94b3d59401fb8d0b927e728fe6b6
		Secure: false
	Object:
		Variable: varReplacer290
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer290)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>
		SHA-256: 54451ca749406ecbfb6de54221056ef4708712211bf640db5cb85a5339c44e34
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <ac.kr.seoultech.m2.SeoultechWebMainActivity: boolean isSign()>
		SHA-256: 2a5c03dd41a0dd95ed642ee3369f0d856b42ceaf934b9843510093384a8132a2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer290)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] getRawKey(byte[])>
		SHA-256: 2f4d2d950f14d8ca0b705e852386fe6def689dd3e3498a6716a86cc0d045398
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 444fb612b39bd2468dc7589842a34b14cee885f2b5a9459a2702c898a76df7a2
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.sz.pns.base.service.NetworkThread: org.apache.http.client.HttpClient getNewHttpClient()>
		SHA-256: da8980864743f0640d37b8b11ed562c9b31c2fe6c7e80700587852e4e4610a40
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer987)
		Method: <com.sz.fspmobile.net.HttpConnection: java.net.HttpURLConnection makeUrlConnection(java.net.URL)>
		SHA-256: 5d4c07970a35dcccf6f47b993d2422dd48cc128e83316188699cc53b007a33c7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 4f55213a8d8360caf6ab536b211298eea927bc247fc707288ed14480b4d51c9b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.AESHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: cf8d414a97af46b7e62f4e74025b21be177b2cdb90d0ea7798ba6cbb2cca4289
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sz.fspmobile.util.RSAHelper: byte[] encryptByte(java.security.PublicKey,byte[])>
		SHA-256: 197908b4d90e930d9d21e9c6d6eee68b1a58101e9aeb2a9c18a48463c66469a8
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1480)
		Method: <ac.kr.seoultech.m2.SeoultechWebMainActivity: boolean isSign()>
		SHA-256: c83906f28f6028fbb376036ed1306da70f96a093f6e49e033669fa1ea41d01bf
		Secure: false
	Object:
		Variable: r11
		Type: java.security.SecureRandom
		Statement: specialinvoke r11.<java.security.SecureRandom: void <init>()>()
		Method: <com.sz.fspmobile.net.HttpConnection: java.net.HttpURLConnection makeUrlConnection(java.net.URL)>
		SHA-256: a8f16148a51b6e4027b394f1f7ec20d4748c3daacee5cd39b336be8dcaf03a45
		Secure: true

Findings in Java Class: com.sz.fspmobile.util.AESHelper

	 in Method: byte[] decrypt(byte[],byte[])
		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer288, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer287)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer288, $r2)


	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer698)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer699, $r2)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer290)


Findings in Java Class: ac.kr.seoultech.m2.SeoultechWebMainActivity

	 in Method: boolean isSign()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c83906f28f6028fbb376036ed1306da70f96a093f6e49e033669fa1ea41d01bf)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1480)


Findings in Java Class: com.sz.fspmobile.util.RSAHelper

	 in Method: java.lang.String[] getRSAKey()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #b8e805a855037a7efba18d21cc2f14654333dc88096366c8b83080e74962a42e)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer2083)


	 in Method: java.lang.String decrypt(java.security.PrivateKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2089, $r0)


	 in Method: java.lang.String encrypt(java.security.PublicKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2096, $r0)


	 in Method: byte[] encryptByte(java.security.PublicKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1130, $r0)


Findings in Java Class: com.sz.pns.base.service.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer475, r5, varReplacer475)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer475, r5, varReplacer475)


Findings in Java Class: com.sz.fspmobile.net.HttpConnection

	 in Method: java.net.HttpURLConnection makeUrlConnection(java.net.URL)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer985, r13, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer985, r13, $r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 26

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 1
	RequiredPredicateError: 12
	ConstraintError: 2
=====================================================================