Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r1)
		Method: <com.directtap.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 48438a1833005e6c6fdaa6580996031a74d3a3c6914efbb4f4ce56a9c17a7ba
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.tapjoy.TapjoyUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: a3e7cafcfa44d9bdc2e05ca7844982e985744e62eca47751de38b5eabced745d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8921)
		Method: <com.tapjoy.internal.cl: byte[] a(byte[])>
		SHA-256: 166db9e4c157c86ac2a0b71447794bc757f1788db274e211480398a6a8e42fcb
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tapjoy.internal.cl: byte[] a(byte[])>
		SHA-256: d8bb959de9cf1220164b4cff279a11d803d96b544a0deef1b330157db08eb96b
		Secure: true
	Object:
		Variable: varReplacer7773
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer7773)
		Method: <jp.co.cyberagent.adtechstudio.libs.crypt.Aes: byte[] encrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 7af133f92bc5050d7b18ad9c16b5889b329da025d2cfec483a697bd795400728
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.jirbo.adcolony.ah: java.lang.String a(java.lang.String)>
		SHA-256: 84420bfe410affce7f477fc32adbc38b581dab086799e52103da3e0038bb82ad
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <play_billing.purchase.Security: void <clinit>()>
		SHA-256: 91c37ad2be5d4dbbfef8f15d8c3a1f10810340f28211f7a5794c4e13e621501c
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7778)
		Method: <jp.co.cyberagent.adtechstudio.libs.crypt.Aes: byte[] encrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: db0a5a2028fa506574ec69beb33baab6111f08bb2841bf2f2a7579e435506563
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.immersion.hapticmediasdk.utils.FileManager: java.lang.String getUniqueFileName(java.lang.String)>
		SHA-256: 4a1e4da45af0fcc5ddf784758f7ca0714794ba61042ce4553a749990f9e853ce
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1260)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: ab0e68cb245bfb7a379a9edfed04ea1d198b04528b6f228766f38b7c8fd306b0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <jp.co.cyberagent.adtechstudio.libs.crypt.Aes: byte[] encrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 24465ebec44fd8229c39b1f23e0cc28caf560fa2fef9b014f708fbbaf0c255ae
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <jp.co.cyberagent.adtechstudio.libs.crypt.Aes: byte[] encrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: df96579ef59aa97dfa8240e04c9419f6d3b71190d83171ed79a76e4a641a4eb
		Secure: false
	Object:
		Variable: varReplacer6122
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6122)
		Method: <com.directtap.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e81da239b9f0deb939ab3070f01d786e3a5ff6ea1e7a472ecee6ac081dc0dd4a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2372)
		Method: <com.jirbo.adcolony.ah: java.lang.String a(java.lang.String)>
		SHA-256: b8c3a4180c0aaa5e9ebe47d482bd71d4ce1500104c28a1251b759b1f1ae58f97
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6122)
		Method: <com.directtap.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e2eee19695023b31bccd6c1532942600f733c828cd1fce9d1b74510853669863
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12476)
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: 6a627a09c257ab6e6da1e24c7b7cb33bfe23b96640c315c6e3a992e0c45005fc
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer7773)
		Method: <jp.co.cyberagent.adtechstudio.libs.crypt.Aes: byte[] encrypt(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 3014f05a6f3a89d7e60e09201de3a458b614d5ac76d9be23e1a4fddd7d7a7cde
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11022)
		Method: <com.immersion.hapticmediasdk.utils.FileManager: java.lang.String getUniqueFileName(java.lang.String)>
		SHA-256: 3c94e292d2270c9f50cfc110c63ded130a7637fbbf894d96f2da76dce3f5d8a9
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.directtap.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 73f8f270dbec030e2fa894cbb15a8cbeef0f6246a02a4ecdd868632d659966a8
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tapjoy.TapjoyUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 8cb0e883032585b32965763a80dc6b74a618534bc10c1a39d16b02d90fcb5f04
		Secure: true

Findings in Java Class: com.directtap.b

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6122)


Findings in Java Class: jp.co.cyberagent.adtechstudio.libs.crypt.Aes

	 in Method: byte[] encrypt(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer7773)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7774, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7774, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1258, r7, varReplacer1258)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1258, r7, varReplacer1258)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 7
=====================================================================