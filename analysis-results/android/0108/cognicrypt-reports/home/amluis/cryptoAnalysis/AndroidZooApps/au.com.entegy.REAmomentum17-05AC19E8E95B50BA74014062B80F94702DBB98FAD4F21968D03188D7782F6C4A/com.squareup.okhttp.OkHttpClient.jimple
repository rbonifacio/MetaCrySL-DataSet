public final class com.squareup.okhttp.OkHttpClient extends java.lang.Object implements java.lang.Cloneable
{
    private static javax.net.ssl.SSLSocketFactory defaultSslSocketFactory;
    private com.squareup.okhttp.Authenticator authenticator;
    private com.squareup.okhttp.Cache cache;
    private int connectTimeout;
    private com.squareup.okhttp.ConnectionPool connectionPool;
    private java.net.CookieHandler cookieHandler;
    private com.squareup.okhttp.Dispatcher dispatcher;
    private boolean followSslRedirects;
    private javax.net.ssl.HostnameVerifier hostnameVerifier;
    private com.squareup.okhttp.internal.InternalCache internalCache;
    private java.util.List protocols;
    private java.net.Proxy proxy;
    private java.net.ProxySelector proxySelector;
    private int readTimeout;
    private final com.squareup.okhttp.internal.RouteDatabase routeDatabase;
    private javax.net.SocketFactory socketFactory;
    private javax.net.ssl.SSLSocketFactory sslSocketFactory;
    private int writeTimeout;

    static void <clinit>()
    {
        com.squareup.okhttp.OkHttpClient$1 $r0;

        nop;

        $r0 = new com.squareup.okhttp.OkHttpClient$1;

        specialinvoke $r0.<com.squareup.okhttp.OkHttpClient$1: void <init>()>();

        <com.squareup.okhttp.internal.Internal: com.squareup.okhttp.internal.Internal instance> = $r0;

        return;
    }

    public void <init>()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.RouteDatabase $r1;
        com.squareup.okhttp.Dispatcher $r2;
        int varReplacer516;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer516 = 1;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followSslRedirects> = varReplacer516;

        $r1 = new com.squareup.okhttp.internal.RouteDatabase;

        specialinvoke $r1.<com.squareup.okhttp.internal.RouteDatabase: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase routeDatabase> = $r1;

        $r2 = new com.squareup.okhttp.Dispatcher;

        specialinvoke $r2.<com.squareup.okhttp.Dispatcher: void <init>()>();

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher> = $r2;

        return;
    }

    static com.squareup.okhttp.internal.RouteDatabase access$000(com.squareup.okhttp.OkHttpClient)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.RouteDatabase r1;

        nop;

        $r0 := @parameter0: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase routeDatabase>;

        return r1;
    }

    private javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.SSLSocketFactory $r1;
        javax.net.ssl.SSLContext $r2;
        java.lang.Throwable $r3, $r5;
        java.lang.AssertionError $r4;
        null_type varReplacer1427, varReplacer1428, varReplacer1429;
        java.lang.String varReplacer1430;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        entermonitor $r0;

     label1:
        $r1 = <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory defaultSslSocketFactory>;

     label2:
        if $r1 != null goto label5;

     label3:
        varReplacer1430 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1430);

        varReplacer1427 = null;

        varReplacer1428 = null;

        varReplacer1429 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1427, varReplacer1427, varReplacer1427);

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label4:
        <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory defaultSslSocketFactory> = $r1;

     label5:
        $r1 = <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory defaultSslSocketFactory>;

     label6:
        exitmonitor $r0;

        return $r1;

     label7:
        $r3 := @caughtexception;

     label8:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label9:
        $r5 := @caughtexception;

        exitmonitor $r0;

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.security.GeneralSecurityException from label3 to label4 with label7;
        catch java.lang.Throwable from label3 to label5 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label8 to label9 with label9;
    }

    public com.squareup.okhttp.OkHttpClient cancel(java.lang.Object)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.lang.Object $r1;
        com.squareup.okhttp.Dispatcher $r2;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.lang.Object;

        $r2 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher>;

        virtualinvoke $r2.<com.squareup.okhttp.Dispatcher: void cancel(java.lang.Object)>($r1);

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient clone()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.lang.Object $r1;
        java.lang.Throwable $r2;
        java.lang.AssertionError $r3;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

     label1:
        $r1 = specialinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        $r0 = (com.squareup.okhttp.OkHttpClient) $r1;

        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public volatile java.lang.Object clone()
    {
        com.squareup.okhttp.OkHttpClient $r0;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r0 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient clone()>();

        return $r0;
    }

    com.squareup.okhttp.OkHttpClient copyWithDefaults()
    {
        com.squareup.okhttp.OkHttpClient $r0, $r1;
        java.net.ProxySelector $r2;
        java.net.CookieHandler $r3;
        javax.net.SocketFactory $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        javax.net.ssl.HostnameVerifier $r6;
        com.squareup.okhttp.internal.tls.OkHostnameVerifier $r7;
        com.squareup.okhttp.Authenticator $r8;
        com.squareup.okhttp.ConnectionPool $r9;
        java.util.List $r10;
        com.squareup.okhttp.Protocol[] $r11;
        com.squareup.okhttp.Protocol $r12;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient clone()>();

        $r2 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector>;

        if $r2 != null goto label1;

        $r2 = staticinvoke <java.net.ProxySelector: java.net.ProxySelector getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector> = $r2;

     label1:
        $r3 = $r1.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler>;

        if $r3 != null goto label2;

        $r3 = staticinvoke <java.net.CookieHandler: java.net.CookieHandler getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler> = $r3;

     label2:
        $r4 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory>;

        if $r4 != null goto label3;

        $r4 = staticinvoke <javax.net.SocketFactory: javax.net.SocketFactory getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory> = $r4;

     label3:
        $r5 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r5 != null goto label4;

        $r5 = specialinvoke $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>();

        $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory> = $r5;

     label4:
        $r6 = $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        if $r6 != null goto label5;

        $r7 = <com.squareup.okhttp.internal.tls.OkHostnameVerifier: com.squareup.okhttp.internal.tls.OkHostnameVerifier INSTANCE>;

        $r1.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier> = $r7;

     label5:
        $r8 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator>;

        if $r8 != null goto label6;

        $r8 = <com.squareup.okhttp.internal.http.AuthenticatorAdapter: com.squareup.okhttp.Authenticator INSTANCE>;

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator> = $r8;

     label6:
        $r9 = $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool>;

        if $r9 != null goto label7;

        $r9 = staticinvoke <com.squareup.okhttp.ConnectionPool: com.squareup.okhttp.ConnectionPool getDefault()>();

        $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool> = $r9;

     label7:
        $r10 = $r1.<com.squareup.okhttp.OkHttpClient: java.util.List protocols>;

        if $r10 != null goto label8;

        $r11 = newarray (com.squareup.okhttp.Protocol)[3];

        $r12 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_2>;

        $r11[0] = $r12;

        $r12 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol SPDY_3>;

        $r11[1] = $r12;

        $r12 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_1_1>;

        $r11[2] = $r12;

        $r10 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>($r11);

        $r1.<com.squareup.okhttp.OkHttpClient: java.util.List protocols> = $r10;

     label8:
        return $r1;
    }

    public com.squareup.okhttp.Authenticator getAuthenticator()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Authenticator r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator>;

        return r1;
    }

    public com.squareup.okhttp.Cache getCache()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Cache r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache>;

        return r1;
    }

    public int getConnectTimeout()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        int i0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        i0 = $r0.<com.squareup.okhttp.OkHttpClient: int connectTimeout>;

        return i0;
    }

    public com.squareup.okhttp.ConnectionPool getConnectionPool()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.ConnectionPool r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool>;

        return r1;
    }

    public java.net.CookieHandler getCookieHandler()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.CookieHandler r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler>;

        return r1;
    }

    public com.squareup.okhttp.Dispatcher getDispatcher()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Dispatcher r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher>;

        return r1;
    }

    public boolean getFollowSslRedirects()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        boolean z0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        z0 = $r0.<com.squareup.okhttp.OkHttpClient: boolean followSslRedirects>;

        return z0;
    }

    public javax.net.ssl.HostnameVerifier getHostnameVerifier()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.HostnameVerifier r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        return r1;
    }

    public java.util.List getProtocols()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.List r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.util.List protocols>;

        return r1;
    }

    public java.net.Proxy getProxy()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.Proxy r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.net.Proxy proxy>;

        return r1;
    }

    public java.net.ProxySelector getProxySelector()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.ProxySelector r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector>;

        return r1;
    }

    public int getReadTimeout()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        int i0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        i0 = $r0.<com.squareup.okhttp.OkHttpClient: int readTimeout>;

        return i0;
    }

    com.squareup.okhttp.internal.RouteDatabase getRoutesDatabase()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.RouteDatabase r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.RouteDatabase routeDatabase>;

        return r1;
    }

    public javax.net.SocketFactory getSocketFactory()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.SocketFactory r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory getSslSocketFactory()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.SSLSocketFactory r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        return r1;
    }

    public int getWriteTimeout()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        int i0;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        i0 = $r0.<com.squareup.okhttp.OkHttpClient: int writeTimeout>;

        return i0;
    }

    com.squareup.okhttp.internal.InternalCache internalCache()
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.InternalCache r1;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        r1 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache internalCache>;

        return r1;
    }

    public com.squareup.okhttp.Call newCall(com.squareup.okhttp.Request)
    {
        com.squareup.okhttp.OkHttpClient $r0, $r4;
        com.squareup.okhttp.Request $r1;
        com.squareup.okhttp.Call $r2;
        com.squareup.okhttp.Dispatcher $r3;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Request;

        $r4 = virtualinvoke $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient copyWithDefaults()>();

        $r2 = new com.squareup.okhttp.Call;

        $r3 = $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher>;

        specialinvoke $r2.<com.squareup.okhttp.Call: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Dispatcher,com.squareup.okhttp.Request)>($r4, $r3, $r1);

        return $r2;
    }

    public com.squareup.okhttp.OkHttpClient setAuthenticator(com.squareup.okhttp.Authenticator)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Authenticator $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Authenticator;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Authenticator authenticator> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setCache(com.squareup.okhttp.Cache)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Cache $r1;
        com.squareup.okhttp.internal.InternalCache $r2;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Cache;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache> = $r1;

        if $r1 == null goto label2;

        $r2 = $r1.<com.squareup.okhttp.Cache: com.squareup.okhttp.internal.InternalCache internalCache>;

     label1:
        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache internalCache> = $r2;

        return $r0;

     label2:
        $r2 = null;

        goto label1;
    }

    public void setConnectTimeout(long, java.util.concurrent.TimeUnit)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        long $l0, varReplacer517;
        java.util.concurrent.TimeUnit $r1;
        byte $b1;
        java.lang.IllegalArgumentException $r2;
        int $i2;
        java.lang.String varReplacer518, varReplacer519;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b1 = 1;

        goto label1;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer519 = "unit == null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer519);

        throw $r2;

     label2:
        varReplacer517 = 15000L;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(varReplacer517);

        $b1 = $l0 cmp 2147483647L;

        if $b1 <= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer518 = "Timeout too large.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer518);

        throw $r2;

     label3:
        $i2 = (int) $l0;

        $r0.<com.squareup.okhttp.OkHttpClient: int connectTimeout> = $i2;

        return;
    }

    public com.squareup.okhttp.OkHttpClient setConnectionPool(com.squareup.okhttp.ConnectionPool)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.ConnectionPool $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.ConnectionPool;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.ConnectionPool connectionPool> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setCookieHandler(java.net.CookieHandler)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.CookieHandler $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.net.CookieHandler;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler cookieHandler> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setDispatcher(com.squareup.okhttp.Dispatcher)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.Dispatcher $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.Dispatcher;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("dispatcher == null");

        throw $r2;

     label1:
        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Dispatcher dispatcher> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setFollowSslRedirects(boolean)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        boolean $z0;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $z0 := @parameter0: boolean;

        $r0.<com.squareup.okhttp.OkHttpClient: boolean followSslRedirects> = $z0;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.HostnameVerifier $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: javax.net.ssl.HostnameVerifier;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier> = $r1;

        return $r0;
    }

    void setInternalCache(com.squareup.okhttp.internal.InternalCache)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        com.squareup.okhttp.internal.InternalCache $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: com.squareup.okhttp.internal.InternalCache;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.internal.InternalCache internalCache> = $r1;

        $r0.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache cache> = null;

        return;
    }

    public com.squareup.okhttp.OkHttpClient setProtocols(java.util.List)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.util.List $r1;
        com.squareup.okhttp.Protocol $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.util.List;

        $r1 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>($r1);

        $r2 = <com.squareup.okhttp.Protocol: com.squareup.okhttp.Protocol HTTP_1_1>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("protocols doesn\'t contain http/1.1: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        $z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(null);

        if $z0 == 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("protocols must not contain null");

        throw $r3;

     label2:
        $r1 = staticinvoke <com.squareup.okhttp.internal.Util: java.util.List immutableList(java.util.List)>($r1);

        $r0.<com.squareup.okhttp.OkHttpClient: java.util.List protocols> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setProxy(java.net.Proxy)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.Proxy $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.net.Proxy;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.Proxy proxy> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setProxySelector(java.net.ProxySelector)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        java.net.ProxySelector $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: java.net.ProxySelector;

        $r0.<com.squareup.okhttp.OkHttpClient: java.net.ProxySelector proxySelector> = $r1;

        return $r0;
    }

    public void setReadTimeout(long, java.util.concurrent.TimeUnit)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        long $l0, varReplacer520;
        java.util.concurrent.TimeUnit $r1;
        byte $b1;
        java.lang.IllegalArgumentException $r2;
        int $i2;
        java.lang.String varReplacer521, varReplacer522;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b1 = 1;

        goto label1;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer521 = "unit == null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer521);

        throw $r2;

     label2:
        varReplacer520 = 20000L;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(varReplacer520);

        $b1 = $l0 cmp 2147483647L;

        if $b1 <= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer522 = "Timeout too large.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer522);

        throw $r2;

     label3:
        $i2 = (int) $l0;

        $r0.<com.squareup.okhttp.OkHttpClient: int readTimeout> = $i2;

        return;
    }

    public com.squareup.okhttp.OkHttpClient setSocketFactory(javax.net.SocketFactory)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.SocketFactory $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: javax.net.SocketFactory;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.SocketFactory socketFactory> = $r1;

        return $r0;
    }

    public com.squareup.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        javax.net.ssl.SSLSocketFactory $r1;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        $r0.<com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory sslSocketFactory> = $r1;

        return $r0;
    }

    public void setWriteTimeout(long, java.util.concurrent.TimeUnit)
    {
        com.squareup.okhttp.OkHttpClient $r0;
        long $l0, varReplacer525;
        java.util.concurrent.TimeUnit $r1;
        byte $b1;
        java.lang.IllegalArgumentException $r2;
        int $i2;
        java.lang.String varReplacer523, varReplacer524;

        nop;

        $r0 := @this: com.squareup.okhttp.OkHttpClient;

        $l0 := @parameter0: long;

        $r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b1 = 1;

        goto label1;

     label1:
        if $r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer524 = "unit == null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer524);

        throw $r2;

     label2:
        varReplacer525 = 20000L;

        $l0 = virtualinvoke $r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(varReplacer525);

        $b1 = $l0 cmp 2147483647L;

        if $b1 <= 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer523 = "Timeout too large.";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer523);

        throw $r2;

     label3:
        $i2 = (int) $l0;

        $r0.<com.squareup.okhttp.OkHttpClient: int writeTimeout> = $i2;

        return;
    }
}
