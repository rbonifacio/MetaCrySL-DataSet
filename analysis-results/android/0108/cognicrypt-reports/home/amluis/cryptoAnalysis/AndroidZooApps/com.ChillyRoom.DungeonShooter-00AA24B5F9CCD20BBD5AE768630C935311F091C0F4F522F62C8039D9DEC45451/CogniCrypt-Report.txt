Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: abf43253ed8f3e54a83714aeb42badc0858fe988b88931ba5975809bedeadfd6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: 5e5bf379b7bd5b97f81dadc39946b76c3f7d76f05526f9082cced7a7c9e48966
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11686)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: b6e0207fd66e027079915f4f063473a2876ed69ed17653e1af421331350aea6e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String MD5(java.lang.String)>
		SHA-256: 551d4ad04ac0130ea70867dd327d7c0b9b54423955760a6406ecd8a8c79bcbae
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer11691)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: a61f343b2e125ccad18ea39811fd1e4ff7f79b30996f684ca0eea86c7a52a42c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer347)
		Method: <com.unity3d.player.UnityPlayer: java.lang.String a(java.lang.String)>
		SHA-256: 74f61917c6cea0eac0445d2f4f0ac1508801727862fa3a123c6e56d34e288a2b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.unity3d.player.UnityPlayer: java.lang.String a(java.lang.String)>
		SHA-256: 5a54f705314d6605f4cf61ba388d3b495336c885c3ea98cfb7cec081c65981da
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: 6f212fd969e9171ce08bf4d1e289877af8000f513b92c4a566d112ac1f4890b9
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 4c2d4ef8458a720cb11f0216a0ea951d5a56350fe081f595b501de8eb9ec750e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11687)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: ea2ca30974f80b3b26ca217fb5cc57be0195acab3742f2310c5fd0c8f961e37c
		Secure: false
	Object:
		Variable: varReplacer11371
		Type: java.lang.String
		Statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer11371)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: a03c62cc5a0637f499d8551958727725004b4d2d5f0361fd7adfbd6ef18ce103
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer10240)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: 40b54490da141ea7a3cd788d5cd04c8e9b23448ac5ca23448ebf981df1445555
		Secure: false
	Object:
		Variable: varReplacer10240
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer10240)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: 55edc8e8138ed99f287680a8dbb8fdfda43b426a24f08eba5b4e606f16f3ece0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] b(int,byte[],byte[])>
		SHA-256: 2ae8bb311bea381fffc5fd2fe6fc54d49023d2aff1383453a7010af68f724d3e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: e66b103769fe8300f57e7a97b484ed722c6c04ee2cb8cb66cdbf936f81665e6b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: ffa5b23ed28a4dd5b25bdec8ca4356de9f8907c516e4448937636427a5eb19cb
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: 8880a047bf40bc5dec0b3df722fd05892da6ae419d327eaa3640e62fa041fb71
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4337)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 5b83c75b50fd445b119152f8cf6f87661e3c4f8469731f2cb41fd71085456d3b
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int)>
		SHA-256: c4b27919efc0504936189337d74489b888cbe444a9ca2cc9882885b7ce1121ee
		Secure: true
	Object:
		Variable: varReplacer11691
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer11691)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: 92ae1716714842d75e9772fec35f475bb3433497dac3b4872baa17c5a8da4e67
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: 138bd9695ae6e5ad998913ce43b78feb5de1c8ab14a8f0e82d0d68f897dca60e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12081)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] b(int,byte[],byte[])>
		SHA-256: 4e2b6025fbd0a970b4db33772cc46d23715dbab8540ff19f87336eecaeb9af93
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: c795e7eda222ee706bf8dc74e0cf109d78009ea2b33faaf3544ad11303c922be
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9879)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: c9315b4f92a1c6717c6f262bb094ac9d8bc068c15b8ce0996ae0b8f6d29be24a
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: 61ae4a4b3828c08c89e8e818a6f3d13d73db9dad6cd747430adc462c6596fe34
		Secure: false
	Object:
		Variable: r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer11371)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: a6c3095a59eb35818d62e44577ad546a4afce6b4cfca912d79f12b88a735ba24
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: a083f16754a111eeaca1e2fd5172487fbf6e4f736a06f763225f8aaf5b81958e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int)>
		SHA-256: 1e82180797dda95c714f77d5d4aeeaafb4e3f1f39751fff892dae964e08421c3
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10788)
		Method: <com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: f965dbaf2904547ecfca2d138f02bbd995a4b27fd8c9312c03712108cce322e3
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11693)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: 809bc693de80ea4f8a1dd3261d62b9ab485602494e5ceed1cadaa1431c78ad2b
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 6e40f2a2ecc146f06e6f4afd32212e581424da55f9b18c8ebb33a748593bf95c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10239)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: 12abff92b8798d49b8e5a63181b882f65137497d5579317b346b3a6d06da1ed8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: acacc80fe3be42692c6986b1af176a60dcbd6a974f08f68ad842508b7a47d851
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1109)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: 8b486f447f2a102de180af8fae83c6deb992434a05244ac2edf0b90ba2732f87
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10227)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: f7bf5e787207e26aa3029744e739c242b51f613d9ef12af4850d3c9bc9a2f7b4
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: 28315aa9f4666cf63c694727245200ebf64e1465c3ed2c81d73d75cd6b3b76d7
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: 70bb74f097e2dd84d4a0de962ef47d7c63b680bdcfc7c4bd45c5570de7bb2dcb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1081)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 958f8925a582846abc5b347c7473775bfef7be5b558bfb7348a2666df9b3a1bd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = interfaceinvoke $r8.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int)>
		SHA-256: 6f2dc5e0d7912e78f7b9ec02267eaf88238bc9b3172e73c49d0474840efac0f0
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1124)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String MD5(java.lang.String)>
		SHA-256: 9d32d64dcf907761db19c8c10df5dfd455227153c4244286e7663e89ebc6376e
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11368)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 7c8e3ce89581f3c38d29aba69cfc7273ba047af8a6f2807a1d58a5fc96d946cc
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>($i1, $r1)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: 6a21c1bb7ec44ebfbe45801f9b90a053cf32c237dd3de30f02e70b1ecf7b16d
		Secure: false
	Object:
		Variable: varReplacer1112
		Type: java.lang.String
		Statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1112)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: 34c4bd8ebce4b64645617a9159c3e804ba88f60b9a2f96dae4efcfecc06d1296
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.KeyGenerator
		Statement: $r6 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer10856)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int)>
		SHA-256: ab2d04aaef99ddc8e5c99336bc388491f7fa5c1b09ee62a3c110c52889d8a504
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10793)
		Method: <com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: 4c1646b5a6699d623ffe5f08f012f4fdf69790b14dcc094e45708074e5b8361e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: d167e5bf2718063187c7d8644bd9acef166b7e44d330f8eb4af9b809ddf441c9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 8308cc419a228b856ecf812f4a1bcec969318612ae2f3894f4977a38456c2fd4
		Secure: true
	Object:
		Variable: r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1112)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: 1afcc755dec341619ec050e766b6a01b15690b26754283b07c14b415121a5d0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer12088)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: a90ccaa00d548fc2772bacb5345456c90a101f94d91ae2b17243aee3a2f99061
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10231)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: 6b44ba55b8deba8ac7e22fd2610676bb2be1ac54c4baa33c5906746c8726226d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: 7a2af8506b1c8ab09c2f6520b590104ce1b84343d84cbc7d5cd8248768f734c7
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: 2a1b19b8a4fb51f1ce0783dc45674c8f884b7e5dca53391fc2ae5f4bdc6e733f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12085)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: c6c4681f89f889861467b60a15aae3b86570abdc6f4549230f09acb6c3e9a5b5
		Secure: false
	Object:
		Variable: varReplacer12088
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer12088)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: b8db862b773e80692e8232f2e3a88e148e00a076fc6321cc39cbe976cd8d1861
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: f9108569a36941589d5b81deb435a01e8fad54b250c1edd01b58d79475c0dd6d
		Secure: false

Findings in Java Class: com.unity3d.player.UnityPlayer

	 in Method: java.lang.String a(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #74f61917c6cea0eac0445d2f4f0ac1508801727862fa3a123c6e56d34e288a2b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #74f61917c6cea0eac0445d2f4f0ac1508801727862fa3a123c6e56d34e288a2b)
			Third parameter (with value 0)Variable pre_lenmust be  greater than pre_off
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r1, varReplacer350, $i3)


Findings in Java Class: com.soulgame.sgsdk.tgsdklib.TGSDKUtil

	 in Method: java.lang.String encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8b486f447f2a102de180af8fae83c6deb992434a05244ac2edf0b90ba2732f87)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1109)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1117, $r6, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8b486f447f2a102de180af8fae83c6deb992434a05244ac2edf0b90ba2732f87)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1109)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1112)


	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7c8e3ce89581f3c38d29aba69cfc7273ba047af8a6f2807a1d58a5fc96d946cc)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11368)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11370, $r6, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer11371)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7c8e3ce89581f3c38d29aba69cfc7273ba047af8a6f2807a1d58a5fc96d946cc)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11368)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: com.tencent.bugly.tgsdk.proguard.af

	 in Method: byte[] b(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f7bf5e787207e26aa3029744e739c242b51f613d9ef12af4850d3c9bc9a2f7b4)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10227)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10230, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #6b44ba55b8deba8ac7e22fd2610676bb2be1ac54c4baa33c5906746c8726226d)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10231)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10230, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11683, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b6e0207fd66e027079915f4f063473a2876ed69ed17653e1af421331350aea6e)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11686)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #ea2ca30974f80b3b26ca217fb5cc57be0195acab3742f2310c5fd0c8f961e37c)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11687)


Findings in Java Class: com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4c1646b5a6699d623ffe5f08f012f4fdf69790b14dcc094e45708074e5b8361e)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10793)


Findings in Java Class: com.tencent.bugly.tgsdk.proguard.z

	 in Method: byte[] a(int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c6c4681f89f889861467b60a15aae3b86570abdc6f4549230f09acb6c3e9a5b5)
			First parameter (with value "AES/GCM/NoPadding") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12085)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c6c4681f89f889861467b60a15aae3b86570abdc6f4549230f09acb6c3e9a5b5)
			First parameter (with value "AES/GCM/NoPadding") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12085)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>($i1, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer12088)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r5)


	 in Method: byte[] b(int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12083, $r4)


Findings in Java Class: com.tencent.bugly.tgsdk.proguard.ae

	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10238, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer10240)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10238, $r5, $r8)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer11691)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11690, $r5, $r8)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1079, r7, varReplacer1079)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1079, r7, varReplacer1079)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 56

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	ConstraintError: 12
	RequiredPredicateError: 30
=====================================================================