Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3112)
		Method: <com.facebook.ads.internal.util.t: java.lang.String a(java.lang.String)>
		SHA-256: 88385bba1bfaa06b2e17e316f1b4ddc8b6e65bd4f626fd8bf6322559a51123be
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.flurry.sdk.fb: byte[] d(java.lang.String)>
		SHA-256: 1a1cc63830a47172efe6cbfe44438f7887878e3b6548376813c2dd25011ed742
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.internal.jd: void a()>
		SHA-256: 59e1d0d4884efb1592c921d02bc11a52e37f9db56793d05b6a2df25a1ebfc8
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1166)
		Method: <com.flurry.sdk.fb: byte[] d(java.lang.String)>
		SHA-256: 7b41b07eea78a37476dd695028e026379f2cb12c3565a16158ce5a8abc7f3e7d
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8599)
		Method: <okhttp3.ah: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 1f74a43dbcf22450b6b81ac808261a5b68385906770c220e52794571d905c577
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.appevents.f: java.lang.String b(java.lang.String)>
		SHA-256: 402b184e9e59555d389ca3f32bd9dba6a1f6d2cda790902ccde2b496ab4dfeb7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12332)
		Method: <okhttp3.internal.m: a.j a(a.j)>
		SHA-256: af6815ddacc7305eb364e89f7a1ee20fec0bc6b199083f5b3debe8243af7ae63
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r9.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r8, $r11)
		Method: <com.flurry.sdk.cz: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)>
		SHA-256: 16b4ee685194b5150c9ab5dffdc62fc66837468af57f451a43130dfeca2e1f48
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2999)
		Method: <com.android.volley.g: java.lang.String a(java.lang.String)>
		SHA-256: c4b8f4f5dbcffb758e0f2466c145b03769a0c1ddd6858f4c6d0a490270605454
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9814)
		Method: <com.pingstart.adsdk.utils.DeviceUtils: java.lang.String getDeviceUUID(android.content.Context)>
		SHA-256: ec811bfb31b02140eb97bacbe0f22c1c85a4f9381fa922ddb25965292b88126b
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.pingstart.adsdk.utils.DeviceUtils: java.lang.String getDeviceUUID(android.content.Context)>
		SHA-256: 35ed64c29f3a9d4c1afb7ee0eb9c6799e2bf945f652179dcaae1985eef39cae9
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5880)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 2afb37e2833fe07a2486d6a0f73aa73438fe622b16e49895fe2107fb06b8b28e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11747)
		Method: <okhttp3.internal.m: a.j b(a.j)>
		SHA-256: 1a337fc6de3f122a0bea4d718d6fe41505acf66c8225b3db570a0992d621f0d5
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.t: java.lang.String a(java.lang.String)>
		SHA-256: 4e89201f4bdcd77c27e858ba625da59031a7db9be7b66975f2c164af9219b50c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3092)
		Method: <com.google.android.gms.internal.aqd: java.lang.String a(java.lang.String)>
		SHA-256: 4b9a7273f92ed75fa2ec1b7586908e045d6a341bca126ffbe46dad0408b8bbf9
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.m: a.j b(a.j)>
		SHA-256: c1cd049e90cc31f82667f3ef4303c72abefe59d593653468c0419dc76db42d30
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.aqd: java.lang.String a(java.lang.String)>
		SHA-256: e9e325d8bd091961f7b530d99a91bcdd3ad94aef0d00cb6bae1d101217a7e0c0
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2510)
		Method: <com.facebook.appevents.f: java.lang.String b(java.lang.String)>
		SHA-256: a028659adbcff1865e121af8b8400d61a9a81353f237ac3914e333fb5012eb3b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.g: java.lang.String a(java.lang.String)>
		SHA-256: 6327d1ca181062074fdc5fb8a7c17f64fdd3c2577ee6d17b01a7d36f7c0563a2
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.m: a.j a(a.j)>
		SHA-256: caff16dd6cc6ca34c4ae1c9225a64434d55e4a4d1c77d972b816e772de1dff5d
		Secure: true

Findings in Java Class: com.flurry.sdk.cz

	 in Method: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)
		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #16b4ee685194b5150c9ab5dffdc62fc66837468af57f451a43130dfeca2e1f48)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: virtualinvoke $r9.<java.security.DigestOutputStream: void on(boolean)>(varReplacer10955)

		ForbiddenMethodError violating CrySL rule for java.security.DigestOutputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestOutputStream
			at statement: virtualinvoke $r9.<java.security.DigestOutputStream: void on(boolean)>(varReplacer10955)


Findings in Java Class: okhttp3.ah

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8600, r6, varReplacer8600)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8600, r6, varReplacer8600)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	ForbiddenMethodError: 1
	RequiredPredicateError: 2
=====================================================================