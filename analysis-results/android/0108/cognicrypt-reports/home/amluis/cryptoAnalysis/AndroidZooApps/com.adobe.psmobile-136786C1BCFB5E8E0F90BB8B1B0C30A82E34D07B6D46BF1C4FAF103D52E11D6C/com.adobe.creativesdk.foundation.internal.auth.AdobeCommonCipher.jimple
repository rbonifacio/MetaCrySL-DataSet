final class com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher extends java.lang.Object
{
    private static com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance;
    private javax.crypto.Cipher decryptionCipher;
    private javax.crypto.Cipher encryptionCipher;

    static void <clinit>()
    {
        null_type varReplacer985;

        nop;

        varReplacer985 = null;

        <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance> = varReplacer985;

        return;
    }

    public void <init>(byte[]) throws javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r0;
        byte[] $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        java.lang.String varReplacer995, varReplacer998, varReplacer999;
        int varReplacer996, varReplacer997;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher;

        $r1 := @parameter0: byte[];

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer998 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer998);

        varReplacer999 = "AES";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer999);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher encryptionCipher> = $r3;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher encryptionCipher>;

        varReplacer997 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer997, $r2);

        varReplacer995 = "AES";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer995);

        $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher decryptionCipher> = $r3;

        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher decryptionCipher>;

        varReplacer996 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer996, $r2);

        return;
    }

    static com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher createInstance(byte[]) throws javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException
    {
        byte[] $r0;
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r1;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance>;

        if $r1 != null goto label1;

        $r1 = new com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher;

        specialinvoke $r1.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: void <init>(byte[])>($r0);

        <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance> = $r1;

     label1:
        $r1 = <com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher instance>;

        return $r1;
    }

    java.lang.String decrypt(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r0;
        java.lang.String $r1, varReplacer8925, varReplacer8927, varReplacer8928;
        java.lang.Exception $r2;
        javax.crypto.Cipher $r3;
        byte[] $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.Class $r6;
        null_type varReplacer8926;
        int varReplacer8929;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label6;

     label1:
        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher decryptionCipher>;

        varReplacer8925 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer8925);

        varReplacer8929 = 2;

        $r4 = staticinvoke <android.util.Base64: byte[] decode(byte[],int)>($r4, varReplacer8929);

        $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

     label2:
        $r1 = new java.lang.String;

     label3:
        varReplacer8927 = "UTF-8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, varReplacer8927);

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        varReplacer8928 = "Decryption error";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, varReplacer8928, $r2);

     label6:
        varReplacer8926 = null;

        return varReplacer8926;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    java.lang.String encrypt(java.lang.String)
    {
        com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher $r0;
        java.lang.String $r1, varReplacer1292, varReplacer1293, varReplacer1295;
        java.lang.Exception $r2;
        javax.crypto.Cipher $r3;
        byte[] $r4;
        com.adobe.creativesdk.foundation.internal.utils.logging.Level $r5;
        java.lang.Class $r6;
        null_type varReplacer1294;
        int varReplacer1296;

        nop;

        $r0 := @this: com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label6;

     label1:
        $r3 = $r0.<com.adobe.creativesdk.foundation.internal.auth.AdobeCommonCipher: javax.crypto.Cipher encryptionCipher>;

        varReplacer1292 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1292);

        $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

     label2:
        $r1 = new java.lang.String;

     label3:
        varReplacer1296 = 2;

        $r4 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r4, varReplacer1296);

        varReplacer1295 = "UTF-8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, varReplacer1295);

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        $r5 = <com.adobe.creativesdk.foundation.internal.utils.logging.Level: com.adobe.creativesdk.foundation.internal.utils.logging.Level ERROR>;

        $r6 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        varReplacer1293 = "Encryption error";

        staticinvoke <com.adobe.creativesdk.foundation.internal.utils.logging.AdobeLogger: void log(com.adobe.creativesdk.foundation.internal.utils.logging.Level,java.lang.String,java.lang.String,java.lang.Throwable)>($r5, $r1, varReplacer1293, $r2);

     label6:
        varReplacer1294 = null;

        return varReplacer1294;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
