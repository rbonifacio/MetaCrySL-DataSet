public class com.amazon.identity.kcpsdk.auth.RequestSigner extends java.lang.Object
{
    private static final byte[] EMPTY_BODY;
    public static final java.lang.String TAG;
    public java.lang.String mADPAlgorithm;
    public final com.amazon.identity.kcpsdk.auth.ITokenAuthProvider mAuthProvider;
    private java.lang.String mOverriddenTimestamp;
    private boolean mUseBustedIdentityBehavior;
    public boolean mUseLegacyAuth;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        byte[] $r2;

        nop;

        $r1 = class "Lcom/amazon/identity/kcpsdk/auth/RequestSigner;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG> = $r0;

        $r2 = newarray (byte)[0];

        <com.amazon.identity.kcpsdk.auth.RequestSigner: byte[] EMPTY_BODY> = $r2;

        return;
    }

    public void <init>(com.amazon.identity.kcpsdk.auth.ITokenAuthProvider)
    {
        com.amazon.identity.kcpsdk.auth.RequestSigner $r0;
        com.amazon.identity.kcpsdk.auth.ITokenAuthProvider $r1;
        null_type varReplacer16713;
        int varReplacer16714, varReplacer16715;

        nop;

        $r0 := @this: com.amazon.identity.kcpsdk.auth.RequestSigner;

        $r1 := @parameter0: com.amazon.identity.kcpsdk.auth.ITokenAuthProvider;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer16713 = null;

        $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String mADPAlgorithm> = varReplacer16713;

        $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: com.amazon.identity.kcpsdk.auth.ITokenAuthProvider mAuthProvider> = $r1;

        varReplacer16715 = 0;

        $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: boolean mUseLegacyAuth> = varReplacer16715;

        varReplacer16714 = 0;

        $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: boolean mUseBustedIdentityBehavior> = varReplacer16714;

        return;
    }

    private java.lang.String getAdpAlgorithmHeaderName()
    {
        com.amazon.identity.kcpsdk.auth.RequestSigner $r0;
        boolean $z0;
        java.lang.String varReplacer17121;
        null_type varReplacer17122;

        nop;

        $r0 := @this: com.amazon.identity.kcpsdk.auth.RequestSigner;

        $z0 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: boolean mUseLegacyAuth>;

        if $z0 == 0 goto label1;

        varReplacer17122 = null;

        return varReplacer17122;

     label1:
        varReplacer17121 = "x-adp-alg";

        return varReplacer17121;
    }

    private byte[] signWithNewAuth(byte[], java.security.PrivateKey)
    {
        com.amazon.identity.kcpsdk.auth.RequestSigner $r0;
        byte[] $r1;
        java.security.PrivateKey $r2;
        java.lang.String $r3, $r7, varReplacer17115, varReplacer17119, varReplacer17120;
        java.security.Signature $r4;
        java.lang.Throwable $r5, $r8, $r9;
        java.lang.StringBuilder $r6, r10;
        java.security.NoSuchAlgorithmException r11;
        java.security.InvalidKeyException r12;
        java.security.SignatureException r13;
        null_type varReplacer17116, varReplacer17117, varReplacer17118;

        nop;

        $r0 := @this: com.amazon.identity.kcpsdk.auth.RequestSigner;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.security.PrivateKey;

     label1:
        virtualinvoke $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: void initADPAlgorithm()>();

     label2:
        $r3 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String mADPAlgorithm>;

     label3:
        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r3);

        virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r2);

        virtualinvoke $r4.<java.security.Signature: void update(byte[])>($r1);

        $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>();

     label4:
        return $r1;

     label5:
        $r5 := @caughtexception;

        $r3 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        r10 = new java.lang.StringBuilder;

        varReplacer17120 = "signWithNewAuth: failed because of NoSuchAlgorithmException: ";

        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17120);

        r11 = (java.security.NoSuchAlgorithmException) $r5;

        $r7 = virtualinvoke r11.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r3, $r7);

        varReplacer17117 = null;

        return varReplacer17117;

     label6:
        $r8 := @caughtexception;

        $r3 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        r10 = new java.lang.StringBuilder;

        varReplacer17119 = "signWithNewAuth: failed because of InvalidKeyException: ";

        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17119);

        r12 = (java.security.InvalidKeyException) $r8;

        $r7 = virtualinvoke r12.<java.security.InvalidKeyException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r3, $r7);

        varReplacer17118 = null;

        return varReplacer17118;

     label7:
        $r9 := @caughtexception;

        $r3 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        r10 = new java.lang.StringBuilder;

        varReplacer17115 = "signWithNewAuth: failed because of SignatureException: ";

        specialinvoke r10.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17115);

        r13 = (java.security.SignatureException) $r9;

        $r7 = virtualinvoke r13.<java.security.SignatureException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r3, $r7);

        varReplacer17116 = null;

        return varReplacer17116;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.InvalidKeyException from label1 to label2 with label6;
        catch java.security.InvalidKeyException from label3 to label4 with label6;
        catch java.security.SignatureException from label1 to label2 with label7;
        catch java.security.SignatureException from label3 to label4 with label7;
    }

    private static byte[] signWithOldAuth(byte[], java.security.PrivateKey)
    {
        byte[] $r0;
        java.security.PrivateKey $r1;
        java.security.MessageDigest $r2;
        javax.crypto.Cipher $r3;
        java.lang.Throwable $r4, $r8, $r9, $r10, $r11;
        java.lang.String $r5, $r7, varReplacer17103, varReplacer17104, varReplacer17105, varReplacer17108, varReplacer17109, varReplacer17111, varReplacer17112;
        java.lang.StringBuilder $r6, r12;
        java.security.NoSuchAlgorithmException r13;
        javax.crypto.NoSuchPaddingException r14;
        javax.crypto.IllegalBlockSizeException r15;
        javax.crypto.BadPaddingException r16;
        java.security.InvalidKeyException r17;
        null_type varReplacer17102, varReplacer17106, varReplacer17107, varReplacer17110, varReplacer17114;
        int varReplacer17113;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.security.PrivateKey;

     label1:
        varReplacer17105 = "SHA-256";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17105);

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        varReplacer17109 = "RSA/ECB/PKCS1Padding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17109);

        varReplacer17113 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer17113, $r1);

        virtualinvoke $r3.<javax.crypto.Cipher: byte[] update(byte[])>($r0);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal()>();

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        r12 = new java.lang.StringBuilder;

        varReplacer17103 = "signWithOldAuth: failed because of NoSuchAlgorithmException: ";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17103);

        r13 = (java.security.NoSuchAlgorithmException) $r4;

        $r7 = virtualinvoke r13.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r5, $r7);

        varReplacer17106 = null;

        return varReplacer17106;

     label4:
        $r8 := @caughtexception;

        $r5 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        r12 = new java.lang.StringBuilder;

        varReplacer17112 = "signWithOldAuth: failed because of NoSuchPaddingException: ";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17112);

        r14 = (javax.crypto.NoSuchPaddingException) $r8;

        $r7 = virtualinvoke r14.<javax.crypto.NoSuchPaddingException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r5, $r7);

        varReplacer17114 = null;

        return varReplacer17114;

     label5:
        $r9 := @caughtexception;

        $r5 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        r12 = new java.lang.StringBuilder;

        varReplacer17111 = "signWithOldAuth: failed because of IllegalBlockSizeException: ";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17111);

        r15 = (javax.crypto.IllegalBlockSizeException) $r9;

        $r7 = virtualinvoke r15.<javax.crypto.IllegalBlockSizeException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r5, $r7);

        varReplacer17110 = null;

        return varReplacer17110;

     label6:
        $r10 := @caughtexception;

        $r5 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        r12 = new java.lang.StringBuilder;

        varReplacer17104 = "signWithOldAuth: failed because of BadPaddingException: ";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17104);

        r16 = (javax.crypto.BadPaddingException) $r10;

        $r7 = virtualinvoke r16.<javax.crypto.BadPaddingException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r5, $r7);

        varReplacer17107 = null;

        return varReplacer17107;

     label7:
        $r11 := @caughtexception;

        $r5 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        r12 = new java.lang.StringBuilder;

        varReplacer17108 = "signWithOldAuth: failed because of InvalidKeyException: ";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17108);

        r17 = (java.security.InvalidKeyException) $r11;

        $r7 = virtualinvoke r17.<java.security.InvalidKeyException: java.lang.String getMessage()>();

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r5, $r7);

        varReplacer17102 = null;

        return varReplacer17102;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label4;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label5;
        catch javax.crypto.BadPaddingException from label1 to label2 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
    }

    public void initADPAlgorithm()
    {
        com.amazon.identity.kcpsdk.auth.RequestSigner $r0;
        java.lang.String $r1, varReplacer16717, varReplacer16718, varReplacer16719;
        com.amazon.identity.kcpsdk.auth.ITokenAuthProvider $r2;
        boolean $z0;
        null_type varReplacer16716;

        nop;

        $r0 := @this: com.amazon.identity.kcpsdk.auth.RequestSigner;

        $r1 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String mADPAlgorithm>;

        if $r1 != null goto label4;

        $r2 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: com.amazon.identity.kcpsdk.auth.ITokenAuthProvider mAuthProvider>;

        $r1 = $r2.<com.amazon.identity.kcpsdk.auth.ITokenAuthProvider: java.lang.String mSignAlgo>;

        if $r1 != null goto label1;

        $r1 = virtualinvoke $r2.<com.amazon.identity.kcpsdk.auth.ITokenAuthProvider: java.lang.String getPrivateKey()>();

        if $r1 != null goto label2;

        varReplacer16716 = null;

        $r2.<com.amazon.identity.kcpsdk.auth.ITokenAuthProvider: java.lang.String mSignAlgo> = varReplacer16716;

     label1:
        $r1 = $r2.<com.amazon.identity.kcpsdk.auth.ITokenAuthProvider: java.lang.String mSignAlgo>;

        $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String mADPAlgorithm> = $r1;

        return;

     label2:
        varReplacer16717 = "-----BEGIN EC PRIVATE KEY-----";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer16717);

        if $z0 == 0 goto label3;

        varReplacer16718 = "SHA256withECDSA";

        $r2.<com.amazon.identity.kcpsdk.auth.ITokenAuthProvider: java.lang.String mSignAlgo> = varReplacer16718;

        goto label1;

     label3:
        varReplacer16719 = "SHA256WithRSA";

        $r2.<com.amazon.identity.kcpsdk.auth.ITokenAuthProvider: java.lang.String mSignAlgo> = varReplacer16719;

        goto label1;

     label4:
        return;
    }

    public final boolean signRequest(com.amazon.identity.kcpsdk.common.WebRequest)
    {
        com.amazon.identity.kcpsdk.auth.RequestSigner $r0;
        com.amazon.identity.kcpsdk.common.WebRequest $r1;
        java.lang.Exception $r2;
        int $i0, $i1, $i2, varReplacer17084, varReplacer17085, varReplacer17086, varReplacer17088, varReplacer17091, varReplacer17092, varReplacer17094, varReplacer17095, varReplacer17097, varReplacer17098, varReplacer17099;
        com.amazon.identity.kcpsdk.auth.ITokenAuthProvider $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r19, varReplacer17083, varReplacer17087, varReplacer17089, varReplacer17090, varReplacer17093, varReplacer17096, varReplacer17100, varReplacer17101;
        boolean $z0;
        byte[] $r8, $r13, $r14, $r15, $r16, $r17;
        java.lang.StringBuilder $r9;
        java.text.SimpleDateFormat $r10;
        java.util.Locale $r11;
        java.util.Date $r12;
        java.security.PrivateKey $r18;
        java.lang.Object[] $r20;

        nop;

        $r0 := @this: com.amazon.identity.kcpsdk.auth.RequestSigner;

        $r1 := @parameter0: com.amazon.identity.kcpsdk.common.WebRequest;

        $r3 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: com.amazon.identity.kcpsdk.auth.ITokenAuthProvider mAuthProvider>;

        if $r3 == null goto label01;

        if $r1 != null goto label02;

     label01:
        varReplacer17084 = 0;

        return varReplacer17084;

     label02:
        $r3 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: com.amazon.identity.kcpsdk.auth.ITokenAuthProvider mAuthProvider>;

        $r4 = virtualinvoke $r3.<com.amazon.identity.kcpsdk.auth.ITokenAuthProvider: java.lang.String getToken()>();

     label03:
        $r5 = virtualinvoke $r1.<com.amazon.identity.kcpsdk.common.WebRequest: java.lang.String getVerbAsString()>();

        $z0 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: boolean mUseBustedIdentityBehavior>;

     label04:
        if $z0 == 0 goto label16;

     label05:
        $r6 = virtualinvoke $r1.<com.amazon.identity.kcpsdk.common.WebRequest: java.lang.String getUrl()>();

     label06:
        $r7 = $r6;

     label07:
        $z0 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: boolean mUseBustedIdentityBehavior>;

     label08:
        if $z0 == 0 goto label22;

        $r8 = <com.amazon.identity.kcpsdk.auth.RequestSigner: byte[] EMPTY_BODY>;

     label09:
        $r6 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String mOverriddenTimestamp>;

     label10:
        if $r6 == null goto label24;

     label11:
        $r6 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String mOverriddenTimestamp>;

     label12:
        if $r4 == null goto label13;

        if $r5 == null goto label13;

        if $r7 == null goto label13;

        if $r6 != null goto label29;

     label13:
        $r8 = null;

     label14:
        if $r8 != null goto label58;

        $r5 = null;

     label15:
        if $r5 != null goto label76;

        varReplacer17085 = 0;

        return varReplacer17085;

     label16:
        $r6 = virtualinvoke $r1.<com.amazon.identity.kcpsdk.common.WebRequest: java.lang.String getPathAndQueryString()>();

     label17:
        if $r6 == null goto label84;

     label18:
        varReplacer17101 = "/";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer17101);

     label19:
        if $z0 != 0 goto label84;

        $r9 = new java.lang.StringBuilder;

     label20:
        varReplacer17083 = "/";

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17083);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label21:
        $r7 = $r6;

        goto label07;

     label22:
        $r8 = $r1.<com.amazon.identity.kcpsdk.common.WebRequest: byte[] mBody>;

     label23:
        goto label09;

     label24:
        $r10 = new java.text.SimpleDateFormat;

        $r11 = <java.util.Locale: java.util.Locale US>;

     label25:
        varReplacer17089 = "yyyy-MM-dd\'T\'HH:mm:ss\'Z\'";

        specialinvoke $r10.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(varReplacer17089, $r11);

     label26:
        $r12 = new java.util.Date;

     label27:
        specialinvoke $r12.<java.util.Date: void <init>()>();

        $r6 = virtualinvoke $r10.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r12);

     label28:
        goto label12;

     label29:
        $r13 = staticinvoke <com.amazon.identity.auth.device.utils.StringUtil: byte[] getUTF8Bytes(java.lang.String)>($r5);

        $r14 = staticinvoke <com.amazon.identity.auth.device.utils.StringUtil: byte[] getUTF8Bytes(java.lang.String)>($r7);

        $r15 = staticinvoke <com.amazon.identity.auth.device.utils.StringUtil: byte[] getUTF8Bytes(java.lang.String)>($r6);

     label30:
        if $r8 == null goto label57;

     label31:
        $i0 = lengthof $r8;

     label32:
        $r16 = staticinvoke <com.amazon.identity.auth.device.utils.StringUtil: byte[] getUTF8Bytes(java.lang.String)>($r4);

        $i1 = lengthof $r13;

     label33:
        $i1 = $i1 + 1;

     label34:
        $i2 = lengthof $r14;

     label35:
        $i1 = $i1 + $i2;

        $i1 = $i1 + 1;

     label36:
        $i2 = lengthof $r15;

     label37:
        $i1 = $i1 + $i2;

        $i1 = $i1 + 1;

        $i0 = $i0 + $i1;

        $i0 = $i0 + 1;

     label38:
        $i1 = lengthof $r16;

     label39:
        $i0 = $i0 + $i1;

     label40:
        $r17 = newarray (byte)[$i0];

        $i0 = lengthof $r13;

        varReplacer17097 = 0;

        varReplacer17098 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, varReplacer17097, $r17, varReplacer17097, $i0);

        $i0 = lengthof $r13;

     label41:
        $r17[$i0] = 10;

     label42:
        $i0 = $i0 + 1;

     label43:
        $i1 = lengthof $r14;

        varReplacer17091 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r14, varReplacer17091, $r17, $i0, $i1);

        $i1 = lengthof $r14;

     label44:
        $i0 = $i1 + $i0;

     label45:
        $r17[$i0] = 10;

     label46:
        $i0 = $i0 + 1;

     label47:
        $i1 = lengthof $r15;

        varReplacer17094 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, varReplacer17094, $r17, $i0, $i1);

        $i1 = lengthof $r15;

     label48:
        $i0 = $i0 + $i1;

     label49:
        $r17[$i0] = 10;

     label50:
        $i0 = $i0 + 1;

        if $r8 == null goto label53;

     label51:
        $i1 = lengthof $r8;

        varReplacer17088 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, varReplacer17088, $r17, $i0, $i1);

        $i1 = lengthof $r8;

     label52:
        $i0 = $i0 + $i1;

     label53:
        $r17[$i0] = 10;

     label54:
        $i0 = $i0 + 1;

     label55:
        $i1 = lengthof $r16;

        varReplacer17099 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r16, varReplacer17099, $r17, $i0, $i1);

     label56:
        $r8 = $r17;

        goto label14;

     label57:
        $i0 = 0;

        goto label32;

     label58:
        $r5 = null;

     label59:
        $r3 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: com.amazon.identity.kcpsdk.auth.ITokenAuthProvider mAuthProvider>;

        $r18 = virtualinvoke $r3.<com.amazon.identity.kcpsdk.auth.ITokenAuthProvider: java.security.PrivateKey getParsedPrivateKey()>();

     label60:
        if $r18 != null goto label62;

        $r5 = null;

     label61:
        if $r5 != null goto label73;

        $r5 = null;

        goto label15;

     label62:
        $z0 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: boolean mUseLegacyAuth>;

     label63:
        if $z0 == 0 goto label71;

     label64:
        virtualinvoke $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: void initADPAlgorithm()>();

        $r7 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String mADPAlgorithm>;

        varReplacer17096 = "SHA256WithRSA";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer17096);

     label65:
        if $z0 != 0 goto label67;

        $r7 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        $r9 = new java.lang.StringBuilder;

     label66:
        varReplacer17100 = "Try to use legacy auth when the algorithm is ";

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer17100);

        $r19 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String mADPAlgorithm>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r19 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String)>($r7, $r19);

     label67:
        $r8 = staticinvoke <com.amazon.identity.kcpsdk.auth.RequestSigner: byte[] signWithOldAuth(byte[],java.security.PrivateKey)>($r8, $r18);

     label68:
        if $r8 == null goto label61;

     label69:
        varReplacer17092 = 2;

        $r5 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r8, varReplacer17092);

     label70:
        goto label61;

     label71:
        $r8 = specialinvoke $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: byte[] signWithNewAuth(byte[],java.security.PrivateKey)>($r8, $r18);

     label72:
        goto label68;

     label73:
        $r20 = newarray (java.lang.Object)[2];

        $r20[0] = $r5;

        $r20[1] = $r6;

        varReplacer17090 = "%s:%s";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer17090, $r20);

     label74:
        goto label15;

     label75:
        $r2 := @caughtexception;

        $r4 = <com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String TAG>;

        varReplacer17093 = "Exception in getting ADP signature.";

        staticinvoke <com.amazon.identity.auth.device.utils.MAPLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)>($r4, varReplacer17093, $r2);

        varReplacer17095 = 0;

        return varReplacer17095;

     label76:
        $z0 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: boolean mUseLegacyAuth>;

        if $z0 == 0 goto label81;

        $r6 = "X-ADP-Request-Digest";

     label77:
        virtualinvoke $r1.<com.amazon.identity.kcpsdk.common.WebRequest: void setHeader(java.lang.String,java.lang.String)>($r6, $r5);

        $z0 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: boolean mUseLegacyAuth>;

        if $z0 == 0 goto label82;

        $r5 = "X-ADP-Authentication-Token";

     label78:
        virtualinvoke $r1.<com.amazon.identity.kcpsdk.common.WebRequest: void setHeader(java.lang.String,java.lang.String)>($r5, $r4);

        $r4 = specialinvoke $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String getAdpAlgorithmHeaderName()>();

        if $r4 == null goto label80;

        $r4 = specialinvoke $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String getAdpAlgorithmHeaderName()>();

        $z0 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: boolean mUseLegacyAuth>;

        if $z0 == 0 goto label83;

        $r5 = null;

     label79:
        virtualinvoke $r1.<com.amazon.identity.kcpsdk.common.WebRequest: void setHeader(java.lang.String,java.lang.String)>($r4, $r5);

     label80:
        varReplacer17086 = 1;

        return varReplacer17086;

     label81:
        $r6 = "x-adp-signature";

        goto label77;

     label82:
        $r5 = "x-adp-token";

        goto label78;

     label83:
        virtualinvoke $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: void initADPAlgorithm()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r5 = $r0.<com.amazon.identity.kcpsdk.auth.RequestSigner: java.lang.String mADPAlgorithm>;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer17087 = ":1.0";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer17087);

        $r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label79;

     label84:
        $r7 = $r6;

        goto label07;

        catch java.lang.Exception from label03 to label04 with label75;
        catch java.lang.Exception from label05 to label06 with label75;
        catch java.lang.Exception from label07 to label08 with label75;
        catch java.lang.Exception from label09 to label10 with label75;
        catch java.lang.Exception from label11 to label12 with label75;
        catch java.lang.Exception from label16 to label17 with label75;
        catch java.lang.Exception from label18 to label19 with label75;
        catch java.lang.Exception from label20 to label21 with label75;
        catch java.lang.Exception from label22 to label23 with label75;
        catch java.lang.Exception from label25 to label26 with label75;
        catch java.lang.Exception from label27 to label28 with label75;
        catch java.lang.Exception from label29 to label30 with label75;
        catch java.lang.Exception from label31 to label33 with label75;
        catch java.lang.Exception from label34 to label35 with label75;
        catch java.lang.Exception from label36 to label37 with label75;
        catch java.lang.Exception from label38 to label39 with label75;
        catch java.lang.Exception from label40 to label41 with label75;
        catch java.lang.Exception from label41 to label42 with label75;
        catch java.lang.Exception from label43 to label44 with label75;
        catch java.lang.Exception from label45 to label46 with label75;
        catch java.lang.Exception from label47 to label48 with label75;
        catch java.lang.Exception from label49 to label50 with label75;
        catch java.lang.Exception from label51 to label52 with label75;
        catch java.lang.Exception from label53 to label54 with label75;
        catch java.lang.Exception from label55 to label56 with label75;
        catch java.lang.Exception from label59 to label60 with label75;
        catch java.lang.Exception from label62 to label63 with label75;
        catch java.lang.Exception from label64 to label65 with label75;
        catch java.lang.Exception from label66 to label68 with label75;
        catch java.lang.Exception from label69 to label70 with label75;
        catch java.lang.Exception from label71 to label72 with label75;
        catch java.lang.Exception from label73 to label74 with label75;
    }
}
