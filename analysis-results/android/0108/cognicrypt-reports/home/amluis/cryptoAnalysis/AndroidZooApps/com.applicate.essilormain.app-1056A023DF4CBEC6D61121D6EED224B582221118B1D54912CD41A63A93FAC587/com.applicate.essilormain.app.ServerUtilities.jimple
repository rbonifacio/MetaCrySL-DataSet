public final class com.applicate.essilormain.app.ServerUtilities extends java.lang.Object
{
    private static final int BACKOFF_MILLI_SECONDS;
    static final javax.net.ssl.HostnameVerifier DO_NOT_VERIFY;
    private static final int MAX_ATTEMPTS;
    private static final int USERID_MAX_ATTEMPTS;
    public static java.lang.String deviceID;
    static org.slf4j.Logger log;
    private static final java.util.Random random;
    public static java.lang.String token;

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        java.util.Random $r1;
        com.applicate.essilormain.app.ServerUtilities$1 $r2;

        nop;

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        <com.applicate.essilormain.app.ServerUtilities: java.util.Random random> = $r1;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lcom/applicate/essilormain/app/ServerUtilities;");

        <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log> = $r0;

        $r2 = new com.applicate.essilormain.app.ServerUtilities$1;

        specialinvoke $r2.<com.applicate.essilormain.app.ServerUtilities$1: void <init>()>();

        <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY> = $r2;

        return;
    }

    public void <init>()
    {
        com.applicate.essilormain.app.ServerUtilities $r0;

        $r0 := @this: com.applicate.essilormain.app.ServerUtilities;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean access$0(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: boolean postGcmRegistration(java.lang.String)>($r0);

        return $z0;
    }

    private static java.lang.String buildRequestBody(java.util.Map)
    {
        java.util.Map $r0;
        java.lang.StringBuilder $r1, $r8;
        java.lang.Exception $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.String $r5, varReplacer3471, varReplacer3472;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;
        int varReplacer3473, varReplacer3474;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 != 0 goto label06;

     label04:
        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>();

     label05:
        if $z0 == 0 goto label11;

        varReplacer3471 = "null";

        return varReplacer3471;

     label06:
        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r5 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer3474 = 61;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer3474);

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r5 = (java.lang.String) $r6;

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label07:
        if $z0 == 0 goto label02;

     label08:
        varReplacer3473 = 38;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer3473);

     label09:
        goto label02;

     label10:
        $r2 := @caughtexception;

        varReplacer3472 = "null";

        return varReplacer3472;

     label11:
        return $r5;

        catch java.lang.Exception from label01 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    private static java.lang.String createAuthorizationHeader(java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.lang.IllegalStateException, java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, $r1, varReplacer3498, varReplacer3500, varReplacer3503, varReplacer3504, varReplacer3505, varReplacer3506;
        com.applicate.essilormain.app.CrenDentialEncryption $r2;
        java.lang.Exception $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        javax.crypto.Mac $r5;
        byte[] $r6;
        java.io.PrintStream $r7;
        java.lang.StringBuilder $r8;
        null_type varReplacer3499;
        int varReplacer3501, varReplacer3502;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = new com.applicate.essilormain.app.CrenDentialEncryption;

     label01:
        specialinvoke $r2.<com.applicate.essilormain.app.CrenDentialEncryption: void <init>()>();

        varReplacer3498 = "HmacSHA256";

        $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3498);

     label02:
        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r1 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String Account_Key>;

     label03:
        $r1 = virtualinvoke $r2.<com.applicate.essilormain.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r1);

        varReplacer3502 = 2;

        $r6 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, varReplacer3502);

        varReplacer3500 = "HmacSHA256";

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3500);

        virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r4);

     label04:
        $r1 = new java.lang.String;

     label05:
        varReplacer3505 = "UTF-8";

        $r6 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3505);

        $r6 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6);

        varReplacer3501 = 2;

        $r6 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r6, varReplacer3501);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r6);

     label06:
        $r7 = <java.lang.System: java.io.PrintStream out>;

     label07:
        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r1);

     label08:
        $r8 = new java.lang.StringBuilder;

     label09:
        varReplacer3503 = "SharedKey ";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3503);

     label10:
        $r0 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String Account_Name>;

     label11:
        $r0 = virtualinvoke $r2.<com.applicate.essilormain.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r0);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer3504 = ":";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3504);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        return $r0;

     label13:
        $r3 := @caughtexception;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        varReplacer3506 = "Error";

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>(varReplacer3506);

        varReplacer3499 = null;

        return varReplacer3499;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public static org.apache.http.client.HttpClient getNewHttpClient()
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r0;
        java.lang.Exception $r1;
        org.apache.http.params.BasicHttpParams $r2;
        org.apache.http.conn.scheme.SchemeRegistry $r3;
        com.applicate.essilormain.app.CustomSSLSocketFactory $r4;
        java.lang.String $r5;
        java.security.KeyStore $r6;
        org.apache.http.conn.ssl.X509HostnameVerifier $r7;
        org.apache.http.HttpVersion $r8;
        org.apache.http.conn.scheme.Scheme $r9;
        org.apache.http.conn.scheme.PlainSocketFactory $r10;
        org.apache.http.impl.client.DefaultHttpClient $r11;

     label01:
        $r5 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5);

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(null, null);

     label02:
        $r4 = new com.applicate.essilormain.app.CustomSSLSocketFactory;

     label03:
        specialinvoke $r4.<com.applicate.essilormain.app.CustomSSLSocketFactory: void <init>(java.security.KeyStore)>($r6);

     label04:
        $r7 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER>;

     label05:
        virtualinvoke $r4.<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>($r7);

     label06:
        $r2 = new org.apache.http.params.BasicHttpParams;

     label07:
        specialinvoke $r2.<org.apache.http.params.BasicHttpParams: void <init>()>();

     label08:
        $r8 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

     label09:
        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>($r2, $r8);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>($r2, "UTF-8");

     label10:
        $r3 = new org.apache.http.conn.scheme.SchemeRegistry;

     label11:
        specialinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

     label12:
        $r9 = new org.apache.http.conn.scheme.Scheme;

     label13:
        $r10 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke $r9.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r10, 80);

        virtualinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r9);

     label14:
        $r9 = new org.apache.http.conn.scheme.Scheme;

     label15:
        specialinvoke $r9.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r4, 443);

        virtualinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r9);

     label16:
        $r0 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

     label17:
        specialinvoke $r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r2, $r3);

     label18:
        $r11 = new org.apache.http.impl.client.DefaultHttpClient;

     label19:
        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r0, $r2);

     label20:
        return $r11;

     label21:
        $r1 := @caughtexception;

        $r11 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r11.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        return $r11;

        catch java.lang.Exception from label01 to label02 with label21;
        catch java.lang.Exception from label03 to label04 with label21;
        catch java.lang.Exception from label05 to label06 with label21;
        catch java.lang.Exception from label07 to label08 with label21;
        catch java.lang.Exception from label09 to label10 with label21;
        catch java.lang.Exception from label11 to label12 with label21;
        catch java.lang.Exception from label13 to label14 with label21;
        catch java.lang.Exception from label15 to label16 with label21;
        catch java.lang.Exception from label17 to label18 with label21;
        catch java.lang.Exception from label19 to label20 with label21;
    }

    public static org.json.JSONObject immediateMultiPartPost(org.json.JSONObject) throws java.lang.Exception
    {
        org.json.JSONObject $r0, $r3, $r5, r36;
        com.applicate.essilormain.app.CrenDentialEncryption $r1, r33;
        java.io.File $r2, r39;
        java.util.HashMap $r4, r38;
        java.net.URL $r6, r37;
        java.lang.Object $r7;
        java.lang.String $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16, $r17, $r20, $r21;
        java.lang.StringBuilder $r13, r35;
        long $l0;
        boolean $z0, $z1;
        org.json.JSONArray $r18;
        int $i1, $i2;
        java.lang.Exception $r19, $r30;
        org.slf4j.Logger $r22;
        java.lang.Throwable $r23, $r32;
        byte[] $r24;
        java.net.URLConnection $r25;
        javax.net.ssl.HttpsURLConnection $r26;
        javax.net.ssl.HostnameVerifier $r27;
        java.io.OutputStream $r28;
        java.lang.String[] $r29;
        java.net.HttpURLConnection $r31;
        java.util.Date r34;
        java.lang.IllegalArgumentException r40;

        $r0 := @parameter0: org.json.JSONObject;

        $r3 = new org.json.JSONObject;

        $r5 = $r3;

        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        r33 = new com.applicate.essilormain.app.CrenDentialEncryption;

        $r1 = r33;

        specialinvoke r33.<com.applicate.essilormain.app.CrenDentialEncryption: void <init>()>();

        $r7 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("details");

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("postReqID");

        $r9 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("targetUrl");

        $r10 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("postParametrName");

        $r11 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("imageURIAttribute");

        $r12 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        r35 = new java.lang.StringBuilder;

        r34 = new java.util.Date;

        specialinvoke r34.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke r34.<java.util.Date: long getTime()>();

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        specialinvoke r35.<java.lang.StringBuilder: void <init>(java.lang.String)>($r14);

        $r15 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("categoryName");

        $r14 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

        $z0 = 0;

        $r16 = "failed";

        $r17 = "N/A";

        $r3 = new org.json.JSONObject;

        $r0 = $r3;

        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

        if $r12 == null goto label002;

        if $r12 == "null" goto label002;

        r36 = new org.json.JSONObject;

        $r3 = r36;

        specialinvoke r36.<org.json.JSONObject: void <init>(java.lang.String)>($r8);

        $z1 = virtualinvoke $r3.<org.json.JSONObject: boolean has(java.lang.String)>("objects");

        if $z1 == 0 goto label002;

        $r18 = virtualinvoke $r3.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("objects");

        $i1 = 0;

     label001:
        $i2 = virtualinvoke $r18.<org.json.JSONArray: int length()>();

        if $i1 < $i2 goto label006;

     label002:
        $i1 = virtualinvoke $r0.<org.json.JSONObject: int length()>();

        if $i1 <= 0 goto label053;

        r37 = new java.net.URL;

        $r6 = r37;

     label003:
        specialinvoke r37.<java.net.URL: void <init>(java.lang.String)>($r10);

     label004:
        r38 = new java.util.HashMap;

        $r4 = r38;

        specialinvoke r38.<java.util.HashMap: void <init>()>();

        $r10 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, "UTF-8");

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r10);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nodeTime", $r15);

        $r11 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("BlobUploadUrls", $r11);

        $r11 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tokenUser", $r11);

        $r11 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String deviceID>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deviceID", $r11);

        $r11 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String PASS_ID>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tokenPass", $r11);

        $r11 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

        if $r11 == null goto label005;

        $r11 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", $r11);

     label005:
        $r11 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String buildRequestBody(java.util.Map)>($r4);

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z1 == 0 goto label018;

        $r30 = new java.lang.Exception;

        specialinvoke $r30.<java.lang.Exception: void <init>()>();

        throw $r30;

     label006:
        $r3 = virtualinvoke $r18.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i1);

        $r7 = virtualinvoke $r3.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r12);

        $r20 = virtualinvoke $r7.<java.lang.Object: java.lang.String toString()>();

     label007:
        if $r20 == null goto label015;

     label008:
        $z1 = virtualinvoke $r20.<java.lang.String: boolean isEmpty()>();

     label009:
        if $z1 != 0 goto label015;

        r39 = new java.io.File;

        $r2 = r39;

     label010:
        specialinvoke r39.<java.io.File: void <init>(java.lang.String)>($r20);

     label011:
        r35 = new java.lang.StringBuilder;

        $r13 = r35;

        $r20 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String Blob_Url>;

     label012:
        $r20 = virtualinvoke $r1.<com.applicate.essilormain.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r20);

        $r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r20);

        specialinvoke r35.<java.lang.StringBuilder: void <init>(java.lang.String)>($r20);

     label013:
        $r20 = <com.applicate.essilormain.app.DownloadService: java.lang.String USER_ID>;

     label014:
        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r20 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        virtualinvoke $r0.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r21, $r20);

     label015:
        $i1 = $i1 + 1;

        goto label001;

     label016:
        $r19 := @caughtexception;

        $r22 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception while creating blobkeys in immPost for id ");

        $r13 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String)>($r20);

        goto label015;

     label017:
        $r23 := @caughtexception;

        r40 = new java.lang.IllegalArgumentException;

        r35 = new java.lang.StringBuilder;

        specialinvoke r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid url: ");

        $r13 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r9 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r40.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw r40;

     label018:
        $r24 = virtualinvoke $r11.<java.lang.String: byte[] getBytes()>();

        $r7 = null;

     label019:
        $r11 = virtualinvoke $r6.<java.net.URL: java.lang.String getProtocol()>();

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("https");

     label020:
        if $z1 == 0 goto label054;

     label021:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r25 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>();

        $r26 = (javax.net.ssl.HttpsURLConnection) $r25;

     label022:
        $r27 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

     label023:
        virtualinvoke $r26.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r27);

     label024:
        $r7 = $r26;

     label025:
        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

     label026:
        $i1 = lengthof $r24;

     label027:
        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1);

        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");

        $r31 = (java.net.HttpURLConnection) $r7;

        $r28 = virtualinvoke $r31.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r28.<java.io.OutputStream: void write(byte[])>($r24);

        virtualinvoke $r28.<java.io.OutputStream: void flush()>();

        virtualinvoke $r28.<java.io.OutputStream: void close()>();

        $r31 = (java.net.HttpURLConnection) $r7;

        $r11 = virtualinvoke $r31.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label028:
        $r10 = "";

     label029:
        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

     label030:
        if $z1 != 0 goto label104;

     label031:
        $i1 = virtualinvoke $r11.<java.lang.String: int indexOf(java.lang.String)>("EncrytedToken~");

     label032:
        if $i1 == -1 goto label104;

     label033:
        $r29 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>("~");

     label034:
        $r11 = $r29[1];

     label035:
        $r29 = virtualinvoke $r11.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

     label036:
        $r11 = $r29[0];

     label037:
        <com.applicate.essilormain.app.ServerUtilities: java.lang.String token> = $r11;

     label038:
        $r11 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

     label039:
        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", $r11);

        $r11 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String buildRequestBody(java.util.Map)>($r4);

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label040:
        if $z1 == 0 goto label056;

     label041:
        $r30 = new java.lang.Exception;

     label042:
        $r19 = $r30;

     label043:
        specialinvoke $r30.<java.lang.Exception: void <init>()>();

        throw $r19;

     label044:
        $r30 := @caughtexception;

     label045:
        $r22 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        r35 = new java.lang.StringBuilder;

     label046:
        $r13 = r35;

     label047:
        specialinvoke r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception for imm_post node id ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $r8 = virtualinvoke $r30.<java.lang.Exception: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>($r8);

     label048:
        $r16 = "failed";

        $r17 = "N/A";

     label049:
        $r3 = new org.json.JSONObject;

     label050:
        $r0 = $r3;

     label051:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

     label052:
        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void disconnect()>();

     label053:
        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("reqID", $r9);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("status", $r16);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("reason", $r17);

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,boolean)>("blobUpload", $z0);

        $i1 = virtualinvoke $r0.<org.json.JSONObject: int length()>();

        if $i1 != 0 goto label152;

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("blobUrls", "N/A");

        return $r5;

     label054:
        $r25 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>();

        $r31 = (java.net.HttpURLConnection) $r25;

     label055:
        $r7 = $r31;

        goto label025;

     label056:
        $r24 = virtualinvoke $r11.<java.lang.String: byte[] getBytes()>();

        $r11 = virtualinvoke $r6.<java.net.URL: java.lang.String getProtocol()>();

        $r11 = virtualinvoke $r11.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("https");

     label057:
        if $z1 == 0 goto label078;

     label058:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r25 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>();

        $r26 = (javax.net.ssl.HttpsURLConnection) $r25;

     label059:
        $r27 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

     label060:
        virtualinvoke $r26.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r27);

     label061:
        $r7 = $r26;

     label062:
        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

     label063:
        $i1 = lengthof $r24;

     label064:
        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1);

        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");

        $r31 = (java.net.HttpURLConnection) $r7;

        $r28 = virtualinvoke $r31.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r28.<java.io.OutputStream: void write(byte[])>($r24);

        virtualinvoke $r28.<java.io.OutputStream: void flush()>();

        virtualinvoke $r28.<java.io.OutputStream: void close()>();

        $r31 = (java.net.HttpURLConnection) $r7;

        $i1 = virtualinvoke $r31.<java.net.HttpURLConnection: int getResponseCode()>();

     label065:
        if $i1 != 200 goto label077;

     label066:
        $r31 = (java.net.HttpURLConnection) $r7;

        $r16 = virtualinvoke $r31.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label067:
        $r17 = "Server-Client Date Mismatch";

     label068:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r16);

     label069:
        if $z1 == 0 goto label080;

        $r16 = "failed";

        $r17 = "Server-Client Date Mismatch";

     label070:
        $r14 = "submitted";

     label071:
        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

     label072:
        if $z1 == 0 goto label100;

     label073:
        r36 = new org.json.JSONObject;

     label074:
        $r3 = r36;

     label075:
        specialinvoke r36.<org.json.JSONObject: void <init>(java.lang.String)>($r8);

        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void uploadBlobs(java.lang.String,org.json.JSONObject)>($r12, $r3);

     label076:
        $z0 = 1;

     label077:
        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void disconnect()>();

        goto label053;

     label078:
        $r25 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>();

        $r31 = (java.net.HttpURLConnection) $r25;

     label079:
        $r7 = $r31;

        goto label062;

     label080:
        $r17 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label081:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Relaxo");

     label082:
        if $z1 != 0 goto label092;

     label083:
        $r17 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label084:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Britannia");

     label085:
        if $z1 != 0 goto label092;

     label086:
        $r17 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label087:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ims");

     label088:
        if $z1 != 0 goto label092;

     label089:
        $r17 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label090:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Whirlpool");

     label091:
        if $z1 == 0 goto label099;

     label092:
        $z1 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Order");

     label093:
        if $z1 == 0 goto label099;

        if $r16 == null goto label098;

        $r14 = "";

     label094:
        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

     label095:
        if $z1 != 0 goto label098;

     label096:
        $i1 = virtualinvoke $r16.<java.lang.String: int indexOf(java.lang.String)>("SUCCESS");

     label097:
        if $i1 == -1 goto label098;

        $r16 = "submitted";

        $r17 = "N/A";

        goto label070;

     label098:
        $r16 = "failed";

        $r17 = "N/A";

        goto label070;

     label099:
        $r16 = "submitted";

        $r17 = "N/A";

        goto label070;

     label100:
        $r3 = new org.json.JSONObject;

     label101:
        $r0 = $r3;

     label102:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

     label103:
        goto label077;

     label104:
        $i1 = virtualinvoke $r11.<java.lang.String: int indexOf(java.lang.String)>("FAiLUreERrOR@@@@~~~~");

     label105:
        if $i1 == -1 goto label114;

     label106:
        $r22 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        r35 = new java.lang.StringBuilder;

     label107:
        $r13 = r35;

     label108:
        specialinvoke r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("Server returned failure for imm_post node_id ");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>($r8);

     label109:
        $r16 = "failed";

        $r17 = "N/A";

     label110:
        $r3 = new org.json.JSONObject;

     label111:
        $r0 = $r3;

     label112:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

     label113:
        goto label077;

     label114:
        $r31 = (java.net.HttpURLConnection) $r7;

        $i1 = virtualinvoke $r31.<java.net.HttpURLConnection: int getResponseCode()>();

     label115:
        if $i1 != 200 goto label077;

     label116:
        $r31 = (java.net.HttpURLConnection) $r7;

        $r16 = virtualinvoke $r31.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label117:
        $r17 = "Server-Client Date Mismatch";

     label118:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r11);

     label119:
        if $z1 == 0 goto label127;

        $r16 = "failed";

        $r17 = "Server-Client Date Mismatch";

     label120:
        $r14 = "submitted";

     label121:
        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

     label122:
        if $z1 == 0 goto label147;

     label123:
        r36 = new org.json.JSONObject;

     label124:
        $r3 = r36;

     label125:
        specialinvoke r36.<org.json.JSONObject: void <init>(java.lang.String)>($r8);

        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void uploadBlobs(java.lang.String,org.json.JSONObject)>($r12, $r3);

     label126:
        $z0 = 1;

        goto label077;

     label127:
        $r17 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label128:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Relaxo");

     label129:
        if $z1 != 0 goto label139;

     label130:
        $r17 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label131:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Britannia");

     label132:
        if $z1 != 0 goto label139;

     label133:
        $r17 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label134:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ims");

     label135:
        if $z1 != 0 goto label139;

     label136:
        $r17 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label137:
        $z1 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Whirlpool");

     label138:
        if $z1 == 0 goto label146;

     label139:
        $z1 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Order");

     label140:
        if $z1 == 0 goto label146;

        if $r16 == null goto label145;

        $r14 = "";

     label141:
        $z1 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

     label142:
        if $z1 != 0 goto label145;

     label143:
        $i1 = virtualinvoke $r16.<java.lang.String: int indexOf(java.lang.String)>("SUCCESS");

     label144:
        if $i1 == -1 goto label145;

        $r16 = "submitted";

        $r17 = "N/A";

        goto label120;

     label145:
        $r16 = "failed";

        $r17 = "N/A";

        goto label120;

     label146:
        $r16 = "submitted";

        $r17 = "N/A";

        goto label120;

     label147:
        $r3 = new org.json.JSONObject;

     label148:
        $r0 = $r3;

     label149:
        specialinvoke $r3.<org.json.JSONObject: void <init>()>();

     label150:
        goto label077;

     label151:
        $r32 := @caughtexception;

        $r31 = (java.net.HttpURLConnection) $r7;

        virtualinvoke $r31.<java.net.HttpURLConnection: void disconnect()>();

        throw $r32;

     label152:
        $r9 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        virtualinvoke $r5.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("blobUrls", $r9);

        return $r5;

        catch java.net.MalformedURLException from label003 to label004 with label017;
        catch java.lang.Exception from label006 to label007 with label016;
        catch java.lang.Exception from label008 to label009 with label016;
        catch java.lang.Exception from label010 to label011 with label016;
        catch java.lang.Exception from label012 to label013 with label016;
        catch java.lang.Exception from label014 to label015 with label016;
        catch java.lang.Exception from label019 to label020 with label044;
        catch java.lang.Exception from label021 to label022 with label044;
        catch java.lang.Exception from label023 to label024 with label044;
        catch java.lang.Exception from label025 to label028 with label044;
        catch java.lang.Exception from label029 to label030 with label044;
        catch java.lang.Exception from label031 to label032 with label044;
        catch java.lang.Exception from label033 to label037 with label044;
        catch java.lang.Exception from label039 to label040 with label044;
        catch java.lang.Exception from label043 to label044 with label044;
        catch java.lang.Throwable from label019 to label020 with label151;
        catch java.lang.Throwable from label021 to label024 with label151;
        catch java.lang.Throwable from label025 to label026 with label151;
        catch java.lang.Throwable from label027 to label028 with label151;
        catch java.lang.Throwable from label029 to label030 with label151;
        catch java.lang.Throwable from label031 to label032 with label151;
        catch java.lang.Throwable from label033 to label034 with label151;
        catch java.lang.Throwable from label035 to label036 with label151;
        catch java.lang.Throwable from label037 to label038 with label151;
        catch java.lang.Throwable from label038 to label040 with label151;
        catch java.lang.Throwable from label041 to label042 with label151;
        catch java.lang.Throwable from label043 to label044 with label151;
        catch java.lang.Throwable from label045 to label046 with label151;
        catch java.lang.Throwable from label047 to label048 with label151;
        catch java.lang.Throwable from label049 to label050 with label151;
        catch java.lang.Throwable from label051 to label052 with label151;
        catch java.lang.Exception from label054 to label055 with label044;
        catch java.lang.Exception from label056 to label057 with label044;
        catch java.lang.Exception from label058 to label059 with label044;
        catch java.lang.Exception from label060 to label061 with label044;
        catch java.lang.Exception from label062 to label065 with label044;
        catch java.lang.Exception from label066 to label067 with label044;
        catch java.lang.Exception from label068 to label069 with label044;
        catch java.lang.Exception from label071 to label072 with label044;
        catch java.lang.Exception from label075 to label076 with label044;
        catch java.lang.Throwable from label054 to label055 with label151;
        catch java.lang.Throwable from label056 to label057 with label151;
        catch java.lang.Throwable from label058 to label061 with label151;
        catch java.lang.Throwable from label062 to label063 with label151;
        catch java.lang.Throwable from label064 to label065 with label151;
        catch java.lang.Throwable from label066 to label067 with label151;
        catch java.lang.Throwable from label068 to label069 with label151;
        catch java.lang.Throwable from label071 to label072 with label151;
        catch java.lang.Throwable from label073 to label074 with label151;
        catch java.lang.Throwable from label075 to label076 with label151;
        catch java.lang.Exception from label078 to label079 with label044;
        catch java.lang.Exception from label081 to label082 with label044;
        catch java.lang.Exception from label084 to label085 with label044;
        catch java.lang.Exception from label087 to label088 with label044;
        catch java.lang.Exception from label090 to label091 with label044;
        catch java.lang.Exception from label092 to label093 with label044;
        catch java.lang.Exception from label094 to label095 with label044;
        catch java.lang.Exception from label096 to label097 with label044;
        catch java.lang.Exception from label102 to label103 with label044;
        catch java.lang.Exception from label104 to label105 with label044;
        catch java.lang.Exception from label108 to label109 with label044;
        catch java.lang.Exception from label112 to label113 with label044;
        catch java.lang.Exception from label114 to label115 with label044;
        catch java.lang.Exception from label116 to label117 with label044;
        catch java.lang.Exception from label118 to label119 with label044;
        catch java.lang.Exception from label121 to label122 with label044;
        catch java.lang.Exception from label125 to label126 with label044;
        catch java.lang.Exception from label128 to label129 with label044;
        catch java.lang.Exception from label131 to label132 with label044;
        catch java.lang.Exception from label134 to label135 with label044;
        catch java.lang.Exception from label137 to label138 with label044;
        catch java.lang.Exception from label139 to label140 with label044;
        catch java.lang.Exception from label141 to label142 with label044;
        catch java.lang.Exception from label143 to label144 with label044;
        catch java.lang.Exception from label149 to label150 with label044;
        catch java.lang.Throwable from label078 to label079 with label151;
        catch java.lang.Throwable from label080 to label082 with label151;
        catch java.lang.Throwable from label083 to label085 with label151;
        catch java.lang.Throwable from label086 to label088 with label151;
        catch java.lang.Throwable from label089 to label091 with label151;
        catch java.lang.Throwable from label092 to label093 with label151;
        catch java.lang.Throwable from label094 to label095 with label151;
        catch java.lang.Throwable from label096 to label097 with label151;
        catch java.lang.Throwable from label100 to label101 with label151;
        catch java.lang.Throwable from label102 to label103 with label151;
        catch java.lang.Throwable from label104 to label105 with label151;
        catch java.lang.Throwable from label106 to label107 with label151;
        catch java.lang.Throwable from label108 to label109 with label151;
        catch java.lang.Throwable from label110 to label111 with label151;
        catch java.lang.Throwable from label112 to label113 with label151;
        catch java.lang.Throwable from label114 to label115 with label151;
        catch java.lang.Throwable from label116 to label117 with label151;
        catch java.lang.Throwable from label118 to label119 with label151;
        catch java.lang.Throwable from label121 to label122 with label151;
        catch java.lang.Throwable from label123 to label124 with label151;
        catch java.lang.Throwable from label125 to label126 with label151;
        catch java.lang.Throwable from label127 to label129 with label151;
        catch java.lang.Throwable from label130 to label132 with label151;
        catch java.lang.Throwable from label133 to label135 with label151;
        catch java.lang.Throwable from label136 to label138 with label151;
        catch java.lang.Throwable from label139 to label140 with label151;
        catch java.lang.Throwable from label141 to label142 with label151;
        catch java.lang.Throwable from label143 to label144 with label151;
        catch java.lang.Throwable from label147 to label148 with label151;
        catch java.lang.Throwable from label149 to label150 with label151;
    }

    public static org.json.JSONObject immediateSimplePost(org.json.JSONObject) throws java.lang.Exception
    {
        org.json.JSONObject $r0, $r2, r25;
        java.util.HashMap $r1, r29;
        java.net.URL $r3, r28;
        java.lang.Object $r4;
        java.lang.String $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13;
        java.lang.StringBuilder $r9, r27;
        long $l0;
        boolean $z0;
        java.lang.Exception $r14, r30;
        java.lang.Throwable $r15, $r24;
        byte[] $r16;
        java.net.URLConnection $r17;
        javax.net.ssl.HttpsURLConnection $r18;
        javax.net.ssl.HostnameVerifier $r19;
        int $i1;
        java.io.OutputStream $r20;
        java.lang.String[] $r21;
        org.slf4j.Logger $r22;
        java.net.HttpURLConnection $r23;
        java.util.Date r26;
        java.lang.IllegalArgumentException r31;

        $r0 := @parameter0: org.json.JSONObject;

        r25 = new org.json.JSONObject;

        $r2 = r25;

        specialinvoke r25.<org.json.JSONObject: void <init>()>();

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("details");

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("postReqID");

        $r6 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("targetUrl");

        $r7 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("postParametrName");

        $r8 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        r27 = new java.lang.StringBuilder;

        r26 = new java.util.Date;

        specialinvoke r26.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke r26.<java.util.Date: long getTime()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        $r11 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>("categoryName");

        $r10 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r12 = "failed";

        $r13 = "N/A";

        r28 = new java.net.URL;

        $r3 = r28;

     label001:
        specialinvoke r28.<java.net.URL: void <init>(java.lang.String)>($r7);

     label002:
        r29 = new java.util.HashMap;

        $r1 = r29;

        specialinvoke r29.<java.util.HashMap: void <init>()>();

        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r5, "UTF-8");

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r5);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nodeTime", $r11);

        $r8 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tokenUser", $r8);

        $r8 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String deviceID>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deviceID", $r8);

        $r8 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String PASS_ID>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tokenPass", $r8);

        $r8 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

        if $r8 == null goto label003;

        $r8 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", $r8);

     label003:
        $r8 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String buildRequestBody(java.util.Map)>($r1);

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("null");

        if $z0 == 0 goto label005;

        r30 = new java.lang.Exception;

        specialinvoke r30.<java.lang.Exception: void <init>()>();

        throw r30;

     label004:
        $r15 := @caughtexception;

        r31 = new java.lang.IllegalArgumentException;

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid url: ");

        $r9 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw r31;

     label005:
        $r16 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        $r4 = null;

     label006:
        $r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("https");

     label007:
        if $z0 == 0 goto label037;

     label008:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r17 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r18 = (javax.net.ssl.HttpsURLConnection) $r17;

     label009:
        $r19 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

     label010:
        virtualinvoke $r18.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r19);

     label011:
        $r4 = $r18;

     label012:
        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

     label013:
        $i1 = lengthof $r16;

     label014:
        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1);

        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");

        $r23 = (java.net.HttpURLConnection) $r4;

        $r20 = virtualinvoke $r23.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r20.<java.io.OutputStream: void write(byte[])>($r16);

        virtualinvoke $r20.<java.io.OutputStream: void flush()>();

        virtualinvoke $r20.<java.io.OutputStream: void close()>();

        $r23 = (java.net.HttpURLConnection) $r4;

        $r8 = virtualinvoke $r23.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label015:
        $r5 = "";

     label016:
        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r8);

     label017:
        if $z0 != 0 goto label076;

     label018:
        $i1 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("EncrytedToken~");

     label019:
        if $i1 == -1 goto label076;

     label020:
        $r21 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("~");

     label021:
        $r8 = $r21[1];

     label022:
        $r21 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

     label023:
        $r8 = $r21[0];

     label024:
        <com.applicate.essilormain.app.ServerUtilities: java.lang.String token> = $r8;

     label025:
        $r8 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

     label026:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("token", $r8);

        $r8 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String buildRequestBody(java.util.Map)>($r1);

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("null");

     label027:
        if $z0 == 0 goto label039;

     label028:
        r30 = new java.lang.Exception;

     label029:
        $r14 = r30;

     label030:
        specialinvoke r30.<java.lang.Exception: void <init>()>();

        throw $r14;

     label031:
        $r14 := @caughtexception;

     label032:
        $r22 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        r27 = new java.lang.StringBuilder;

     label033:
        $r9 = r27;

     label034:
        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Exception for immdiate post node ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $r10 = virtualinvoke $r14.<java.lang.Exception: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>($r10);

     label035:
        $r12 = "failed";

        $r13 = "N/A";

        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void disconnect()>();

     label036:
        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("reqID", $r6);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("status", $r12);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("reason", $r13);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("blobUpload", "false");

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>("blobUrls", "N/A");

        return $r2;

     label037:
        $r17 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r23 = (java.net.HttpURLConnection) $r17;

     label038:
        $r4 = $r23;

        goto label012;

     label039:
        $r16 = virtualinvoke $r8.<java.lang.String: byte[] getBytes()>();

        $r8 = virtualinvoke $r3.<java.net.URL: java.lang.String getProtocol()>();

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("https");

     label040:
        if $z0 == 0 goto label054;

     label041:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r17 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r18 = (javax.net.ssl.HttpsURLConnection) $r17;

     label042:
        $r19 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

     label043:
        virtualinvoke $r18.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r19);

     label044:
        $r4 = $r18;

     label045:
        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

     label046:
        $i1 = lengthof $r16;

     label047:
        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i1);

        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");

        $r23 = (java.net.HttpURLConnection) $r4;

        $r20 = virtualinvoke $r23.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r20.<java.io.OutputStream: void write(byte[])>($r16);

        virtualinvoke $r20.<java.io.OutputStream: void flush()>();

        virtualinvoke $r20.<java.io.OutputStream: void close()>();

        $r23 = (java.net.HttpURLConnection) $r4;

        $i1 = virtualinvoke $r23.<java.net.HttpURLConnection: int getResponseCode()>();

     label048:
        if $i1 != 200 goto label053;

     label049:
        $r23 = (java.net.HttpURLConnection) $r4;

        $r12 = virtualinvoke $r23.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label050:
        $r13 = "Server-Client Date Mismatch";

     label051:
        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

     label052:
        if $z0 == 0 goto label056;

        $r12 = "failed";

        $r13 = "Server-Client Date Mismatch";

     label053:
        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void disconnect()>();

        goto label036;

     label054:
        $r17 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r23 = (java.net.HttpURLConnection) $r17;

     label055:
        $r4 = $r23;

        goto label045;

     label056:
        $r13 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label057:
        $z0 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Relaxo");

     label058:
        if $z0 != 0 goto label068;

     label059:
        $r13 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label060:
        $z0 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Britannia");

     label061:
        if $z0 != 0 goto label068;

     label062:
        $r13 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label063:
        $z0 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ims");

     label064:
        if $z0 != 0 goto label068;

     label065:
        $r13 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label066:
        $z0 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Whirlpool");

     label067:
        if $z0 == 0 goto label075;

     label068:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Order");

     label069:
        if $z0 == 0 goto label075;

        if $r12 == null goto label074;

        $r10 = "";

     label070:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r12);

     label071:
        if $z0 != 0 goto label074;

     label072:
        $i1 = virtualinvoke $r12.<java.lang.String: int indexOf(java.lang.String)>("SUCCESS");

     label073:
        if $i1 == -1 goto label074;

        $r12 = "submitted";

        $r13 = "N/A";

        goto label053;

     label074:
        $r12 = "failed";

        $r13 = "N/A";

        goto label053;

     label075:
        $r12 = "submitted";

        $r13 = "N/A";

        goto label053;

     label076:
        $i1 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("FAiLUreERrOR@@@@~~~~");

     label077:
        if $i1 == -1 goto label082;

     label078:
        $r22 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        r27 = new java.lang.StringBuilder;

     label079:
        $r9 = r27;

     label080:
        specialinvoke r27.<java.lang.StringBuilder: void <init>(java.lang.String)>("Server returned failure for immediate post node ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void info(java.lang.String)>($r10);

     label081:
        $r12 = "failed";

        $r13 = "N/A";

        goto label053;

     label082:
        $r23 = (java.net.HttpURLConnection) $r4;

        $i1 = virtualinvoke $r23.<java.net.HttpURLConnection: int getResponseCode()>();

     label083:
        if $i1 != 200 goto label053;

        $r12 = "Server-Client Date Mismatch";

     label084:
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r8);

     label085:
        if $z0 == 0 goto label086;

        $r12 = "failed";

        $r13 = "Server-Client Date Mismatch";

        goto label053;

     label086:
        $r12 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label087:
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Relaxo");

     label088:
        if $z0 != 0 goto label098;

     label089:
        $r12 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label090:
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Britannia");

     label091:
        if $z0 != 0 goto label098;

     label092:
        $r12 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label093:
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ims");

     label094:
        if $z0 != 0 goto label098;

     label095:
        $r12 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label096:
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Whirlpool");

     label097:
        if $z0 == 0 goto label105;

     label098:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Order");

     label099:
        if $z0 == 0 goto label105;

        if $r8 == null goto label104;

        $r10 = "";

     label100:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r8);

     label101:
        if $z0 != 0 goto label104;

     label102:
        $i1 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("SUCCESS");

     label103:
        if $i1 == -1 goto label104;

        $r12 = "submitted";

        $r13 = "N/A";

        goto label053;

     label104:
        $r12 = "failed";

        $r13 = "N/A";

        goto label053;

     label105:
        $r12 = "submitted";

        $r13 = "N/A";

        goto label053;

     label106:
        $r24 := @caughtexception;

        $r23 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r23.<java.net.HttpURLConnection: void disconnect()>();

        throw $r24;

        catch java.net.MalformedURLException from label001 to label002 with label004;
        catch java.lang.Exception from label006 to label007 with label031;
        catch java.lang.Exception from label008 to label009 with label031;
        catch java.lang.Exception from label010 to label011 with label031;
        catch java.lang.Exception from label012 to label015 with label031;
        catch java.lang.Exception from label016 to label017 with label031;
        catch java.lang.Exception from label018 to label019 with label031;
        catch java.lang.Exception from label020 to label024 with label031;
        catch java.lang.Exception from label026 to label027 with label031;
        catch java.lang.Exception from label030 to label031 with label031;
        catch java.lang.Throwable from label006 to label007 with label106;
        catch java.lang.Throwable from label008 to label011 with label106;
        catch java.lang.Throwable from label012 to label013 with label106;
        catch java.lang.Throwable from label014 to label015 with label106;
        catch java.lang.Throwable from label016 to label017 with label106;
        catch java.lang.Throwable from label018 to label019 with label106;
        catch java.lang.Throwable from label020 to label021 with label106;
        catch java.lang.Throwable from label022 to label023 with label106;
        catch java.lang.Throwable from label024 to label025 with label106;
        catch java.lang.Throwable from label025 to label027 with label106;
        catch java.lang.Throwable from label028 to label029 with label106;
        catch java.lang.Throwable from label030 to label031 with label106;
        catch java.lang.Throwable from label032 to label033 with label106;
        catch java.lang.Throwable from label034 to label035 with label106;
        catch java.lang.Exception from label037 to label038 with label031;
        catch java.lang.Exception from label039 to label040 with label031;
        catch java.lang.Exception from label041 to label042 with label031;
        catch java.lang.Exception from label043 to label044 with label031;
        catch java.lang.Exception from label045 to label048 with label031;
        catch java.lang.Exception from label049 to label050 with label031;
        catch java.lang.Exception from label051 to label052 with label031;
        catch java.lang.Throwable from label037 to label038 with label106;
        catch java.lang.Throwable from label039 to label040 with label106;
        catch java.lang.Throwable from label041 to label044 with label106;
        catch java.lang.Throwable from label045 to label046 with label106;
        catch java.lang.Throwable from label047 to label048 with label106;
        catch java.lang.Throwable from label049 to label050 with label106;
        catch java.lang.Throwable from label051 to label052 with label106;
        catch java.lang.Exception from label054 to label055 with label031;
        catch java.lang.Exception from label057 to label058 with label031;
        catch java.lang.Exception from label060 to label061 with label031;
        catch java.lang.Exception from label063 to label064 with label031;
        catch java.lang.Exception from label066 to label067 with label031;
        catch java.lang.Exception from label068 to label069 with label031;
        catch java.lang.Exception from label070 to label071 with label031;
        catch java.lang.Exception from label072 to label073 with label031;
        catch java.lang.Exception from label076 to label077 with label031;
        catch java.lang.Exception from label080 to label081 with label031;
        catch java.lang.Exception from label082 to label083 with label031;
        catch java.lang.Exception from label084 to label085 with label031;
        catch java.lang.Exception from label087 to label088 with label031;
        catch java.lang.Exception from label090 to label091 with label031;
        catch java.lang.Exception from label093 to label094 with label031;
        catch java.lang.Exception from label096 to label097 with label031;
        catch java.lang.Exception from label098 to label099 with label031;
        catch java.lang.Exception from label100 to label101 with label031;
        catch java.lang.Exception from label102 to label103 with label031;
        catch java.lang.Throwable from label054 to label055 with label106;
        catch java.lang.Throwable from label056 to label058 with label106;
        catch java.lang.Throwable from label059 to label061 with label106;
        catch java.lang.Throwable from label062 to label064 with label106;
        catch java.lang.Throwable from label065 to label067 with label106;
        catch java.lang.Throwable from label068 to label069 with label106;
        catch java.lang.Throwable from label070 to label071 with label106;
        catch java.lang.Throwable from label072 to label073 with label106;
        catch java.lang.Throwable from label076 to label077 with label106;
        catch java.lang.Throwable from label078 to label079 with label106;
        catch java.lang.Throwable from label080 to label081 with label106;
        catch java.lang.Throwable from label082 to label083 with label106;
        catch java.lang.Throwable from label084 to label085 with label106;
        catch java.lang.Throwable from label086 to label088 with label106;
        catch java.lang.Throwable from label089 to label091 with label106;
        catch java.lang.Throwable from label092 to label094 with label106;
        catch java.lang.Throwable from label095 to label097 with label106;
        catch java.lang.Throwable from label098 to label099 with label106;
        catch java.lang.Throwable from label100 to label101 with label106;
        catch java.lang.Throwable from label102 to label103 with label106;
    }

    static void post(java.lang.String, java.util.Map) throws java.io.IOException
    {
        java.lang.String $r0, $r7, varReplacer1957, varReplacer1958, varReplacer1960, varReplacer1961, varReplacer1963, varReplacer1965, varReplacer1966, varReplacer1967, varReplacer1968;
        java.util.Map $r1;
        java.lang.StringBuilder $r2, $r17;
        java.lang.Throwable $r3, $r15;
        java.net.URL $r4, r19;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        byte[] $r8;
        java.lang.Object $r9;
        java.net.URLConnection $r10;
        javax.net.ssl.HttpsURLConnection $r11;
        javax.net.ssl.HostnameVerifier $r12;
        int $i0, varReplacer1956, varReplacer1959, varReplacer1962, varReplacer1964;
        java.io.OutputStream $r13;
        java.io.IOException $r14, r20;
        java.util.Map$Entry $r16;
        java.net.HttpURLConnection $r18;
        java.lang.IllegalArgumentException r21;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        r19 = new java.net.URL;

        $r4 = r19;

     label01:
        specialinvoke r19.<java.net.URL: void <init>(java.lang.String)>($r0);

     label02:
        $r17 = new java.lang.StringBuilder;

        $r2 = $r17;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label18;

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.StringBuilder;

        varReplacer1961 = "Posting \'";

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1961);

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1965 = "\' to ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1965);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1966 = "GCMDemo";

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(varReplacer1966, $r7);

        $r8 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r9 = null;

     label04:
        $r0 = virtualinvoke $r4.<java.net.URL: java.lang.String getProtocol()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer1963 = "https";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1963);

     label05:
        if $z0 == 0 goto label19;

     label06:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r10 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r11 = (javax.net.ssl.HttpsURLConnection) $r10;

        $r12 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r12);

     label07:
        $r9 = $r11;

     label08:
        $r18 = (java.net.HttpURLConnection) $r9;

        varReplacer1962 = 1;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer1962);

        $r18 = (java.net.HttpURLConnection) $r9;

        varReplacer1956 = 0;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setUseCaches(boolean)>(varReplacer1956);

        $i0 = lengthof $r8;

        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

        $r18 = (java.net.HttpURLConnection) $r9;

        varReplacer1957 = "POST";

        virtualinvoke $r18.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(varReplacer1957);

        $r18 = (java.net.HttpURLConnection) $r9;

        varReplacer1967 = "Content-Type";

        varReplacer1968 = "application/x-www-form-urlencoded;charset=UTF-8";

        virtualinvoke $r18.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer1967, varReplacer1968);

        $r18 = (java.net.HttpURLConnection) $r9;

        $r13 = virtualinvoke $r18.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r8);

        virtualinvoke $r13.<java.io.OutputStream: void close()>();

        $r18 = (java.net.HttpURLConnection) $r9;

        $i0 = virtualinvoke $r18.<java.net.HttpURLConnection: int getResponseCode()>();

     label09:
        if $i0 == 200 goto label21;

     label10:
        r20 = new java.io.IOException;

     label11:
        $r14 = r20;

     label12:
        $r17 = new java.lang.StringBuilder;

     label13:
        $r2 = $r17;

     label14:
        varReplacer1958 = "Post failed with error code ";

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1958);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.io.IOException: void <init>(java.lang.String)>($r0);

        throw $r14;

     label15:
        $r15 := @caughtexception;

        if $r9 == null goto label16;

        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void disconnect()>();

     label16:
        throw $r15;

     label17:
        $r3 := @caughtexception;

        r21 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        varReplacer1960 = "invalid url: ";

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1960);

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw r21;

     label18:
        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r9;

        $r9 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r0 = (java.lang.String) $r9;

        $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1964 = 61;

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer1964);

        $r9 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r0 = (java.lang.String) $r9;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        varReplacer1959 = 38;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer1959);

        goto label03;

     label19:
        $r10 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r18 = (java.net.HttpURLConnection) $r10;

     label20:
        $r9 = $r18;

        goto label08;

     label21:
        if $r9 == null goto label22;

        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void disconnect()>();

     label22:
        return;

        catch java.net.MalformedURLException from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label19 to label20 with label15;
    }

    private static boolean postGcmRegistration(java.lang.String)
    {
        java.lang.String $r0, $r4, $r5, varReplacer1924, varReplacer1925, varReplacer1926, varReplacer1927, varReplacer1928, varReplacer1929, varReplacer1930, varReplacer1931, varReplacer1933, varReplacer1934, varReplacer1938, varReplacer1939, varReplacer1940, varReplacer1941, varReplacer1943, varReplacer1944, varReplacer1945, varReplacer1946, varReplacer1947, varReplacer1948, varReplacer1950, varReplacer1951;
        java.lang.Throwable $r1, $r8, $r10;
        java.util.HashMap $r2;
        java.util.Random $r3;
        int $i0, varReplacer1932, varReplacer1935, varReplacer1936, varReplacer1937, varReplacer1942, varReplacer1949;
        long $l1;
        boolean $z0;
        java.lang.StringBuilder $r6;
        org.slf4j.Logger $r7;
        java.lang.Thread $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r3 = <com.applicate.essilormain.app.ServerUtilities: java.util.Random random>;

        varReplacer1935 = 1000;

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(varReplacer1935);

        $i0 = $i0 + 2000;

        $l1 = (long) $i0;

        $i0 = 0;

     label01:
        if $i0 < 20 goto label05;

     label02:
        $r4 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label04;

        $r4 = "";

        $r5 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label04;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        varReplacer1931 = "regId";

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1931, $r0);

        $r0 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        varReplacer1948 = "user";

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1948, $r0);

        $r0 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        varReplacer1926 = "tokenUser";

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1926, $r0);

        $r0 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String PASS_ID>;

        varReplacer1946 = "tokenPass";

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1946, $r0);

        $r3 = <com.applicate.essilormain.app.ServerUtilities: java.util.Random random>;

        varReplacer1949 = 1000;

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(varReplacer1949);

        $i0 = $i0 + 2000;

        $l1 = (long) $i0;

        $i0 = 1;

     label03:
        if $i0 <= 5 goto label10;

     label04:
        varReplacer1936 = 0;

        return varReplacer1936;

     label05:
        $r6 = new java.lang.StringBuilder;

        varReplacer1939 = "Attempt #";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1939);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1944 = " to get userID";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1944);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1924 = "GCMPost";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1924, $r4);

        $r7 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        varReplacer1938 = "Attempt #";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1938);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1947 = " to get userID";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1947);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r4);

        $r4 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r4 = "";

        $r5 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label06;

        $r4 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        if $r4 != null goto label02;

     label06:
        if $i0 == 20 goto label02;

     label07:
        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

     label08:
        $l1 = $l1 * 2L;

        $i0 = $i0 + 1;

        goto label01;

     label09:
        $r8 := @caughtexception;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void interrupt()>();

        varReplacer1942 = 0;

        return varReplacer1942;

     label10:
        $r6 = new java.lang.StringBuilder;

        varReplacer1950 = "Attempt #";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1950);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1925 = " to post";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1925);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1940 = "GCMPost";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1940, $r0);

        $r7 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        $r6 = new java.lang.StringBuilder;

        varReplacer1943 = "Attempt #";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1943);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1930 = " to post";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1930);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r0);

     label11:
        varReplacer1933 = "https://disha.teemapp.mobi/applicateserver/index?action=userContextUpdate";

        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void runAsync(java.lang.String,java.util.Map)>(varReplacer1933, $r2);

     label12:
        varReplacer1937 = 1;

        return varReplacer1937;

     label13:
        $r10 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        varReplacer1945 = "Failed to register on attempt ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1945);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1941 = "GCMDemo";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer1941, $r0, $r10);

        if $i0 == 5 goto label04;

        $r6 = new java.lang.StringBuilder;

     label14:
        varReplacer1927 = "Sleeping for ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1927);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        varReplacer1934 = " ms before retry";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1934);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1951 = "GCMDemo";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1951, $r0);

        staticinvoke <java.lang.Thread: void sleep(long)>($l1);

     label15:
        $l1 = $l1 * 2L;

        $i0 = $i0 + 1;

        goto label03;

     label16:
        $r1 := @caughtexception;

        varReplacer1928 = "GCMDemo";

        varReplacer1929 = "Thread interrupted: abort remaining retries!";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1928, varReplacer1929);

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void interrupt()>();

        varReplacer1932 = 0;

        return varReplacer1932;

        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.lang.InterruptedException from label14 to label15 with label16;
    }

    public static void processDataInventoryModel(com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel) throws java.lang.Exception
    {
        com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel $r0;
        java.io.File $r1, $r4, r32;
        org.json.JSONObject $r2, $r17, r35;
        com.applicate.essilormain.app.CrenDentialEncryption $r3, r31;
        java.util.ArrayList $r5, r30;
        java.util.HashMap $r6, r36;
        java.lang.String $r7, $r9, $r10, varReplacer3348, varReplacer3349, varReplacer3350, varReplacer3351, varReplacer3352, varReplacer3353, varReplacer3354, varReplacer3355, varReplacer3356, varReplacer3357, varReplacer3358, varReplacer3359, varReplacer3360, varReplacer3361, varReplacer3362, varReplacer3363, varReplacer3365, varReplacer3366, varReplacer3367, varReplacer3368, varReplacer3369, varReplacer3370, varReplacer3371, varReplacer3372, varReplacer3373, varReplacer3374, varReplacer3375, varReplacer3376, varReplacer3377, varReplacer3378, varReplacer3379, varReplacer3380, varReplacer3381, varReplacer3382, varReplacer3383, varReplacer3384, varReplacer3385, varReplacer3387, varReplacer3388, varReplacer3389, varReplacer3390, varReplacer3391, varReplacer3392, varReplacer3394, varReplacer3395, varReplacer3396, varReplacer3397, varReplacer3398, varReplacer3399, varReplacer3400, varReplacer3401, varReplacer3402, varReplacer3403, varReplacer3404, varReplacer3405, varReplacer3406, varReplacer3407, varReplacer3408, varReplacer3409, varReplacer3410, varReplacer3412, varReplacer3413, varReplacer3414, varReplacer3415, varReplacer3416, varReplacer3417, varReplacer3418, varReplacer3419, varReplacer3420, varReplacer3421, varReplacer3422, varReplacer3423, varReplacer3424, varReplacer3425, varReplacer3426, varReplacer3427, varReplacer3428, varReplacer3429, varReplacer3430, varReplacer3431, varReplacer3432, varReplacer3433, varReplacer3434, varReplacer3435, varReplacer3436, varReplacer3437, varReplacer3438, varReplacer3439, varReplacer3440, varReplacer3441, varReplacer3442, varReplacer3443, varReplacer3444, varReplacer3445, varReplacer3446, varReplacer3447, varReplacer3448, varReplacer3449, varReplacer3450, varReplacer3451, varReplacer3452, varReplacer3453, varReplacer3454, varReplacer3455, varReplacer3456, varReplacer3457, varReplacer3458, varReplacer3459, varReplacer3460, varReplacer3461, varReplacer3462, varReplacer3463, varReplacer3464, varReplacer3465, varReplacer3466, varReplacer3467, varReplacer3468, varReplacer3469, varReplacer3470;
        java.net.URL $r8, r34;
        boolean $z0;
        org.json.JSONArray $r11;
        int $i0, $i1, varReplacer3364, varReplacer3386, varReplacer3393, varReplacer3411;
        java.util.Iterator $r12;
        java.lang.String[] $r13;
        java.lang.Object $r14;
        java.lang.StringBuilder $r15, r33;
        long $l2;
        java.io.PrintStream $r16;
        java.lang.Exception $r18, $r28, $r29;
        java.lang.Throwable $r19, $r27;
        byte[] $r20;
        java.net.URLConnection $r21;
        javax.net.ssl.HttpsURLConnection $r22;
        javax.net.ssl.HostnameVerifier $r23;
        java.io.OutputStream $r24;
        org.slf4j.Logger $r25;
        java.net.HttpURLConnection $r26;
        java.lang.IllegalArgumentException r37;

        nop;

        $r0 := @parameter0: com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel;

        r30 = new java.util.ArrayList;

        $r5 = r30;

        specialinvoke r30.<java.util.ArrayList: void <init>()>();

        $r9 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getBlopUpload()>();

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getBlopUploadUrls()>();

        r31 = new com.applicate.essilormain.app.CrenDentialEncryption;

        $r3 = r31;

        specialinvoke r31.<com.applicate.essilormain.app.CrenDentialEncryption: void <init>()>();

        $r10 = "N/A";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z0 != 0 goto label023;

        $r10 = "false";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 == 0 goto label023;

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getImageURIAttribute()>();

        if $r7 == null goto label146;

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getImageURIAttribute()>();

        if $r7 == "null" goto label146;

        $r17 = new org.json.JSONObject;

        $r2 = $r17;

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getData()>();

        specialinvoke $r17.<org.json.JSONObject: void <init>(java.lang.String)>($r7);

        varReplacer3415 = "objects";

        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean has(java.lang.String)>(varReplacer3415);

        if $z0 == 0 goto label146;

        varReplacer3406 = "objects";

        $r11 = virtualinvoke $r2.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>(varReplacer3406);

        $i0 = 0;

     label001:
        $i1 = virtualinvoke $r11.<org.json.JSONArray: int length()>();

        if $i0 < $i1 goto label004;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label146;

        $r17 = new org.json.JSONObject;

        $r2 = $r17;

        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3446 = "methodName";

        varReplacer3447 = "updateblopUploadByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3446, varReplacer3447);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3414 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3414, $r7);

        varReplacer3365 = "blopUpload";

        varReplacer3366 = "true";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3365, varReplacer3366);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

        $r17 = new org.json.JSONObject;

        $r2 = $r17;

        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3372 = "methodName";

        varReplacer3373 = "updateStatusByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3372, varReplacer3373);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3384 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3384, $r7);

        varReplacer3434 = "status";

        varReplacer3435 = "submitted";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3434, varReplacer3435);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

        $r12 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label002:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label020;

        r32 = new java.io.File;

        $r1 = r32;

        $r4 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r7 = virtualinvoke $r4.<java.io.File: java.lang.String getPath()>();

        varReplacer3390 = "Teem/Images";

        specialinvoke r32.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r7, varReplacer3390);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label146;

        $r13 = virtualinvoke $r1.<java.io.File: java.lang.String[] list()>();

        $i0 = lengthof $r13;

        if $i0 <= 0 goto label146;

        $r13 = virtualinvoke $r1.<java.io.File: java.lang.String[] list()>();

        $i0 = lengthof $r13;

        $i1 = 0;

     label003:
        if $i1 < $i0 goto label021;

        return;

     label004:
        $r2 = virtualinvoke $r11.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getImageURIAttribute()>();

        $r14 = virtualinvoke $r2.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r7);

        $r7 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

     label005:
        if $r7 == null goto label019;

     label006:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

     label007:
        if $z0 != 0 goto label019;

        $r4 = new java.io.File;

        $r1 = $r4;

     label008:
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r7);

     label009:
        $r9 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String Container>;

     label010:
        $r9 = virtualinvoke $r3.<com.applicate.essilormain.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r9);

     label011:
        r33 = new java.lang.StringBuilder;

        $r15 = r33;

        $r10 = <com.applicate.essilormain.app.DownloadService: java.lang.String USER_ID>;

     label012:
        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        specialinvoke r33.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        varReplacer3462 = "_";

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3462);

        $r10 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $l2 = virtualinvoke $r1.<java.io.File: long length()>();

        $r9 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String putBlob(java.lang.String,java.lang.String,java.io.File,long)>($r9, $r10, $r1, $l2);

     label013:
        $r10 = "";

     label014:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label015:
        if $z0 != 0 goto label019;

        if $r9 == null goto label019;

     label016:
        varReplacer3370 = "Created";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3370);

     label017:
        if $z0 == 0 goto label019;

     label018:
        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label019:
        $i0 = $i0 + 1;

        goto label001;

     label020:
        $r14 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r14;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r4 = new java.io.File;

        $r1 = $r4;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r7);

        $r7 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer3437 = ".jso";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer3437);

        if $z0 != 0 goto label002;

        varReplacer3454 = ".xml";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer3454);

        if $z0 != 0 goto label002;

        varReplacer3451 = ".txt";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer3451);

        if $z0 != 0 goto label002;

        $z0 = virtualinvoke $r1.<java.io.File: boolean delete()>();

        $r16 = <java.lang.System: java.io.PrintStream out>;

        r33 = new java.lang.StringBuilder;

        varReplacer3371 = "Compressed delete Status ";

        specialinvoke r33.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3371);

        $r15 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r7);

        goto label002;

     label021:
        $r7 = $r13[$i1];

        r32 = new java.io.File;

        $r4 = r32;

        specialinvoke r32.<java.io.File: void <init>(java.io.File,java.lang.String)>($r1, $r7);

        $r7 = virtualinvoke $r4.<java.io.File: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer3419 = ".jso";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer3419);

        if $z0 != 0 goto label022;

        varReplacer3425 = ".xml";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer3425);

        if $z0 != 0 goto label022;

        varReplacer3463 = ".txt";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer3463);

        if $z0 != 0 goto label022;

        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label022:
        $i1 = $i1 + 1;

        goto label003;

     label023:
        $r10 = "false";

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 == 0 goto label146;

        $r9 = "N/A";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z0 == 0 goto label146;

        $r17 = new org.json.JSONObject;

        $r2 = $r17;

        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        r34 = new java.net.URL;

        $r8 = r34;

     label024:
        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getTargetUrl()>();

        specialinvoke r34.<java.net.URL: void <init>(java.lang.String)>($r7);

     label025:
        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getImageURIAttribute()>();

        if $r7 == null goto label027;

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getImageURIAttribute()>();

        if $r7 == "null" goto label027;

        r35 = new org.json.JSONObject;

        $r17 = r35;

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getData()>();

        specialinvoke r35.<org.json.JSONObject: void <init>(java.lang.String)>($r7);

        varReplacer3383 = "objects";

        $z0 = virtualinvoke $r17.<org.json.JSONObject: boolean has(java.lang.String)>(varReplacer3383);

        if $z0 == 0 goto label027;

        varReplacer3396 = "objects";

        $r11 = virtualinvoke $r17.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>(varReplacer3396);

        $i0 = 0;

     label026:
        $i1 = virtualinvoke $r11.<org.json.JSONArray: int length()>();

        if $i0 < $i1 goto label030;

     label027:
        r36 = new java.util.HashMap;

        $r6 = r36;

        specialinvoke r36.<java.util.HashMap: void <init>()>();

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getData()>();

        varReplacer3374 = "UTF-8";

        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r7, varReplacer3374);

        $r9 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getDataParam()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r7);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getDateInMilli()>();

        varReplacer3461 = "nodeTime";

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3461, $r7);

        $r7 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        varReplacer3403 = "BlobUploadUrls";

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3403, $r7);

        $r7 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        varReplacer3356 = "tokenUser";

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3356, $r7);

        $r7 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String deviceID>;

        varReplacer3423 = "deviceID";

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3423, $r7);

        $r7 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String PASS_ID>;

        varReplacer3438 = "tokenPass";

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3438, $r7);

        $r7 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

        if $r7 == null goto label028;

        $r7 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

        varReplacer3401 = "token";

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3401, $r7);

     label028:
        $r7 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String buildRequestBody(java.util.Map)>($r6);

        varReplacer3367 = "null";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3367);

        if $z0 == 0 goto label040;

        $r28 = new java.lang.Exception;

        specialinvoke $r28.<java.lang.Exception: void <init>()>();

        throw $r28;

     label029:
        $r19 := @caughtexception;

        r37 = new java.lang.IllegalArgumentException;

        r33 = new java.lang.StringBuilder;

        varReplacer3407 = "invalid url: ";

        specialinvoke r33.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3407);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getTargetUrl()>();

        $r15 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r37.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw r37;

     label030:
        $r17 = virtualinvoke $r11.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getImageURIAttribute()>();

        $r14 = virtualinvoke $r17.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r7);

        $r7 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

     label031:
        if $r7 == null goto label039;

     label032:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

     label033:
        if $z0 != 0 goto label039;

        $r4 = new java.io.File;

        $r1 = $r4;

     label034:
        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r7);

     label035:
        r33 = new java.lang.StringBuilder;

        $r15 = r33;

        $r7 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String Blob_Url>;

     label036:
        $r7 = virtualinvoke $r3.<com.applicate.essilormain.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r7);

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke r33.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

     label037:
        $r7 = <com.applicate.essilormain.app.DownloadService: java.lang.String USER_ID>;

     label038:
        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer3350 = "_";

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3350);

        $r7 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r9, $r7);

     label039:
        $i0 = $i0 + 1;

        goto label026;

     label040:
        $r20 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        $r14 = null;

     label041:
        $r7 = virtualinvoke $r8.<java.net.URL: java.lang.String getProtocol()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer3400 = "https";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3400);

     label042:
        if $z0 == 0 goto label075;

     label043:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r21 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>();

        $r22 = (javax.net.ssl.HttpsURLConnection) $r21;

     label044:
        $r23 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

     label045:
        virtualinvoke $r22.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r23);

     label046:
        $r14 = $r22;

     label047:
        $r26 = (java.net.HttpURLConnection) $r14;

        varReplacer3386 = 1;

        virtualinvoke $r26.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer3386);

        $r26 = (java.net.HttpURLConnection) $r14;

        varReplacer3364 = 0;

        virtualinvoke $r26.<java.net.HttpURLConnection: void setUseCaches(boolean)>(varReplacer3364);

     label048:
        $i0 = lengthof $r20;

     label049:
        $r26 = (java.net.HttpURLConnection) $r14;

        virtualinvoke $r26.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

        $r26 = (java.net.HttpURLConnection) $r14;

        varReplacer3458 = "POST";

        virtualinvoke $r26.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(varReplacer3458);

        $r26 = (java.net.HttpURLConnection) $r14;

        varReplacer3420 = "Content-Type";

        varReplacer3421 = "application/x-www-form-urlencoded;charset=UTF-8";

        virtualinvoke $r26.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer3420, varReplacer3421);

        $r26 = (java.net.HttpURLConnection) $r14;

        $r24 = virtualinvoke $r26.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r24.<java.io.OutputStream: void write(byte[])>($r20);

        virtualinvoke $r24.<java.io.OutputStream: void flush()>();

        virtualinvoke $r24.<java.io.OutputStream: void close()>();

        $r26 = (java.net.HttpURLConnection) $r14;

        $r7 = virtualinvoke $r26.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label050:
        $r9 = "";

     label051:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label052:
        if $z0 != 0 goto label111;

     label053:
        varReplacer3459 = "EncrytedToken~";

        $i0 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>(varReplacer3459);

     label054:
        if $i0 == -1 goto label111;

     label055:
        varReplacer3410 = "~";

        $r13 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer3410);

     label056:
        $r7 = $r13[1];

     label057:
        varReplacer3426 = ";";

        $r13 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer3426);

     label058:
        $r7 = $r13[0];

     label059:
        <com.applicate.essilormain.app.ServerUtilities: java.lang.String token> = $r7;

     label060:
        $r7 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

     label061:
        varReplacer3387 = "token";

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3387, $r7);

        $r7 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String buildRequestBody(java.util.Map)>($r6);

        varReplacer3460 = "null";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3460);

     label062:
        if $z0 == 0 goto label077;

     label063:
        $r28 = new java.lang.Exception;

     label064:
        $r18 = $r28;

     label065:
        specialinvoke $r28.<java.lang.Exception: void <init>()>();

        throw $r18;

     label066:
        $r18 := @caughtexception;

     label067:
        $r25 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        r33 = new java.lang.StringBuilder;

     label068:
        $r15 = r33;

     label069:
        varReplacer3402 = "Exception for node";

        specialinvoke r33.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3402);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        varReplacer3397 = "is";

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3397);

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String)>($r7);

        $r17 = new org.json.JSONObject;

     label070:
        $r2 = $r17;

     label071:
        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3468 = "methodName";

        varReplacer3469 = "updateStatusByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3468, varReplacer3469);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3427 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3427, $r7);

        varReplacer3428 = "status";

        varReplacer3429 = "failed";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3428, varReplacer3429);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

        $r17 = new org.json.JSONObject;

     label072:
        $r2 = $r17;

     label073:
        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3441 = "methodName";

        varReplacer3442 = "updateReasonByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3441, varReplacer3442);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3443 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3443, $r7);

        varReplacer3439 = "reason";

        varReplacer3440 = "N/A";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3439, varReplacer3440);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

     label074:
        $r26 = (java.net.HttpURLConnection) $r14;

        virtualinvoke $r26.<java.net.HttpURLConnection: void disconnect()>();

        return;

     label075:
        $r21 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>();

        $r26 = (java.net.HttpURLConnection) $r21;

     label076:
        $r14 = $r26;

        goto label047;

     label077:
        $r20 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        $r7 = virtualinvoke $r8.<java.net.URL: java.lang.String getProtocol()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer3379 = "https";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3379);

     label078:
        if $z0 == 0 goto label098;

     label079:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r21 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>();

        $r22 = (javax.net.ssl.HttpsURLConnection) $r21;

     label080:
        $r23 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

     label081:
        virtualinvoke $r22.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r23);

     label082:
        $r14 = $r22;

     label083:
        $r26 = (java.net.HttpURLConnection) $r14;

        varReplacer3411 = 1;

        virtualinvoke $r26.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer3411);

        $r26 = (java.net.HttpURLConnection) $r14;

        varReplacer3393 = 0;

        virtualinvoke $r26.<java.net.HttpURLConnection: void setUseCaches(boolean)>(varReplacer3393);

     label084:
        $i0 = lengthof $r20;

     label085:
        $r26 = (java.net.HttpURLConnection) $r14;

        virtualinvoke $r26.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

        $r26 = (java.net.HttpURLConnection) $r14;

        varReplacer3348 = "POST";

        virtualinvoke $r26.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(varReplacer3348);

        $r26 = (java.net.HttpURLConnection) $r14;

        varReplacer3444 = "Content-Type";

        varReplacer3445 = "application/x-www-form-urlencoded;charset=UTF-8";

        virtualinvoke $r26.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer3444, varReplacer3445);

        $r26 = (java.net.HttpURLConnection) $r14;

        $r24 = virtualinvoke $r26.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r24.<java.io.OutputStream: void write(byte[])>($r20);

        virtualinvoke $r24.<java.io.OutputStream: void flush()>();

        virtualinvoke $r24.<java.io.OutputStream: void close()>();

        $r26 = (java.net.HttpURLConnection) $r14;

        $i0 = virtualinvoke $r26.<java.net.HttpURLConnection: int getResponseCode()>();

     label086:
        if $i0 != 200 goto label097;

     label087:
        $r26 = (java.net.HttpURLConnection) $r14;

        $r7 = virtualinvoke $r26.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label088:
        $r9 = "Server-Client Date Mismatch";

     label089:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label090:
        if $z0 == 0 goto label100;

     label091:
        $r17 = new org.json.JSONObject;

     label092:
        $r2 = $r17;

     label093:
        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3357 = "methodName";

        varReplacer3358 = "updateStatusByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3357, varReplacer3358);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3349 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3349, $r7);

        varReplacer3352 = "status";

        varReplacer3353 = "Failed";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3352, varReplacer3353);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

     label094:
        $r17 = new org.json.JSONObject;

     label095:
        $r2 = $r17;

     label096:
        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3404 = "methodName";

        varReplacer3405 = "updateReasonByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3404, varReplacer3405);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3380 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3380, $r7);

        varReplacer3391 = "reason";

        varReplacer3392 = "Server-Client Date Mismatch";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3391, varReplacer3392);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

     label097:
        $r26 = (java.net.HttpURLConnection) $r14;

        virtualinvoke $r26.<java.net.HttpURLConnection: void disconnect()>();

        return;

     label098:
        $r21 = virtualinvoke $r8.<java.net.URL: java.net.URLConnection openConnection()>();

        $r26 = (java.net.HttpURLConnection) $r21;

     label099:
        $r14 = $r26;

        goto label083;

     label100:
        r35 = new org.json.JSONObject;

     label101:
        $r17 = r35;

     label102:
        specialinvoke r35.<org.json.JSONObject: void <init>()>();

        varReplacer3394 = "methodName";

        varReplacer3395 = "updateStatusByID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3394, varReplacer3395);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3422 = "reqID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3422, $r7);

        varReplacer3359 = "status";

        varReplacer3360 = "Phase-2";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3359, varReplacer3360);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r17);

     label103:
        r35 = new org.json.JSONObject;

     label104:
        $r17 = r35;

     label105:
        specialinvoke r35.<org.json.JSONObject: void <init>()>();

        varReplacer3455 = "methodName";

        varReplacer3456 = "updateReasonByID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3455, varReplacer3456);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3436 = "reqID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3436, $r7);

        varReplacer3464 = "reason";

        varReplacer3465 = "N/A";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3464, varReplacer3465);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r17);

     label106:
        r35 = new org.json.JSONObject;

     label107:
        $r17 = r35;

     label108:
        specialinvoke r35.<org.json.JSONObject: void <init>()>();

        varReplacer3408 = "methodName";

        varReplacer3409 = "updateblopUploadUrlsByID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3408, varReplacer3409);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3448 = "reqID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3448, $r7);

        $r7 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        varReplacer3351 = "blopUploadUrls";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3351, $r7);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r17);

     label109:
        goto label097;

     label110:
        $r27 := @caughtexception;

        $r26 = (java.net.HttpURLConnection) $r14;

        virtualinvoke $r26.<java.net.HttpURLConnection: void disconnect()>();

        throw $r27;

     label111:
        varReplacer3388 = "FAiLUreERrOR@@@@~~~~";

        $i0 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>(varReplacer3388);

     label112:
        if $i0 == -1 goto label123;

     label113:
        $r25 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        r33 = new java.lang.StringBuilder;

     label114:
        $r15 = r33;

     label115:
        varReplacer3466 = "Server returned failure for node";

        specialinvoke r33.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3466);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        $r15 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.slf4j.Logger: void info(java.lang.String)>($r7);

     label116:
        $r17 = new org.json.JSONObject;

     label117:
        $r2 = $r17;

     label118:
        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3430 = "methodName";

        varReplacer3431 = "updateStatusByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3430, varReplacer3431);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3470 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3470, $r7);

        varReplacer3361 = "status";

        varReplacer3362 = "failed";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3361, varReplacer3362);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

     label119:
        $r17 = new org.json.JSONObject;

     label120:
        $r2 = $r17;

     label121:
        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3416 = "methodName";

        varReplacer3417 = "updateReasonByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3416, varReplacer3417);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3363 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3363, $r7);

        varReplacer3449 = "reason";

        varReplacer3450 = "N/A";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3449, varReplacer3450);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

     label122:
        goto label097;

     label123:
        $r26 = (java.net.HttpURLConnection) $r14;

        $i0 = virtualinvoke $r26.<java.net.HttpURLConnection: int getResponseCode()>();

     label124:
        if $i0 != 200 goto label097;

        $r9 = "Server-Client Date Mismatch";

     label125:
        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r7);

     label126:
        if $z0 == 0 goto label134;

     label127:
        $r17 = new org.json.JSONObject;

     label128:
        $r2 = $r17;

     label129:
        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3354 = "methodName";

        varReplacer3355 = "updateStatusByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3354, varReplacer3355);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3457 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3457, $r7);

        varReplacer3412 = "status";

        varReplacer3413 = "Failed";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3412, varReplacer3413);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

     label130:
        $r17 = new org.json.JSONObject;

     label131:
        $r2 = $r17;

     label132:
        specialinvoke $r17.<org.json.JSONObject: void <init>()>();

        varReplacer3375 = "methodName";

        varReplacer3376 = "updateReasonByID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3375, varReplacer3376);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3385 = "reqID";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3385, $r7);

        varReplacer3432 = "reason";

        varReplacer3433 = "Server-Client Date Mismatch";

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3432, varReplacer3433);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r2);

     label133:
        goto label097;

     label134:
        r35 = new org.json.JSONObject;

     label135:
        $r17 = r35;

     label136:
        specialinvoke r35.<org.json.JSONObject: void <init>()>();

        varReplacer3452 = "methodName";

        varReplacer3453 = "updateStatusByID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3452, varReplacer3453);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3467 = "reqID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3467, $r7);

        varReplacer3398 = "status";

        varReplacer3399 = "Phase-2";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3398, varReplacer3399);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r17);

     label137:
        r35 = new org.json.JSONObject;

     label138:
        $r17 = r35;

     label139:
        specialinvoke r35.<org.json.JSONObject: void <init>()>();

        varReplacer3377 = "methodName";

        varReplacer3378 = "updateReasonByID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3377, varReplacer3378);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3418 = "reqID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3418, $r7);

        varReplacer3368 = "reason";

        varReplacer3369 = "N/A";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3368, varReplacer3369);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r17);

     label140:
        r35 = new org.json.JSONObject;

     label141:
        $r17 = r35;

     label142:
        specialinvoke r35.<org.json.JSONObject: void <init>()>();

        varReplacer3381 = "methodName";

        varReplacer3382 = "updateblopUploadUrlsByID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3381, varReplacer3382);

        $r7 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3389 = "reqID";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3389, $r7);

        $r7 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

        varReplacer3424 = "blopUploadUrls";

        virtualinvoke $r17.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3424, $r7);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r17);

     label143:
        goto label097;

     label144:
        $r28 := @caughtexception;

        goto label039;

     label145:
        $r29 := @caughtexception;

        goto label019;

     label146:
        return;

        catch java.lang.Exception from label004 to label005 with label145;
        catch java.lang.Exception from label006 to label007 with label145;
        catch java.lang.Exception from label008 to label009 with label145;
        catch java.lang.Exception from label010 to label011 with label145;
        catch java.lang.Exception from label012 to label013 with label145;
        catch java.lang.Exception from label014 to label015 with label145;
        catch java.lang.Exception from label016 to label017 with label145;
        catch java.lang.Exception from label018 to label019 with label145;
        catch java.net.MalformedURLException from label024 to label025 with label029;
        catch java.lang.Exception from label030 to label031 with label144;
        catch java.lang.Exception from label032 to label033 with label144;
        catch java.lang.Exception from label034 to label035 with label144;
        catch java.lang.Exception from label036 to label037 with label144;
        catch java.lang.Exception from label038 to label039 with label144;
        catch java.lang.Exception from label041 to label042 with label066;
        catch java.lang.Exception from label043 to label044 with label066;
        catch java.lang.Exception from label045 to label046 with label066;
        catch java.lang.Exception from label047 to label050 with label066;
        catch java.lang.Exception from label051 to label052 with label066;
        catch java.lang.Exception from label053 to label054 with label066;
        catch java.lang.Exception from label055 to label059 with label066;
        catch java.lang.Exception from label061 to label062 with label066;
        catch java.lang.Exception from label065 to label066 with label066;
        catch java.lang.Throwable from label041 to label042 with label110;
        catch java.lang.Throwable from label043 to label046 with label110;
        catch java.lang.Throwable from label047 to label048 with label110;
        catch java.lang.Throwable from label049 to label050 with label110;
        catch java.lang.Throwable from label051 to label052 with label110;
        catch java.lang.Throwable from label053 to label054 with label110;
        catch java.lang.Throwable from label055 to label056 with label110;
        catch java.lang.Throwable from label057 to label058 with label110;
        catch java.lang.Throwable from label059 to label060 with label110;
        catch java.lang.Throwable from label060 to label062 with label110;
        catch java.lang.Throwable from label063 to label064 with label110;
        catch java.lang.Throwable from label065 to label066 with label110;
        catch java.lang.Throwable from label067 to label068 with label110;
        catch java.lang.Throwable from label069 to label070 with label110;
        catch java.lang.Throwable from label071 to label072 with label110;
        catch java.lang.Throwable from label073 to label074 with label110;
        catch java.lang.Exception from label075 to label076 with label066;
        catch java.lang.Exception from label077 to label078 with label066;
        catch java.lang.Exception from label079 to label080 with label066;
        catch java.lang.Exception from label081 to label082 with label066;
        catch java.lang.Exception from label083 to label086 with label066;
        catch java.lang.Exception from label087 to label088 with label066;
        catch java.lang.Exception from label089 to label090 with label066;
        catch java.lang.Exception from label093 to label094 with label066;
        catch java.lang.Exception from label096 to label097 with label066;
        catch java.lang.Throwable from label075 to label076 with label110;
        catch java.lang.Throwable from label077 to label078 with label110;
        catch java.lang.Throwable from label079 to label082 with label110;
        catch java.lang.Throwable from label083 to label084 with label110;
        catch java.lang.Throwable from label085 to label086 with label110;
        catch java.lang.Throwable from label087 to label088 with label110;
        catch java.lang.Throwable from label089 to label090 with label110;
        catch java.lang.Throwable from label091 to label092 with label110;
        catch java.lang.Throwable from label093 to label095 with label110;
        catch java.lang.Throwable from label096 to label097 with label110;
        catch java.lang.Exception from label098 to label099 with label066;
        catch java.lang.Exception from label102 to label103 with label066;
        catch java.lang.Exception from label105 to label106 with label066;
        catch java.lang.Exception from label108 to label109 with label066;
        catch java.lang.Throwable from label098 to label099 with label110;
        catch java.lang.Throwable from label100 to label101 with label110;
        catch java.lang.Throwable from label102 to label104 with label110;
        catch java.lang.Throwable from label105 to label107 with label110;
        catch java.lang.Throwable from label108 to label109 with label110;
        catch java.lang.Exception from label111 to label112 with label066;
        catch java.lang.Exception from label115 to label116 with label066;
        catch java.lang.Exception from label118 to label119 with label066;
        catch java.lang.Exception from label121 to label122 with label066;
        catch java.lang.Exception from label123 to label124 with label066;
        catch java.lang.Exception from label125 to label126 with label066;
        catch java.lang.Exception from label129 to label130 with label066;
        catch java.lang.Exception from label132 to label133 with label066;
        catch java.lang.Exception from label136 to label137 with label066;
        catch java.lang.Exception from label139 to label140 with label066;
        catch java.lang.Exception from label142 to label143 with label066;
        catch java.lang.Throwable from label111 to label112 with label110;
        catch java.lang.Throwable from label113 to label114 with label110;
        catch java.lang.Throwable from label115 to label117 with label110;
        catch java.lang.Throwable from label118 to label120 with label110;
        catch java.lang.Throwable from label121 to label122 with label110;
        catch java.lang.Throwable from label123 to label124 with label110;
        catch java.lang.Throwable from label125 to label126 with label110;
        catch java.lang.Throwable from label127 to label128 with label110;
        catch java.lang.Throwable from label129 to label131 with label110;
        catch java.lang.Throwable from label132 to label133 with label110;
        catch java.lang.Throwable from label134 to label135 with label110;
        catch java.lang.Throwable from label136 to label138 with label110;
        catch java.lang.Throwable from label139 to label141 with label110;
        catch java.lang.Throwable from label142 to label143 with label110;
    }

    public static void processSimpleInventoryModel(com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel) throws java.lang.Exception
    {
        com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel $r0;
        java.util.HashMap $r1, r20;
        java.net.URL $r2, r19;
        java.lang.String $r3, $r4, varReplacer3207, varReplacer3208, varReplacer3209, varReplacer3210, varReplacer3211, varReplacer3212, varReplacer3213, varReplacer3214, varReplacer3215, varReplacer3216, varReplacer3217, varReplacer3219, varReplacer3220, varReplacer3221, varReplacer3222, varReplacer3223, varReplacer3224, varReplacer3225, varReplacer3226, varReplacer3227, varReplacer3228, varReplacer3229, varReplacer3230, varReplacer3231, varReplacer3232, varReplacer3233, varReplacer3234, varReplacer3235, varReplacer3236, varReplacer3237, varReplacer3238, varReplacer3239, varReplacer3240, varReplacer3241, varReplacer3242, varReplacer3243, varReplacer3244, varReplacer3245, varReplacer3246, varReplacer3247, varReplacer3248, varReplacer3249, varReplacer3250, varReplacer3251, varReplacer3252, varReplacer3253, varReplacer3254, varReplacer3255, varReplacer3257, varReplacer3258, varReplacer3259, varReplacer3260, varReplacer3261, varReplacer3262, varReplacer3263, varReplacer3264, varReplacer3265, varReplacer3266, varReplacer3267, varReplacer3268, varReplacer3269, varReplacer3270, varReplacer3271, varReplacer3272, varReplacer3273, varReplacer3274, varReplacer3275, varReplacer3276, varReplacer3277, varReplacer3278, varReplacer3279, varReplacer3280, varReplacer3281, varReplacer3282, varReplacer3283, varReplacer3284, varReplacer3285, varReplacer3286, varReplacer3287, varReplacer3289, varReplacer3290, varReplacer3291, varReplacer3292, varReplacer3293, varReplacer3294, varReplacer3295, varReplacer3296, varReplacer3297, varReplacer3298, varReplacer3299, varReplacer3300, varReplacer3301, varReplacer3302, varReplacer3303, varReplacer3304, varReplacer3305, varReplacer3306, varReplacer3307, varReplacer3308, varReplacer3309, varReplacer3310, varReplacer3311, varReplacer3312, varReplacer3313, varReplacer3314, varReplacer3315, varReplacer3316, varReplacer3317, varReplacer3318, varReplacer3319, varReplacer3320, varReplacer3321, varReplacer3322, varReplacer3323, varReplacer3324, varReplacer3325, varReplacer3326, varReplacer3327, varReplacer3328, varReplacer3329, varReplacer3330, varReplacer3331, varReplacer3332, varReplacer3333, varReplacer3335, varReplacer3336, varReplacer3337, varReplacer3338, varReplacer3339, varReplacer3340, varReplacer3341, varReplacer3342, varReplacer3343, varReplacer3344, varReplacer3345, varReplacer3346, varReplacer3347;
        boolean $z0;
        java.lang.Exception $r5, r21;
        java.lang.Throwable $r6, $r18;
        java.lang.StringBuilder $r7, r22;
        byte[] $r8;
        java.lang.Object $r9;
        java.net.URLConnection $r10;
        javax.net.ssl.HttpsURLConnection $r11;
        javax.net.ssl.HostnameVerifier $r12;
        int $i0, varReplacer3218, varReplacer3256, varReplacer3288, varReplacer3334;
        java.io.OutputStream $r13;
        java.lang.String[] $r14;
        org.slf4j.Logger $r15;
        org.json.JSONObject $r16, r24;
        java.net.HttpURLConnection $r17;
        java.lang.IllegalArgumentException r23;

        nop;

        $r0 := @parameter0: com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel;

        r19 = new java.net.URL;

        $r2 = r19;

     label001:
        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getTargetUrl()>();

        specialinvoke r19.<java.net.URL: void <init>(java.lang.String)>($r3);

     label002:
        r20 = new java.util.HashMap;

        $r1 = r20;

        specialinvoke r20.<java.util.HashMap: void <init>()>();

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getData()>();

        varReplacer3339 = "UTF-8";

        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r3, varReplacer3339);

        $r4 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getDataParam()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getDateInMilli()>();

        varReplacer3232 = "nodeTime";

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3232, $r3);

        $r3 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        varReplacer3273 = "tokenUser";

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3273, $r3);

        $r3 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String deviceID>;

        varReplacer3333 = "deviceID";

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3333, $r3);

        $r3 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String PASS_ID>;

        varReplacer3217 = "tokenPass";

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3217, $r3);

        $r3 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

        if $r3 == null goto label003;

        $r3 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

        varReplacer3209 = "token";

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3209, $r3);

     label003:
        $r3 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String buildRequestBody(java.util.Map)>($r1);

        varReplacer3221 = "null";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3221);

        if $z0 == 0 goto label005;

        r21 = new java.lang.Exception;

        specialinvoke r21.<java.lang.Exception: void <init>()>();

        throw r21;

     label004:
        $r6 := @caughtexception;

        r23 = new java.lang.IllegalArgumentException;

        r22 = new java.lang.StringBuilder;

        varReplacer3261 = "invalid url: ";

        specialinvoke r22.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3261);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getTargetUrl()>();

        $r7 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw r23;

     label005:
        $r8 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        $r9 = null;

     label006:
        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer3306 = "https";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3306);

     label007:
        if $z0 == 0 goto label040;

     label008:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r10 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r11 = (javax.net.ssl.HttpsURLConnection) $r10;

     label009:
        $r12 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

     label010:
        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r12);

     label011:
        $r9 = $r11;

     label012:
        $r17 = (java.net.HttpURLConnection) $r9;

        varReplacer3218 = 1;

        virtualinvoke $r17.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer3218);

        $r17 = (java.net.HttpURLConnection) $r9;

        varReplacer3288 = 0;

        virtualinvoke $r17.<java.net.HttpURLConnection: void setUseCaches(boolean)>(varReplacer3288);

     label013:
        $i0 = lengthof $r8;

     label014:
        $r17 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r17.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

        $r17 = (java.net.HttpURLConnection) $r9;

        varReplacer3347 = "POST";

        virtualinvoke $r17.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(varReplacer3347);

        $r17 = (java.net.HttpURLConnection) $r9;

        varReplacer3235 = "Content-Type";

        varReplacer3236 = "application/x-www-form-urlencoded;charset=UTF-8";

        virtualinvoke $r17.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer3235, varReplacer3236);

        $r17 = (java.net.HttpURLConnection) $r9;

        $r13 = virtualinvoke $r17.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r8);

        virtualinvoke $r13.<java.io.OutputStream: void flush()>();

        virtualinvoke $r13.<java.io.OutputStream: void close()>();

        $r17 = (java.net.HttpURLConnection) $r9;

        $r3 = virtualinvoke $r17.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label015:
        $r4 = "";

     label016:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label017:
        if $z0 != 0 goto label105;

     label018:
        varReplacer3207 = "EncrytedToken~";

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(varReplacer3207);

     label019:
        if $i0 == -1 goto label105;

     label020:
        varReplacer3274 = "~";

        $r14 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer3274);

     label021:
        $r3 = $r14[1];

     label022:
        varReplacer3223 = ";";

        $r14 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer3223);

     label023:
        $r3 = $r14[0];

     label024:
        <com.applicate.essilormain.app.ServerUtilities: java.lang.String token> = $r3;

     label025:
        $r3 = <com.applicate.essilormain.app.ServerUtilities: java.lang.String token>;

     label026:
        varReplacer3264 = "token";

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3264, $r3);

        $r3 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String buildRequestBody(java.util.Map)>($r1);

        varReplacer3208 = "null";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3208);

     label027:
        if $z0 == 0 goto label042;

     label028:
        r21 = new java.lang.Exception;

     label029:
        $r5 = r21;

     label030:
        specialinvoke r21.<java.lang.Exception: void <init>()>();

        throw $r5;

     label031:
        $r5 := @caughtexception;

     label032:
        $r15 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        r22 = new java.lang.StringBuilder;

     label033:
        $r7 = r22;

     label034:
        varReplacer3248 = "Exception for node";

        specialinvoke r22.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3248);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer3335 = "is";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3335);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>($r3);

        r24 = new org.json.JSONObject;

     label035:
        $r16 = r24;

     label036:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3262 = "methodName";

        varReplacer3263 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3262, varReplacer3263);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3331 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3331, $r3);

        varReplacer3269 = "status";

        varReplacer3270 = "failed";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3269, varReplacer3270);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

        r24 = new org.json.JSONObject;

     label037:
        $r16 = r24;

     label038:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3312 = "methodName";

        varReplacer3313 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3312, varReplacer3313);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3338 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3338, $r3);

        varReplacer3251 = "reason";

        varReplacer3252 = "N/A";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3251, varReplacer3252);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label039:
        $r17 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r17.<java.net.HttpURLConnection: void disconnect()>();

        return;

     label040:
        $r10 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r17 = (java.net.HttpURLConnection) $r10;

     label041:
        $r9 = $r17;

        goto label012;

     label042:
        $r8 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>();

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer3346 = "https";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3346);

     label043:
        if $z0 == 0 goto label063;

     label044:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r10 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r11 = (javax.net.ssl.HttpsURLConnection) $r10;

     label045:
        $r12 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

     label046:
        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r12);

     label047:
        $r9 = $r11;

     label048:
        $r17 = (java.net.HttpURLConnection) $r9;

        varReplacer3256 = 1;

        virtualinvoke $r17.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer3256);

        $r17 = (java.net.HttpURLConnection) $r9;

        varReplacer3334 = 0;

        virtualinvoke $r17.<java.net.HttpURLConnection: void setUseCaches(boolean)>(varReplacer3334);

     label049:
        $i0 = lengthof $r8;

     label050:
        $r17 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r17.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

        $r17 = (java.net.HttpURLConnection) $r9;

        varReplacer3314 = "POST";

        virtualinvoke $r17.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(varReplacer3314);

        $r17 = (java.net.HttpURLConnection) $r9;

        varReplacer3343 = "Content-Type";

        varReplacer3344 = "application/x-www-form-urlencoded;charset=UTF-8";

        virtualinvoke $r17.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer3343, varReplacer3344);

        $r17 = (java.net.HttpURLConnection) $r9;

        $r13 = virtualinvoke $r17.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r8);

        virtualinvoke $r13.<java.io.OutputStream: void flush()>();

        virtualinvoke $r13.<java.io.OutputStream: void close()>();

        $r17 = (java.net.HttpURLConnection) $r9;

        $i0 = virtualinvoke $r17.<java.net.HttpURLConnection: int getResponseCode()>();

     label051:
        if $i0 != 200 goto label062;

     label052:
        $r17 = (java.net.HttpURLConnection) $r9;

        $r3 = virtualinvoke $r17.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label053:
        if $r3 == null goto label065;

        $r4 = "Server-Client Date Mismatch";

     label054:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label055:
        if $z0 == 0 goto label065;

     label056:
        r24 = new org.json.JSONObject;

     label057:
        $r16 = r24;

     label058:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3213 = "methodName";

        varReplacer3214 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3213, varReplacer3214);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3285 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3285, $r3);

        varReplacer3219 = "status";

        varReplacer3220 = "Failed";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3219, varReplacer3220);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label059:
        r24 = new org.json.JSONObject;

     label060:
        $r16 = r24;

     label061:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3281 = "methodName";

        varReplacer3282 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3281, varReplacer3282);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3301 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3301, $r3);

        varReplacer3224 = "reason";

        varReplacer3225 = "Server-Client Date Mismatch";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3224, varReplacer3225);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label062:
        $r17 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r17.<java.net.HttpURLConnection: void disconnect()>();

        return;

     label063:
        $r10 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

        $r17 = (java.net.HttpURLConnection) $r10;

     label064:
        $r9 = $r17;

        goto label048;

     label065:
        $r4 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label066:
        varReplacer3237 = "Relaxo";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3237);

     label067:
        if $z0 != 0 goto label077;

     label068:
        $r4 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label069:
        varReplacer3309 = "Britannia";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3309);

     label070:
        if $z0 != 0 goto label077;

     label071:
        $r4 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label072:
        varReplacer3326 = "ims";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3326);

     label073:
        if $z0 != 0 goto label077;

     label074:
        $r4 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label075:
        varReplacer3345 = "Whirlpool";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3345);

     label076:
        if $z0 == 0 goto label098;

     label077:
        $r4 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getCategoryName()>();

        varReplacer3286 = "Order";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3286);

     label078:
        if $z0 == 0 goto label098;

        if $r3 == null goto label091;

        $r4 = "";

     label079:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label080:
        if $z0 != 0 goto label091;

     label081:
        varReplacer3253 = "SUCCESS";

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(varReplacer3253);

     label082:
        if $i0 == -1 goto label091;

     label083:
        r24 = new org.json.JSONObject;

     label084:
        $r16 = r24;

     label085:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3249 = "methodName";

        varReplacer3250 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3249, varReplacer3250);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3287 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3287, $r3);

        varReplacer3243 = "status";

        varReplacer3244 = "submitted";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3243, varReplacer3244);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label086:
        r24 = new org.json.JSONObject;

     label087:
        $r16 = r24;

     label088:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3336 = "methodName";

        varReplacer3337 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3336, varReplacer3337);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3222 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3222, $r3);

        varReplacer3277 = "reason";

        varReplacer3278 = "N/A";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3277, varReplacer3278);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label089:
        goto label062;

     label090:
        $r18 := @caughtexception;

        $r17 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r17.<java.net.HttpURLConnection: void disconnect()>();

        throw $r18;

     label091:
        r24 = new org.json.JSONObject;

     label092:
        $r16 = r24;

     label093:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3318 = "methodName";

        varReplacer3319 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3318, varReplacer3319);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3247 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3247, $r3);

        varReplacer3215 = "status";

        varReplacer3216 = "failed";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3215, varReplacer3216);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label094:
        r24 = new org.json.JSONObject;

     label095:
        $r16 = r24;

     label096:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3321 = "methodName";

        varReplacer3322 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3321, varReplacer3322);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3332 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3332, $r3);

        varReplacer3275 = "reason";

        varReplacer3276 = "N/A";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3275, varReplacer3276);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label097:
        goto label062;

     label098:
        r24 = new org.json.JSONObject;

     label099:
        $r16 = r24;

     label100:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3302 = "methodName";

        varReplacer3303 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3302, varReplacer3303);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3212 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3212, $r3);

        varReplacer3323 = "status";

        varReplacer3324 = "submitted";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3323, varReplacer3324);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label101:
        r24 = new org.json.JSONObject;

     label102:
        $r16 = r24;

     label103:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3267 = "methodName";

        varReplacer3268 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3267, varReplacer3268);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3227 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3227, $r3);

        varReplacer3297 = "reason";

        varReplacer3298 = "N/A";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3297, varReplacer3298);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label104:
        goto label062;

     label105:
        varReplacer3340 = "FAiLUreERrOR@@@@~~~~";

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(varReplacer3340);

     label106:
        if $i0 == -1 goto label117;

     label107:
        $r15 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        r22 = new java.lang.StringBuilder;

     label108:
        $r7 = r22;

     label109:
        varReplacer3260 = "Server returned failure for node";

        specialinvoke r22.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3260);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void info(java.lang.String)>($r3);

     label110:
        r24 = new org.json.JSONObject;

     label111:
        $r16 = r24;

     label112:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3341 = "methodName";

        varReplacer3342 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3341, varReplacer3342);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3325 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3325, $r3);

        varReplacer3233 = "status";

        varReplacer3234 = "failed";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3233, varReplacer3234);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label113:
        r24 = new org.json.JSONObject;

     label114:
        $r16 = r24;

     label115:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3327 = "methodName";

        varReplacer3328 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3327, varReplacer3328);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3257 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3257, $r3);

        varReplacer3289 = "reason";

        varReplacer3290 = "N/A";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3289, varReplacer3290);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label116:
        goto label062;

     label117:
        $r17 = (java.net.HttpURLConnection) $r9;

        $i0 = virtualinvoke $r17.<java.net.HttpURLConnection: int getResponseCode()>();

     label118:
        if $i0 != 200 goto label062;

        if $r3 == null goto label128;

        $r4 = "Server-Client Date Mismatch";

     label119:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label120:
        if $z0 == 0 goto label128;

     label121:
        r24 = new org.json.JSONObject;

     label122:
        $r16 = r24;

     label123:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3291 = "methodName";

        varReplacer3292 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3291, varReplacer3292);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3226 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3226, $r3);

        varReplacer3241 = "status";

        varReplacer3242 = "Failed";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3241, varReplacer3242);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label124:
        r24 = new org.json.JSONObject;

     label125:
        $r16 = r24;

     label126:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3329 = "methodName";

        varReplacer3330 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3329, varReplacer3330);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3304 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3304, $r3);

        varReplacer3315 = "reason";

        varReplacer3316 = "Server-Client Date Mismatch";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3315, varReplacer3316);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label127:
        goto label062;

     label128:
        $r4 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label129:
        varReplacer3240 = "Relaxo";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3240);

     label130:
        if $z0 != 0 goto label140;

     label131:
        $r4 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label132:
        varReplacer3228 = "Britannia";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3228);

     label133:
        if $z0 != 0 goto label140;

     label134:
        $r4 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label135:
        varReplacer3299 = "ims";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3299);

     label136:
        if $z0 != 0 goto label140;

     label137:
        $r4 = <com.applicate.essilormain.app.Constants: java.lang.String CLIENT_NAME>;

     label138:
        varReplacer3259 = "Whirlpool";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3259);

     label139:
        if $z0 == 0 goto label160;

     label140:
        $r4 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getCategoryName()>();

        varReplacer3320 = "Order";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer3320);

     label141:
        if $z0 == 0 goto label160;

        if $r3 == null goto label153;

        $r4 = "";

     label142:
        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label143:
        if $z0 != 0 goto label153;

     label144:
        varReplacer3305 = "SUCCESS";

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(varReplacer3305);

     label145:
        if $i0 == -1 goto label153;

     label146:
        r24 = new org.json.JSONObject;

     label147:
        $r16 = r24;

     label148:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3245 = "methodName";

        varReplacer3246 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3245, varReplacer3246);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3258 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3258, $r3);

        varReplacer3283 = "status";

        varReplacer3284 = "submitted";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3283, varReplacer3284);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label149:
        r24 = new org.json.JSONObject;

     label150:
        $r16 = r24;

     label151:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3279 = "methodName";

        varReplacer3280 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3279, varReplacer3280);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3265 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3265, $r3);

        varReplacer3238 = "reason";

        varReplacer3239 = "N/A";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3238, varReplacer3239);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label152:
        goto label062;

     label153:
        r24 = new org.json.JSONObject;

     label154:
        $r16 = r24;

     label155:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3310 = "methodName";

        varReplacer3311 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3310, varReplacer3311);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3317 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3317, $r3);

        varReplacer3271 = "status";

        varReplacer3272 = "failed";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3271, varReplacer3272);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label156:
        r24 = new org.json.JSONObject;

     label157:
        $r16 = r24;

     label158:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3307 = "methodName";

        varReplacer3308 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3307, varReplacer3308);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3266 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3266, $r3);

        varReplacer3293 = "reason";

        varReplacer3294 = "N/A";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3293, varReplacer3294);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label159:
        goto label062;

     label160:
        r24 = new org.json.JSONObject;

     label161:
        $r16 = r24;

     label162:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3230 = "methodName";

        varReplacer3231 = "updateStatusByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3230, varReplacer3231);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3300 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3300, $r3);

        varReplacer3254 = "status";

        varReplacer3255 = "submitted";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3254, varReplacer3255);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label163:
        r24 = new org.json.JSONObject;

     label164:
        $r16 = r24;

     label165:
        specialinvoke r24.<org.json.JSONObject: void <init>()>();

        varReplacer3295 = "methodName";

        varReplacer3296 = "updateReasonByID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3295, varReplacer3296);

        $r3 = virtualinvoke $r0.<com.applicate.essilormain.app.DataInventoryXML$DataInventoryModel: java.lang.String getReqid()>();

        varReplacer3229 = "reqID";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3229, $r3);

        varReplacer3210 = "reason";

        varReplacer3211 = "N/A";

        virtualinvoke $r16.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer3210, varReplacer3211);

        staticinvoke <com.applicate.essilormain.app.JobsQueue: void addJob(org.json.JSONObject)>($r16);

     label166:
        goto label062;

        catch java.net.MalformedURLException from label001 to label002 with label004;
        catch java.lang.Exception from label006 to label007 with label031;
        catch java.lang.Exception from label008 to label009 with label031;
        catch java.lang.Exception from label010 to label011 with label031;
        catch java.lang.Exception from label012 to label015 with label031;
        catch java.lang.Exception from label016 to label017 with label031;
        catch java.lang.Exception from label018 to label019 with label031;
        catch java.lang.Exception from label020 to label024 with label031;
        catch java.lang.Exception from label026 to label027 with label031;
        catch java.lang.Exception from label030 to label031 with label031;
        catch java.lang.Throwable from label006 to label007 with label090;
        catch java.lang.Throwable from label008 to label011 with label090;
        catch java.lang.Throwable from label012 to label013 with label090;
        catch java.lang.Throwable from label014 to label015 with label090;
        catch java.lang.Throwable from label016 to label017 with label090;
        catch java.lang.Throwable from label018 to label019 with label090;
        catch java.lang.Throwable from label020 to label021 with label090;
        catch java.lang.Throwable from label022 to label023 with label090;
        catch java.lang.Throwable from label024 to label025 with label090;
        catch java.lang.Throwable from label025 to label027 with label090;
        catch java.lang.Throwable from label028 to label029 with label090;
        catch java.lang.Throwable from label030 to label031 with label090;
        catch java.lang.Throwable from label032 to label033 with label090;
        catch java.lang.Throwable from label034 to label035 with label090;
        catch java.lang.Throwable from label036 to label037 with label090;
        catch java.lang.Throwable from label038 to label039 with label090;
        catch java.lang.Exception from label040 to label041 with label031;
        catch java.lang.Exception from label042 to label043 with label031;
        catch java.lang.Exception from label044 to label045 with label031;
        catch java.lang.Exception from label046 to label047 with label031;
        catch java.lang.Exception from label048 to label051 with label031;
        catch java.lang.Exception from label052 to label053 with label031;
        catch java.lang.Exception from label054 to label055 with label031;
        catch java.lang.Exception from label058 to label059 with label031;
        catch java.lang.Exception from label061 to label062 with label031;
        catch java.lang.Throwable from label040 to label041 with label090;
        catch java.lang.Throwable from label042 to label043 with label090;
        catch java.lang.Throwable from label044 to label047 with label090;
        catch java.lang.Throwable from label048 to label049 with label090;
        catch java.lang.Throwable from label050 to label051 with label090;
        catch java.lang.Throwable from label052 to label053 with label090;
        catch java.lang.Throwable from label054 to label055 with label090;
        catch java.lang.Throwable from label056 to label057 with label090;
        catch java.lang.Throwable from label058 to label060 with label090;
        catch java.lang.Throwable from label061 to label062 with label090;
        catch java.lang.Exception from label063 to label064 with label031;
        catch java.lang.Exception from label066 to label067 with label031;
        catch java.lang.Exception from label069 to label070 with label031;
        catch java.lang.Exception from label072 to label073 with label031;
        catch java.lang.Exception from label075 to label076 with label031;
        catch java.lang.Exception from label077 to label078 with label031;
        catch java.lang.Exception from label079 to label080 with label031;
        catch java.lang.Exception from label081 to label082 with label031;
        catch java.lang.Exception from label085 to label086 with label031;
        catch java.lang.Exception from label088 to label089 with label031;
        catch java.lang.Throwable from label063 to label064 with label090;
        catch java.lang.Throwable from label065 to label067 with label090;
        catch java.lang.Throwable from label068 to label070 with label090;
        catch java.lang.Throwable from label071 to label073 with label090;
        catch java.lang.Throwable from label074 to label076 with label090;
        catch java.lang.Throwable from label077 to label078 with label090;
        catch java.lang.Throwable from label079 to label080 with label090;
        catch java.lang.Throwable from label081 to label082 with label090;
        catch java.lang.Throwable from label083 to label084 with label090;
        catch java.lang.Throwable from label085 to label087 with label090;
        catch java.lang.Throwable from label088 to label089 with label090;
        catch java.lang.Exception from label093 to label094 with label031;
        catch java.lang.Exception from label096 to label097 with label031;
        catch java.lang.Exception from label100 to label101 with label031;
        catch java.lang.Exception from label103 to label104 with label031;
        catch java.lang.Exception from label105 to label106 with label031;
        catch java.lang.Exception from label109 to label110 with label031;
        catch java.lang.Exception from label112 to label113 with label031;
        catch java.lang.Exception from label115 to label116 with label031;
        catch java.lang.Exception from label117 to label118 with label031;
        catch java.lang.Exception from label119 to label120 with label031;
        catch java.lang.Exception from label123 to label124 with label031;
        catch java.lang.Exception from label126 to label127 with label031;
        catch java.lang.Exception from label129 to label130 with label031;
        catch java.lang.Exception from label132 to label133 with label031;
        catch java.lang.Exception from label135 to label136 with label031;
        catch java.lang.Exception from label138 to label139 with label031;
        catch java.lang.Exception from label140 to label141 with label031;
        catch java.lang.Exception from label142 to label143 with label031;
        catch java.lang.Exception from label144 to label145 with label031;
        catch java.lang.Exception from label148 to label149 with label031;
        catch java.lang.Exception from label151 to label152 with label031;
        catch java.lang.Exception from label155 to label156 with label031;
        catch java.lang.Exception from label158 to label159 with label031;
        catch java.lang.Exception from label162 to label163 with label031;
        catch java.lang.Exception from label165 to label166 with label031;
        catch java.lang.Throwable from label091 to label092 with label090;
        catch java.lang.Throwable from label093 to label095 with label090;
        catch java.lang.Throwable from label096 to label097 with label090;
        catch java.lang.Throwable from label098 to label099 with label090;
        catch java.lang.Throwable from label100 to label102 with label090;
        catch java.lang.Throwable from label103 to label104 with label090;
        catch java.lang.Throwable from label105 to label106 with label090;
        catch java.lang.Throwable from label107 to label108 with label090;
        catch java.lang.Throwable from label109 to label111 with label090;
        catch java.lang.Throwable from label112 to label114 with label090;
        catch java.lang.Throwable from label115 to label116 with label090;
        catch java.lang.Throwable from label117 to label118 with label090;
        catch java.lang.Throwable from label119 to label120 with label090;
        catch java.lang.Throwable from label121 to label122 with label090;
        catch java.lang.Throwable from label123 to label125 with label090;
        catch java.lang.Throwable from label126 to label127 with label090;
        catch java.lang.Throwable from label128 to label130 with label090;
        catch java.lang.Throwable from label131 to label133 with label090;
        catch java.lang.Throwable from label134 to label136 with label090;
        catch java.lang.Throwable from label137 to label139 with label090;
        catch java.lang.Throwable from label140 to label141 with label090;
        catch java.lang.Throwable from label142 to label143 with label090;
        catch java.lang.Throwable from label144 to label145 with label090;
        catch java.lang.Throwable from label146 to label147 with label090;
        catch java.lang.Throwable from label148 to label150 with label090;
        catch java.lang.Throwable from label151 to label152 with label090;
        catch java.lang.Throwable from label153 to label154 with label090;
        catch java.lang.Throwable from label155 to label157 with label090;
        catch java.lang.Throwable from label158 to label159 with label090;
        catch java.lang.Throwable from label160 to label161 with label090;
        catch java.lang.Throwable from label162 to label164 with label090;
        catch java.lang.Throwable from label165 to label166 with label090;
    }

    public static java.lang.String putBlob(java.lang.String, java.lang.String, java.io.File, long) throws java.lang.Exception
    {
        java.lang.String $r0, $r1, $r11, $r12, $r13, varReplacer3475, varReplacer3476, varReplacer3477, varReplacer3478, varReplacer3479, varReplacer3480, varReplacer3481, varReplacer3482, varReplacer3483, varReplacer3484, varReplacer3485, varReplacer3487, varReplacer3488, varReplacer3489, varReplacer3490, varReplacer3491, varReplacer3492, varReplacer3493, varReplacer3494, varReplacer3495, varReplacer3496, varReplacer3497;
        java.io.File $r2;
        long $l0;
        com.applicate.essilormain.app.CrenDentialEncryption $r3, r23;
        java.text.SimpleDateFormat $r4, r21;
        org.apache.http.impl.client.DefaultHttpClient $r5, r25;
        org.apache.http.client.methods.HttpPut $r6, r26;
        java.util.TimeZone $r7;
        java.lang.StringBuilder $r8, r22;
        java.util.Calendar $r9;
        java.util.Date $r10;
        java.net.URI $r14, r24;
        org.apache.http.HttpResponse $r15;
        org.apache.http.StatusLine $r16;
        org.apache.http.conn.ClientConnectionManager $r17;
        java.lang.Throwable $r18, $r19, $r20;
        org.apache.http.entity.FileEntity r27;
        java.lang.Exception r28;
        java.io.IOException r29;
        null_type varReplacer3486;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.io.File;

        $l0 := @parameter3: long;

        r21 = new java.text.SimpleDateFormat;

        $r4 = r21;

        varReplacer3493 = "EEE, dd MMM yyyy HH:mm:ss";

        specialinvoke r21.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(varReplacer3493);

        varReplacer3485 = "GMT";

        $r7 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(varReplacer3485);

        virtualinvoke $r4.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r7);

        r22 = new java.lang.StringBuilder;

        $r9 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r10 = virtualinvoke $r9.<java.util.Calendar: java.util.Date getTime()>();

        $r0 = virtualinvoke $r4.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r10);

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer3494 = " GMT";

        $r8 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3494);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r23 = new com.applicate.essilormain.app.CrenDentialEncryption;

        $r3 = r23;

        specialinvoke r23.<com.applicate.essilormain.app.CrenDentialEncryption: void <init>()>();

        r22 = new java.lang.StringBuilder;

        varReplacer3477 = "x-ms-blob-type:";

        specialinvoke r22.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3477);

        varReplacer3483 = "BlockBlob";

        $r8 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3483);

        varReplacer3480 = "\nx-ms-date:";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3480);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer3478 = "\nx-ms-version:";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3478);

        varReplacer3488 = "2009-09-19";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3488);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r22 = new java.lang.StringBuilder;

        varReplacer3479 = "/";

        specialinvoke r22.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3479);

        $r12 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String Account_Name>;

        $r12 = virtualinvoke $r3.<com.applicate.essilormain.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r12);

        $r8 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer3496 = "/";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3496);

        $r12 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String Container>;

        $r12 = virtualinvoke $r3.<com.applicate.essilormain.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r12);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        varReplacer3491 = "/";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3491);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r22 = new java.lang.StringBuilder;

        varReplacer3495 = "PUT";

        $r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(varReplacer3495);

        specialinvoke r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r13);

        varReplacer3490 = "\n\n\n";

        $r8 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3490);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        varReplacer3484 = "\n\n\n\n\n\n\n\n\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3484);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        varReplacer3492 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3492);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = null;

        $r14 = null;

     label01:
        $r12 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String createAuthorizationHeader(java.lang.String)>($r12);

     label02:
        $r11 = $r12;

        r24 = new java.net.URI;

        r22 = new java.lang.StringBuilder;

        $r8 = r22;

        $r12 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String Blob_Url>;

     label03:
        $r12 = virtualinvoke $r3.<com.applicate.essilormain.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r12);

        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12);

        specialinvoke r22.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r24.<java.net.URI: void <init>(java.lang.String)>($r1);

     label04:
        $r14 = r24;

     label05:
        r25 = new org.apache.http.impl.client.DefaultHttpClient;

        $r5 = r25;

        specialinvoke r25.<org.apache.http.impl.client.DefaultHttpClient: void <init>()>();

        r26 = new org.apache.http.client.methods.HttpPut;

        $r6 = r26;

        specialinvoke r26.<org.apache.http.client.methods.HttpPut: void <init>(java.net.URI)>($r14);

        varReplacer3475 = "x-ms-blob-type";

        varReplacer3476 = "BlockBlob";

        virtualinvoke $r6.<org.apache.http.client.methods.HttpPut: void setHeader(java.lang.String,java.lang.String)>(varReplacer3475, varReplacer3476);

        varReplacer3487 = "x-ms-date";

        virtualinvoke $r6.<org.apache.http.client.methods.HttpPut: void setHeader(java.lang.String,java.lang.String)>(varReplacer3487, $r0);

        varReplacer3481 = "x-ms-version";

        varReplacer3482 = "2009-09-19";

        virtualinvoke $r6.<org.apache.http.client.methods.HttpPut: void setHeader(java.lang.String,java.lang.String)>(varReplacer3481, varReplacer3482);

        varReplacer3489 = "Authorization";

        virtualinvoke $r6.<org.apache.http.client.methods.HttpPut: void setHeader(java.lang.String,java.lang.String)>(varReplacer3489, $r11);

        r27 = new org.apache.http.entity.FileEntity;

        varReplacer3497 = "";

        specialinvoke r27.<org.apache.http.entity.FileEntity: void <init>(java.io.File,java.lang.String)>($r2, varReplacer3497);

        virtualinvoke $r6.<org.apache.http.client.methods.HttpPut: void setEntity(org.apache.http.HttpEntity)>(r27);

     label06:
        $r15 = virtualinvoke $r5.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r6);

        $r16 = interfaceinvoke $r15.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r0 = interfaceinvoke $r16.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

     label07:
        $r17 = virtualinvoke $r5.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r17.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        return $r0;

     label08:
        $r18 := @caughtexception;

     label09:
        r28 = (java.lang.Exception) $r18;

        virtualinvoke r28.<java.lang.Exception: void printStackTrace()>();

        goto label05;

     label10:
        $r19 := @caughtexception;

     label11:
        r29 = (java.io.IOException) $r19;

        virtualinvoke r29.<java.io.IOException: void printStackTrace()>();

     label12:
        $r17 = virtualinvoke $r5.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r17.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        varReplacer3486 = null;

        return varReplacer3486;

     label13:
        $r20 := @caughtexception;

        $r17 = virtualinvoke $r5.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        interfaceinvoke $r17.<org.apache.http.conn.ClientConnectionManager: void shutdown()>();

        throw $r20;

     label14:
        $r18 := @caughtexception;

        goto label09;

     label15:
        $r18 := @caughtexception;

        goto label09;

     label16:
        $r18 := @caughtexception;

        goto label09;

     label17:
        $r18 := @caughtexception;

        goto label09;

        catch java.security.InvalidKeyException from label01 to label02 with label15;
        catch java.security.InvalidKeyException from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label08;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label08;
        catch java.lang.IllegalStateException from label01 to label02 with label14;
        catch java.lang.IllegalStateException from label03 to label04 with label14;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label16;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label16;
        catch java.net.URISyntaxException from label01 to label02 with label17;
        catch java.net.URISyntaxException from label03 to label04 with label17;
        catch java.io.IOException from label06 to label07 with label10;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public static void runAsync(com.applicate.essilormain.app.ExecuteWithAsync)
    {
        com.applicate.essilormain.app.ExecuteWithAsync $r0;
        com.applicate.essilormain.app.ServerUtilities$2 $r1;
        java.lang.Object[] $r2;

        nop;

        $r0 := @parameter0: com.applicate.essilormain.app.ExecuteWithAsync;

        $r1 = new com.applicate.essilormain.app.ServerUtilities$2;

        specialinvoke $r1.<com.applicate.essilormain.app.ServerUtilities$2: void <init>(com.applicate.essilormain.app.ExecuteWithAsync)>($r0);

        $r2 = newarray (java.lang.Object)[1];

        virtualinvoke $r1.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        return;
    }

    public static void runAsync(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        com.applicate.essilormain.app.ServerUtilities$4 $r1;
        java.lang.Object[] $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new com.applicate.essilormain.app.ServerUtilities$4;

        specialinvoke $r1.<com.applicate.essilormain.app.ServerUtilities$4: void <init>(java.lang.String)>($r0);

        $r2 = newarray (java.lang.Object)[3];

        $r2[0] = null;

        $r2[1] = null;

        $r2[2] = null;

        virtualinvoke $r1.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        return;
    }

    public static void runAsync(java.lang.String, java.util.Map) throws java.io.IOException
    {
        java.lang.String $r0;
        java.util.Map $r1;
        com.applicate.essilormain.app.ServerUtilities$3 $r2;
        java.lang.Object[] $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        $r2 = new com.applicate.essilormain.app.ServerUtilities$3;

        specialinvoke $r2.<com.applicate.essilormain.app.ServerUtilities$3: void <init>(java.lang.String,java.util.Map)>($r0, $r1);

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = null;

        $r3[1] = null;

        $r3[2] = null;

        virtualinvoke $r2.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r3);

        return;
    }

    static java.lang.String simplePost(java.lang.String, java.util.Map) throws java.io.IOException
    {
        java.lang.String $r0, $r7;
        java.util.Map $r1;
        java.lang.StringBuilder $r2, $r17;
        java.lang.Throwable $r3, $r15;
        java.net.URL $r4, r19;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        byte[] $r8;
        java.lang.Object $r9;
        java.net.URLConnection $r10;
        javax.net.ssl.HttpsURLConnection $r11;
        javax.net.ssl.HostnameVerifier $r12;
        int $i0;
        java.io.OutputStream $r13;
        java.io.IOException $r14, r20;
        java.util.Map$Entry $r16;
        java.net.HttpURLConnection $r18;
        java.lang.IllegalArgumentException r21;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        r19 = new java.net.URL;

        $r4 = r19;

     label01:
        specialinvoke r19.<java.net.URL: void <init>(java.lang.String)>($r0);

     label02:
        $r17 = new java.lang.StringBuilder;

        $r2 = $r17;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label18;

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Posting \'");

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' to ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("GCMDemo", $r7);

        $r8 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r9 = null;

     label04:
        $r0 = virtualinvoke $r4.<java.net.URL: java.lang.String getProtocol()>();

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("https");

     label05:
        if $z0 == 0 goto label19;

     label06:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void trustAllHosts()>();

        $r10 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r11 = (javax.net.ssl.HttpsURLConnection) $r10;

        $r12 = <com.applicate.essilormain.app.ServerUtilities: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY>;

        virtualinvoke $r11.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r12);

     label07:
        $r9 = $r11;

     label08:
        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        $i0 = lengthof $r8;

        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i0);

        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded;charset=UTF-8");

        $r18 = (java.net.HttpURLConnection) $r9;

        $r13 = virtualinvoke $r18.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r13.<java.io.OutputStream: void write(byte[])>($r8);

        virtualinvoke $r13.<java.io.OutputStream: void close()>();

        $r18 = (java.net.HttpURLConnection) $r9;

        $i0 = virtualinvoke $r18.<java.net.HttpURLConnection: int getResponseCode()>();

     label09:
        if $i0 == 200 goto label21;

     label10:
        r20 = new java.io.IOException;

     label11:
        $r14 = r20;

     label12:
        $r17 = new java.lang.StringBuilder;

     label13:
        $r2 = $r17;

     label14:
        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("Post failed with error code ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r20.<java.io.IOException: void <init>(java.lang.String)>($r0);

        throw $r14;

     label15:
        $r15 := @caughtexception;

        if $r9 == null goto label16;

        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void disconnect()>();

     label16:
        throw $r15;

     label17:
        $r3 := @caughtexception;

        r21 = new java.lang.IllegalArgumentException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid url: ");

        $r2 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r0);

        throw r21;

     label18:
        $r9 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r16 = (java.util.Map$Entry) $r9;

        $r9 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r0 = (java.lang.String) $r9;

        $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r17 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r9 = interfaceinvoke $r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r0 = (java.lang.String) $r9;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

        goto label03;

     label19:
        $r10 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r18 = (java.net.HttpURLConnection) $r10;

     label20:
        $r9 = $r18;

        goto label08;

     label21:
        $r18 = (java.net.HttpURLConnection) $r9;

        $r0 = virtualinvoke $r18.<java.net.HttpURLConnection: java.lang.String getContentType()>();

     label22:
        if $r9 == null goto label23;

        $r18 = (java.net.HttpURLConnection) $r9;

        virtualinvoke $r18.<java.net.HttpURLConnection: void disconnect()>();

     label23:
        return $r0;

        catch java.net.MalformedURLException from label01 to label02 with label17;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label19 to label20 with label15;
        catch java.lang.Throwable from label21 to label22 with label15;
    }

    private static void trustAllHosts()
    {
        java.lang.Exception $r0;
        java.lang.Object[] $r1;
        javax.net.ssl.SSLContext $r2;
        java.security.SecureRandom $r3, r6;
        javax.net.ssl.SSLSocketFactory $r4;
        com.applicate.essilormain.app.ServerUtilities$5 r5;
        javax.net.ssl.TrustManager[] r7;
        null_type varReplacer1969;
        java.lang.String varReplacer1970;

        nop;

        $r1 = newarray (javax.net.ssl.TrustManager)[1];

        r5 = new com.applicate.essilormain.app.ServerUtilities$5;

        specialinvoke r5.<com.applicate.essilormain.app.ServerUtilities$5: void <init>()>();

        $r1[0] = r5;

     label1:
        varReplacer1970 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1970);

     label2:
        r6 = new java.security.SecureRandom;

        $r3 = r6;

     label3:
        specialinvoke r6.<java.security.SecureRandom: void <init>()>();

        r7 = (javax.net.ssl.TrustManager[]) $r1;

        varReplacer1969 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1969, r7, $r3);

        $r4 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r4);

     label4:
        return;

     label5:
        $r0 := @caughtexception;

        virtualinvoke $r0.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    static boolean updateUserContext(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r4;
        java.lang.Exception $r2;
        java.util.HashMap $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        $r4 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String USER_ID>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("user", $r4);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("latitude", $r0);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("longitude", $r1);

     label1:
        staticinvoke <com.applicate.essilormain.app.ServerUtilities: void post(java.lang.String,java.util.Map)>("https://disha.teemapp.mobi/applicateserver/index?action=userLocationUpdate", $r3);

     label2:
        return 0;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void uploadBlobs(java.lang.String, org.json.JSONObject) throws java.lang.Exception
    {
        java.lang.String $r0, $r7, $r10, $r12;
        org.json.JSONObject $r1;
        java.io.File $r2, $r5;
        com.applicate.essilormain.app.CrenDentialEncryption $r3;
        java.lang.Exception $r4;
        java.util.ArrayList $r6;
        boolean $z0;
        org.json.JSONArray $r8;
        int $i0, $i1, $i3;
        java.lang.Object $r9;
        java.lang.StringBuilder $r11;
        long $l2;
        java.util.Iterator $r13;
        java.lang.String[] $r14;
        java.io.PrintStream $r15;
        org.slf4j.Logger $r16;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: org.json.JSONObject;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r3 = new com.applicate.essilormain.app.CrenDentialEncryption;

        specialinvoke $r3.<com.applicate.essilormain.app.CrenDentialEncryption: void <init>()>();

        $z0 = virtualinvoke $r1.<org.json.JSONObject: boolean has(java.lang.String)>("objects");

        if $z0 == 0 goto label55;

        $r8 = virtualinvoke $r1.<org.json.JSONObject: org.json.JSONArray getJSONArray(java.lang.String)>("objects");

        $i0 = 0;

     label01:
        $i1 = virtualinvoke $r8.<org.json.JSONArray: int length()>();

        if $i0 < $i1 goto label02;

        return;

     label02:
        $r1 = virtualinvoke $r8.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        $r9 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r0);

        $r7 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

     label03:
        if $r7 == null goto label17;

     label04:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

     label05:
        if $z0 != 0 goto label17;

        $r2 = new java.io.File;

     label06:
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r7);

     label07:
        $r10 = <com.applicate.essilormain.app.CommonUtilities: java.lang.String Container>;

     label08:
        $r10 = virtualinvoke $r3.<com.applicate.essilormain.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r10);

     label09:
        $r11 = new java.lang.StringBuilder;

        $r12 = <com.applicate.essilormain.app.DownloadService: java.lang.String USER_ID>;

     label10:
        $r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r12);

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>($r12);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r12 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $l2 = virtualinvoke $r2.<java.io.File: long length()>();

        $r10 = staticinvoke <com.applicate.essilormain.app.ServerUtilities: java.lang.String putBlob(java.lang.String,java.lang.String,java.io.File,long)>($r10, $r12, $r2, $l2);

     label11:
        $r12 = "";

     label12:
        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r10);

     label13:
        if $z0 != 0 goto label17;

        if $r10 == null goto label17;

     label14:
        $z0 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Created");

     label15:
        if $z0 == 0 goto label17;

     label16:
        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label17:
        $i1 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

     label18:
        if $i1 <= 0 goto label29;

     label19:
        $r13 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

     label21:
        if $z0 != 0 goto label30;

        $r2 = new java.io.File;

     label22:
        $r5 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r7, "Teem/Images");

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label23:
        if $z0 == 0 goto label29;

     label24:
        $r14 = virtualinvoke $r2.<java.io.File: java.lang.String[] list()>();

        $i1 = lengthof $r14;

     label25:
        if $i1 <= 0 goto label29;

     label26:
        $r14 = virtualinvoke $r2.<java.io.File: java.lang.String[] list()>();

        $i1 = lengthof $r14;

     label27:
        $i3 = 0;

     label28:
        if $i3 < $i1 goto label45;

     label29:
        $i0 = $i0 + 1;

        goto label01;

     label30:
        $r9 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r9;

     label31:
        $r15 = <java.lang.System: java.io.PrintStream out>;

     label32:
        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label33:
        $r2 = new java.io.File;

     label34:
        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r7);

        $r7 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(".jso");

     label35:
        if $z0 != 0 goto label20;

     label36:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(".xml");

     label37:
        if $z0 != 0 goto label20;

     label38:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(".txt");

     label39:
        if $z0 != 0 goto label20;

     label40:
        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

     label41:
        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

     label42:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>("Compressed delete Status ");

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r7);

     label43:
        goto label20;

     label44:
        $r4 := @caughtexception;

        $r16 = <com.applicate.essilormain.app.ServerUtilities: org.slf4j.Logger log>;

        interfaceinvoke $r16.<org.slf4j.Logger: void error(java.lang.String)>("Exception while deleting images in immPost");

        goto label29;

     label45:
        $r7 = $r14[$i3];

     label46:
        $r5 = new java.io.File;

     label47:
        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r7);

        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getName()>();

        $r7 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(".jso");

     label48:
        if $z0 != 0 goto label54;

     label49:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(".xml");

     label50:
        if $z0 != 0 goto label54;

     label51:
        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(".txt");

     label52:
        if $z0 != 0 goto label54;

     label53:
        virtualinvoke $r5.<java.io.File: boolean delete()>();

     label54:
        $i3 = $i3 + 1;

        goto label28;

     label55:
        return;

        catch java.lang.Exception from label02 to label03 with label44;
        catch java.lang.Exception from label04 to label05 with label44;
        catch java.lang.Exception from label06 to label07 with label44;
        catch java.lang.Exception from label08 to label09 with label44;
        catch java.lang.Exception from label10 to label11 with label44;
        catch java.lang.Exception from label12 to label13 with label44;
        catch java.lang.Exception from label14 to label15 with label44;
        catch java.lang.Exception from label16 to label18 with label44;
        catch java.lang.Exception from label19 to label21 with label44;
        catch java.lang.Exception from label22 to label23 with label44;
        catch java.lang.Exception from label24 to label25 with label44;
        catch java.lang.Exception from label26 to label27 with label44;
        catch java.lang.Exception from label30 to label31 with label44;
        catch java.lang.Exception from label32 to label33 with label44;
        catch java.lang.Exception from label34 to label35 with label44;
        catch java.lang.Exception from label36 to label37 with label44;
        catch java.lang.Exception from label38 to label39 with label44;
        catch java.lang.Exception from label40 to label41 with label44;
        catch java.lang.Exception from label42 to label43 with label44;
        catch java.lang.Exception from label45 to label46 with label44;
        catch java.lang.Exception from label47 to label48 with label44;
        catch java.lang.Exception from label49 to label50 with label44;
        catch java.lang.Exception from label51 to label52 with label44;
        catch java.lang.Exception from label53 to label54 with label44;
    }
}
