Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <com.applicate.jockey.app.CrenDentialEncryption: void <init>()>
		SHA-256: 4bd83c3a18180b663a7ff02a488a14d7b6176ac87d2c8be8e97f79603da5b360
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer641)
		Method: <com.applicate.jockey.app.ServerUtilities: void trustAllHosts()>
		SHA-256: a29e6f7589226ac336e1469b0fbb9b8eb6506be4576ad337f94e18fd23ad89c6
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdu(java.lang.String)>
		SHA-256: 91d6ae651ea468ee55b204b8531f2e40ebb8a460987b346249056da8de8b5b12
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3500)
		Method: <com.applicate.jockey.app.ServerUtilities: java.lang.String createAuthorizationHeader(java.lang.String)>
		SHA-256: f93455eb8a85d30006c2cacc0423c88e6e529fa6e30d77314fbfb2309aa32605
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: varReplacer3504
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3504)
		Method: <com.applicate.jockey.app.ServerUtilities: java.lang.String createAuthorizationHeader(java.lang.String)>
		SHA-256: 72abca40fb3bf5892709392d8aa1035dd95b36b5d2a4b617ce1eb23e7d19a085
		Secure: false
	Object:
		Variable: r6
		Type: java.security.SecureRandom
		Statement: specialinvoke r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.applicate.jockey.app.ServerUtilities: void trustAllHosts()>
		SHA-256: d8de471a9f65641a3207310fbce0b19d5ab072e7b0daf8cd2e5f152c420a98b2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: 824ba22683660c59575f402494a9b5aa5f91d72d9fe95dd6abdf94f6948ceab0
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <com.applicate.jockey.app.ServerUtilities: java.lang.String createAuthorizationHeader(java.lang.String)>
		SHA-256: 9c3d6e14df1648517790dbcce554d2ee78e04295d4ce01d4abda2cd09afe7198
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3504)
		Method: <com.applicate.jockey.app.ServerUtilities: java.lang.String createAuthorizationHeader(java.lang.String)>
		SHA-256: 145747782bc77daa6678a9c4b242837d4f4188414436acc73cda21b2ea2990f5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)
		Method: <com.applicate.jockey.app.CrenDentialEncryption: void <init>()>
		SHA-256: 99749c846234eec8d76900e4cfccde4554bf783c793cdfc7d7a1f5ff3769c799
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.applicate.jockey.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>
		SHA-256: f102accb7398e1603aa20766e3623f0a8cfa703bbca01d4bded2ee95a53d6b89
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2182)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: c1c673d145235a24c1e9cd6f03f57fb1ff4aeb8618a7c26541ef2ea6bab5c4c0
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <com.applicate.jockey.app.CrenDentialEncryption: void <init>()>
		SHA-256: 80bfca901c98d94a4f728bfbe6c06c7cc9f883e9672460584ace5ca57f2a78b9
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2237)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzvx()>
		SHA-256: 3827f768f25a9695d3613e548e5b773bc04bc56095df58f75b6ef26c3c139881
		Secure: true

Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c1c673d145235a24c1e9cd6f03f57fb1ff4aeb8618a7c26541ef2ea6bab5c4c0)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2182)


Findings in Java Class: com.applicate.jockey.app.CrenDentialEncryption

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #99749c846234eec8d76900e4cfccde4554bf783c793cdfc7d7a1f5ff3769c799)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #80bfca901c98d94a4f728bfbe6c06c7cc9f883e9672460584ace5ca57f2a78b9)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)


	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3510, $r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #80bfca901c98d94a4f728bfbe6c06c7cc9f883e9672460584ace5ca57f2a78b9)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3510, $r3)


Findings in Java Class: com.applicate.jockey.app.ServerUtilities

	 in Method: java.lang.String createAuthorizationHeader(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3504)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #80bfca901c98d94a4f728bfbe6c06c7cc9f883e9672460584ace5ca57f2a78b9)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r0 = virtualinvoke $r2.<com.applicate.jockey.app.CrenDentialEncryption: java.lang.String decrypt(java.lang.String)>($r0)


	 in Method: void processDataInventoryModel(com.applicate.jockey.app.DataInventoryXML$DataInventoryModel)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #80bfca901c98d94a4f728bfbe6c06c7cc9f883e9672460584ace5ca57f2a78b9)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r31.<com.applicate.jockey.app.CrenDentialEncryption: void <init>()>()


	 in Method: java.lang.String putBlob(java.lang.String,java.lang.String,java.io.File,long)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #80bfca901c98d94a4f728bfbe6c06c7cc9f883e9672460584ace5ca57f2a78b9)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r23.<com.applicate.jockey.app.CrenDentialEncryption: void <init>()>()


	 in Method: void trustAllHosts()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer642, r7, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer642, r7, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 3
	TypestateError: 1
	ConstraintError: 4
	RequiredPredicateError: 6
=====================================================================