class com.asustor.library.login.CgiCaller$SSLSocketFactoryEx extends org.apache.http.conn.ssl.SSLSocketFactory
{
    javax.net.ssl.SSLContext sslContext;
    final com.asustor.library.login.CgiCaller this$0;

    public void <init>(com.asustor.library.login.CgiCaller, java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException
    {
        com.asustor.library.login.CgiCaller$SSLSocketFactoryEx $r0;
        com.asustor.library.login.CgiCaller $r1;
        java.security.KeyStore $r2;
        javax.net.ssl.SSLContext $r3;
        java.lang.Object[] $r4;
        com.asustor.library.login.AsustorX509TrustManager r5;
        javax.net.ssl.TrustManager[] r6;
        null_type varReplacer3198, varReplacer3200, varReplacer3201;
        java.lang.String varReplacer3199;

        nop;

        $r0 := @this: com.asustor.library.login.CgiCaller$SSLSocketFactoryEx;

        $r1 := @parameter0: com.asustor.library.login.CgiCaller;

        $r2 := @parameter1: java.security.KeyStore;

        $r0.<com.asustor.library.login.CgiCaller$SSLSocketFactoryEx: com.asustor.library.login.CgiCaller this$0> = $r1;

        specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>($r2);

        varReplacer3199 = "TLS";

        $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3199);

        $r0.<com.asustor.library.login.CgiCaller$SSLSocketFactoryEx: javax.net.ssl.SSLContext sslContext> = $r3;

        r5 = new com.asustor.library.login.AsustorX509TrustManager;

        varReplacer3198 = null;

        specialinvoke r5.<com.asustor.library.login.AsustorX509TrustManager: void <init>(java.security.KeyStore)>(varReplacer3198);

        $r3 = $r0.<com.asustor.library.login.CgiCaller$SSLSocketFactoryEx: javax.net.ssl.SSLContext sslContext>;

        $r4 = newarray (javax.net.ssl.TrustManager)[1];

        $r4[0] = r5;

        r6 = (javax.net.ssl.TrustManager[]) $r4;

        varReplacer3200 = null;

        varReplacer3201 = null;

        virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3200, r6, varReplacer3200);

        return;
    }

    public java.net.Socket createSocket() throws java.io.IOException
    {
        com.asustor.library.login.CgiCaller$SSLSocketFactoryEx $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;

        $r0 := @this: com.asustor.library.login.CgiCaller$SSLSocketFactoryEx;

        $r1 = $r0.<com.asustor.library.login.CgiCaller$SSLSocketFactoryEx: javax.net.ssl.SSLContext sslContext>;

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r3;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException, java.net.UnknownHostException
    {
        com.asustor.library.login.CgiCaller$SSLSocketFactoryEx $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;

        $r0 := @this: com.asustor.library.login.CgiCaller$SSLSocketFactoryEx;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<com.asustor.library.login.CgiCaller$SSLSocketFactoryEx: javax.net.ssl.SSLContext sslContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        return $r1;
    }
}
