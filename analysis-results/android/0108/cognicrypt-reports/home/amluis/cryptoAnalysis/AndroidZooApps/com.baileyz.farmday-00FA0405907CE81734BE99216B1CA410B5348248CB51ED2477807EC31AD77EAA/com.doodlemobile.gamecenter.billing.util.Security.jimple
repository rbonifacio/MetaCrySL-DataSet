public class com.doodlemobile.gamecenter.billing.util.Security extends java.lang.Object
{
    private static final java.lang.String KEY_FACTORY_ALGORITHM;
    private static final java.lang.String SIGNATURE_ALGORITHM;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.doodlemobile.gamecenter.billing.util.Security $r0;

        $r0 := @this: com.doodlemobile.gamecenter.billing.util.Security;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.PublicKey generatePublicKey(java.lang.String)
    {
        java.lang.String $r0, varReplacer1847, varReplacer1848, varReplacer1849, varReplacer1850, varReplacer1851;
        byte[] $r1;
        java.security.KeyFactory $r2;
        java.security.spec.X509EncodedKeySpec $r3;
        java.security.PublicKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r8;
        com.doodlemobile.gamecenter.billing.util.Base64DecoderException $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.doodlemobile.gamecenter.billing.util.Base64: byte[] decode(java.lang.String)>($r0);

        varReplacer1849 = "RSA";

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1849);

     label2:
        $r3 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer1847 = "IABUtil/Security";

        varReplacer1848 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1847, varReplacer1848);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label7:
        $r9 := @caughtexception;

        varReplacer1850 = "IABUtil/Security";

        varReplacer1851 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1850, varReplacer1851);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
        catch com.doodlemobile.gamecenter.billing.util.Base64DecoderException from label1 to label2 with label7;
        catch com.doodlemobile.gamecenter.billing.util.Base64DecoderException from label3 to label4 with label7;
    }

    public static boolean verify(java.security.PublicKey, java.lang.String, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, $r2, varReplacer1826, varReplacer1827, varReplacer1829, varReplacer1830, varReplacer1831, varReplacer1834, varReplacer1835, varReplacer1837, varReplacer1838, varReplacer1839, varReplacer1842, varReplacer1843;
        java.security.Signature $r3;
        byte[] $r4;
        java.lang.Class $r5;
        java.lang.Class[] $r6;
        java.lang.reflect.Method $r7;
        java.lang.Object[] $r8;
        java.lang.Object $r9;
        java.lang.Boolean $r10;
        boolean $z0;
        java.lang.Throwable $r11, $r12, $r13, $r15, $r16, $r17, $r18;
        com.doodlemobile.gamecenter.billing.util.Base64DecoderException $r14;
        java.lang.NoSuchMethodException r19;
        java.lang.IllegalAccessException r20;
        java.lang.IllegalArgumentException r21;
        java.lang.reflect.InvocationTargetException r22;
        int varReplacer1824, varReplacer1825, varReplacer1828, varReplacer1832, varReplacer1833, varReplacer1836, varReplacer1840, varReplacer1841, varReplacer1844, varReplacer1845, varReplacer1846;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label01:
        varReplacer1831 = "SHA1withRSA";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1831);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r4);

     label02:
        $r5 = class "Ljava/security/SignatureSpi;";

        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "[B";

     label03:
        varReplacer1839 = "engineVerify";

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(varReplacer1839, $r6);

        varReplacer1825 = 1;

        virtualinvoke $r7.<java.lang.reflect.Method: void setAccessible(boolean)>(varReplacer1825);

     label04:
        $r8 = newarray (java.lang.Object)[1];

     label05:
        $r4 = staticinvoke <com.doodlemobile.gamecenter.billing.util.Base64: byte[] decode(java.lang.String)>($r2);

     label06:
        $r8[0] = $r4;

     label07:
        $r9 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r8);

     label08:
        $r10 = (java.lang.Boolean) $r9;

     label09:
        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label10:
        if $z0 != 0 goto label13;

     label11:
        varReplacer1826 = "IABUtil/Security";

        varReplacer1827 = "Signature verification failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1826, varReplacer1827);

     label12:
        varReplacer1832 = 0;

        return varReplacer1832;

     label13:
        varReplacer1836 = 1;

        return varReplacer1836;

     label14:
        $r11 := @caughtexception;

        varReplacer1837 = "IABUtil/Security";

        varReplacer1838 = "NoSuchAlgorithmException.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1837, varReplacer1838);

        varReplacer1828 = 0;

        return varReplacer1828;

     label15:
        $r12 := @caughtexception;

        varReplacer1834 = "IABUtil/Security";

        varReplacer1835 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1834, varReplacer1835);

        varReplacer1841 = 0;

        return varReplacer1841;

     label16:
        $r13 := @caughtexception;

        varReplacer1842 = "IABUtil/Security";

        varReplacer1843 = "Signature exception.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1842, varReplacer1843);

        varReplacer1840 = 0;

        return varReplacer1840;

     label17:
        $r14 := @caughtexception;

        varReplacer1829 = "IABUtil/Security";

        varReplacer1830 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1829, varReplacer1830);

        varReplacer1845 = 0;

        return varReplacer1845;

     label18:
        $r15 := @caughtexception;

        r19 = (java.lang.NoSuchMethodException) $r15;

        virtualinvoke r19.<java.lang.NoSuchMethodException: void printStackTrace()>();

        varReplacer1844 = 0;

        return varReplacer1844;

     label19:
        $r16 := @caughtexception;

        r20 = (java.lang.IllegalAccessException) $r16;

        virtualinvoke r20.<java.lang.IllegalAccessException: void printStackTrace()>();

        varReplacer1824 = 0;

        return varReplacer1824;

     label20:
        $r17 := @caughtexception;

        r21 = (java.lang.IllegalArgumentException) $r17;

        virtualinvoke r21.<java.lang.IllegalArgumentException: void printStackTrace()>();

        varReplacer1846 = 0;

        return varReplacer1846;

     label21:
        $r18 := @caughtexception;

        r22 = (java.lang.reflect.InvocationTargetException) $r18;

        virtualinvoke r22.<java.lang.reflect.InvocationTargetException: void printStackTrace()>();

        varReplacer1833 = 0;

        return varReplacer1833;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label14;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label14;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label14;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label14;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label14;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label14;
        catch java.security.InvalidKeyException from label01 to label02 with label15;
        catch java.security.InvalidKeyException from label03 to label04 with label15;
        catch java.security.InvalidKeyException from label05 to label06 with label15;
        catch java.security.InvalidKeyException from label07 to label08 with label15;
        catch java.security.InvalidKeyException from label09 to label10 with label15;
        catch java.security.InvalidKeyException from label11 to label12 with label15;
        catch java.security.SignatureException from label01 to label02 with label16;
        catch java.security.SignatureException from label03 to label04 with label16;
        catch java.security.SignatureException from label05 to label06 with label16;
        catch java.security.SignatureException from label07 to label08 with label16;
        catch java.security.SignatureException from label09 to label10 with label16;
        catch java.security.SignatureException from label11 to label12 with label16;
        catch com.doodlemobile.gamecenter.billing.util.Base64DecoderException from label01 to label02 with label17;
        catch com.doodlemobile.gamecenter.billing.util.Base64DecoderException from label03 to label04 with label17;
        catch com.doodlemobile.gamecenter.billing.util.Base64DecoderException from label05 to label06 with label17;
        catch com.doodlemobile.gamecenter.billing.util.Base64DecoderException from label07 to label08 with label17;
        catch com.doodlemobile.gamecenter.billing.util.Base64DecoderException from label09 to label10 with label17;
        catch com.doodlemobile.gamecenter.billing.util.Base64DecoderException from label11 to label12 with label17;
        catch java.lang.NoSuchMethodException from label01 to label02 with label18;
        catch java.lang.NoSuchMethodException from label03 to label04 with label18;
        catch java.lang.NoSuchMethodException from label05 to label06 with label18;
        catch java.lang.NoSuchMethodException from label07 to label08 with label18;
        catch java.lang.NoSuchMethodException from label09 to label10 with label18;
        catch java.lang.NoSuchMethodException from label11 to label12 with label18;
        catch java.lang.IllegalAccessException from label01 to label02 with label19;
        catch java.lang.IllegalAccessException from label03 to label04 with label19;
        catch java.lang.IllegalAccessException from label05 to label06 with label19;
        catch java.lang.IllegalAccessException from label07 to label08 with label19;
        catch java.lang.IllegalAccessException from label09 to label10 with label19;
        catch java.lang.IllegalAccessException from label11 to label12 with label19;
        catch java.lang.IllegalArgumentException from label01 to label02 with label20;
        catch java.lang.IllegalArgumentException from label03 to label04 with label20;
        catch java.lang.IllegalArgumentException from label05 to label06 with label20;
        catch java.lang.IllegalArgumentException from label07 to label08 with label20;
        catch java.lang.IllegalArgumentException from label09 to label10 with label20;
        catch java.lang.IllegalArgumentException from label11 to label12 with label20;
        catch java.lang.reflect.InvocationTargetException from label01 to label02 with label21;
        catch java.lang.reflect.InvocationTargetException from label03 to label04 with label21;
        catch java.lang.reflect.InvocationTargetException from label05 to label06 with label21;
        catch java.lang.reflect.InvocationTargetException from label07 to label08 with label21;
        catch java.lang.reflect.InvocationTargetException from label09 to label10 with label21;
        catch java.lang.reflect.InvocationTargetException from label11 to label12 with label21;
    }

    public static boolean verifyPurchase(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, varReplacer1821, varReplacer1822;
        boolean $z0;
        java.security.PublicKey $r3;
        int varReplacer1823;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

     label1:
        varReplacer1821 = "IABUtil/Security";

        varReplacer1822 = "Purchase verification failed: missing data.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1821, varReplacer1822);

        varReplacer1823 = 0;

        return varReplacer1823;

     label2:
        $r3 = staticinvoke <com.doodlemobile.gamecenter.billing.util.Security: java.security.PublicKey generatePublicKey(java.lang.String)>($r0);

        $z0 = staticinvoke <com.doodlemobile.gamecenter.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>($r3, $r1, $r2);

        return $z0;
    }
}
