public class com.baimobile.android.enterprise.credential.service.LicenseID extends java.lang.Object implements com.baimobile.android.credential.library.LogTag
{
    protected static final int LENGTH_LICENSE_ID;
    protected static final int LENGTH_LICENSE_KEY;
    protected static final int LENGTH_TRIAL_DESIGNATION;
    protected static final int LENGTH_TRIAL_EXPERATION_CODE;
    protected static final java.lang.String TRIAL_DESIGNATION;
    protected static final java.lang.String delimitor;
    private static final char[] hexArray;
    protected java.lang.String expCode;
    protected byte[] license;

    static void <clinit>()
    {
        java.lang.String $r0;
        int $i0;
        char[] $r1;

        nop;

        $r0 = "trial.";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        <com.baimobile.android.enterprise.credential.service.LicenseID: int LENGTH_TRIAL_DESIGNATION> = $i0;

        $r0 = "0123456789abcdef";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <com.baimobile.android.enterprise.credential.service.LicenseID: char[] hexArray> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        com.baimobile.android.enterprise.credential.service.LicenseID $r0;
        java.lang.String $r1, $r2, varReplacer359, varReplacer360, varReplacer361, varReplacer362, varReplacer363, varReplacer365;
        int $i0, $i1, $i2, varReplacer364;
        boolean $z0;
        java.security.MessageDigest $r3;
        byte[] $r4, $r5, $r6;
        java.lang.Throwable $r7, $r8;
        java.security.NoSuchAlgorithmException r9;
        java.io.UnsupportedEncodingException r10;

        nop;

        $r0 := @this: com.baimobile.android.enterprise.credential.service.LicenseID;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer359 = "";

        $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String expCode> = varReplacer359;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 18 goto label17;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        varReplacer361 = "SHA";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer361);

        varReplacer362 = "US-ASCII";

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer362);

     label02:
        $r2 = ".";

     label03:
        varReplacer363 = "US-ASCII";

        $r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer363);

     label04:
        $r2 = $r1;

     label05:
        varReplacer360 = "trial.";

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(varReplacer360);

     label06:
        if $i0 == -1 goto label13;

        $i1 = <com.baimobile.android.enterprise.credential.service.LicenseID: int LENGTH_TRIAL_DESIGNATION>;

        $i0 = $i0 + $i1;

        $i1 = $i0 + 8;

     label07:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label08:
        if $i1 != $i2 goto label17;

        $i1 = $i0 + 8;

     label09:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label10:
        $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String expCode> = $r2;

        $i0 = $i0 + -1;

     label11:
        varReplacer364 = 0;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(varReplacer364, $i0);

     label12:
        $r2 = $r1;

     label13:
        varReplacer365 = "US-ASCII";

        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer365);

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r5);

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r6);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label14:
        $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: byte[] license> = $r4;

        return;

     label15:
        $r7 := @caughtexception;

        r9 = (java.security.NoSuchAlgorithmException) $r7;

        virtualinvoke r9.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return;

     label16:
        $r8 := @caughtexception;

        r10 = (java.io.UnsupportedEncodingException) $r8;

        virtualinvoke r10.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label17:
        return;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label15;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label15;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label15;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label15;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label15;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label15;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label16;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label16;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label16;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label16;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label16;
        catch java.io.UnsupportedEncodingException from label11 to label12 with label16;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label16;
    }

    public void <init>(byte[], java.lang.String)
    {
        com.baimobile.android.enterprise.credential.service.LicenseID $r0;
        byte[] $r1;
        java.lang.String $r2;

        $r0 := @this: com.baimobile.android.enterprise.credential.service.LicenseID;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String expCode> = "";

        $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: byte[] license> = $r1;

        if $r2 == null goto label1;

        $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String expCode> = $r2;

     label1:
        return;
    }

    private static java.lang.String bytesToHex(byte[])
    {
        byte[] $r0;
        char[] $r1, $r3;
        short $s0, $s4;
        int $i1, $i2;
        java.lang.String $r2;
        byte $b3;
        char $c5;

        nop;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        $i1 = $i1 * 2;

        $r1 = newarray (char)[$i1];

        $i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i1 < $i2 goto label2;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

        return $r2;

     label2:
        $b3 = $r0[$i1];

        $s0 = $b3 & 255;

        $i2 = $i1 * 2;

        $r3 = <com.baimobile.android.enterprise.credential.service.LicenseID: char[] hexArray>;

        $s4 = $s0 >>> 4;

        $c5 = $r3[$s4];

        $r1[$i2] = $c5;

        $i2 = $i1 * 2;

        $i2 = $i2 + 1;

        $r3 = <com.baimobile.android.enterprise.credential.service.LicenseID: char[] hexArray>;

        $s0 = $s0 & 15;

        $c5 = $r3[$s0];

        $r1[$i2] = $c5;

        $i1 = $i1 + 1;

        goto label1;
    }

    private boolean expirationValid(java.lang.String)
    {
        com.baimobile.android.enterprise.credential.service.LicenseID $r0;
        java.lang.String $r1, varReplacer373;
        int $i0, $i1, $i2, $i4, varReplacer371, varReplacer372;
        byte[] $r2;
        boolean $z0;
        byte $b3;
        java.util.Calendar $r3, $r4;
        char $c5;

        nop;

        $r0 := @this: com.baimobile.android.enterprise.credential.service.LicenseID;

        $r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 == 8 goto label1;

        varReplacer371 = 0;

        return varReplacer371;

     label1:
        varReplacer373 = "[0-9]+";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean matches(java.lang.String)>(varReplacer373);

        if $z0 == 0 goto label7;

        $r2 = newarray (byte)[8];

        $i0 = 0;

     label2:
        $i1 = lengthof $r2;

        if $i0 < $i1 goto label4;

        $b3 = $r2[0];

        $i0 = $b3 * 10;

        $b3 = $r2[1];

        $i0 = $i0 + $b3;

        $i1 = 0;

        $i2 = 2;

     label3:
        $i4 = lengthof $r2;

        if $i2 < $i4 goto label6;

        if $i0 != $i1 goto label7;

        $b3 = $r2[2];

        $i0 = $b3 * 10;

        $b3 = $r2[5];

        $i0 = $i0 + $b3;

        $b3 = $r2[3];

        $i1 = $b3 * 10;

        $b3 = $r2[6];

        $i1 = $i1 + $b3;

        $b3 = $r2[4];

        $i2 = $b3 * 10;

        $b3 = $r2[7];

        $i2 = $i2 + $b3;

        $i2 = $i2 + 2000;

        if $i0 == 0 goto label7;

        if $i0 > 31 goto label7;

        if $i1 == 0 goto label7;

        if $i1 > 12 goto label7;

        if $i2 < 2017 goto label7;

        if $i2 > 2040 goto label7;

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i1 = $i1 + -1;

        virtualinvoke $r4.<java.util.Calendar: void set(int,int,int)>($i2, $i1, $i0);

        $z0 = virtualinvoke $r3.<java.util.Calendar: boolean before(java.lang.Object)>($r4);

        return $z0;

     label4:
        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $i1 = staticinvoke <java.lang.Character: int getNumericValue(char)>($c5);

        $i1 = $i1 + -1;

        $b3 = (byte) $i1;

        if $b3 >= 0 goto label5;

        $b3 = 9;

     label5:
        $r2[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label2;

     label6:
        $b3 = $r2[$i2];

        $i1 = $i1 + $b3;

        $i2 = $i2 + 1;

        goto label3;

     label7:
        varReplacer372 = 0;

        return varReplacer372;
    }

    public java.lang.String expirationCode()
    {
        com.baimobile.android.enterprise.credential.service.LicenseID $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.baimobile.android.enterprise.credential.service.LicenseID;

        r1 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String expCode>;

        return r1;
    }

    public boolean hasExpiredCode()
    {
        com.baimobile.android.enterprise.credential.service.LicenseID $r0;
        java.lang.String $r1;
        boolean $z0;
        int varReplacer367, varReplacer368, varReplacer369;

        nop;

        $r0 := @this: com.baimobile.android.enterprise.credential.service.LicenseID;

        $r1 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String expCode>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        varReplacer367 = 0;

        return varReplacer367;

     label1:
        $r1 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String expCode>;

        $z0 = specialinvoke $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: boolean expirationValid(java.lang.String)>($r1);

        if $z0 != 0 goto label2;

        varReplacer368 = 1;

        return varReplacer368;

     label2:
        varReplacer369 = 0;

        return varReplacer369;
    }

    public boolean hasValue()
    {
        com.baimobile.android.enterprise.credential.service.LicenseID $r0;
        byte[] $r1;
        int $i0;

        $r0 := @this: com.baimobile.android.enterprise.credential.service.LicenseID;

        $r1 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: byte[] license>;

        if $r1 == null goto label1;

        $r1 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: byte[] license>;

        $i0 = lengthof $r1;

        if $i0 != 20 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String toString()
    {
        com.baimobile.android.enterprise.credential.service.LicenseID $r0;
        byte[] $r1;
        java.lang.Object[] $r2;
        java.lang.String $r3, $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;

        $r0 := @this: com.baimobile.android.enterprise.credential.service.LicenseID;

        $r1 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: byte[] license>;

        if $r1 != null goto label1;

        return "License data had invalid format";

     label1:
        $r2 = newarray (java.lang.Object)[1];

        $r1 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: byte[] license>;

        $r3 = staticinvoke <com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String bytesToHex(byte[])>($r1);

        $r2[0] = $r3;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("ID: %s", $r2);

        $r4 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String expCode>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r5 = new java.lang.StringBuilder;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Expiration Code: ");

        $r3 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String expCode>;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r3;
    }

    public byte[] value()
    {
        com.baimobile.android.enterprise.credential.service.LicenseID $r0;
        byte[] r1;

        nop;

        $r0 := @this: com.baimobile.android.enterprise.credential.service.LicenseID;

        r1 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: byte[] license>;

        return r1;
    }

    public java.lang.String valueAsString()
    {
        com.baimobile.android.enterprise.credential.service.LicenseID $r0;
        java.lang.String $r1, varReplacer366;
        byte[] $r2;

        nop;

        $r0 := @this: com.baimobile.android.enterprise.credential.service.LicenseID;

        $r2 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: byte[] license>;

        if $r2 != null goto label1;

        varReplacer366 = "";

        return varReplacer366;

     label1:
        $r2 = $r0.<com.baimobile.android.enterprise.credential.service.LicenseID: byte[] license>;

        $r1 = staticinvoke <com.baimobile.android.enterprise.credential.service.LicenseID: java.lang.String bytesToHex(byte[])>($r2);

        return $r1;
    }
}
