public class com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign extends java.lang.Object
{

    public void <init>()
    {
        com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign $r0;

        $r0 := @this: com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.crmf.CertReqMessages $r2;
        com.initech.pkix.'cmp'.crmf.CertReqMsg $r3;
        int $i0, varReplacer28858, varReplacer28860, varReplacer28864, varReplacer28865, varReplacer28868, varReplacer28869, varReplacer28871, varReplacer28872, varReplacer28875, varReplacer28878, varReplacer28880, varReplacer28881, varReplacer28882, varReplacer28883, varReplacer28884, varReplacer28891, varReplacer28893;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, $r17, varReplacer28859, varReplacer28861, varReplacer28862, varReplacer28863, varReplacer28866, varReplacer28867, varReplacer28870, varReplacer28873, varReplacer28874, varReplacer28876, varReplacer28877, varReplacer28879, varReplacer28885, varReplacer28886, varReplacer28887, varReplacer28888, varReplacer28889, varReplacer28890, varReplacer28892, varReplacer28894, varReplacer28895, varReplacer28896, varReplacer28897, varReplacer28898, varReplacer28899, varReplacer28900, varReplacer28901, varReplacer28902, varReplacer28903, varReplacer28904;
        com.initech.pkix.'cmp'.PKIHeader $r6;
        com.initech.asn1.useful.GeneralName $r7;
        byte[] $r8;
        java.security.KeyPairGenerator $r9;
        com.initech.pkix.'cmp'.crmf.CertTemplate $r10;
        java.security.KeyPair $r11;
        java.security.PrivateKey $r12;
        java.security.interfaces.RSAPrivateKey $r13;
        java.security.PublicKey $r14;
        java.security.interfaces.RSAPublicKey $r15;
        com.initech.asn1.useful.HashContent $r16;
        java.security.cert.Certificate $r18;
        com.initech.x509.X509CertImpl $r19;
        com.initech.asn1.useful.IssuerAndSerialNumber $r20;
        com.initech.asn1.useful.EVID $r21;
        com.initech.asn1.useful.AlgorithmID $r22, $r23;
        com.initech.asn1.ASN1OID $r24;
        com.initech.pkcs.pkcs8.PrivateKeyInfo $r25;
        com.initech.asn1.useful.Attribute $r26;
        com.initech.asn1.DEREncoder $r27;
        com.initech.asn1.ASN1BitString $r28;
        com.initech.provider.crypto.rsa.RSAPrivateCrtKeyImpl $r29;
        com.initech.pkix.'cmp'.crmf.ProofOfPossession $r30;
        com.initech.pkix.'cmp'.crmf.PKMACValue $r31;
        boolean $z0;
        com.initech.pkix.'cmp'.PBMParameter $r32;
        java.util.Hashtable $r33;
        java.lang.Object $r34;
        java.lang.Exception $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r43;
        com.initech.pkix.'cmp'.client.CMPException $r36;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getKeysize()>();

        if $i0 == -1 goto label41;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r6 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r7 = new com.initech.asn1.useful.GeneralName;

        specialinvoke $r7.<com.initech.asn1.useful.GeneralName: void <init>()>();

        varReplacer28858 = 1;

        varReplacer28859 = " ";

        virtualinvoke $r7.<com.initech.asn1.useful.GeneralName: void set(int,java.lang.String)>(varReplacer28858, varReplacer28859);

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setRecipient(com.initech.asn1.useful.GeneralName)>($r7);

        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderKID()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setSenderKID(byte[])>($r8);

        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getRecipientKID()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setRecipKID(byte[])>($r8);

        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genTransactionID()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r8);

        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genSenderNonce()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r8);

        $r2 = new com.initech.pkix.'cmp'.crmf.CertReqMessages;

        specialinvoke $r2.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void <init>()>();

     label02:
        varReplacer28904 = "RSA";

        $r9 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer28904);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r9.<java.security.KeyPairGenerator: void initialize(int)>($i0);

     label03:
        $r3 = new com.initech.pkix.'cmp'.crmf.CertReqMsg;

        specialinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void <init>()>();

        varReplacer28881 = 0;

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertReqId(int)>(varReplacer28881);

        varReplacer28893 = 0;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignCertReqID(int)>(varReplacer28893);

        $r10 = new com.initech.pkix.'cmp'.crmf.CertTemplate;

        specialinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void <init>()>();

     label04:
        $r11 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r12 = virtualinvoke $r11.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r13 = (java.security.interfaces.RSAPrivateKey) $r12;

        $r14 = virtualinvoke $r11.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r15 = (java.security.interfaces.RSAPublicKey) $r14;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPubKey(java.security.PublicKey)>($r15);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPrivKey(java.security.PrivateKey)>($r13);

        virtualinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setPublicKey(java.security.PublicKey)>($r15);

     label05:
        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertTemplate(com.initech.pkix.'cmp'.crmf.CertTemplate)>($r10);

        $r16 = new com.initech.asn1.useful.HashContent;

     label06:
        $r17 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.lang.String getIdn()>();

        specialinvoke $r16.<com.initech.asn1.useful.HashContent: void <init>(java.lang.String)>($r17);

        $r18 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getIssuerEncCert()>();

        $r19 = (com.initech.x509.X509CertImpl) $r18;

     label07:
        $r20 = new com.initech.asn1.useful.IssuerAndSerialNumber;

     label08:
        specialinvoke $r20.<com.initech.asn1.useful.IssuerAndSerialNumber: void <init>()>();

        virtualinvoke $r20.<com.initech.asn1.useful.IssuerAndSerialNumber: void set(java.security.cert.X509Certificate)>($r19);

     label09:
        $r21 = new com.initech.asn1.useful.EVID;

     label10:
        specialinvoke $r21.<com.initech.asn1.useful.EVID: void <init>()>();

     label11:
        $r22 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA256>;

        $r23 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID rsaEncryption>;

     label12:
        $r14 = virtualinvoke $r19.<com.initech.x509.X509CertImpl: java.security.PublicKey getPublicKey()>();

        varReplacer28875 = 0;

        virtualinvoke $r21.<com.initech.asn1.useful.EVID: void set(int,com.initech.asn1.useful.AlgorithmID,com.initech.asn1.useful.AlgorithmID,com.initech.asn1.useful.IssuerAndSerialNumber,com.initech.asn1.useful.HashContent,java.security.PublicKey)>(varReplacer28875, $r22, $r23, $r20, $r16, $r14);

     label13:
        $r24 = <com.initech.asn1.useful.EVID: com.initech.asn1.ASN1OID OID>;

     label14:
        $r8 = virtualinvoke $r21.<com.initech.asn1.useful.EVID: byte[] getEncoded()>();

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void addRegInfo(com.initech.asn1.ASN1OID,byte[])>($r24, $r8);

        $r12 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

        $r8 = interfaceinvoke $r12.<java.security.PrivateKey: byte[] getEncoded()>();

     label15:
        $r25 = new com.initech.pkcs.pkcs8.PrivateKeyInfo;

     label16:
        specialinvoke $r25.<com.initech.pkcs.pkcs8.PrivateKeyInfo: void <init>(byte[])>($r8);

     label17:
        $r26 = new com.initech.asn1.useful.Attribute;

     label18:
        varReplacer28894 = "1.2.410.200004.10.1.1.3";

        specialinvoke $r26.<com.initech.asn1.useful.Attribute: void <init>(java.lang.String)>(varReplacer28894);

     label19:
        $r27 = new com.initech.asn1.DEREncoder;

     label20:
        specialinvoke $r27.<com.initech.asn1.DEREncoder: void <init>()>();

     label21:
        $r28 = new com.initech.asn1.ASN1BitString;

     label22:
        $r8 = virtualinvoke $r16.<com.initech.asn1.useful.HashContent: byte[] getRandom()>();

        varReplacer28860 = 0;

        specialinvoke $r28.<com.initech.asn1.ASN1BitString: void <init>(int,byte[])>(varReplacer28860, $r8);

        virtualinvoke $r27.<com.initech.asn1.DEREncoder: void encodeBitString(com.initech.asn1.ASN1BitString)>($r28);

        $r8 = virtualinvoke $r27.<com.initech.asn1.DEREncoder: byte[] toByteArray()>();

        virtualinvoke $r26.<com.initech.asn1.useful.Attribute: void add(byte[])>($r8);

        virtualinvoke $r25.<com.initech.pkcs.pkcs8.PrivateKeyInfo: void addAttribute(com.initech.asn1.useful.Attribute)>($r26);

     label23:
        $r29 = new com.initech.provider.crypto.rsa.RSAPrivateCrtKeyImpl;

     label24:
        $r8 = virtualinvoke $r25.<com.initech.pkcs.pkcs8.PrivateKeyInfo: byte[] getEncoded()>();

        specialinvoke $r29.<com.initech.provider.crypto.rsa.RSAPrivateCrtKeyImpl: void <init>(byte[])>($r8);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPrivKey(java.security.PrivateKey)>($r29);

     label25:
        $r30 = virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: com.initech.pkix.'cmp'.crmf.ProofOfPossession getProofOfPossession()>();

     label26:
        $r31 = new com.initech.pkix.'cmp'.crmf.PKMACValue;

     label27:
        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getAuthCode()>();

        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        specialinvoke $r31.<com.initech.pkix.'cmp'.crmf.PKMACValue: void <init>(byte[],java.security.PublicKey)>($r8, $r14);

        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        virtualinvoke $r30.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void setSignature(com.initech.pkix.'cmp'.crmf.PKMACValue,java.security.PublicKey)>($r31, $r14);

        $r17 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.lang.String getSignAlgorithm()>();

        varReplacer28877 = "";

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28877);

     label28:
        if $z0 != 0 goto label54;

     label29:
        varReplacer28903 = "SHA1withRSA";

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28903);

     label30:
        if $z0 == 0 goto label45;

        $r22 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

     label31:
        $r12 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

        varReplacer28873 = "Initech";

        virtualinvoke $r30.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r12, $r22, varReplacer28873);

     label32:
        virtualinvoke $r2.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void add(com.initech.pkix.'cmp'.crmf.CertReqMsg)>($r3);

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getRequestCertNum()>();

        if $i0 != 2 goto label37;

        $r3 = new com.initech.pkix.'cmp'.crmf.CertReqMsg;

        specialinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void <init>()>();

        varReplacer28878 = 1;

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertReqId(int)>(varReplacer28878);

        varReplacer28880 = 1;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setEncCertReqID(int)>(varReplacer28880);

        $r10 = new com.initech.pkix.'cmp'.crmf.CertTemplate;

        specialinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void <init>()>();

     label33:
        $r11 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r12 = virtualinvoke $r11.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r13 = (java.security.interfaces.RSAPrivateKey) $r12;

        $r14 = virtualinvoke $r11.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r15 = (java.security.interfaces.RSAPublicKey) $r14;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setEncPubKey(java.security.PublicKey)>($r15);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setEncPrivKey(java.security.PrivateKey)>($r13);

        virtualinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setPublicKey(java.security.PublicKey)>($r15);

     label34:
        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertTemplate(com.initech.pkix.'cmp'.crmf.CertTemplate)>($r10);

     label35:
        $r30 = virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: com.initech.pkix.'cmp'.crmf.ProofOfPossession getProofOfPossession()>();

        varReplacer28882 = 2;

        varReplacer28883 = 0;

        virtualinvoke $r30.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void setPOPSubSeqMsg(int,int)>(varReplacer28882, varReplacer28883);

     label36:
        virtualinvoke $r2.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void add(com.initech.pkix.'cmp'.crmf.CertReqMsg)>($r3);

     label37:
        varReplacer28864 = 0;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer28864, $r2);

     label38:
        $r32 = new com.initech.pkix.'cmp'.PBMParameter;

        specialinvoke $r32.<com.initech.pkix.'cmp'.PBMParameter: void <init>()>();

        virtualinvoke $r32.<com.initech.pkix.'cmp'.PBMParameter: void setETRIParam()>();

        $r22 = new com.initech.asn1.useful.AlgorithmID;

     label39:
        $r8 = virtualinvoke $r32.<com.initech.pkix.'cmp'.PBMParameter: byte[] getEncoded()>();

        varReplacer28879 = "1.2.840.113533.7.66.13";

        specialinvoke $r22.<com.initech.asn1.useful.AlgorithmID: void <init>(java.lang.String,byte[])>(varReplacer28879, $r8);

     label40:
        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setProtectionAlgID(com.initech.asn1.useful.AlgorithmID)>($r22);

        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label41:
        $r33 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.util.Hashtable getFreeText()>();

        varReplacer28900 = "key_size";

        $r34 = virtualinvoke $r33.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(varReplacer28900);

        $r5 = (java.lang.String) $r34;

        goto label01;

     label42:
        $r35 := @caughtexception;

        $r36 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28896 = "fail to initialize keypair generator[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28896);

        $r5 = virtualinvoke $r35.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28901 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28901);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28868 = 1;

        specialinvoke $r36.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28868, $r5);

        throw $r36;

     label43:
        $r37 := @caughtexception;

        $r36 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28867 = "keypair generate failed[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28867);

        $r5 = virtualinvoke $r37.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28892 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28892);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28884 = 1;

        specialinvoke $r36.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28884, $r5);

        throw $r36;

     label44:
        $r38 := @caughtexception;

        virtualinvoke $r38.<java.lang.Exception: void printStackTrace()>();

        $r36 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28886 = "fail to generate EVID[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28886);

        $r5 = virtualinvoke $r38.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28890 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28890);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28891 = 1;

        specialinvoke $r36.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28891, $r5);

        throw $r36;

     label45:
        varReplacer28861 = "SHA256withRSA";

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28861);

     label46:
        if $z0 == 0 goto label47;

        $r22 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA256WithRSA>;

        goto label31;

     label47:
        varReplacer28862 = "SHA384withRSA";

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28862);

     label48:
        if $z0 == 0 goto label49;

        $r22 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA384WithRSA>;

        goto label31;

     label49:
        varReplacer28897 = "SHA512withRSA";

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28897);

     label50:
        if $z0 == 0 goto label51;

        $r22 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA512WithRSA>;

        goto label31;

     label51:
        $r35 = new java.lang.Exception;

        $r4 = new java.lang.StringBuilder;

     label52:
        varReplacer28899 = "Invalid algorithm: ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28899);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw $r35;

     label53:
        $r39 := @caughtexception;

        virtualinvoke $r39.<java.lang.Exception: void printStackTrace()>();

        $r36 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28887 = "fail to generate POP[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28887);

        $r5 = virtualinvoke $r39.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28876 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28876);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28865 = 1;

        specialinvoke $r36.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28865, $r5);

        throw $r36;

     label54:
        varReplacer28866 = "1024";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28866);

     label55:
        if $z0 == 0 goto label58;

        $r22 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

     label56:
        $r12 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

        varReplacer28870 = "Initech";

        virtualinvoke $r30.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r12, $r22, varReplacer28870);

     label57:
        goto label32;

     label58:
        varReplacer28888 = "2048";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28888);

     label59:
        if $z0 == 0 goto label60;

        $r22 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA256WithRSA>;

        goto label56;

     label60:
        $r35 = new java.lang.Exception;

        $r4 = new java.lang.StringBuilder;

     label61:
        varReplacer28889 = "Invalid key_size: ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28889);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw $r35;

     label62:
        $r40 := @caughtexception;

        $r36 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28874 = "keypair generate failed[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28874);

        $r5 = virtualinvoke $r40.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28902 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28902);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28871 = 1;

        specialinvoke $r36.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28871, $r5);

        throw $r36;

     label63:
        $r41 := @caughtexception;

        virtualinvoke $r41.<java.lang.Exception: void printStackTrace()>();

        $r36 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28895 = "fail to generate POP[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28895);

        $r5 = virtualinvoke $r41.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28863 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28863);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28872 = 1;

        specialinvoke $r36.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28872, $r5);

        throw $r36;

     label64:
        $r42 := @caughtexception;

        $r36 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28885 = "fail to generate PKIMessage[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28885);

        $r5 = virtualinvoke $r42.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28898 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28898);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28869 = 1;

        specialinvoke $r36.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28869, $r5);

        throw $r36;

     label65:
        $r43 := @caughtexception;

        $r22 = null;

        goto label40;

        catch java.lang.Exception from label02 to label03 with label42;
        catch java.lang.Exception from label04 to label05 with label43;
        catch java.lang.Exception from label06 to label07 with label44;
        catch java.lang.Exception from label08 to label09 with label44;
        catch java.lang.Exception from label10 to label11 with label44;
        catch java.lang.Exception from label12 to label13 with label44;
        catch java.lang.Exception from label14 to label15 with label44;
        catch java.lang.Exception from label16 to label17 with label44;
        catch java.lang.Exception from label18 to label19 with label44;
        catch java.lang.Exception from label20 to label21 with label44;
        catch java.lang.Exception from label22 to label23 with label44;
        catch java.lang.Exception from label24 to label25 with label44;
        catch java.lang.Exception from label25 to label26 with label53;
        catch java.lang.Exception from label27 to label28 with label53;
        catch java.lang.Exception from label29 to label30 with label53;
        catch java.lang.Exception from label31 to label32 with label53;
        catch java.lang.Exception from label33 to label34 with label62;
        catch java.lang.Exception from label35 to label36 with label63;
        catch java.lang.Exception from label37 to label38 with label64;
        catch java.lang.Exception from label39 to label40 with label65;
        catch java.lang.Exception from label45 to label46 with label53;
        catch java.lang.Exception from label47 to label48 with label53;
        catch java.lang.Exception from label49 to label50 with label53;
        catch java.lang.Exception from label52 to label53 with label53;
        catch java.lang.Exception from label54 to label55 with label53;
        catch java.lang.Exception from label56 to label57 with label53;
        catch java.lang.Exception from label58 to label59 with label53;
        catch java.lang.Exception from label61 to label62 with label53;
    }

    private static void a(com.initech.pkix.'cmp'.client.CMPContext, com.initech.pkix.'cmp'.PKIMessage)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.asn1.useful.AlgorithmID $r2;
        java.lang.String $r3, varReplacer28973, varReplacer28974, varReplacer28975;
        boolean $z0;
        byte[] $r4;
        java.security.PrivateKey $r5;
        java.lang.Exception $r6;
        com.initech.pkix.'cmp'.client.CMPException $r7;
        java.lang.StringBuilder $r8;
        int varReplacer28976;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 := @parameter1: com.initech.pkix.'cmp'.PKIMessage;

     label1:
        $r2 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.AlgorithmID getProtectionAlgID()>();

        $r3 = virtualinvoke $r2.<com.initech.asn1.useful.AlgorithmID: java.lang.String getAlg()>();

        varReplacer28974 = "1.2.840.113533.7.66.13";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28974);

     label2:
        if $z0 == 0 goto label5;

     label3:
        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getAuthCode()>();

        $r2 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.AlgorithmID getProtectionAlgID()>();

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void mac(byte[],com.initech.asn1.useful.AlgorithmID)>($r4, $r2);

     label4:
        return;

     label5:
        $r5 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getOldSignPrivKey()>();

        $r2 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.AlgorithmID getProtectionAlgID()>();

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void sign(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID)>($r5, $r2);

     label6:
        return;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        $r7 = new com.initech.pkix.'cmp'.client.CMPException;

        $r8 = new java.lang.StringBuilder;

        varReplacer28973 = "fail to generate PKIProtection[";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28973);

        $r3 = virtualinvoke $r6.<java.lang.Exception: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer28975 = "]";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28975);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28976 = 1;

        specialinvoke $r7.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28976, $r3);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    private static com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.crmf.CertReqMessages $r2;
        com.initech.pkix.'cmp'.crmf.CertReqMsg $r3;
        int $i0, varReplacer28929, varReplacer28931, varReplacer28934, varReplacer28937, varReplacer28940, varReplacer28941, varReplacer28942, varReplacer28943, varReplacer28946, varReplacer28948, varReplacer28951, varReplacer28954, varReplacer28955, varReplacer28956, varReplacer28960, varReplacer28963, varReplacer28967, varReplacer28969, varReplacer28971;
        java.lang.StringBuilder $r4;
        java.lang.String $r5, varReplacer28920, varReplacer28921, varReplacer28922, varReplacer28923, varReplacer28924, varReplacer28925, varReplacer28926, varReplacer28927, varReplacer28928, varReplacer28930, varReplacer28932, varReplacer28933, varReplacer28935, varReplacer28936, varReplacer28938, varReplacer28939, varReplacer28944, varReplacer28945, varReplacer28947, varReplacer28949, varReplacer28950, varReplacer28952, varReplacer28953, varReplacer28957, varReplacer28958, varReplacer28959, varReplacer28961, varReplacer28962, varReplacer28964, varReplacer28965, varReplacer28966, varReplacer28968, varReplacer28970, varReplacer28972;
        com.initech.pkix.'cmp'.PKIHeader $r6;
        com.initech.asn1.useful.GeneralName $r7;
        byte[] $r8;
        java.security.KeyPairGenerator $r9;
        com.initech.pkix.'cmp'.crmf.CertTemplate $r10;
        java.security.KeyPair $r11;
        java.security.PrivateKey $r12;
        java.security.PublicKey $r13;
        java.security.cert.Certificate $r14;
        java.security.cert.X509Certificate $r15;
        java.security.Principal $r16;
        com.initech.asn1.useful.HashContent $r17;
        com.initech.x509.X509CertImpl $r18;
        com.initech.asn1.useful.IssuerAndSerialNumber $r19;
        com.initech.asn1.useful.EVID $r20;
        com.initech.asn1.useful.AlgorithmID $r21, $r22;
        com.initech.asn1.ASN1OID $r23;
        com.initech.pkcs.pkcs8.PrivateKeyInfo $r24;
        com.initech.asn1.useful.Attribute $r25;
        com.initech.asn1.DEREncoder $r26;
        com.initech.asn1.ASN1BitString $r27;
        com.initech.provider.crypto.rsa.RSAPrivateCrtKeyImpl $r28;
        com.initech.asn1.useful.Name $r29;
        com.initech.pkix.'cmp'.crmf.control.CertId $r30;
        java.math.BigInteger $r31;
        com.initech.pkix.'cmp'.crmf.ProofOfPossession $r32;
        com.initech.pkix.'cmp'.crmf.PKMACValue $r33;
        boolean $z0;
        java.security.interfaces.RSAPrivateKey $r34;
        java.security.interfaces.RSAPublicKey $r35;
        java.lang.Exception $r36, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        com.initech.pkix.'cmp'.client.CMPException $r37;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getKeysize()>();

        if $i0 == -1 goto label49;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r6 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r7 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getSender()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setSender(com.initech.asn1.useful.GeneralName)>($r7);

        $r7 = new com.initech.asn1.useful.GeneralName;

        specialinvoke $r7.<com.initech.asn1.useful.GeneralName: void <init>()>();

        varReplacer28960 = 1;

        varReplacer28961 = " ";

        virtualinvoke $r7.<com.initech.asn1.useful.GeneralName: void set(int,java.lang.String)>(varReplacer28960, varReplacer28961);

        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderKID()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setSenderKID(byte[])>($r8);

        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getRecipientKID()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setRecipKID(byte[])>($r8);

        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genTransactionID()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r8);

        $r8 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genSenderNonce()>();

        virtualinvoke $r6.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r8);

        $r2 = new com.initech.pkix.'cmp'.crmf.CertReqMessages;

        specialinvoke $r2.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void <init>()>();

     label02:
        varReplacer28933 = "RSA";

        $r9 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer28933);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r9.<java.security.KeyPairGenerator: void initialize(int)>($i0);

     label03:
        $r3 = new com.initech.pkix.'cmp'.crmf.CertReqMsg;

        specialinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void <init>()>();

        varReplacer28967 = 0;

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertReqId(int)>(varReplacer28967);

        varReplacer28969 = 0;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignCertReqID(int)>(varReplacer28969);

        $r10 = new com.initech.pkix.'cmp'.crmf.CertTemplate;

        specialinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void <init>()>();

     label04:
        $r11 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r12 = virtualinvoke $r11.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r13 = virtualinvoke $r11.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPubKey(java.security.PublicKey)>($r13);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPrivKey(java.security.PrivateKey)>($r12);

        virtualinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setPublicKey(java.security.PublicKey)>($r13);

     label05:
        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r15 = (java.security.cert.X509Certificate) $r14;

        $r16 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r5 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setSubjectDN(java.lang.String)>($r5);

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertTemplate(com.initech.pkix.'cmp'.crmf.CertTemplate)>($r10);

        $r17 = new com.initech.asn1.useful.HashContent;

     label06:
        $r5 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.lang.String getIdn()>();

        specialinvoke $r17.<com.initech.asn1.useful.HashContent: void <init>(java.lang.String)>($r5);

        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getIssuerEncCert()>();

        $r18 = (com.initech.x509.X509CertImpl) $r14;

     label07:
        $r19 = new com.initech.asn1.useful.IssuerAndSerialNumber;

     label08:
        specialinvoke $r19.<com.initech.asn1.useful.IssuerAndSerialNumber: void <init>()>();

        virtualinvoke $r19.<com.initech.asn1.useful.IssuerAndSerialNumber: void set(java.security.cert.X509Certificate)>($r18);

     label09:
        $r20 = new com.initech.asn1.useful.EVID;

     label10:
        specialinvoke $r20.<com.initech.asn1.useful.EVID: void <init>()>();

     label11:
        $r21 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA256>;

        $r22 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID rsaEncryption>;

     label12:
        $r13 = virtualinvoke $r18.<com.initech.x509.X509CertImpl: java.security.PublicKey getPublicKey()>();

        varReplacer28940 = 0;

        virtualinvoke $r20.<com.initech.asn1.useful.EVID: void set(int,com.initech.asn1.useful.AlgorithmID,com.initech.asn1.useful.AlgorithmID,com.initech.asn1.useful.IssuerAndSerialNumber,com.initech.asn1.useful.HashContent,java.security.PublicKey)>(varReplacer28940, $r21, $r22, $r19, $r17, $r13);

     label13:
        $r23 = <com.initech.asn1.useful.EVID: com.initech.asn1.ASN1OID OID>;

     label14:
        $r8 = virtualinvoke $r20.<com.initech.asn1.useful.EVID: byte[] getEncoded()>();

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void addRegInfo(com.initech.asn1.ASN1OID,byte[])>($r23, $r8);

        $r12 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

        $r8 = interfaceinvoke $r12.<java.security.PrivateKey: byte[] getEncoded()>();

     label15:
        $r24 = new com.initech.pkcs.pkcs8.PrivateKeyInfo;

     label16:
        specialinvoke $r24.<com.initech.pkcs.pkcs8.PrivateKeyInfo: void <init>(byte[])>($r8);

     label17:
        $r25 = new com.initech.asn1.useful.Attribute;

     label18:
        varReplacer28962 = "1.2.410.200004.10.1.1.3";

        specialinvoke $r25.<com.initech.asn1.useful.Attribute: void <init>(java.lang.String)>(varReplacer28962);

     label19:
        $r26 = new com.initech.asn1.DEREncoder;

     label20:
        specialinvoke $r26.<com.initech.asn1.DEREncoder: void <init>()>();

     label21:
        $r27 = new com.initech.asn1.ASN1BitString;

     label22:
        $r8 = virtualinvoke $r17.<com.initech.asn1.useful.HashContent: byte[] getRandom()>();

        varReplacer28955 = 0;

        specialinvoke $r27.<com.initech.asn1.ASN1BitString: void <init>(int,byte[])>(varReplacer28955, $r8);

        virtualinvoke $r26.<com.initech.asn1.DEREncoder: void encodeBitString(com.initech.asn1.ASN1BitString)>($r27);

        $r8 = virtualinvoke $r26.<com.initech.asn1.DEREncoder: byte[] toByteArray()>();

        virtualinvoke $r25.<com.initech.asn1.useful.Attribute: void add(byte[])>($r8);

        virtualinvoke $r24.<com.initech.pkcs.pkcs8.PrivateKeyInfo: void addAttribute(com.initech.asn1.useful.Attribute)>($r25);

     label23:
        $r28 = new com.initech.provider.crypto.rsa.RSAPrivateCrtKeyImpl;

     label24:
        $r8 = virtualinvoke $r24.<com.initech.pkcs.pkcs8.PrivateKeyInfo: byte[] getEncoded()>();

        specialinvoke $r28.<com.initech.provider.crypto.rsa.RSAPrivateCrtKeyImpl: void <init>(byte[])>($r8);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setSignPrivKey(java.security.PrivateKey)>($r28);

     label25:
        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r15 = (java.security.cert.X509Certificate) $r14;

     label26:
        $r29 = new com.initech.asn1.useful.Name;

     label27:
        $r16 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $r5 = interfaceinvoke $r16.<java.security.Principal: java.lang.String getName()>();

        specialinvoke $r29.<com.initech.asn1.useful.Name: void <init>(java.lang.String)>($r5);

     label28:
        $r30 = new com.initech.pkix.'cmp'.crmf.control.CertId;

     label29:
        specialinvoke $r30.<com.initech.pkix.'cmp'.crmf.control.CertId: void <init>()>();

        $r31 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        virtualinvoke $r30.<com.initech.pkix.'cmp'.crmf.control.CertId: void setSerialNumber(java.math.BigInteger)>($r31);

        virtualinvoke $r30.<com.initech.pkix.'cmp'.crmf.control.CertId: void setIssuer(com.initech.asn1.useful.Name)>($r29);

     label30:
        $r23 = new com.initech.asn1.ASN1OID;

     label31:
        varReplacer28952 = "1.3.6.1.5.5.7.5.1.5";

        specialinvoke $r23.<com.initech.asn1.ASN1OID: void <init>(java.lang.String)>(varReplacer28952);

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void addControl(com.initech.asn1.ASN1OID,com.initech.pkix.'cmp'.crmf.control.PKIXControl)>($r23, $r30);

     label32:
        $r32 = virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: com.initech.pkix.'cmp'.crmf.ProofOfPossession getProofOfPossession()>();

     label33:
        $r33 = new com.initech.pkix.'cmp'.crmf.PKMACValue;

        $r5 = "dummy";

     label34:
        $r8 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        $r13 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        specialinvoke $r33.<com.initech.pkix.'cmp'.crmf.PKMACValue: void <init>(byte[],java.security.PublicKey)>($r8, $r13);

        $r13 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PublicKey getSignPubKey()>();

        virtualinvoke $r32.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void setSignature(com.initech.pkix.'cmp'.crmf.PKMACValue,java.security.PublicKey)>($r33, $r13);

        $r5 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.lang.String getSignAlgorithm()>();

        varReplacer28972 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28972);

     label35:
        if $z0 != 0 goto label63;

     label36:
        varReplacer28966 = "SHA1withRSA";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28966);

     label37:
        if $z0 == 0 goto label54;

        $r21 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

     label38:
        $r12 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

        varReplacer28925 = "Initech";

        virtualinvoke $r32.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r12, $r21, varReplacer28925);

     label39:
        virtualinvoke $r2.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void add(com.initech.pkix.'cmp'.crmf.CertReqMsg)>($r3);

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getRequestCertNum()>();

        if $i0 != 2 goto label47;

        $r3 = new com.initech.pkix.'cmp'.crmf.CertReqMsg;

        specialinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void <init>()>();

        varReplacer28931 = 1;

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertReqId(int)>(varReplacer28931);

        varReplacer28954 = 1;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setEncCertReqID(int)>(varReplacer28954);

        $r10 = new com.initech.pkix.'cmp'.crmf.CertTemplate;

        specialinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void <init>()>();

     label40:
        $r11 = virtualinvoke $r9.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

        $r12 = virtualinvoke $r11.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r34 = (java.security.interfaces.RSAPrivateKey) $r12;

        $r13 = virtualinvoke $r11.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r35 = (java.security.interfaces.RSAPublicKey) $r13;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setEncPubKey(java.security.PublicKey)>($r35);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setEncPrivKey(java.security.PrivateKey)>($r34);

        virtualinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setPublicKey(java.security.PublicKey)>($r35);

     label41:
        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldEncCertificate()>();

        $r15 = (java.security.cert.X509Certificate) $r14;

        $r16 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $r5 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r10.<com.initech.pkix.'cmp'.crmf.CertTemplate: void setSubjectDN(java.lang.String)>($r5);

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void setCertTemplate(com.initech.pkix.'cmp'.crmf.CertTemplate)>($r10);

        $r30 = new com.initech.pkix.'cmp'.crmf.control.CertId;

     label42:
        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldEncCertificate()>();

        $r15 = (java.security.cert.X509Certificate) $r14;

        $r31 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.math.BigInteger getSerialNumber()>();

        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldEncCertificate()>();

        $r15 = (java.security.cert.X509Certificate) $r14;

        $r16 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $r29 = (com.initech.asn1.useful.Name) $r16;

        specialinvoke $r30.<com.initech.pkix.'cmp'.crmf.control.CertId: void <init>(java.math.BigInteger,com.initech.asn1.useful.Name)>($r31, $r29);

     label43:
        $r23 = new com.initech.asn1.ASN1OID;

     label44:
        varReplacer28926 = "1.3.6.1.5.5.7.5.1.5";

        specialinvoke $r23.<com.initech.asn1.ASN1OID: void <init>(java.lang.String)>(varReplacer28926);

        virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: void addControl(com.initech.asn1.ASN1OID,com.initech.pkix.'cmp'.crmf.control.PKIXControl)>($r23, $r30);

     label45:
        $r32 = virtualinvoke $r3.<com.initech.pkix.'cmp'.crmf.CertReqMsg: com.initech.pkix.'cmp'.crmf.ProofOfPossession getProofOfPossession()>();

        varReplacer28941 = 2;

        varReplacer28942 = 0;

        virtualinvoke $r32.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void setPOPSubSeqMsg(int,int)>(varReplacer28941, varReplacer28942);

     label46:
        virtualinvoke $r2.<com.initech.pkix.'cmp'.crmf.CertReqMessages: void add(com.initech.pkix.'cmp'.crmf.CertReqMsg)>($r3);

     label47:
        varReplacer28963 = 7;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer28963, $r2);

     label48:
        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r15 = (java.security.cert.X509Certificate) $r14;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void addExtraCertificate(java.security.cert.X509Certificate)>($r15);

        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r15 = (java.security.cert.X509Certificate) $r14;

        $r5 = virtualinvoke $r15.<java.security.cert.X509Certificate: java.lang.String getSigAlgName()>();

        $r21 = new com.initech.asn1.useful.AlgorithmID;

        specialinvoke $r21.<com.initech.asn1.useful.AlgorithmID: void <init>(java.lang.String)>($r5);

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setProtectionAlgID(com.initech.asn1.useful.AlgorithmID)>($r21);

        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label49:
        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r18 = (com.initech.x509.X509CertImpl) $r14;

        $r13 = virtualinvoke $r18.<com.initech.x509.X509CertImpl: java.security.PublicKey getPublicKey()>();

        $r35 = (java.security.interfaces.RSAPublicKey) $r13;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r31 = interfaceinvoke $r35.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getModulus()>();

        $i0 = virtualinvoke $r31.<java.math.BigInteger: int bitLength()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label01;

     label50:
        $r36 := @caughtexception;

        $r37 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28927 = "fail to initialize keypair generator[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28927);

        $r5 = virtualinvoke $r36.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28932 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28932);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28956 = 1;

        specialinvoke $r37.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28956, $r5);

        throw $r37;

     label51:
        $r38 := @caughtexception;

        $r37 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28949 = "keypair generate failed[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28949);

        $r5 = virtualinvoke $r38.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28945 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28945);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28943 = 1;

        specialinvoke $r37.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28943, $r5);

        throw $r37;

     label52:
        $r39 := @caughtexception;

        virtualinvoke $r39.<java.lang.Exception: void printStackTrace()>();

        $r37 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28938 = "fail to generate EVID[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28938);

        $r5 = virtualinvoke $r39.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28970 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28970);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28934 = 1;

        specialinvoke $r37.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28934, $r5);

        throw $r37;

     label53:
        $r40 := @caughtexception;

        virtualinvoke $r40.<java.lang.Exception: void printStackTrace()>();

        $r37 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28947 = "fail to add oldCertID control[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28947);

        $r5 = virtualinvoke $r40.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28957 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28957);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28971 = 1;

        specialinvoke $r37.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28971, $r5);

        throw $r37;

     label54:
        varReplacer28953 = "SHA256withRSA";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28953);

     label55:
        if $z0 == 0 goto label56;

        $r21 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA256WithRSA>;

        goto label38;

     label56:
        varReplacer28930 = "SHA384withRSA";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28930);

     label57:
        if $z0 == 0 goto label58;

        $r21 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA384WithRSA>;

        goto label38;

     label58:
        varReplacer28944 = "SHA512withRSA";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28944);

     label59:
        if $z0 == 0 goto label60;

        $r21 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA512WithRSA>;

        goto label38;

     label60:
        $r36 = new java.lang.Exception;

        $r4 = new java.lang.StringBuilder;

     label61:
        varReplacer28950 = "Invalid algorithm: ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28950);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw $r36;

     label62:
        $r41 := @caughtexception;

        virtualinvoke $r41.<java.lang.Exception: void printStackTrace()>();

        $r37 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28964 = "fail to generate POP[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28964);

        $r5 = virtualinvoke $r41.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28922 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28922);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28951 = 1;

        specialinvoke $r37.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28951, $r5);

        throw $r37;

     label63:
        $r14 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r18 = (com.initech.x509.X509CertImpl) $r14;

        $r5 = virtualinvoke $r18.<com.initech.x509.X509CertImpl: java.lang.String getSigAlgName()>();

        varReplacer28939 = "SHA1withRSA";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28939);

     label64:
        if $z0 == 0 goto label67;

        $r21 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

     label65:
        $r12 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.PrivateKey getSignPrivKey()>();

        varReplacer28968 = "Initech";

        virtualinvoke $r32.<com.initech.pkix.'cmp'.crmf.ProofOfPossession: void signSignature(java.security.PrivateKey,com.initech.asn1.useful.AlgorithmID,java.lang.String)>($r12, $r21, varReplacer28968);

     label66:
        goto label39;

     label67:
        varReplacer28958 = "SHA256withRSA";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer28958);

     label68:
        if $z0 == 0 goto label69;

        $r21 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA256WithRSA>;

        goto label65;

     label69:
        $r36 = new java.lang.Exception;

        $r4 = new java.lang.StringBuilder;

     label70:
        varReplacer28936 = "Invalid signAlgorithm: ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28936);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw $r36;

     label71:
        $r42 := @caughtexception;

        $r37 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28924 = "keypair generate failed[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28924);

        $r5 = virtualinvoke $r42.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28923 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28923);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28929 = 1;

        specialinvoke $r37.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28929, $r5);

        throw $r37;

     label72:
        $r43 := @caughtexception;

        virtualinvoke $r43.<java.lang.Exception: void printStackTrace()>();

        $r37 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28921 = "failt to add old certid[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28921);

        $r5 = virtualinvoke $r43.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28928 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28928);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28948 = 1;

        specialinvoke $r37.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28948, $r5);

        throw $r37;

     label73:
        $r44 := @caughtexception;

        virtualinvoke $r44.<java.lang.Exception: void printStackTrace()>();

        $r37 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28935 = "failt to generate POP[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28935);

        $r5 = virtualinvoke $r44.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28965 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28965);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28937 = 1;

        specialinvoke $r37.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28937, $r5);

        throw $r37;

     label74:
        $r45 := @caughtexception;

        $r37 = new com.initech.pkix.'cmp'.client.CMPException;

        $r4 = new java.lang.StringBuilder;

        varReplacer28959 = "fail to generate PKIMessage[";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28959);

        $r5 = virtualinvoke $r45.<java.lang.Exception: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer28920 = "]";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28920);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28946 = 1;

        specialinvoke $r37.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28946, $r5);

        throw $r37;

        catch java.lang.Exception from label02 to label03 with label50;
        catch java.lang.Exception from label04 to label05 with label51;
        catch java.lang.Exception from label06 to label07 with label52;
        catch java.lang.Exception from label08 to label09 with label52;
        catch java.lang.Exception from label10 to label11 with label52;
        catch java.lang.Exception from label12 to label13 with label52;
        catch java.lang.Exception from label14 to label15 with label52;
        catch java.lang.Exception from label16 to label17 with label52;
        catch java.lang.Exception from label18 to label19 with label52;
        catch java.lang.Exception from label20 to label21 with label52;
        catch java.lang.Exception from label22 to label23 with label52;
        catch java.lang.Exception from label24 to label25 with label52;
        catch java.lang.Exception from label25 to label26 with label53;
        catch java.lang.Exception from label27 to label28 with label53;
        catch java.lang.Exception from label29 to label30 with label53;
        catch java.lang.Exception from label31 to label32 with label53;
        catch java.lang.Exception from label32 to label33 with label62;
        catch java.lang.Exception from label34 to label35 with label62;
        catch java.lang.Exception from label36 to label37 with label62;
        catch java.lang.Exception from label38 to label39 with label62;
        catch java.lang.Exception from label40 to label41 with label71;
        catch java.lang.Exception from label42 to label43 with label72;
        catch java.lang.Exception from label44 to label45 with label72;
        catch java.lang.Exception from label45 to label46 with label73;
        catch java.lang.Exception from label47 to label48 with label74;
        catch java.lang.Exception from label54 to label55 with label62;
        catch java.lang.Exception from label56 to label57 with label62;
        catch java.lang.Exception from label58 to label59 with label62;
        catch java.lang.Exception from label61 to label62 with label62;
        catch java.lang.Exception from label63 to label64 with label62;
        catch java.lang.Exception from label65 to label66 with label62;
        catch java.lang.Exception from label67 to label68 with label62;
        catch java.lang.Exception from label70 to label71 with label62;
    }

    private static com.initech.pkix.'cmp'.PKIMessage c(com.initech.pkix.'cmp'.client.CMPContext)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        int $i0, varReplacer28906, varReplacer28908, varReplacer28910, varReplacer28912;
        com.initech.asn1.useful.GeneralName $r3;
        byte[] $r4;
        com.initech.pkix.'cmp'.GeneralMessage $r5;
        com.initech.pkix.'cmp'.client.CMPException $r6;
        java.security.cert.Certificate $r7;
        java.security.cert.X509Certificate $r8;
        com.initech.pkix.'cmp'.PBMParameter $r9;
        com.initech.asn1.useful.AlgorithmID $r10;
        java.lang.Exception $r11, $r14;
        java.lang.StringBuilder $r12;
        java.lang.String $r13, varReplacer28905, varReplacer28907, varReplacer28909, varReplacer28911, varReplacer28913;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $r2 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getSender()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSender(com.initech.asn1.useful.GeneralName)>($r3);

        $r3 = new com.initech.asn1.useful.GeneralName;

        specialinvoke $r3.<com.initech.asn1.useful.GeneralName: void <init>()>();

        varReplacer28912 = 1;

        varReplacer28913 = " ";

        virtualinvoke $r3.<com.initech.asn1.useful.GeneralName: void set(int,java.lang.String)>(varReplacer28912, varReplacer28913);

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setRecipient(com.initech.asn1.useful.GeneralName)>($r3);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderKID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderKID(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genTransactionID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] genSenderNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r4);

        $r5 = new com.initech.pkix.'cmp'.GeneralMessage;

        specialinvoke $r5.<com.initech.pkix.'cmp'.GeneralMessage: void <init>()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getGENMType()>();

        lookupswitch($i0)
        {
            case 1: goto label03;
            case 2: goto label02;
            default: goto label01;
        };

     label01:
        $r6 = new com.initech.pkix.'cmp'.client.CMPException;

        varReplacer28908 = 1;

        varReplacer28909 = "not supported info type";

        specialinvoke $r6.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28908, varReplacer28909);

        throw $r6;

     label02:
        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getRecipientKID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setRecipKID(byte[])>($r4);

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setMessageTime()>();

        $r7 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: java.security.cert.Certificate getOldSignCertificate()>();

        $r8 = (java.security.cert.X509Certificate) $r7;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void addExtraCertificate(java.security.cert.X509Certificate)>($r8);

     label03:
        varReplacer28910 = 21;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer28910, $r5);

     label04:
        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getAuthCode()>();

        if $r4 == null goto label10;

        $r9 = new com.initech.pkix.'cmp'.PBMParameter;

        specialinvoke $r9.<com.initech.pkix.'cmp'.PBMParameter: void <init>()>();

        virtualinvoke $r9.<com.initech.pkix.'cmp'.PBMParameter: void setETRIParam()>();

        $r10 = new com.initech.asn1.useful.AlgorithmID;

     label05:
        $r4 = virtualinvoke $r9.<com.initech.pkix.'cmp'.PBMParameter: byte[] getEncoded()>();

        varReplacer28911 = "1.2.840.113533.7.66.13";

        specialinvoke $r10.<com.initech.asn1.useful.AlgorithmID: void <init>(java.lang.String,byte[])>(varReplacer28911, $r4);

     label06:
        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setProtectionAlgID(com.initech.asn1.useful.AlgorithmID)>($r10);

     label07:
        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label08:
        $r11 := @caughtexception;

        $r6 = new com.initech.pkix.'cmp'.client.CMPException;

        $r12 = new java.lang.StringBuilder;

        varReplacer28905 = "fail to generate PKIMessage[";

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28905);

        $r13 = virtualinvoke $r11.<java.lang.Exception: java.lang.String toString()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        varReplacer28907 = "]";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28907);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28906 = 1;

        specialinvoke $r6.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28906, $r13);

        throw $r6;

     label09:
        $r14 := @caughtexception;

        $r10 = null;

        goto label06;

     label10:
        $r10 = <com.initech.asn1.useful.AlgorithmID: com.initech.asn1.useful.AlgorithmID SHA1WithRSA>;

        virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: void setProtectionAlgID(com.initech.asn1.useful.AlgorithmID)>($r10);

        goto label07;

        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label05 to label06 with label09;
    }

    private static com.initech.pkix.'cmp'.PKIMessage d(com.initech.pkix.'cmp'.client.CMPContext)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        com.initech.pkix.'cmp'.PKIMessage $r1;
        com.initech.pkix.'cmp'.PKIHeader $r2;
        int $i0, varReplacer28914, varReplacer28915;
        com.initech.asn1.useful.GeneralName $r3;
        byte[] $r4;
        java.lang.Exception $r5;
        java.io.PrintStream $r6;
        com.initech.pkix.'cmp'.client.CMPException $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r9, varReplacer28917, varReplacer28918, varReplacer28919;
        null_type varReplacer28916;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $r1 = new com.initech.pkix.'cmp'.PKIMessage;

        specialinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void <init>()>();

        $r2 = virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: com.initech.pkix.'cmp'.PKIHeader getHeader()>();

        $i0 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: int getVersion()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setVersion(int)>($i0);

        $r3 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: com.initech.asn1.useful.GeneralName getRecipient()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setRecipient(com.initech.asn1.useful.GeneralName)>($r3);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderNonce(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getRecipientNonce()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setRecipNonce(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getTransactionID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setTransacID(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getSenderKID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setSenderKID(byte[])>($r4);

        $r4 = virtualinvoke $r0.<com.initech.pkix.'cmp'.client.CMPContext: byte[] getRecipientKID()>();

        virtualinvoke $r2.<com.initech.pkix.'cmp'.PKIHeader: void setRecipKID(byte[])>($r4);

     label1:
        varReplacer28915 = 19;

        varReplacer28916 = null;

        virtualinvoke $r1.<com.initech.pkix.'cmp'.PKIMessage: void setContent(int,java.lang.Object)>(varReplacer28915, varReplacer28916);

     label2:
        staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: void a(com.initech.pkix.'cmp'.client.CMPContext,com.initech.pkix.'cmp'.PKIMessage)>($r0, $r1);

        return $r1;

     label3:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        varReplacer28919 = "this can\'t emerge!";

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(varReplacer28919);

        $r7 = new com.initech.pkix.'cmp'.client.CMPException;

        $r8 = new java.lang.StringBuilder;

        varReplacer28917 = "fail to generate PKIMessage[";

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer28917);

        $r9 = virtualinvoke $r5.<java.lang.Exception: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        varReplacer28918 = "]";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer28918);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer28914 = 1;

        specialinvoke $r7.<com.initech.pkix.'cmp'.client.CMPException: void <init>(int,java.lang.String)>(varReplacer28914, $r9);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static com.initech.pkix.'cmp'.PKIMessage format(com.initech.pkix.'cmp'.client.CMPContext, int)
    {
        com.initech.pkix.'cmp'.client.CMPContext $r0;
        int $i0;
        java.lang.Exception $r1;
        com.initech.pkix.'cmp'.PKIMessage $r2;
        java.lang.String $r3, varReplacer28853;

        nop;

        $r0 := @parameter0: com.initech.pkix.'cmp'.client.CMPContext;

        $i0 := @parameter1: int;

        lookupswitch($i0)
        {
            case 0: goto label2;
            case 7: goto label5;
            case 19: goto label6;
            case 21: goto label7;
            default: goto label1;
        };

     label1:
        $r1 = new java.lang.Exception;

        varReplacer28853 = "Not Yet Implemented";

        specialinvoke $r1.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer28853);

        throw $r1;

     label2:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage a(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        $r3 = "ir_yessign.dump";

     label3:
        staticinvoke <com.initech.pkix.'cmp'.client.util.PKIMessageDump: void dumpFile(com.initech.pkix.'cmp'.PKIMessage,java.lang.String)>($r2, $r3);

     label4:
        return $r2;

     label5:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage b(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        $r3 = "kur_yessign.dump";

        goto label3;

     label6:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage d(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        $r3 = "conf_yessign.dump";

        goto label3;

     label7:
        $r2 = staticinvoke <com.initech.pkix.'cmp'.client.PKIMessageFormatter_YesSign: com.initech.pkix.'cmp'.PKIMessage c(com.initech.pkix.'cmp'.client.CMPContext)>($r0);

        $r3 = "genm_yessign.dump";

        goto label3;

     label8:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return $r2;

        catch java.lang.Exception from label3 to label4 with label8;
    }
}
