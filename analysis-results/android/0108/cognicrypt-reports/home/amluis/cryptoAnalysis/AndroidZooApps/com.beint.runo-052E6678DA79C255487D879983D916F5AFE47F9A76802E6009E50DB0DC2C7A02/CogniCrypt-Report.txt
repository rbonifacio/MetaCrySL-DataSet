Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer8061
		Type: java.lang.String
		Statement: specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8061)
		Method: <com.beint.runo.f.a: void a(java.lang.String)>
		SHA-256: 5034d1b3a2c22e42bf0e17f668a07065b068874dae64f46d6f646eb9d7abdee6
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.beint.runo.f.a: java.lang.String c(java.lang.String)>
		SHA-256: c5e33bcc26a7fbffc0c63305538b6bf0fe7a196574fad4e9907d9d47de57b9bf
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 9d5e522b3f5f1b99d3101a97677bfe6e2f742689f66c9f1624c6b3179b3e8045
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8061)
		Method: <com.beint.runo.f.a: void a(java.lang.String)>
		SHA-256: baec1586bbb2bc7eaba8026d2af4ed26f97b58abda5cbbef6c7c459d5ddae36d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.beint.zangi.core.d.i: java.lang.String e(java.lang.String)>
		SHA-256: 707143128131d92926091038f49b44a1cc99525fe06ebbae298d36dce70baa88
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8057)
		Method: <com.beint.runo.f.a: java.lang.String c(java.lang.String)>
		SHA-256: a0ddd7f356b99045f52d320e9754c993f609ce377a2b0ffd49cc38942b9ded05
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11301)
		Method: <com.c.a.ah: java.lang.String a()>
		SHA-256: f605519149e8e698540e1da16f82f54b723bf4589cee2c6e3bbbe199a1ba49e6
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.beint.zangi.core.d.p: void <clinit>()>
		SHA-256: 4cf148cb65111acde4c7eaa545ebcca2c88ef9a8c3096b69e50263c9f0946e6a
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8769)
		Method: <com.beint.zangi.core.d.i: java.lang.String e(java.lang.String)>
		SHA-256: 1f0031acbcd619579786f2107ab1c86126ee9757da80daa0fefb403bcccf8f87
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.c.a.ah: java.lang.String a()>
		SHA-256: 74537f987b548cc757a9e58e4a92ba61c04b331df4e3a4860b0325ebadef0393
		Secure: true

Findings in Java Class: com.beint.runo.f.a

	 in Method: void a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer8061)


	 in Method: java.lang.String c(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8058, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
=====================================================================