public class com.beint.runo.f.a extends java.lang.Object
{
    private static javax.crypto.spec.SecretKeySpec a;
    private static byte[] b;
    private static java.lang.String c;

    public static java.lang.String a()
    {
        java.lang.String r0;

        nop;

        r0 = <com.beint.runo.f.a: java.lang.String c>;

        return r0;
    }

    public static void a(java.lang.String)
    {
        java.lang.String $r0, varReplacer4170, varReplacer4171;
        byte[] $r1;
        java.lang.Throwable $r2;
        javax.crypto.spec.SecretKeySpec r3;
        java.io.UnsupportedEncodingException r4;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer4171 = "UTF-8";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4171);

     label2:
        <com.beint.runo.f.a: byte[] b> = $r1;

        r3 = new javax.crypto.spec.SecretKeySpec;

        $r1 = <com.beint.runo.f.a: byte[] b>;

     label3:
        varReplacer4170 = "AES";

        specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4170);

     label4:
        <com.beint.runo.f.a: javax.crypto.spec.SecretKeySpec a> = r3;

        return;

     label5:
        $r2 := @caughtexception;

        r4 = (java.io.UnsupportedEncodingException) $r2;

        virtualinvoke r4.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    public static void b(java.lang.String)
    {
        java.lang.String $r0;

        nop;

        $r0 := @parameter0: java.lang.String;

        <com.beint.runo.f.a: java.lang.String c> = $r0;

        return;
    }

    public static java.lang.String c(java.lang.String)
    {
        java.lang.String $r0, $r3, varReplacer4163, varReplacer4164, varReplacer4165, varReplacer4169;
        javax.crypto.Cipher $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        byte[] $r4;
        java.lang.Exception $r5;
        java.io.PrintStream $r6;
        java.lang.StringBuilder $r7;
        null_type varReplacer4166;
        int varReplacer4167, varReplacer4168;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer4164 = "AES/ECB/PKCS5Padding";

        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4164);

     label2:
        $r2 = <com.beint.runo.f.a: javax.crypto.spec.SecretKeySpec a>;

     label3:
        varReplacer4167 = 1;

        virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4167, $r2);

     label4:
        $r3 = new java.lang.String;

     label5:
        varReplacer4165 = "UTF-8";

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4165);

        $r4 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        varReplacer4168 = 0;

        $r4 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r4, varReplacer4168);

        varReplacer4169 = "UTF-8";

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, varReplacer4169);

        staticinvoke <com.beint.runo.f.a: void b(java.lang.String)>($r3);

     label6:
        varReplacer4166 = null;

        return varReplacer4166;

     label7:
        $r5 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer4163 = "Error while encrypting: ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4163);

        $r0 = virtualinvoke $r5.<java.lang.Exception: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r0);

        goto label6;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }
}
