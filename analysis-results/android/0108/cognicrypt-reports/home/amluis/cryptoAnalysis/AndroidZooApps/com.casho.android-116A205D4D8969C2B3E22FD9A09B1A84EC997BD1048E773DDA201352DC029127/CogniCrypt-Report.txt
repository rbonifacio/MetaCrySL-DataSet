Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22253)
		Method: <com.paypal.android.sdk.bi: void <init>(javax.net.ssl.TrustManager)>
		SHA-256: e8980e02ed2be02f713793da95e096546a7d02527966a144ff902b88365d3454
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.f: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 3a1e80698e549c91437350956eb5865d687d056e7348af703228dcb9347cf8b8
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25582)
		Method: <com.woobi.r: java.lang.String a(java.lang.String)>
		SHA-256: b40d19a9accbf53ef709b9a51f7f67e2f59752d73021929f2766be857df6b14a
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2614)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: dbe66c6771b2299ecd808bbb3e3ad8d2c237a7d6670dee433705a9367c7f40e0
		Secure: false
	Object:
		Variable: varReplacer732
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer732)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: b9250fa4110d1284f25b9fb261b7ab9b3590c9ad69b3c6daad3dbd81bfee9b0b
		Secure: false
	Object:
		Variable: $r21
		Type: byte[]
		Statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)
		Method: <com.google.android.gms.measurement.internal.z: void e()>
		SHA-256: 2acc783ae146fb83530e758b60624c8af39c1e50c62d500f73395ef622d7f02d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 6eb9c4882a2bc73af9a673aebf6f5afae49ea2ada522213b217877fced577ed9
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.e: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 11f1bcb7ae07944efc67e46877e2d7ceddc5e8edcbf8a0082e0feef337558e47
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer937)
		Method: <com.c.a.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 1087de4e19baae448c070d603be522cecc1e55336872e919084e479ab54702b8
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.f: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 7352392ac1a61e12c3ab32898ca689dddd258b6f1239ef778511babba2d4e7d
		Secure: true
	Object:
		Variable: varReplacer736
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer736)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 438b7b734d268a46a68d90abd75a4ea015cca24bde40dab220d6b27492665fd3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.e: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 23eb3e252b70966d3d0966a2feb58e39bc842849d9905948935e8605dfbd44e2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer733)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 677280973f9dced9103ecdf4384433e462d8935e260686a2fb4aab051a077812
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: varReplacer2622
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2622)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: ab460bca6bab7116de3439dd4b79428de8d04399e85351e380a9a75c931d952c
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a.a.a$b: void d()>
		SHA-256: 2c4df0dfdedbc6ba6aa64eb861bcc76e945ee8fee08de7105c50d6a8805bf65c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.b.a: java.lang.String a(java.lang.String)>
		SHA-256: dc882d1e80d0c4879b4465be6f5455c2ca87100b2286e4177ce35aff39053ee6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: deaa291ca3d0ffc59d7ad7c1373c0bb84caba0350d0558fb8d4c3e426704100e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.woobi.r: java.lang.String a(java.lang.String)>
		SHA-256: ecac30db3a8dad252fba96484f645a6e999af697f2196475ca7a153464ab981d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.paypal.android.sdk.be: void a(okhttp3.OkHttpClient$Builder)>
		SHA-256: f621924fe2e56784575cef4de2c81bd7158a3f476cfcf76844c43012d0db3e60
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer4842)
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: e0ea14bcfd206f34d73e79d94d47efb81c18147f6b28c1fdaf94e7e6e281cc8b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.paypal.android.sdk.ap: java.lang.String a(java.lang.String)>
		SHA-256: 4d6e504ac71b2bfa8922545fc87c3c6bff7d76288427fdd13d0af0fb386a7eae
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: $r6 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer891)
		Method: <com.c.a.a.a$b: void d()>
		SHA-256: fc7c24347d4cfe2f019a7e4c8d7436b3b608b97ef25d2e36aeaada7302c60519
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: 93956974d148af49c7bedf886430bab7e5a8bdbb54e9810aa547f86e20abd43c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2626)
		Method: <com.c.a.a.a: byte[] a(int)>
		SHA-256: e857dba51b8f7c1d435b7b7dd2167c3d8697edbfd6d00c8de32ed0f5cb4f21d4
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer915)
		Method: <com.b.a: java.lang.String a(java.lang.String)>
		SHA-256: 11e68c0be251fc2194897e238a244ef6c8e4ee61da79a86e612d69b15943defe
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28913)
		Method: <com.paypal.android.sdk.ap: java.lang.String a(java.lang.String)>
		SHA-256: e92c8c787178ec3feb303569d56173ee95524f8aaaac7c5e05b1c7ab6730b9f8
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: varReplacer733
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer733)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 911b913dd036176309e29b842dd57acc0a8d1d40363526d5bbcb466d2f79eb58
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 49b0991ec4db97511e0a9605f37cdac92c6c6619f8973ee389e3d86c78826961
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer2617, $i0, varReplacer2618)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: ad75869ce1ac6d5e4270bd6b095b52743be19345c970087f2678cac8b587728d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4798)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 77ae0a85cf6defef2203a19c803ac08ff5b26545f8af01d4edb37388b11e81b3
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer932)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: 7c86380ec2ed7e4e78ea88d46c5072e957bda377718091bfb76a59c922df2636
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1782)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 2ca720ae3105a9ab0681b09d7a0388d4e995bd0c0b3ee5bfb670d23d2c21eb19
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer732)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: b19f87ead91775ddfc6eec301c93fd821cc8ce771f30790bea4ecb826ba68189
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: 588458274b445946250cb882f03e117802589055ad1c0641c873f0c9f0a9b58b
		Secure: true
	Object:
		Variable: varReplacer2614
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2614)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 2960282c4c21013de28cd584281fc032701127644a3f997c1237cc911e961c04
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer729)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 87483f8f091a79b21082f0e0100074843c166e04f2231fb15568bbbbefc7f168
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer736)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: c5dacb554b7bd50a40e99e1b45f682b9424f64cd37326071bce88b3346fa29d1
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2622)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 26276a120ae480f831cbb3def5875a6636520fc22ace96002e5ea69f701a98f4
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2624)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 90c0d18286e6269e6c9d2ce084d43f69f73e4a952d7ae0946ec2337109f0d3e0
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.f: java.security.KeyPair f(java.lang.String)>
		SHA-256: 8551cd6b3cc22405d453a0e2748b84cb2fd415de658d3d644bd174e7acddd53a
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25514)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 24f44a3c4f01b51d7da2d21a20eed90cbb1bbef08d7422b9ba4f3fbb43425d02
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.google.android.gms.measurement.internal.m: java.security.MessageDigest j(java.lang.String)>
		SHA-256: cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763
		Secure: false
	Object:
		Variable: varReplacer2618
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer2617, $i0, varReplacer2618)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 1fc62e357e24ec38eae1c211de97413812fedce425b530bd63d72b091d2c16ff
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.c.a.a.a: byte[] a(int)>
		SHA-256: fb29420aa97b5775051d78ac21aaddb65cadc18b767a2ea9df4d12c22313ecc6
		Secure: true

Findings in Java Class: com.c.a.a.a

	 in Method: com.c.a.a.a$c a(java.lang.String,byte[],int)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #677280973f9dced9103ecdf4384433e462d8935e260686a2fb4aab051a077812)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer733)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #677280973f9dced9103ecdf4384433e462d8935e260686a2fb4aab051a077812)
			Third parameter (with value 100)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer733)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #677280973f9dced9103ecdf4384433e462d8935e260686a2fb4aab051a077812)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer733)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer732)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer736)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #87483f8f091a79b21082f0e0100074843c166e04f2231fb15568bbbbefc7f168)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer729)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: com.c.a.a.a$c a(java.lang.String)
		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer2617, $i0, varReplacer2618)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2614)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer2617, $i0, varReplacer2618)


	 in Method: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer933, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: com.c.a.a.a$c a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2622)


	 in Method: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer25515, $r5, $r2)


Findings in Java Class: com.google.android.gms.measurement.internal.m

	 in Method: java.security.MessageDigest j(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: com.google.android.gms.measurement.internal.z

	 in Method: void e()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = staticinvoke <com.google.android.gms.measurement.internal.m: java.security.MessageDigest j(java.lang.String)>(varReplacer3038)


Findings in Java Class: com.google.android.gms.iid.e

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #11f1bcb7ae07944efc67e46877e2d7ceddc5e8edcbf8a0082e0feef337558e47)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.paypal.android.sdk.bi

	 in Method: void <init>(javax.net.ssl.TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22254, $r2, varReplacer22254)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22254, $r2, varReplacer22254)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1783, r7, varReplacer1783)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1783, r7, varReplacer1783)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 48

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 15
	NeverTypeOfError: 1
	IncompleteOperationError: 4
	ImpreciseValueExtractionError: 1
=====================================================================