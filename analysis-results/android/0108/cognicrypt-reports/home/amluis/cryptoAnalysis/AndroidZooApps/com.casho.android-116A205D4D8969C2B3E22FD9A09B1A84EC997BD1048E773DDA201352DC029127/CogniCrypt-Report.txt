Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer19685, $i0, varReplacer19686)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: faeed5680ab79c2ee434bf78775cc14f1f1dc816eaabda6bdd548d92ed35993e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.e: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 11f1bcb7ae07944efc67e46877e2d7ceddc5e8edcbf8a0082e0feef337558e47
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19591)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: b8f244bb3c58bc228767914d4f1089d48657c71accf5ae12754bc18ceeeefc71
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.paypal.android.sdk.be: void a(okhttp3.OkHttpClient$Builder)>
		SHA-256: f621924fe2e56784575cef4de2c81bd7158a3f476cfcf76844c43012d0db3e60
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.e: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 23eb3e252b70966d3d0966a2feb58e39bc842849d9905948935e8605dfbd44e2
		Secure: false
	Object:
		Variable: varReplacer19692
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer19692)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 3fb15c1b674d80c1a94e07bc164ece17d76115dbfc2d5b0ae14341470d7df652
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 49b0991ec4db97511e0a9605f37cdac92c6c6619f8973ee389e3d86c78826961
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer19698)
		Method: <com.c.a.a.a: byte[] a(int)>
		SHA-256: bf75679fb188c85d01c15ae568366440a2dfc5c265331cb7d9b82d1c0403405c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer19475)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 821513b684bc639380587778657cb500457d8c737cdf171d922e82bd6ce6da53
		Secure: false
	Object:
		Variable: varReplacer19474
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer19474)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 9656d3a105437091d4486a9c5c38628e8dbe95fa2dadc0bdd8e84cc23f0a06e0
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.b.a: java.lang.String a(java.lang.String)>
		SHA-256: dc882d1e80d0c4879b4465be6f5455c2ca87100b2286e4177ce35aff39053ee6
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer19474)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 1c8d52d8723fe415ed0e7471baf88207024a3e99f58fd40e8d7991cd6a5b213c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.woobi.r: java.lang.String a(java.lang.String)>
		SHA-256: ecac30db3a8dad252fba96484f645a6e999af697f2196475ca7a153464ab981d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: 588458274b445946250cb882f03e117802589055ad1c0641c873f0c9f0a9b58b
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer21921)
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: 26b93d75d2d075386bb430b27b4f0abc640901ba57ba27192150b036d270807a
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.paypal.android.sdk.ap: java.lang.String a(java.lang.String)>
		SHA-256: 4d6e504ac71b2bfa8922545fc87c3c6bff7d76288427fdd13d0af0fb386a7eae
		Secure: true
	Object:
		Variable: varReplacer19694
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer19694)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 7845000a6cea1fb32ca870893e84dbd0ff60db958f3a09d82c9627220f66870e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer23464)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: d847433f22a82f1999501527365d4d266d15603785643c20a6c3c73a28464f02
		Secure: false
	Object:
		Variable: varReplacer19473
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer19473)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: fa2163ffbb89533deca1c58c2aab6b9e2e68858e0e6aceedafaec905ca9a4b78
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 667d1c74233dc4695844b2a369b7ca168b7b3f396ce37cb94fd304b9f22f5e14
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30135)
		Method: <com.paypal.android.sdk.ap: java.lang.String a(java.lang.String)>
		SHA-256: 3c111567096b8b379b871b4852be21201664aaf8a496e2efa2ea935c1cd218af
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer19597)
		Method: <com.c.a.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 2e66d184ad9f67bbf288b9b1c16597e85ddc4d7e04112786d94cd29107203e2a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.f: java.security.KeyPair f(java.lang.String)>
		SHA-256: 8551cd6b3cc22405d453a0e2748b84cb2fd415de658d3d644bd174e7acddd53a
		Secure: true
	Object:
		Variable: varReplacer19686
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer19685, $i0, varReplacer19686)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: f32653234bc3b6a50acf587dcd75218ef1fb74fbf377eb82b7bf8f100176e30a
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.f: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 7352392ac1a61e12c3ab32898ca689dddd258b6f1239ef778511babba2d4e7d
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer19695)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 45b40ea92c5729c1519aa60c0751b820686ac17c24c034a44faabed5587ecb9b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.google.android.gms.measurement.internal.m: java.security.MessageDigest j(java.lang.String)>
		SHA-256: cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763
		Secure: false
	Object:
		Variable: varReplacer19478
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer19478)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 1642156542e28872b5edcaf109347cbdd835a97491d87bc5e45649bba4da7c95
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21857)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: e2f0ff13380eda7a22b1d9848486b220713a23c2b16cb8c098de42d484170ae0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer24583)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: f52a125c69fdcf4faa319206230fa8a4f6eeba2988a9d0e5fefb998e0c150c22
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: $r6 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer19561)
		Method: <com.c.a.a.a$b: void d()>
		SHA-256: fc515f2a036ab6a61fabd8404e9d928e23b6fbb9ff88e8c5219ef5c5c9e111f3
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer19694)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: b6baeec0d2ea78271f8a2f902531db77abc2ba452b22c9ac133485f19e159e91
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer19478)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: a91f75c43c56e60b029fa9036e5c98770fd0c10b4a8f5bfc42cca097c9ca6d31
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: deaa291ca3d0ffc59d7ad7c1373c0bb84caba0350d0558fb8d4c3e426704100e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.c.a.a.a: byte[] a(int)>
		SHA-256: fb29420aa97b5775051d78ac21aaddb65cadc18b767a2ea9df4d12c22313ecc6
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19582)
		Method: <com.b.a: java.lang.String a(java.lang.String)>
		SHA-256: 8bda64679ab70ee758ed9a3ac0875bafdd257742d188ea8692c59edbaaa9b178
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer26029)
		Method: <com.paypal.android.sdk.bi: void <init>(javax.net.ssl.TrustManager)>
		SHA-256: 7634a1978880c08c8eda84a2a5f45e570848b6c8bb9242b4940d9c51b87ccd35
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer19473)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 1d6fe1bd44abd563550aa0b7a04d6713a88f8e17bb2f47a34719365470dc5451
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a.a.a$b: void d()>
		SHA-256: 2c4df0dfdedbc6ba6aa64eb861bcc76e945ee8fee08de7105c50d6a8805bf65c
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer19692)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 9a48cfabe19bae90953b3a24451f2be598c0d95a5da8eb15a25810d5acc5ef86
		Secure: false
	Object:
		Variable: $r21
		Type: byte[]
		Statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)
		Method: <com.google.android.gms.measurement.internal.z: void e()>
		SHA-256: 2acc783ae146fb83530e758b60624c8af39c1e50c62d500f73395ef622d7f02d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16701)
		Method: <com.woobi.r: java.lang.String a(java.lang.String)>
		SHA-256: 18b3e09db260822d9e552a731b236d512aae6598673b900fcb5d1dc3bb82396b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: 93956974d148af49c7bedf886430bab7e5a8bdbb54e9810aa547f86e20abd43c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.f: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 3a1e80698e549c91437350956eb5865d687d056e7348af703228dcb9347cf8b8
		Secure: true

Findings in Java Class: com.c.a.a.a

	 in Method: com.c.a.a.a$c a(java.lang.String,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer19473)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer19474)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a91f75c43c56e60b029fa9036e5c98770fd0c10b4a8f5bfc42cca097c9ca6d31)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer19478)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #821513b684bc639380587778657cb500457d8c737cdf171d922e82bd6ce6da53)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer19475)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a91f75c43c56e60b029fa9036e5c98770fd0c10b4a8f5bfc42cca097c9ca6d31)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer19478)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a91f75c43c56e60b029fa9036e5c98770fd0c10b4a8f5bfc42cca097c9ca6d31)
			Third parameter (with value 100)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer19478)


	 in Method: com.c.a.a.a$c a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer19685, $i0, varReplacer19686)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer19685, $i0, varReplacer19686)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer19692)


	 in Method: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer19593, $r5, $r2)


	 in Method: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer23463, $r5, $r2)


	 in Method: com.c.a.a.a$c a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer19694)


Findings in Java Class: com.google.android.gms.iid.e

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #11f1bcb7ae07944efc67e46877e2d7ceddc5e8edcbf8a0082e0feef337558e47)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.a

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e2f0ff13380eda7a22b1d9848486b220713a23c2b16cb8c098de42d484170ae0)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21857)


Findings in Java Class: com.google.android.gms.measurement.internal.m

	 in Method: java.security.MessageDigest j(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: com.google.android.gms.measurement.internal.z

	 in Method: void e()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = staticinvoke <com.google.android.gms.measurement.internal.m: java.security.MessageDigest j(java.lang.String)>(varReplacer27246)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer24581, r7, varReplacer24581)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer24581, r7, varReplacer24581)


Findings in Java Class: com.paypal.android.sdk.bi

	 in Method: void <init>(javax.net.ssl.TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer26027, $r2, varReplacer26027)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer26027, $r2, varReplacer26027)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 48

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 15
	ImpreciseValueExtractionError: 1
	ConstraintError: 4
	NeverTypeOfError: 1
	IncompleteOperationError: 4
=====================================================================