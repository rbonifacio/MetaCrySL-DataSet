public class com.amazon.insights.session.client.DefaultSessionClient extends java.lang.Object implements com.amazon.insights.session.InternalSessionClient
{
    protected static final long DEFAULT_RESTART_DELAY;
    protected static final long DEFAULT_RESUME_DELAY;
    protected static final java.lang.String RESTART_DELAY_CONFIG_KEY;
    protected static final java.lang.String RESUME_DELAY_CONFIG_KEY;
    public static final java.lang.String SESSION_DURATION_METRIC_KEY;
    public static final java.lang.String SESSION_ID_ATTRIBUTE_KEY;
    public static final java.lang.String SESSION_PAUSE_EVENT_TYPE;
    public static final java.lang.String SESSION_RESUME_EVENT_TYPE;
    public static final java.lang.String SESSION_START_EVENT_TYPE;
    public static final java.lang.String SESSION_START_TIME_ATTRIBUTE_KEY;
    public static final java.lang.String SESSION_STOP_EVENT_TYPE;
    public static final java.lang.String SESSION_STOP_TIME_ATTRIBUTE_KEY;
    protected static final com.amazon.insights.core.log.Logger logger;
    private final com.amazon.insights.session.client.SessionClientState ACTIVE_STATE;
    private final com.amazon.insights.session.client.SessionClientState INACTIVE_STATE;
    private final com.amazon.insights.session.client.SessionClientState PAUSED_STATE;
    protected final com.amazon.insights.core.InsightsContext context;
    protected final com.amazon.insights.event.InternalEventClient eventClient;
    private final long restartDelay;
    private final long resumeDelay;
    protected com.amazon.insights.session.Session session;
    protected final com.amazon.insights.session.SessionStore sessionStore;
    protected com.amazon.insights.session.client.SessionClientState state;

    static void <clinit>()
    {
        com.amazon.insights.core.log.Logger $r0;

        nop;

        $r0 = staticinvoke <com.amazon.insights.core.log.Logger: com.amazon.insights.core.log.Logger getLogger(java.lang.Class)>(class "Lcom/amazon/insights/session/client/DefaultSessionClient;");

        <com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.core.log.Logger logger> = $r0;

        return;
    }

    protected void <init>(com.amazon.insights.core.InsightsContext, com.amazon.insights.event.InternalEventClient, com.amazon.insights.session.SessionStore)
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        com.amazon.insights.core.InsightsContext $r1;
        com.amazon.insights.event.InternalEventClient $r2;
        com.amazon.insights.session.SessionStore $r3;
        com.amazon.insights.session.client.InactiveSessionState $r4;
        com.amazon.insights.session.client.ActiveSessionState $r5;
        com.amazon.insights.session.client.PausedSessionState $r6;
        com.amazon.insights.session.Session $r7;
        com.amazon.insights.session.client.SessionClientState $r8;
        com.amazon.insights.core.configuration.Configuration $r9;
        java.lang.Long $r10;
        long $l0, varReplacer1010, varReplacer1011;
        java.lang.String varReplacer1005, varReplacer1006, varReplacer1007, varReplacer1008, varReplacer1009;

        nop;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        $r1 := @parameter0: com.amazon.insights.core.InsightsContext;

        $r2 := @parameter1: com.amazon.insights.event.InternalEventClient;

        $r3 := @parameter2: com.amazon.insights.session.SessionStore;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = new com.amazon.insights.session.client.InactiveSessionState;

        specialinvoke $r4.<com.amazon.insights.session.client.InactiveSessionState: void <init>(com.amazon.insights.session.client.DefaultSessionClient)>($r0);

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState INACTIVE_STATE> = $r4;

        $r5 = new com.amazon.insights.session.client.ActiveSessionState;

        specialinvoke $r5.<com.amazon.insights.session.client.ActiveSessionState: void <init>(com.amazon.insights.session.client.DefaultSessionClient)>($r0);

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState ACTIVE_STATE> = $r5;

        $r6 = new com.amazon.insights.session.client.PausedSessionState;

        specialinvoke $r6.<com.amazon.insights.session.client.PausedSessionState: void <init>(com.amazon.insights.session.client.DefaultSessionClient)>($r0);

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState PAUSED_STATE> = $r6;

        varReplacer1009 = "A valid InsightsContext must be provided!";

        staticinvoke <com.amazon.insights.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, varReplacer1009);

        varReplacer1007 = "A valid EventClient must be provided!";

        staticinvoke <com.amazon.insights.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r2, varReplacer1007);

        varReplacer1005 = "A valid SessionStore must be provided!";

        staticinvoke <com.amazon.insights.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r3, varReplacer1005);

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.SessionStore sessionStore> = $r3;

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.event.InternalEventClient eventClient> = $r2;

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.core.InsightsContext context> = $r1;

        $r3 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.SessionStore sessionStore>;

        $r7 = interfaceinvoke $r3.<com.amazon.insights.session.SessionStore: com.amazon.insights.session.Session getSession()>();

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.Session session> = $r7;

        $r7 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.Session session>;

        if $r7 != null goto label2;

        $r8 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState INACTIVE_STATE>;

     label1:
        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState state> = $r8;

        $r9 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.configuration.Configuration getConfiguration()>();

        varReplacer1010 = 30000L;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(varReplacer1010);

        varReplacer1008 = "sessionRestartDelay";

        $r10 = interfaceinvoke $r9.<com.amazon.insights.core.configuration.Configuration: java.lang.Long optLong(java.lang.String,java.lang.Long)>(varReplacer1008, $r10);

        $l0 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: long restartDelay> = $l0;

        $r9 = interfaceinvoke $r1.<com.amazon.insights.core.InsightsContext: com.amazon.insights.core.configuration.Configuration getConfiguration()>();

        varReplacer1011 = 5000L;

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(varReplacer1011);

        varReplacer1006 = "sessionResumeDelay";

        $r10 = interfaceinvoke $r9.<com.amazon.insights.core.configuration.Configuration: java.lang.Long optLong(java.lang.String,java.lang.Long)>(varReplacer1006, $r10);

        $l0 = virtualinvoke $r10.<java.lang.Long: long longValue()>();

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: long resumeDelay> = $l0;

        return;

     label2:
        $r8 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState PAUSED_STATE>;

        goto label1;
    }

    public static com.amazon.insights.session.client.DefaultSessionClient newInstance(com.amazon.insights.core.InsightsContext, com.amazon.insights.event.InternalEventClient)
    {
        com.amazon.insights.core.InsightsContext $r0;
        com.amazon.insights.event.InternalEventClient $r1;
        com.amazon.insights.session.FileSessionStore $r2;
        com.amazon.insights.session.client.DefaultSessionClient $r3;

        nop;

        $r0 := @parameter0: com.amazon.insights.core.InsightsContext;

        $r1 := @parameter1: com.amazon.insights.event.InternalEventClient;

        $r2 = new com.amazon.insights.session.FileSessionStore;

        specialinvoke $r2.<com.amazon.insights.session.FileSessionStore: void <init>(com.amazon.insights.core.InsightsContext)>($r0);

        $r3 = new com.amazon.insights.session.client.DefaultSessionClient;

        specialinvoke $r3.<com.amazon.insights.session.client.DefaultSessionClient: void <init>(com.amazon.insights.core.InsightsContext,com.amazon.insights.event.InternalEventClient,com.amazon.insights.session.SessionStore)>($r0, $r1, $r2);

        return $r3;
    }

    protected void changeState(com.amazon.insights.session.client.DefaultSessionClient$SessionState)
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        com.amazon.insights.session.client.DefaultSessionClient$SessionState $r1;
        int $i0;
        int[] $r2;
        com.amazon.insights.session.client.SessionClientState $r3;
        java.lang.Throwable $r4;

        nop;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        $r1 := @parameter0: com.amazon.insights.session.client.DefaultSessionClient$SessionState;

        entermonitor $r0;

     label1:
        $r2 = <com.amazon.insights.session.client.DefaultSessionClient$1: int[] $SwitchMap$com$amazon$insights$session$client$DefaultSessionClient$SessionState>;

        $i0 = virtualinvoke $r1.<com.amazon.insights.session.client.DefaultSessionClient$SessionState: int ordinal()>();

        $i0 = $r2[$i0];

     label2:
        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label7;
            case 3: goto label8;
            default: goto label3;
        };

     label3:
        exitmonitor $r0;

        return;

     label4:
        $r3 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState INACTIVE_STATE>;

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState state> = $r3;

     label5:
        goto label3;

     label6:
        $r4 := @caughtexception;

        exitmonitor $r0;

        throw $r4;

     label7:
        $r3 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState ACTIVE_STATE>;

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState state> = $r3;

        goto label3;

     label8:
        $r3 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState PAUSED_STATE>;

        $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState state> = $r3;

     label9:
        goto label3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label9 with label6;
    }

    public long getRestartDelay()
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        long l0;

        nop;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        l0 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: long restartDelay>;

        return l0;
    }

    public long getResumeDelay()
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        long l0;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        l0 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: long resumeDelay>;

        return l0;
    }

    protected com.amazon.insights.session.Session getSession()
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        com.amazon.insights.session.Session r1;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        r1 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.Session session>;

        return r1;
    }

    protected com.amazon.insights.session.client.DefaultSessionClient$SessionState getSessionState()
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        boolean $z0;
        com.amazon.insights.session.Session $r1;
        com.amazon.insights.session.client.DefaultSessionClient$SessionState r2;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        $r1 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.Session session>;

        if $r1 == null goto label2;

        $r1 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.Session session>;

        $z0 = virtualinvoke $r1.<com.amazon.insights.session.Session: boolean isPaused()>();

        if $z0 == 0 goto label1;

        r2 = <com.amazon.insights.session.client.DefaultSessionClient$SessionState: com.amazon.insights.session.client.DefaultSessionClient$SessionState PAUSED>;

        return r2;

     label1:
        r2 = <com.amazon.insights.session.client.DefaultSessionClient$SessionState: com.amazon.insights.session.client.DefaultSessionClient$SessionState ACTIVE>;

        return r2;

     label2:
        r2 = <com.amazon.insights.session.client.DefaultSessionClient$SessionState: com.amazon.insights.session.client.DefaultSessionClient$SessionState INACTIVE>;

        return r2;
    }

    public void pauseSession()
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        com.amazon.insights.session.client.SessionClientState $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState state>;

        virtualinvoke $r1.<com.amazon.insights.session.client.SessionClientState: void pause()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void resumeSession()
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        com.amazon.insights.session.client.SessionClientState $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState state>;

        virtualinvoke $r1.<com.amazon.insights.session.client.SessionClientState: void resume()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void startSession()
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        com.amazon.insights.session.client.SessionClientState $r1;
        java.lang.Throwable $r2;

        nop;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState state>;

        virtualinvoke $r1.<com.amazon.insights.session.client.SessionClientState: void start()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void stopSession()
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        com.amazon.insights.session.client.SessionClientState $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        entermonitor $r0;

     label1:
        $r1 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.client.SessionClientState state>;

        virtualinvoke $r1.<com.amazon.insights.session.client.SessionClientState: void stop()>();

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        com.amazon.insights.session.client.DefaultSessionClient $r0;
        java.lang.StringBuilder $r1;
        com.amazon.insights.session.Session $r2;
        java.lang.String $r3;
        boolean $z0;

        $r0 := @this: com.amazon.insights.session.client.DefaultSessionClient;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[DefaultSessionClient]\n- session: ");

        $r2 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.Session session>;

        if $r2 != null goto label3;

        $r3 = "<null>";

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.Session session>;

        if $r2 == null goto label4;

        $r2 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.Session session>;

        $z0 = virtualinvoke $r2.<com.amazon.insights.session.Session: boolean isPaused()>();

        if $z0 == 0 goto label4;

        $r3 = ": paused";

     label2:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label3:
        $r2 = $r0.<com.amazon.insights.session.client.DefaultSessionClient: com.amazon.insights.session.Session session>;

        $r3 = virtualinvoke $r2.<com.amazon.insights.session.Session: java.lang.String getSessionID()>();

        goto label1;

     label4:
        $r3 = "";

        goto label2;
    }
}
