class org.xwalk.core.XWalkCoreWrapper extends java.lang.Object
{
    private static final java.lang.String BRIDGE_PACKAGE;
    private static final java.lang.String OPTIMIZED_DEX_DIR;
    private static final java.lang.String TAG;
    private static final java.lang.String WRAPPER_PACKAGE;
    private static final java.lang.String XWALK_CORE_CLASSES_DEX;
    private static org.xwalk.core.XWalkCoreWrapper sInstance;
    private static org.xwalk.core.XWalkCoreWrapper sProvisionalInstance;
    private static java.util.HashMap sReservedActions;
    private static java.util.LinkedList sReservedActivities;
    private int mApiVersion;
    private android.content.Context mBridgeContext;
    private java.lang.ClassLoader mBridgeLoader;
    private int mCoreStatus;
    private int mMinApiVersion;
    private android.content.Context mWrapperContext;

    static void <clinit>()
    {
        java.util.LinkedList $r0;
        java.util.HashMap $r1;

        nop;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        <org.xwalk.core.XWalkCoreWrapper: java.util.LinkedList sReservedActivities> = $r0;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions> = $r1;

        return;
    }

    private void <init>(android.content.Context, int)
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        android.content.Context $r1;
        int $i0, $i1, varReplacer461, varReplacer462;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer461 = 7;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mApiVersion> = varReplacer461;

        if $i0 <= 0 goto label2;

        $i1 = $r0.<org.xwalk.core.XWalkCoreWrapper: int mApiVersion>;

        if $i0 > $i1 goto label2;

     label1:
        $r0.<org.xwalk.core.XWalkCoreWrapper: int mMinApiVersion> = $i0;

        varReplacer462 = 0;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer462;

        $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mWrapperContext> = $r1;

        return;

     label2:
        $i0 = $r0.<org.xwalk.core.XWalkCoreWrapper: int mApiVersion>;

        goto label1;
    }

    public static int attachXWalkCore(android.content.Context)
    {
        android.content.Context $r0;
        java.util.LinkedList $r1;
        boolean $z0;
        org.xwalk.core.XWalkCoreWrapper $r2;
        int i0, varReplacer860;
        java.lang.String varReplacer854, varReplacer855, varReplacer856, varReplacer857, varReplacer858, varReplacer859, varReplacer861;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <org.xwalk.core.XWalkCoreWrapper: java.util.LinkedList sReservedActivities>;

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean isEmpty()>();

        staticinvoke <junit.framework.Assert: void assertFalse(boolean)>($z0);

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>($r2);

        varReplacer856 = "XWalkLib";

        varReplacer857 = "Attach xwalk core";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer856, varReplacer857);

        $r2 = new org.xwalk.core.XWalkCoreWrapper;

        varReplacer860 = 1;

        specialinvoke $r2.<org.xwalk.core.XWalkCoreWrapper: void <init>(android.content.Context,int)>($r0, varReplacer860);

        <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance> = $r2;

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        $z0 = specialinvoke $r2.<org.xwalk.core.XWalkCoreWrapper: boolean findEmbeddedCore()>();

        if $z0 == 0 goto label1;

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        i0 = $r2.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus>;

        return i0;

     label1:
        $z0 = staticinvoke <org.xwalk.core.XWalkEnvironment: boolean isDownloadMode()>();

        if $z0 == 0 goto label2;

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        specialinvoke $r2.<org.xwalk.core.XWalkCoreWrapper: boolean findDownloadedCore()>();

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        i0 = $r2.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus>;

        return i0;

     label2:
        $z0 = staticinvoke <org.xwalk.core.XWalkEnvironment: boolean is64bitDevice()>();

        if $z0 == 0 goto label5;

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        varReplacer854 = "org.xwalk.core";

        $z0 = specialinvoke $r2.<org.xwalk.core.XWalkCoreWrapper: boolean findSharedCore(java.lang.String)>(varReplacer854);

        if $z0 == 0 goto label4;

     label3:
        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        i0 = $r2.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus>;

        return i0;

     label4:
        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        varReplacer858 = "org.xwalk.core64";

        $z0 = specialinvoke $r2.<org.xwalk.core.XWalkCoreWrapper: boolean findSharedCore(java.lang.String)>(varReplacer858);

        if $z0 != 0 goto label3;

        $z0 = staticinvoke <org.xwalk.core.XWalkEnvironment: boolean isIaDevice()>();

        if $z0 == 0 goto label3;

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        varReplacer859 = "org.xwalk.core64.ia";

        specialinvoke $r2.<org.xwalk.core.XWalkCoreWrapper: boolean findSharedCore(java.lang.String)>(varReplacer859);

        goto label3;

     label5:
        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        varReplacer861 = "org.xwalk.core";

        $z0 = specialinvoke $r2.<org.xwalk.core.XWalkCoreWrapper: boolean findSharedCore(java.lang.String)>(varReplacer861);

        if $z0 != 0 goto label3;

        $z0 = staticinvoke <org.xwalk.core.XWalkEnvironment: boolean isIaDevice()>();

        if $z0 == 0 goto label3;

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        varReplacer855 = "org.xwalk.core.ia";

        specialinvoke $r2.<org.xwalk.core.XWalkCoreWrapper: boolean findSharedCore(java.lang.String)>(varReplacer855);

        goto label3;
    }

    private boolean checkCoreArchitecture()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.lang.RuntimeException $r1, $r2;
        org.xwalk.core.ReflectMethod $r3;
        java.lang.Class $r4;
        java.lang.Class[] $r5;
        boolean $z0, $z1;
        java.lang.String $r6, varReplacer506, varReplacer507, varReplacer508, varReplacer509, varReplacer510, varReplacer513, varReplacer514, varReplacer515, varReplacer519, varReplacer521, varReplacer522;
        android.content.Context $r7;
        int $i0, varReplacer505, varReplacer511, varReplacer512, varReplacer516, varReplacer517, varReplacer518, varReplacer520, varReplacer523;
        java.lang.StringBuilder $r8;
        java.lang.Object[] $r9;
        java.lang.Object $r10;
        java.lang.Boolean $r11;
        java.io.File $r12;
        java.lang.Throwable $r13;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

     label01:
        varReplacer521 = "XWalkViewDelegate";

        $r4 = virtualinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.Class getBridgeClass(java.lang.String)>(varReplacer521);

     label02:
        $r3 = new org.xwalk.core.ReflectMethod;

     label03:
        $r5 = newarray (java.lang.Class)[2];

        $r5[0] = class "Landroid/content/Context;";

        $r5[1] = class "Ljava/lang/String;";

        varReplacer522 = "loadXWalkLibrary";

        specialinvoke $r3.<org.xwalk.core.ReflectMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>($r4, varReplacer522, $r5);

     label04:
        $z0 = 0;

        $r6 = null;

     label05:
        $r7 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext>;

     label06:
        if $r7 == null goto label12;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 17 goto label08;

        $r8 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer519 = "/data/data/";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer519);

        $r7 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext>;

        $r6 = virtualinvoke $r7.<android.content.Context: java.lang.String getPackageName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer507 = "/lib";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer507);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r9 = newarray (java.lang.Object)[2];

        $r7 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext>;

        $r9[0] = $r7;

        $r9[1] = $r6;

        $r10 = virtualinvoke $r3.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r9);

        $r11 = (java.lang.Boolean) $r10;

        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

     label09:
        if $z0 != 0 goto label24;

     label10:
        varReplacer508 = "XWalkLib";

        varReplacer509 = "Mismatch of CPU architecture";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer508, varReplacer509);

        varReplacer505 = 6;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer505;

     label11:
        varReplacer511 = 0;

        return varReplacer511;

     label12:
        $r9 = newarray (java.lang.Object)[2];

        $r7 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext>;

        $r9[0] = $r7;

        $r9[1] = null;

        $r10 = virtualinvoke $r3.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r9);

        $r11 = (java.lang.Boolean) $r10;

        $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

     label13:
        $z0 = $z1;

     label14:
        if $z0 != 0 goto label09;

     label15:
        $r7 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mWrapperContext>;

     label16:
        if $r7 == null goto label09;

     label17:
        $r7 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mWrapperContext>;

        varReplacer515 = "xwalkcore";

        varReplacer516 = 0;

        $r12 = virtualinvoke $r7.<android.content.Context: java.io.File getDir(java.lang.String,int)>(varReplacer515, varReplacer516);

        $r6 = virtualinvoke $r12.<java.io.File: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[2];

        $r7 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext>;

        $r9[0] = $r7;

        $r9[1] = $r6;

        $r10 = virtualinvoke $r3.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r9);

        $r11 = (java.lang.Boolean) $r10;

        $z0 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

     label18:
        goto label09;

     label19:
        $r2 := @caughtexception;

     label20:
        $r6 = virtualinvoke $r2.<java.lang.RuntimeException: java.lang.String getLocalizedMessage()>();

        varReplacer506 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer506, $r6);

     label21:
        goto label14;

     label22:
        $r1 := @caughtexception;

        $r6 = virtualinvoke $r1.<java.lang.RuntimeException: java.lang.String getLocalizedMessage()>();

        varReplacer510 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer510, $r6);

        $r13 = virtualinvoke $r1.<java.lang.RuntimeException: java.lang.Throwable getCause()>();

        $z0 = $r13 instanceof java.lang.UnsatisfiedLinkError;

        if $z0 == 0 goto label23;

        varReplacer523 = 6;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer523;

        varReplacer520 = 0;

        return varReplacer520;

     label23:
        varReplacer517 = 5;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer517;

        varReplacer518 = 0;

        return varReplacer518;

     label24:
        varReplacer513 = "XWalkLib";

        varReplacer514 = "XWalk core architecture matched";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer513, varReplacer514);

        varReplacer512 = 1;

        return varReplacer512;

        catch java.lang.RuntimeException from label01 to label02 with label22;
        catch java.lang.RuntimeException from label03 to label04 with label22;
        catch java.lang.RuntimeException from label05 to label06 with label22;
        catch java.lang.RuntimeException from label07 to label08 with label22;
        catch java.lang.RuntimeException from label08 to label09 with label22;
        catch java.lang.RuntimeException from label10 to label11 with label22;
        catch java.lang.RuntimeException from label12 to label13 with label19;
        catch java.lang.RuntimeException from label15 to label16 with label22;
        catch java.lang.RuntimeException from label17 to label18 with label22;
        catch java.lang.RuntimeException from label20 to label21 with label22;
    }

    private boolean checkCorePackage(java.lang.String)
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.lang.String $r1, $r6, varReplacer883, varReplacer884, varReplacer885, varReplacer888, varReplacer890, varReplacer891, varReplacer892, varReplacer895, varReplacer896, varReplacer897;
        android.content.Context $r2;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageInfo $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.Throwable $r7, $r8;
        int varReplacer886, varReplacer887, varReplacer889, varReplacer893, varReplacer894, varReplacer898, varReplacer899;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mWrapperContext>;

     label1:
        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        varReplacer887 = 64;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r1, varReplacer887);

        varReplacer883 = "SHA-256";

        varReplacer884 = "6fd3002c5ca9a1f55ed51e92233ed4626120c266efea9d9746058c995ece68c4";

        $z0 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: boolean verifyPackageInfo(android.content.pm.PackageInfo,java.lang.String,java.lang.String)>($r4, varReplacer883, varReplacer884);

     label2:
        if $z0 != 0 goto label6;

        $r5 = new java.lang.StringBuilder;

     label3:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer890 = " signature verification failed";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer890);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer891 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer891, $r6);

     label4:
        varReplacer886 = 7;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer886;

        varReplacer893 = 0;

        return varReplacer893;

     label5:
        $r7 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer888 = " not found";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer888);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer897 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer897, $r1);

        varReplacer898 = 0;

        return varReplacer898;

     label6:
        $r2 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mWrapperContext>;

     label7:
        varReplacer899 = 3;

        $r2 = virtualinvoke $r2.<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>($r1, varReplacer899);

     label8:
        $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext> = $r2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer896 = "Created package context for ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer896);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer885 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer885, $r1);

        varReplacer889 = 1;

        return varReplacer889;

     label9:
        $r8 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer892 = " not found";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer892);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer895 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer895, $r1);

        varReplacer894 = 0;

        return varReplacer894;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label5;
        catch android.content.pm.PackageManager$NameNotFoundException from label7 to label8 with label9;
    }

    private boolean checkCoreVersion()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.lang.RuntimeException $r1, $r9;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2, varReplacer480, varReplacer481, varReplacer487, varReplacer488, varReplacer493, varReplacer495, varReplacer501, varReplacer502, varReplacer503;
        java.lang.String $r3, $r7, varReplacer482, varReplacer483, varReplacer484, varReplacer485, varReplacer486, varReplacer489, varReplacer490, varReplacer491, varReplacer492, varReplacer494, varReplacer496, varReplacer497, varReplacer498, varReplacer499, varReplacer500, varReplacer504;
        java.lang.Class $r4;
        org.xwalk.core.ReflectField $r5;
        java.lang.Object $r6;
        java.lang.Integer $r8;
        boolean $z0;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer490 = "[App Version] build:22.52.561.4, api:";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer490);

        $i0 = $r0.<org.xwalk.core.XWalkCoreWrapper: int mApiVersion>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer484 = ", min_api:";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer484);

        $i0 = $r0.<org.xwalk.core.XWalkCoreWrapper: int mMinApiVersion>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer491 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer491, $r3);

     label01:
        varReplacer496 = "XWalkCoreVersion";

        $r4 = virtualinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.Class getBridgeClass(java.lang.String)>(varReplacer496);

     label02:
        $r3 = "";

        $r5 = new org.xwalk.core.ReflectField;

     label03:
        varReplacer494 = "XWALK_BUILD_VERSION";

        specialinvoke $r5.<org.xwalk.core.ReflectField: void <init>(java.lang.Class,java.lang.String)>($r4, varReplacer494);

        $r6 = virtualinvoke $r5.<org.xwalk.core.ReflectField: java.lang.Object get()>();

        $r7 = (java.lang.String) $r6;

     label04:
        $r3 = $r7;

     label05:
        $r5 = new org.xwalk.core.ReflectField;

     label06:
        varReplacer499 = "API_VERSION";

        specialinvoke $r5.<org.xwalk.core.ReflectField: void <init>(java.lang.Class,java.lang.String)>($r4, varReplacer499);

        $r6 = virtualinvoke $r5.<org.xwalk.core.ReflectField: java.lang.Object get()>();

        $r8 = (java.lang.Integer) $r6;

        $i1 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label07:
        $r5 = new org.xwalk.core.ReflectField;

     label08:
        varReplacer485 = "MIN_API_VERSION";

        specialinvoke $r5.<org.xwalk.core.ReflectField: void <init>(java.lang.Class,java.lang.String)>($r4, varReplacer485);

        $r6 = virtualinvoke $r5.<org.xwalk.core.ReflectField: java.lang.Object get()>();

        $r8 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

     label09:
        $r2 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer504 = "[Lib Version] build:";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer504);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer500 = ", api:";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer500);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        varReplacer492 = ", min_api:";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer492);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer489 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer489, $r7);

        $z0 = staticinvoke <org.xwalk.core.XWalkEnvironment: boolean isDownloadMode()>();

     label11:
        if $z0 == 0 goto label20;

     label12:
        $z0 = staticinvoke <org.xwalk.core.XWalkEnvironment: boolean isDownloadModeUpdate()>();

     label13:
        if $z0 == 0 goto label20;

     label14:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean isEmpty()>();

     label15:
        if $z0 != 0 goto label20;

     label16:
        varReplacer486 = "22.52.561.4";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer486);

     label17:
        if $z0 != 0 goto label20;

     label18:
        varReplacer503 = 8;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer503;

     label19:
        varReplacer480 = 0;

        return varReplacer480;

     label20:
        $i2 = $r0.<org.xwalk.core.XWalkCoreWrapper: int mMinApiVersion>;

     label21:
        if $i2 <= $i1 goto label24;

     label22:
        varReplacer502 = 3;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer502;

     label23:
        varReplacer493 = 0;

        return varReplacer493;

     label24:
        $i1 = $r0.<org.xwalk.core.XWalkCoreWrapper: int mApiVersion>;

     label25:
        if $i1 >= $i0 goto label29;

     label26:
        varReplacer481 = 4;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer481;

     label27:
        varReplacer495 = 0;

        return varReplacer495;

     label28:
        $r1 := @caughtexception;

        varReplacer482 = "XWalkLib";

        varReplacer483 = "XWalk core not found";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer482, varReplacer483);

        varReplacer488 = 2;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer488;

        varReplacer501 = 0;

        return varReplacer501;

     label29:
        varReplacer497 = "XWalkLib";

        varReplacer498 = "XWalk core version matched";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer497, varReplacer498);

        varReplacer487 = 1;

        return varReplacer487;

     label30:
        $r9 := @caughtexception;

        goto label05;

        catch java.lang.RuntimeException from label01 to label02 with label28;
        catch java.lang.RuntimeException from label03 to label04 with label30;
        catch java.lang.RuntimeException from label06 to label07 with label28;
        catch java.lang.RuntimeException from label08 to label09 with label28;
        catch java.lang.RuntimeException from label10 to label11 with label28;
        catch java.lang.RuntimeException from label12 to label13 with label28;
        catch java.lang.RuntimeException from label14 to label15 with label28;
        catch java.lang.RuntimeException from label16 to label17 with label28;
        catch java.lang.RuntimeException from label18 to label19 with label28;
        catch java.lang.RuntimeException from label20 to label21 with label28;
        catch java.lang.RuntimeException from label22 to label23 with label28;
        catch java.lang.RuntimeException from label24 to label25 with label28;
        catch java.lang.RuntimeException from label26 to label27 with label28;
    }

    public static void dockXWalkCore()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;

        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        staticinvoke <junit.framework.Assert: void assertNotNull(java.lang.Object)>($r0);

        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        staticinvoke <junit.framework.Assert: void assertNull(java.lang.Object)>($r0);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("XWalkLib", "Dock xwalk core");

        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance> = $r0;

        <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance> = null;

        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: void initCoreBridge()>();

        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: void initXWalkView()>();

        return;
    }

    private boolean findDownloadedCore()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        android.content.Context $r1;
        java.io.File $r2;
        java.lang.String $r3, $r5, $r6, varReplacer864, varReplacer867, varReplacer872, varReplacer873, varReplacer874;
        java.lang.StringBuilder $r4;
        java.lang.ClassLoader $r7;
        dalvik.system.DexClassLoader $r8;
        boolean $z0;
        int varReplacer865, varReplacer866, varReplacer868, varReplacer869, varReplacer871;
        null_type varReplacer870;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mWrapperContext>;

        varReplacer864 = "extracted_xwalkcore";

        varReplacer865 = 0;

        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getDir(java.lang.String,int)>(varReplacer864, varReplacer865);

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = <java.io.File: java.lang.String separator>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer874 = "classes.dex";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer874);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mWrapperContext>;

        varReplacer867 = "dex";

        varReplacer868 = 0;

        $r2 = virtualinvoke $r1.<android.content.Context: java.io.File getDir(java.lang.String,int)>(varReplacer867, varReplacer868);

        $r6 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $r7 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        $r8 = new dalvik.system.DexClassLoader;

        specialinvoke $r8.<dalvik.system.DexClassLoader: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.ClassLoader)>($r5, $r6, $r3, $r7);

        $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.ClassLoader mBridgeLoader> = $r8;

        $z0 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: boolean checkCoreVersion()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: boolean checkCoreArchitecture()>();

        if $z0 != 0 goto label2;

     label1:
        varReplacer870 = null;

        $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.ClassLoader mBridgeLoader> = varReplacer870;

        varReplacer871 = 0;

        return varReplacer871;

     label2:
        varReplacer872 = "XWalkLib";

        varReplacer873 = "Running in downloaded mode";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer872, varReplacer873);

        varReplacer869 = 1;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer869;

        varReplacer866 = 1;

        return varReplacer866;
    }

    private boolean findEmbeddedCore()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.lang.Class $r1;
        java.lang.ClassLoader $r2;
        boolean $z0;
        int varReplacer463, varReplacer467, varReplacer468;
        null_type varReplacer464, varReplacer469;
        java.lang.String varReplacer465, varReplacer466;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        varReplacer464 = null;

        $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext> = varReplacer464;

        $r1 = class "Lorg/xwalk/core/XWalkCoreWrapper;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.ClassLoader mBridgeLoader> = $r2;

        $z0 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: boolean checkCoreVersion()>();

        if $z0 == 0 goto label1;

        $z0 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: boolean checkCoreArchitecture()>();

        if $z0 != 0 goto label2;

     label1:
        varReplacer469 = null;

        $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.ClassLoader mBridgeLoader> = varReplacer469;

        varReplacer467 = 0;

        return varReplacer467;

     label2:
        varReplacer465 = "XWalkLib";

        varReplacer466 = "Running in embedded mode";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer465, varReplacer466);

        varReplacer463 = 1;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer463;

        varReplacer468 = 1;

        return varReplacer468;
    }

    private boolean findSharedCore(java.lang.String)
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.lang.String $r1, varReplacer879, varReplacer880;
        boolean $z0;
        android.content.Context $r2;
        java.lang.ClassLoader $r3;
        int varReplacer875, varReplacer876, varReplacer877, varReplacer882;
        null_type varReplacer878, varReplacer881;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: boolean checkCorePackage(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        varReplacer876 = 0;

        return varReplacer876;

     label1:
        $r2 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.ClassLoader mBridgeLoader> = $r3;

        $z0 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: boolean checkCoreVersion()>();

        if $z0 == 0 goto label2;

        $z0 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: boolean checkCoreArchitecture()>();

        if $z0 != 0 goto label3;

     label2:
        varReplacer878 = null;

        $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext> = varReplacer878;

        varReplacer881 = null;

        $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.ClassLoader mBridgeLoader> = varReplacer881;

        varReplacer877 = 0;

        return varReplacer877;

     label3:
        varReplacer879 = "XWalkLib";

        varReplacer880 = "Running in shared mode";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer879, varReplacer880);

        varReplacer882 = 1;

        $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer882;

        varReplacer875 = 1;

        return varReplacer875;
    }

    public static int getCoreStatus()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        int i0, varReplacer221;

        nop;

        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        if $r0 == null goto label1;

        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        i0 = $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus>;

        return i0;

     label1:
        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        if $r0 != null goto label2;

        varReplacer221 = 0;

        return varReplacer221;

     label2:
        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sProvisionalInstance>;

        i0 = $r0.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus>;

        return i0;
    }

    public static org.xwalk.core.XWalkCoreWrapper getInstance()
    {
        org.xwalk.core.XWalkCoreWrapper r0;

        nop;

        r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        return r0;
    }

    public static void handlePostInit(java.lang.String)
    {
        java.lang.String $r0, $r4;
        java.lang.Object[] $r1;
        java.util.HashMap $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.Object $r5;
        java.util.LinkedList $r6;
        java.util.Iterator $r7;
        org.xwalk.core.XWalkCoreWrapper$ReservedAction $r8;
        java.lang.Class $r9;
        org.xwalk.core.ReflectMethod $r10;
        java.lang.Class[] $r11;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;

        $r2 = <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r0);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Post init xwalk core in ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("XWalkLib", $r4);

        $r2 = <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions>;

        $r5 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r0);

        $r6 = (java.util.LinkedList) $r5;

        $r7 = virtualinvoke $r6.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.xwalk.core.XWalkCoreWrapper$ReservedAction) $r5;

        $r5 = $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: java.lang.Object mObject>;

        if $r5 == null goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Init reserved object: ");

        $r5 = $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: java.lang.Object mObject>;

        $r9 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("XWalkLib", $r4);

        $r10 = new org.xwalk.core.ReflectMethod;

        $r5 = $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: java.lang.Object mObject>;

        $r11 = newarray (java.lang.Class)[0];

        specialinvoke $r10.<org.xwalk.core.ReflectMethod: void <init>(java.lang.Object,java.lang.String,java.lang.Class[])>($r5, "reflectionInit", $r11);

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r1);

        goto label2;

     label3:
        $r9 = $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: java.lang.Class mClass>;

        if $r9 == null goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Init reserved class: ");

        $r9 = $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: java.lang.Class mClass>;

        $r4 = virtualinvoke $r9.<java.lang.Class: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("XWalkLib", $r4);

        $r10 = new org.xwalk.core.ReflectMethod;

        $r9 = $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: java.lang.Class mClass>;

        $r11 = newarray (java.lang.Class)[0];

        specialinvoke $r10.<org.xwalk.core.ReflectMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>($r9, "reflectionInit", $r11);

        $r1 = newarray (java.lang.Object)[0];

        virtualinvoke $r10.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r1);

        goto label2;

     label4:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call reserved method: ");

        $r10 = $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: org.xwalk.core.ReflectMethod mMethod>;

        $r4 = virtualinvoke $r10.<org.xwalk.core.ReflectMethod: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("XWalkLib", $r4);

        $r1 = $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: java.lang.Object[] mArguments>;

        if $r1 == null goto label7;

        $i0 = 0;

     label5:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label7;

        $r5 = $r1[$i0];

        $z0 = $r5 instanceof org.xwalk.core.ReflectMethod;

        if $z0 == 0 goto label6;

        $r5 = $r1[$i0];

        $r10 = (org.xwalk.core.ReflectMethod) $r5;

        $r5 = virtualinvoke $r10.<org.xwalk.core.ReflectMethod: java.lang.Object invokeWithArguments()>();

        $r1[$i0] = $r5;

     label6:
        $i0 = $i0 + 1;

        goto label5;

     label7:
        $r10 = $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: org.xwalk.core.ReflectMethod mMethod>;

        virtualinvoke $r10.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r1);

        goto label2;

     label8:
        $r6 = <org.xwalk.core.XWalkCoreWrapper: java.util.LinkedList sReservedActivities>;

        virtualinvoke $r6.<java.util.LinkedList: boolean remove(java.lang.Object)>($r0);

        $r2 = <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r0);

        return;
    }

    public static void handlePreInit(java.lang.String)
    {
        java.lang.String $r0, $r3, varReplacer827, varReplacer828;
        org.xwalk.core.XWalkCoreWrapper $r1;
        java.lang.StringBuilder $r2;
        java.util.HashMap $r4;
        boolean $z0;
        java.util.LinkedList $r5;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        if $r1 == null goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer828 = "Pre init xwalk core in ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer828);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer827 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer827, $r3);

        $r4 = <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions>;

        $z0 = virtualinvoke $r4.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        $r4 = <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r0);

     label2:
        $r4 = <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions>;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r5);

        return;

     label3:
        $r5 = <org.xwalk.core.XWalkCoreWrapper: java.util.LinkedList sReservedActivities>;

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>($r0);

        goto label2;
    }

    public static void handleRuntimeError(java.lang.RuntimeException)
    {
        java.lang.RuntimeException $r0;
        org.xwalk.core.XWalkUpdater $r1;
        org.xwalk.core.XWalkCoreWrapper $r2;
        android.content.Context $r3;
        android.app.Activity $r4;
        org.xwalk.core.XWalkCoreWrapper$1 $r5;
        int varReplacer203;

        nop;

        $r0 := @parameter0: java.lang.RuntimeException;

        virtualinvoke $r0.<java.lang.RuntimeException: void printStackTrace()>();

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        varReplacer203 = 3;

        $r2.<org.xwalk.core.XWalkCoreWrapper: int mCoreStatus> = varReplacer203;

        $r2 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        $r3 = $r2.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mWrapperContext>;

        $r4 = (android.app.Activity) $r3;

        $r1 = new org.xwalk.core.XWalkUpdater;

        $r5 = new org.xwalk.core.XWalkCoreWrapper$1;

        specialinvoke $r5.<org.xwalk.core.XWalkCoreWrapper$1: void <init>(android.app.Activity)>($r4);

        specialinvoke $r1.<org.xwalk.core.XWalkUpdater: void <init>(org.xwalk.core.XWalkUpdater$XWalkUpdateListener,android.app.Activity)>($r5, $r4);

        virtualinvoke $r1.<org.xwalk.core.XWalkUpdater: boolean updateXWalkRuntime()>();

        return;
    }

    private byte[] hexStringToByteArray(java.lang.String)
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.lang.String $r1;
        byte $b0;
        boolean $z0;
        int $i1, $i2, $i4, varReplacer915, varReplacer917;
        byte[] $r2;
        char $c3;
        null_type varReplacer916;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i1 % 2;

        if $i1 == 0 goto label2;

     label1:
        varReplacer916 = null;

        return varReplacer916;

     label2:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = $i1 / 2;

        $r2 = newarray (byte)[$i1];

        $i1 = 0;

     label3:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label4;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        varReplacer915 = 16;

        $i2 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, varReplacer915);

        $i2 = $i2 << 4;

        $i4 = $i1 + 1;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        varReplacer917 = 16;

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, varReplacer917);

        $i2 = $i2 + $i4;

        $i4 = $i1 / 2;

        $b0 = (byte) $i2;

        $r2[$i4] = $b0;

        $i1 = $i1 + 2;

        goto label3;

     label4:
        return $r2;
    }

    private void initCoreBridge()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        org.xwalk.core.ReflectMethod $r1;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4;
        android.content.Context $r5;
        java.lang.String varReplacer470, varReplacer471, varReplacer472, varReplacer473;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        varReplacer471 = "XWalkLib";

        varReplacer472 = "Init core bridge";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer471, varReplacer472);

        varReplacer473 = "XWalkCoreBridge";

        $r2 = virtualinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.Class getBridgeClass(java.lang.String)>(varReplacer473);

        $r1 = new org.xwalk.core.ReflectMethod;

        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = class "Landroid/content/Context;";

        $r3[1] = class "Ljava/lang/Object;";

        varReplacer470 = "init";

        specialinvoke $r1.<org.xwalk.core.ReflectMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>($r2, varReplacer470, $r3);

        $r4 = newarray (java.lang.Object)[2];

        $r5 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext>;

        $r4[0] = $r5;

        $r4[1] = $r0;

        virtualinvoke $r1.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r4);

        return;
    }

    public static void initEmbeddedMode()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.util.LinkedList $r1;
        boolean $z0;
        java.lang.RuntimeException $r2;
        java.lang.String varReplacer452, varReplacer455, varReplacer456;
        null_type varReplacer453;
        int varReplacer454;

        nop;

        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        if $r0 != null goto label3;

        $r1 = <org.xwalk.core.XWalkCoreWrapper: java.util.LinkedList sReservedActivities>;

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        varReplacer455 = "XWalkLib";

        varReplacer456 = "Init embedded mode";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer455, varReplacer456);

        $r0 = new org.xwalk.core.XWalkCoreWrapper;

        varReplacer453 = null;

        varReplacer454 = -1;

        specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: void <init>(android.content.Context,int)>(varReplacer453, varReplacer454);

        $z0 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: boolean findEmbeddedCore()>();

        if $z0 != 0 goto label2;

        $r2 = new java.lang.RuntimeException;

        varReplacer452 = "Please have your activity extend XWalkActivity for shared mode";

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer452);

        throw $r2;

     label2:
        <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance> = $r0;

        $r0 = <org.xwalk.core.XWalkCoreWrapper: org.xwalk.core.XWalkCoreWrapper sInstance>;

        specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: void initCoreBridge()>();

     label3:
        return;
    }

    private void initXWalkView()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        org.xwalk.core.ReflectMethod $r1;
        java.lang.Class $r2;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4;
        android.content.Context $r5;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("XWalkLib", "Init xwalk view");

        $r2 = virtualinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.Class getBridgeClass(java.lang.String)>("XWalkViewDelegate");

        $r1 = new org.xwalk.core.ReflectMethod;

        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = class "Landroid/content/Context;";

        $r3[1] = class "Landroid/content/Context;";

        specialinvoke $r1.<org.xwalk.core.ReflectMethod: void <init>(java.lang.Class,java.lang.String,java.lang.Class[])>($r2, "init", $r3);

        $r4 = newarray (java.lang.Object)[2];

        $r5 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext>;

        $r4[0] = $r5;

        $r5 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mWrapperContext>;

        $r4[1] = $r5;

        virtualinvoke $r1.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r4);

        return;
    }

    public static void reserveReflectClass(java.lang.Class)
    {
        java.lang.Class $r0;
        java.util.LinkedList $r1;
        java.lang.Object $r2;
        java.lang.String $r3, $r5, varReplacer620, varReplacer621, varReplacer622;
        java.lang.StringBuilder $r4;
        java.util.HashMap $r6;
        org.xwalk.core.XWalkCoreWrapper$ReservedAction $r7;

        nop;

        $r0 := @parameter0: java.lang.Class;

        $r1 = <org.xwalk.core.XWalkCoreWrapper: java.util.LinkedList sReservedActivities>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object getLast()>();

        $r3 = (java.lang.String) $r2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer622 = "Reserve class ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer622);

        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer620 = " to ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer620);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer621 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer621, $r5);

        $r6 = <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions>;

        $r2 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r1 = (java.util.LinkedList) $r2;

        $r7 = new org.xwalk.core.XWalkCoreWrapper$ReservedAction;

        specialinvoke $r7.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: void <init>(java.lang.Class)>($r0);

        virtualinvoke $r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        return;
    }

    public static void reserveReflectMethod(org.xwalk.core.ReflectMethod)
    {
        org.xwalk.core.ReflectMethod $r0;
        java.util.LinkedList $r1;
        java.lang.Object $r2;
        java.lang.String $r3, $r5, varReplacer291, varReplacer292, varReplacer293;
        java.lang.StringBuilder $r4;
        java.util.HashMap $r6;
        org.xwalk.core.XWalkCoreWrapper$ReservedAction $r7;

        nop;

        $r0 := @parameter0: org.xwalk.core.ReflectMethod;

        $r1 = <org.xwalk.core.XWalkCoreWrapper: java.util.LinkedList sReservedActivities>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object getLast()>();

        $r3 = (java.lang.String) $r2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer292 = "Reserve method ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer292);

        $r5 = virtualinvoke $r0.<org.xwalk.core.ReflectMethod: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer291 = " to ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer291);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer293 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer293, $r5);

        $r6 = <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions>;

        $r2 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r1 = (java.util.LinkedList) $r2;

        $r7 = new org.xwalk.core.XWalkCoreWrapper$ReservedAction;

        specialinvoke $r7.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: void <init>(org.xwalk.core.ReflectMethod)>($r0);

        virtualinvoke $r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r7);

        return;
    }

    public static void reserveReflectObject(java.lang.Object)
    {
        java.lang.Object $r0, $r2;
        java.util.LinkedList $r1;
        java.lang.String $r3, $r6, varReplacer449, varReplacer450, varReplacer451;
        java.lang.StringBuilder $r4;
        java.lang.Class $r5;
        java.util.HashMap $r7;
        org.xwalk.core.XWalkCoreWrapper$ReservedAction $r8;

        nop;

        $r0 := @parameter0: java.lang.Object;

        $r1 = <org.xwalk.core.XWalkCoreWrapper: java.util.LinkedList sReservedActivities>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.lang.Object getLast()>();

        $r3 = (java.lang.String) $r2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer450 = "Reserve object ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer450);

        $r5 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        varReplacer449 = " to ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer449);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer451 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer451, $r6);

        $r7 = <org.xwalk.core.XWalkCoreWrapper: java.util.HashMap sReservedActions>;

        $r2 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r1 = (java.util.LinkedList) $r2;

        $r8 = new org.xwalk.core.XWalkCoreWrapper$ReservedAction;

        specialinvoke $r8.<org.xwalk.core.XWalkCoreWrapper$ReservedAction: void <init>(java.lang.Object)>($r0);

        virtualinvoke $r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        return;
    }

    private boolean verifyPackageInfo(android.content.pm.PackageInfo, java.lang.String, java.lang.String)
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        android.content.pm.PackageInfo $r1;
        java.lang.String $r2, $r3, varReplacer900, varReplacer904, varReplacer905, varReplacer906, varReplacer907, varReplacer908, varReplacer909, varReplacer910, varReplacer911, varReplacer912, varReplacer913, varReplacer914;
        android.content.pm.Signature[] $r4;
        java.security.MessageDigest $r5;
        byte[] $r6, $r11;
        java.lang.IllegalArgumentException $r7;
        java.lang.Throwable $r8;
        int $i0, $i1, varReplacer901, varReplacer902, varReplacer903;
        java.lang.StringBuilder $r9;
        android.content.pm.Signature $r10;
        boolean $z0;
        java.lang.NullPointerException $r12;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 := @parameter0: android.content.pm.PackageInfo;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = $r1.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        if $r4 != null goto label1;

        varReplacer907 = "XWalkLib";

        varReplacer908 = "No signature in package info";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer907, varReplacer908);

        varReplacer903 = 0;

        return varReplacer903;

     label1:
        varReplacer906 = "SHA-256";

        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer906);

     label2:
        varReplacer909 = "6fd3002c5ca9a1f55ed51e92233ed4626120c266efea9d9746058c995ece68c4";

        $r6 = specialinvoke $r0.<org.xwalk.core.XWalkCoreWrapper: byte[] hexStringToByteArray(java.lang.String)>(varReplacer909);

        if $r6 != null goto label5;

        $r7 = new java.lang.IllegalArgumentException;

        varReplacer912 = "Invalid hash code";

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer912);

        throw $r7;

     label3:
        $r8 := @caughtexception;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        varReplacer905 = "Invalid hash algorithm";

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer905);

        throw $r7;

     label5:
        $i0 = 0;

     label6:
        $r4 = $r1.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label9;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        varReplacer904 = "Checking signature ";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer904);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer900 = "XWalkLib";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer900, $r2);

        $r4 = $r1.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $r10 = $r4[$i0];

        $r11 = virtualinvoke $r10.<android.content.pm.Signature: byte[] toByteArray()>();

        $r11 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r11);

        $z0 = staticinvoke <java.security.MessageDigest: boolean isEqual(byte[],byte[])>($r11, $r6);

        if $z0 != 0 goto label7;

        varReplacer910 = "XWalkLib";

        varReplacer911 = "Hash code does not match";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer910, varReplacer911);

        $i0 = $i0 + 1;

        goto label6;

     label7:
        varReplacer913 = "XWalkLib";

        varReplacer914 = "Signature passed verification";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer913, varReplacer914);

        varReplacer901 = 1;

        return varReplacer901;

     label8:
        $r12 := @caughtexception;

        goto label4;

     label9:
        varReplacer902 = 0;

        return varReplacer902;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label8;
    }

    public java.lang.Class getBridgeClass(java.lang.String)
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.lang.String $r1, varReplacer478;
        java.lang.ClassLoader $r2;
        java.lang.StringBuilder $r3;
        java.lang.Class $r4;
        java.lang.ClassNotFoundException $r5;
        null_type varReplacer477;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<org.xwalk.core.XWalkCoreWrapper: java.lang.ClassLoader mBridgeLoader>;

        $r3 = new java.lang.StringBuilder;

     label1:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer478 = "org.xwalk.core.internal.";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer478);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        varReplacer477 = null;

        return varReplacer477;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public java.lang.Object getBridgeObject(java.lang.Object)
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.lang.Object $r1;
        org.xwalk.core.ReflectMethod $r2;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4;
        java.lang.RuntimeException $r5;
        null_type varReplacer554;
        java.lang.String varReplacer555;

        nop;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new org.xwalk.core.ReflectMethod;

     label1:
        $r3 = newarray (java.lang.Class)[0];

        varReplacer555 = "getBridge";

        specialinvoke $r2.<org.xwalk.core.ReflectMethod: void <init>(java.lang.Object,java.lang.String,java.lang.Class[])>($r1, varReplacer555, $r3);

        $r4 = newarray (java.lang.Object)[0];

        $r1 = virtualinvoke $r2.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r4);

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        varReplacer554 = null;

        return varReplacer554;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public java.lang.Object getWrapperObject(java.lang.Object)
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        java.lang.Object $r1;
        org.xwalk.core.ReflectMethod $r2;
        java.lang.Class[] $r3;
        java.lang.Object[] $r4;
        java.lang.RuntimeException $r5;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new org.xwalk.core.ReflectMethod;

     label1:
        $r3 = newarray (java.lang.Class)[0];

        specialinvoke $r2.<org.xwalk.core.ReflectMethod: void <init>(java.lang.Object,java.lang.String,java.lang.Class[])>($r1, "getWrapper", $r3);

        $r4 = newarray (java.lang.Object)[0];

        $r1 = virtualinvoke $r2.<org.xwalk.core.ReflectMethod: java.lang.Object invoke(java.lang.Object[])>($r4);

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        return null;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public boolean isSharedMode()
    {
        org.xwalk.core.XWalkCoreWrapper $r0;
        android.content.Context $r1;

        $r0 := @this: org.xwalk.core.XWalkCoreWrapper;

        $r1 = $r0.<org.xwalk.core.XWalkCoreWrapper: android.content.Context mBridgeContext>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }
}
