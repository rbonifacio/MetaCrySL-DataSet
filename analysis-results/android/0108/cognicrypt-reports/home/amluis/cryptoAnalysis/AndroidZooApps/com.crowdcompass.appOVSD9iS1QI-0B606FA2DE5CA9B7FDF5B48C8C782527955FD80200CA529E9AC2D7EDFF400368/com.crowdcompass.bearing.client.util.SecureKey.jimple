public abstract class com.crowdcompass.bearing.client.util.SecureKey extends java.lang.Object
{
    private static final java.lang.String TAG;
    protected com.crowdcompass.bearing.client.util.db.StorageManager storageManager;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        $r1 = class "Lcom/crowdcompass/bearing/client/util/SecureKey;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.crowdcompass.bearing.client.util.SecureKey: java.lang.String TAG> = $r0;

        return;
    }

    public void <init>()
    {
        com.crowdcompass.bearing.client.util.SecureKey $r0;

        nop;

        $r0 := @this: com.crowdcompass.bearing.client.util.SecureKey;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected byte[] generateKey(java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException
    {
        com.crowdcompass.bearing.client.util.SecureKey $r0;
        java.lang.String $r1, $r6;
        android.content.ContentValues $r2;
        com.crowdcompass.bearing.client.util.db.StorageManager $r3;
        com.crowdcompass.bearing.client.util.db.DatabaseQueryHelper $r4;
        java.lang.StringBuilder $r5;
        com.crowdcompass.bearing.client.'annotation'.DBContext$DBContextType $r7;
        android.database.Cursor $r8, $r9;
        boolean $z0;
        byte[] $r10;
        java.lang.Throwable $r11;

        $r0 := @this: com.crowdcompass.bearing.client.util.SecureKey;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.crowdcompass.bearing.client.util.SecureKey: com.crowdcompass.bearing.client.util.db.StorageManager storageManager>;

        if $r3 != null goto label01;

        $r3 = staticinvoke <com.crowdcompass.bearing.client.util.db.StorageManager: com.crowdcompass.bearing.client.util.db.StorageManager getInstance()>();

        $r0.<com.crowdcompass.bearing.client.util.SecureKey: com.crowdcompass.bearing.client.util.db.StorageManager storageManager> = $r3;

     label01:
        $r3 = $r0.<com.crowdcompass.bearing.client.util.SecureKey: com.crowdcompass.bearing.client.util.db.StorageManager storageManager>;

        $r4 = virtualinvoke $r3.<com.crowdcompass.bearing.client.util.db.StorageManager: com.crowdcompass.bearing.client.util.db.DatabaseQueryHelper getDatabaseQueryHelper()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CREATE TABLE IF NOT EXISTS ");

        $r6 = virtualinvoke $r0.<com.crowdcompass.bearing.client.util.SecureKey: java.lang.String getTableName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (`");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key_name");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` varchar(255) NOT NULL,`");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key_value");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("` blob NOT NULL)");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = <com.crowdcompass.bearing.client.'annotation'.DBContext$DBContextType: com.crowdcompass.bearing.client.'annotation'.DBContext$DBContextType EVENT>;

        virtualinvoke $r4.<com.crowdcompass.bearing.client.util.db.DatabaseQueryHelper: void execSQL(com.crowdcompass.bearing.client.'annotation'.DBContext$DBContextType,java.lang.String)>($r7, $r6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SELECT key_value FROM ");

        $r6 = virtualinvoke $r0.<com.crowdcompass.bearing.client.util.SecureKey: java.lang.String getTableName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" WHERE ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key_name");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = \'");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = null;

     label02:
        $r9 = virtualinvoke $r4.<com.crowdcompass.bearing.client.util.db.DatabaseQueryHelper: android.database.Cursor cursorForRawQuery(java.lang.String)>($r6);

     label03:
        $r8 = $r9;

        if $r9 == null goto label10;

     label04:
        $z0 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToFirst()>();

     label05:
        if $z0 == 0 goto label08;

     label06:
        $r10 = interfaceinvoke $r9.<android.database.Cursor: byte[] getBlob(int)>(0);

     label07:
        if $r9 == null goto label15;

        interfaceinvoke $r9.<android.database.Cursor: void close()>();

        return $r10;

     label08:
        $r10 = virtualinvoke $r0.<com.crowdcompass.bearing.client.util.SecureKey: byte[] getEncodedKey(java.lang.String)>($r1);

        $r2 = new android.content.ContentValues;

        specialinvoke $r2.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("key_name", $r1);

        virtualinvoke $r2.<android.content.ContentValues: void put(java.lang.String,byte[])>("key_value", $r10);

        $r7 = <com.crowdcompass.bearing.client.'annotation'.DBContext$DBContextType: com.crowdcompass.bearing.client.'annotation'.DBContext$DBContextType EVENT>;

        $r1 = virtualinvoke $r0.<com.crowdcompass.bearing.client.util.SecureKey: java.lang.String getTableName()>();

        virtualinvoke $r4.<com.crowdcompass.bearing.client.util.db.DatabaseQueryHelper: long insertOrThrow(com.crowdcompass.bearing.client.'annotation'.DBContext$DBContextType,java.lang.String,java.lang.String,android.content.ContentValues)>($r7, $r1, "key_value", $r2);

     label09:
        if $r9 == null goto label15;

        interfaceinvoke $r9.<android.database.Cursor: void close()>();

        return $r10;

     label10:
        $r1 = <com.crowdcompass.bearing.client.util.SecureKey: java.lang.String TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to generate cipher key, ");

        $r6 = virtualinvoke $r0.<com.crowdcompass.bearing.client.util.SecureKey: java.lang.String getTableName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cannot be queried.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.crowdcompass.util.CCLogger: void warn(java.lang.String,java.lang.String,java.lang.String)>($r1, "generateKey", $r6);

     label11:
        if $r9 == null goto label12;

        interfaceinvoke $r9.<android.database.Cursor: void close()>();

     label12:
        return null;

     label13:
        $r11 := @caughtexception;

        if $r8 == null goto label14;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

     label14:
        throw $r11;

     label15:
        return $r10;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }

    protected javax.crypto.Cipher getCipher(int, java.lang.String) throws javax.crypto.NoSuchPaddingException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException, java.io.UnsupportedEncodingException
    {
        com.crowdcompass.bearing.client.util.SecureKey $r0;
        int $i0, $i1;
        java.lang.String $r1, varReplacer7364, varReplacer7365;
        javax.crypto.spec.SecretKeySpec $r2;
        byte[] $r3;
        javax.crypto.Cipher $r4;
        null_type varReplacer7366;

        nop;

        $r0 := @this: com.crowdcompass.bearing.client.util.SecureKey;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<com.crowdcompass.bearing.client.util.SecureKey: byte[] generateKey(java.lang.String)>($r1);

        if $r3 == null goto label1;

        $i1 = lengthof $r3;

        if $i1 != 0 goto label2;

     label1:
        varReplacer7366 = null;

        return varReplacer7366;

     label2:
        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer7365 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7365);

        varReplacer7364 = "AES";

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7364);

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r2);

        return $r4;
    }

    protected byte[] getEncodedKey(java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException
    {
        com.crowdcompass.bearing.client.util.SecureKey $r0;
        java.lang.String $r1, varReplacer7371, varReplacer7372, varReplacer7373;
        java.security.SecureRandom $r2;
        java.lang.StringBuilder $r3;
        byte[] $r4;
        javax.crypto.KeyGenerator $r5;
        javax.crypto.SecretKey $r6;
        int varReplacer7374;

        nop;

        $r0 := @this: com.crowdcompass.bearing.client.util.SecureKey;

        $r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer7372 = "4OlV3s1mKNJxZJlSmmqdORs0RtbXv/xx1nnkJuNoXWs=";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7372);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer7373 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7373);

        varReplacer7371 = "AES";

        $r5 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer7371);

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>(byte[])>($r4);

        varReplacer7374 = 128;

        virtualinvoke $r5.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer7374, $r2);

        $r6 = virtualinvoke $r5.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r4 = interfaceinvoke $r6.<javax.crypto.SecretKey: byte[] getEncoded()>();

        return $r4;
    }

    protected abstract java.lang.String getTableName();
}
