public class com.crowdcompass.bearing.game.model.Player$SecurePlayer extends com.crowdcompass.bearing.client.util.SecureKey
{

    public void <init>()
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;

        nop;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        specialinvoke $r0.<com.crowdcompass.bearing.client.util.SecureKey: void <init>()>();

        return;
    }

    public java.lang.String decrypt(java.lang.String, java.lang.String)
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;
        java.lang.String $r1, $r2, varReplacer7451, varReplacer7452, varReplacer7453, varReplacer7454, varReplacer7456;
        java.io.ByteArrayOutputStream $r3;
        java.lang.Exception $r4;
        org.bouncycastle.util.encoders.Base64Encoder $r5;
        javax.crypto.Cipher $r6;
        byte[] $r7;
        null_type varReplacer7450, varReplacer7457;
        int varReplacer7455;

        nop;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label01:
        varReplacer7455 = 2;

        varReplacer7456 = "uuid";

        $r6 = virtualinvoke $r0.<com.crowdcompass.bearing.game.model.Player$SecurePlayer: javax.crypto.Cipher getCipher(int,java.lang.String)>(varReplacer7455, varReplacer7456);

     label02:
        if $r6 != null goto label05;

     label03:
        $r1 = staticinvoke <com.crowdcompass.bearing.game.model.Player: java.lang.String access$000()>();

        varReplacer7451 = "decrypt";

        varReplacer7452 = "Unable to decrypt value due to invalid cipher.";

        staticinvoke <com.crowdcompass.util.CCLogger: void warn(java.lang.String,java.lang.String,java.lang.String)>($r1, varReplacer7451, varReplacer7452);

     label04:
        varReplacer7450 = null;

        return varReplacer7450;

     label05:
        $r3 = new java.io.ByteArrayOutputStream;

     label06:
        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

     label07:
        $r5 = new org.bouncycastle.util.encoders.Base64Encoder;

     label08:
        specialinvoke $r5.<org.bouncycastle.util.encoders.Base64Encoder: void <init>()>();

        virtualinvoke $r5.<org.bouncycastle.util.encoders.Base64Encoder: int decode(java.lang.String,java.io.OutputStream)>($r2, $r3);

        $r7 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7);

     label09:
        $r1 = new java.lang.String;

     label10:
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r7);

     label11:
        return $r1;

     label12:
        $r4 := @caughtexception;

        $r1 = staticinvoke <com.crowdcompass.bearing.game.model.Player: java.lang.String access$000()>();

        varReplacer7453 = "decrypt";

        varReplacer7454 = "Unable to decrypt value due to unexpected error.";

        staticinvoke <com.crowdcompass.util.CCLogger: void error(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer7453, varReplacer7454, $r4);

        varReplacer7457 = null;

        return varReplacer7457;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label03 to label04 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public java.lang.String encrypt(java.lang.String, java.lang.String)
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;
        java.lang.String $r1, $r2, varReplacer7357, varReplacer7360, varReplacer7361, varReplacer7362, varReplacer7363;
        java.io.ByteArrayOutputStream $r3;
        java.lang.Exception $r4;
        org.bouncycastle.util.encoders.Base64Encoder $r5;
        javax.crypto.Cipher $r6;
        byte[] $r7;
        int $i0, varReplacer7355, varReplacer7356;
        null_type varReplacer7358, varReplacer7359;

        nop;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

     label01:
        varReplacer7355 = 1;

        $r6 = virtualinvoke $r0.<com.crowdcompass.bearing.game.model.Player$SecurePlayer: javax.crypto.Cipher getCipher(int,java.lang.String)>(varReplacer7355, $r1);

     label02:
        if $r6 != null goto label05;

     label03:
        $r1 = staticinvoke <com.crowdcompass.bearing.game.model.Player: java.lang.String access$000()>();

        varReplacer7362 = "encrypt";

        varReplacer7363 = "Unable to encrypt value due to invalid cipher.";

        staticinvoke <com.crowdcompass.util.CCLogger: void warn(java.lang.String,java.lang.String,java.lang.String)>($r1, varReplacer7362, varReplacer7363);

     label04:
        varReplacer7359 = null;

        return varReplacer7359;

     label05:
        varReplacer7357 = "UTF-8";

        $r7 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7357);

        $r7 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7);

     label06:
        $r3 = new java.io.ByteArrayOutputStream;

     label07:
        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

     label08:
        $r5 = new org.bouncycastle.util.encoders.Base64Encoder;

     label09:
        specialinvoke $r5.<org.bouncycastle.util.encoders.Base64Encoder: void <init>()>();

        $i0 = lengthof $r7;

        varReplacer7356 = 0;

        virtualinvoke $r5.<org.bouncycastle.util.encoders.Base64Encoder: int encode(byte[],int,int,java.io.OutputStream)>($r7, varReplacer7356, $i0, $r3);

        $r1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: java.lang.String toString()>();

     label10:
        return $r1;

     label11:
        $r4 := @caughtexception;

        $r1 = staticinvoke <com.crowdcompass.bearing.game.model.Player: java.lang.String access$000()>();

        varReplacer7360 = "encrypt";

        varReplacer7361 = "Unable to encrypt value due to unexpected error.";

        staticinvoke <com.crowdcompass.util.CCLogger: void error(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($r1, varReplacer7360, varReplacer7361, $r4);

        varReplacer7358 = null;

        return varReplacer7358;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    protected byte[] generateKey(java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;
        java.lang.String $r1;
        byte[] $r2;

        nop;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <com.crowdcompass.bearing.client.global.helper.PreferencesHelper: byte[] getPlayerKey(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r2 = virtualinvoke $r0.<com.crowdcompass.bearing.game.model.Player$SecurePlayer: byte[] getEncodedKey(java.lang.String)>($r1);

        staticinvoke <com.crowdcompass.bearing.client.global.helper.PreferencesHelper: void setPlayerKey(java.lang.String,byte[])>($r1, $r2);

     label1:
        return $r2;
    }

    protected java.lang.String getTableName()
    {
        com.crowdcompass.bearing.game.model.Player$SecurePlayer $r0;

        $r0 := @this: com.crowdcompass.bearing.game.model.Player$SecurePlayer;

        return "player";
    }
}
