public class com.crowdcompass.bearing.net.httpclient.OkHttpStack extends com.android.volley.toolbox.HurlStack
{
    private final com.squareup.okhttp.OkUrlFactory mFactory;

    public void <init>()
    {
        com.crowdcompass.bearing.net.httpclient.OkHttpStack $r0;
        com.squareup.okhttp.OkHttpClient $r1;

        nop;

        $r0 := @this: com.crowdcompass.bearing.net.httpclient.OkHttpStack;

        $r1 = new com.squareup.okhttp.OkHttpClient;

        specialinvoke $r1.<com.squareup.okhttp.OkHttpClient: void <init>()>();

        specialinvoke $r0.<com.crowdcompass.bearing.net.httpclient.OkHttpStack: void <init>(com.squareup.okhttp.OkHttpClient)>($r1);

        return;
    }

    public void <init>(com.squareup.okhttp.OkHttpClient)
    {
        com.crowdcompass.bearing.net.httpclient.OkHttpStack $r0;
        com.squareup.okhttp.OkHttpClient $r1;
        java.lang.Throwable $r2, $r8;
        java.lang.NullPointerException $r3;
        javax.net.ssl.SSLContext $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        com.squareup.okhttp.OkUrlFactory $r6;
        java.lang.AssertionError $r7;
        java.lang.String varReplacer3210, varReplacer3214, varReplacer3215;
        null_type varReplacer3211, varReplacer3212, varReplacer3213;

        nop;

        $r0 := @this: com.crowdcompass.bearing.net.httpclient.OkHttpStack;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        specialinvoke $r0.<com.android.volley.toolbox.HurlStack: void <init>()>();

        if $r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        varReplacer3210 = "Client must not be null.";

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>(varReplacer3210);

        throw $r3;

     label1:
        varReplacer3215 = "TLS";

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3215);

        varReplacer3211 = null;

        varReplacer3212 = null;

        varReplacer3213 = null;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3211, varReplacer3211, varReplacer3211);

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        virtualinvoke $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory)>($r5);

     label2:
        $r6 = new com.squareup.okhttp.OkUrlFactory;

        specialinvoke $r6.<com.squareup.okhttp.OkUrlFactory: void <init>(com.squareup.okhttp.OkHttpClient)>($r1);

        $r0.<com.crowdcompass.bearing.net.httpclient.OkHttpStack: com.squareup.okhttp.OkUrlFactory mFactory> = $r6;

        return;

     label3:
        $r2 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        varReplacer3214 = "Could not establish encryption key";

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(varReplacer3214);

        throw $r7;

     label4:
        $r8 := @caughtexception;

        goto label2;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch java.security.KeyManagementException from label1 to label2 with label3;
    }

    protected java.net.HttpURLConnection createConnection(java.net.URL) throws java.io.IOException
    {
        com.crowdcompass.bearing.net.httpclient.OkHttpStack $r0;
        java.net.URL $r1;
        boolean $z0;
        com.squareup.okhttp.OkUrlFactory $r2;
        java.net.HttpURLConnection $r3;

        nop;

        $r0 := @this: com.crowdcompass.bearing.net.httpclient.OkHttpStack;

        $r1 := @parameter0: java.net.URL;

        $r2 = $r0.<com.crowdcompass.bearing.net.httpclient.OkHttpStack: com.squareup.okhttp.OkUrlFactory mFactory>;

        $z0 = $r2 instanceof com.squareup.okhttp.OkUrlFactory;

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke $r2.<com.squareup.okhttp.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL)>($r1);

        return $r3;

     label1:
        $r3 = staticinvoke <com.newrelic.agent.android.instrumentation.okhttp2.OkHttp2Instrumentation: java.net.HttpURLConnection open(com.squareup.okhttp.OkUrlFactory,java.net.URL)>($r2, $r1);

        return $r3;
    }
}
