public class com.cvent.pollingsdk.security.SecurityUtil extends java.lang.Object
{
    private static java.lang.String PRIVATE_KEY_ALGORITHM;
    private static javax.crypto.SecretKey key;

    static void <clinit>()
    {
        null_type varReplacer6335;
        java.lang.String varReplacer6336;

        nop;

        varReplacer6336 = "AES";

        <com.cvent.pollingsdk.security.SecurityUtil: java.lang.String PRIVATE_KEY_ALGORITHM> = varReplacer6336;

        varReplacer6335 = null;

        <com.cvent.pollingsdk.security.SecurityUtil: javax.crypto.SecretKey key> = varReplacer6335;

        return;
    }

    private void <init>()
    {
        com.cvent.pollingsdk.security.SecurityUtil $r0;

        $r0 := @this: com.cvent.pollingsdk.security.SecurityUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.InputStream getCipherInputStream(java.io.InputStream, com.cvent.pollingsdk.sync.Storage) throws java.security.spec.InvalidKeySpecException, com.cvent.pollingsdk.exception.FailedToSave, java.security.NoSuchAlgorithmException, java.io.IOException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException
    {
        java.io.InputStream $r0;
        com.cvent.pollingsdk.sync.Storage $r1;
        java.lang.String $r2;
        javax.crypto.Cipher $r3;
        javax.crypto.SecretKey $r4;
        javax.crypto.CipherInputStream $r5;
        int varReplacer6334;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: com.cvent.pollingsdk.sync.Storage;

        $r2 = <com.cvent.pollingsdk.security.SecurityUtil: java.lang.String PRIVATE_KEY_ALGORITHM>;

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2);

        $r4 = staticinvoke <com.cvent.pollingsdk.security.SecurityUtil: javax.crypto.SecretKey getKey(com.cvent.pollingsdk.sync.Storage)>($r1);

        varReplacer6334 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6334, $r4);

        $r5 = new javax.crypto.CipherInputStream;

        specialinvoke $r5.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r0, $r3);

        return $r5;
    }

    public static java.io.OutputStream getCipherOutputStream(java.io.OutputStream, com.cvent.pollingsdk.sync.Storage) throws java.security.spec.InvalidKeySpecException, com.cvent.pollingsdk.exception.FailedToSave, java.security.NoSuchAlgorithmException, java.io.IOException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException
    {
        java.io.OutputStream $r0;
        com.cvent.pollingsdk.sync.Storage $r1;
        java.lang.String $r2;
        javax.crypto.Cipher $r3;
        javax.crypto.SecretKey $r4;
        javax.crypto.CipherOutputStream $r5;
        int varReplacer13982;

        nop;

        $r0 := @parameter0: java.io.OutputStream;

        $r1 := @parameter1: com.cvent.pollingsdk.sync.Storage;

        $r2 = <com.cvent.pollingsdk.security.SecurityUtil: java.lang.String PRIVATE_KEY_ALGORITHM>;

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2);

        $r4 = staticinvoke <com.cvent.pollingsdk.security.SecurityUtil: javax.crypto.SecretKey getKey(com.cvent.pollingsdk.sync.Storage)>($r1);

        varReplacer13982 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer13982, $r4);

        $r5 = new javax.crypto.CipherOutputStream;

        specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r0, $r3);

        return $r5;
    }

    static javax.crypto.SecretKey getKey(com.cvent.pollingsdk.sync.Storage) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, java.io.IOException, com.cvent.pollingsdk.exception.FailedToSave
    {
        com.cvent.pollingsdk.sync.Storage $r0;
        javax.crypto.spec.SecretKeySpec $r1;
        java.security.SecureRandom $r2;
        javax.crypto.SecretKey $r3;
        boolean $z0;
        byte[] $r4;
        java.lang.String $r5;
        javax.crypto.KeyGenerator $r6;
        java.lang.Throwable $r7;
        int varReplacer6337;

        nop;

        $r0 := @parameter0: com.cvent.pollingsdk.sync.Storage;

        entermonitor class "Lcom/cvent/pollingsdk/security/SecurityUtil;";

     label1:
        $r3 = <com.cvent.pollingsdk.security.SecurityUtil: javax.crypto.SecretKey key>;

        if $r3 != null goto label2;

        $r3 = <com.cvent.pollingsdk.security.SecurityUtil: javax.crypto.SecretKey key>;

        if $r3 != null goto label2;

        $z0 = virtualinvoke $r0.<com.cvent.pollingsdk.sync.Storage: boolean keyExists()>();

        if $z0 == 0 goto label4;

        $r4 = virtualinvoke $r0.<com.cvent.pollingsdk.sync.Storage: byte[] readKey()>();

        $r1 = new javax.crypto.spec.SecretKeySpec;

        $r5 = <com.cvent.pollingsdk.security.SecurityUtil: java.lang.String PRIVATE_KEY_ALGORITHM>;

        specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r5);

        <com.cvent.pollingsdk.security.SecurityUtil: javax.crypto.SecretKey key> = $r1;

     label2:
        $r3 = <com.cvent.pollingsdk.security.SecurityUtil: javax.crypto.SecretKey key>;

     label3:
        exitmonitor class "Lcom/cvent/pollingsdk/security/SecurityUtil;";

        return $r3;

     label4:
        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        $r5 = <com.cvent.pollingsdk.security.SecurityUtil: java.lang.String PRIVATE_KEY_ALGORITHM>;

        $r6 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r5);

        varReplacer6337 = 128;

        virtualinvoke $r6.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer6337, $r2);

        $r3 = virtualinvoke $r6.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        virtualinvoke $r0.<com.cvent.pollingsdk.sync.Storage: void storeKey(javax.crypto.SecretKey)>($r3);

        <com.cvent.pollingsdk.security.SecurityUtil: javax.crypto.SecretKey key> = $r3;

     label5:
        goto label2;

     label6:
        $r7 := @caughtexception;

        exitmonitor class "Lcom/cvent/pollingsdk/security/SecurityUtil;";

        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }
}
