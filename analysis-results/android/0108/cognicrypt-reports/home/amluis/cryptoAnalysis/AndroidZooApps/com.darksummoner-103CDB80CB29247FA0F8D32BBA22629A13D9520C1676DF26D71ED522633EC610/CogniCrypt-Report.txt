Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r4)
		Method: <jp.co.cyberz.fox.a.a.h: java.lang.String a(java.lang.String,jp.co.cyberz.fox.a.a.h$a)>
		SHA-256: 5f49b1ea9dcac7e1a512a22d205da3671f1ab1ad75899d7170160132772227cc
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.darksummoner.util.crypto.Rsa: byte[] crypto(byte[],java.security.Key,int)>
		SHA-256: b71b0f55d0821074d9075abbfdff343e3602cb50318379b1fa7cd4d0bee1abe5
		Secure: false
	Object:
		Variable: r10
		Type: java.security.KeyPair
		Statement: specialinvoke r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r7)
		Method: <com.darksummoner.util.crypto.Rsa: java.security.KeyPair getKeyPair(byte[],byte[])>
		SHA-256: 27be101cb2ef47619b900d15bc4b32ab518e0863878a8a17385535bc963e5ec1
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, $r2)
		Method: <jp.co.dimage.android.l: java.lang.String a(java.lang.String)>
		SHA-256: d6e61d14cac8e97213c0ffae91fb308f5444d1470375e4961e482f1da74fdf70
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <jp.co.cyberz.fox.a.a.h: java.lang.String a(java.lang.String)>
		SHA-256: dca607a2acf8c838b042758aaf4f07c5c1a125bc80b3dc66996c601afa0cac32
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r4)
		Method: <jp.co.dimage.android.l: java.lang.String a(java.lang.String,jp.co.dimage.android.l$a)>
		SHA-256: e73ba951c78946e4a31971baeb0e9679d884c667009328aef5aee58d84449648
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,java.lang.String)>
		SHA-256: 2ed033a8add9f490d8176d7aeb150e8ad564257aa71bdac509f4d257c954e79
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3733)
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: java.lang.String MD5(java.lang.String)>
		SHA-256: 1db2785ec3d3bd8786d63e0d97d1576df7477b60f77d21de96cfb793a53704e7
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.a_tm.util.TextUtil: java.lang.String sha1(java.lang.String)>
		SHA-256: 3808ebfcc4af5d3e82f1ea48ac2f98d3210fe7c6d31b88cfccf3fd025d8c8fef
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <jp.co.cyberz.fox.a.a.h: java.lang.String a(java.lang.String)>
		SHA-256: 762303b49c068e49d9c8e09a213f143e3b8c19542e3457ba2af46f60dc0a49f9
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: void completeProfileRequest()>
		SHA-256: ac252b1ab4ac66a2185458f47cedcdb6230a984be7fe323f7fe5d59628922171
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <it.partytrack.sdk.compress.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 778469203bdc9e2f84de62c7efc6451e07c41f73b8b26fef9fecaf3c6c1bd359
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.dimage.android.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: f00db6b83b7c742f5252fd416c62074135df61de9de3637477ac1dcfc9e46e2
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.PublicKey
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.darksummoner.PreferenceManager: java.security.PublicKey getRsaPublicKey(android.content.Context)>
		SHA-256: bbf30fd4decd3a2dc86554b01d89ea9bc5a81f99e38772cc22d9c5af5ab1f0d8
		Secure: false
	Object:
		Variable: r17
		Type: java.security.SecureRandom
		Statement: specialinvoke r17.<java.security.SecureRandom: void <init>()>()
		Method: <it.partytrack.sdk.compress.f: void a()>
		SHA-256: 44753c26dd799f9d3600fd4661a015b209a5e91a83d2a29c013829950778973f
		Secure: true
	Object:
		Variable: r11
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer6850, varReplacer6851)
		Method: <com.darksummoner.util.crypto.Aes: javax.crypto.SecretKey generateSecretKey(android.content.Context)>
		SHA-256: 16a4b40f262a10886a2590d40fd1e95b662e7ce2a5cc9a6d1afc62ce2776b2b0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2301)
		Method: <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,java.lang.String)>
		SHA-256: ee31935a5ca1378ca8c8ca2090ff3bdbe1b6eaf9203de5a40ba2ee365e3f128c
		Secure: true
	Object:
		Variable: varReplacer6851
		Type: int
		Statement: specialinvoke r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer6850, varReplacer6851)
		Method: <com.darksummoner.util.crypto.Aes: javax.crypto.SecretKey generateSecretKey(android.content.Context)>
		SHA-256: 70e297303b2c1390e3ff4d39bfb5af294d1cf9a5fdbe63be8a306a460b76e8aa
		Secure: false
	Object:
		Variable: r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.darksummoner.util.crypto.Aes: byte[] crypto(byte[],java.security.Key,int)>
		SHA-256: 3a33337a04804e3fa3bb0745388ec00b3843e51c83a8eb135bb2bf05a6910bc5
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: java.lang.String MD5(java.lang.String)>
		SHA-256: 43c434ffffdabd955bdd6c52a3156d6145e75a5b7846c3144d4806615404d41f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer6956)
		Method: <com.darksummoner.util.crypto.Rsa: java.security.KeyPair generateKeyPair()>
		SHA-256: 7a0592dd9e5d8a3c0a5e5704948fd0ba4a2d6723c70fa667ffa317b34ab15ce1
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6846)
		Method: <com.darksummoner.util.crypto.Aes: byte[] crypto(byte[],java.security.Key,int)>
		SHA-256: f0f616051e374fe044efbf7510125e5213353eeddb21a7d8651e12c4b1a1e391
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, $r2)
		Method: <jp.co.cyberz.fox.a.a.h: java.lang.String a(java.lang.String)>
		SHA-256: a417da9f900bc2e27d4b1b7b16d25d01abb881a4a9f0bd2f10e63d9dae6b50df
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6847)
		Method: <com.darksummoner.util.crypto.Aes: javax.crypto.SecretKey generateSecretKey(android.content.Context)>
		SHA-256: c786d3195d374611dc507207a691adcb9cfca7b513db9d4447b27afa5d3aa327
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.PrivateKey
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.darksummoner.PreferenceManager: java.security.PrivateKey getRsaPrivateKey(android.content.Context)>
		SHA-256: 41fd5814cc8b2b6faa5dcad85424396980663cd0b437bf6f0d1a8961a55f80ef
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2517)
		Method: <jp.co.a_tm.util.TextUtil: java.lang.String sha1(java.lang.String)>
		SHA-256: f1da878587d352581752133f5354399f457f3d87f70c5e210a580b6109253bd1
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <jp.co.dimage.android.l: java.lang.String a(java.lang.String)>
		SHA-256: b5745cc70192ea58f1a0a2dc6dc3e1d7ddd357775eb8c115ff07f535093a65c6
		Secure: false
	Object:
		Variable: r6
		Type: java.security.spec.RSAKeyGenParameterSpec
		Statement: specialinvoke r6.<java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>($i0, $r1)
		Method: <com.darksummoner.util.crypto.Rsa: java.security.KeyPair generateKeyPair()>
		SHA-256: 693b5e6938d68b15393555d99ebc02fb1c4451b569c1c0c55dd8abc605dd94e9
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6538)
		Method: <jp.co.dimage.android.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: cb4bce49bf6be7814a4835bbe0ef3ff1049719d905596479e260503b53933cfd
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <jp.co.dimage.android.l: java.lang.String a(java.lang.String,jp.co.dimage.android.l$a)>
		SHA-256: 367f7b43982cf30a16730b57ba5e8f1204ab070826dfb0a0be9980e0c05ba54e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tapjoy.TapjoyUtil: java.lang.String hashAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: 82ce3325174a18c8f51707f43fef3c3abf6757a9a6144e5d702eafb0a5468b05
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.darksummoner.util.crypto.Rsa: java.security.KeyPair generateKeyPair()>
		SHA-256: 79c1a6841b79b619d185a0613372c774ad0afb624877296ae79ca658fdaff3b1
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <jp.co.cyberz.fox.a.a.h: java.lang.String a(java.lang.String,jp.co.cyberz.fox.a.a.h$a)>
		SHA-256: a0ab94073c3320532595b54b998c98da568eb74a13a1d1a9e4c1cf5504cf23fc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4286)
		Method: <com.deviceinsight.android.DeviceInsightUtil: java.lang.String sha1(byte[])>
		SHA-256: 8d330a8c33e1ddcad5b70a3627b09591a888e94d1da22bf955e2c20d5dca468a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r4)
		Method: <jp.co.dimage.android.l: java.lang.String a(java.lang.String,jp.co.dimage.android.l$a)>
		SHA-256: a1e34abd157acfc0e622ef1df3df00668e65b8dffadceed28d82008ac4d4a6d9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5265)
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: 73561e913a0d557e17222f454b74ac3f8a92498810c28ec92a91b1d7a13ecea0
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <jp.co.dimage.android.l: java.lang.String a(java.lang.String,jp.co.dimage.android.l$a)>
		SHA-256: a73f52b96b6d53214bab9441df8e89d8d386373d04a2ad82d2e692772faae066
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2300)
		Method: <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,java.lang.String)>
		SHA-256: 99d33ac65ef9fd70e655343df599f210ad253b6f9fdc2b70ff7fc3485ed678e3
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <it.partytrack.sdk.compress.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c63b74922f95b9ac587f8620c5cf68e2a27ba8d30d66393e4de224b5d0afb39
		Secure: true
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r4)
		Method: <jp.co.cyberz.fox.a.a.h: java.lang.String a(java.lang.String,jp.co.cyberz.fox.a.a.h$a)>
		SHA-256: 95313b2ca3933243f1d5bfa5638e4158d227fdf55144d1f020db19ef8eeffba3
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, $r2)
		Method: <jp.co.dimage.android.l: java.lang.String a(java.lang.String)>
		SHA-256: 5c8ecb77ce504a1223773ae0e06b52aafbeec047f71d6b55700eed27edd5189b
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: 2927e1a5cb224287b03f6dd515d016a63eb5cb0704288180ae31d42a6182fe4b
		Secure: true
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, $r2)
		Method: <jp.co.cyberz.fox.a.a.h: java.lang.String a(java.lang.String)>
		SHA-256: 43214b73d4dd259da09b38ef0ee67e0ac7dfba0ab335a713a8a08ce2bf3de776
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4315)
		Method: <it.partytrack.sdk.compress.f: void a()>
		SHA-256: 770b0acbf3535410199c06c8c1ed9e2b802ada58a9e5ef8fe78fbc997b7c952c
		Secure: false
	Object:
		Variable: varReplacer2300
		Type: java.lang.String
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2300)
		Method: <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,java.lang.String)>
		SHA-256: 72124ce4c588fadd386be9e626f90c3a5c79c3d268e074a3bbe82c4d58438749
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <com.darksummoner.util.crypto.Aes: javax.crypto.SecretKey generateSecretKey(android.content.Context)>
		SHA-256: 2ceaf4f9b38d6099578c2733ef7df0bcc93d47872fe7785bfe0f2356177e4a3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6942)
		Method: <com.darksummoner.util.crypto.Rsa: byte[] crypto(byte[],java.security.Key,int)>
		SHA-256: 9d96e215a196e37c2caa3cb2ef40015b4b916566c005e60b23dcca7d1306144e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.darksummoner.util.crypto.Aes: byte[] crypto(byte[],java.security.Key,int)>
		SHA-256: 4bbcc9643535617cf5bffc074c3fe056a3a48c59b33a2a4e6c89a91c48b205b4
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <jp.co.dimage.android.l: java.lang.String a(java.lang.String)>
		SHA-256: 8df7dffde6c66ba294083109b1798aac8995db6b767d5ef26b5ba2cbb4d7e750
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <jp.co.cyberz.fox.a.a.h: java.lang.String a(java.lang.String,jp.co.cyberz.fox.a.a.h$a)>
		SHA-256: e3f6d4bafd55e93788ee8162ee83f8f8dad89865f8650165da211c362d1d4c14
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.deviceinsight.android.DeviceInsightUtil: java.lang.String sha1(byte[])>
		SHA-256: 3dd08301d5cc98089d0e2962f43867ae0a5e908e3d17fdc22a55a4f0f8f3194c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3123)
		Method: <com.tapjoy.TapjoyUtil: java.lang.String hashAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: 783a0b2abd30f310851a83e8083a42e1f529f32a73c493dfce9990b2d50af624
		Secure: true

Findings in Java Class: jp.co.dimage.android.l

	 in Method: java.lang.String a(java.lang.String)
		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4477, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4477, $r1)


	 in Method: java.lang.String a(java.lang.String,jp.co.dimage.android.l$a)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4493, $r2)


Findings in Java Class: jp.co.cyberz.fox.a.a.h

	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, $r2)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5658, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5658, $r1)


	 in Method: java.lang.String a(java.lang.String,jp.co.cyberz.fox.a.a.h$a)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5791, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r4)


Findings in Java Class: com.darksummoner.util.crypto.Aes

	 in Method: javax.crypto.SecretKey generateSecretKey(android.content.Context)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #16a4b40f262a10886a2590d40fd1e95b662e7ce2a5cc9a6d1afc62ce2776b2b0)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer6850, varReplacer6851)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #16a4b40f262a10886a2590d40fd1e95b662e7ce2a5cc9a6d1afc62ce2776b2b0)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer6850, varReplacer6851)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #16a4b40f262a10886a2590d40fd1e95b662e7ce2a5cc9a6d1afc62ce2776b2b0)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer6850, varReplacer6851)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer6850, varReplacer6851)


	 in Method: byte[] crypto(byte[],java.security.Key,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r1, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.darksummoner.util.crypto.Rsa

	 in Method: byte[] crypto(byte[],java.security.Key,int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9d96e215a196e37c2caa3cb2ef40015b4b916566c005e60b23dcca7d1306144e)
			First parameter (with value "RSA/NONE/OAEPPadding") should be any of RSA/{ECB, Empty String}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6942)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9d96e215a196e37c2caa3cb2ef40015b4b916566c005e60b23dcca7d1306144e)
			First parameter (with value "RSA/NONE/OAEPPadding") should be any of RSA/{ECB, Empty String}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6942)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6940, $r1)


	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r0)


Findings in Java Class: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization

	 in Method: java.lang.String generateSignature(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2300)


Findings in Java Class: it.partytrack.sdk.compress.f

	 in Method: void a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4303, r19, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4303, r19, $r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 52

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 2
	ConstraintError: 3
	NeverTypeOfError: 1
	RequiredPredicateError: 17
	IncompleteOperationError: 1
=====================================================================