public final class it.partytrack.sdk.compress.f extends java.lang.Object
{
    int a;
    java.lang.String a;
    private java.util.Map a;
    java.lang.String b;
    private java.lang.String c;

    public void <init>(java.lang.String, java.util.Map)
    {
        it.partytrack.sdk.compress.f $r0;
        java.lang.String $r1;
        java.util.Map $r2;

        nop;

        $r0 := @this: it.partytrack.sdk.compress.f;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.util.Map;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<it.partytrack.sdk.compress.f: java.lang.String c> = $r1;

        $r0.<it.partytrack.sdk.compress.f: java.util.Map a> = $r2;

        return;
    }

    private static java.lang.String a(java.util.List)
    {
        java.util.List $r0;
        java.lang.StringBuilder $r1, $r3;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        java.lang.String $r4, varReplacer4321, varReplacer4322, varReplacer4323, varReplacer4324, varReplacer4325;
        java.lang.Object $r5;
        org.apache.http.NameValuePair $r6;

        nop;

        $r0 := @parameter0: java.util.List;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $z0 = 1;

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        varReplacer4324 = "post params: ";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4324);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;

     label2:
        $r5 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.apache.http.NameValuePair) $r5;

        if $z0 == 0 goto label4;

        $z0 = 0;

     label3:
        $r4 = interfaceinvoke $r6.<org.apache.http.NameValuePair: java.lang.String getName()>();

        varReplacer4321 = "UTF-8";

        $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, varReplacer4321);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer4322 = "=";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4322);

        $r4 = interfaceinvoke $r6.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        varReplacer4323 = "UTF-8";

        $r4 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r4, varReplacer4323);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        goto label1;

     label4:
        varReplacer4325 = "&";

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4325);

        goto label3;
    }

    private java.net.URL a()
    {
        it.partytrack.sdk.compress.f $r0;
        java.util.Locale $r1;
        java.lang.String $r2, varReplacer4319;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.Throwable $r4;
        java.net.URL r5;
        java.net.MalformedURLException r6;
        null_type varReplacer4318;

        nop;

        $r0 := @this: it.partytrack.sdk.compress.f;

        $z0 = <it.partytrack.sdk.compress.d: boolean a>;

        if $z0 != 0 goto label5;

        $r2 = "http";

     label1:
        r5 = new java.net.URL;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = $r2;

        $r3[1] = "action.adzcore.com";

        $r2 = $r0.<it.partytrack.sdk.compress.f: java.lang.String c>;

        $r3[2] = $r2;

     label2:
        varReplacer4319 = "%s://%s%s";

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, varReplacer4319, $r3);

        specialinvoke r5.<java.net.URL: void <init>(java.lang.String)>($r2);

     label3:
        return r5;

     label4:
        $r4 := @caughtexception;

        r6 = (java.net.MalformedURLException) $r4;

        virtualinvoke r6.<java.net.MalformedURLException: void printStackTrace()>();

        varReplacer4318 = null;

        return varReplacer4318;

     label5:
        $r2 = "https";

        goto label1;

        catch java.net.MalformedURLException from label2 to label3 with label4;
    }

    private void a(java.io.InputStream, java.lang.String)
    {
        it.partytrack.sdk.compress.f $r0;
        java.io.InputStream $r1;
        java.lang.String $r2;
        java.lang.StringBuilder $r3, r8;
        int $i0;
        java.io.BufferedReader $r4, r7;
        java.lang.Throwable $r5;
        java.io.InputStreamReader r6;
        java.io.IOException r9;

        nop;

        $r0 := @this: it.partytrack.sdk.compress.f;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        $i0 = $r0.<it.partytrack.sdk.compress.f: int a>;

        if $i0 != 200 goto label7;

        r6 = new java.io.InputStreamReader;

        specialinvoke r6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1);

        r7 = new java.io.BufferedReader;

        $r4 = r7;

        specialinvoke r7.<java.io.BufferedReader: void <init>(java.io.Reader)>(r6);

        r8 = new java.lang.StringBuilder;

        $r3 = r8;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r2 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

     label2:
        if $r2 != null goto label4;

     label3:
        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<it.partytrack.sdk.compress.f: java.lang.String b> = $r2;

        return;

     label4:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label5:
        goto label1;

     label6:
        $r5 := @caughtexception;

        r9 = (java.io.IOException) $r5;

        virtualinvoke r9.<java.io.IOException: void printStackTrace()>();

        goto label3;

     label7:
        $i0 = $r0.<it.partytrack.sdk.compress.f: int a>;

        if $i0 != 302 goto label8;

        $r0.<it.partytrack.sdk.compress.f: java.lang.String a> = $r2;

     label8:
        return;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    private void a(java.io.OutputStream)
    {
        it.partytrack.sdk.compress.f $r0;
        java.io.OutputStream $r1;
        java.util.ArrayList $r2, $r5, r13;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator $r6;
        boolean $z0;
        java.io.BufferedWriter $r7, r15;
        java.io.OutputStreamWriter $r8, r14;
        java.lang.String $r9, $r11, varReplacer4320;
        java.lang.Object $r10;
        java.lang.Throwable $r12;
        org.apache.http.message.BasicNameValuePair r16;
        java.io.IOException r17;

        nop;

        $r0 := @this: it.partytrack.sdk.compress.f;

        $r1 := @parameter0: java.io.OutputStream;

        $r5 = new java.util.ArrayList;

        $r2 = $r5;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r3 = $r0.<it.partytrack.sdk.compress.f: java.util.Map a>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        r13 = new java.util.ArrayList;

        specialinvoke r13.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r6 = virtualinvoke r13.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        r15 = new java.io.BufferedWriter;

        $r7 = r15;

        r14 = new java.io.OutputStreamWriter;

        $r8 = r14;

     label2:
        varReplacer4320 = "UTF-8";

        specialinvoke r14.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r1, varReplacer4320);

        specialinvoke r15.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r8);

        $r9 = staticinvoke <it.partytrack.sdk.compress.f: java.lang.String a(java.util.List)>($r2);

        virtualinvoke $r7.<java.io.BufferedWriter: void write(java.lang.String)>($r9);

        virtualinvoke $r7.<java.io.BufferedWriter: void close()>();

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label3:
        return;

     label4:
        $r10 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.String) $r10;

        r16 = new org.apache.http.message.BasicNameValuePair;

        $r3 = $r0.<it.partytrack.sdk.compress.f: java.util.Map a>;

        $r10 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.String) $r10;

        specialinvoke r16.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>($r9, $r11);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r16);

        goto label1;

     label5:
        $r12 := @caughtexception;

        r17 = (java.io.IOException) $r12;

        virtualinvoke r17.<java.io.IOException: void printStackTrace()>();

        return;

        catch java.io.IOException from label2 to label3 with label5;
    }

    final void a()
    {
        it.partytrack.sdk.compress.f $r0;
        java.security.SecureRandom $r1, r17;
        java.net.URL $r2;
        java.lang.String $r3, varReplacer4301, varReplacer4305, varReplacer4306, varReplacer4310, varReplacer4313, varReplacer4315;
        boolean $z0;
        java.lang.Object[] $r4;
        javax.net.ssl.SSLContext $r5;
        java.net.URLConnection $r6;
        javax.net.ssl.HttpsURLConnection $r7;
        javax.net.ssl.SSLSocketFactory $r8;
        it.partytrack.sdk.compress.h $r9, r18;
        java.io.OutputStream $r10;
        int $i0, varReplacer4302, varReplacer4304, varReplacer4307, varReplacer4308, varReplacer4309, varReplacer4311, varReplacer4312, varReplacer4314, varReplacer4316, varReplacer4317;
        java.io.InputStream $r11;
        java.lang.Throwable $r12, $r13, $r14;
        java.net.HttpURLConnection $r15;
        it.partytrack.sdk.compress.g r16;
        javax.net.ssl.TrustManager[] r19;
        java.security.KeyManagementException r20;
        java.io.IOException r21;
        java.security.NoSuchAlgorithmException r22;
        null_type varReplacer4303;

        nop;

        $r0 := @this: it.partytrack.sdk.compress.f;

        $r2 = specialinvoke $r0.<it.partytrack.sdk.compress.f: java.net.URL a()>();

        if $r2 != null goto label01;

        return;

     label01:
        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getProtocol()>();

        varReplacer4305 = "https";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer4305);

     label02:
        if $z0 == 0 goto label24;

        $r4 = newarray (javax.net.ssl.TrustManager)[1];

        r16 = new it.partytrack.sdk.compress.g;

     label03:
        specialinvoke r16.<it.partytrack.sdk.compress.g: void <init>(it.partytrack.sdk.compress.f)>($r0);

     label04:
        $r4[0] = r16;

     label05:
        varReplacer4315 = "TLS";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4315);

     label06:
        r17 = new java.security.SecureRandom;

        $r1 = r17;

     label07:
        specialinvoke r17.<java.security.SecureRandom: void <init>()>();

     label08:
        r19 = (javax.net.ssl.TrustManager[]) $r4;

     label09:
        varReplacer4303 = null;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4303, r19, $r1);

        $r6 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

     label10:
        $r7 = (javax.net.ssl.HttpsURLConnection) $r6;

     label11:
        $r8 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r8);

     label12:
        r18 = new it.partytrack.sdk.compress.h;

        $r9 = r18;

     label13:
        specialinvoke r18.<it.partytrack.sdk.compress.h: void <init>(it.partytrack.sdk.compress.f)>($r0);

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r9);

        varReplacer4301 = "POST";

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>(varReplacer4301);

        varReplacer4309 = 10000;

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>(varReplacer4309);

        varReplacer4304 = 10000;

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setConnectTimeout(int)>(varReplacer4304);

        varReplacer4311 = 0;

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setInstanceFollowRedirects(boolean)>(varReplacer4311);

        varReplacer4302 = 1;

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setDoInput(boolean)>(varReplacer4302);

        varReplacer4307 = 1;

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>(varReplacer4307);

        $r10 = virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r0.<it.partytrack.sdk.compress.f: void a(java.io.OutputStream)>($r10);

        $i0 = virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: int getResponseCode()>();

     label14:
        $r0.<it.partytrack.sdk.compress.f: int a> = $i0;

     label15:
        $r11 = virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: java.io.InputStream getInputStream()>();

        varReplacer4310 = "Location";

        $r3 = virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: java.lang.String getHeaderField(java.lang.String)>(varReplacer4310);

        specialinvoke $r0.<it.partytrack.sdk.compress.f: void a(java.io.InputStream,java.lang.String)>($r11, $r3);

     label16:
        return;

     label17:
        $r12 := @caughtexception;

        r20 = (java.security.KeyManagementException) $r12;

     label18:
        virtualinvoke r20.<java.security.KeyManagementException: void printStackTrace()>();

     label19:
        return;

     label20:
        $r13 := @caughtexception;

        r21 = (java.io.IOException) $r13;

        virtualinvoke r21.<java.io.IOException: void printStackTrace()>();

        return;

     label21:
        $r14 := @caughtexception;

        r22 = (java.security.NoSuchAlgorithmException) $r14;

     label22:
        virtualinvoke r22.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label23:
        return;

     label24:
        $r6 = virtualinvoke $r2.<java.net.URL: java.net.URLConnection openConnection()>();

     label25:
        $r15 = (java.net.HttpURLConnection) $r6;

     label26:
        varReplacer4306 = "POST";

        virtualinvoke $r15.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(varReplacer4306);

        varReplacer4317 = 10000;

        virtualinvoke $r15.<java.net.HttpURLConnection: void setReadTimeout(int)>(varReplacer4317);

        varReplacer4314 = 10000;

        virtualinvoke $r15.<java.net.HttpURLConnection: void setConnectTimeout(int)>(varReplacer4314);

        varReplacer4316 = 0;

        virtualinvoke $r15.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(varReplacer4316);

        varReplacer4308 = 1;

        virtualinvoke $r15.<java.net.HttpURLConnection: void setDoInput(boolean)>(varReplacer4308);

        varReplacer4312 = 1;

        virtualinvoke $r15.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer4312);

        $r10 = virtualinvoke $r15.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r0.<it.partytrack.sdk.compress.f: void a(java.io.OutputStream)>($r10);

        $i0 = virtualinvoke $r15.<java.net.HttpURLConnection: int getResponseCode()>();

     label27:
        $r0.<it.partytrack.sdk.compress.f: int a> = $i0;

     label28:
        $r11 = virtualinvoke $r15.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        varReplacer4313 = "Location";

        $r3 = virtualinvoke $r15.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>(varReplacer4313);

        specialinvoke $r0.<it.partytrack.sdk.compress.f: void a(java.io.InputStream,java.lang.String)>($r11, $r3);

     label29:
        return;

        catch java.io.IOException from label01 to label02 with label20;
        catch java.io.IOException from label03 to label04 with label20;
        catch java.security.KeyManagementException from label05 to label06 with label17;
        catch java.security.KeyManagementException from label07 to label08 with label17;
        catch java.security.KeyManagementException from label09 to label10 with label17;
        catch java.security.KeyManagementException from label11 to label12 with label17;
        catch java.security.KeyManagementException from label13 to label14 with label17;
        catch java.security.KeyManagementException from label15 to label16 with label17;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label21;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label21;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label21;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label21;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label21;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label21;
        catch java.io.IOException from label05 to label06 with label20;
        catch java.io.IOException from label07 to label08 with label20;
        catch java.io.IOException from label09 to label10 with label20;
        catch java.io.IOException from label11 to label12 with label20;
        catch java.io.IOException from label13 to label14 with label20;
        catch java.io.IOException from label15 to label16 with label20;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label22 to label23 with label20;
        catch java.io.IOException from label24 to label25 with label20;
        catch java.io.IOException from label26 to label27 with label20;
        catch java.io.IOException from label28 to label29 with label20;
    }
}
