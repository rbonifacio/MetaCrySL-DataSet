public class jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization extends java.lang.Object implements java.io.Serializable
{
    private static final java.lang.String ALGORITHM;
    private static final java.lang.String O_AUTH_VERSION;
    private static final java.lang.String SIGNATURE_METHOD;
    private static final long serialVersionUID;
    private jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken;
    private java.lang.String mConsumerKey;
    private java.lang.String mConsumerSecret;

    public void <init>(java.lang.String, java.lang.String)
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        java.lang.String $r1, $r2;
        null_type varReplacer2170, varReplacer2171, varReplacer2172;

        nop;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer2171 = null;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken> = varReplacer2171;

        varReplacer2170 = null;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerKey> = varReplacer2170;

        varReplacer2172 = null;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerSecret> = varReplacer2172;

        specialinvoke $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: void init(java.lang.String,java.lang.String)>($r1, $r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, jp.co.a_tm.jakomo.jakomo4j.http.AccessToken)
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        java.lang.String $r1, $r2;
        jp.co.a_tm.jakomo.jakomo4j.http.AccessToken $r3;
        null_type varReplacer2765, varReplacer2766, varReplacer2767;

        nop;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer2767 = null;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken> = varReplacer2767;

        varReplacer2765 = null;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerKey> = varReplacer2765;

        varReplacer2766 = null;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerSecret> = varReplacer2766;

        specialinvoke $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: void init(java.lang.String,java.lang.String,jp.co.a_tm.jakomo.jakomo4j.http.AccessToken)>($r1, $r2, $r3);

        return;
    }

    private static java.lang.String generateBaseString(jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod, java.lang.String, jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[])
    {
        jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod $r0;
        java.lang.String $r1, $r5, varReplacer2293, varReplacer2294, varReplacer2295, varReplacer2296;
        jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] $r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r4;
        jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter $r6;

        nop;

        $r0 := @parameter0: jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i1 = 0;

        $i0 = lengthof $r2;

     label1:
        if $i1 < $i0 goto label2;

        $r4 = new java.lang.StringBuilder;

        $r5 = virtualinvoke $r0.<jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod: java.lang.String getName()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        varReplacer2294 = "&";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2294);

        $r1 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String tryUrlEncode(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2295 = "&";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2295);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String tryUrlEncode(java.lang.String)>($r1);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r4 = new java.lang.StringBuilder;

        $r6 = $r2[$i1];

        $r5 = virtualinvoke $r6.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: java.lang.String getName()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        varReplacer2293 = "=";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2293);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r6 = $r2[$i1];

        $r5 = virtualinvoke $r6.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: java.lang.String getValue()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $i2 = $i0 + -1;

        if $i1 == $i2 goto label3;

        varReplacer2296 = "&";

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2296);

     label3:
        $i1 = $i1 + 1;

        goto label1;
    }

    private static java.lang.String generateNonce(int)
    {
        int $i0, $i1, $i2, $i3, varReplacer2345;
        java.util.Random $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        char $c4;

        nop;

        $i0 := @parameter0: int;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        varReplacer2345 = 10;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>(varReplacer2345);

        $i1 = 0;

        $r2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

     label1:
        if $i1 < 10 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $i3 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>($i2);

        $r2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $i1 = $i1 + 1;

        goto label1;
    }

    private static java.lang.String generateSignature(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer2300, varReplacer2301;
        javax.crypto.spec.SecretKeySpec $r2, r7;
        javax.crypto.Mac $r3;
        byte[] $r4;
        java.lang.Throwable $r5, $r6;
        java.lang.RuntimeException r8;
        java.security.NoSuchAlgorithmException r9;
        java.security.InvalidKeyException r10;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        varReplacer2301 = "HmacSHA1";

        $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2301);

     label2:
        r7 = new javax.crypto.spec.SecretKeySpec;

        $r2 = r7;

     label3:
        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer2300 = "HmacSHA1";

        specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2300);

        virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r2);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4);

        $r0 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.util.Base64: java.lang.String encodeBytes(byte[])>($r4);

        $r0 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String tryUrlEncode(java.lang.String)>($r0);

     label4:
        return $r0;

     label5:
        $r5 := @caughtexception;

        r8 = new java.lang.RuntimeException;

        r9 = (java.security.NoSuchAlgorithmException) $r5;

        $r0 = virtualinvoke r9.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r5);

        throw r8;

     label6:
        $r6 := @caughtexception;

        r8 = new java.lang.RuntimeException;

        r10 = (java.security.InvalidKeyException) $r6;

        $r0 = virtualinvoke r10.<java.security.InvalidKeyException: java.lang.String getMessage()>();

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r6);

        throw r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.InvalidKeyException from label1 to label2 with label6;
        catch java.security.InvalidKeyException from label3 to label4 with label6;
    }

    private java.lang.String getKeyString()
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        jp.co.a_tm.jakomo.jakomo4j.http.AccessToken $r1;
        java.lang.String $r2, varReplacer2343, varReplacer2344;
        java.lang.StringBuilder $r3;

        nop;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        $r1 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken>;

        if $r1 == null goto label1;

        $r1 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken>;

        $r2 = virtualinvoke $r1.<jp.co.a_tm.jakomo.jakomo4j.http.AccessToken: java.lang.String getTokenSecret()>();

        if $r2 != null goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        $r2 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerSecret>;

        $r2 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String tryUrlEncode(java.lang.String)>($r2);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        varReplacer2344 = "&";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2344);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $r3 = new java.lang.StringBuilder;

        $r2 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerSecret>;

        $r2 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String tryUrlEncode(java.lang.String)>($r2);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        varReplacer2343 = "&";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2343);

        $r1 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken>;

        $r2 = virtualinvoke $r1.<jp.co.a_tm.jakomo.jakomo4j.http.AccessToken: java.lang.String getTokenSecret()>();

        $r2 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String tryUrlEncode(java.lang.String)>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] getParameters(jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[])
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] $r1;
        java.util.ArrayList $r2;
        jp.co.a_tm.jakomo.jakomo4j.Configuration $r3;
        jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter $r4;
        java.lang.String $r5, varReplacer2333, varReplacer2334, varReplacer2335, varReplacer2336, varReplacer2337, varReplacer2338, varReplacer2339, varReplacer2340, varReplacer2341, varReplacer2342;
        long $l0;
        java.io.Serializable $r6;
        jp.co.a_tm.jakomo.jakomo4j.http.AccessToken $r7;
        java.lang.Object[] $r8;
        java.util.List $r9;
        int varReplacer2332;

        nop;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        $r1 := @parameter0: jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[];

        if $r1 != null goto label5;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label1:
        $r3 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.Configuration: jp.co.a_tm.jakomo.jakomo4j.Configuration getInstance()>();

        $r4 = new jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter;

        $r5 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerKey>;

        varReplacer2341 = "oauth_consumer_key";

        specialinvoke $r4.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>(varReplacer2341, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r4 = new jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter;

        $r5 = virtualinvoke $r3.<jp.co.a_tm.jakomo.jakomo4j.Configuration: java.lang.String getNonce()>();

        if $r5 != null goto label6;

        varReplacer2332 = 10;

        $r5 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String generateNonce(int)>(varReplacer2332);

     label2:
        varReplacer2337 = "oauth_nonce";

        specialinvoke $r4.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>(varReplacer2337, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r4 = new jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter;

        varReplacer2335 = "oauth_signature_method";

        varReplacer2336 = "HMAC-SHA1";

        specialinvoke $r4.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>(varReplacer2335, varReplacer2336);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r4 = new jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter;

        $r5 = virtualinvoke $r3.<jp.co.a_tm.jakomo.jakomo4j.Configuration: java.lang.String getTimestamp()>();

        if $r5 != null goto label7;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 / 1000L;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

     label3:
        varReplacer2338 = "oauth_timestamp";

        specialinvoke $r4.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: void <init>(java.lang.String,java.lang.Object)>(varReplacer2338, $r6);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r4 = new jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter;

        varReplacer2333 = "oauth_version";

        varReplacer2334 = "1.0";

        specialinvoke $r4.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>(varReplacer2333, varReplacer2334);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r4 = new jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter;

        varReplacer2339 = "sdk_version";

        varReplacer2340 = "2.2.2";

        specialinvoke $r4.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>(varReplacer2339, varReplacer2340);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $r7 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken>;

        if $r7 == null goto label4;

        $r7 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken>;

        $r5 = virtualinvoke $r7.<jp.co.a_tm.jakomo.jakomo4j.http.AccessToken: java.lang.String getToken()>();

        if $r5 == null goto label4;

        $r4 = new jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter;

        $r7 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken>;

        $r5 = virtualinvoke $r7.<jp.co.a_tm.jakomo.jakomo4j.http.AccessToken: java.lang.String getToken()>();

        varReplacer2342 = "oauth_token";

        specialinvoke $r4.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>(varReplacer2342, $r5);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label4:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

        $r1 = newarray (jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter)[0];

        $r8 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r1);

        $r1 = (jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[]) $r8;

        return $r1;

     label5:
        $r2 = new java.util.ArrayList;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        goto label1;

     label6:
        $r5 = virtualinvoke $r3.<jp.co.a_tm.jakomo.jakomo4j.Configuration: java.lang.String getNonce()>();

        goto label2;

     label7:
        $r6 = virtualinvoke $r3.<jp.co.a_tm.jakomo.jakomo4j.Configuration: java.lang.String getTimestamp()>();

        goto label3;
    }

    private void init(java.lang.String, java.lang.String)
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        java.lang.String $r1, $r2;
        null_type varReplacer2173;

        nop;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        varReplacer2173 = null;

        specialinvoke $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: void init(java.lang.String,java.lang.String,jp.co.a_tm.jakomo.jakomo4j.http.AccessToken)>($r1, $r2, varReplacer2173);

        return;
    }

    private void init(java.lang.String, java.lang.String, jp.co.a_tm.jakomo.jakomo4j.http.AccessToken)
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        java.lang.String $r1, $r2;
        jp.co.a_tm.jakomo.jakomo4j.http.AccessToken $r3;

        nop;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerKey> = $r1;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerSecret> = $r2;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken> = $r3;

        return;
    }

    public static java.lang.String tryUrlEncode(java.lang.String)
    {
        java.lang.String $r0, varReplacer2225;
        java.lang.Throwable $r1;
        java.lang.RuntimeException r2;
        java.io.UnsupportedEncodingException r3;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer2225 = "UTF-8";

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, varReplacer2225);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        r2 = new java.lang.RuntimeException;

        r3 = (java.io.UnsupportedEncodingException) $r1;

        $r0 = virtualinvoke r3.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        specialinvoke r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r0, $r1);

        throw r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public jp.co.a_tm.jakomo.jakomo4j.http.AccessToken getAccessToken()
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        jp.co.a_tm.jakomo.jakomo4j.http.AccessToken r1;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        r1 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken>;

        return r1;
    }

    public java.lang.String getConsumerKey()
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        java.lang.String r1;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        r1 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerKey>;

        return r1;
    }

    public java.lang.String getConsumerSecret()
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        java.lang.String r1;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        r1 = $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String mConsumerSecret>;

        return r1;
    }

    public jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] getOauthParameters(jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod, java.lang.String)
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod $r1;
        java.lang.String $r2;
        jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] $r3;
        null_type varReplacer5456;

        nop;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        $r1 := @parameter0: jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod;

        $r2 := @parameter1: java.lang.String;

        varReplacer5456 = null;

        $r3 = virtualinvoke $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] getOauthParameters(jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod,java.lang.String,jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[])>($r1, $r2, varReplacer5456);

        return $r3;
    }

    public jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] getOauthParameters(jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod, java.lang.String, jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[])
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod $r1;
        java.lang.String $r2, $r5, $r7, varReplacer2290, varReplacer2291, varReplacer2292;
        jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] $r3, $r8;
        jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter $r4;
        java.lang.StringBuilder $r6;

        nop;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        $r1 := @parameter0: jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[];

        $r3 = specialinvoke $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] getParameters(jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[])>($r3);

        $r2 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String generateBaseString(jp.co.a_tm.jakomo.jakomo4j.http.RequestMethod,java.lang.String,jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[])>($r1, $r2, $r3);

        $r5 = specialinvoke $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String getKeyString()>();

        $r6 = new java.lang.StringBuilder;

        varReplacer2291 = "BaseString = ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2291);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <jp.co.a_tm.jakomo.jakomo4j.util.Log: void println(java.lang.String)>($r7);

        $r6 = new java.lang.StringBuilder;

        varReplacer2290 = "KeyString = ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2290);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <jp.co.a_tm.jakomo.jakomo4j.util.Log: void println(java.lang.String)>($r7);

        $r8 = newarray (jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter)[1];

        $r4 = new jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter;

        $r2 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: java.lang.String generateSignature(java.lang.String,java.lang.String)>($r2, $r5);

        varReplacer2292 = "oauth_signature";

        specialinvoke $r4.<jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter: void <init>(java.lang.String,java.lang.String)>(varReplacer2292, $r2);

        $r8[0] = $r4;

        $r3 = staticinvoke <jp.co.a_tm.jakomo.jakomo4j.util.OperateArray: jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[] marge(jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[],jp.co.a_tm.jakomo.jakomo4j.http.HttpParameter[])>($r3, $r8);

        return $r3;
    }

    public void setAccessToken(jp.co.a_tm.jakomo.jakomo4j.http.AccessToken)
    {
        jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization $r0;
        jp.co.a_tm.jakomo.jakomo4j.http.AccessToken $r1;

        nop;

        $r0 := @this: jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization;

        $r1 := @parameter0: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken;

        $r0.<jp.co.a_tm.jakomo.jakomo4j.http.OAuthAuthorization: jp.co.a_tm.jakomo.jakomo4j.http.AccessToken mAccessToken> = $r1;

        return;
    }
}
