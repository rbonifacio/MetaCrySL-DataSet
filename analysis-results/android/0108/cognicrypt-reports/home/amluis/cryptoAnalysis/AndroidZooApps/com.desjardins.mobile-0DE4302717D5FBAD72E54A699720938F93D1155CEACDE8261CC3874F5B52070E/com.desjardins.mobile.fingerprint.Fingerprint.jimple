public final class com.desjardins.mobile.fingerprint.Fingerprint extends java.lang.Object
{

    private void <init>()
    {
        com.desjardins.mobile.fingerprint.Fingerprint $r0;

        $r0 := @this: com.desjardins.mobile.fingerprint.Fingerprint;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean fingerprintsAreValid()
    {
        boolean $z0;

        $z0 = staticinvoke <com.desjardins.mobile.fingerprint.Fingerprint: boolean hasValidFingerprints()>();

        return $z0;
    }

    private static android.support.v4.hardware.fingerprint.FingerprintManagerCompat getManager(android.content.Context)
    {
        android.content.Context $r0;
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <android.support.v4.hardware.fingerprint.FingerprintManagerCompat: android.support.v4.hardware.fingerprint.FingerprintManagerCompat 'from'(android.content.Context)>($r0);

        return $r1;
    }

    public static boolean hasEnrolledFingerprints(android.content.Context)
    {
        android.content.Context $r0;
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat $r1;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.desjardins.mobile.fingerprint.Fingerprint: android.support.v4.hardware.fingerprint.FingerprintManagerCompat getManager(android.content.Context)>($r0);

        $z0 = virtualinvoke $r1.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat: boolean hasEnrolledFingerprints()>();

        return $z0;
    }

    public static boolean hasHardware(android.content.Context)
    {
        android.content.Context $r0;
        android.support.v4.hardware.fingerprint.FingerprintManagerCompat $r1;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.desjardins.mobile.fingerprint.Fingerprint: android.support.v4.hardware.fingerprint.FingerprintManagerCompat getManager(android.content.Context)>($r0);

        $z0 = virtualinvoke $r1.<android.support.v4.hardware.fingerprint.FingerprintManagerCompat: boolean isHardwareDetected()>();

        return $z0;
    }

    public static boolean hasSecureStorage()
    {
        com.desjardins.mobile.fingerprint.vault.Vault $r0;
        boolean $z0;

        nop;

        $r0 = staticinvoke <com.desjardins.mobile.fingerprint.vault.VaultManager: com.desjardins.mobile.fingerprint.vault.Vault getDefaultVault()>();

        $z0 = virtualinvoke $r0.<com.desjardins.mobile.fingerprint.vault.Vault: boolean isSecure()>();

        return $z0;
    }

    public static boolean hasValidFingerprints()
    {
        java.security.Signature $r0;
        com.desjardins.mobile.fingerprint.vault.Vault $r1;
        java.security.PrivateKey $r2;
        java.lang.Throwable $r3, $r5;
        java.lang.NullPointerException $r4;
        java.lang.String varReplacer2808;
        int varReplacer2809, varReplacer2810, varReplacer2811, varReplacer2812;

     label1:
        nop;

        varReplacer2808 = "SHA256withECDSA";

        $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2808);

        $r1 = staticinvoke <com.desjardins.mobile.fingerprint.vault.VaultManager: com.desjardins.mobile.fingerprint.vault.Vault getDefaultVault()>();

        $r2 = virtualinvoke $r1.<com.desjardins.mobile.fingerprint.vault.Vault: java.security.PrivateKey getPrivateKey()>();

        virtualinvoke $r0.<java.security.Signature: void initSign(java.security.PrivateKey)>($r2);

     label2:
        varReplacer2809 = 1;

        return varReplacer2809;

     label3:
        $r3 := @caughtexception;

        varReplacer2812 = 0;

        return varReplacer2812;

     label4:
        $r4 := @caughtexception;

        varReplacer2811 = 0;

        return varReplacer2811;

     label5:
        $r5 := @caughtexception;

        varReplacer2810 = 0;

        return varReplacer2810;

        catch java.security.InvalidKeyException from label1 to label2 with label3;
        catch java.lang.NullPointerException from label1 to label2 with label4;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
    }
}
