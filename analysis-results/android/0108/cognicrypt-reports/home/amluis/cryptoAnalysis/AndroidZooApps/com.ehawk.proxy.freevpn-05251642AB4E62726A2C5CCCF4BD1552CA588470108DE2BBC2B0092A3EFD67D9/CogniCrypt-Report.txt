Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4555)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 4dc348ba09ad4988308a204c19e9d5382f11abdcb58be4367987ec66f4d7843f
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.myopenvpn.lib.utils.c: javax.net.ssl.HttpsURLConnection a(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 40428fab3143dd4ddd1384172d7b7cfd5bbeecd6d24789e7f09081baee63a111
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.hawk.android.adsdk.ads.net.f: java.lang.String a(java.lang.String)>
		SHA-256: 9c415df7a8795f09a7c84712adb6a9d47bdeab0ff98242a60bcc8fa99c39be8
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 8308cc419a228b856ecf812f4a1bcec969318612ae2f3894f4977a38456c2fd4
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6192)
		Method: <com.hawk.android.adsdk.ads.net.f: java.lang.String a(java.lang.String)>
		SHA-256: a2b44a6d26a7c8e4e4bd2da05fc4005e774d89d13328555143bd19a9f0fa7904
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.myopenvpn.lib.utils.k: java.lang.String a(java.lang.String)>
		SHA-256: 26b60c203e0c31b594531c741f91c940f8bf5eeee04ee78b35df0f34f6e3992
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.hawk.android.adsdk.ads.e.b: byte[] a(byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: r5
		Type: java.security.SecureRandom
		Statement: specialinvoke r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.hawk.android.adsdk.ads.net.a.m: void a(javax.net.ssl.SSLContext)>
		SHA-256: 854d8c96c44926c1f7b4d8a2f500ebee4b7a8331083ffd0ae92be82c73b21fca
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1148)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: f091ac5bdbe5503e43460c318440249c05cfeca3a3b2929e74bda99b64589279
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.hawk.android.googleplay.a.t: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 85dd84e5c41feb9c4181089a3d78e051a2a6ea5bbac237cb45597260931a1181
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7288)
		Method: <com.hawk.android.adsdk.ads.e.b: byte[] a(byte[])>
		SHA-256: c669852803011456e5e0f64d1aa9065234e20c27f5985cc1f288c05d24f4e50
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.internal.je: void a()>
		SHA-256: 4702a93a4b16b1e6d5e85e0d2597b75297e38be8046ab98cafdd7bc94e629c4c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2280)
		Method: <com.facebook.ads.internal.l.bd: java.lang.String a(java.lang.String)>
		SHA-256: 69eb90fe3b613028c11a4d66b9daff471a133a5e1985740bd17009383bb35638
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8309)
		Method: <com.hawk.android.adsdk.ads.net.a.m: javax.net.ssl.SSLContext a(java.lang.String)>
		SHA-256: 6cf924b4f6fd5ad18af42999332de066af8a4680adcb4bd580fe66707402b17e
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.hawk.android.adsdk.ads.net.a.g: void a()>
		SHA-256: cf915a6e2c5901fe7e1f3aff34a551f1fcbc8a836dd7b5622bb3fd5674e15109
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8313)
		Method: <com.hawk.android.adsdk.ads.net.a.g: void a()>
		SHA-256: 5bd50c27233f01a0ee2c0956be69103b64afef8ab24e777cba49f6d181b8a2ae
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5032)
		Method: <com.myopenvpn.lib.utils.k: java.lang.String a(java.lang.String)>
		SHA-256: ac3fbfdd1bf8c48a8b1131c95f12a42608e9efa8c33b7dbc948d7c2fe3c00c58
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6782)
		Method: <com.free.vpn.proxy.shortcut.utils.y: void run()>
		SHA-256: 141cf923cba2e9c4d8266bfdcc04f8864c001b6914b82b553598b0a66ea334ef
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9247)
		Method: <com.hawk.android.googleplay.a.t: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: b5942d88dd7c5eb335ed14665969cb794cb68306fc00375c74a242c094da64d9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.l.bd: java.lang.String a(java.lang.String)>
		SHA-256: fbf7b98904cef0ba810e94f682f50128654a2cf52357dd64bcc7d25fab646d8d
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: r24
		Type: java.security.SecureRandom
		Statement: specialinvoke r24.<java.security.SecureRandom: void <init>()>()
		Method: <com.free.vpn.proxy.shortcut.utils.y: void run()>
		SHA-256: 18111ff9d86f2ef3ddb3ed74fd15ab1d945f800ca2475c0bd1c19494619ed7c7
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3502)
		Method: <com.myopenvpn.lib.utils.c: javax.net.ssl.HttpsURLConnection a(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: c1f4f64754d8d203c0916787680d2e610319f7aa5115e8c40545bea39cfd6787
		Secure: false

Findings in Java Class: com.myopenvpn.lib.utils.c

	 in Method: javax.net.ssl.HttpsURLConnection a(android.content.Context,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c1f4f64754d8d203c0916787680d2e610319f7aa5115e8c40545bea39cfd6787)
			First parameter (with value "TLSv1") should be any of {TLS}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3502)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3507, $r10, varReplacer3507)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3507, $r10, varReplacer3507)


Findings in Java Class: com.hawk.android.adsdk.ads.e.b

	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7289, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c669852803011456e5e0f64d1aa9065234e20c27f5985cc1f288c05d24f4e50)
			First parameter (with value "RSA") should be any of {OAEPPadding, NoPadding, PKCS1Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7288)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c669852803011456e5e0f64d1aa9065234e20c27f5985cc1f288c05d24f4e50)
			First parameter (with value "RSA") should be any of {OAEPPadding, NoPadding, PKCS1Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7288)


Findings in Java Class: com.hawk.android.adsdk.ads.net.a.m

	 in Method: void a(javax.net.ssl.SSLContext)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8307, r6, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8307, r6, $r2)


Findings in Java Class: com.hawk.android.adsdk.ads.net.a.g

	 in Method: void a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8314, $r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8314, $r0, $r4)


Findings in Java Class: com.free.vpn.proxy.shortcut.utils.y

	 in Method: void run()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6777, r28, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6777, r28, $r9)


Findings in Java Class: com.hawk.android.googleplay.a.t

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 10
	ConstraintError: 3
=====================================================================