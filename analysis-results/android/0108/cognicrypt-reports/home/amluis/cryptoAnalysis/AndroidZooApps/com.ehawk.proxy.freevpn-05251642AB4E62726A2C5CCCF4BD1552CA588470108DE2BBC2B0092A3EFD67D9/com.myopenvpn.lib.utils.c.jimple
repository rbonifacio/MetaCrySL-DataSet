public class com.myopenvpn.lib.utils.c extends java.lang.Object
{
    public static java.lang.String a;
    public static java.lang.String b;
    public static java.lang.String c;
    public static java.lang.String d;
    public static java.lang.String e;

    static void <clinit>()
    {
        java.lang.String $r0, varReplacer3496, varReplacer3497, varReplacer3498, varReplacer3499;

        nop;

        varReplacer3499 = "h2OM8/f///5J/x0=";

        <com.myopenvpn.lib.utils.c: java.lang.String b> = varReplacer3499;

        varReplacer3498 = "h2P0CYsIjPP28o36//KB/Uw=";

        <com.myopenvpn.lib.utils.c: java.lang.String c> = varReplacer3498;

        varReplacer3496 = "h2P0jPL1CQsI/P/3U/3Y";

        <com.myopenvpn.lib.utils.c: java.lang.String d> = varReplacer3496;

        varReplacer3497 = "h2Os0kkws06q0qm0ea+an91M/7f+/4xw958=";

        <com.myopenvpn.lib.utils.c: java.lang.String e> = varReplacer3497;

        $r0 = <com.myopenvpn.lib.utils.c: java.lang.String b>;

        $r0 = staticinvoke <com.myopenvpn.lib.utils.m: java.lang.String a(java.lang.String)>($r0);

        <com.myopenvpn.lib.utils.c: java.lang.String b> = $r0;

        $r0 = <com.myopenvpn.lib.utils.c: java.lang.String c>;

        $r0 = staticinvoke <com.myopenvpn.lib.utils.m: java.lang.String a(java.lang.String)>($r0);

        <com.myopenvpn.lib.utils.c: java.lang.String c> = $r0;

        $r0 = <com.myopenvpn.lib.utils.c: java.lang.String d>;

        $r0 = staticinvoke <com.myopenvpn.lib.utils.m: java.lang.String a(java.lang.String)>($r0);

        <com.myopenvpn.lib.utils.c: java.lang.String d> = $r0;

        $r0 = <com.myopenvpn.lib.utils.c: java.lang.String e>;

        $r0 = staticinvoke <com.myopenvpn.lib.utils.m: java.lang.String a(java.lang.String)>($r0);

        <com.myopenvpn.lib.utils.c: java.lang.String e> = $r0;

        return;
    }

    public void <init>()
    {
        com.myopenvpn.lib.utils.c $r0;

        nop;

        $r0 := @this: com.myopenvpn.lib.utils.c;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.InputStream a(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.AssetManager $r1;
        java.io.InputStream $r2;
        java.lang.Exception $r3;
        java.lang.String varReplacer3511;
        null_type varReplacer3512, varReplacer3513;

        nop;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        varReplacer3512 = null;

        return varReplacer3512;

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

        varReplacer3511 = "connect.hisecuritylab.com.crt";

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(varReplacer3511);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        varReplacer3513 = null;

        return varReplacer3513;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static javax.net.ssl.HostnameVerifier a()
    {
        com.myopenvpn.lib.utils.d $r0;

        nop;

        $r0 = new com.myopenvpn.lib.utils.d;

        specialinvoke $r0.<com.myopenvpn.lib.utils.d: void <init>()>();

        return $r0;
    }

    public static javax.net.ssl.HttpsURLConnection a(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r6, varReplacer3502, varReplacer3503, varReplacer3504, varReplacer3509;
        java.security.cert.CertificateFactory $r3;
        java.io.InputStream $r4;
        java.security.cert.Certificate $r5;
        java.security.KeyStore $r7;
        javax.net.ssl.TrustManagerFactory $r8;
        javax.net.ssl.SSLContext $r9;
        javax.net.ssl.TrustManager[] $r10;
        java.net.URL $r11;
        java.net.URLConnection $r12;
        javax.net.ssl.HttpsURLConnection $r13;
        javax.net.ssl.SSLSocketFactory $r14;
        javax.net.ssl.HostnameVerifier $r15;
        java.lang.Exception $r16, $r17;
        null_type varReplacer3500, varReplacer3501, varReplacer3506, varReplacer3507, varReplacer3508;
        int varReplacer3505, varReplacer3510;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        varReplacer3509 = "X.509";

        $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer3509);

        $r4 = staticinvoke <com.myopenvpn.lib.utils.c: java.io.InputStream a(android.content.Context)>($r0);

        $r5 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4);

        $r6 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6);

        varReplacer3500 = null;

        varReplacer3501 = null;

        virtualinvoke $r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer3500, varReplacer3500);

        varReplacer3504 = "ca";

        virtualinvoke $r7.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(varReplacer3504, $r5);

        $r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6);

        virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r7);

        varReplacer3502 = "TLSv1";

        $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3502);

        $r10 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        varReplacer3507 = null;

        varReplacer3508 = null;

        virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3507, $r10, varReplacer3507);

     label2:
        $r11 = new java.net.URL;

     label3:
        specialinvoke $r11.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r12 = virtualinvoke $r11.<java.net.URL: java.net.URLConnection openConnection()>();

        $r13 = (javax.net.ssl.HttpsURLConnection) $r12;

     label4:
        $r14 = virtualinvoke $r9.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        virtualinvoke $r13.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r14);

        $r15 = staticinvoke <com.myopenvpn.lib.utils.c: javax.net.ssl.HostnameVerifier a()>();

        virtualinvoke $r13.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r15);

        varReplacer3505 = 1;

        virtualinvoke $r13.<javax.net.ssl.HttpsURLConnection: void setDoOutput(boolean)>(varReplacer3505);

        varReplacer3510 = 5000;

        virtualinvoke $r13.<javax.net.ssl.HttpsURLConnection: void setReadTimeout(int)>(varReplacer3510);

        varReplacer3503 = "POST";

        virtualinvoke $r13.<javax.net.ssl.HttpsURLConnection: void setRequestMethod(java.lang.String)>(varReplacer3503);

     label5:
        return $r13;

     label6:
        $r16 := @caughtexception;

        $r13 = null;

     label7:
        if $r13 == null goto label9;

        virtualinvoke $r13.<javax.net.ssl.HttpsURLConnection: void disconnect()>();

        varReplacer3506 = null;

        return varReplacer3506;

     label8:
        $r17 := @caughtexception;

        goto label7;

     label9:
        return $r13;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
        catch java.lang.Exception from label4 to label5 with label8;
    }

    private void a(android.content.Context, java.net.HttpURLConnection, com.myopenvpn.lib.a.a)
    {
        com.myopenvpn.lib.utils.c $r0;
        android.content.Context $r1;
        java.net.HttpURLConnection $r2;
        com.myopenvpn.lib.a.a $r3;
        java.lang.String $r4, $r5, varReplacer7603;
        java.util.Locale $r6;
        java.lang.Object[] $r7;

        nop;

        $r0 := @this: com.myopenvpn.lib.utils.c;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.net.HttpURLConnection;

        $r3 := @parameter2: com.myopenvpn.lib.a.a;

        if $r2 != null goto label1;

        return;

     label1:
        $r4 = <com.myopenvpn.lib.utils.c: java.lang.String b>;

        $r5 = virtualinvoke $r3.<com.myopenvpn.lib.a.a: java.lang.String d()>();

        virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r4, $r5);

        $r4 = <com.myopenvpn.lib.utils.c: java.lang.String d>;

        $r5 = virtualinvoke $r3.<com.myopenvpn.lib.a.a: java.lang.String c()>();

        virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r4, $r5);

        $r6 = <java.util.Locale: java.util.Locale US>;

        $r7 = newarray (java.lang.Object)[4];

        $r4 = <com.myopenvpn.lib.utils.c: java.lang.String d>;

        $r7[0] = $r4;

        $r4 = virtualinvoke $r3.<com.myopenvpn.lib.a.a: java.lang.String c()>();

        $r7[1] = $r4;

        $r4 = <com.myopenvpn.lib.utils.c: java.lang.String b>;

        $r7[2] = $r4;

        $r4 = virtualinvoke $r3.<com.myopenvpn.lib.a.a: java.lang.String d()>();

        $r7[3] = $r4;

        varReplacer7603 = "{\"%s\":\"%s\",\"%s\":\"%s\"}";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, varReplacer7603, $r7);

        $r4 = <com.myopenvpn.lib.utils.c: java.lang.String c>;

        $r5 = staticinvoke <com.myopenvpn.lib.utils.Device: java.lang.String hash(android.content.Context,java.lang.String)>($r1, $r5);

        virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r4, $r5);

        return;
    }

    public static boolean b(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, varReplacer3485;
        java.lang.Object $r3, $r5;
        boolean $z0;
        javax.net.ssl.HttpsURLConnection $r4;
        java.io.OutputStream $r6;
        java.io.BufferedReader $r7, r18;
        java.io.InputStreamReader $r8, r17;
        java.io.InputStream $r9;
        java.lang.StringBuilder $r10, r19;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15;
        java.io.PrintWriter r16;
        java.io.IOException r20;
        int varReplacer3486, varReplacer3487, varReplacer3488, varReplacer3489, varReplacer3490, varReplacer3491, varReplacer3492, varReplacer3493;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label01;

        varReplacer3487 = 0;

        return varReplacer3487;

     label01:
        varReplacer3485 = "POST";

        $r4 = staticinvoke <com.myopenvpn.lib.utils.c: javax.net.ssl.HttpsURLConnection a(android.content.Context,java.lang.String,java.lang.String)>($r0, $r1, varReplacer3485);

     label02:
        if $r4 != null goto label04;

        goto label03;

     label03:
        goto label52;

     label04:
        r16 = new java.io.PrintWriter;

     label05:
        $r5 = r16;

     label06:
        $r6 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke r16.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r6);

     label07:
        r16 = (java.io.PrintWriter) $r5;

     label08:
        virtualinvoke r16.<java.io.PrintWriter: void print(java.lang.String)>($r2);

     label09:
        r16 = (java.io.PrintWriter) $r5;

     label10:
        virtualinvoke r16.<java.io.PrintWriter: void flush()>();

     label11:
        r18 = new java.io.BufferedReader;

     label12:
        $r7 = r18;

     label13:
        r17 = new java.io.InputStreamReader;

     label14:
        $r8 = r17;

     label15:
        $r9 = virtualinvoke $r4.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke r17.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        specialinvoke r18.<java.io.BufferedReader: void <init>(java.io.Reader)>($r8);

     label16:
        $r1 = "";

     label17:
        $r2 = virtualinvoke $r7.<java.io.BufferedReader: java.lang.String readLine()>();

     label18:
        if $r2 == null goto label23;

     label19:
        r19 = new java.lang.StringBuilder;

     label20:
        $r10 = r19;

     label21:
        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label22:
        goto label17;

     label23:
        if $r5 == null goto label25;

        r16 = (java.io.PrintWriter) $r5;

     label24:
        virtualinvoke r16.<java.io.PrintWriter: void close()>();

     label25:
        if $r7 == null goto label53;

     label26:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label27:
        varReplacer3490 = 1;

        return varReplacer3490;

     label28:
        $r11 := @caughtexception;

        r20 = (java.io.IOException) $r11;

        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();

        varReplacer3491 = 1;

        return varReplacer3491;

     label29:
        $r12 := @caughtexception;

        $r7 = null;

     label30:
        $r5 = $r3;

        $r3 = $r7;

     label31:
        virtualinvoke $r12.<java.lang.Throwable: void printStackTrace()>();

     label32:
        if $r5 == null goto label34;

        r16 = (java.io.PrintWriter) $r5;

     label33:
        virtualinvoke r16.<java.io.PrintWriter: void close()>();

     label34:
        if $r3 == null goto label54;

        $r7 = (java.io.BufferedReader) $r3;

     label35:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label36:
        varReplacer3488 = 0;

        return varReplacer3488;

     label37:
        $r13 := @caughtexception;

        r20 = (java.io.IOException) $r13;

        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();

        varReplacer3493 = 0;

        return varReplacer3493;

     label38:
        $r14 := @caughtexception;

        $r5 = null;

     label39:
        if $r5 == null goto label41;

        r16 = (java.io.PrintWriter) $r5;

     label40:
        virtualinvoke r16.<java.io.PrintWriter: void close()>();

     label41:
        if $r3 == null goto label43;

        $r7 = (java.io.BufferedReader) $r3;

     label42:
        virtualinvoke $r7.<java.io.BufferedReader: void close()>();

     label43:
        throw $r14;

     label44:
        $r15 := @caughtexception;

        r20 = (java.io.IOException) $r15;

        virtualinvoke r20.<java.io.IOException: void printStackTrace()>();

        goto label43;

     label45:
        $r14 := @caughtexception;

        goto label39;

     label46:
        $r14 := @caughtexception;

        $r3 = $r7;

        goto label39;

     label47:
        $r12 := @caughtexception;

        $r5 = null;

        goto label31;

     label48:
        $r12 := @caughtexception;

        goto label31;

     label49:
        $r12 := @caughtexception;

        $r3 = $r7;

        goto label31;

     label50:
        $r12 := @caughtexception;

        $r7 = null;

        $r3 = $r5;

        goto label30;

     label51:
        $r12 := @caughtexception;

        $r3 = $r5;

        goto label30;

     label52:
        varReplacer3489 = 0;

        return varReplacer3489;

     label53:
        varReplacer3492 = 1;

        return varReplacer3492;

     label54:
        varReplacer3486 = 0;

        return varReplacer3486;

        catch java.lang.Exception from label01 to label02 with label47;
        catch java.lang.Error from label01 to label02 with label29;
        catch java.lang.Throwable from label01 to label02 with label38;
        catch java.lang.Exception from label06 to label07 with label47;
        catch java.lang.Error from label04 to label05 with label29;
        catch java.lang.Error from label06 to label07 with label29;
        catch java.lang.Throwable from label06 to label07 with label38;
        catch java.lang.Exception from label07 to label11 with label48;
        catch java.lang.Exception from label15 to label16 with label48;
        catch java.lang.Error from label07 to label12 with label50;
        catch java.lang.Error from label13 to label14 with label50;
        catch java.lang.Error from label15 to label16 with label50;
        catch java.lang.Throwable from label08 to label09 with label45;
        catch java.lang.Throwable from label10 to label11 with label45;
        catch java.lang.Throwable from label15 to label16 with label45;
        catch java.lang.Exception from label17 to label18 with label49;
        catch java.lang.Exception from label21 to label22 with label49;
        catch java.lang.Error from label17 to label18 with label51;
        catch java.lang.Error from label19 to label20 with label51;
        catch java.lang.Error from label21 to label22 with label51;
        catch java.lang.Throwable from label17 to label18 with label46;
        catch java.lang.Throwable from label21 to label22 with label46;
        catch java.io.IOException from label24 to label25 with label28;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label31 to label32 with label45;
        catch java.io.IOException from label33 to label34 with label37;
        catch java.io.IOException from label35 to label36 with label37;
        catch java.io.IOException from label40 to label41 with label44;
        catch java.io.IOException from label42 to label43 with label44;
    }

    public static boolean c(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, varReplacer7571, varReplacer7574, varReplacer7576, varReplacer7577, varReplacer7578, varReplacer7579, varReplacer7581, varReplacer7582, varReplacer7585, varReplacer7586;
        java.io.FileWriter $r3, $r6;
        java.net.URL $r4;
        java.net.URLConnection $r5;
        java.io.File $r7;
        java.io.BufferedReader $r8;
        java.io.InputStreamReader $r9;
        java.io.InputStream $r10;
        java.lang.StringBuilder $r11;
        boolean $z0, $z1, $z2;
        java.util.Locale $r12;
        java.lang.Object[] $r13;
        com.myopenvpn.lib.utils.b $r14;
        java.lang.Boolean $r15;
        java.lang.Throwable $r16, $r18;
        java.lang.Exception $r17, $r19, $r20, $r21, $r22, $r23;
        int varReplacer7572, varReplacer7573, varReplacer7575, varReplacer7580, varReplacer7583, varReplacer7584, varReplacer7587;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = null;

        varReplacer7576 = "";

        <com.myopenvpn.lib.utils.c: java.lang.String a> = varReplacer7576;

     label01:
        $r4 = new java.net.URL;

     label02:
        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        varReplacer7581 = "Accept-Encoding";

        varReplacer7582 = "gzip";

        virtualinvoke $r5.<java.net.URLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(varReplacer7581, varReplacer7582);

        varReplacer7587 = 0;

        virtualinvoke $r5.<java.net.URLConnection: void setDoOutput(boolean)>(varReplacer7587);

        varReplacer7573 = 1;

        virtualinvoke $r5.<java.net.URLConnection: void setDoInput(boolean)>(varReplacer7573);

     label03:
        $r6 = new java.io.FileWriter;

        $r7 = new java.io.File;

     label04:
        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r2);

        varReplacer7583 = 0;

        specialinvoke $r6.<java.io.FileWriter: void <init>(java.io.File,boolean)>($r7, varReplacer7583);

     label05:
        $r8 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

     label06:
        $r10 = virtualinvoke $r5.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10);

        specialinvoke $r8.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

     label07:
        $r11 = new java.lang.StringBuilder;

     label08:
        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

     label09:
        $z0 = 0;

        $z1 = 0;

     label10:
        $r2 = virtualinvoke $r8.<java.io.BufferedReader: java.lang.String readLine()>();

     label11:
        if $r2 == null goto label19;

     label12:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer7577 = "\n";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>(varReplacer7577);

     label13:
        if $z2 != 0 goto label15;

     label14:
        varReplacer7574 = "\n";

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7574);

     label15:
        varReplacer7578 = "tls-auth";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer7578);

     label16:
        if $z2 == 0 goto label17;

        if $z1 != 0 goto label17;

        $z1 = 1;

     label17:
        varReplacer7571 = "dust-kitty";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer7571);

     label18:
        if $z2 == 0 goto label10;

        if $z0 != 0 goto label10;

        $z0 = 1;

        goto label10;

     label19:
        $r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.FileWriter: void write(java.lang.String)>($r2);

        virtualinvoke $r6.<java.io.FileWriter: void flush()>();

     label20:
        $r2 = <com.myopenvpn.lib.utils.a: java.lang.String c>;

     label21:
        varReplacer7586 = "";

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r2, varReplacer7586);

     label22:
        $r12 = <java.util.Locale: java.util.Locale US>;

     label23:
        $r13 = newarray (java.lang.Object)[1];

     label24:
        $r13[0] = $r1;

     label25:
        varReplacer7585 = "tls_%s";

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r12, varReplacer7585, $r13);

        $r14 = staticinvoke <com.myopenvpn.lib.utils.b: com.myopenvpn.lib.utils.b a(android.content.Context)>($r0);

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        virtualinvoke $r14.<com.myopenvpn.lib.utils.b: void a(java.lang.String,java.lang.Boolean)>($r2, $r15);

     label26:
        $r12 = <java.util.Locale: java.util.Locale US>;

     label27:
        $r13 = newarray (java.lang.Object)[1];

     label28:
        $r13[0] = $r1;

     label29:
        varReplacer7579 = "dust_%s";

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r12, varReplacer7579, $r13);

        $r14 = staticinvoke <com.myopenvpn.lib.utils.b: com.myopenvpn.lib.utils.b a(android.content.Context)>($r0);

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        virtualinvoke $r14.<com.myopenvpn.lib.utils.b: void a(java.lang.String,java.lang.Boolean)>($r1, $r15);

     label30:
        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

     label31:
        virtualinvoke $r6.<java.io.FileWriter: void close()>();

     label32:
        varReplacer7584 = 1;

        return varReplacer7584;

     label33:
        $r16 := @caughtexception;

        $r8 = null;

     label34:
        $r6 = $r3;

     label35:
        virtualinvoke $r16.<java.lang.Throwable: void printStackTrace()>();

        $r1 = virtualinvoke $r16.<java.lang.Throwable: java.lang.String getMessage()>();

        <com.myopenvpn.lib.utils.c: java.lang.String a> = $r1;

     label36:
        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

     label37:
        virtualinvoke $r6.<java.io.FileWriter: void close()>();

     label38:
        varReplacer7580 = 0;

        return varReplacer7580;

     label39:
        $r17 := @caughtexception;

        varReplacer7572 = 0;

        return varReplacer7572;

     label40:
        $r18 := @caughtexception;

        $r8 = null;

        $r6 = null;

     label41:
        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

     label42:
        virtualinvoke $r6.<java.io.FileWriter: void close()>();

     label43:
        throw $r18;

     label44:
        $r19 := @caughtexception;

        goto label31;

     label45:
        $r20 := @caughtexception;

        varReplacer7575 = 1;

        return varReplacer7575;

     label46:
        $r21 := @caughtexception;

        goto label37;

     label47:
        $r22 := @caughtexception;

        goto label42;

     label48:
        $r23 := @caughtexception;

        goto label43;

     label49:
        $r18 := @caughtexception;

        $r8 = null;

        goto label41;

     label50:
        $r18 := @caughtexception;

        goto label41;

     label51:
        $r16 := @caughtexception;

        $r8 = null;

        $r6 = null;

        goto label35;

     label52:
        $r16 := @caughtexception;

        $r8 = null;

        goto label35;

     label53:
        $r16 := @caughtexception;

        goto label35;

     label54:
        $r16 := @caughtexception;

        $r8 = null;

        $r3 = $r6;

        goto label34;

     label55:
        $r16 := @caughtexception;

        $r3 = $r6;

        goto label34;

        catch java.lang.Exception from label02 to label03 with label51;
        catch java.lang.Exception from label04 to label05 with label51;
        catch java.lang.Error from label01 to label05 with label33;
        catch java.lang.Throwable from label02 to label03 with label40;
        catch java.lang.Throwable from label04 to label05 with label40;
        catch java.lang.Exception from label06 to label07 with label52;
        catch java.lang.Error from label05 to label07 with label54;
        catch java.lang.Throwable from label06 to label07 with label49;
        catch java.lang.Exception from label08 to label09 with label53;
        catch java.lang.Exception from label10 to label11 with label53;
        catch java.lang.Exception from label12 to label13 with label53;
        catch java.lang.Exception from label14 to label16 with label53;
        catch java.lang.Exception from label17 to label18 with label53;
        catch java.lang.Exception from label19 to label20 with label53;
        catch java.lang.Exception from label21 to label22 with label53;
        catch java.lang.Exception from label23 to label26 with label53;
        catch java.lang.Exception from label27 to label30 with label53;
        catch java.lang.Error from label07 to label09 with label55;
        catch java.lang.Error from label10 to label11 with label55;
        catch java.lang.Error from label12 to label13 with label55;
        catch java.lang.Error from label14 to label16 with label55;
        catch java.lang.Error from label17 to label18 with label55;
        catch java.lang.Error from label19 to label24 with label55;
        catch java.lang.Error from label25 to label28 with label55;
        catch java.lang.Error from label29 to label30 with label55;
        catch java.lang.Throwable from label08 to label09 with label50;
        catch java.lang.Throwable from label10 to label11 with label50;
        catch java.lang.Throwable from label12 to label13 with label50;
        catch java.lang.Throwable from label14 to label16 with label50;
        catch java.lang.Throwable from label17 to label18 with label50;
        catch java.lang.Throwable from label19 to label20 with label50;
        catch java.lang.Throwable from label21 to label22 with label50;
        catch java.lang.Throwable from label25 to label26 with label50;
        catch java.lang.Throwable from label29 to label30 with label50;
        catch java.lang.Exception from label30 to label31 with label44;
        catch java.lang.Exception from label31 to label32 with label45;
        catch java.lang.Throwable from label35 to label36 with label50;
        catch java.lang.Exception from label36 to label37 with label46;
        catch java.lang.Exception from label37 to label38 with label39;
        catch java.lang.Exception from label41 to label42 with label47;
        catch java.lang.Exception from label42 to label43 with label48;
    }

    public java.net.HttpURLConnection a(java.lang.String)
    {
        com.myopenvpn.lib.utils.c $r0;
        java.lang.String $r1, varReplacer7601;
        java.net.URLConnection $r2;
        java.net.URL $r3;
        java.net.HttpURLConnection $r4;
        java.lang.Exception $r5, $r6;
        int varReplacer7600, varReplacer7602;

        nop;

        $r0 := @this: com.myopenvpn.lib.utils.c;

        $r1 := @parameter0: java.lang.String;

        $r3 = new java.net.URL;

     label1:
        specialinvoke $r3.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r4 = (java.net.HttpURLConnection) $r2;

     label2:
        varReplacer7602 = 1;

        virtualinvoke $r4.<java.net.HttpURLConnection: void setDoInput(boolean)>(varReplacer7602);

        varReplacer7600 = 0;

        virtualinvoke $r4.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer7600);

        varReplacer7601 = "GET";

        virtualinvoke $r4.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(varReplacer7601);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        $r4 = null;

        $r6 = $r5;

     label5:
        virtualinvoke $r6.<java.lang.Exception: void printStackTrace()>();

        return $r4;

     label6:
        $r6 := @caughtexception;

        goto label5;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label6;
    }

    public org.json.JSONObject a(android.content.Context, boolean)
    {
        com.myopenvpn.lib.utils.c $r0;
        android.content.Context $r1;
        boolean $z0;
        java.lang.String $r2, $r6, varReplacer7599;
        byte $b0;
        com.myopenvpn.lib.a.a $r3;
        java.util.Locale $r4;
        java.lang.Object[] $r5;
        java.lang.Integer $r7;
        java.net.HttpURLConnection $r8;
        java.io.InputStream $r9;
        java.io.BufferedReader $r10;
        java.io.InputStreamReader $r11;
        java.lang.StringBuffer $r12;
        java.lang.Throwable $r13;
        org.json.JSONObject $r14;
        null_type varReplacer7598;

        nop;

        $r0 := @this: com.myopenvpn.lib.utils.c;

        $r1 := @parameter0: android.content.Context;

        $z0 := @parameter1: boolean;

        $b0 = 0;

     label01:
        $r3 = staticinvoke <com.myopenvpn.lib.a.a: com.myopenvpn.lib.a.a a(android.content.Context)>($r1);

     label02:
        if $z0 == 0 goto label19;

     label03:
        $r4 = <java.util.Locale: java.util.Locale US>;

        $r2 = <com.myopenvpn.lib.utils.c: java.lang.String e>;

     label04:
        $r5 = newarray (java.lang.Object)[5];

     label05:
        $r6 = <com.myopenvpn.lib.utils.a: java.lang.String a>;

     label06:
        $r5[0] = $r6;

     label07:
        $r6 = virtualinvoke $r3.<com.myopenvpn.lib.a.a: java.lang.String a()>();

     label08:
        $r5[1] = $r6;

     label09:
        $r6 = virtualinvoke $r3.<com.myopenvpn.lib.a.a: java.lang.String b()>();

     label10:
        $r5[2] = $r6;

     label11:
        $r6 = virtualinvoke $r3.<com.myopenvpn.lib.a.a: java.lang.String c()>();

     label12:
        $r5[3] = $r6;

     label13:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b0);

     label14:
        $r5[4] = $r7;

     label15:
        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r4, $r2, $r5);

        $r8 = virtualinvoke $r0.<com.myopenvpn.lib.utils.c: java.net.HttpURLConnection a(java.lang.String)>($r2);

        specialinvoke $r0.<com.myopenvpn.lib.utils.c: void a(android.content.Context,java.net.HttpURLConnection,com.myopenvpn.lib.a.a)>($r1, $r8, $r3);

     label16:
        if $r8 != null goto label20;

     label17:
        varReplacer7599 = "Connection null";

        <com.myopenvpn.lib.utils.c: java.lang.String a> = varReplacer7599;

     label18:
        varReplacer7598 = null;

        return varReplacer7598;

     label19:
        $b0 = 1;

        goto label03;

     label20:
        virtualinvoke $r8.<java.net.HttpURLConnection: void connect()>();

        $r9 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label21:
        $r10 = new java.io.BufferedReader;

        $r11 = new java.io.InputStreamReader;

     label22:
        specialinvoke $r11.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r9);

        specialinvoke $r10.<java.io.BufferedReader: void <init>(java.io.Reader)>($r11);

     label23:
        $r12 = new java.lang.StringBuffer;

     label24:
        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

     label25:
        $r2 = virtualinvoke $r10.<java.io.BufferedReader: java.lang.String readLine()>();

     label26:
        if $r2 == null goto label32;

     label27:
        virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label28:
        goto label25;

     label29:
        $r13 := @caughtexception;

     label30:
        $r2 = virtualinvoke $r13.<java.lang.Throwable: java.lang.String getMessage()>();

        <com.myopenvpn.lib.utils.c: java.lang.String a> = $r2;

        virtualinvoke $r13.<java.lang.Throwable: void printStackTrace()>();

        $r14 = null;

     label31:
        return $r14;

     label32:
        $r14 = new org.json.JSONObject;

     label33:
        $r2 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<org.json.JSONObject: void <init>(java.lang.String)>($r2);

     label34:
        goto label31;

     label35:
        $r13 := @caughtexception;

        goto label30;

        catch java.lang.Exception from label01 to label02 with label29;
        catch java.lang.Exception from label04 to label05 with label29;
        catch java.lang.Exception from label06 to label16 with label29;
        catch java.lang.Exception from label20 to label21 with label29;
        catch java.lang.Exception from label22 to label23 with label29;
        catch java.lang.Exception from label24 to label26 with label29;
        catch java.lang.Exception from label27 to label28 with label29;
        catch java.lang.AssertionError from label01 to label02 with label35;
        catch java.lang.AssertionError from label03 to label04 with label35;
        catch java.lang.AssertionError from label05 to label06 with label35;
        catch java.lang.AssertionError from label07 to label08 with label35;
        catch java.lang.AssertionError from label09 to label10 with label35;
        catch java.lang.AssertionError from label11 to label12 with label35;
        catch java.lang.AssertionError from label13 to label14 with label35;
        catch java.lang.AssertionError from label15 to label16 with label35;
        catch java.lang.AssertionError from label17 to label18 with label35;
        catch java.lang.AssertionError from label20 to label26 with label35;
        catch java.lang.AssertionError from label27 to label28 with label35;
        catch java.lang.Exception from label33 to label34 with label29;
        catch java.lang.AssertionError from label32 to label34 with label35;
    }
}
