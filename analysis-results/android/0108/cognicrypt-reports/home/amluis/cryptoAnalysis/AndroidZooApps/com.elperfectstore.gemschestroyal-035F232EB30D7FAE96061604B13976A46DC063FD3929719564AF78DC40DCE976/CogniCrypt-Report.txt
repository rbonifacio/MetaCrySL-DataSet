Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.r: java.lang.String b(java.lang.String)>
		SHA-256: ad63fb0f25897e919c23cde3d1a908adc05d8f40d72de1e14c7d98939e609f2e
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: 36ba1c4d4a21b43e8434065008241024dfe4622b0bb42c4c93bbc9c8a26a18ab
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4978)
		Method: <com.facebook.ads.internal.util.r: java.lang.String b(java.lang.String)>
		SHA-256: c13e9c0aca24814008aa3af2925693b1a9e96a53ae8f4d31bfe1f40ffaf76bef
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5993)
		Method: <com.lightcone.common.reinforce.RogueKiller$SecurityHelper: void setEncryptionMes(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: ec5479369e6896caefb52eaef7edca83e1aef445e0c9d9e1d6a2459dba8c475e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5992)
		Method: <com.lightcone.common.reinforce.RogueKiller$SecurityHelper: void setEncryptionMes(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e499548dea18a076e6d0c37b47ec79cc6d40f22400d3e855adcea16acd297616
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6131)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: 8752d1d095f3f3135f4573cc5301152dc53682e80b116805eff1d27651b69a95
		Secure: true
	Object:
		Variable: varReplacer5991
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5991)
		Method: <com.lightcone.common.reinforce.RogueKiller$SecurityHelper: void setEncryptionMes(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 94cbdb23a0922fce72e36c7bbb6d10bc4d8a1cce3d0878511d18f02d247da750
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: varReplacer5993
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5993)
		Method: <com.lightcone.common.reinforce.RogueKiller$SecurityHelper: void setEncryptionMes(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e18749033500b3719c0d38d4db84c8ffbe5750b4e50fc1f022355c5e7a0f8ea5
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.lightcone.adproject.helper.MD5Helper: java.lang.String getMD5(java.lang.String)>
		SHA-256: 4b24bcf957029623b4dec08dc757d356ccbdf38d822924e167a795bc630f8f1c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2746)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: 1688822b9f5ff7fde9f197facfa62aa7b05f018972de5593d61d91e4bf9f6e63
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.lightcone.common.reinforce.RogueKiller: java.lang.String getSignature(android.content.Context)>
		SHA-256: f1c77e3c5ad76209d6c7f6aa71134f502a89fd5535f5096e561b68c310d26b36
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6001)
		Method: <com.lightcone.adproject.helper.MD5Helper: java.lang.String getMD5(java.lang.String)>
		SHA-256: 9dc6d43ab02202e6c99f2f7459470e8917f28a89d37edb50601d0f58c719e00a
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5973)
		Method: <com.lightcone.common.reinforce.RogueKiller: java.lang.String getSignature(android.content.Context)>
		SHA-256: 71b9fd8f7df51ceba78a4ec3b6e750f1c327e3b2ac6e43afc7528b9205e6fc07
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5994)
		Method: <com.lightcone.common.reinforce.RogueKiller$SecurityHelper: void setEncryptionMes(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: c196b5aad0afdbc2c3de77d1c206d5825327f3ad97f57e431fb97a0b38be56c1
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5991)
		Method: <com.lightcone.common.reinforce.RogueKiller$SecurityHelper: void setEncryptionMes(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: dd5f56477ffd852b8402e8ba2b3d1c1bf06cf52a1664da7aa27b38b10b33c1aa
		Secure: false

Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2747, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2747, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1688822b9f5ff7fde9f197facfa62aa7b05f018972de5593d61d91e4bf9f6e63)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2746)


Findings in Java Class: com.lightcone.common.reinforce.RogueKiller

	 in Method: java.lang.String getSignature(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #71b9fd8f7df51ceba78a4ec3b6e750f1c327e3b2ac6e43afc7528b9205e6fc07)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5973)


Findings in Java Class: com.lightcone.common.reinforce.RogueKiller$SecurityHelper

	 in Method: com.lightcone.common.reinforce.RogueKiller$SecurityHelper getInstance()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e499548dea18a076e6d0c37b47ec79cc6d40f22400d3e855adcea16acd297616)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, getInstance
			at statement: return $r0

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c196b5aad0afdbc2c3de77d1c206d5825327f3ad97f57e431fb97a0b38be56c1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, getInstance
			at statement: return $r0

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #ec5479369e6896caefb52eaef7edca83e1aef445e0c9d9e1d6a2459dba8c475e)
			Operation on object of type javax.crypto.spec.SecretKeySpec object not completed. Expected call to init
			at statement: return $r0

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #dd5f56477ffd852b8402e8ba2b3d1c1bf06cf52a1664da7aa27b38b10b33c1aa)
			Operation on object of type javax.crypto.spec.SecretKeySpec object not completed. Expected call to init
			at statement: return $r0

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #dd5f56477ffd852b8402e8ba2b3d1c1bf06cf52a1664da7aa27b38b10b33c1aa)
			Operation on object of type javax.crypto.spec.SecretKeySpec object not completed. Expected call to init
			at statement: return $r0

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e499548dea18a076e6d0c37b47ec79cc6d40f22400d3e855adcea16acd297616)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, getInstance
			at statement: return $r0

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c196b5aad0afdbc2c3de77d1c206d5825327f3ad97f57e431fb97a0b38be56c1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, getInstance
			at statement: return $r0

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #ec5479369e6896caefb52eaef7edca83e1aef445e0c9d9e1d6a2459dba8c475e)
			Operation on object of type javax.crypto.spec.SecretKeySpec object not completed. Expected call to init
			at statement: return $r0


	 in Method: void setEncryptionMes(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5991)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5993)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 16

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 8
	RequiredPredicateError: 4
	ConstraintError: 2
=====================================================================