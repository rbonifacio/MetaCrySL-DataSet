public class com.amap.api.location.core.e extends java.lang.Object
{
    private static final char[] a;

    static void <clinit>()
    {
        char[] $r0;

        nop;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <com.amap.api.location.core.e: char[] a> = $r0;

        return;
    }

    public void <init>()
    {
        com.amap.api.location.core.e $r0;

        $r0 := @this: com.amap.api.location.core.e;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, $r2, varReplacer5887, varReplacer5888;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.Throwable $r3;
        null_type varReplacer5885, varReplacer5886;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label6;

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label2:
        if $i0 != 0 goto label3;

        varReplacer5886 = null;

        return varReplacer5886;

     label3:
        varReplacer5887 = "SHA1";

        $r2 = staticinvoke <com.amap.api.location.core.e: java.lang.String b(java.lang.String,java.lang.String)>(varReplacer5887, $r0);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5888 = "MD5";

        $r0 = staticinvoke <com.amap.api.location.core.e: java.lang.String b(java.lang.String,java.lang.String)>(varReplacer5888, $r0);

     label4:
        return $r0;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Throwable: void printStackTrace()>();

     label6:
        varReplacer5885 = null;

        return varReplacer5885;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer5928;
        byte[] $r2;
        java.lang.Exception $r3;
        java.lang.Throwable $r4;
        java.io.UnsupportedEncodingException r5;
        null_type varReplacer5929, varReplacer5930;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.amap.api.location.core.e: byte[] b(java.lang.String)>($r0);

     label2:
        $r2 = staticinvoke <com.amap.api.location.core.e: byte[] a(byte[],java.lang.String)>($r2, $r1);

        if $r2 != null goto label4;

        varReplacer5929 = null;

        return varReplacer5929;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        $r2 = null;

        goto label2;

     label4:
        $r1 = new java.lang.String;

     label5:
        varReplacer5928 = "UTF-8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, varReplacer5928);

     label6:
        return $r1;

     label7:
        $r4 := @caughtexception;

        r5 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke r5.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        varReplacer5930 = null;

        return varReplacer5930;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label7;
    }

    private static java.lang.String a(byte[])
    {
        byte[] $r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        char[] $r3;
        byte $b2;
        char $c3;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = new java.lang.StringBuilder;

        $i1 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $r3 = <com.amap.api.location.core.e: char[] a>;

        $b2 = $r0[$i1];

        $b2 = $b2 >> 4;

        $b2 = $b2 & 15;

        $c3 = $r3[$b2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r3 = <com.amap.api.location.core.e: char[] a>;

        $b2 = $r0[$i1];

        $b2 = $b2 & 15;

        $c3 = $r3[$b2];

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static java.security.PublicKey a(android.content.Context) throws java.lang.Exception
    {
        android.content.Context $r0;
        android.content.res.AssetManager $r1;
        java.io.InputStream $r2;
        java.security.cert.CertificateFactory $r3;
        java.security.KeyFactory $r4;
        java.security.cert.Certificate $r5;
        java.security.spec.X509EncodedKeySpec $r6;
        java.security.PublicKey $r7;
        byte[] $r8;
        java.lang.Throwable $r9, $r11, $r13, $r14;
        java.lang.Exception $r10;
        java.lang.NullPointerException $r12;
        java.lang.String varReplacer6027, varReplacer6028, varReplacer6029, varReplacer6030, varReplacer6031, varReplacer6033;
        null_type varReplacer6032;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.AssetManager getAssets()>();

     label01:
        varReplacer6029 = "location_public_key.der";

        $r2 = virtualinvoke $r1.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(varReplacer6029);

        varReplacer6028 = "X.509";

        $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer6028);

        varReplacer6030 = "RSA";

        $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6030);

        $r5 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2);

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label02:
        $r6 = new java.security.spec.X509EncodedKeySpec;

     label03:
        $r7 = virtualinvoke $r5.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        $r8 = interfaceinvoke $r7.<java.security.PublicKey: byte[] getEncoded()>();

        specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r8);

        $r7 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6);

     label04:
        return $r7;

     label05:
        $r9 := @caughtexception;

        $r10 = new java.lang.Exception;

        varReplacer6033 = "\u65e0\u6b64\u7b97\u6cd5";

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer6033);

        throw $r10;

     label06:
        $r11 := @caughtexception;

        $r10 = new java.lang.Exception;

        varReplacer6027 = "\u516c\u94a5\u975e\u6cd5";

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer6027);

        throw $r10;

     label07:
        $r12 := @caughtexception;

        $r10 = new java.lang.Exception;

        varReplacer6031 = "\u516c\u94a5\u6570\u636e\u4e3a\u7a7a";

        specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer6031);

        throw $r10;

     label08:
        $r13 := @caughtexception;

     label09:
        varReplacer6032 = null;

        return varReplacer6032;

     label10:
        $r14 := @caughtexception;

        goto label09;

        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.security.cert.CertificateException from label01 to label02 with label08;
        catch java.security.cert.CertificateException from label03 to label04 with label08;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label06;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label06;
        catch java.lang.NullPointerException from label01 to label02 with label07;
        catch java.lang.NullPointerException from label03 to label04 with label07;
    }

    public static byte[] a(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1, varReplacer5934;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r4;
        null_type varReplacer5933;
        int varReplacer5935;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = staticinvoke <com.amap.api.location.core.e: javax.crypto.spec.SecretKeySpec c(java.lang.String)>($r1);

        varReplacer5934 = "AES/ECB/ZeroBytePadding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5934);

        varReplacer5935 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5935, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        varReplacer5933 = null;

        return varReplacer5933;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static byte[] a(byte[], java.security.Key) throws java.lang.Exception
    {
        byte[] $r0;
        java.security.Key $r1;
        javax.crypto.Cipher $r2;
        java.lang.String varReplacer6025;
        int varReplacer6026;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.security.Key;

        varReplacer6025 = "RSA/ECB/PKCS1Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6025);

        varReplacer6026 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6026, $r1);

        $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    static byte[] a(byte[], byte[])
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2, r7;
        javax.crypto.Cipher $r3;
        java.lang.Throwable $r4, $r5, $r6;
        java.security.NoSuchAlgorithmException r8;
        javax.crypto.NoSuchPaddingException r9;
        null_type varReplacer6019, varReplacer6021, varReplacer6024;
        int varReplacer6020;
        java.lang.String varReplacer6022, varReplacer6023;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

     label1:
        r7 = new javax.crypto.spec.SecretKeySpec;

     label2:
        $r2 = r7;

     label3:
        varReplacer6023 = "AES";

        specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6023);

        varReplacer6022 = "AES/ECB/PKCS5Padding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6022);

        varReplacer6020 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6020, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label4:
        return $r0;

     label5:
        $r4 := @caughtexception;

        r8 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke r8.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer6024 = null;

        return varReplacer6024;

     label6:
        $r5 := @caughtexception;

        r9 = (javax.crypto.NoSuchPaddingException) $r5;

        virtualinvoke r9.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        varReplacer6021 = null;

        return varReplacer6021;

     label7:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void printStackTrace()>();

        varReplacer6019 = null;

        return varReplacer6019;

        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch javax.crypto.NoSuchPaddingException from label3 to label4 with label6;
        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
    }

    private static java.lang.String b(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer5931;
        java.security.MessageDigest $r2;
        byte[] $r3;
        java.lang.Exception $r4;
        java.lang.RuntimeException $r5;
        null_type varReplacer5932;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r1 != null goto label1;

        varReplacer5932 = null;

        return varReplacer5932;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0);

        varReplacer5931 = "utf-8";

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5931);

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        $r0 = staticinvoke <com.amap.api.location.core.e: java.lang.String a(byte[])>($r3);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static byte[] b(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3, varReplacer5936;
        byte[] $r1;
        byte $b4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 >= 2 goto label2;

     label1:
        $r1 = newarray (byte)[0];

        return $r1;

     label2:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

     label3:
        if $i1 >= $i0 goto label4;

        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        varReplacer5936 = 16;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, varReplacer5936);

        $i2 = $i2 & 255;

        $b4 = (byte) $i2;

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r1;
    }

    private static javax.crypto.spec.SecretKeySpec c(java.lang.String)
    {
        java.lang.String $r0, varReplacer5937, varReplacer5939, varReplacer5941;
        byte[] $r1, $r3;
        java.lang.StringBuffer $r2, r5;
        int $i0, varReplacer5938, varReplacer5940;
        java.lang.Throwable $r4;
        javax.crypto.spec.SecretKeySpec r6;
        java.io.UnsupportedEncodingException r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = null;

        if $r0 != null goto label1;

        $r0 = "";

     label1:
        r5 = new java.lang.StringBuffer;

        $r2 = r5;

        varReplacer5940 = 16;

        specialinvoke r5.<java.lang.StringBuffer: void <init>(int)>(varReplacer5940);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label2:
        $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 >= 16 goto label3;

        varReplacer5937 = "0";

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer5937);

        goto label2;

     label3:
        $i0 = virtualinvoke $r2.<java.lang.StringBuffer: int length()>();

        if $i0 <= 16 goto label4;

        varReplacer5938 = 16;

        virtualinvoke $r2.<java.lang.StringBuffer: void setLength(int)>(varReplacer5938);

     label4:
        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        varReplacer5941 = "UTF-8";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5941);

     label5:
        $r1 = $r3;

     label6:
        r6 = new javax.crypto.spec.SecretKeySpec;

        varReplacer5939 = "AES";

        specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5939);

        return r6;

     label7:
        $r4 := @caughtexception;

        r7 = (java.io.UnsupportedEncodingException) $r4;

        virtualinvoke r7.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label6;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label7;
    }
}
