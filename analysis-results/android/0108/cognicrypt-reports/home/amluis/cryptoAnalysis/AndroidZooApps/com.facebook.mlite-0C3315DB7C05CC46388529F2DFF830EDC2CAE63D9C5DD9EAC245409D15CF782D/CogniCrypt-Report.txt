Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6074)
		Method: <com.facebook.liblite.mqttnano.android.x: byte[] a(java.lang.String)>
		SHA-256: a1b6b9cf42d1ada1e5a5eb91cc9f0563f1c41bfa7ef2f5a87139526d2fcdb4b0
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9416)
		Method: <com.a.a.a.v: b.k a(b.k)>
		SHA-256: dd88f52823118fdf6e6cb7eb1a8ad0f770de9afc54f5e301a85d4137fb424aed
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.a.a.a.v: java.lang.String a(java.lang.String)>
		SHA-256: 88d793d9dd3691eee246a5c44ca1494721af8c6daa5e970c3fe1495a2915a558
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8961)
		Method: <com.a.a.a.v: java.lang.String a(java.lang.String)>
		SHA-256: c65ec7d1b7c891478eb19b4a3dec4e1f7964eb9ba89bec6f834602dcb8673d76
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.liblite.mqttnano.android.x: byte[] a(java.lang.String)>
		SHA-256: 9b89322d6493b299e2d65c241707ef82272bb07f44ae659ba049636457325220
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1601)
		Method: <org.a.a.a.b: java.security.KeyStore b()>
		SHA-256: 4d8fc6e82836e63356ccc18316e0b8ff00ac5de4220d736c482691972523a8ae
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.b.a.a.a.a.c: com.b.a.a.a.a.a a(com.b.a.a.a.a.a)>
		SHA-256: b95470c8549b5474fcf922551795f87f30c9213d48daf6665674ee6ff0b12f08
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8792)
		Method: <com.b.a.a.a.a.c: com.b.a.a.a.a.a a(com.b.a.a.a.a.a)>
		SHA-256: bdf6583da7ee2776bc6997466647f39ae84746d4fa6d7b1c94dfa6e249b87a88
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.a.a.a.v: b.k a(b.k)>
		SHA-256: 88d793d9dd3691eee246a5c44ca1494721af8c6daa5e970c3fe1495a2915a558
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r1)
		Method: <com.facebook.liblite.network.a.a.b: javax.net.ssl.SSLContext b()>
		SHA-256: 63fc91892f2dbe59ed6701cdd4d98087e5d0bcd2a1aac875940770241dd2cb94
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8732)
		Method: <com.a.a.am: javax.net.ssl.SSLSocketFactory x()>
		SHA-256: e82b61d71b90e693bc33e095095509b1577cd524bc330862432a0de1fd3e8bb6
		Secure: false

Findings in Java Class: com.facebook.liblite.network.a.a.b

	 in Method: javax.net.ssl.SSLContext b()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #63fc91892f2dbe59ed6701cdd4d98087e5d0bcd2a1aac875940770241dd2cb94)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r3 = null

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #63fc91892f2dbe59ed6701cdd4d98087e5d0bcd2a1aac875940770241dd2cb94)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r1)


	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1582, varReplacer1582, varReplacer1582)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1582, varReplacer1582, varReplacer1582)


Findings in Java Class: org.a.a.a.b

	 in Method: java.security.KeyStore b()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #4d8fc6e82836e63356ccc18316e0b8ff00ac5de4220d736c482691972523a8ae)
			First parameter (with value "AndroidCAStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1601)


Findings in Java Class: com.a.a.am

	 in Method: javax.net.ssl.SSLSocketFactory x()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8733, varReplacer8733, varReplacer8733)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8733, varReplacer8733, varReplacer8733)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	ConstraintError: 1
	RequiredPredicateError: 4
=====================================================================