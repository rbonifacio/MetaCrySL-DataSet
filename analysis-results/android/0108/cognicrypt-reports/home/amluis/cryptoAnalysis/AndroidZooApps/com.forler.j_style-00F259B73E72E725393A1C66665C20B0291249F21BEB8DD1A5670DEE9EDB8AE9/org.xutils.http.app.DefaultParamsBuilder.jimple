public class org.xutils.http.app.DefaultParamsBuilder extends java.lang.Object implements org.xutils.http.app.ParamsBuilder
{
    private static javax.net.ssl.SSLSocketFactory a;

    public void <init>()
    {
        org.xutils.http.app.DefaultParamsBuilder $r0;

        nop;

        $r0 := @this: org.xutils.http.app.DefaultParamsBuilder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.net.ssl.SSLSocketFactory getTrustAllSSLSocketFactory()
    {
        javax.net.ssl.SSLSocketFactory $r0;
        java.lang.Object[] $r1;
        javax.net.ssl.SSLContext $r2;
        java.lang.Throwable $r3, $r5;
        java.lang.String $r4, varReplacer1795;
        org.xutils.http.app.a r6;
        javax.net.ssl.TrustManager[] r7;
        null_type varReplacer1796, varReplacer1797;

        nop;

        $r0 = <org.xutils.http.app.DefaultParamsBuilder: javax.net.ssl.SSLSocketFactory a>;

        if $r0 != null goto label4;

        entermonitor class "Lorg/xutils/http/app/DefaultParamsBuilder;";

     label1:
        $r0 = <org.xutils.http.app.DefaultParamsBuilder: javax.net.ssl.SSLSocketFactory a>;

        if $r0 != null goto label3;

        $r1 = newarray (javax.net.ssl.TrustManager)[1];

        r6 = new org.xutils.http.app.a;

        specialinvoke r6.<org.xutils.http.app.a: void <init>()>();

        $r1[0] = r6;

     label2:
        varReplacer1795 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1795);

        r7 = (javax.net.ssl.TrustManager[]) $r1;

        varReplacer1796 = null;

        varReplacer1797 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1796, r7, varReplacer1796);

        $r0 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        <org.xutils.http.app.DefaultParamsBuilder: javax.net.ssl.SSLSocketFactory a> = $r0;

     label3:
        exitmonitor class "Lorg/xutils/http/app/DefaultParamsBuilder;";

     label4:
        $r0 = <org.xutils.http.app.DefaultParamsBuilder: javax.net.ssl.SSLSocketFactory a>;

        return $r0;

     label5:
        $r3 := @caughtexception;

     label6:
        $r4 = virtualinvoke $r3.<java.lang.Throwable: java.lang.String getMessage()>();

        staticinvoke <org.xutils.common.util.LogUtil: void e(java.lang.String,java.lang.Throwable)>($r4, $r3);

        goto label3;

     label7:
        $r5 := @caughtexception;

        exitmonitor class "Lorg/xutils/http/app/DefaultParamsBuilder;";

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label6 to label8 with label7;
    }

    public java.lang.String buildCacheKey(org.xutils.http.RequestParams, java.lang.String[])
    {
        org.xutils.http.app.DefaultParamsBuilder $r0;
        org.xutils.http.RequestParams $r1;
        java.lang.String[] $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, $r5, $r6, varReplacer2004, varReplacer2006, varReplacer2007;
        null_type varReplacer2005;

        nop;

        $r0 := @this: org.xutils.http.app.DefaultParamsBuilder;

        $r1 := @parameter0: org.xutils.http.RequestParams;

        $r2 := @parameter1: java.lang.String[];

        if $r2 == null goto label3;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r1.<org.xutils.http.RequestParams: java.lang.String getUri()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer2006 = "?";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2006);

        $i0 = lengthof $r2;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label4;

        $r5 = $r2[$i1];

        $r6 = virtualinvoke $r1.<org.xutils.http.RequestParams: java.lang.String getStringParameter(java.lang.String)>($r5);

        if $r6 == null goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        varReplacer2007 = "=";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2007);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer2004 = "&";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2004);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        varReplacer2005 = null;

        return varReplacer2005;

     label4:
        return $r4;
    }

    public void buildParams(org.xutils.http.RequestParams)
    {
        org.xutils.http.app.DefaultParamsBuilder $r0;
        org.xutils.http.RequestParams $r1;

        nop;

        $r0 := @this: org.xutils.http.app.DefaultParamsBuilder;

        $r1 := @parameter0: org.xutils.http.RequestParams;

        return;
    }

    public void buildSign(org.xutils.http.RequestParams, java.lang.String[])
    {
        org.xutils.http.app.DefaultParamsBuilder $r0;
        org.xutils.http.RequestParams $r1;
        java.lang.String[] $r2;

        nop;

        $r0 := @this: org.xutils.http.app.DefaultParamsBuilder;

        $r1 := @parameter0: org.xutils.http.RequestParams;

        $r2 := @parameter1: java.lang.String[];

        return;
    }

    public java.lang.String buildUri(org.xutils.http.RequestParams, org.xutils.http.'annotation'.HttpRequest)
    {
        org.xutils.http.app.DefaultParamsBuilder $r0;
        org.xutils.http.RequestParams $r1;
        org.xutils.http.'annotation'.HttpRequest $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer1794;

        nop;

        $r0 := @this: org.xutils.http.app.DefaultParamsBuilder;

        $r1 := @parameter0: org.xutils.http.RequestParams;

        $r2 := @parameter1: org.xutils.http.'annotation'.HttpRequest;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = interfaceinvoke $r2.<org.xutils.http.'annotation'.HttpRequest: java.lang.String host()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer1794 = "/";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1794);

        $r4 = interfaceinvoke $r2.<org.xutils.http.'annotation'.HttpRequest: java.lang.String path()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
    {
        org.xutils.http.app.DefaultParamsBuilder $r0;
        javax.net.ssl.SSLSocketFactory $r1;

        nop;

        $r0 := @this: org.xutils.http.app.DefaultParamsBuilder;

        $r1 = staticinvoke <org.xutils.http.app.DefaultParamsBuilder: javax.net.ssl.SSLSocketFactory getTrustAllSSLSocketFactory()>();

        return $r1;
    }
}
