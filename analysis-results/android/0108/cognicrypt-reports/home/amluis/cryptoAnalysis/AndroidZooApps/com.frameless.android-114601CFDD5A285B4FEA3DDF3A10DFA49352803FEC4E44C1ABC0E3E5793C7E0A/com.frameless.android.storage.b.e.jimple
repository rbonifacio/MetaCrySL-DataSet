public class com.frameless.android.storage.b.e extends java.lang.Object
{

    public static byte[] a(byte[], int, byte[], byte[])
    {
        byte[] $r0, $r1, $r2;
        int $i0, $i1;
        java.lang.RuntimeException $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        com.frameless.android.storage.b.a $r5;
        java.lang.String $r6, varReplacer4641, varReplacer4642, varReplacer4643, varReplacer4644, varReplacer4645, varReplacer4646, varReplacer4647;
        javax.crypto.spec.IvParameterSpec $r7;
        javax.crypto.Cipher $r8;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14;

        nop;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 := @parameter2: byte[];

        $r2 := @parameter3: byte[];

        $i1 = lengthof $r1;

        if $i1 != 16 goto label01;

        $i1 = lengthof $r2;

        if $i1 == 16 goto label02;

     label01:
        $r3 = new java.lang.RuntimeException;

        varReplacer4641 = "Set the encryption parameters correctly. The must be 16 length long each";

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer4641);

        throw $r3;

     label02:
        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r5 = <com.frameless.android.storage.b.a: com.frameless.android.storage.b.a a>;

     label03:
        $r6 = virtualinvoke $r5.<com.frameless.android.storage.b.a: java.lang.String a()>();

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6);

     label04:
        $r7 = new javax.crypto.spec.IvParameterSpec;

     label05:
        specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2);

     label06:
        $r6 = <com.frameless.android.storage.b.d: java.lang.String b>;

     label07:
        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6);

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r4, $r7);

        $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label08:
        return $r0;

     label09:
        $r9 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        varReplacer4647 = "Failed to encrypt/descrypt - Unknown Algorithm";

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer4647, $r9);

        throw $r3;

     label10:
        $r10 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        varReplacer4642 = "Failed to encrypt/descrypt- Unknown Padding";

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer4642, $r10);

        throw $r3;

     label11:
        $r11 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        varReplacer4643 = "Failed to encrypt/descrypt - Invalid Key";

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer4643, $r11);

        throw $r3;

     label12:
        $r12 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        varReplacer4646 = "Failed to encrypt/descrypt - Invalid Algorithm Parameter";

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer4646, $r12);

        throw $r3;

     label13:
        $r13 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        varReplacer4644 = "Failed to encrypt/descrypt";

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer4644, $r13);

        throw $r3;

     label14:
        $r14 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        varReplacer4645 = "Failed to encrypt/descrypt";

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer4645, $r14);

        throw $r3;

        catch java.security.NoSuchAlgorithmException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label09;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label09;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label10;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label10;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label10;
        catch java.security.InvalidKeyException from label03 to label04 with label11;
        catch java.security.InvalidKeyException from label05 to label06 with label11;
        catch java.security.InvalidKeyException from label07 to label08 with label11;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label12;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label12;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label12;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label13;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label13;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label13;
        catch javax.crypto.BadPaddingException from label03 to label04 with label14;
        catch javax.crypto.BadPaddingException from label05 to label06 with label14;
        catch javax.crypto.BadPaddingException from label07 to label08 with label14;
    }
}
