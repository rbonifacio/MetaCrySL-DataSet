public final class com.leanplum.a.a extends java.lang.Object
{
    private static final java.lang.String a;
    private static final java.lang.String b;
    private final java.lang.String c;
    private final java.lang.String d;

    static void <clinit>()
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r1, varReplacer4454, varReplacer4455, varReplacer4456, varReplacer4457, varReplacer4458, varReplacer4459;

        nop;

        $r0 = new java.lang.StringBuilder;

        varReplacer4459 = "L";

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4459);

        varReplacer4458 = "q3";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4458);

        varReplacer4456 = "fz";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4456);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.leanplum.a.a: java.lang.String a> = $r1;

        $r0 = new java.lang.StringBuilder;

        varReplacer4454 = "b";

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4454);

        varReplacer4457 = "Lt";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4457);

        varReplacer4455 = "i2";

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer4455);

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.leanplum.a.a: java.lang.String b> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        com.leanplum.a.a $r0;
        java.lang.String $r1, $r2;

        nop;

        $r0 := @this: com.leanplum.a.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.leanplum.a.a: java.lang.String c> = $r1;

        $r0.<com.leanplum.a.a: java.lang.String d> = $r2;

        return;
    }

    private java.lang.String a()
    {
        com.leanplum.a.a $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        nop;

        $r0 := @this: com.leanplum.a.a;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <com.leanplum.a.a: java.lang.String a>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = $r0.<com.leanplum.a.a: java.lang.String c>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = <com.leanplum.a.a: java.lang.String b>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer4493, varReplacer4495;
        byte[] $r2;
        java.lang.Throwable $r3;
        java.lang.Object[] $r4;
        java.lang.StringBuilder $r5;
        int varReplacer4492;
        null_type varReplacer4494;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        varReplacer4493 = "UTF-8";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4493);

        varReplacer4492 = 1;

        $r2 = staticinvoke <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>(varReplacer4492, $r0, $r2);

        $r0 = staticinvoke <java.util.Arrays: java.lang.String toString(byte[])>($r2);

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r4 = newarray (java.lang.Object)[2];

        $r5 = new java.lang.StringBuilder;

        varReplacer4495 = "Unable to encrypt ";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4495);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4[0] = $r0;

        $r4[1] = $r3;

        staticinvoke <com.leanplum.a.w: void b(java.lang.Object[])>($r4);

        varReplacer4494 = null;

        return varReplacer4494;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private static byte[] a(int, java.lang.String, byte[])
    {
        int $i0, varReplacer4503, varReplacer4504, varReplacer4511;
        java.lang.String $r0, $r2, varReplacer4502, varReplacer4509, varReplacer4510, varReplacer4513, varReplacer4515;
        byte[] $r1, $r3, $r4;
        javax.crypto.spec.PBEKeySpec $r5;
        char[] $r6;
        javax.crypto.SecretKeyFactory $r7;
        javax.crypto.SecretKey $r8;
        javax.crypto.spec.SecretKeySpec $r9;
        javax.crypto.Cipher $r10;
        javax.crypto.spec.IvParameterSpec $r11;
        java.lang.Throwable $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        null_type varReplacer4505, varReplacer4506, varReplacer4507, varReplacer4508, varReplacer4512, varReplacer4514, varReplacer4516, varReplacer4517;

        nop;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        $r1 := @parameter2: byte[];

        $r2 = "L3@nP1Vm";

     label01:
        varReplacer4509 = "UTF-8";

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4509);

     label02:
        $r2 = "__l3anplum__iv__";

     label03:
        varReplacer4515 = "UTF-8";

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4515);

     label04:
        $r5 = new javax.crypto.spec.PBEKeySpec;

     label05:
        $r6 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        varReplacer4503 = 1000;

        varReplacer4504 = 256;

        specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer4503, varReplacer4504);

        varReplacer4513 = "PBEWithMD5And128BitAES-CBC-OpenSSL";

        $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4513);

        $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5);

        $r3 = interfaceinvoke $r8.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label06:
        $r9 = new javax.crypto.spec.SecretKeySpec;

     label07:
        varReplacer4510 = "AES";

        specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4510);

        varReplacer4502 = "AES/CBC/PKCS5Padding";

        $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4502);

     label08:
        $r11 = new javax.crypto.spec.IvParameterSpec;

     label09:
        specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        varReplacer4511 = 1;

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4511, $r9, $r11);

        $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label10:
        return $r1;

     label11:
        $r12 := @caughtexception;

        varReplacer4506 = null;

        return varReplacer4506;

     label12:
        $r13 := @caughtexception;

        varReplacer4512 = null;

        return varReplacer4512;

     label13:
        $r14 := @caughtexception;

        varReplacer4517 = null;

        return varReplacer4517;

     label14:
        $r15 := @caughtexception;

        varReplacer4514 = null;

        return varReplacer4514;

     label15:
        $r16 := @caughtexception;

        varReplacer4516 = null;

        return varReplacer4516;

     label16:
        $r17 := @caughtexception;

        varReplacer4507 = null;

        return varReplacer4507;

     label17:
        $r18 := @caughtexception;

        varReplacer4508 = null;

        return varReplacer4508;

     label18:
        $r19 := @caughtexception;

        varReplacer4505 = null;

        return varReplacer4505;

        catch java.security.InvalidKeyException from label01 to label02 with label18;
        catch java.security.InvalidKeyException from label03 to label04 with label18;
        catch java.security.InvalidKeyException from label05 to label06 with label18;
        catch java.security.InvalidKeyException from label07 to label08 with label18;
        catch java.security.InvalidKeyException from label09 to label10 with label18;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label17;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label17;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label17;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label17;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label17;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label16;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label16;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label16;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label16;
        catch javax.crypto.NoSuchPaddingException from label09 to label10 with label16;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label15;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label15;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label15;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label15;
        catch java.security.InvalidAlgorithmParameterException from label09 to label10 with label15;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label14;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label14;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label14;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label14;
        catch javax.crypto.IllegalBlockSizeException from label09 to label10 with label14;
        catch javax.crypto.BadPaddingException from label01 to label02 with label13;
        catch javax.crypto.BadPaddingException from label03 to label04 with label13;
        catch javax.crypto.BadPaddingException from label05 to label06 with label13;
        catch javax.crypto.BadPaddingException from label07 to label08 with label13;
        catch javax.crypto.BadPaddingException from label09 to label10 with label13;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label12;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label12;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label12;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label12;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label12;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label11;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label11;
        catch java.security.spec.InvalidKeySpecException from label05 to label06 with label11;
        catch java.security.spec.InvalidKeySpecException from label07 to label08 with label11;
        catch java.security.spec.InvalidKeySpecException from label09 to label10 with label11;
    }

    private static java.lang.String b(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2;
        java.lang.Object[] $r3;
        java.lang.StringBuilder $r4;
        java.lang.Throwable $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label01:
        $r2 = staticinvoke <com.leanplum.a.a: byte[] b(java.lang.String)>($r1);

     label02:
        if $r2 != null goto label07;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid ciphertext: ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r3[0] = $r0;

     label05:
        staticinvoke <com.leanplum.a.w: void b(java.lang.Object[])>($r3);

     label06:
        return null;

     label07:
        $r2 = staticinvoke <com.leanplum.a.a: byte[] a(int,java.lang.String,byte[])>(2, $r0, $r2);

     label08:
        if $r2 == null goto label12;

        $r0 = new java.lang.String;

     label09:
        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

     label10:
        return $r0;

     label11:
        $r5 := @caughtexception;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not encode UTF8 string.\n");

        $r0 = staticinvoke <com.leanplum.a.w: java.lang.String a(java.lang.Throwable)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[0] = $r0;

        staticinvoke <com.leanplum.a.w: void b(java.lang.Object[])>($r3);

     label12:
        return null;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label11;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label11;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label11;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label11;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label11;
    }

    private static byte[] b(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        byte[] $r2;
        byte $b2;
        java.lang.Throwable $r3;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label01;

        return null;

     label01:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 < 2 goto label11;

     label02:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

     label03:
        $i0 = $i0 + -1;

     label04:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s*,\\s*");

     label05:
        $i0 = lengthof $r1;

        $r2 = newarray (byte)[$i0];

        $i0 = 0;

     label06:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label09;

        $r0 = $r1[$i0];

     label07:
        $b2 = staticinvoke <java.lang.Byte: byte parseByte(java.lang.String)>($r0);

     label08:
        $r2[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label06;

     label09:
        return $r2;

     label10:
        $r3 := @caughtexception;

     label11:
        return null;

        catch java.lang.NumberFormatException from label02 to label03 with label10;
        catch java.lang.NumberFormatException from label04 to label05 with label10;
        catch java.lang.NumberFormatException from label07 to label08 with label10;
    }

    public final java.lang.String a(android.content.SharedPreferences, java.lang.String, java.lang.String)
    {
        com.leanplum.a.a $r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2, $r3, $r7, $r11;
        android.util.Pair $r4;
        java.lang.Object[] $r5;
        java.lang.StringBuilder $r6;
        int[] $r8;
        java.lang.Object $r9;
        com.leanplum.a.b $r10;
        int $i0;
        boolean $z0;
        byte[] $r12;

        $r0 := @this: com.leanplum.a.a;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r2, null);

        if $r2 != null goto label01;

        return $r3;

     label01:
        $r4 = staticinvoke <com.leanplum.a.b: android.util.Pair a(java.lang.String)>($r2);

        if $r4 != null goto label04;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Got null encryptionSpec for encrypted: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5[0] = $r7;

        staticinvoke <com.leanplum.a.w: void d(java.lang.Object[])>($r5);

        $r7 = null;

     label02:
        if $r7 != null goto label03;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unable to decrypt ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5[0] = $r2;

        staticinvoke <com.leanplum.a.w: void b(java.lang.Object[])>($r5);

     label03:
        if $r7 == null goto label12;

        return $r7;

     label04:
        $r8 = <com.leanplum.a.a$1: int[] a>;

        $r9 = $r4.<android.util.Pair: java.lang.Object first>;

        $r10 = (com.leanplum.a.b) $r9;

        $i0 = virtualinvoke $r10.<com.leanplum.a.b: int ordinal()>();

        $i0 = $r8[$i0];

        lookupswitch($i0)
        {
            case 1: goto label06;
            case 2: goto label09;
            default: goto label05;
        };

     label05:
        $r7 = null;

        goto label02;

     label06:
        $r7 = $r0.<com.leanplum.a.a: java.lang.String d>;

        if $r7 == null goto label07;

        $r7 = $r0.<com.leanplum.a.a: java.lang.String d>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label08;

     label07:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "Decrypt called with null token.";

        staticinvoke <com.leanplum.a.w: void a(java.lang.Object[])>($r5);

        $r7 = null;

        goto label02;

     label08:
        $r7 = $r0.<com.leanplum.a.a: java.lang.String d>;

        $r9 = $r4.<android.util.Pair: java.lang.Object second>;

        $r11 = (java.lang.String) $r9;

        $r11 = staticinvoke <com.leanplum.a.a: java.lang.String b(java.lang.String,java.lang.String)>($r7, $r11);

        $r7 = $r11;

        if $r11 == null goto label02;

        $r12 = staticinvoke <com.leanplum.a.a: byte[] b(java.lang.String)>($r11);

        if $r12 == null goto label02;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Discarding legacy value that appears to be an encrypted value: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5[0] = $r2;

        staticinvoke <com.leanplum.a.w: void a(java.lang.Object[])>($r5);

        $r7 = null;

        goto label03;

     label09:
        $r7 = $r0.<com.leanplum.a.a: java.lang.String c>;

        if $r7 == null goto label10;

        $r7 = $r0.<com.leanplum.a.a: java.lang.String c>;

        $z0 = virtualinvoke $r7.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label11;

     label10:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = "Decrypt called with null appId.";

        staticinvoke <com.leanplum.a.w: void a(java.lang.Object[])>($r5);

        $r7 = null;

        goto label02;

     label11:
        $r7 = specialinvoke $r0.<com.leanplum.a.a: java.lang.String a()>();

        $r9 = $r4.<android.util.Pair: java.lang.Object second>;

        $r11 = (java.lang.String) $r9;

        $r7 = staticinvoke <com.leanplum.a.a: java.lang.String b(java.lang.String,java.lang.String)>($r7, $r11);

        goto label02;

     label12:
        return $r3;
    }

    public final java.lang.String a(java.lang.String)
    {
        com.leanplum.a.a $r0;
        java.lang.String $r1, $r2, varReplacer4486, varReplacer4487;
        boolean $z0;
        java.lang.Object[] $r3;
        java.lang.StringBuilder $r4;
        com.leanplum.a.b $r5;
        null_type varReplacer4488, varReplacer4489, varReplacer4490, varReplacer4491;

        nop;

        $r0 := @this: com.leanplum.a.a;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        varReplacer4490 = null;

        return varReplacer4490;

     label1:
        $r2 = $r0.<com.leanplum.a.a: java.lang.String c>;

        if $r2 == null goto label2;

        $r2 = $r0.<com.leanplum.a.a: java.lang.String c>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = "Encrypt called with null appId.";

        staticinvoke <com.leanplum.a.w: void a(java.lang.Object[])>($r3);

        varReplacer4491 = null;

        return varReplacer4491;

     label3:
        $r2 = specialinvoke $r0.<com.leanplum.a.a: java.lang.String a()>();

        $r2 = staticinvoke <com.leanplum.a.a: java.lang.String a(java.lang.String,java.lang.String)>($r2, $r1);

        if $r2 != null goto label4;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = "Failed to encrypt.";

        staticinvoke <com.leanplum.a.w: void b(java.lang.Object[])>($r3);

        varReplacer4488 = null;

        return varReplacer4488;

     label4:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label5;

        varReplacer4486 = "[";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer4486);

        if $z0 != 0 goto label6;

     label5:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = new java.lang.StringBuilder;

        varReplacer4487 = "Invalid ciphertext: ";

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer4487);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3[0] = $r1;

        staticinvoke <com.leanplum.a.w: void b(java.lang.Object[])>($r3);

        varReplacer4489 = null;

        return varReplacer4489;

     label6:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = <com.leanplum.a.b: com.leanplum.a.b b>;

        $r1 = $r5.<com.leanplum.a.b: java.lang.String c>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }
}
