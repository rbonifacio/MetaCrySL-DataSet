public class com.c.a.c extends java.lang.Object
{
    private final java.lang.String a;
    private final java.lang.String b;
    private java.lang.String c;

    public void <init>(java.lang.String)
    {
        com.c.a.c $r0;
        java.lang.String $r1, varReplacer12792, varReplacer12793;

        nop;

        $r0 := @this: com.c.a.c;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer12792 = "RSA";

        $r0.<com.c.a.c: java.lang.String a> = varReplacer12792;

        varReplacer12793 = "RSA/ECB/PKCS1Padding";

        $r0.<com.c.a.c: java.lang.String b> = varReplacer12793;

        $r0.<com.c.a.c: java.lang.String c> = $r1;

        return;
    }

    private java.security.PublicKey a()
    {
        com.c.a.c $r0;
        java.lang.String $r1, varReplacer12801;
        byte[] $r2;
        com.braintree.org.bouncycastle.asn1.h $r3, r14;
        com.braintree.org.bouncycastle.asn1.ba $r4;
        com.braintree.org.bouncycastle.asn1.a.a $r5;
        java.security.spec.RSAPublicKeySpec $r6, r15;
        java.math.BigInteger $r7, $r8;
        java.security.KeyFactory $r9;
        java.security.PublicKey $r10;
        java.lang.Throwable $r11, $r12, $r13;
        java.security.NoSuchAlgorithmException r16;
        java.security.spec.InvalidKeySpecException r17;
        java.io.IOException r18;
        null_type varReplacer12800;

        nop;

        $r0 := @this: com.c.a.c;

        $r1 = $r0.<com.c.a.c: java.lang.String c>;

     label01:
        $r2 = staticinvoke <com.braintree.org.bouncycastle.util.a.a: byte[] a(java.lang.String)>($r1);

     label02:
        r14 = new com.braintree.org.bouncycastle.asn1.h;

        $r3 = r14;

     label03:
        specialinvoke r14.<com.braintree.org.bouncycastle.asn1.h: void <init>(byte[])>($r2);

        $r4 = virtualinvoke $r3.<com.braintree.org.bouncycastle.asn1.h: com.braintree.org.bouncycastle.asn1.ba c()>();

        $r5 = staticinvoke <com.braintree.org.bouncycastle.asn1.a.a: com.braintree.org.bouncycastle.asn1.a.a a(java.lang.Object)>($r4);

     label04:
        r15 = new java.security.spec.RSAPublicKeySpec;

        $r6 = r15;

     label05:
        $r7 = virtualinvoke $r5.<com.braintree.org.bouncycastle.asn1.a.a: java.math.BigInteger e()>();

        $r8 = virtualinvoke $r5.<com.braintree.org.bouncycastle.asn1.a.a: java.math.BigInteger f()>();

        specialinvoke r15.<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r7, $r8);

        varReplacer12801 = "RSA";

        $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer12801);

        $r10 = virtualinvoke $r9.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6);

     label06:
        return $r10;

     label07:
        $r11 := @caughtexception;

        r16 = (java.security.NoSuchAlgorithmException) $r11;

        virtualinvoke r16.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label08:
        varReplacer12800 = null;

        return varReplacer12800;

     label09:
        $r12 := @caughtexception;

        r17 = (java.security.spec.InvalidKeySpecException) $r12;

        virtualinvoke r17.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        goto label08;

     label10:
        $r13 := @caughtexception;

        r18 = (java.io.IOException) $r13;

        virtualinvoke r18.<java.io.IOException: void printStackTrace()>();

        goto label08;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label07;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label07;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label07;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label09;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label09;
        catch java.security.spec.InvalidKeySpecException from label05 to label06 with label09;
        catch java.io.IOException from label01 to label02 with label10;
        catch java.io.IOException from label03 to label04 with label10;
        catch java.io.IOException from label05 to label06 with label10;
    }

    public java.lang.String a(byte[])
    {
        com.c.a.c $r0;
        byte[] $r1;
        javax.crypto.Cipher $r2;
        java.security.PublicKey $r3;
        java.lang.Throwable $r4, $r5, $r6, $r7, $r8;
        java.lang.String r9, varReplacer12796;
        java.security.NoSuchAlgorithmException r10;
        javax.crypto.NoSuchPaddingException r11;
        java.security.InvalidKeyException r12;
        javax.crypto.IllegalBlockSizeException r13;
        javax.crypto.BadPaddingException r14;
        int varReplacer12794;
        null_type varReplacer12795;

        nop;

        $r0 := @this: com.c.a.c;

        $r1 := @parameter0: byte[];

     label01:
        varReplacer12796 = "RSA/ECB/PKCS1Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12796);

        $r3 = specialinvoke $r0.<com.c.a.c: java.security.PublicKey a()>();

        varReplacer12794 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12794, $r3);

        $r1 = staticinvoke <com.braintree.org.bouncycastle.util.a.a: byte[] a(byte[])>($r1);

        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label02:
        r9 = new java.lang.String;

     label03:
        $r1 = staticinvoke <com.braintree.org.bouncycastle.util.a.a: byte[] a(byte[])>($r1);

        specialinvoke r9.<java.lang.String: void <init>(byte[])>($r1);

     label04:
        return r9;

     label05:
        $r4 := @caughtexception;

        r10 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke r10.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label06:
        varReplacer12795 = null;

        return varReplacer12795;

     label07:
        $r5 := @caughtexception;

        r11 = (javax.crypto.NoSuchPaddingException) $r5;

        virtualinvoke r11.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label06;

     label08:
        $r6 := @caughtexception;

        r12 = (java.security.InvalidKeyException) $r6;

        virtualinvoke r12.<java.security.InvalidKeyException: void printStackTrace()>();

        goto label06;

     label09:
        $r7 := @caughtexception;

        r13 = (javax.crypto.IllegalBlockSizeException) $r7;

        virtualinvoke r13.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        goto label06;

     label10:
        $r8 := @caughtexception;

        r14 = (javax.crypto.BadPaddingException) $r8;

        virtualinvoke r14.<javax.crypto.BadPaddingException: void printStackTrace()>();

        goto label06;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label07;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label07;
        catch java.security.InvalidKeyException from label01 to label02 with label08;
        catch java.security.InvalidKeyException from label03 to label04 with label08;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label09;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label09;
        catch javax.crypto.BadPaddingException from label01 to label02 with label10;
        catch javax.crypto.BadPaddingException from label03 to label04 with label10;
    }
}
