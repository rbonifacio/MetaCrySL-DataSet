public class com.ginnungagap808.wintersnow.Ncdr extends java.lang.Object
{
    private static java.lang.String basedir;

    public void <init>()
    {
        com.ginnungagap808.wintersnow.Ncdr $r0;

        $r0 := @this: com.ginnungagap808.wintersnow.Ncdr;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decodeFile(java.io.InputStream)
    {
        java.io.ByteArrayOutputStream $r0;
        javax.crypto.spec.DESKeySpec $r1;
        java.lang.Exception $r2;
        java.io.InputStream $r3;
        byte[] $r4, $r7;
        java.lang.String $r5, varReplacer287, varReplacer289, varReplacer290;
        com.ginnungagap808.wintersnow.Base64$Decoder $r6;
        javax.crypto.SecretKeyFactory $r8;
        javax.crypto.SecretKey $r9;
        javax.crypto.Cipher $r10;
        javax.crypto.CipherOutputStream $r11;
        int $i0, varReplacer288, varReplacer291, varReplacer292, varReplacer293;

        nop;

        $r3 := @parameter0: java.io.InputStream;

        $r4 = null;

        $r1 = new javax.crypto.spec.DESKeySpec;

        $r5 = new java.lang.String;

     label01:
        $r6 = staticinvoke <com.ginnungagap808.wintersnow.Base64: com.ginnungagap808.wintersnow.Base64$Decoder getDecoder()>();

        varReplacer290 = "eXRxZTdvYnllNw==";

        $r7 = virtualinvoke $r6.<com.ginnungagap808.wintersnow.Base64$Decoder: byte[] decode(java.lang.String)>(varReplacer290);

        specialinvoke $r5.<java.lang.String: void <init>(byte[])>($r7);

        $r7 = virtualinvoke $r5.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r1.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r7);

        varReplacer289 = "DES";

        $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer289);

        $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1);

        varReplacer287 = "DES";

        $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer287);

        varReplacer288 = 2;

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer288, $r9);

        $r7 = staticinvoke <com.ginnungagap808.wintersnow.Ncdr: byte[] getBytes(java.io.InputStream)>($r3);

     label02:
        $r0 = new java.io.ByteArrayOutputStream;

     label03:
        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        $r11 = new javax.crypto.CipherOutputStream;

     label05:
        specialinvoke $r11.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r0, $r10);

        virtualinvoke $r11.<javax.crypto.CipherOutputStream: void write(byte[])>($r7);

        virtualinvoke $r11.<javax.crypto.CipherOutputStream: void flush()>();

        virtualinvoke $r11.<javax.crypto.CipherOutputStream: void close()>();

        $r4 = newarray (byte)[1024];

     label06:
        varReplacer291 = 0;

        varReplacer292 = 1024;

        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r4, varReplacer291, varReplacer292);

     label07:
        if $i0 == -1 goto label11;

     label08:
        varReplacer293 = 0;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r4, varReplacer293, $i0);

     label09:
        goto label06;

     label10:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        return $r4;

     label11:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        $r7 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label12:
        return $r7;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label11 to label12 with label10;
    }

    public static void decrypt(java.lang.String, java.io.File) throws java.lang.Throwable
    {
        java.lang.String $r0;
        java.io.File $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.File;

        staticinvoke <com.ginnungagap808.wintersnow.Ncdr: void encryptOrDecrypt(java.lang.String,int,java.io.File)>($r0, 2, $r1);

        return;
    }

    public static java.lang.String decryptName(java.lang.String)
    {
        java.lang.String $r0, $r3, r17, varReplacer83, varReplacer84, varReplacer85, varReplacer86, varReplacer87, varReplacer88, varReplacer89, varReplacer90;
        javax.crypto.spec.DESKeySpec $r1, r18;
        javax.crypto.Cipher $r2, $r8;
        com.ginnungagap808.wintersnow.Base64$Decoder $r4;
        byte[] $r5;
        javax.crypto.SecretKeyFactory $r6;
        javax.crypto.SecretKey $r7;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.security.InvalidKeyException r19;
        java.security.NoSuchAlgorithmException r20;
        java.security.spec.InvalidKeySpecException r21;
        javax.crypto.NoSuchPaddingException r22;
        javax.crypto.IllegalBlockSizeException r23;
        javax.crypto.BadPaddingException r24;
        java.io.UnsupportedEncodingException r25;
        int varReplacer91;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = null;

        r18 = new javax.crypto.spec.DESKeySpec;

        $r1 = r18;

        r17 = new java.lang.String;

        $r3 = r17;

     label01:
        $r4 = staticinvoke <com.ginnungagap808.wintersnow.Base64: com.ginnungagap808.wintersnow.Base64$Decoder getDecoder()>();

        varReplacer85 = "eXRxZTdvYnllNw==";

        $r5 = virtualinvoke $r4.<com.ginnungagap808.wintersnow.Base64$Decoder: byte[] decode(java.lang.String)>(varReplacer85);

        specialinvoke r17.<java.lang.String: void <init>(byte[])>($r5);

        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        specialinvoke r18.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r5);

        varReplacer86 = "DES";

        $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer86);

        $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1);

        varReplacer88 = "DES";

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer88);

     label02:
        $r2 = $r8;

     label03:
        varReplacer91 = 2;

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer91, $r7);

     label04:
        $r4 = staticinvoke <com.ginnungagap808.wintersnow.Base64: com.ginnungagap808.wintersnow.Base64$Decoder getUrlDecoder()>();

        $r5 = virtualinvoke $r4.<com.ginnungagap808.wintersnow.Base64$Decoder: byte[] decode(java.lang.String)>($r0);

     label05:
        $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label06:
        $r3 = new java.lang.String;

     label07:
        varReplacer89 = "UTF8";

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r5, varReplacer89);

     label08:
        return $r3;

     label09:
        $r9 := @caughtexception;

        r19 = (java.security.InvalidKeyException) $r9;

        virtualinvoke r19.<java.security.InvalidKeyException: void printStackTrace()>();

        goto label04;

     label10:
        $r10 := @caughtexception;

        r20 = (java.security.NoSuchAlgorithmException) $r10;

        virtualinvoke r20.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label04;

     label11:
        $r11 := @caughtexception;

        r21 = (java.security.spec.InvalidKeySpecException) $r11;

        virtualinvoke r21.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        goto label04;

     label12:
        $r12 := @caughtexception;

        r22 = (javax.crypto.NoSuchPaddingException) $r12;

        virtualinvoke r22.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label04;

     label13:
        $r13 := @caughtexception;

        varReplacer90 = "";

        return varReplacer90;

     label14:
        $r14 := @caughtexception;

        r23 = (javax.crypto.IllegalBlockSizeException) $r14;

        virtualinvoke r23.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        varReplacer83 = "";

        return varReplacer83;

     label15:
        $r15 := @caughtexception;

        r24 = (javax.crypto.BadPaddingException) $r15;

        virtualinvoke r24.<javax.crypto.BadPaddingException: void printStackTrace()>();

        varReplacer84 = "";

        return varReplacer84;

     label16:
        $r16 := @caughtexception;

        r25 = (java.io.UnsupportedEncodingException) $r16;

        virtualinvoke r25.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        varReplacer87 = "";

        return varReplacer87;

        catch java.security.InvalidKeyException from label01 to label02 with label09;
        catch java.security.InvalidKeyException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label10;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label10;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label11;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label11;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label12;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label12;
        catch java.lang.IllegalArgumentException from label04 to label05 with label13;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label14;
        catch javax.crypto.BadPaddingException from label05 to label06 with label15;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label16;
    }

    private static boolean deleteDirectory(java.io.File)
    {
        java.io.File $r0, $r2;
        boolean $z0;
        java.io.File[] $r1;
        int $i0, $i1;

        $r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        if $r1 == null goto label4;

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label4;

        $r2 = $r1[$i0];

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        $r2 = $r1[$i0];

        staticinvoke <com.ginnungagap808.wintersnow.Ncdr: boolean deleteDirectory(java.io.File)>($r2);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r2 = $r1[$i0];

        virtualinvoke $r2.<java.io.File: boolean delete()>();

        goto label2;

     label4:
        $z0 = virtualinvoke $r0.<java.io.File: boolean delete()>();

        return $z0;
    }

    public static void encrypt(java.lang.String, java.io.File) throws java.lang.Throwable
    {
        java.lang.String $r0;
        java.io.File $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.io.File;

        staticinvoke <com.ginnungagap808.wintersnow.Ncdr: void encryptOrDecrypt(java.lang.String,int,java.io.File)>($r0, 1, $r1);

        return;
    }

    public static java.lang.String encryptName(java.lang.String)
    {
        java.lang.String $r0, $r3, r18;
        javax.crypto.spec.DESKeySpec $r1, r19;
        javax.crypto.Cipher $r2, $r8;
        com.ginnungagap808.wintersnow.Base64$Decoder $r4;
        byte[] $r5, $r9;
        javax.crypto.SecretKeyFactory $r6;
        javax.crypto.SecretKey $r7;
        com.ginnungagap808.wintersnow.Base64$Encoder $r10;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.security.InvalidKeyException r20;
        java.security.NoSuchAlgorithmException r21;
        java.security.spec.InvalidKeySpecException r22;
        javax.crypto.NoSuchPaddingException r23;
        java.io.UnsupportedEncodingException r24;
        javax.crypto.IllegalBlockSizeException r25;
        javax.crypto.BadPaddingException r26;

        $r0 := @parameter0: java.lang.String;

        $r2 = null;

        r19 = new javax.crypto.spec.DESKeySpec;

        $r1 = r19;

        r18 = new java.lang.String;

        $r3 = r18;

     label01:
        $r4 = staticinvoke <com.ginnungagap808.wintersnow.Base64: com.ginnungagap808.wintersnow.Base64$Decoder getDecoder()>();

        $r5 = virtualinvoke $r4.<com.ginnungagap808.wintersnow.Base64$Decoder: byte[] decode(java.lang.String)>("eXRxZTdvYnllNw==");

        specialinvoke r18.<java.lang.String: void <init>(byte[])>($r5);

        $r5 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        specialinvoke r19.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r5);

        $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DES");

        $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1);

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES");

     label02:
        $r2 = $r8;

     label03:
        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r7);

     label04:
        $r5 = null;

     label05:
        $r9 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8");

     label06:
        $r5 = $r9;

     label07:
        $r9 = null;

     label08:
        $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label09:
        $r9 = $r5;

     label10:
        $r10 = staticinvoke <com.ginnungagap808.wintersnow.Base64: com.ginnungagap808.wintersnow.Base64$Encoder getUrlEncoder()>();

        $r0 = virtualinvoke $r10.<com.ginnungagap808.wintersnow.Base64$Encoder: java.lang.String encodeToString(byte[])>($r9);

        return $r0;

     label11:
        $r11 := @caughtexception;

        r20 = (java.security.InvalidKeyException) $r11;

        virtualinvoke r20.<java.security.InvalidKeyException: void printStackTrace()>();

        goto label04;

     label12:
        $r12 := @caughtexception;

        r21 = (java.security.NoSuchAlgorithmException) $r12;

        virtualinvoke r21.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label04;

     label13:
        $r13 := @caughtexception;

        r22 = (java.security.spec.InvalidKeySpecException) $r13;

        virtualinvoke r22.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        goto label04;

     label14:
        $r14 := @caughtexception;

        r23 = (javax.crypto.NoSuchPaddingException) $r14;

        virtualinvoke r23.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label04;

     label15:
        $r15 := @caughtexception;

        r24 = (java.io.UnsupportedEncodingException) $r15;

        virtualinvoke r24.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label07;

     label16:
        $r16 := @caughtexception;

        r25 = (javax.crypto.IllegalBlockSizeException) $r16;

        virtualinvoke r25.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        goto label10;

     label17:
        $r17 := @caughtexception;

        r26 = (javax.crypto.BadPaddingException) $r17;

        virtualinvoke r26.<javax.crypto.BadPaddingException: void printStackTrace()>();

        goto label10;

        catch java.security.InvalidKeyException from label01 to label02 with label11;
        catch java.security.InvalidKeyException from label03 to label04 with label11;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label12;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label13;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label13;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label14;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label14;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label15;
        catch javax.crypto.IllegalBlockSizeException from label08 to label09 with label16;
        catch javax.crypto.BadPaddingException from label08 to label09 with label17;
    }

    private static void encryptOrDecrypt(java.lang.String, int, java.io.File) throws java.lang.Throwable
    {
        java.lang.String $r0;
        int $i0;
        javax.crypto.CipherOutputStream $r1;
        javax.crypto.spec.DESKeySpec $r2;
        java.io.File $r3, $r10;
        byte[] $r4;
        javax.crypto.SecretKeyFactory $r5;
        javax.crypto.SecretKey $r6;
        javax.crypto.Cipher $r7;
        java.io.FileInputStream $r8;
        javax.crypto.CipherInputStream $r9;
        java.lang.StringBuilder $r11;
        java.io.FileOutputStream $r12;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r3 := @parameter2: java.io.File;

        $r2 = new javax.crypto.spec.DESKeySpec;

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r2.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r4);

        $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("DES");

        $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2);

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES");

        if $i0 != 1 goto label1;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r6);

        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        $r9 = new javax.crypto.CipherInputStream;

        specialinvoke $r9.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r8, $r7);

        $r4 = staticinvoke <com.ginnungagap808.wintersnow.Ncdr: byte[] getBytes(java.io.InputStream)>($r9);

        virtualinvoke $r9.<javax.crypto.CipherInputStream: void close()>();

        virtualinvoke $r8.<java.io.FileInputStream: void close()>();

        $r10 = new java.io.File;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r0 = <com.ginnungagap808.wintersnow.Ncdr: java.lang.String basedir>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\src\\main\\assets\\");

        $r0 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r0 = staticinvoke <com.ginnungagap808.wintersnow.Ncdr: java.lang.String encryptName(java.lang.String)>($r0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r0);

        $r12 = new java.io.FileOutputStream;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>($r10);

        virtualinvoke $r12.<java.io.FileOutputStream: void write(byte[])>($r4);

        virtualinvoke $r12.<java.io.FileOutputStream: void flush()>();

        virtualinvoke $r12.<java.io.FileOutputStream: void close()>();

        return;

     label1:
        if $i0 != 2 goto label2;

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r6);

        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        $r4 = staticinvoke <com.ginnungagap808.wintersnow.Ncdr: byte[] getBytes(java.io.InputStream)>($r8);

        virtualinvoke $r8.<java.io.FileInputStream: void close()>();

        $r10 = new java.io.File;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r0 = <com.ginnungagap808.wintersnow.Ncdr: java.lang.String basedir>;

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\src\\main\\assets\\");

        $r0 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r0);

        $r12 = new java.io.FileOutputStream;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>($r10);

        $r1 = new javax.crypto.CipherOutputStream;

        specialinvoke $r1.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r12, $r7);

        virtualinvoke $r1.<javax.crypto.CipherOutputStream: void write(byte[])>($r4);

        virtualinvoke $r1.<javax.crypto.CipherOutputStream: void flush()>();

        virtualinvoke $r1.<javax.crypto.CipherOutputStream: void close()>();

     label2:
        return;
    }

    public static byte[] getBytes(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.ByteArrayOutputStream $r1;
        boolean $z0;
        int $i0, varReplacer295, varReplacer296, varReplacer297, varReplacer298;
        byte[] $r2;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $z0 = $r0 instanceof java.io.ByteArrayInputStream;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int available()>();

        $r2 = newarray (byte)[$i0];

        varReplacer298 = 0;

        virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, varReplacer298, $i0);

        return $r2;

     label1:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = newarray (byte)[1024];

     label2:
        varReplacer295 = 0;

        varReplacer296 = 1024;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, varReplacer295, varReplacer296);

        if $i0 == -1 goto label3;

        varReplacer297 = 0;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, varReplacer297, $i0);

        goto label2;

     label3:
        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    private static java.lang.String getRoot() throws java.io.IOException, java.net.URISyntaxException
    {
        java.io.File $r0, $r6, $r7, $r8;
        java.lang.Class $r1;
        java.security.ProtectionDomain $r2;
        java.security.CodeSource $r3;
        java.net.URL $r4;
        java.net.URI $r5;
        java.lang.String $r9;

        $r1 = class "Lcom/ginnungagap808/wintersnow/Ncdr;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.security.ProtectionDomain getProtectionDomain()>();

        $r3 = virtualinvoke $r2.<java.security.ProtectionDomain: java.security.CodeSource getCodeSource()>();

        $r4 = virtualinvoke $r3.<java.security.CodeSource: java.net.URL getLocation()>();

        $r0 = new java.io.File;

        $r5 = virtualinvoke $r4.<java.net.URL: java.net.URI toURI()>();

        specialinvoke $r0.<java.io.File: void <init>(java.net.URI)>($r5);

        $r6 = new java.io.File;

        $r7 = new java.io.File;

        $r8 = new java.io.File;

        $r9 = virtualinvoke $r0.<java.io.File: java.lang.String getParent()>();

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getParent()>();

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r9);

        $r9 = virtualinvoke $r7.<java.io.File: java.lang.String getParent()>();

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r9);

        $r9 = virtualinvoke $r6.<java.io.File: java.lang.String getParent()>();

        return $r9;
    }

    public static void main(java.lang.String[]) throws java.lang.Throwable
    {
        java.lang.String[] $r0;
        java.lang.Exception $r1;
        java.io.File $r2;
        java.lang.String $r3;
        java.lang.StringBuilder $r4;
        java.io.File[] $r5;
        int $i0, $i1;
        com.ginnungagap808.wintersnow.Base64$Decoder $r6;
        byte[] $r7;

        $r0 := @parameter0: java.lang.String[];

        $r3 = staticinvoke <com.ginnungagap808.wintersnow.Ncdr: java.lang.String getRoot()>();

        <com.ginnungagap808.wintersnow.Ncdr: java.lang.String basedir> = $r3;

        $r2 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.ginnungagap808.wintersnow.Ncdr: java.lang.String basedir>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\src\\main\\assets");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        staticinvoke <com.ginnungagap808.wintersnow.Ncdr: boolean deleteDirectory(java.io.File)>($r2);

        $r2 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = <com.ginnungagap808.wintersnow.Ncdr: java.lang.String basedir>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\src\\main\\assets");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        virtualinvoke $r2.<java.io.File: boolean mkdir()>();

        $r2 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

     label01:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label02:
        $r3 = <com.ginnungagap808.wintersnow.Ncdr: java.lang.String basedir>;

     label03:
        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\assets");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r5;

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label11;

     label06:
        $r2 = $r5[$i1];

     label07:
        $r3 = new java.lang.String;

     label08:
        $r6 = staticinvoke <com.ginnungagap808.wintersnow.Base64: com.ginnungagap808.wintersnow.Base64$Decoder getDecoder()>();

        $r7 = virtualinvoke $r6.<com.ginnungagap808.wintersnow.Base64$Decoder: byte[] decode(java.lang.String)>("eXRxZTdvYnllNw==");

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r7);

        staticinvoke <com.ginnungagap808.wintersnow.Ncdr: void encrypt(java.lang.String,java.io.File)>($r3, $r2);

     label09:
        $i1 = $i1 + 1;

        goto label05;

     label10:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }
}
