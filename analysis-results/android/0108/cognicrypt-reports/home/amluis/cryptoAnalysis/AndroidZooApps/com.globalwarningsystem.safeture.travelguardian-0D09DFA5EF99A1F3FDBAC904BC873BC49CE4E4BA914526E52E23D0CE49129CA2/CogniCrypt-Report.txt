Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer680)
		Method: <com.globalwarningsystem.safeture.util.Util: java.lang.String createPassword(android.content.Context)>
		SHA-256: 43fb389f21d2d433e6c0be9f01f687ec87956f8b725e1d36cc10d5e22cc22933
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer408)
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] encryptData(java.lang.String,byte[],byte[],byte[])>
		SHA-256: 82deeab1e8e839a6993204448738629355d1ccadc59f5b08ba82a3742698c9eb
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer441)
		Method: <com.globalwarningsystem.safeture.sms.SmsMessage: java.lang.String calculateChecksum(java.lang.StringBuffer)>
		SHA-256: 8bbfcabf5d964159c428a4780a9ee1fd1fcc72b37657c373a86a3f2db981d188
		Secure: true
	Object:
		Variable: r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer421)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 6f759ea9cbd97e3f2d62237ec859552a36d4a4304d5b2f720b3d4ed55dd51d5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] randomDataOfLength(int)>
		SHA-256: 79b7141b0a0cb8ce8b4e619200d82be6715133eacd8da8a74b861b7a975e1ed0
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer425)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 361820608b75ded7d8639fd0f3890b35a5c1a7cc6111e0898e07ca26bc73d8bb
		Secure: false
	Object:
		Variable: varReplacer421
		Type: java.lang.String
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer421)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 991abca57c5ccaa5b72e8d2fb6181da159f3bf929735d5db7d94d8f8c698ab06
		Secure: false
	Object:
		Variable: r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] encryptData(java.lang.String,byte[],byte[],byte[])>
		SHA-256: e08cae223edaf104ea3a79b07baaa8b89ece37f30f0ecbdd27bfe1a45aed3c35
		Secure: true
	Object:
		Variable: varReplacer424
		Type: int
		Statement: specialinvoke r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer423, varReplacer424)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 8171c2fcb8a29e0a37ec9bf1d04b8910a8fa3d0597d4ea21805f00f43a7c4174
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.globalwarningsystem.safeture.util.Util: java.lang.String createPassword(android.content.Context)>
		SHA-256: 6b5b9632e1f009f4c95f0b707abc2d42eff3bae431f27ba6171782526ab6ab1f
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.globalwarningsystem.safeture.sms.SmsMessage: java.lang.String calculateChecksum(java.lang.StringBuffer)>
		SHA-256: 4a3e57fddd15aa38f0df4f69b80ed38de17b06062f4ac73b64837d8745a5978d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] randomDataOfLength(int)>
		SHA-256: eb98d4f2529c703fa5c88aa78fac1de113b21da5605d3337f7da48f7e0ad5bea
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer423, varReplacer424)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 7de71a23073a7b73463d0f9d15c6b89566e908249b252d127cebb5ee636464ea
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>
		SHA-256: 629d360bc47e92e367fa67560708d396d3a376357ad4cfaee9c8543904054791
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.globalwarningsystem.safeture.util.Util: byte[] encryptData(java.lang.String,byte[],byte[],byte[])>
		SHA-256: 8d373a69e33211c6a984a7dbf943d70345869556d09949f43a15386b19751b2e
		Secure: false

Findings in Java Class: com.globalwarningsystem.safeture.util.Util

	 in Method: javax.crypto.SecretKey aesKey(java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7de71a23073a7b73463d0f9d15c6b89566e908249b252d127cebb5ee636464ea)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer423, varReplacer424)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #361820608b75ded7d8639fd0f3890b35a5c1a7cc6111e0898e07ca26bc73d8bb)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer425)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer421)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7de71a23073a7b73463d0f9d15c6b89566e908249b252d127cebb5ee636464ea)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer423, varReplacer424)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: byte[] encryptData(java.lang.String,byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer415, $r5, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer415, $r5, $r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	RequiredPredicateError: 4
	ConstraintError: 1
	NeverTypeOfError: 1
=====================================================================