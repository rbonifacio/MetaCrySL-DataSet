public class net.lingala.zip4j.unzip.UnzipEngine extends java.lang.Object
{
    private java.util.zip.CRC32 crc;
    private int currSplitFileCounter;
    private net.lingala.zip4j.crypto.IDecrypter decrypter;
    private net.lingala.zip4j.model.FileHeader fileHeader;
    private net.lingala.zip4j.model.LocalFileHeader localFileHeader;
    private net.lingala.zip4j.model.ZipModel zipModel;

    public void <init>(net.lingala.zip4j.model.ZipModel, net.lingala.zip4j.model.FileHeader) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.ZipModel $r1;
        net.lingala.zip4j.model.FileHeader $r2;
        net.lingala.zip4j.exception.ZipException $r3;
        java.util.zip.CRC32 $r4;
        java.lang.String varReplacer3501;
        int varReplacer3502;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: net.lingala.zip4j.model.ZipModel;

        $r2 := @parameter1: net.lingala.zip4j.model.FileHeader;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer3502 = 0;

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: int currSplitFileCounter> = varReplacer3502;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3501 = "Invalid parameters passed to StoreUnzip. One or more of the parameters were null";

        specialinvoke $r3.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3501);

        throw $r3;

     label2:
        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel> = $r1;

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader> = $r2;

        $r4 = new java.util.zip.CRC32;

        specialinvoke $r4.<java.util.zip.CRC32: void <init>()>();

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.util.zip.CRC32 crc> = $r4;

        return;
    }

    private int calculateAESSaltLength(net.lingala.zip4j.model.AESExtraDataRecord) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.AESExtraDataRecord $r1;
        int $i0, varReplacer3618, varReplacer3621, varReplacer3622;
        net.lingala.zip4j.exception.ZipException $r2;
        java.lang.String varReplacer3619, varReplacer3620;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: net.lingala.zip4j.model.AESExtraDataRecord;

        if $r1 != null goto label1;

        $r2 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3620 = "unable to determine salt length: AESExtraDataRecord is null";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3620);

        throw $r2;

     label1:
        $i0 = virtualinvoke $r1.<net.lingala.zip4j.model.AESExtraDataRecord: int getAesStrength()>();

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            default: goto label2;
        };

     label2:
        $r2 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3619 = "unable to determine salt length: invalid aes key strength";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3619);

        throw $r2;

     label3:
        varReplacer3621 = 8;

        return varReplacer3621;

     label4:
        varReplacer3618 = 12;

        return varReplacer3618;

     label5:
        varReplacer3622 = 16;

        return varReplacer3622;
    }

    private boolean checkLocalHeader() throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.lang.Throwable $r1, $r11, $r12, $r14, $r16;
        net.lingala.zip4j.core.HeaderReader $r2;
        java.io.RandomAccessFile $r3, $r4;
        java.io.File $r5;
        net.lingala.zip4j.model.ZipModel $r6;
        java.lang.String $r7, varReplacer3559, varReplacer3560;
        net.lingala.zip4j.model.FileHeader $r8;
        net.lingala.zip4j.model.LocalFileHeader $r9;
        net.lingala.zip4j.exception.ZipException $r10;
        int $i0, $i1, varReplacer3561, varReplacer3562;
        java.lang.Exception $r13, $r15, $r17;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r4 = null;

     label01:
        $r3 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.io.RandomAccessFile checkSplitFile()>();

     label02:
        $r4 = $r3;

        if $r3 != null goto label06;

     label03:
        $r3 = new java.io.RandomAccessFile;

        $r5 = new java.io.File;

        $r6 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

     label04:
        $r7 = virtualinvoke $r6.<net.lingala.zip4j.model.ZipModel: java.lang.String getZipFile()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r7);

        varReplacer3559 = "r";

        specialinvoke $r3.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r5, varReplacer3559);

     label05:
        $r4 = $r3;

     label06:
        $r2 = new net.lingala.zip4j.core.HeaderReader;

     label07:
        specialinvoke $r2.<net.lingala.zip4j.core.HeaderReader: void <init>(java.io.RandomAccessFile)>($r4);

     label08:
        $r8 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

     label09:
        $r9 = virtualinvoke $r2.<net.lingala.zip4j.core.HeaderReader: net.lingala.zip4j.model.LocalFileHeader readLocalFileHeader(net.lingala.zip4j.model.FileHeader)>($r8);

     label10:
        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader> = $r9;

        $r9 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label11:
        if $r9 != null goto label20;

     label12:
        $r10 = new net.lingala.zip4j.exception.ZipException;

     label13:
        varReplacer3560 = "error reading local file header. Is this a valid zip file?";

        specialinvoke $r10.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3560);

     label14:
        throw $r10;

     label15:
        $r1 := @caughtexception;

     label16:
        $r10 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r10.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r1);

        throw $r10;

     label17:
        $r11 := @caughtexception;

        if $r4 == null goto label19;

     label18:
        virtualinvoke $r4.<java.io.RandomAccessFile: void close()>();

     label19:
        throw $r11;

     label20:
        $r9 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label21:
        $i0 = virtualinvoke $r9.<net.lingala.zip4j.model.LocalFileHeader: int getCompressionMethod()>();

     label22:
        $r8 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

     label23:
        $i1 = virtualinvoke $r8.<net.lingala.zip4j.model.FileHeader: int getCompressionMethod()>();

     label24:
        if $i0 == $i1 goto label27;

        if $r4 == null goto label26;

     label25:
        virtualinvoke $r4.<java.io.RandomAccessFile: void close()>();

     label26:
        varReplacer3562 = 0;

        return varReplacer3562;

     label27:
        if $r4 == null goto label29;

     label28:
        virtualinvoke $r4.<java.io.RandomAccessFile: void close()>();

     label29:
        varReplacer3561 = 1;

        return varReplacer3561;

     label30:
        $r12 := @caughtexception;

        goto label26;

     label31:
        $r13 := @caughtexception;

        goto label26;

     label32:
        $r14 := @caughtexception;

        goto label29;

     label33:
        $r15 := @caughtexception;

        goto label29;

     label34:
        $r16 := @caughtexception;

        goto label19;

     label35:
        $r17 := @caughtexception;

        goto label19;

        catch java.io.FileNotFoundException from label01 to label02 with label15;
        catch java.io.FileNotFoundException from label04 to label05 with label15;
        catch java.io.FileNotFoundException from label07 to label08 with label15;
        catch java.io.FileNotFoundException from label09 to label10 with label15;
        catch java.io.FileNotFoundException from label13 to label14 with label15;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label05 with label17;
        catch java.lang.Throwable from label06 to label11 with label17;
        catch java.lang.Throwable from label12 to label15 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.io.IOException from label18 to label19 with label34;
        catch java.lang.Exception from label18 to label19 with label35;
        catch java.io.FileNotFoundException from label21 to label22 with label15;
        catch java.io.FileNotFoundException from label23 to label24 with label15;
        catch java.lang.Throwable from label20 to label24 with label17;
        catch java.io.IOException from label25 to label26 with label30;
        catch java.lang.Exception from label25 to label26 with label31;
        catch java.io.IOException from label28 to label29 with label32;
        catch java.lang.Exception from label28 to label29 with label33;
    }

    private java.io.RandomAccessFile checkSplitFile() throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        byte[] $r1;
        net.lingala.zip4j.model.ZipModel $r2;
        boolean $z0;
        net.lingala.zip4j.model.FileHeader $r3;
        int $i0, $i1, varReplacer3665, varReplacer3667, varReplacer3668;
        java.lang.String $r4, varReplacer3659, varReplacer3660, varReplacer3661, varReplacer3662, varReplacer3663, varReplacer3664;
        net.lingala.zip4j.model.EndCentralDirRecord $r5;
        java.io.RandomAccessFile $r6;
        long $l2;
        byte $b3;
        net.lingala.zip4j.exception.ZipException $r7;
        java.lang.Throwable $r8, $r10;
        java.lang.StringBuffer $r9;
        null_type varReplacer3666;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        $z0 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: boolean isSplitArchive()>();

        if $z0 == 0 goto label12;

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        $i0 = virtualinvoke $r3.<net.lingala.zip4j.model.FileHeader: int getDiskNumberStart()>();

        $i1 = $i0 + 1;

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: int currSplitFileCounter> = $i1;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        $r4 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: java.lang.String getZipFile()>();

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        $r5 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: net.lingala.zip4j.model.EndCentralDirRecord getEndCentralDirRecord()>();

        $i1 = virtualinvoke $r5.<net.lingala.zip4j.model.EndCentralDirRecord: int getNoOfThisDisk()>();

        if $i0 != $i1 goto label09;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        $r4 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: java.lang.String getZipFile()>();

     label01:
        $r6 = new java.io.RandomAccessFile;

     label02:
        varReplacer3661 = "r";

        specialinvoke $r6.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r4, varReplacer3661);

     label03:
        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int currSplitFileCounter>;

        if $i0 != 1 goto label13;

        $r1 = newarray (byte)[4];

     label04:
        virtualinvoke $r6.<java.io.RandomAccessFile: int read(byte[])>($r1);

        varReplacer3665 = 0;

        $i0 = staticinvoke <net.lingala.zip4j.util.Raw: int readIntLittleEndian(byte[],int)>($r1, varReplacer3665);

     label05:
        $l2 = (long) $i0;

        $b3 = $l2 cmp 134695760L;

        if $b3 == 0 goto label13;

        $r7 = new net.lingala.zip4j.exception.ZipException;

     label06:
        varReplacer3659 = "invalid first part split file signature";

        specialinvoke $r7.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3659);

     label07:
        throw $r7;

     label08:
        $r8 := @caughtexception;

        $r7 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r7.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

     label09:
        if $i0 < 9 goto label10;

        $r9 = new java.lang.StringBuffer;

        varReplacer3662 = ".";

        $i1 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer3662);

        varReplacer3667 = 0;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3667, $i1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        varReplacer3664 = ".z";

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer3664);

        $i0 = $i0 + 1;

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label01;

     label10:
        $r9 = new java.lang.StringBuffer;

        varReplacer3660 = ".";

        $i1 = virtualinvoke $r4.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer3660);

        varReplacer3668 = 0;

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3668, $i1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        varReplacer3663 = ".z0";

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer3663);

        $i0 = $i0 + 1;

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r4 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label01;

     label11:
        $r10 := @caughtexception;

        $r7 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r7.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r10);

        throw $r7;

     label12:
        varReplacer3666 = null;

        return varReplacer3666;

     label13:
        return $r6;

        catch java.io.FileNotFoundException from label02 to label03 with label08;
        catch java.io.FileNotFoundException from label04 to label05 with label08;
        catch java.io.FileNotFoundException from label06 to label07 with label08;
        catch java.io.IOException from label02 to label03 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
    }

    private void closeStreams(java.io.InputStream, java.io.OutputStream) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.lang.Throwable $r1, $r6, $r7, $r8, $r9;
        java.io.InputStream $r2;
        java.io.OutputStream $r3;
        java.lang.String $r4, varReplacer3547;
        boolean $z0;
        int $i0;
        net.lingala.zip4j.exception.ZipException $r5, r10;
        java.io.IOException r11;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r2 := @parameter0: java.io.InputStream;

        $r3 := @parameter1: java.io.OutputStream;

        if $r2 == null goto label02;

     label01:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label02:
        if $r3 == null goto label22;

     label03:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label04:
        return;

     label05:
        $r1 := @caughtexception;

        if $r1 == null goto label16;

     label06:
        r11 = (java.io.IOException) $r1;

        $r4 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>();

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean isStringNotNullAndNotEmpty(java.lang.String)>($r4);

     label07:
        if $z0 == 0 goto label16;

     label08:
        r11 = (java.io.IOException) $r1;

        $r4 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>();

        varReplacer3547 = " - Wrong Password?";

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>(varReplacer3547);

     label09:
        if $i0 < 0 goto label16;

     label10:
        r10 = new net.lingala.zip4j.exception.ZipException;

     label11:
        $r5 = r10;

     label12:
        r11 = (java.io.IOException) $r1;

        $r4 = virtualinvoke r11.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke r10.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>($r4);

        throw $r5;

     label13:
        $r6 := @caughtexception;

        if $r3 == null goto label15;

     label14:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label15:
        throw $r6;

     label16:
        if $r3 == null goto label22;

     label17:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

     label18:
        return;

     label19:
        $r7 := @caughtexception;

        return;

     label20:
        $r8 := @caughtexception;

        goto label15;

     label21:
        $r9 := @caughtexception;

     label22:
        return;

        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label21;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label17 to label18 with label19;
    }

    private java.io.RandomAccessFile createFileHandler(java.lang.String) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.lang.String $r1, $r3, varReplacer3557, varReplacer3558;
        net.lingala.zip4j.model.ZipModel $r2;
        boolean $z0;
        net.lingala.zip4j.exception.ZipException $r4;
        java.io.RandomAccessFile $r5;
        java.io.File $r6;
        java.lang.Throwable $r7;
        java.lang.Exception $r8;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        if $r2 == null goto label01;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        $r3 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: java.lang.String getZipFile()>();

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean isStringNotNullAndNotEmpty(java.lang.String)>($r3);

        if $z0 != 0 goto label02;

     label01:
        $r4 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3558 = "input parameter is null in getFilePointer";

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3558);

        throw $r4;

     label02:
        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

     label03:
        $z0 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: boolean isSplitArchive()>();

     label04:
        if $z0 == 0 goto label07;

     label05:
        $r5 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.io.RandomAccessFile checkSplitFile()>();

     label06:
        return $r5;

     label07:
        $r5 = new java.io.RandomAccessFile;

        $r6 = new java.io.File;

     label08:
        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

     label09:
        $r3 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: java.lang.String getZipFile()>();

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r3);

        varReplacer3557 = "r";

        specialinvoke $r5.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r6, varReplacer3557);

     label10:
        return $r5;

     label11:
        $r7 := @caughtexception;

        $r4 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r7);

        throw $r4;

     label12:
        $r8 := @caughtexception;

        $r4 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r8);

        throw $r4;

        catch java.io.FileNotFoundException from label03 to label04 with label11;
        catch java.io.FileNotFoundException from label05 to label06 with label11;
        catch java.io.FileNotFoundException from label09 to label10 with label11;
        catch java.lang.Exception from label02 to label04 with label12;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label08 to label10 with label12;
    }

    private byte[] getAESPasswordVerifier(java.io.RandomAccessFile) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.io.RandomAccessFile $r1;
        java.lang.Throwable $r2;
        byte[] $r3;
        net.lingala.zip4j.exception.ZipException $r4;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.io.RandomAccessFile;

        $r3 = newarray (byte)[2];

     label1:
        virtualinvoke $r1.<java.io.RandomAccessFile: int read(byte[])>($r3);

     label2:
        return $r3;

     label3:
        $r2 := @caughtexception;

        $r4 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private byte[] getAESSalt(java.io.RandomAccessFile) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.io.RandomAccessFile $r1;
        java.lang.Throwable $r2;
        net.lingala.zip4j.model.LocalFileHeader $r3;
        net.lingala.zip4j.model.AESExtraDataRecord $r4;
        int $i0;
        byte[] $r5;
        long $l1;
        net.lingala.zip4j.exception.ZipException $r6;
        null_type varReplacer3617;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.io.RandomAccessFile;

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        $r4 = virtualinvoke $r3.<net.lingala.zip4j.model.LocalFileHeader: net.lingala.zip4j.model.AESExtraDataRecord getAesExtraDataRecord()>();

        if $r4 != null goto label1;

        varReplacer3617 = null;

        return varReplacer3617;

     label1:
        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label2:
        $r4 = virtualinvoke $r3.<net.lingala.zip4j.model.LocalFileHeader: net.lingala.zip4j.model.AESExtraDataRecord getAesExtraDataRecord()>();

        $i0 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: int calculateAESSaltLength(net.lingala.zip4j.model.AESExtraDataRecord)>($r4);

     label3:
        $r5 = newarray (byte)[$i0];

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label4:
        $l1 = virtualinvoke $r3.<net.lingala.zip4j.model.LocalFileHeader: long getOffsetStartOfData()>();

        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l1);

        virtualinvoke $r1.<java.io.RandomAccessFile: int read(byte[])>($r5);

     label5:
        return $r5;

     label6:
        $r2 := @caughtexception;

        $r6 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r6.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r2);

        throw $r6;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    private java.lang.String getOutputFileNameWithPath(java.lang.String, java.lang.String) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.lang.String $r1, $r2, varReplacer3548;
        boolean $z0;
        java.lang.StringBuffer $r3;
        net.lingala.zip4j.model.FileHeader $r4;
        null_type varReplacer3549;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        varReplacer3549 = null;

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean isStringNotNullAndNotEmpty(java.lang.String)>(varReplacer3549);

        if $z0 == 0 goto label2;

     label1:
        $r3 = new java.lang.StringBuffer;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        varReplacer3548 = "file.separator";

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer3548);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;

     label2:
        $r4 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        $r2 = virtualinvoke $r4.<net.lingala.zip4j.model.FileHeader: java.lang.String getFileName()>();

        goto label1;
    }

    private java.io.FileOutputStream getOutputStream(java.lang.String, java.lang.String) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.lang.String $r1, $r2, varReplacer3546;
        java.lang.Throwable $r3;
        java.io.File $r4, $r7;
        java.io.FileOutputStream $r5;
        boolean $z0;
        net.lingala.zip4j.exception.ZipException $r6;
        null_type varReplacer3545;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean isStringNotNullAndNotEmpty(java.lang.String)>($r1);

        if $z0 != 0 goto label01;

        $r6 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3546 = "invalid output path";

        specialinvoke $r6.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3546);

        throw $r6;

     label01:
        $r4 = new java.io.File;

     label02:
        varReplacer3545 = null;

        $r1 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.lang.String getOutputFileNameWithPath(java.lang.String,java.lang.String)>($r1, varReplacer3545);

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r1);

        $r7 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

     label03:
        if $z0 != 0 goto label05;

     label04:
        $r7 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r7.<java.io.File: boolean mkdirs()>();

     label05:
        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label06:
        if $z0 == 0 goto label08;

     label07:
        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label08:
        $r5 = new java.io.FileOutputStream;

     label09:
        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

     label10:
        return $r5;

     label11:
        $r3 := @caughtexception;

        $r6 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r6.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r3);

        throw $r6;

        catch java.io.FileNotFoundException from label02 to label03 with label11;
        catch java.io.FileNotFoundException from label04 to label06 with label11;
        catch java.io.FileNotFoundException from label07 to label08 with label11;
        catch java.io.FileNotFoundException from label09 to label10 with label11;
    }

    private byte[] getStandardDecrypterHeaderBytes(java.io.RandomAccessFile) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.io.RandomAccessFile $r1;
        byte[] $r2;
        long $l0;
        net.lingala.zip4j.model.LocalFileHeader $r3;
        java.lang.Throwable $r4;
        net.lingala.zip4j.exception.ZipException $r5;
        java.lang.Exception $r6;
        int varReplacer3615, varReplacer3616;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.io.RandomAccessFile;

     label1:
        $r2 = newarray (byte)[12];

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label2:
        $l0 = virtualinvoke $r3.<net.lingala.zip4j.model.LocalFileHeader: long getOffsetStartOfData()>();

        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l0);

        varReplacer3615 = 0;

        varReplacer3616 = 12;

        virtualinvoke $r1.<java.io.RandomAccessFile: int read(byte[],int,int)>($r2, varReplacer3615, varReplacer3616);

     label3:
        return $r2;

     label4:
        $r4 := @caughtexception;

        $r5 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r5.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label5:
        $r6 := @caughtexception;

        $r5 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r5.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r6);

        throw $r5;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
    }

    private void init(java.io.RandomAccessFile) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.io.RandomAccessFile $r1;
        net.lingala.zip4j.model.LocalFileHeader $r2;
        net.lingala.zip4j.exception.ZipException $r3;
        java.lang.Exception $r4;
        java.lang.String varReplacer3563;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.io.RandomAccessFile;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        if $r2 != null goto label1;

        $r3 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3563 = "local file header is null, cannot initialize input stream";

        specialinvoke $r3.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3563);

        throw $r3;

     label1:
        specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: void initDecrypter(java.io.RandomAccessFile)>($r1);

     label2:
        return;

     label3:
        $r3 := @caughtexception;

        throw $r3;

     label4:
        $r4 := @caughtexception;

        $r3 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r3.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r4);

        throw $r3;

        catch net.lingala.zip4j.exception.ZipException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void initDecrypter(java.io.RandomAccessFile) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.io.RandomAccessFile $r1;
        net.lingala.zip4j.model.LocalFileHeader $r2;
        net.lingala.zip4j.exception.ZipException $r3;
        boolean $z0;
        int $i0;
        net.lingala.zip4j.crypto.StandardDecrypter $r4;
        net.lingala.zip4j.model.FileHeader $r5;
        byte[] $r6, $r8;
        net.lingala.zip4j.crypto.AESDecrypter $r7;
        java.lang.String varReplacer3564, varReplacer3565;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.io.RandomAccessFile;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        if $r2 != null goto label1;

        $r3 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3565 = "local file header is null, cannot init decrypter";

        specialinvoke $r3.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3565);

        throw $r3;

     label1:
        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        $z0 = virtualinvoke $r2.<net.lingala.zip4j.model.LocalFileHeader: boolean isEncrypted()>();

        if $z0 == 0 goto label4;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        $i0 = virtualinvoke $r2.<net.lingala.zip4j.model.LocalFileHeader: int getEncryptionMethod()>();

        if $i0 != 0 goto label2;

        $r4 = new net.lingala.zip4j.crypto.StandardDecrypter;

        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        $r6 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: byte[] getStandardDecrypterHeaderBytes(java.io.RandomAccessFile)>($r1);

        specialinvoke $r4.<net.lingala.zip4j.crypto.StandardDecrypter: void <init>(net.lingala.zip4j.model.FileHeader,byte[])>($r5, $r6);

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter> = $r4;

        return;

     label2:
        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        $i0 = virtualinvoke $r2.<net.lingala.zip4j.model.LocalFileHeader: int getEncryptionMethod()>();

        if $i0 != 99 goto label3;

        $r7 = new net.lingala.zip4j.crypto.AESDecrypter;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        $r6 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: byte[] getAESSalt(java.io.RandomAccessFile)>($r1);

        $r8 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: byte[] getAESPasswordVerifier(java.io.RandomAccessFile)>($r1);

        specialinvoke $r7.<net.lingala.zip4j.crypto.AESDecrypter: void <init>(net.lingala.zip4j.model.LocalFileHeader,byte[],byte[])>($r2, $r6, $r8);

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter> = $r7;

        return;

     label3:
        $r3 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3564 = "unsupported encryption method";

        specialinvoke $r3.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3564);

        throw $r3;

     label4:
        return;
    }

    public void checkCRC() throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        long $l0, $l2;
        byte[] $r1, $r5, $r6;
        net.lingala.zip4j.model.FileHeader $r2;
        int $i1, varReplacer3745, varReplacer3746, varReplacer3747;
        net.lingala.zip4j.crypto.IDecrypter $r3;
        boolean $z0;
        net.lingala.zip4j.crypto.AESDecrypter $r4;
        net.lingala.zip4j.exception.ZipException $r7;
        java.lang.StringBuffer $r8;
        java.lang.String $r9, $r11, varReplacer3744, varReplacer3748, varReplacer3749, varReplacer3750;
        java.util.zip.CRC32 $r10;
        byte $b3;
        net.lingala.zip4j.model.LocalFileHeader $r12;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        if $r2 == null goto label5;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        $i1 = virtualinvoke $r2.<net.lingala.zip4j.model.FileHeader: int getEncryptionMethod()>();

        if $i1 != 99 goto label3;

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

        if $r3 == null goto label5;

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

        $z0 = $r3 instanceof net.lingala.zip4j.crypto.AESDecrypter;

        if $z0 == 0 goto label5;

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

        $r4 = (net.lingala.zip4j.crypto.AESDecrypter) $r3;

        $r5 = virtualinvoke $r4.<net.lingala.zip4j.crypto.AESDecrypter: byte[] getCalculatedAuthenticationBytes()>();

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

        $r4 = (net.lingala.zip4j.crypto.AESDecrypter) $r3;

        $r6 = virtualinvoke $r4.<net.lingala.zip4j.crypto.AESDecrypter: byte[] getStoredMac()>();

        $r1 = newarray (byte)[10];

        if $r1 == null goto label1;

        if $r6 != null goto label2;

     label1:
        $r7 = new net.lingala.zip4j.exception.ZipException;

        $r8 = new java.lang.StringBuffer;

        varReplacer3748 = "CRC (MAC) check failed for ";

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer3748);

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        $r9 = virtualinvoke $r2.<net.lingala.zip4j.model.FileHeader: java.lang.String getFileName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label2:
        varReplacer3745 = 0;

        varReplacer3746 = 0;

        varReplacer3747 = 10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, varReplacer3745, $r1, varReplacer3745, varReplacer3747);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r1, $r6);

        if $z0 != 0 goto label5;

        $r7 = new net.lingala.zip4j.exception.ZipException;

        $r8 = new java.lang.StringBuffer;

        varReplacer3744 = "invalid CRC (MAC) for file: ";

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer3744);

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        $r9 = virtualinvoke $r2.<net.lingala.zip4j.model.FileHeader: java.lang.String getFileName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>($r9);

        throw $r7;

     label3:
        $r10 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.util.zip.CRC32 crc>;

        $l0 = virtualinvoke $r10.<java.util.zip.CRC32: long getValue()>();

        $l0 = $l0 & 4294967295L;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        $l2 = virtualinvoke $r2.<net.lingala.zip4j.model.FileHeader: long getCrc32()>();

        $b3 = $l0 cmp $l2;

        if $b3 == 0 goto label5;

        $r8 = new java.lang.StringBuffer;

        varReplacer3749 = "invalid CRC for file: ";

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer3749);

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        $r9 = virtualinvoke $r2.<net.lingala.zip4j.model.FileHeader: java.lang.String getFileName()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = $r9;

        $r12 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        $z0 = virtualinvoke $r12.<net.lingala.zip4j.model.LocalFileHeader: boolean isEncrypted()>();

        if $z0 == 0 goto label4;

        $r12 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        $i1 = virtualinvoke $r12.<net.lingala.zip4j.model.LocalFileHeader: int getEncryptionMethod()>();

        if $i1 != 0 goto label4;

        $r8 = new java.lang.StringBuffer;

        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r9);

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(java.lang.String)>($r9);

        varReplacer3750 = " - Wrong Password?";

        $r8 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer3750);

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $r7 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r7.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label5:
        return;
    }

    public net.lingala.zip4j.crypto.IDecrypter getDecrypter()
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.crypto.IDecrypter r1;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

        return r1;
    }

    public net.lingala.zip4j.model.FileHeader getFileHeader()
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.FileHeader r1;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        return r1;
    }

    public net.lingala.zip4j.io.ZipInputStream getInputStream() throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.FileHeader $r1;
        net.lingala.zip4j.exception.ZipException $r2;
        java.io.RandomAccessFile $r3, $r4;
        boolean $z0;
        net.lingala.zip4j.model.LocalFileHeader $r5;
        long $l0, $l1, $l2, $l3;
        int $i4, $i5;
        net.lingala.zip4j.crypto.IDecrypter $r6;
        net.lingala.zip4j.crypto.AESDecrypter $r7;
        net.lingala.zip4j.model.AESExtraDataRecord $r8;
        java.lang.Exception $r9;
        java.lang.StringBuffer $r10;
        java.lang.String $r11, varReplacer3539, varReplacer3540, varReplacer3541, varReplacer3542, varReplacer3543, varReplacer3544;
        net.lingala.zip4j.io.ZipInputStream $r12;
        net.lingala.zip4j.io.PartInputStream $r13;
        net.lingala.zip4j.io.InflaterInputStream $r14;
        java.lang.Throwable $r15, $r16;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        if $r1 != null goto label01;

        $r2 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3541 = "file header is null, cannot get inputstream";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3541);

        throw $r2;

     label01:
        $r3 = null;

     label02:
        varReplacer3542 = "r";

        $r4 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.io.RandomAccessFile createFileHandler(java.lang.String)>(varReplacer3542);

     label03:
        $r3 = $r4;

     label04:
        $z0 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: boolean checkLocalHeader()>();

     label05:
        if $z0 != 0 goto label10;

        $r2 = new net.lingala.zip4j.exception.ZipException;

     label06:
        varReplacer3543 = "local header and file header do not match";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3543);

        throw $r2;

     label07:
        $r2 := @caughtexception;

        if $r3 == null goto label09;

     label08:
        virtualinvoke $r3.<java.io.RandomAccessFile: void close()>();

     label09:
        throw $r2;

     label10:
        specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: void init(java.io.RandomAccessFile)>($r4);

     label11:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label12:
        $l0 = virtualinvoke $r5.<net.lingala.zip4j.model.LocalFileHeader: long getCompressedSize()>();

     label13:
        $l1 = $l0;

     label14:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label15:
        $l2 = virtualinvoke $r5.<net.lingala.zip4j.model.LocalFileHeader: long getOffsetStartOfData()>();

     label16:
        $l3 = $l2;

     label17:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label18:
        $z0 = virtualinvoke $r5.<net.lingala.zip4j.model.LocalFileHeader: boolean isEncrypted()>();

     label19:
        if $z0 == 0 goto label35;

     label20:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label21:
        $i4 = virtualinvoke $r5.<net.lingala.zip4j.model.LocalFileHeader: int getEncryptionMethod()>();

     label22:
        if $i4 != 99 goto label56;

     label23:
        $r6 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

     label24:
        $z0 = $r6 instanceof net.lingala.zip4j.crypto.AESDecrypter;

        if $z0 == 0 goto label52;

     label25:
        $r6 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

        $r7 = (net.lingala.zip4j.crypto.AESDecrypter) $r6;

     label26:
        $i4 = virtualinvoke $r7.<net.lingala.zip4j.crypto.AESDecrypter: int getSaltLength()>();

     label27:
        $r6 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

        $r7 = (net.lingala.zip4j.crypto.AESDecrypter) $r6;

     label28:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw1()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw0()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw2()>();

        $i5 = 2;

     label29:
        $i4 = 2 + $i4;

        $i4 = $i4 + 10;

        $l1 = (long) $i4;

        $l1 = $l0 - $l1;

     label30:
        $r6 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

        $r7 = (net.lingala.zip4j.crypto.AESDecrypter) $r6;

     label31:
        $i4 = virtualinvoke $r7.<net.lingala.zip4j.crypto.AESDecrypter: int getSaltLength()>();

     label32:
        $r6 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter decrypter>;

        $r7 = (net.lingala.zip4j.crypto.AESDecrypter) $r6;

     label33:
        staticinvoke <FLOWDROID_EXCEPTIONS: void throw1()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw0()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw2()>();

        $i5 = 2;

     label34:
        $i4 = 2 + $i4;

        $l0 = (long) $i4;

        $l3 = $l2 + $l0;

     label35:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

     label36:
        $i4 = virtualinvoke $r1.<net.lingala.zip4j.model.FileHeader: int getCompressionMethod()>();

     label37:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

     label38:
        $i5 = virtualinvoke $r1.<net.lingala.zip4j.model.FileHeader: int getEncryptionMethod()>();

     label39:
        if $i5 != 99 goto label45;

     label40:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

     label41:
        $r8 = virtualinvoke $r1.<net.lingala.zip4j.model.FileHeader: net.lingala.zip4j.model.AESExtraDataRecord getAesExtraDataRecord()>();

     label42:
        if $r8 == null goto label59;

     label43:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

     label44:
        $r8 = virtualinvoke $r1.<net.lingala.zip4j.model.FileHeader: net.lingala.zip4j.model.AESExtraDataRecord getAesExtraDataRecord()>();

        $i4 = virtualinvoke $r8.<net.lingala.zip4j.model.AESExtraDataRecord: int getCompressionMethod()>();

     label45:
        virtualinvoke $r4.<java.io.RandomAccessFile: void seek(long)>($l3);

     label46:
        lookupswitch($i4)
        {
            case 0: goto label63;
            case 8: goto label66;
            default: goto label47;
        };

     label47:
        $r2 = new net.lingala.zip4j.exception.ZipException;

     label48:
        varReplacer3539 = "compression type not supported";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3539);

        throw $r2;

     label49:
        $r9 := @caughtexception;

        if $r3 == null goto label51;

     label50:
        virtualinvoke $r3.<java.io.RandomAccessFile: void close()>();

     label51:
        $r2 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r9);

        throw $r2;

     label52:
        $r2 = new net.lingala.zip4j.exception.ZipException;

        $r10 = new java.lang.StringBuffer;

     label53:
        varReplacer3540 = "invalid decryptor when trying to calculate compressed size for AES encrypted file: ";

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer3540);

     label54:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

     label55:
        $r11 = virtualinvoke $r1.<net.lingala.zip4j.model.FileHeader: java.lang.String getFileName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>($r11);

        throw $r2;

     label56:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

     label57:
        $i4 = virtualinvoke $r5.<net.lingala.zip4j.model.LocalFileHeader: int getEncryptionMethod()>();

     label58:
        if $i4 != 0 goto label35;

        $l1 = $l0 - 12L;

        $l3 = $l2 + 12L;

        goto label35;

     label59:
        $r2 = new net.lingala.zip4j.exception.ZipException;

        $r10 = new java.lang.StringBuffer;

     label60:
        varReplacer3544 = "AESExtraDataRecord does not exist for AES encrypted file: ";

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer3544);

     label61:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

     label62:
        $r11 = virtualinvoke $r1.<net.lingala.zip4j.model.FileHeader: java.lang.String getFileName()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>($r11);

        throw $r2;

     label63:
        $r12 = new net.lingala.zip4j.io.ZipInputStream;

        $r13 = new net.lingala.zip4j.io.PartInputStream;

     label64:
        specialinvoke $r13.<net.lingala.zip4j.io.PartInputStream: void <init>(java.io.RandomAccessFile,long,long,net.lingala.zip4j.unzip.UnzipEngine)>($r4, $l3, $l1, $r0);

        specialinvoke $r12.<net.lingala.zip4j.io.ZipInputStream: void <init>(net.lingala.zip4j.io.BaseInputStream)>($r13);

     label65:
        return $r12;

     label66:
        $r12 = new net.lingala.zip4j.io.ZipInputStream;

        $r14 = new net.lingala.zip4j.io.InflaterInputStream;

     label67:
        specialinvoke $r14.<net.lingala.zip4j.io.InflaterInputStream: void <init>(java.io.RandomAccessFile,long,long,net.lingala.zip4j.unzip.UnzipEngine)>($r4, $l3, $l1, $r0);

        specialinvoke $r12.<net.lingala.zip4j.io.ZipInputStream: void <init>(net.lingala.zip4j.io.BaseInputStream)>($r14);

     label68:
        return $r12;

     label69:
        $r15 := @caughtexception;

        goto label09;

     label70:
        $r16 := @caughtexception;

        goto label51;

        catch net.lingala.zip4j.exception.ZipException from label02 to label03 with label07;
        catch net.lingala.zip4j.exception.ZipException from label04 to label05 with label07;
        catch net.lingala.zip4j.exception.ZipException from label06 to label07 with label07;
        catch java.lang.Exception from label02 to label03 with label49;
        catch java.lang.Exception from label04 to label05 with label49;
        catch java.lang.Exception from label06 to label07 with label49;
        catch java.io.IOException from label08 to label09 with label69;
        catch net.lingala.zip4j.exception.ZipException from label10 to label11 with label07;
        catch net.lingala.zip4j.exception.ZipException from label12 to label13 with label07;
        catch net.lingala.zip4j.exception.ZipException from label15 to label16 with label07;
        catch net.lingala.zip4j.exception.ZipException from label18 to label19 with label07;
        catch net.lingala.zip4j.exception.ZipException from label21 to label22 with label07;
        catch net.lingala.zip4j.exception.ZipException from label26 to label27 with label07;
        catch net.lingala.zip4j.exception.ZipException from label28 to label29 with label07;
        catch net.lingala.zip4j.exception.ZipException from label31 to label32 with label07;
        catch net.lingala.zip4j.exception.ZipException from label33 to label34 with label07;
        catch net.lingala.zip4j.exception.ZipException from label36 to label37 with label07;
        catch net.lingala.zip4j.exception.ZipException from label38 to label39 with label07;
        catch net.lingala.zip4j.exception.ZipException from label41 to label42 with label07;
        catch net.lingala.zip4j.exception.ZipException from label44 to label45 with label07;
        catch net.lingala.zip4j.exception.ZipException from label45 to label46 with label07;
        catch net.lingala.zip4j.exception.ZipException from label48 to label49 with label07;
        catch java.lang.Exception from label10 to label13 with label49;
        catch java.lang.Exception from label14 to label16 with label49;
        catch java.lang.Exception from label17 to label19 with label49;
        catch java.lang.Exception from label20 to label22 with label49;
        catch java.lang.Exception from label23 to label24 with label49;
        catch java.lang.Exception from label25 to label29 with label49;
        catch java.lang.Exception from label30 to label34 with label49;
        catch java.lang.Exception from label35 to label37 with label49;
        catch java.lang.Exception from label37 to label39 with label49;
        catch java.lang.Exception from label40 to label42 with label49;
        catch java.lang.Exception from label43 to label45 with label49;
        catch java.lang.Exception from label45 to label46 with label49;
        catch java.lang.Exception from label48 to label49 with label49;
        catch java.io.IOException from label50 to label51 with label70;
        catch net.lingala.zip4j.exception.ZipException from label53 to label54 with label07;
        catch net.lingala.zip4j.exception.ZipException from label55 to label56 with label07;
        catch net.lingala.zip4j.exception.ZipException from label57 to label58 with label07;
        catch net.lingala.zip4j.exception.ZipException from label60 to label61 with label07;
        catch net.lingala.zip4j.exception.ZipException from label62 to label63 with label07;
        catch net.lingala.zip4j.exception.ZipException from label64 to label65 with label07;
        catch net.lingala.zip4j.exception.ZipException from label67 to label68 with label07;
        catch java.lang.Exception from label53 to label58 with label49;
        catch java.lang.Exception from label60 to label63 with label49;
        catch java.lang.Exception from label64 to label65 with label49;
        catch java.lang.Exception from label67 to label68 with label49;
    }

    public net.lingala.zip4j.model.LocalFileHeader getLocalFileHeader()
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.LocalFileHeader r1;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader localFileHeader>;

        return r1;
    }

    public net.lingala.zip4j.model.ZipModel getZipModel()
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.ZipModel r1;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        return r1;
    }

    public java.io.RandomAccessFile startNextSplitFile() throws java.io.IOException, java.io.FileNotFoundException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.exception.ZipException $r1;
        net.lingala.zip4j.model.ZipModel $r2;
        java.lang.String $r3, varReplacer3689, varReplacer3690, varReplacer3691, varReplacer3693, varReplacer3694, varReplacer3695;
        int $i0, $i1, varReplacer3688, varReplacer3692;
        net.lingala.zip4j.model.EndCentralDirRecord $r4;
        boolean $z0;
        java.io.IOException $r5;
        java.lang.StringBuffer $r6;
        java.io.RandomAccessFile $r7;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        $r3 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: java.lang.String getZipFile()>();

        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int currSplitFileCounter>;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        $r4 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: net.lingala.zip4j.model.EndCentralDirRecord getEndCentralDirRecord()>();

        $i1 = virtualinvoke $r4.<net.lingala.zip4j.model.EndCentralDirRecord: int getNoOfThisDisk()>();

        if $i0 != $i1 goto label7;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        $r3 = virtualinvoke $r2.<net.lingala.zip4j.model.ZipModel: java.lang.String getZipFile()>();

     label1:
        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int currSplitFileCounter>;

        $i0 = $i0 + 1;

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: int currSplitFileCounter> = $i0;

     label2:
        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean checkFileExists(java.lang.String)>($r3);

     label3:
        if $z0 != 0 goto label9;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuffer;

     label4:
        varReplacer3691 = "zip split file does not exist: ";

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer3691);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r3);

     label5:
        throw $r5;

     label6:
        $r1 := @caughtexception;

        $r5 = new java.io.IOException;

        $r3 = virtualinvoke $r1.<net.lingala.zip4j.exception.ZipException: java.lang.String getMessage()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r3);

        throw $r5;

     label7:
        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int currSplitFileCounter>;

        if $i0 < 9 goto label8;

        $r6 = new java.lang.StringBuffer;

        varReplacer3693 = ".";

        $i0 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer3693);

        varReplacer3692 = 0;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3692, $i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        varReplacer3694 = ".z";

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer3694);

        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int currSplitFileCounter>;

        $i0 = $i0 + 1;

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label8:
        $r6 = new java.lang.StringBuffer;

        varReplacer3689 = ".";

        $i0 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer3689);

        varReplacer3688 = 0;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3688, $i0);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        varReplacer3695 = ".z0";

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer3695);

        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int currSplitFileCounter>;

        $i0 = $i0 + 1;

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label9:
        $r7 = new java.io.RandomAccessFile;

        varReplacer3690 = "r";

        specialinvoke $r7.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r3, varReplacer3690);

        return $r7;

        catch net.lingala.zip4j.exception.ZipException from label2 to label3 with label6;
        catch net.lingala.zip4j.exception.ZipException from label4 to label5 with label6;
    }

    public void unzipFile(net.lingala.zip4j.progress.ProgressMonitor, java.lang.String, java.lang.String, net.lingala.zip4j.model.UnzipParameters) throws net.lingala.zip4j.exception.ZipException
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.progress.ProgressMonitor $r1;
        java.lang.String $r2, $r3, varReplacer3503;
        net.lingala.zip4j.model.UnzipParameters $r4;
        byte[] $r5;
        net.lingala.zip4j.model.ZipModel $r6;
        net.lingala.zip4j.model.FileHeader $r7;
        boolean $z0;
        net.lingala.zip4j.exception.ZipException $r8;
        net.lingala.zip4j.io.ZipInputStream $r9, $r11;
        java.io.FileOutputStream $r10, $r12;
        int $i0, varReplacer3504, varReplacer3506, varReplacer3508;
        java.io.File $r13;
        long $l1;
        java.lang.Throwable $r14, $r15;
        java.lang.Exception $r16;
        null_type varReplacer3505, varReplacer3507;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: net.lingala.zip4j.progress.ProgressMonitor;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: net.lingala.zip4j.model.UnzipParameters;

        $r6 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel zipModel>;

        if $r6 == null goto label01;

        $r7 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

        if $r7 == null goto label01;

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean isStringNotNullAndNotEmpty(java.lang.String)>($r2);

        if $z0 != 0 goto label02;

     label01:
        $r8 = new net.lingala.zip4j.exception.ZipException;

        varReplacer3503 = "Invalid parameters passed during unzipping file. One or more of the parameters were null";

        specialinvoke $r8.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer3503);

        throw $r8;

     label02:
        $r9 = null;

        $r10 = null;

     label03:
        $r5 = newarray (byte)[4096];

     label04:
        $r11 = virtualinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.io.ZipInputStream getInputStream()>();

     label05:
        $r9 = $r11;

     label06:
        varReplacer3505 = null;

        $r12 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.io.FileOutputStream getOutputStream(java.lang.String,java.lang.String)>($r2, varReplacer3505);

     label07:
        $r10 = $r12;

     label08:
        $i0 = virtualinvoke $r11.<java.io.InputStream: int read(byte[])>($r5);

     label09:
        if $i0 != -1 goto label15;

     label10:
        specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: void closeStreams(java.io.InputStream,java.io.OutputStream)>($r11, $r12);

     label11:
        $r7 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader fileHeader>;

     label12:
        $r13 = new java.io.File;

     label13:
        varReplacer3507 = null;

        $r2 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.lang.String getOutputFileNameWithPath(java.lang.String,java.lang.String)>($r2, varReplacer3507);

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r2);

        staticinvoke <net.lingala.zip4j.unzip.UnzipUtil: void applyFileAttributes(net.lingala.zip4j.model.FileHeader,java.io.File,net.lingala.zip4j.model.UnzipParameters)>($r7, $r13, $r4);

     label14:
        specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: void closeStreams(java.io.InputStream,java.io.OutputStream)>($r11, $r12);

        return;

     label15:
        varReplacer3506 = 0;

        virtualinvoke $r12.<java.io.OutputStream: void write(byte[],int,int)>($r5, varReplacer3506, $i0);

     label16:
        $l1 = (long) $i0;

     label17:
        virtualinvoke $r1.<net.lingala.zip4j.progress.ProgressMonitor: void updateWorkCompleted(long)>($l1);

        $z0 = virtualinvoke $r1.<net.lingala.zip4j.progress.ProgressMonitor: boolean isCancelAllTasks()>();

     label18:
        if $z0 == 0 goto label08;

     label19:
        varReplacer3508 = 3;

        virtualinvoke $r1.<net.lingala.zip4j.progress.ProgressMonitor: void setResult(int)>(varReplacer3508);

        varReplacer3504 = 0;

        virtualinvoke $r1.<net.lingala.zip4j.progress.ProgressMonitor: void setState(int)>(varReplacer3504);

     label20:
        specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: void closeStreams(java.io.InputStream,java.io.OutputStream)>($r11, $r12);

        return;

     label21:
        $r14 := @caughtexception;

     label22:
        $r8 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r8.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r14);

        throw $r8;

     label23:
        $r15 := @caughtexception;

        specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: void closeStreams(java.io.InputStream,java.io.OutputStream)>($r9, $r10);

        throw $r15;

     label24:
        $r16 := @caughtexception;

     label25:
        $r8 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r8.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r16);

        throw $r8;

     label26:
        nop;

        catch java.io.IOException from label04 to label05 with label21;
        catch java.io.IOException from label06 to label07 with label21;
        catch java.io.IOException from label08 to label09 with label21;
        catch java.io.IOException from label10 to label11 with label21;
        catch java.io.IOException from label13 to label14 with label21;
        catch java.lang.Exception from label03 to label05 with label24;
        catch java.lang.Exception from label06 to label07 with label24;
        catch java.lang.Exception from label08 to label09 with label24;
        catch java.lang.Exception from label10 to label12 with label24;
        catch java.lang.Exception from label13 to label14 with label24;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.Throwable from label06 to label07 with label23;
        catch java.lang.Throwable from label08 to label09 with label23;
        catch java.lang.Throwable from label10 to label14 with label23;
        catch java.io.IOException from label15 to label16 with label21;
        catch java.io.IOException from label17 to label18 with label21;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.lang.Exception from label15 to label16 with label24;
        catch java.lang.Exception from label17 to label18 with label24;
        catch java.lang.Exception from label19 to label20 with label24;
        catch java.lang.Throwable from label15 to label16 with label23;
        catch java.lang.Throwable from label17 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label22 to label23 with label23;
        catch java.lang.Throwable from label25 to label26 with label23;
    }

    public void updateCRC(int)
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        int $i0;
        java.util.zip.CRC32 $r1;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $i0 := @parameter0: int;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.util.zip.CRC32 crc>;

        virtualinvoke $r1.<java.util.zip.CRC32: void update(int)>($i0);

        return;
    }

    public void updateCRC(byte[], int, int)
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        byte[] $r1;
        int $i0, $i1, varReplacer3686;
        java.util.zip.CRC32 $r2;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $r1 == null goto label1;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.util.zip.CRC32 crc>;

        varReplacer3686 = 0;

        virtualinvoke $r2.<java.util.zip.CRC32: void update(byte[],int,int)>($r1, varReplacer3686, $i1);

     label1:
        return;
    }
}
