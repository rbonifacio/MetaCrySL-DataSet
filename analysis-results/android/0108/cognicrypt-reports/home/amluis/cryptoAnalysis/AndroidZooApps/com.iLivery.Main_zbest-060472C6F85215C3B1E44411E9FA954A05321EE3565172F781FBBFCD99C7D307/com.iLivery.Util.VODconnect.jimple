public class com.iLivery.Util.VODconnect extends java.lang.Object
{
    private static int Time;
    private static int TimeDebug;
    private static final java.lang.String aesEncryptionAlgorithm;
    private static final java.lang.String characterEncoding;
    private static final java.lang.String cipherTransformation;
    private static final java.lang.String yek_2;

    public void <init>()
    {
        com.iLivery.Util.VODconnect $r0;

        $r0 := @this: com.iLivery.Util.VODconnect;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String WebService(java.lang.String, java.lang.String, java.util.Map)
    {
        java.lang.String $r0, $r1, $r3, $r4, $r5, $r7, $r8, varReplacer3814, varReplacer3815, varReplacer3817, varReplacer3818, varReplacer3819, varReplacer3820, varReplacer3822, varReplacer3823, varReplacer3824, varReplacer3825, varReplacer3826, varReplacer3827, varReplacer3828, varReplacer3829, varReplacer3830, varReplacer3831, varReplacer3832, varReplacer3833, varReplacer3835, varReplacer3838, varReplacer3839;
        java.util.Map $r2;
        java.lang.StringBuilder $r6, r12;
        boolean $z0;
        int $i0, $i1, $i2, varReplacer3816, varReplacer3821, varReplacer3834, varReplacer3836, varReplacer3837;
        java.lang.Throwable $r9, $r11;
        org.json.JSONException $r10;
        org.apache.http.client.ClientProtocolException r13;
        java.io.IOException r14;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.util.Map;

        $r3 = "";

        $r4 = "";

        $r5 = "";

        r12 = new java.lang.StringBuilder;

        $r6 = r12;

     label01:
        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>($r7);

        varReplacer3814 = "/";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3814);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r3 = $r7;

     label03:
        $r8 = staticinvoke <com.iLivery.Connect.Connect: java.lang.String buildParameter(java.util.Map)>($r2);

        varReplacer3839 = "VOD - Send Message : ";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer3839, $r8);

        $r8 = staticinvoke <com.iLivery.Connect.Connect: java.lang.String buildParameter(java.util.Map)>($r2);

        varReplacer3816 = 1;

        $r8 = staticinvoke <com.iLivery.Util.VODconnect: java.lang.String encrypt(java.lang.String,boolean)>($r8, varReplacer3816);

        varReplacer3822 = "sData";

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer3822, $r8);

        $r8 = staticinvoke <com.iLivery.Connect.Connect: java.lang.String buildParameter(java.util.Map)>($r2);

     label04:
        $r4 = $r8;

     label05:
        $r7 = staticinvoke <com.iLivery.Util.VODconnect: java.lang.String process(java.lang.String,java.lang.String)>($r7, $r8);

     label06:
        $r5 = $r7;

     label07:
        if $r5 == null goto label08;

        varReplacer3835 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3835);

        if $z0 == 0 goto label09;

     label08:
        $r5 = "";

     label09:
        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 > 3500 goto label14;

        r12 = new java.lang.StringBuilder;

        varReplacer3838 = "- Parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3838);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer3832 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3832);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void w(java.lang.String,java.lang.String)>($r3, $r4);

     label10:
        varReplacer3823 = "";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3823);

        if $z0 == 0 goto label18;

        $i0 = <com.iLivery.Util.VODconnect: int Time>;

        if $i0 >= 0 goto label19;

        $i0 = <com.iLivery.Util.VODconnect: int Time>;

        $i0 = $i0 + 1;

        <com.iLivery.Util.VODconnect: int Time> = $i0;

        $r0 = staticinvoke <com.iLivery.Util.VODconnect: java.lang.String WebService(java.lang.String,java.lang.String,java.util.Map)>($r0, $r1, $r2);

        return $r0;

     label11:
        $r9 := @caughtexception;

        r12 = new java.lang.StringBuilder;

        varReplacer3829 = "- parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3829);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer3819 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3819);

        varReplacer3818 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3818);

        varReplacer3820 = "- Error";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3820);

        r13 = (org.apache.http.client.ClientProtocolException) $r9;

        $r7 = virtualinvoke r13.<org.apache.http.client.ClientProtocolException: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void e(java.lang.String,java.lang.String)>($r3, $r7);

        goto label07;

     label12:
        $r10 := @caughtexception;

        r12 = new java.lang.StringBuilder;

        varReplacer3817 = "- parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3817);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer3830 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3830);

        varReplacer3828 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3828);

        varReplacer3825 = "- Error";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3825);

        $r7 = virtualinvoke $r10.<org.json.JSONException: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void e(java.lang.String,java.lang.String)>($r3, $r7);

        goto label07;

     label13:
        $r11 := @caughtexception;

        r12 = new java.lang.StringBuilder;

        varReplacer3815 = "- parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3815);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer3831 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3831);

        varReplacer3824 = "";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3824);

        varReplacer3827 = "- Error";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3827);

        r14 = (java.io.IOException) $r11;

        $r7 = virtualinvoke r14.<java.io.IOException: java.lang.String toString()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void e(java.lang.String,java.lang.String)>($r3, $r7);

        goto label07;

     label14:
        r12 = new java.lang.StringBuilder;

        varReplacer3833 = "- Parameter:";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3833);

        $r6 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer3826 = "- Result:";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3826);

        varReplacer3836 = 0;

        varReplacer3837 = 3499;

        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3836, varReplacer3837);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.iLivery.Util.MyLog: void w(java.lang.String,java.lang.String)>($r3, $r4);

        $i0 = 3499;

     label15:
        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label10;

        if $i0 == 66499 goto label10;

        $i1 = $i0 + 3500;

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i1 <= $i2 goto label17;

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i1 = $i1 + -1;

        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

     label16:
        staticinvoke <com.iLivery.Util.MyLog: void w(java.lang.String,java.lang.String)>($r3, $r4);

        $i0 = $i0 + 3500;

        goto label15;

     label17:
        $i1 = $i0 + 3500;

        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        goto label16;

     label18:
        varReplacer3821 = 0;

        <com.iLivery.Util.VODconnect: int Time> = varReplacer3821;

     label19:
        $i0 = <com.iLivery.Util.VODconnect: int TimeDebug>;

        if $i0 != 4 goto label20;

        varReplacer3834 = 0;

        <com.iLivery.Util.VODconnect: int TimeDebug> = varReplacer3834;

     label20:
        $i0 = <com.iLivery.Util.VODconnect: int TimeDebug>;

        $i0 = $i0 + 1;

        <com.iLivery.Util.VODconnect: int TimeDebug> = $i0;

        return $r5;

        catch org.apache.http.client.ClientProtocolException from label01 to label02 with label11;
        catch org.apache.http.client.ClientProtocolException from label03 to label04 with label11;
        catch org.apache.http.client.ClientProtocolException from label05 to label06 with label11;
        catch org.json.JSONException from label01 to label02 with label12;
        catch org.json.JSONException from label03 to label04 with label12;
        catch org.json.JSONException from label05 to label06 with label12;
        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.io.IOException from label05 to label06 with label13;
    }

    public static java.lang.String decrypt(java.lang.String)
    {
        java.lang.Exception $r0;
        byte[] $r1, $r4, $r5;
        java.lang.String $r2, $r3;
        boolean $z0;

        $r2 := @parameter0: java.lang.String;

     label01:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("");

     label02:
        if $z0 == 0 goto label03;

        return "";

     label03:
        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[[ADD]]", "+");

     label04:
        $r2 = $r3;

     label05:
        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[[AMPERSAND]]", "&");

     label06:
        $r2 = $r3;

     label07:
        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r3, 2);

        $r5 = staticinvoke <com.iLivery.Util.VODconnect: byte[] getKeyBytes(java.lang.String)>("@1B2c3D4e5F6g7H8");

        $r1 = newarray (byte)[16];

     label08:
        $r3 = new java.lang.String;

     label09:
        $r1 = staticinvoke <com.iLivery.Util.VODconnect: byte[] decrypt(byte[],byte[],byte[])>($r4, $r5, $r1);

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r1, "UTF-8");

     label10:
        return $r3;

     label11:
        $r0 := @caughtexception;

        $r3 = virtualinvoke $r0.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Error Decrypt", $r3);

        return $r2;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    private static byte[] decrypt(byte[], byte[], byte[]) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] $r0, $r1, $r4;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r5;

        $r4 := @parameter0: byte[];

        $r0 := @parameter1: byte[];

        $r1 := @parameter2: byte[];

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r3 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "AES");

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r3, $r2);

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        return $r4;
    }

    public static java.lang.String encrypt(java.lang.String, boolean)
    {
        java.lang.String $r0, $r5, $r6, varReplacer3846, varReplacer3847, varReplacer3848, varReplacer3849, varReplacer3850, varReplacer3851, varReplacer3852;
        boolean $z0;
        java.lang.Exception $r1;
        byte[] $r2, $r3, $r4;
        int varReplacer3853;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

     label1:
        varReplacer3847 = "UTF-8";

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3847);

        varReplacer3852 = "@1B2c3D4e5F6g7H8";

        $r4 = staticinvoke <com.iLivery.Util.VODconnect: byte[] getKeyBytes(java.lang.String)>(varReplacer3852);

        $r2 = newarray (byte)[16];

        $r2 = staticinvoke <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>($r3, $r4, $r2);

        varReplacer3853 = 2;

        $r5 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r2, varReplacer3853);

        varReplacer3848 = "+";

        $r6 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(varReplacer3848);

        varReplacer3846 = "[[ADD]]";

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r6, varReplacer3846);

        varReplacer3850 = "&";

        $r6 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>(varReplacer3850);

        varReplacer3851 = "[[AMPERSAND]]";

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($r6, varReplacer3851);

     label2:
        return $r5;

     label3:
        $r1 := @caughtexception;

        $r5 = virtualinvoke $r1.<java.lang.Exception: java.lang.String toString()>();

        varReplacer3849 = "Error Encrypt";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3849, $r5);

        return $r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static byte[] encrypt(byte[], byte[], byte[]) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] $r0, $r1, $r4;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r5;
        int varReplacer3857;
        java.lang.String varReplacer3858, varReplacer3859;

        nop;

        $r4 := @parameter0: byte[];

        $r0 := @parameter1: byte[];

        $r1 := @parameter2: byte[];

        varReplacer3859 = "AES/CBC/PKCS5Padding";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3859);

        $r3 = new javax.crypto.spec.SecretKeySpec;

        varReplacer3858 = "AES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3858);

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        varReplacer3857 = 1;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3857, $r3, $r2);

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        return $r4;
    }

    private static byte[] getKeyBytes(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, varReplacer3856;
        byte[] $r1, $r2;
        int $i0, $i1, varReplacer3854, varReplacer3855;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = newarray (byte)[16];

        varReplacer3856 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3856);

        $i1 = lengthof $r2;

        $i0 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        varReplacer3854 = 0;

        varReplacer3855 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer3854, $r1, varReplacer3854, $i0);

        return $r1;
    }

    public static java.lang.String process(java.lang.String, java.lang.String) throws org.json.JSONException, org.apache.http.client.ClientProtocolException, java.io.IOException, java.lang.OutOfMemoryError
    {
        java.lang.String $r0, $r1, varReplacer3841, varReplacer3842, varReplacer3843, varReplacer3844, varReplacer3845;
        org.apache.http.client.methods.HttpPost $r2;
        org.apache.http.entity.StringEntity $r3;
        org.apache.http.impl.client.DefaultHttpClient $r4;
        org.apache.http.HttpResponse $r5;
        org.apache.http.message.BasicHttpResponse $r6;
        org.apache.http.HttpEntity $r7;
        java.io.InputStream $r8;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new org.apache.http.client.methods.HttpPost;

        specialinvoke $r2.<org.apache.http.client.methods.HttpPost: void <init>(java.lang.String)>($r0);

        varReplacer3843 = "Accept";

        varReplacer3844 = "application/json";

        virtualinvoke $r2.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>(varReplacer3843, varReplacer3844);

        varReplacer3841 = "Content-type";

        varReplacer3842 = "application/json; charset=UTF-8";

        virtualinvoke $r2.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>(varReplacer3841, varReplacer3842);

        $r3 = new org.apache.http.entity.StringEntity;

        varReplacer3845 = "utf-8";

        specialinvoke $r3.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r1, varReplacer3845);

        virtualinvoke $r2.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r3);

        $r4 = staticinvoke <com.iLivery.Connect.Connect: org.apache.http.impl.client.DefaultHttpClient HttpClientSecurity()>();

        $r5 = virtualinvoke $r4.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r2);

        $r6 = (org.apache.http.message.BasicHttpResponse) $r5;

        $r7 = virtualinvoke $r6.<org.apache.http.message.BasicHttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r8 = interfaceinvoke $r7.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        $r0 = staticinvoke <com.iLivery.Connect.Connect: java.lang.String convertStreamToString(java.io.InputStream)>($r8);

        virtualinvoke $r8.<java.io.InputStream: void close()>();

        return $r0;
    }
}
