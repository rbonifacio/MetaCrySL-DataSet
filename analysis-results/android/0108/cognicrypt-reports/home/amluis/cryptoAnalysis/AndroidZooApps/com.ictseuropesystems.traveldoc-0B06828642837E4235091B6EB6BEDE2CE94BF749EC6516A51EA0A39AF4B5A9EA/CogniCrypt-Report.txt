Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer390)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: 5781bef7798d1973810c78d5b7442fe28554c445768aa1d299316d2b93dee491
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1419)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: aaafef338a220a13d589b38852c2484a90e5f4efd03ece5a4f5fa3ba38e6a14c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: f8754fc2203cd5fbea0f66218d67e9377b5324bb12cf41ee69706e9a99ebcfda
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r4.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: 86e2bdadbd28e98546428b1483a8dc60295ed3ff3fbffbfe742a1ac49316a3e4
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: d84c88669cc7d1f67b33fd2bd5cdbcb9200d691aba2d0997506a1a0c2c583d7
		Secure: false
	Object:
		Variable: varReplacer1330
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1330)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 497a8bb9dadb7a7bc47699dc3388897cc6f360231857e28d6258073169bbfb20
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1330)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 83e56b0496fc1ee96c41bfc7d4963d79344e889607e2183b2b206f816cae2a4e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: 2a5e7a70979d8aecc40526927c78ccb1c007d8bb8babcb9fdf9227494bf3adf9
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1421)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: c061652aac91762ead4f94179dd385f051b16797d1c95b2437f2923e1e9ebfe5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 52f378e153e52c182217d592c1009e7e48c577514baed8800096b4bab8909038
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer388)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: 8b190bcd89612863d4de295a5fb5b0466e83abc9781ba10636120ce0e554484e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: ba017190752a4f013238b836f951e1d6b709e7cc1395f76453db08895c174f44
		Secure: false
	Object:
		Variable: varReplacer1419
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1419)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: b3026dd77c8e3e0e999339a099bba56e5a4fae3320fa9c03509860a94d2b696a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1328)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: d58ef75aee378dc263fbf053fb2d41b09a1922ce54b2082cb9abe7b0b4e716d
		Secure: false

Findings in Java Class: com.ictseuropesystems.traveldoc.security.Crypt

	 in Method: byte[] encrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d58ef75aee378dc263fbf053fb2d41b09a1922ce54b2082cb9abe7b0b4e716d)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1328)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1329, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d58ef75aee378dc263fbf053fb2d41b09a1922ce54b2082cb9abe7b0b4e716d)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1328)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1330)


	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1419)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c061652aac91762ead4f94179dd385f051b16797d1c95b2437f2923e1e9ebfe5)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1421)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c061652aac91762ead4f94179dd385f051b16797d1c95b2437f2923e1e9ebfe5)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1421)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1420, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 4
=====================================================================