public final class com.imo.android.imoim.h.b extends java.lang.Object
{
    public static final javax.crypto.SecretKey a;
    public static final javax.crypto.SecretKey b;
    private static final java.security.SecureRandom c;

    static void <clinit>()
    {
        javax.crypto.spec.SecretKeySpec $r0;
        int $i0, varReplacer10742, varReplacer10743;
        javax.crypto.SecretKey $r1;
        byte[] $r2;
        java.security.SecureRandom $r3;
        java.lang.String varReplacer10741, varReplacer10744;

        nop;

        $r1 = staticinvoke <com.imo.android.imoim.h.b: javax.crypto.SecretKey b()>();

        <com.imo.android.imoim.h.b: javax.crypto.SecretKey a> = $r1;

        varReplacer10741 = "GkN6SXh8Pg9UZSlcEON4nw==";

        varReplacer10742 = 0;

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(varReplacer10741, varReplacer10742);

        $r0 = new javax.crypto.spec.SecretKeySpec;

        $i0 = lengthof $r2;

        varReplacer10743 = 0;

        varReplacer10744 = "AES";

        specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer10743, $i0, varReplacer10744);

        <com.imo.android.imoim.h.b: javax.crypto.SecretKey b> = $r0;

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        <com.imo.android.imoim.h.b: java.security.SecureRandom c> = $r3;

        return;
    }

    public static int a(byte[], javax.crypto.SecretKey, byte[])
    {
        byte[] $r0, $r2;
        javax.crypto.SecretKey $r1;
        byte $b0;
        int $i1, $i3;
        short $s2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r2 := @parameter2: byte[];

        $r0 = staticinvoke <com.imo.android.imoim.h.b: byte[] g(byte[],javax.crypto.SecretKey)>($r0, $r1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 4, $r2, 0, 12);

        $b0 = $r0[0];

        $i1 = $b0 << 24;

        $b0 = $r0[1];

        $s2 = $b0 & 255;

        $i3 = $s2 << 16;

        $i1 = $i1 | $i3;

        $b0 = $r0[2];

        $s2 = $b0 & 255;

        $i3 = $s2 << 8;

        $i1 = $i1 | $i3;

        $b0 = $r0[3];

        $s2 = $b0 & 255;

        $i1 = $s2 | $i1;

        return $i1;
    }

    public static java.lang.String a()
    {
        int $i0;
        byte[] $r0;
        java.security.spec.X509EncodedKeySpec $r1;
        java.security.KeyFactory $r2;
        java.security.PublicKey $r3;
        javax.crypto.SecretKey $r4;
        java.lang.String $r5;
        java.lang.Exception $r6;
        java.lang.RuntimeException $r7;

     label1:
        $r0 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>("MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCYAoB3djV8hefWBBQIEuq54qDke4wWek/WulorSc1FOk6Gt9tu50swlxN1kXpCQDfZPGlNASY0UxXKZ0qKqaO2+ZW3CpDp+UYsiARBbEJ3y47HJ1zPVsEq2mMGUnz++35DXzdexmIQbOR4aMbSzXwBAbf+ZaggECe5V21U65tyzQIDAQAB", 0);

     label2:
        $r1 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r0);

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("RSA");

        $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1);

     label4:
        $r4 = <com.imo.android.imoim.h.b: javax.crypto.SecretKey a>;

     label5:
        $r0 = interfaceinvoke $r4.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $i0 = lengthof $r0;

        staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(16, $i0);

        $r0 = staticinvoke <com.imo.android.imoim.h.a: byte[] a(byte[],java.security.PublicKey)>($r0, $r3);

     label6:
        $r5 = new java.lang.String;

     label7:
        specialinvoke $r5.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "UTF8");

     label8:
        return $r5;

     label9:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public static void a(com.imo.android.imoim.network.ByteStream, com.imo.android.imoim.network.ByteStream, javax.crypto.SecretKey)
    {
        com.imo.android.imoim.network.ByteStream $r0, $r1;
        javax.crypto.SecretKey $r2;
        byte[] $r3, $r4, $r7;
        javax.crypto.spec.IvParameterSpec $r5;
        javax.crypto.Cipher $r6;
        int $i0, $i1;

        $r0 := @parameter0: com.imo.android.imoim.network.ByteStream;

        $r1 := @parameter1: com.imo.android.imoim.network.ByteStream;

        $r2 := @parameter2: javax.crypto.SecretKey;

        $r3 = staticinvoke <com.imo.android.imoim.h.b: byte[] a(int)>(12);

        $r4 = newarray (byte)[16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, 12);

        $r5 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r2, $r5);

        $i0 = virtualinvoke $r0.<com.imo.android.imoim.network.ByteStream: int size()>();

        $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int getOutputSize(int)>($i0);

        $i0 = $i0 + 16;

        virtualinvoke $r1.<com.imo.android.imoim.network.ByteStream: void expand(int)>($i0);

        $r4 = virtualinvoke $r0.<com.imo.android.imoim.network.ByteStream: byte[] getRawBytes()>();

        $i0 = virtualinvoke $r0.<com.imo.android.imoim.network.ByteStream: int size()>();

        $r7 = virtualinvoke $r1.<com.imo.android.imoim.network.ByteStream: byte[] getRawBytes()>();

        $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r4, 0, $i0, $r7, 16);

        $r3 = staticinvoke <com.imo.android.imoim.h.b: byte[] a(int,byte[],javax.crypto.SecretKey)>($i0, $r3, $r2);

        $i1 = lengthof $r3;

        virtualinvoke $r1.<com.imo.android.imoim.network.ByteStream: void write(byte[],int,int,int)>($r3, 0, $i1, 0);

        $i1 = lengthof $r3;

        $i0 = $i0 + $i1;

        virtualinvoke $r1.<com.imo.android.imoim.network.ByteStream: void increaseCount(int)>($i0);

        return;
    }

    public static byte[] a(int)
    {
        int $i0;
        byte[] $r0;
        java.security.SecureRandom $r1;

        nop;

        $i0 := @parameter0: int;

        $r0 = newarray (byte)[16];

        $r1 = <com.imo.android.imoim.h.b: java.security.SecureRandom c>;

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0);

        return $r0;
    }

    public static byte[] a(int, byte[], javax.crypto.SecretKey)
    {
        int $i0, $i1;
        byte[] $r0, $r2;
        javax.crypto.SecretKey $r1;
        byte $b2;

        $i0 := @parameter0: int;

        $r0 := @parameter1: byte[];

        $r1 := @parameter2: javax.crypto.SecretKey;

        $r2 = newarray (byte)[16];

        $i1 = $i0 >>> 24;

        $b2 = (byte) $i1;

        $r2[0] = $b2;

        $i1 = $i0 >>> 16;

        $b2 = (byte) $i1;

        $r2[1] = $b2;

        $i1 = $i0 >>> 8;

        $b2 = (byte) $i1;

        $r2[2] = $b2;

        $b2 = (byte) $i0;

        $r2[3] = $b2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r2, 4, 12);

        $r0 = staticinvoke <com.imo.android.imoim.h.b: byte[] f(byte[],javax.crypto.SecretKey)>($r2, $r1);

        return $r0;
    }

    public static byte[] a(byte[], javax.crypto.SecretKey)
    {
        byte[] $r0, $r2, $r5;
        javax.crypto.SecretKey $r1;
        int $i0, $i1, varReplacer14086, varReplacer14088, varReplacer14089;
        javax.crypto.spec.IvParameterSpec $r3;
        javax.crypto.Cipher $r4;
        java.lang.String varReplacer14087;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        varReplacer14086 = 16;

        $r2 = staticinvoke <com.imo.android.imoim.h.b: byte[] a(int)>(varReplacer14086);

        $r3 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2);

        varReplacer14087 = "AES/CBC/PKCS5Padding";

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14087);

        varReplacer14089 = 1;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14089, $r1, $r3);

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        $i0 = lengthof $r2;

        $i1 = lengthof $r0;

        $i0 = $i0 + $i1;

        $r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r2, $i0);

        $i1 = lengthof $r2;

        $i0 = lengthof $r0;

        varReplacer14088 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, varReplacer14088, $r5, $i1, $i0);

        return $r5;
    }

    public static int b(byte[], javax.crypto.SecretKey, byte[])
    {
        byte[] $r0, $r2;
        javax.crypto.SecretKey $r1;
        byte $b0, $b1;
        short $s2;
        int $i3, $i4;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r2 := @parameter2: byte[];

        $r0 = staticinvoke <com.imo.android.imoim.h.b: byte[] g(byte[],javax.crypto.SecretKey)>($r0, $r1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 4, $r2, 0, 12);

        $b0 = $r0[0];

        $b1 = $r0[1];

        $s2 = $b1 & 255;

        $i3 = $s2 << 16;

        $b1 = $r0[2];

        $s2 = $b1 & 255;

        $i4 = $s2 << 8;

        $i3 = $i3 | $i4;

        $b1 = $r0[3];

        $s2 = $b1 & 255;

        $i3 = $s2 | $i3;

        if $b0 == 1 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Incorrect version: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" length: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.imo.android.imoim.util.al: void a(java.lang.String)>($r4);

     label1:
        return $i3;
    }

    private static javax.crypto.SecretKey b()
    {
        javax.crypto.KeyGenerator $r0;
        javax.crypto.SecretKey $r1;
        java.lang.Throwable $r2;
        java.lang.RuntimeException $r3;
        int varReplacer10749;
        java.lang.String varReplacer10750;

     label1:
        nop;

        varReplacer10750 = "AES";

        $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer10750);

        varReplacer10749 = 128;

        virtualinvoke $r0.<javax.crypto.KeyGenerator: void init(int)>(varReplacer10749);

        $r1 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static byte[] b(byte[], javax.crypto.SecretKey)
    {
        byte[] $r0, $r3;
        javax.crypto.SecretKey $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        int $i0;
        javax.crypto.Cipher $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r0, 16);

        $i0 = lengthof $r0;

        $r0 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r0, 16, $i0);

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r1, $r2);

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    public static byte[] c(byte[], javax.crypto.SecretKey)
    {
        byte[] $r0, $r2, $r3;
        javax.crypto.SecretKey $r1;
        javax.crypto.spec.IvParameterSpec $r4;
        javax.crypto.Cipher $r5;
        int $i0, $i1;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r2 = staticinvoke <com.imo.android.imoim.h.b: byte[] a(int)>(12);

        $r3 = newarray (byte)[16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, 12);

        $r4 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r1, $r4);

        $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        $i0 = lengthof $r0;

        $r2 = staticinvoke <com.imo.android.imoim.h.b: byte[] a(int,byte[],javax.crypto.SecretKey)>($i0, $r2, $r1);

        $i0 = lengthof $r2;

        $i1 = lengthof $r0;

        $i0 = $i0 + $i1;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r2, $i0);

        $i0 = lengthof $r2;

        $i1 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r3, $i0, $i1);

        return $r3;
    }

    public static byte[] c(byte[], javax.crypto.SecretKey, byte[])
    {
        byte[] $r0, $r2, $r3;
        javax.crypto.SecretKey $r1;
        javax.crypto.Cipher $r4;
        javax.crypto.spec.IvParameterSpec $r5;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r2 := @parameter2: byte[];

        $r3 = newarray (byte)[16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, 12);

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r5 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r1, $r5);

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    public static javax.crypto.Cipher d(byte[], javax.crypto.SecretKey)
    {
        byte[] $r0, $r3;
        javax.crypto.SecretKey $r1;
        javax.crypto.Cipher $r2;
        javax.crypto.spec.IvParameterSpec $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r3 = newarray (byte)[16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r3, 0, 12);

        $r4 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r1, $r4);

        return $r2;
    }

    public static byte[] e(byte[], javax.crypto.SecretKey)
    {
        byte[] $r0, $r2, $r3;
        javax.crypto.SecretKey $r1;
        javax.crypto.spec.IvParameterSpec $r4;
        javax.crypto.Cipher $r5;
        int $i0, $i1;
        byte $b2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r2 = staticinvoke <com.imo.android.imoim.h.b: byte[] a(int)>(12);

        $r3 = newarray (byte)[16];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, 12);

        $r4 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r1, $r4);

        $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        $i0 = lengthof $r0;

        $r3 = newarray (byte)[16];

        $r3[0] = 1;

        $i1 = $i0 >>> 16;

        $b2 = (byte) $i1;

        $r3[1] = $b2;

        $i1 = $i0 >>> 8;

        $b2 = (byte) $i1;

        $r3[2] = $b2;

        $b2 = (byte) $i0;

        $r3[3] = $b2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 4, 12);

        $r2 = staticinvoke <com.imo.android.imoim.h.b: byte[] f(byte[],javax.crypto.SecretKey)>($r3, $r1);

        $i0 = lengthof $r2;

        $i1 = lengthof $r0;

        $i0 = $i0 + $i1;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r2, $i0);

        $i0 = lengthof $r2;

        $i1 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r3, $i0, $i1);

        return $r3;
    }

    private static byte[] f(byte[], javax.crypto.SecretKey)
    {
        byte[] $r0, $r3;
        javax.crypto.SecretKey $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.Cipher $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r3 = newarray (byte)[16];

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/NoPadding");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r1, $r2);

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    private static byte[] g(byte[], javax.crypto.SecretKey)
    {
        byte[] $r0, $r3;
        javax.crypto.SecretKey $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.Cipher $r4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.SecretKey;

        $r3 = newarray (byte)[16];

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3);

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/NoPadding");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r1, $r2);

        $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }
}
