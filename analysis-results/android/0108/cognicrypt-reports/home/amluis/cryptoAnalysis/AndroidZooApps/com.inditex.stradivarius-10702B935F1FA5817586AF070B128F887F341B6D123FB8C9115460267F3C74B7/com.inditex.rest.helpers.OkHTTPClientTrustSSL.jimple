public class com.inditex.rest.helpers.OkHTTPClientTrustSSL extends java.lang.Object
{

    public void <init>()
    {
        com.inditex.rest.helpers.OkHTTPClientTrustSSL $r0;

        $r0 := @this: com.inditex.rest.helpers.OkHTTPClientTrustSSL;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.squareup.okhttp.OkHttpClient getUnsafeOkHttpClient()
    {
        java.lang.Exception $r0;
        com.squareup.okhttp.OkHttpClient $r1, r10;
        java.lang.Object[] $r2;
        com.inditex.rest.helpers.OkHTTPClientTrustSSL$1 $r3, r8;
        javax.net.ssl.SSLContext $r4;
        java.security.SecureRandom $r5, r9;
        javax.net.ssl.SSLSocketFactory $r6;
        com.inditex.rest.helpers.OkHTTPClientTrustSSL$2 $r7, r11;
        java.lang.RuntimeException r12;
        javax.net.ssl.TrustManager[] r13;
        null_type varReplacer6082;
        java.lang.String varReplacer6083;

     label01:
        nop;

        $r2 = newarray (javax.net.ssl.TrustManager)[1];

     label02:
        r8 = new com.inditex.rest.helpers.OkHTTPClientTrustSSL$1;

        $r3 = r8;

     label03:
        specialinvoke r8.<com.inditex.rest.helpers.OkHTTPClientTrustSSL$1: void <init>()>();

        $r2[0] = $r3;

        varReplacer6083 = "SSL";

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6083);

     label04:
        r9 = new java.security.SecureRandom;

        $r5 = r9;

     label05:
        specialinvoke r9.<java.security.SecureRandom: void <init>()>();

        r13 = (javax.net.ssl.TrustManager[]) $r2;

        varReplacer6082 = null;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6082, r13, $r5);

        $r6 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label06:
        r10 = new com.squareup.okhttp.OkHttpClient;

        $r1 = r10;

     label07:
        specialinvoke r10.<com.squareup.okhttp.OkHttpClient: void <init>()>();

        virtualinvoke $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory)>($r6);

     label08:
        r11 = new com.inditex.rest.helpers.OkHTTPClientTrustSSL$2;

        $r7 = r11;

     label09:
        specialinvoke r11.<com.inditex.rest.helpers.OkHTTPClientTrustSSL$2: void <init>()>();

        virtualinvoke $r1.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r7);

     label10:
        return $r1;

     label11:
        $r0 := @caughtexception;

        r12 = new java.lang.RuntimeException;

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r0);

        throw r12;

        catch java.lang.Exception from label01 to label02 with label11;
        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }
}
