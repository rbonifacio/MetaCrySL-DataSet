public class com.jackmanu.scplusplus.cc extends java.lang.Object
{

    public static java.security.PublicKey a(java.lang.String)
    {
        java.lang.String $r0, varReplacer1532, varReplacer1533, varReplacer1534;
        byte[] $r1;
        java.security.KeyFactory $r2;
        java.security.spec.X509EncodedKeySpec $r3;
        java.security.PublicKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r8;
        int varReplacer1531;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer1531 = 0;

        $r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer1531);

        varReplacer1534 = "RSA";

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1534);

     label2:
        $r3 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer1532 = "SCPLUS";

        varReplacer1533 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1532, varReplacer1533);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
    }

    public static boolean a(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, varReplacer1504, varReplacer1505;
        boolean $z0;
        java.security.PublicKey $r3;
        int varReplacer1503;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

     label1:
        varReplacer1504 = "SCPLUS";

        varReplacer1505 = "Purchase verification failed: missing data.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1504, varReplacer1505);

        varReplacer1503 = 0;

        return varReplacer1503;

     label2:
        $r3 = staticinvoke <com.jackmanu.scplusplus.cc: java.security.PublicKey a(java.lang.String)>($r0);

        $z0 = staticinvoke <com.jackmanu.scplusplus.cc: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>($r3, $r1, $r2);

        return $z0;
    }

    public static boolean a(java.security.PublicKey, java.lang.String, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, $r2, varReplacer1506, varReplacer1507, varReplacer1508, varReplacer1509, varReplacer1510, varReplacer1511, varReplacer1512, varReplacer1514, varReplacer1515, varReplacer1518, varReplacer1519, varReplacer1522, varReplacer1523, varReplacer1525, varReplacer1526, varReplacer1527, varReplacer1529, varReplacer1530;
        java.security.Signature $r3;
        byte[] $r4;
        java.lang.Class $r5;
        java.lang.Class[] $r6;
        java.lang.reflect.Method $r7;
        java.lang.Object[] $r8;
        java.lang.Object $r9;
        java.lang.Boolean $r10;
        boolean $z0;
        java.lang.Throwable $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        int varReplacer1513, varReplacer1516, varReplacer1517, varReplacer1520, varReplacer1521, varReplacer1524, varReplacer1528;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label01:
        varReplacer1528 = 0;

        staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, varReplacer1528);

     label02:
        varReplacer1525 = "SHA1withRSA";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer1525);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r4);

     label03:
        $r5 = class "Ljava/security/SignatureSpi;";

        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "[B";

     label04:
        varReplacer1510 = "engineVerify";

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(varReplacer1510, $r6);

        varReplacer1517 = 1;

        virtualinvoke $r7.<java.lang.reflect.Method: void setAccessible(boolean)>(varReplacer1517);

     label05:
        $r8 = newarray (java.lang.Object)[1];

     label06:
        varReplacer1516 = 0;

        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, varReplacer1516);

     label07:
        $r8[0] = $r4;

     label08:
        $r9 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r8);

     label09:
        $r10 = (java.lang.Boolean) $r9;

     label10:
        $z0 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

     label11:
        if $z0 != 0 goto label15;

     label12:
        varReplacer1529 = "SCPLUS";

        varReplacer1530 = "Signature verification failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1529, varReplacer1530);

     label13:
        varReplacer1520 = 0;

        return varReplacer1520;

     label14:
        $r11 := @caughtexception;

        varReplacer1511 = "SCPLUS";

        varReplacer1512 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1511, varReplacer1512);

        varReplacer1513 = 0;

        return varReplacer1513;

     label15:
        varReplacer1521 = 1;

        return varReplacer1521;

     label16:
        $r12 := @caughtexception;

        varReplacer1522 = "SCPLUS";

        varReplacer1523 = "NoSuchAlgorithmException.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1522, varReplacer1523);

     label17:
        varReplacer1524 = 0;

        return varReplacer1524;

     label18:
        $r13 := @caughtexception;

        varReplacer1526 = "SCPLUS";

        varReplacer1527 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1526, varReplacer1527);

        goto label17;

     label19:
        $r14 := @caughtexception;

        varReplacer1508 = "SCPLUS";

        varReplacer1509 = "Signature exception.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1508, varReplacer1509);

        goto label17;

     label20:
        $r15 := @caughtexception;

        varReplacer1514 = "SCPLUS";

        varReplacer1515 = "NoSuchMethodException";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1514, varReplacer1515);

        goto label17;

     label21:
        $r16 := @caughtexception;

        varReplacer1518 = "SCPLUS";

        varReplacer1519 = "IllegalAccessException";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1518, varReplacer1519);

        goto label17;

     label22:
        $r17 := @caughtexception;

        varReplacer1506 = "SCPLUS";

        varReplacer1507 = "InvocationTargetException";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1506, varReplacer1507);

        goto label17;

        catch java.lang.IllegalArgumentException from label01 to label02 with label14;
        catch java.security.NoSuchAlgorithmException from label02 to label03 with label16;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label16;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label16;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label16;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label16;
        catch java.security.NoSuchAlgorithmException from label12 to label13 with label16;
        catch java.security.InvalidKeyException from label02 to label03 with label18;
        catch java.security.InvalidKeyException from label04 to label05 with label18;
        catch java.security.InvalidKeyException from label06 to label07 with label18;
        catch java.security.InvalidKeyException from label08 to label09 with label18;
        catch java.security.InvalidKeyException from label10 to label11 with label18;
        catch java.security.InvalidKeyException from label12 to label13 with label18;
        catch java.security.SignatureException from label02 to label03 with label19;
        catch java.security.SignatureException from label04 to label05 with label19;
        catch java.security.SignatureException from label06 to label07 with label19;
        catch java.security.SignatureException from label08 to label09 with label19;
        catch java.security.SignatureException from label10 to label11 with label19;
        catch java.security.SignatureException from label12 to label13 with label19;
        catch java.lang.NoSuchMethodException from label02 to label03 with label20;
        catch java.lang.NoSuchMethodException from label04 to label05 with label20;
        catch java.lang.NoSuchMethodException from label06 to label07 with label20;
        catch java.lang.NoSuchMethodException from label08 to label09 with label20;
        catch java.lang.NoSuchMethodException from label10 to label11 with label20;
        catch java.lang.NoSuchMethodException from label12 to label13 with label20;
        catch java.lang.IllegalAccessException from label02 to label03 with label21;
        catch java.lang.IllegalAccessException from label04 to label05 with label21;
        catch java.lang.IllegalAccessException from label06 to label07 with label21;
        catch java.lang.IllegalAccessException from label08 to label09 with label21;
        catch java.lang.IllegalAccessException from label10 to label11 with label21;
        catch java.lang.IllegalAccessException from label12 to label13 with label21;
        catch java.lang.reflect.InvocationTargetException from label02 to label03 with label22;
        catch java.lang.reflect.InvocationTargetException from label04 to label05 with label22;
        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label22;
        catch java.lang.reflect.InvocationTargetException from label08 to label09 with label22;
        catch java.lang.reflect.InvocationTargetException from label10 to label11 with label22;
        catch java.lang.reflect.InvocationTargetException from label12 to label13 with label22;
    }
}
