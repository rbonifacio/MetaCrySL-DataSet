public class com.jb.ga0.commerce.util.io.StringUtils extends java.lang.Object
{
    private static final java.lang.String DEFAULT_CHARSET_UTF8;

    public void <init>()
    {
        com.jb.ga0.commerce.util.io.StringUtils $r0;

        $r0 := @this: com.jb.ga0.commerce.util.io.StringUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.json.JSONObject byteArrayToJson(byte[])
    {
        byte[] $r0;
        org.json.JSONException $r1;
        org.json.JSONObject $r2;
        java.lang.String $r3;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <com.jb.ga0.commerce.util.io.StringUtils: java.lang.String byteArrayToString(byte[])>($r0);

        if $r3 != null goto label2;

        return null;

     label2:
        $r2 = new org.json.JSONObject;

     label3:
        specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r3);

     label4:
        return $r2;

     label5:
        $r1 := @caughtexception;

        virtualinvoke $r1.<org.json.JSONException: void printStackTrace()>();

        return null;

        catch org.json.JSONException from label3 to label4 with label5;
    }

    public static java.lang.String byteArrayToString(byte[])
    {
        byte[] $r0;
        java.lang.Throwable $r1;
        java.lang.String r2;
        java.io.UnsupportedEncodingException r3;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        return null;

     label1:
        r2 = new java.lang.String;

     label2:
        specialinvoke r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "UTF-8");

     label3:
        return r2;

     label4:
        $r1 := @caughtexception;

        r3 = (java.io.UnsupportedEncodingException) $r1;

        virtualinvoke r3.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public static java.lang.String encode(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r2, varReplacer10004, varReplacer10005, varReplacer10006;
        javax.crypto.spec.DESKeySpec $r1;
        byte[] $r3;
        javax.crypto.SecretKeyFactory $r4;
        javax.crypto.SecretKey $r5;
        javax.crypto.Cipher $r6;
        int varReplacer10003;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = "jiu_bang_integral_wall_key";

        $r1 = new javax.crypto.spec.DESKeySpec;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r1.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r3);

        varReplacer10005 = "DES";

        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10005);

        $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1);

        varReplacer10006 = "DES";

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10006);

        varReplacer10003 = 2;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10003, $r5);

        $r2 = new java.lang.String;

        $r3 = staticinvoke <com.jb.ga0.commerce.util.encrypt.Base64: byte[] decode(java.lang.String)>($r0);

        $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        varReplacer10004 = "utf-8";

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r3, varReplacer10004);

        return $r2;
    }

    public static long getByteCountFromStr(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        int $i0;
        long $l1;
        java.util.Locale $r1;
        float $f0, $f1;
        double $d0;
        java.lang.Throwable $r2;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return -1L;

     label1:
        $i0 = -1;

        $l1 = -1L;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("KB");

        if $z0 == 0 goto label5;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>("KB");

        $l1 = 1024L;

     label2:
        if $i0 == -1 goto label9;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label3:
        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r0);

     label4:
        $f1 = (float) $l1;

        $f0 = $f1 * $f0;

        $l1 = (long) $f0;

        return $l1;

     label5:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("MB");

        if $z0 == 0 goto label6;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>("MB");

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(1024.0, 2.0);

        $l1 = (long) $d0;

        goto label2;

     label6:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("GB");

        if $z0 == 0 goto label7;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>("GB");

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(1024.0, 3.0);

        $l1 = (long) $d0;

        goto label2;

     label7:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>("B");

        if $z0 == 0 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int lastIndexOf(java.lang.String)>("B");

        $l1 = 1L;

        goto label2;

     label8:
        $r2 := @caughtexception;

     label9:
        return -1L;

        catch java.lang.NumberFormatException from label3 to label4 with label8;
    }

    public static java.util.List integerArrayConvertList(java.lang.Integer[])
    {
        java.lang.Integer[] $r0;
        int $i0, $i1;
        java.lang.Integer $r1;
        java.util.ArrayList $r2;

        $r0 := @parameter0: java.lang.Integer[];

        if $r0 == null goto label1;

        $i0 = lengthof $r0;

        if $i0 >= 1 goto label2;

     label1:
        return null;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label4;

        $r1 = $r0[$i1];

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        return $r2;
    }

    public static boolean isEqual(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == $r1 goto label1;

        if $r0 == null goto label2;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isInt(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(\\s)", "");

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([-]?[\\d]+)");

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        return $z0;
    }

    public static boolean isNumber(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean matches(java.lang.String)>("^[-+]?(([0-9]+)([.]([0-9]+))?|([.]([0-9]+))?)$");

        return $z0;
    }

    public static byte[] jsonToByteArray(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        byte[] $r2;

        $r0 := @parameter0: org.json.JSONObject;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String toString()>();

        $r2 = staticinvoke <com.jb.ga0.commerce.util.io.StringUtils: byte[] stringToByteArray(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.String[] listConvertStringArray(java.util.List)
    {
        java.util.List $r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        $r0 := @parameter0: java.util.List;

        if $r0 == null goto label1;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 >= 0 goto label2;

     label1:
        return null;

     label2:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r1 = newarray (java.lang.String)[$i0];

        $i0 = 0;

     label3:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.String) $r2;

        $r1[$i0] = $r3;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        return $r1;
    }

    public static java.lang.String sqliteEscape(java.lang.String)
    {
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("/", "//");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\'", "\'\'");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("[", "/[");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("]", "/]");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%", "/%");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("&", "/&");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "/_");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("(", "/(");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(")", "/)");

        return $r0;
    }

    public static byte[] stringToByteArray(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        boolean $z0;
        byte[] $r2;
        java.io.UnsupportedEncodingException r3;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        r3 = (java.io.UnsupportedEncodingException) $r1;

        virtualinvoke r3.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.Integer toInteger(java.lang.Object, java.lang.Integer)
    {
        java.lang.Object $r0;
        java.lang.Integer $r1, $r3;
        boolean $z0;
        java.lang.String $r2;
        int $i0;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Integer;

        if $r0 == null goto label8;

     label1:
        $z0 = staticinvoke <com.jb.ga0.commerce.util.io.StringUtils: boolean isInt(java.lang.Object)>($r0);

     label2:
        if $z0 == 0 goto label8;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(\\s)", "");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

     label4:
        if $i0 <= 0 goto label8;

     label5:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

     label6:
        return $r3;

     label7:
        $r4 := @caughtexception;

     label8:
        return $r1;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static java.lang.Long toLong(java.lang.Object, java.lang.Long)
    {
        java.lang.Object $r0;
        java.lang.Long $r1, $r3;
        boolean $z0;
        java.lang.String $r2;
        int $i0;
        long $l1;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.lang.Object;

        $r1 := @parameter1: java.lang.Long;

        if $r0 == null goto label11;

     label01:
        $z0 = staticinvoke <com.jb.ga0.commerce.util.io.StringUtils: boolean isInt(java.lang.Object)>($r0);

     label02:
        if $z0 == 0 goto label11;

     label03:
        $r2 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(\\s)", "");

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

     label04:
        if $i0 <= 0 goto label08;

     label05:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r2);

     label06:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

     label07:
        return $r3;

     label08:
        $l1 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

     label09:
        goto label06;

     label10:
        $r4 := @caughtexception;

     label11:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    public static java.lang.String toLowerCase(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        $r0 = "";

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        return $r1;
    }

    public static java.lang.String toString(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        $r0 = "";

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        return $r1;
    }

    public static java.lang.String toUpperCase(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 != null goto label1;

        $r0 = "";

     label1:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase()>();

        return $r1;
    }

    public static java.lang.String trim(java.lang.Object)
    {
        java.lang.Object $r0;
        java.lang.String $r1;

        $r0 := @parameter0: java.lang.Object;

        if $r0 == null goto label1;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        return $r1;

     label1:
        return null;
    }

    public static java.lang.String urlEncode(java.lang.String)
    {
        java.lang.Exception $r0;
        java.lang.String $r1, $r2, $r3, $r7;
        int $i0, $i1;
        java.net.URI $r4;
        java.util.List $r5;
        java.lang.StringBuilder $r6;

        $r1 := @parameter0: java.lang.String;

     label01:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(63);

     label02:
        if $i0 <= 0 goto label19;

     label03:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("://");

     label04:
        $i0 = $i0 + 3;

     label05:
        $i1 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("?");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%2F", "/");

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(63);

     label06:
        $i0 = $i0 + 1;

     label07:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

     label08:
        if $r3 == null goto label16;

     label09:
        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

     label10:
        if $i0 <= 0 goto label16;

     label11:
        $r4 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r3);

        $r5 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.util.List parse(java.net.URI,java.lang.String)>($r4, "UTF-8");

        $r3 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String format(java.util.List,java.lang.String)>($r5, "UTF-8");

     label12:
        $r6 = new java.lang.StringBuilder;

     label13:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("://");

        $r7 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(" ", "%20");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("+", "%20");

     label15:
        return $r2;

     label16:
        $r6 = new java.lang.StringBuilder;

     label17:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("://");

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label18:
        goto label14;

     label19:
        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("://");

     label20:
        $i0 = $i0 + 3;

     label21:
        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%2F", "/");

     label22:
        $r6 = new java.lang.StringBuilder;

     label23:
        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>("://");

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label24:
        goto label14;

     label25:
        $r0 := @caughtexception;

        return $r1;

        catch java.lang.Exception from label01 to label02 with label25;
        catch java.lang.Exception from label03 to label04 with label25;
        catch java.lang.Exception from label05 to label06 with label25;
        catch java.lang.Exception from label07 to label08 with label25;
        catch java.lang.Exception from label09 to label10 with label25;
        catch java.lang.Exception from label11 to label12 with label25;
        catch java.lang.Exception from label13 to label14 with label25;
        catch java.lang.Exception from label14 to label15 with label25;
        catch java.lang.Exception from label17 to label18 with label25;
        catch java.lang.Exception from label19 to label20 with label25;
        catch java.lang.Exception from label21 to label22 with label25;
        catch java.lang.Exception from label23 to label24 with label25;
    }
}
