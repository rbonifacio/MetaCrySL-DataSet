Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.appnext.sdk.service.b.f: java.lang.String b(java.lang.String)>
		SHA-256: ebe030c6fd2cbb25aa00a7400b2fc5f26e7a7a74d0b88fbf8c1dcc213d4b720e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.appnext.sdk.service.b.f: java.lang.String b(java.lang.String)>
		SHA-256: 118657e9ae05cefdc9d63483425c2f3887483b76c0ac09566965e2b7c4df22c7
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.appnext.sdk.service.b.f: java.lang.String a(java.lang.String)>
		SHA-256: 8597eb152a97d0ef51eff11968a0b82741599a1662658c4585a2ee92b9a9d02c
		Secure: true
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer738)
		Method: <com.appnext.sdk.service.b.f: java.lang.String a(java.lang.String)>
		SHA-256: 5288fa4e5ff41e29a70a8abb68339aff6c19c3ecd5b2a37dae2a99e61e81988
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer743)
		Method: <com.appnext.sdk.service.b.f: java.lang.String a(java.lang.String)>
		SHA-256: b6bfd746f9e7f58759dd876f818101494935bfbf857525dd25b4a33b5cfa5e3d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer754)
		Method: <com.appnext.sdk.service.b.f: java.lang.String b(java.lang.String)>
		SHA-256: 9ef82a643117b0770fd21a11893b63d70efaf7d91a371afc8451158820ed5b7f
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.appnext.sdk.service.b.f: java.lang.String a(java.lang.String)>
		SHA-256: 7da9baa2cdbb6dd830512c34365caceecd31b76ce656be49a8b18e02c4ea82a6
		Secure: false
	Object:
		Variable: varReplacer743
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer743)
		Method: <com.appnext.sdk.service.b.f: java.lang.String a(java.lang.String)>
		SHA-256: ce0e63e39426cfe1d2b4fc0fb512c9864edf597efc157aab92a504787b08d383
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2211)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: 8c51a7e89d1b1b1132b8bdb02c08d11b2cbed4d2d18a39c7c726c5e72f6dc153
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4035)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: 2f8b39f6183c543640bbd4079d9fee752cc1371a44d20a8879b21e3b09d99313
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer748)
		Method: <com.appnext.sdk.service.b.f: java.lang.String b(java.lang.String)>
		SHA-256: a332ac6a2a13294a9e28aae0a50c5806de46f94d912118fb5d70dfc446b39f0e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: b99893f35dd36825378e8706865a4357958a98bd12dbd264e8cce2e0999aa454
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: 4789b4ccbb1d42d5adf2e8b25b1bc85d41349ba6a539a507bc032b4b1d65f0c4
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.appnext.sdk.service.b.f: java.lang.String a(java.lang.String)>
		SHA-256: 71bbfa98acb53565f8c9f5615ac0eb962c2d344c649c38bf6368dad33d55862
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.appnext.sdk.service.b.f: java.lang.String b(java.lang.String)>
		SHA-256: 75390202af4e3fede1bbad7c10813ef1d7998eefa4f7bb94452af1601278f4da
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1588)
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: 97387e0ba8c71509f4c4695d212483d9080baf816f38a8d94268641d45625016
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.appnext.sdk.service.b.f: java.lang.String a(java.lang.String)>
		SHA-256: 5f965aefff2ca7c33e9b80ca1c7e0f16a71679433bca0ad1ec6cfde625470a65
		Secure: true
	Object:
		Variable: varReplacer754
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer754)
		Method: <com.appnext.sdk.service.b.f: java.lang.String b(java.lang.String)>
		SHA-256: a9a9f3e97356e49f0d374bff2d2ebabaaa1c59e026ad65496d9f52f15b6026c3
		Secure: false

Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2208, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2208, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8c51a7e89d1b1b1132b8bdb02c08d11b2cbed4d2d18a39c7c726c5e72f6dc153)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2211)


Findings in Java Class: com.appnext.sdk.service.b.f

	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer743)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer739, $r2, $r8)


	 in Method: java.lang.String b(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer749, $r2, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer754)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 7
=====================================================================