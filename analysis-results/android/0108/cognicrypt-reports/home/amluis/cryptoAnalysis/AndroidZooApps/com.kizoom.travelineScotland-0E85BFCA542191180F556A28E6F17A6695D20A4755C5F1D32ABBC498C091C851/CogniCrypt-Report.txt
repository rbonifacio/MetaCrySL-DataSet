Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2423)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] getRawKey(byte[])>
		SHA-256: 73e259e2c002783b7ffff21f59581eca45e8470f777631371d170d8473f8968b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2421)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: d32f593f0ed637bd9d0d490ed3eaff39b77aa1e2d359c81552a279c99cf21fdb
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2419)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: bcfec7fe6d3ce151a757be0fed617d8e157e646612354aa30abe0c27cbff824b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] getRawKey(byte[])>
		SHA-256: d59d90228bfa9731fcd9433ed05f28d715423429c92da36fedd1f70435ba57ca
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: 3a8761ab0099e5ae6032fa84068902074888e5426aff28421086bd0d70427952
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: a1c807a857f151f5c4d7a31d6d39110784702f7ee5dc410c8a8471904cbf09d2
		Secure: false
	Object:
		Variable: varReplacer2419
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2419)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: 36b1be3d1233b40a8e0505723c20646ed66a8ce592df1536951a74fd07403039
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.apps.analytics.PersistentEventStore: void startNewVisit()>
		SHA-256: 16e2093d83c7039b49d21a048d17818591ae5ea22f20400c902dded8894eac28
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer2424, varReplacer2425)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] getRawKey(byte[])>
		SHA-256: b6395904a840b44548a3666a3cf1bc3e8c566759d3573cc3db9efc88b454cf79
		Secure: true

Findings in Java Class: com.kizoom.jp.utils.PasswordEncryption

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2420, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2419)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d32f593f0ed637bd9d0d490ed3eaff39b77aa1e2d359c81552a279c99cf21fdb)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2421)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d32f593f0ed637bd9d0d490ed3eaff39b77aa1e2d359c81552a279c99cf21fdb)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2421)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer2426, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 9

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 3
=====================================================================