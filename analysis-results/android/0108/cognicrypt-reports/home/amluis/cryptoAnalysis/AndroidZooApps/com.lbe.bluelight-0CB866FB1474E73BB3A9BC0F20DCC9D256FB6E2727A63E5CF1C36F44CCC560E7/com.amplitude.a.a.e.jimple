public final class com.amplitude.a.a.e extends java.lang.Object
{
    private static com.amplitude.a.a.e b;
    private java.security.KeyStore a;

    private void <init>(android.content.Context)
    {
        com.amplitude.a.a.e $r0;
        android.content.Context $r1;
        java.security.cert.CertificateFactory $r2;
        java.io.BufferedInputStream $r3;
        android.content.res.AssetManager $r4;
        java.io.InputStream $r5;
        java.security.cert.Certificate $r6;
        java.lang.String $r7, varReplacer3900, varReplacer3901, varReplacer3904;
        java.security.KeyStore $r8;
        java.lang.Throwable $r9;
        java.lang.Exception $r10;
        null_type varReplacer3902, varReplacer3903, varReplacer3905;

        nop;

        $r0 := @this: com.amplitude.a.a.e;

        $r1 := @parameter0: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

     label1:
        varReplacer3900 = "X.509";

        $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer3900);

     label2:
        $r3 = new java.io.BufferedInputStream;

     label3:
        $r4 = virtualinvoke $r1.<android.content.Context: android.content.res.AssetManager getAssets()>();

        varReplacer3904 = "ca.crt.der";

        $r5 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>(varReplacer3904);

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

     label4:
        $r6 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3);

     label5:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        $r7 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7);

        $r0.<com.amplitude.a.a.e: java.security.KeyStore a> = $r8;

        $r8 = $r0.<com.amplitude.a.a.e: java.security.KeyStore a>;

        varReplacer3902 = null;

        varReplacer3903 = null;

        virtualinvoke $r8.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer3902, varReplacer3902);

        $r8 = $r0.<com.amplitude.a.a.e: java.security.KeyStore a>;

        varReplacer3901 = "ca";

        virtualinvoke $r8.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(varReplacer3901, $r6);

     label6:
        return;

     label7:
        $r9 := @caughtexception;

     label8:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

        throw $r9;

     label9:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.lang.Exception: void printStackTrace()>();

        varReplacer3905 = null;

        $r0.<com.amplitude.a.a.e: java.security.KeyStore a> = varReplacer3905;

        return;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label8 to label9 with label9;
    }

    public static com.amplitude.a.a.e a(android.content.Context)
    {
        android.content.Context $r0;
        com.amplitude.a.a.e $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.amplitude.a.a.e: com.amplitude.a.a.e b>;

        if $r1 != null goto label1;

        $r1 = new com.amplitude.a.a.e;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        specialinvoke $r1.<com.amplitude.a.a.e: void <init>(android.content.Context)>($r0);

        <com.amplitude.a.a.e: com.amplitude.a.a.e b> = $r1;

     label1:
        $r1 = <com.amplitude.a.a.e: com.amplitude.a.a.e b>;

        return $r1;
    }

    public final javax.net.ssl.SSLSocketFactory a() throws java.security.NoSuchAlgorithmException, java.security.KeyStoreException, java.security.KeyManagementException
    {
        com.amplitude.a.a.e $r0;
        java.security.KeyStore $r1;
        java.lang.RuntimeException $r2;
        java.lang.String $r3, varReplacer3896, varReplacer3897;
        javax.net.ssl.TrustManagerFactory $r4;
        javax.net.ssl.SSLContext $r5;
        javax.net.ssl.TrustManager[] $r6;
        javax.net.ssl.SSLSocketFactory $r7;
        null_type varReplacer3898, varReplacer3899;

        nop;

        $r0 := @this: com.amplitude.a.a.e;

        $r1 = $r0.<com.amplitude.a.a.e: java.security.KeyStore a>;

        if $r1 != null goto label1;

        $r2 = new java.lang.RuntimeException;

        varReplacer3896 = "No KeyStore";

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(varReplacer3896);

        throw $r2;

     label1:
        $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3);

        $r1 = $r0.<com.amplitude.a.a.e: java.security.KeyStore a>;

        virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1);

        varReplacer3897 = "TLS";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3897);

        $r6 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        varReplacer3898 = null;

        varReplacer3899 = null;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3898, $r6, varReplacer3898);

        $r7 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        return $r7;
    }
}
