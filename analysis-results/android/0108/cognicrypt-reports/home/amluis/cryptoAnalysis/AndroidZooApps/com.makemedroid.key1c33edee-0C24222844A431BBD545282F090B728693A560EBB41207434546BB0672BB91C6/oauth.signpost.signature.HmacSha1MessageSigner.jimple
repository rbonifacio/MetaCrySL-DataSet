public class oauth.signpost.signature.HmacSha1MessageSigner extends oauth.signpost.signature.OAuthMessageSigner
{
    private static final java.lang.String MAC_NAME;

    public void <init>()
    {
        oauth.signpost.signature.HmacSha1MessageSigner $r0;

        nop;

        $r0 := @this: oauth.signpost.signature.HmacSha1MessageSigner;

        specialinvoke $r0.<oauth.signpost.signature.OAuthMessageSigner: void <init>()>();

        return;
    }

    public java.lang.String getSignatureMethod()
    {
        oauth.signpost.signature.HmacSha1MessageSigner $r0;
        java.lang.String varReplacer11472;

        nop;

        $r0 := @this: oauth.signpost.signature.HmacSha1MessageSigner;

        varReplacer11472 = "HMAC-SHA1";

        return varReplacer11472;
    }

    public java.lang.String sign(oauth.signpost.http.HttpRequest, oauth.signpost.http.HttpParameters)
    {
        oauth.signpost.signature.HmacSha1MessageSigner $r0;
        oauth.signpost.http.HttpRequest $r1;
        oauth.signpost.http.HttpParameters $r2;
        java.lang.StringBuilder $r3, r11;
        java.lang.String $r4, varReplacer11504, varReplacer11505, varReplacer11507, varReplacer11508, varReplacer11509;
        byte[] $r5;
        javax.crypto.spec.SecretKeySpec $r6, r12;
        javax.crypto.Mac $r7;
        oauth.signpost.signature.SignatureBaseString $r8, r13;
        java.lang.Throwable $r9, $r10;
        oauth.signpost.exception.OAuthMessageSignerException r14;
        java.lang.Exception r15;
        int varReplacer11506;

        nop;

        $r0 := @this: oauth.signpost.signature.HmacSha1MessageSigner;

        $r1 := @parameter0: oauth.signpost.http.HttpRequest;

        $r2 := @parameter1: oauth.signpost.http.HttpParameters;

        r11 = new java.lang.StringBuilder;

        $r3 = r11;

     label1:
        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r0.<oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String getConsumerSecret()>();

        $r4 = staticinvoke <oauth.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer11506 = 38;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer11506);

        $r4 = virtualinvoke $r0.<oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String getTokenSecret()>();

        $r4 = staticinvoke <oauth.signpost.OAuth: java.lang.String percentEncode(java.lang.String)>($r4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer11508 = "UTF-8";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer11508);

     label2:
        r12 = new javax.crypto.spec.SecretKeySpec;

        $r6 = r12;

     label3:
        varReplacer11504 = "HmacSHA1";

        specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer11504);

        varReplacer11505 = "HmacSHA1";

        $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer11505);

        virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r6);

     label4:
        r13 = new oauth.signpost.signature.SignatureBaseString;

        $r8 = r13;

     label5:
        specialinvoke r13.<oauth.signpost.signature.SignatureBaseString: void <init>(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>($r1, $r2);

        $r4 = virtualinvoke $r8.<oauth.signpost.signature.SignatureBaseString: java.lang.String generate()>();

        varReplacer11507 = "SBS";

        staticinvoke <oauth.signpost.OAuth: void debugOut(java.lang.String,java.lang.String)>(varReplacer11507, $r4);

        varReplacer11509 = "UTF-8";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer11509);

        $r5 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5);

        $r4 = virtualinvoke $r0.<oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String base64Encode(byte[])>($r5);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

     label6:
        return $r4;

     label7:
        $r9 := @caughtexception;

        r14 = new oauth.signpost.exception.OAuthMessageSignerException;

        r15 = (java.lang.Exception) $r9;

        specialinvoke r14.<oauth.signpost.exception.OAuthMessageSignerException: void <init>(java.lang.Exception)>(r15);

        throw r14;

     label8:
        $r10 := @caughtexception;

        r14 = new oauth.signpost.exception.OAuthMessageSignerException;

        r15 = (java.lang.Exception) $r10;

        specialinvoke r14.<oauth.signpost.exception.OAuthMessageSignerException: void <init>(java.lang.Exception)>(r15);

        throw r14;

        catch java.security.GeneralSecurityException from label1 to label2 with label7;
        catch java.security.GeneralSecurityException from label3 to label4 with label7;
        catch java.security.GeneralSecurityException from label5 to label6 with label7;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label8;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label8;
        catch java.io.UnsupportedEncodingException from label5 to label6 with label8;
    }
}
