public class com.comscore.utils.Utils extends java.lang.Object
{

    public void <init>()
    {
        com.comscore.utils.Utils $r0;

        $r0 := @this: com.comscore.utils.Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List arrayOfStrings(java.util.List)
    {
        java.util.List $r0;
        java.util.ArrayList $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;

        $r0 := @parameter0: java.util.List;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        if $r0 == null goto label2;

        $r2 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r4);

        goto label1;

     label2:
        return $r1;
    }

    public static java.lang.String encrypt(java.lang.String)
    {
        java.lang.String $r0, $r6, varReplacer1181, varReplacer1182, varReplacer1183, varReplacer1184;
        java.security.spec.X509EncodedKeySpec $r1;
        byte[] $r2;
        java.security.KeyFactory $r3;
        java.security.PublicKey $r4;
        javax.crypto.Cipher $r5;
        char[] $r7;
        java.lang.StringBuilder $r8;
        int varReplacer1185;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.security.spec.X509EncodedKeySpec;

        $r2 = <com.comscore.utils.Constants: byte[] RSA_PUBLIC_KEY>;

        specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2);

        varReplacer1183 = "RSA";

        $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1183);

        $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1);

        varReplacer1182 = "RSA/ECB/PKCS1PADDING";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1182);

        varReplacer1185 = 1;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1185, $r4);

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2);

        $r6 = new java.lang.String;

        $r7 = staticinvoke <com.comscore.utils.Base64Coder: char[] encode(byte[])>($r2);

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer1181 = "encrypt(";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1181);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        varReplacer1184 = ")=";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1184);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r0 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.comscore.utils.CSLog: void d(java.lang.Class,java.lang.String)>(class "Lcom/comscore/utils/Utils;", $r0);

        return $r6;
    }

    public static boolean getBoolean(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        int varReplacer440;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer440 = 0;

        $z0 = staticinvoke <com.comscore.utils.Utils: boolean getBoolean(java.lang.String,boolean)>($r0, varReplacer440);

        return $z0;
    }

    public static boolean getBoolean(java.lang.String, boolean)
    {
        java.lang.String $r0, varReplacer436, varReplacer437, varReplacer438, varReplacer439;
        boolean $z0, $z1;
        int varReplacer434, varReplacer435;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $r0 == null goto label4;

        varReplacer437 = "yes";

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer437);

        if $z1 != 0 goto label1;

        varReplacer438 = "true";

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer438);

        if $z1 == 0 goto label2;

     label1:
        varReplacer435 = 1;

        return varReplacer435;

     label2:
        varReplacer439 = "no";

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer439);

        if $z1 != 0 goto label3;

        varReplacer436 = "false";

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer436);

        if $z1 == 0 goto label4;

     label3:
        varReplacer434 = 0;

        return varReplacer434;

     label4:
        return $z0;
    }

    public static int getInteger(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, varReplacer530;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer530 = 0;

        $i0 = staticinvoke <com.comscore.utils.Utils: int getInteger(java.lang.String,int)>($r0, varReplacer530);

        return $i0;
    }

    public static int getInteger(java.lang.String, int)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        int $i0, $i1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i1 := @parameter1: int;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label2:
        return $i0;

     label3:
        $r1 := @caughtexception;

        return $i1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static long getLong(java.lang.String)
    {
        java.lang.String $r0;
        long $l0, varReplacer531;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer531 = 0L;

        $l0 = staticinvoke <com.comscore.utils.Utils: long getLong(java.lang.String,long)>($r0, varReplacer531);

        return $l0;
    }

    public static long getLong(java.lang.String, long)
    {
        java.lang.String $r0;
        java.lang.Throwable $r1;
        long $l0, $l1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $l1 := @parameter1: long;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

     label2:
        return $l0;

     label3:
        $r1 := @caughtexception;

        return $l1;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static boolean isEmpty(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, varReplacer590, varReplacer591;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        varReplacer591 = 1;

        return varReplacer591;

     label2:
        varReplacer590 = 0;

        return varReplacer590;
    }

    public static boolean isNotEmpty(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, varReplacer588, varReplacer589;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        varReplacer589 = 1;

        return varReplacer589;

     label1:
        varReplacer588 = 0;

        return varReplacer588;
    }

    public static java.util.HashMap mapOfStrings(java.util.Map)
    {
        java.util.Map $r0;
        java.util.HashMap $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4, $r5;
        java.lang.String $r6, $r7;
        int $i0;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        if $r0 == null goto label2;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        if $r4 == null goto label1;

        $r5 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        if $r5 == null goto label1;

        $r6 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r7 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return $r1;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0, varReplacer1115, varReplacer1118;
        java.lang.StringBuffer $r1;
        byte[] $r2;
        java.security.MessageDigest $r3;
        int $i0, $i1, varReplacer1116;
        byte $b2;
        short $s3;
        java.lang.StringBuilder $r4;
        java.lang.Exception $r5;
        null_type varReplacer1117;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

     label01:
        varReplacer1115 = "MD5";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1115);

        virtualinvoke $r3.<java.security.MessageDigest: void reset()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r1 = new java.lang.StringBuffer;

     label03:
        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i0 = 0;

     label05:
        $i1 = lengthof $r2;

     label06:
        if $i0 >= $i1 goto label14;

     label07:
        $b2 = $r2[$i0];

     label08:
        $s3 = $b2 & 255;

     label09:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label10:
        if $i1 != 1 goto label12;

     label11:
        varReplacer1116 = 48;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(varReplacer1116);

     label12:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label13:
        $i0 = $i0 + 1;

        goto label05;

     label14:
        $r4 = new java.lang.StringBuilder;

     label15:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        varReplacer1118 = "";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1118);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        return $r0;

     label17:
        $r5 := @caughtexception;

        varReplacer1117 = null;

        return varReplacer1117;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label09 to label10 with label17;
        catch java.lang.Exception from label11 to label13 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }
}
