Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.net.ssl.KeyManager[]
		Statement: $r7 = virtualinvoke $r5.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.uzmap.pkg.uzkit.b.a: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: d2ec173ad0c2a4aa64c75479ea517fa30fd7d368835996a381e7235a235fa699
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1483)
		Method: <com.uzmap.pkg.uzkit.b.b: java.security.KeyStore a(java.lang.String,java.lang.String)>
		SHA-256: 93649fd07c26b9133db9a1899f8226214aee12f05cdfa41cd591eeb2e617d461
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1485)
		Method: <com.uzmap.pkg.uzcore.UZCoreUtil: java.lang.String toMD5(java.lang.String)>
		SHA-256: 57b565049e9aceb94107ea93159c9ebb364c489c465bebdd4fc3864efa45c369
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer1487)
		Method: <com.uzmap.pkg.uzkit.b.a: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: 440df0f1a384072823888bfe9177d7fe60f512cf29b231d0396b07449e961df
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2580)
		Method: <com.uzmap.pkg.uzsocket.b.b: java.lang.String a(java.lang.String)>
		SHA-256: 4a198881c56e9434b0489a5897ce9a10aba91d98cfdc169db3171c7b33bd64ad
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.uzmap.pkg.a.e.e: java.lang.String a(java.lang.String)>
		SHA-256: 69a6e11629d5ad4330e68020ab53d94117f3fa7ade657ab7d93f293532f4646b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1478)
		Method: <com.uzmap.pkg.uzkit.b.b: java.security.KeyStore a(java.lang.String,java.lang.String)>
		SHA-256: 37a7ae04695391a4f742d6fa960cf6711b49ba3cc717376317f81d63598df814
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1486)
		Method: <com.uzmap.pkg.uzkit.b.a: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: 8d4f88f98c8049b280d58ee5fd9f24c2e46a7f68d31fc8825fd81c4f710c0154
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1865)
		Method: <com.uzmap.pkg.uzcore.UZCoreUtil: java.lang.String toSHA1(java.lang.String)>
		SHA-256: 3b9a633a876676eaf9fce31daf99981f6a871ac11ba0edc874ec658687722d2c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1721)
		Method: <com.uzmap.pkg.a.e.e: java.lang.String a(java.lang.String)>
		SHA-256: 7477a2293181e0aaaae71cf09bb4cc09f1f66f132ab17b9c3e564cc53b0ad599
		Secure: true
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.uzmap.pkg.uzkit.b.a: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: 9ed4f03026ee40cd5ee4e772e1a653159e62161ea1ce2fe6977edcd6e8b62f9c
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.uzmap.pkg.uzsocket.b.b: java.lang.String a(java.lang.String)>
		SHA-256: e87a92b9b443444e6fa52295c64105af80ffddc1471a827284b083b929c996a3
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.uzmap.pkg.uzcore.UZCoreUtil: java.lang.String toMD5(java.lang.String)>
		SHA-256: 17c2807365c8dab68237ab842bbce5e177ccf6e41da8313d4ccc742758f897d6
		Secure: true

Findings in Java Class: com.uzmap.pkg.uzkit.b.b

	 in Method: java.security.KeyStore a(java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #93649fd07c26b9133db9a1899f8226214aee12f05cdfa41cd591eeb2e617d461)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r7)


Findings in Java Class: com.uzmap.pkg.uzkit.b.a

	 in Method: void <init>(java.security.KeyStore,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #440df0f1a384072823888bfe9177d7fe60f512cf29b231d0396b07449e961df)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer1487)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #440df0f1a384072823888bfe9177d7fe60f512cf29b231d0396b07449e961df)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, r11, r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, r11, r10)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	ConstraintError: 1
	RequiredPredicateError: 2
=====================================================================