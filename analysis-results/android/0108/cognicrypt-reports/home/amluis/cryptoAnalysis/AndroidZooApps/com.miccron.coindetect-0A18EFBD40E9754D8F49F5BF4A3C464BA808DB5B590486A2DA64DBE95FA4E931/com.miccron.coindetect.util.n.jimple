public class com.miccron.coindetect.util.n extends java.lang.Object
{

    public static javax.net.ssl.SSLContext a(java.io.InputStream)
    {
        java.io.InputStream $r0;
        java.security.cert.CertificateFactory $r1;
        java.security.cert.Certificate $r2;
        java.lang.String $r3, varReplacer3030, varReplacer3035, varReplacer3037;
        java.security.KeyStore $r4;
        javax.net.ssl.TrustManagerFactory $r5;
        javax.net.ssl.SSLContext $r6;
        javax.net.ssl.TrustManager[] $r7;
        java.lang.Throwable $r8, $r10;
        java.lang.Exception $r9;
        java.security.NoSuchAlgorithmException r11;
        null_type varReplacer3031, varReplacer3032, varReplacer3033, varReplacer3034, varReplacer3036;

        nop;

        $r0 := @parameter0: java.io.InputStream;

     label01:
        varReplacer3037 = "X.509";

        $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer3037);

     label02:
        $r2 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r0);

     label03:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

        $r3 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3);

        varReplacer3033 = null;

        varReplacer3034 = null;

        virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer3033, varReplacer3033);

        varReplacer3030 = "ca";

        virtualinvoke $r4.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(varReplacer3030, $r2);

        $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r5 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3);

        virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r4);

        varReplacer3035 = "TLS";

        $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3035);

        $r7 = virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        varReplacer3031 = null;

        varReplacer3032 = null;

        virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3031, $r7, varReplacer3031);

     label04:
        return $r6;

     label05:
        $r8 := @caughtexception;

     label06:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

        throw $r8;

     label07:
        $r9 := @caughtexception;

        staticinvoke <com.google.firebase.crash.FirebaseCrash: void a(java.lang.Throwable)>($r9);

     label08:
        $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>();

     label09:
        return $r6;

     label10:
        $r10 := @caughtexception;

        r11 = (java.security.NoSuchAlgorithmException) $r10;

        virtualinvoke r11.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer3036 = null;

        return varReplacer3036;

        catch java.lang.Exception from label01 to label02 with label07;
        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label06 to label07 with label07;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label10;
    }
}
