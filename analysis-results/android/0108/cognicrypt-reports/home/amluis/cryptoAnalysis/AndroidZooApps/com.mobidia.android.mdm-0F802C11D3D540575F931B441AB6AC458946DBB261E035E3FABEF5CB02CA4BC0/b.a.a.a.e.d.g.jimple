public class b.a.a.a.e.d.g extends java.lang.Object implements b.a.a.a.e.c.b, b.a.a.a.e.c.c, b.a.a.a.e.c.f
{
    public static final b.a.a.a.e.d.i b;
    public static final b.a.a.a.e.d.i c;
    public static final b.a.a.a.e.d.i d;
    private final javax.net.ssl.SSLSocketFactory a;
    public volatile b.a.a.a.e.d.i e;
    private final b.a.a.a.e.c.a f;
    private final java.lang.String[] g;
    private final java.lang.String[] h;

    static void <clinit>()
    {
        b.a.a.a.e.d.b $r0;
        b.a.a.a.e.d.c $r1;
        b.a.a.a.e.d.h $r2;

        nop;

        $r0 = new b.a.a.a.e.d.b;

        specialinvoke $r0.<b.a.a.a.e.d.b: void <init>()>();

        <b.a.a.a.e.d.g: b.a.a.a.e.d.i b> = $r0;

        $r1 = new b.a.a.a.e.d.c;

        specialinvoke $r1.<b.a.a.a.e.d.c: void <init>()>();

        <b.a.a.a.e.d.g: b.a.a.a.e.d.i c> = $r1;

        $r2 = new b.a.a.a.e.d.h;

        specialinvoke $r2.<b.a.a.a.e.d.h: void <init>()>();

        <b.a.a.a.e.d.g: b.a.a.a.e.d.i d> = $r2;

        return;
    }

    public void <init>(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException
    {
        b.a.a.a.e.d.g $r0;
        java.security.KeyStore $r1;
        b.a.a.a.e.d.d $r2;
        java.lang.String $r3;
        javax.net.ssl.SSLContext $r4;
        java.util.Set $r5, $r6;
        boolean $z0;
        int $i0;
        javax.net.ssl.KeyManager[] $r7;
        java.lang.Object[] $r8;
        javax.net.ssl.TrustManager[] $r9;
        java.security.SecureRandom $r10;
        b.a.a.a.e.d.i $r11;

        nop;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: java.security.KeyStore;

        $r2 = new b.a.a.a.e.d.d;

        specialinvoke $r2.<b.a.a.a.e.d.d: void <init>()>();

        $r2 = virtualinvoke $r2.<b.a.a.a.e.d.d: b.a.a.a.e.d.d a(java.security.KeyStore)>($r1);

        $r3 = $r2.<b.a.a.a.e.d.d: java.lang.String a>;

        if $r3 == null goto label4;

        $r3 = $r2.<b.a.a.a.e.d.d: java.lang.String a>;

     label1:
        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3);

        $r5 = $r2.<b.a.a.a.e.d.d: java.util.Set b>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label5;

        $r5 = $r2.<b.a.a.a.e.d.d: java.util.Set b>;

        $r6 = $r2.<b.a.a.a.e.d.d: java.util.Set b>;

        $i0 = interfaceinvoke $r6.<java.util.Set: int size()>();

        $r7 = newarray (javax.net.ssl.KeyManager)[$i0];

        $r8 = interfaceinvoke $r5.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        $r7 = (javax.net.ssl.KeyManager[]) $r8;

     label2:
        $r5 = $r2.<b.a.a.a.e.d.d: java.util.Set c>;

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        $r5 = $r2.<b.a.a.a.e.d.d: java.util.Set c>;

        $r6 = $r2.<b.a.a.a.e.d.d: java.util.Set c>;

        $i0 = interfaceinvoke $r6.<java.util.Set: int size()>();

        $r9 = newarray (javax.net.ssl.TrustManager)[$i0];

        $r8 = interfaceinvoke $r5.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r9);

        $r9 = (javax.net.ssl.TrustManager[]) $r8;

     label3:
        $r10 = $r2.<b.a.a.a.e.d.d: java.security.SecureRandom d>;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r9, $r10);

        $r11 = <b.a.a.a.e.d.g: b.a.a.a.e.d.i c>;

        specialinvoke $r0.<b.a.a.a.e.d.g: void <init>(javax.net.ssl.SSLContext,b.a.a.a.e.d.i)>($r4, $r11);

        return;

     label4:
        $r3 = "TLS";

        goto label1;

     label5:
        $r7 = null;

        goto label2;

     label6:
        $r9 = null;

        goto label3;
    }

    private void <init>(javax.net.ssl.SSLContext, b.a.a.a.e.d.i)
    {
        b.a.a.a.e.d.g $r0;
        javax.net.ssl.SSLContext $r1;
        b.a.a.a.e.d.i $r2;
        java.lang.Object $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        java.lang.String varReplacer9902;

        nop;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: javax.net.ssl.SSLContext;

        $r2 := @parameter1: b.a.a.a.e.d.i;

        varReplacer9902 = "SSL context";

        $r3 = staticinvoke <b.a.a.a.o.a: java.lang.Object a(java.lang.Object,java.lang.String)>($r1, varReplacer9902);

        $r1 = (javax.net.ssl.SSLContext) $r3;

        $r4 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        specialinvoke $r0.<b.a.a.a.e.d.g: void <init>(javax.net.ssl.SSLSocketFactory,b.a.a.a.e.d.i)>($r4, $r2);

        return;
    }

    private void <init>(javax.net.ssl.SSLSocketFactory, b.a.a.a.e.d.i)
    {
        b.a.a.a.e.d.g $r0;
        javax.net.ssl.SSLSocketFactory $r1;
        java.lang.Object $r2;
        b.a.a.a.e.d.i $r3;
        java.lang.String varReplacer9903;
        null_type varReplacer9904, varReplacer9905, varReplacer9906;

        nop;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        $r3 := @parameter1: b.a.a.a.e.d.i;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer9903 = "SSL socket factory";

        $r2 = staticinvoke <b.a.a.a.o.a: java.lang.Object a(java.lang.Object,java.lang.String)>($r1, varReplacer9903);

        $r1 = (javax.net.ssl.SSLSocketFactory) $r2;

        $r0.<b.a.a.a.e.d.g: javax.net.ssl.SSLSocketFactory a> = $r1;

        varReplacer9904 = null;

        $r0.<b.a.a.a.e.d.g: java.lang.String[] g> = varReplacer9904;

        varReplacer9906 = null;

        $r0.<b.a.a.a.e.d.g: java.lang.String[] h> = varReplacer9906;

        if $r3 == null goto label2;

     label1:
        $r0.<b.a.a.a.e.d.g: b.a.a.a.e.d.i e> = $r3;

        varReplacer9905 = null;

        $r0.<b.a.a.a.e.d.g: b.a.a.a.e.c.a f> = varReplacer9905;

        return;

     label2:
        $r3 = <b.a.a.a.e.d.g: b.a.a.a.e.d.i c>;

        goto label1;
    }

    private java.net.Socket a() throws java.io.IOException
    {
        b.a.a.a.e.d.g $r0;
        java.net.Socket $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        javax.net.ssl.SSLSocket $r3;

        $r0 := @this: b.a.a.a.e.d.g;

        $r2 = $r0.<b.a.a.a.e.d.g: javax.net.ssl.SSLSocketFactory a>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        $r3 = (javax.net.ssl.SSLSocket) $r1;

        specialinvoke $r0.<b.a.a.a.e.d.g: void a(javax.net.ssl.SSLSocket)>($r3);

        return $r3;
    }

    private java.net.Socket a(int, java.net.Socket, b.a.a.a.n, java.net.InetSocketAddress, java.net.InetSocketAddress) throws java.io.IOException
    {
        b.a.a.a.e.d.g $r0;
        int $i0;
        java.net.Socket $r1;
        b.a.a.a.n $r2;
        java.net.InetSocketAddress $r3, $r4;
        boolean $z0;
        javax.net.ssl.SSLSocket $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7, $r8;

        $r0 := @this: b.a.a.a.e.d.g;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.net.Socket;

        $r2 := @parameter2: b.a.a.a.n;

        $r3 := @parameter3: java.net.InetSocketAddress;

        $r4 := @parameter4: java.net.InetSocketAddress;

        staticinvoke <b.a.a.a.o.a: java.lang.Object a(java.lang.Object,java.lang.String)>($r2, "HTTP host");

        staticinvoke <b.a.a.a.o.a: java.lang.Object a(java.lang.Object,java.lang.String)>($r3, "Remote address");

        if $r1 == null goto label4;

     label1:
        if $r4 == null goto label2;

        virtualinvoke $r1.<java.net.Socket: void bind(java.net.SocketAddress)>($r4);

     label2:
        virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r3, $i0);

     label3:
        $z0 = $r1 instanceof javax.net.ssl.SSLSocket;

        if $z0 == 0 goto label8;

        $r5 = (javax.net.ssl.SSLSocket) $r1;

        virtualinvoke $r5.<javax.net.ssl.SSLSocket: void startHandshake()>();

        $r6 = virtualinvoke $r2.<b.a.a.a.n: java.lang.String a()>();

        specialinvoke $r0.<b.a.a.a.e.d.g: void a(javax.net.ssl.SSLSocket,java.lang.String)>($r5, $r6);

        return $r1;

     label4:
        $r1 = specialinvoke $r0.<b.a.a.a.e.d.g: java.net.Socket a()>();

        goto label1;

     label5:
        $r7 := @caughtexception;

     label6:
        virtualinvoke $r1.<java.net.Socket: void close()>();

     label7:
        throw $r7;

     label8:
        $r6 = virtualinvoke $r2.<b.a.a.a.n: java.lang.String a()>();

        $i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int getPort()>();

        $r1 = specialinvoke $r0.<b.a.a.a.e.d.g: java.net.Socket d(java.net.Socket,java.lang.String,int)>($r1, $r6, $i0);

        return $r1;

     label9:
        $r8 := @caughtexception;

        goto label7;

        catch java.io.IOException from label2 to label3 with label5;
        catch java.io.IOException from label6 to label7 with label9;
    }

    private void a(javax.net.ssl.SSLSocket) throws java.io.IOException
    {
        b.a.a.a.e.d.g $r0;
        javax.net.ssl.SSLSocket $r1;
        java.lang.String[] $r2;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: javax.net.ssl.SSLSocket;

        $r2 = $r0.<b.a.a.a.e.d.g: java.lang.String[] g>;

        if $r2 == null goto label1;

        $r2 = $r0.<b.a.a.a.e.d.g: java.lang.String[] g>;

        virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>($r2);

     label1:
        $r2 = $r0.<b.a.a.a.e.d.g: java.lang.String[] h>;

        if $r2 == null goto label2;

        $r2 = $r0.<b.a.a.a.e.d.g: java.lang.String[] h>;

        virtualinvoke $r1.<javax.net.ssl.SSLSocket: void setEnabledCipherSuites(java.lang.String[])>($r2);

     label2:
        return;
    }

    private void a(javax.net.ssl.SSLSocket, java.lang.String) throws java.io.IOException
    {
        b.a.a.a.e.d.g $r0;
        javax.net.ssl.SSLSocket $r1;
        java.lang.String $r2;
        java.lang.Exception $r3;
        b.a.a.a.e.d.i $r4;
        java.lang.Throwable $r5;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: javax.net.ssl.SSLSocket;

        $r2 := @parameter1: java.lang.String;

        $r4 = $r0.<b.a.a.a.e.d.g: b.a.a.a.e.d.i e>;

     label1:
        interfaceinvoke $r4.<b.a.a.a.e.d.i: void a(java.lang.String,javax.net.ssl.SSLSocket)>($r2, $r1);

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        virtualinvoke $r1.<javax.net.ssl.SSLSocket: void close()>();

     label5:
        throw $r5;

     label6:
        $r3 := @caughtexception;

        goto label5;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static b.a.a.a.e.d.g c() throws b.a.a.a.e.d.f
    {
        b.a.a.a.e.d.g $r0;
        b.a.a.a.e.d.i $r1;
        javax.net.ssl.SSLContext $r2;

        nop;

        $r0 = new b.a.a.a.e.d.g;

        $r2 = staticinvoke <b.a.a.a.e.d.e: javax.net.ssl.SSLContext a()>();

        $r1 = <b.a.a.a.e.d.g: b.a.a.a.e.d.i c>;

        specialinvoke $r0.<b.a.a.a.e.d.g: void <init>(javax.net.ssl.SSLContext,b.a.a.a.e.d.i)>($r2, $r1);

        return $r0;
    }

    private java.net.Socket d(java.net.Socket, java.lang.String, int) throws java.io.IOException
    {
        b.a.a.a.e.d.g $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        javax.net.ssl.SSLSocketFactory $r3;
        javax.net.ssl.SSLSocket $r4;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 = $r0.<b.a.a.a.e.d.g: javax.net.ssl.SSLSocketFactory a>;

        $r1 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, 1);

        $r4 = (javax.net.ssl.SSLSocket) $r1;

        specialinvoke $r0.<b.a.a.a.e.d.g: void a(javax.net.ssl.SSLSocket)>($r4);

        virtualinvoke $r4.<javax.net.ssl.SSLSocket: void startHandshake()>();

        specialinvoke $r0.<b.a.a.a.e.d.g: void a(javax.net.ssl.SSLSocket,java.lang.String)>($r4, $r2);

        return $r4;
    }

    public final java.net.Socket a(b.a.a.a.l.d) throws java.io.IOException
    {
        b.a.a.a.e.d.g $r0;
        b.a.a.a.l.d $r1;
        java.net.Socket $r2;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: b.a.a.a.l.d;

        $r2 = specialinvoke $r0.<b.a.a.a.e.d.g: java.net.Socket a()>();

        return $r2;
    }

    public java.net.Socket a(java.net.Socket, java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        b.a.a.a.e.d.g $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = specialinvoke $r0.<b.a.a.a.e.d.g: java.net.Socket d(java.net.Socket,java.lang.String,int)>($r1, $r2, $i0);

        return $r1;
    }

    public final java.net.Socket a(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, b.a.a.a.l.d) throws java.io.IOException, java.net.UnknownHostException, b.a.a.a.e.f
    {
        b.a.a.a.e.d.g $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0, $i1;
        java.net.InetAddress $r3, $r8;
        b.a.a.a.l.d $r4;
        b.a.a.a.e.m $r5;
        b.a.a.a.n $r6;
        b.a.a.a.e.c.a $r7;
        java.net.InetSocketAddress $r9;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.net.InetAddress;

        $i1 := @parameter4: int;

        $r4 := @parameter5: b.a.a.a.l.d;

        $r7 = $r0.<b.a.a.a.e.d.g: b.a.a.a.e.c.a f>;

        if $r7 == null goto label5;

        $r7 = $r0.<b.a.a.a.e.d.g: b.a.a.a.e.c.a f>;

        $r8 = interfaceinvoke $r7.<b.a.a.a.e.c.a: java.net.InetAddress a()>();

     label1:
        $r9 = null;

        if $r3 != null goto label2;

        if $i1 <= 0 goto label4;

     label2:
        $r9 = new java.net.InetSocketAddress;

        if $i1 <= 0 goto label6;

     label3:
        specialinvoke $r9.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r3, $i1);

     label4:
        $r5 = new b.a.a.a.e.m;

        $r6 = new b.a.a.a.n;

        specialinvoke $r6.<b.a.a.a.n: void <init>(java.lang.String,int)>($r2, $i0);

        specialinvoke $r5.<b.a.a.a.e.m: void <init>(b.a.a.a.n,java.net.InetAddress,int)>($r6, $r8, $i0);

        $r1 = virtualinvoke $r0.<b.a.a.a.e.d.g: java.net.Socket a(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,b.a.a.a.l.d)>($r1, $r5, $r9, $r4);

        return $r1;

     label5:
        $r8 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r2);

        goto label1;

     label6:
        $i1 = 0;

        goto label3;
    }

    public final java.net.Socket a(java.net.Socket, java.net.InetSocketAddress, java.net.InetSocketAddress, b.a.a.a.l.d) throws java.io.IOException, java.net.UnknownHostException, b.a.a.a.e.f
    {
        b.a.a.a.e.d.g $r0;
        java.net.Socket $r1;
        java.net.InetSocketAddress $r2, $r3;
        b.a.a.a.l.d $r4;
        boolean $z0;
        b.a.a.a.e.m $r5;
        b.a.a.a.n $r6;
        int $i0, $i1;
        java.lang.String $r7;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.net.InetSocketAddress;

        $r3 := @parameter2: java.net.InetSocketAddress;

        $r4 := @parameter3: b.a.a.a.l.d;

        staticinvoke <b.a.a.a.o.a: java.lang.Object a(java.lang.Object,java.lang.String)>($r2, "Remote address");

        staticinvoke <b.a.a.a.o.a: java.lang.Object a(java.lang.Object,java.lang.String)>($r4, "HTTP parameters");

        $z0 = $r2 instanceof b.a.a.a.e.m;

        if $z0 == 0 goto label2;

        $r5 = (b.a.a.a.e.m) $r2;

        $r6 = $r5.<b.a.a.a.e.m: b.a.a.a.n a>;

     label1:
        $i0 = staticinvoke <b.a.a.a.l.c: int a(b.a.a.a.l.d)>($r4);

        $i1 = staticinvoke <b.a.a.a.l.c: int d(b.a.a.a.l.d)>($r4);

        virtualinvoke $r1.<java.net.Socket: void setSoTimeout(int)>($i0);

        $r1 = specialinvoke $r0.<b.a.a.a.e.d.g: java.net.Socket a(int,java.net.Socket,b.a.a.a.n,java.net.InetSocketAddress,java.net.InetSocketAddress)>($i1, $r1, $r6, $r2, $r3);

        return $r1;

     label2:
        $r6 = new b.a.a.a.n;

        $r7 = virtualinvoke $r2.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        $i0 = virtualinvoke $r2.<java.net.InetSocketAddress: int getPort()>();

        specialinvoke $r6.<b.a.a.a.n: void <init>(java.lang.String,int,java.lang.String)>($r7, $i0, "https");

        goto label1;
    }

    public final boolean a(java.net.Socket) throws java.lang.IllegalArgumentException
    {
        b.a.a.a.e.d.g $r0;
        java.net.Socket $r1;
        boolean $z0;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: java.net.Socket;

        staticinvoke <b.a.a.a.o.a: java.lang.Object a(java.lang.Object,java.lang.String)>($r1, "Socket");

        $z0 = $r1 instanceof javax.net.ssl.SSLSocket;

        staticinvoke <b.a.a.a.o.b: void a(boolean,java.lang.String)>($z0, "Socket not created by this factory");

        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isClosed()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        staticinvoke <b.a.a.a.o.b: void a(boolean,java.lang.String)>($z0, "Socket is closed");

        return 1;

     label2:
        $z0 = 0;

        goto label1;
    }

    public java.net.Socket b() throws java.io.IOException
    {
        b.a.a.a.e.d.g $r0;
        java.net.Socket $r1;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 = specialinvoke $r0.<b.a.a.a.e.d.g: java.net.Socket a()>();

        return $r1;
    }

    public final java.net.Socket b(java.net.Socket, java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        b.a.a.a.e.d.g $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = specialinvoke $r0.<b.a.a.a.e.d.g: java.net.Socket d(java.net.Socket,java.lang.String,int)>($r1, $r2, $i0);

        return $r1;
    }

    public final java.net.Socket c(java.net.Socket, java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        b.a.a.a.e.d.g $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;

        $r0 := @this: b.a.a.a.e.d.g;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r1 = specialinvoke $r0.<b.a.a.a.e.d.g: java.net.Socket d(java.net.Socket,java.lang.String,int)>($r1, $r2, $i0);

        return $r1;
    }
}
