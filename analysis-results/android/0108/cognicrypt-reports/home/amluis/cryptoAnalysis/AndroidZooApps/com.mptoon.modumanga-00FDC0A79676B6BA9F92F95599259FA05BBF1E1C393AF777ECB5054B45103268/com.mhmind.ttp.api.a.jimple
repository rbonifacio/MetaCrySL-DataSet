public final class com.mhmind.ttp.api.a extends java.lang.Object
{
    private static javax.net.ssl.HostnameVerifier a;

    static void <clinit>()
    {
        com.mhmind.ttp.api.b $r0;

        nop;

        $r0 = new com.mhmind.ttp.api.b;

        specialinvoke $r0.<com.mhmind.ttp.api.b: void <init>()>();

        <com.mhmind.ttp.api.a: javax.net.ssl.HostnameVerifier a> = $r0;

        return;
    }

    private static java.lang.String a(org.w3c.dom.Node)
    {
        org.w3c.dom.Node $r0;
        org.w3c.dom.NodeList $r1;
        int $i0, $i1;
        java.lang.String $r2, varReplacer10890;
        java.lang.StringBuilder $r3;
        short $s2;
        null_type varReplacer10891;

        nop;

        $r0 := @parameter0: org.w3c.dom.Node;

        if $r0 == null goto label7;

        $r1 = interfaceinvoke $r0.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        if $r1 == null goto label1;

        $i0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 0 goto label2;

     label1:
        varReplacer10890 = "";

        return varReplacer10890;

     label2:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 1 goto label3;

        $r0 = interfaceinvoke $r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        $r2 = interfaceinvoke $r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r2;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label4:
        $i1 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 < $i1 goto label5;

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label5:
        $r0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        $s2 = interfaceinvoke $r0.<org.w3c.dom.Node: short getNodeType()>();

        if $s2 != 3 goto label6;

        $r0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        $r2 = interfaceinvoke $r0.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label6:
        $i0 = $i0 + 1;

        goto label4;

     label7:
        varReplacer10891 = null;

        return varReplacer10891;
    }

    private static java.net.URLConnection a(java.net.URL)
    {
        java.net.URL $r0;
        java.security.SecureRandom $r1, r12;
        java.lang.String $r2, varReplacer10872, varReplacer10874;
        boolean $z0;
        java.lang.Object[] $r3;
        javax.net.ssl.SSLContext $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        java.net.URLConnection $r6;
        javax.net.ssl.HttpsURLConnection $r7;
        javax.net.ssl.HostnameVerifier $r8;
        java.lang.Exception $r9;
        java.lang.Throwable $r10;
        com.mhmind.ttp.api.c r11;
        javax.net.ssl.TrustManager[] r13;
        java.io.IOException r14;
        null_type varReplacer10871, varReplacer10873;

        nop;

        $r0 := @parameter0: java.net.URL;

     label01:
        $r2 = virtualinvoke $r0.<java.net.URL: java.lang.String getProtocol()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        varReplacer10872 = "https";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer10872);

     label02:
        if $z0 == 0 goto label16;

        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        r11 = new com.mhmind.ttp.api.c;

     label03:
        specialinvoke r11.<com.mhmind.ttp.api.c: void <init>()>();

     label04:
        $r3[0] = r11;

     label05:
        varReplacer10874 = "TLS";

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10874);

     label06:
        r12 = new java.security.SecureRandom;

        $r1 = r12;

     label07:
        specialinvoke r12.<java.security.SecureRandom: void <init>()>();

        r13 = (javax.net.ssl.TrustManager[]) $r3;

        varReplacer10873 = null;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10873, r13, $r1);

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r5);

     label08:
        $r6 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>();

     label09:
        $r7 = (javax.net.ssl.HttpsURLConnection) $r6;

        $r8 = <com.mhmind.ttp.api.a: javax.net.ssl.HostnameVerifier a>;

     label10:
        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r8);

     label11:
        return $r7;

     label12:
        $r9 := @caughtexception;

     label13:
        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

     label14:
        goto label08;

     label15:
        $r10 := @caughtexception;

        r14 = (java.io.IOException) $r10;

        virtualinvoke r14.<java.io.IOException: void printStackTrace()>();

        varReplacer10871 = null;

        return varReplacer10871;

     label16:
        $r6 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>();

     label17:
        return $r6;

        catch java.io.IOException from label01 to label02 with label15;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.lang.Exception from label05 to label06 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.io.IOException from label08 to label09 with label15;
        catch java.io.IOException from label10 to label11 with label15;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label16 to label17 with label15;
    }

    public static java.util.HashMap a(org.w3c.dom.NodeList)
    {
        org.w3c.dom.NodeList $r0;
        java.util.HashMap $r1;
        int $i0, $i1;
        org.w3c.dom.Node $r2, $r4;
        java.lang.String $r3, $r5;
        null_type varReplacer10870;

        nop;

        $r0 := @parameter0: org.w3c.dom.NodeList;

        if $r0 == null goto label1;

        $i0 = interfaceinvoke $r0.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 != 0 goto label2;

     label1:
        varReplacer10870 = null;

        return varReplacer10870;

     label2:
        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $i0 = 0;

     label3:
        $i1 = interfaceinvoke $r0.<org.w3c.dom.NodeList: int getLength()>();

        if $i0 < $i1 goto label4;

        return $r1;

     label4:
        $r2 = interfaceinvoke $r0.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>($i0);

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        if $r3 == null goto label5;

        $r4 = interfaceinvoke $r2.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r4 == null goto label5;

        $r3 = staticinvoke <com.mhmind.ttp.api.a: java.lang.String a(org.w3c.dom.Node)>($r2);

        if $r3 == null goto label5;

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r3);

     label5:
        $i0 = $i0 + 1;

        goto label3;
    }

    public static org.w3c.dom.Document a(java.lang.String)
    {
        java.lang.String $r0, varReplacer10862;
        java.net.URL $r1;
        java.net.URLConnection $r2;
        javax.xml.parsers.DocumentBuilderFactory $r3;
        javax.xml.parsers.DocumentBuilder $r4;
        java.io.InputStream $r5;
        org.w3c.dom.Document $r6;
        java.lang.Exception $r7;
        null_type varReplacer10861;
        int varReplacer10863;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer10862 = "TTP";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer10862, $r0);

     label2:
        $r1 = new java.net.URL;

     label3:
        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r2 = staticinvoke <com.mhmind.ttp.api.a: java.net.URLConnection a(java.net.URL)>($r1);

        varReplacer10863 = 10000;

        virtualinvoke $r2.<java.net.URLConnection: void setConnectTimeout(int)>(varReplacer10863);

        $r3 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r4 = virtualinvoke $r3.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r5 = virtualinvoke $r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        $r6 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>($r5);

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

        varReplacer10861 = null;

        return varReplacer10861;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
