Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer7177
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7177)
		Method: <kr.co.nexon.mdev.crypt.NXCrypto: byte[] encodeHmacSha256(java.lang.String,java.lang.String)>
		SHA-256: 38fea70017432508ab993f8b676343ce10d8eab8570ff6713901758b913a76c8
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <kr.co.nexon.mdev.crypt.NXCrypto: byte[] encodeHmacSha256(java.lang.String,java.lang.String)>
		SHA-256: f68ecfcdb788571023734c5868140c6a82d07e8d65c05058255f00838217fa4b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5462)
		Method: <com.tapjoy.internal.cl: byte[] a(byte[])>
		SHA-256: 8e954d1ed580929a7f930acd58c883ff8897a1a0dc1490e59ba41a005469791
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <kr.co.nexon.mdev.crypt.NXCrypto: byte[] cipherWithAES128(byte[],byte[],int)>
		SHA-256: 49f6fd139e7f1b82b79036eb2fbd593189a6dc88587ccaab5587a5fa15e89bed
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3263)
		Method: <kr.co.nexon.mdev.crypt.NXCrypto: byte[] cipherWithAES128(byte[],byte[],int)>
		SHA-256: 65f0142b3fbf9fc8d22107721665f704ffab5a2b1813ea81bc2d7d130cd563af
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7177)
		Method: <kr.co.nexon.mdev.crypt.NXCrypto: byte[] encodeHmacSha256(java.lang.String,java.lang.String)>
		SHA-256: 8e6ca26a1be8a9aef3f003a7a6d3ef4f564915371d88c5cac5ee5d020fd5cd46
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <kr.co.nexon.mdev.crypt.NXCrypto: byte[] cipherWithAES128(byte[],byte[],int)>
		SHA-256: ea1f5b722ee6c8580c9c86faab4800ab4ce61766c89dc84f409ac9f66e369bd
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3262)
		Method: <kr.co.nexon.mdev.crypt.NXCrypto: byte[] cipherWithAES128(byte[],byte[],int)>
		SHA-256: 6b2d2a76ca8c0c9316e225b29d84ce928fdf0a87ab3e3ecdca42525153328c06
		Secure: false
	Object:
		Variable: varReplacer3263
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3263)
		Method: <kr.co.nexon.mdev.crypt.NXCrypto: byte[] cipherWithAES128(byte[],byte[],int)>
		SHA-256: 55dc8d237069d85f46381d86523b43da7e0503d0f3fe6bb0228516dab100f682
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tapjoy.internal.cl: byte[] a(byte[])>
		SHA-256: d8bb959de9cf1220164b4cff279a11d803d96b544a0deef1b330157db08eb96b
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer7174)
		Method: <kr.co.nexon.mdev.crypt.NXCrypto: byte[] encodeHmacSha256(java.lang.String,java.lang.String)>
		SHA-256: 12620c4eae9c8de99553bf5154a911ebe6429b59344303700009552800229020
		Secure: true

Findings in Java Class: kr.co.nexon.mdev.crypt.NXCrypto

	 in Method: byte[] cipherWithAES128(byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3263)


	 in Method: byte[] encodeHmacSha256(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer7177)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
=====================================================================