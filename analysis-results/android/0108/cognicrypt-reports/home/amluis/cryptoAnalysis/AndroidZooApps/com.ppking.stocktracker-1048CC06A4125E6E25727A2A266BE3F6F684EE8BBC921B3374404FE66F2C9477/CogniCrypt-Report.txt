Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5252)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 4d765ca5a6af6fc4d2370a8bf5cd4bca9bcaf4c68c77c7ab628d3f95fa243612
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amazon.device.ads.DebugProperties: byte[] decrypt(byte[])>
		SHA-256: 5d248c3f8ef76900dc074a59dc38db9dbf99fde5e42aefc19f5fe31533017b9c
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6063)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: 603c7f3739ea33f227f576ad7e751539de5daa56b957f79e7711af67873a0ddb
		Secure: false
	Object:
		Variable: varReplacer5261
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer5261)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: b8a64f0171c1ebaebbc969f9e1ed00063bbb0b9ab94f12c4d03498fa6bd0da90
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: b6a2629ca3df05cde3339bac2578ee7359d8b1fc6f6e61cdb7655abdac5e5575
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: 65b0a9095458471d7c89eb229a61141a8a5dd0f47b3c706e999c54229c9f49a0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3842)
		Method: <com.facebook.appevents.AppEvent: java.lang.String md5Checksum(java.lang.String)>
		SHA-256: 4f5d52e523f47bc6d07bae0e3e960af6b752ceb7c960e154e6cde0beaed4e21f
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.websocket.WebSocketClient: java.lang.String createSecretValidation(java.lang.String)>
		SHA-256: f191942670e70bd598e20b2a2b1db2f2b994eff7ea77d3650c9d7cacf4ee1c3e
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: void <clinit>()>
		SHA-256: 81571f0f65b71822bd958d9fd94e85c4e0b32e123ab4c4b6ad790e4712eb88cf
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1423)
		Method: <com.google.android.gms.internal.gr: java.lang.String R(java.lang.String)>
		SHA-256: 3a17eafeb566c0964b6a7694cce24520b33dca683c56324856950ba09f6a7e3d
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.gr: java.lang.String R(java.lang.String)>
		SHA-256: 63a4e53ca392777d4bf78e3bbf211aad4ac40bf31a3770727d02663989cc2cd8
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5856)
		Method: <com.websocket.WebSocketClient: java.lang.String createSecretValidation(java.lang.String)>
		SHA-256: 1134117566880af8c41747b98e45566d7b0c295e495dbc9263a67f5efb34b8aa
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.ar: byte[] l(java.lang.String)>
		SHA-256: 65375f71f044cfa9b98cf47b69b3a1c5ed5f8b8182d135998bcc810863cb31a6
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6065)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: d33b22d36d06d52d5bbda673681a70a0e61f78b5971ff7b90fd41b6df5590eb2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5745)
		Method: <com.websocket.WebSocketClient: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()>
		SHA-256: 62ac6123abf638b3c73e3fcb9b521a48362321e53a65a317409b9560700ce33a
		Secure: false
	Object:
		Variable: varReplacer6063
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6063)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: 1a9cbf5a4275150aef7fb9a1fcb91ad67b38164dd682da1ff262ee6284edf4e2
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer830)
		Method: <com.amazon.device.ads.DebugProperties: byte[] decrypt(byte[])>
		SHA-256: 763816ea1b908b8ca8ff2c066b384a709cadde4bf86d30cb0c11d5d32319c00f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6098)
		Method: <com.google.android.gms.internal.gj: java.lang.String do()>
		SHA-256: 507362b242cec8f01e10ba3f923abf039d01e0972ee48073e147526588e43621
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7627)
		Method: <com.google.android.gms.internal.ao: java.security.MessageDigest ba()>
		SHA-256: 21aaf0ba70b630bc55d19f570a4bec6c6fee1160443bfcc400913488a2159e3c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6927)
		Method: <com.amazon.device.ads.StringUtils: java.lang.String sha1(java.lang.String)>
		SHA-256: 14c7a8139bb616e7e8f58440cdeca811d0f019f9d50e782889d9793d6a16589e
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.gj: java.lang.String do()>
		SHA-256: ba6b9354c80f32a0d965617831ddb10e27e1f0281984537062337de1e7eb2440
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: 348a206a763971a79027e4561c32db494c8071b53884c024cbacfa8ac98a9d5c
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: e8039a7883431fbff36702cdd2faabcb129dba4b0077b7631b87bea941101cc3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.appevents.AppEvent: java.lang.String md5Checksum(java.lang.String)>
		SHA-256: 6a3bc3e55ccec6bbe2c7ed3db7e93f8fc88d7e9668525a2e8523c3197bf2d93a
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amazon.device.ads.StringUtils: java.lang.String sha1(java.lang.String)>
		SHA-256: fa3549939eb6b28bd16d14faebb3d498b1dad42ca30607a3b71e7213819f02ca
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer5261)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 969a93b2d3710106dff905bf66a31fae7bba0628e783787ddd7d177e153b3aee
		Secure: false

Findings in Java Class: com.amazon.device.ads.DebugProperties

	 in Method: byte[] decrypt(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #763816ea1b908b8ca8ff2c066b384a709cadde4bf86d30cb0c11d5d32319c00f)
			First parameter (with value "RSA") should be any of {OAEPPadding, NoPadding, PKCS1Padding}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer830)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer825, $r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #763816ea1b908b8ca8ff2c066b384a709cadde4bf86d30cb0c11d5d32319c00f)
			First parameter (with value "RSA") should be any of {OAEPPadding, NoPadding, PKCS1Padding}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer830)


Findings in Java Class: com.google.android.gms.internal.o

	 in Method: byte[] c(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6063)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6064, $r10, $r3)


Findings in Java Class: com.websocket.WebSocketClient

	 in Method: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5746, $r2, varReplacer5746)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5746, $r2, varReplacer5746)


Findings in Java Class: com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters

	 in Method: java.lang.String calculateSignature(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer5261)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 26

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 7
=====================================================================