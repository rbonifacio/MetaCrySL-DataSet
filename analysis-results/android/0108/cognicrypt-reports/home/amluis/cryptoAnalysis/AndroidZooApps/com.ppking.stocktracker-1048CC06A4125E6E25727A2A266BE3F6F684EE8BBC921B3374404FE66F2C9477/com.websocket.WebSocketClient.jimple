public class com.websocket.WebSocketClient extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static javax.net.ssl.TrustManager[] sTrustManagers;
    private android.os.Handler mHandler;
    private android.os.HandlerThread mHandlerThread;
    private com.websocket.WebSocketClient$Listener mListener;
    private com.websocket.HybiParser mParser;
    private final java.lang.Object mSendLock;
    private java.net.Socket mSocket;
    private java.lang.Thread mThread;
    private java.net.URI mURI;

    public void <init>(java.net.URI, com.websocket.WebSocketClient$Listener)
    {
        com.websocket.WebSocketClient $r0;
        java.net.URI $r1;
        com.websocket.WebSocketClient$Listener $r2;
        android.os.Looper $r3;
        java.lang.Object $r4;
        com.websocket.HybiParser $r5;
        android.os.HandlerThread $r6;
        android.os.Handler $r7;
        java.lang.String varReplacer1759;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        $r1 := @parameter0: java.net.URI;

        $r2 := @parameter1: com.websocket.WebSocketClient$Listener;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        $r0.<com.websocket.WebSocketClient: java.lang.Object mSendLock> = $r4;

        $r0.<com.websocket.WebSocketClient: java.net.URI mURI> = $r1;

        $r0.<com.websocket.WebSocketClient: com.websocket.WebSocketClient$Listener mListener> = $r2;

        $r5 = new com.websocket.HybiParser;

        specialinvoke $r5.<com.websocket.HybiParser: void <init>(com.websocket.WebSocketClient)>($r0);

        $r0.<com.websocket.WebSocketClient: com.websocket.HybiParser mParser> = $r5;

        $r6 = new android.os.HandlerThread;

        varReplacer1759 = "websocket-thread";

        specialinvoke $r6.<android.os.HandlerThread: void <init>(java.lang.String)>(varReplacer1759);

        $r0.<com.websocket.WebSocketClient: android.os.HandlerThread mHandlerThread> = $r6;

        $r6 = $r0.<com.websocket.WebSocketClient: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r6.<android.os.HandlerThread: void start()>();

        $r7 = new android.os.Handler;

        $r6 = $r0.<com.websocket.WebSocketClient: android.os.HandlerThread mHandlerThread>;

        $r3 = virtualinvoke $r6.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r7.<android.os.Handler: void <init>(android.os.Looper)>($r3);

        $r0.<com.websocket.WebSocketClient: android.os.Handler mHandler> = $r7;

        return;
    }

    static java.lang.String access$0(com.websocket.WebSocketClient)
    {
        com.websocket.WebSocketClient $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        $r1 = specialinvoke $r0.<com.websocket.WebSocketClient: java.lang.String createSecret()>();

        return $r1;
    }

    static java.net.URI access$1(com.websocket.WebSocketClient)
    {
        com.websocket.WebSocketClient $r0;
        java.net.URI r1;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        r1 = $r0.<com.websocket.WebSocketClient: java.net.URI mURI>;

        return r1;
    }

    static java.lang.Object access$10(com.websocket.WebSocketClient)
    {
        com.websocket.WebSocketClient $r0;
        java.lang.Object r1;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        r1 = $r0.<com.websocket.WebSocketClient: java.lang.Object mSendLock>;

        return r1;
    }

    static javax.net.ssl.SSLSocketFactory access$2(com.websocket.WebSocketClient) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException
    {
        com.websocket.WebSocketClient $r0;
        javax.net.ssl.SSLSocketFactory $r1;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        $r1 = specialinvoke $r0.<com.websocket.WebSocketClient: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()>();

        return $r1;
    }

    static void access$3(com.websocket.WebSocketClient, java.net.Socket)
    {
        com.websocket.WebSocketClient $r0;
        java.net.Socket $r1;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        $r1 := @parameter1: java.net.Socket;

        $r0.<com.websocket.WebSocketClient: java.net.Socket mSocket> = $r1;

        return;
    }

    static java.net.Socket access$4(com.websocket.WebSocketClient)
    {
        com.websocket.WebSocketClient $r0;
        java.net.Socket r1;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        r1 = $r0.<com.websocket.WebSocketClient: java.net.Socket mSocket>;

        return r1;
    }

    static java.lang.String access$5(com.websocket.WebSocketClient, com.websocket.HybiParser$HappyDataInputStream) throws java.io.IOException
    {
        com.websocket.WebSocketClient $r0;
        com.websocket.HybiParser$HappyDataInputStream $r1;
        java.lang.String $r2;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        $r1 := @parameter1: com.websocket.HybiParser$HappyDataInputStream;

        $r2 = specialinvoke $r0.<com.websocket.WebSocketClient: java.lang.String readLine(com.websocket.HybiParser$HappyDataInputStream)>($r1);

        return $r2;
    }

    static int access$6(com.websocket.WebSocketClient, java.lang.String)
    {
        com.websocket.WebSocketClient $r0;
        java.lang.String $r1;
        int $i0;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        $r1 := @parameter1: java.lang.String;

        $i0 = specialinvoke $r0.<com.websocket.WebSocketClient: int parseStatusLine(java.lang.String)>($r1);

        return $i0;
    }

    static java.lang.String access$7(com.websocket.WebSocketClient, java.lang.String)
    {
        com.websocket.WebSocketClient $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        $r1 := @parameter1: java.lang.String;

        $r1 = specialinvoke $r0.<com.websocket.WebSocketClient: java.lang.String createSecretValidation(java.lang.String)>($r1);

        return $r1;
    }

    static com.websocket.WebSocketClient$Listener access$8(com.websocket.WebSocketClient)
    {
        com.websocket.WebSocketClient $r0;
        com.websocket.WebSocketClient$Listener r1;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        r1 = $r0.<com.websocket.WebSocketClient: com.websocket.WebSocketClient$Listener mListener>;

        return r1;
    }

    static com.websocket.HybiParser access$9(com.websocket.WebSocketClient)
    {
        com.websocket.WebSocketClient $r0;
        com.websocket.HybiParser r1;

        nop;

        $r0 := @parameter0: com.websocket.WebSocketClient;

        r1 = $r0.<com.websocket.WebSocketClient: com.websocket.HybiParser mParser>;

        return r1;
    }

    private java.lang.String createSecret()
    {
        com.websocket.WebSocketClient $r0;
        byte[] $r1;
        int $i0, $i1, varReplacer5744;
        java.lang.String $r2;
        double $d0;
        byte $b2;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        $r1 = newarray (byte)[16];

        $i0 = 0;

     label1:
        if $i0 < 16 goto label2;

        varReplacer5744 = 0;

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r1, varReplacer5744);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r2;

     label2:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 256.0;

        $i1 = (int) $d0;

        $b2 = (byte) $i1;

        $r1[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label1;
    }

    private java.lang.String createSecretValidation(java.lang.String)
    {
        com.websocket.WebSocketClient $r0;
        java.lang.String $r1, varReplacer5854, varReplacer5856;
        java.lang.Throwable $r2;
        java.security.MessageDigest $r3;
        java.lang.StringBuilder $r4;
        byte[] $r5;
        java.lang.RuntimeException $r6;
        int varReplacer5855;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        $r1 := @parameter0: java.lang.String;

     label1:
        varReplacer5856 = "SHA-1";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5856);

     label2:
        $r4 = new java.lang.StringBuilder;

     label3:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        varReplacer5854 = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5854);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r5);

        $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

        varReplacer5855 = 0;

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r5, varReplacer5855);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

     label4:
        return $r1;

     label5:
        $r2 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r6;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
    }

    private javax.net.ssl.SSLSocketFactory getSSLSocketFactory() throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException
    {
        com.websocket.WebSocketClient $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.TrustManager[] $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.lang.String varReplacer5745;
        null_type varReplacer5746, varReplacer5747;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        varReplacer5745 = "TLS";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5745);

        $r2 = <com.websocket.WebSocketClient: javax.net.ssl.TrustManager[] sTrustManagers>;

        varReplacer5746 = null;

        varReplacer5747 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5746, $r2, varReplacer5746);

        $r3 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        return $r3;
    }

    private int parseStatusLine(java.lang.String)
    {
        com.websocket.WebSocketClient $r0;
        java.lang.String $r1;
        boolean $z0;
        int $i0, varReplacer5748, varReplacer5749, varReplacer5750, varReplacer5751, varReplacer5752;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        varReplacer5750 = 0;

        return varReplacer5750;

     label1:
        varReplacer5749 = 32;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(varReplacer5749);

        $i0 = $i0 + 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        varReplacer5748 = 32;

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(varReplacer5748);

        if $i0 < 0 goto label2;

        varReplacer5751 = 0;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5751, $i0);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        return $i0;

     label2:
        varReplacer5752 = 0;

        return varReplacer5752;
    }

    private java.lang.String readLine(com.websocket.HybiParser$HappyDataInputStream) throws java.io.IOException
    {
        com.websocket.WebSocketClient $r0;
        com.websocket.HybiParser$HappyDataInputStream $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        java.lang.String $r3, varReplacer5743;
        char $c2;
        null_type varReplacer5741, varReplacer5742;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        $r1 := @parameter0: com.websocket.HybiParser$HappyDataInputStream;

        $i0 = virtualinvoke $r1.<com.websocket.HybiParser$HappyDataInputStream: int read()>();

        $i1 = $i0;

        if $i0 != -1 goto label1;

        varReplacer5742 = null;

        return varReplacer5742;

     label1:
        $r2 = new java.lang.StringBuilder;

        varReplacer5743 = "";

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5743);

     label2:
        if $i1 != 10 goto label3;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label3:
        if $i1 == 13 goto label4;

        $c2 = (char) $i1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label4:
        $i0 = virtualinvoke $r1.<com.websocket.HybiParser$HappyDataInputStream: int read()>();

        $i1 = $i0;

        if $i0 != -1 goto label2;

        varReplacer5741 = null;

        return varReplacer5741;
    }

    public static void setTrustManagers(javax.net.ssl.TrustManager[])
    {
        javax.net.ssl.TrustManager[] $r0;

        $r0 := @parameter0: javax.net.ssl.TrustManager[];

        <com.websocket.WebSocketClient: javax.net.ssl.TrustManager[] sTrustManagers> = $r0;

        return;
    }

    public void connect()
    {
        com.websocket.WebSocketClient $r0;
        com.websocket.WebSocketClient$1 $r1;
        boolean $z0;
        java.lang.Thread $r2;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        $r2 = $r0.<com.websocket.WebSocketClient: java.lang.Thread mThread>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.websocket.WebSocketClient: java.lang.Thread mThread>;

        $z0 = virtualinvoke $r2.<java.lang.Thread: boolean isAlive()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.Thread;

        $r1 = new com.websocket.WebSocketClient$1;

        specialinvoke $r1.<com.websocket.WebSocketClient$1: void <init>(com.websocket.WebSocketClient)>($r0);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        $r0.<com.websocket.WebSocketClient: java.lang.Thread mThread> = $r2;

        $r2 = $r0.<com.websocket.WebSocketClient: java.lang.Thread mThread>;

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    public void disconnect()
    {
        com.websocket.WebSocketClient $r0;
        com.websocket.WebSocketClient$2 $r1;
        java.net.Socket $r2;
        android.os.Handler $r3;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        $r2 = $r0.<com.websocket.WebSocketClient: java.net.Socket mSocket>;

        if $r2 == null goto label1;

        $r3 = $r0.<com.websocket.WebSocketClient: android.os.Handler mHandler>;

        $r1 = new com.websocket.WebSocketClient$2;

        specialinvoke $r1.<com.websocket.WebSocketClient$2: void <init>(com.websocket.WebSocketClient)>($r0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

     label1:
        return;
    }

    public com.websocket.WebSocketClient$Listener getListener()
    {
        com.websocket.WebSocketClient $r0;
        com.websocket.WebSocketClient$Listener r1;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        r1 = $r0.<com.websocket.WebSocketClient: com.websocket.WebSocketClient$Listener mListener>;

        return r1;
    }

    public void send(java.lang.String)
    {
        com.websocket.WebSocketClient $r0;
        java.lang.String $r1;
        byte[] $r2;
        com.websocket.HybiParser $r3;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.websocket.WebSocketClient: com.websocket.HybiParser mParser>;

        $r2 = virtualinvoke $r3.<com.websocket.HybiParser: byte[] frame(java.lang.String)>($r1);

        virtualinvoke $r0.<com.websocket.WebSocketClient: void sendFrame(byte[])>($r2);

        return;
    }

    public void send(byte[])
    {
        com.websocket.WebSocketClient $r0;
        byte[] $r1;
        com.websocket.HybiParser $r2;

        $r0 := @this: com.websocket.WebSocketClient;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<com.websocket.WebSocketClient: com.websocket.HybiParser mParser>;

        $r1 = virtualinvoke $r2.<com.websocket.HybiParser: byte[] frame(byte[])>($r1);

        virtualinvoke $r0.<com.websocket.WebSocketClient: void sendFrame(byte[])>($r1);

        return;
    }

    void sendFrame(byte[])
    {
        com.websocket.WebSocketClient $r0;
        byte[] $r1;
        android.os.Handler $r2;
        com.websocket.WebSocketClient$3 $r3;

        nop;

        $r0 := @this: com.websocket.WebSocketClient;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<com.websocket.WebSocketClient: android.os.Handler mHandler>;

        $r3 = new com.websocket.WebSocketClient$3;

        specialinvoke $r3.<com.websocket.WebSocketClient$3: void <init>(com.websocket.WebSocketClient,byte[])>($r0, $r1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }
}
