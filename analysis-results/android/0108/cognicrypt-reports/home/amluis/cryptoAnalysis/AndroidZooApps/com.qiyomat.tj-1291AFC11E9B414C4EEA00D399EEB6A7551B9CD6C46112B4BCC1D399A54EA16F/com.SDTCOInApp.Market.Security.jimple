public class com.SDTCOInApp.Market.Security extends java.lang.Object
{
    private static final java.lang.String KEY_FACTORY_ALGORITHM;
    private static final java.lang.String SIGNATURE_ALGORITHM;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.SDTCOInApp.Market.Security $r0;

        $r0 := @this: com.SDTCOInApp.Market.Security;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.PublicKey generatePublicKey(java.lang.String)
    {
        java.lang.String $r0, varReplacer3910, varReplacer3911, varReplacer3912, varReplacer3913, varReplacer3914;
        byte[] $r1;
        java.security.KeyFactory $r2;
        java.security.spec.X509EncodedKeySpec $r3;
        java.security.PublicKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r8;
        com.SDTCOInApp.Market.Base64DecoderException $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.SDTCOInApp.Market.Base64: byte[] decode(java.lang.String)>($r0);

        varReplacer3914 = "RSA";

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3914);

     label2:
        $r3 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer3912 = "IABUtil/Security";

        varReplacer3913 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3912, varReplacer3913);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label7:
        $r9 := @caughtexception;

        varReplacer3910 = "IABUtil/Security";

        varReplacer3911 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3910, varReplacer3911);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
        catch com.SDTCOInApp.Market.Base64DecoderException from label1 to label2 with label7;
        catch com.SDTCOInApp.Market.Base64DecoderException from label3 to label4 with label7;
    }

    public static boolean verify(java.security.PublicKey, java.lang.String, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, $r2, varReplacer3894, varReplacer3895, varReplacer3896, varReplacer3899, varReplacer3900, varReplacer3902, varReplacer3903, varReplacer3905, varReplacer3906, varReplacer3907, varReplacer3908;
        java.security.Signature $r3;
        byte[] $r4;
        boolean $z0;
        java.lang.Throwable $r5, $r6, $r7;
        com.SDTCOInApp.Market.Base64DecoderException $r8;
        int varReplacer3893, varReplacer3897, varReplacer3898, varReplacer3901, varReplacer3904, varReplacer3909;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        varReplacer3894 = "SHA1withRSA";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3894);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r4);

        $r4 = staticinvoke <com.SDTCOInApp.Market.Base64: byte[] decode(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4);

     label2:
        if $z0 != 0 goto label5;

     label3:
        varReplacer3907 = "IABUtil/Security";

        varReplacer3908 = "Signature verification failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3907, varReplacer3908);

     label4:
        varReplacer3901 = 0;

        return varReplacer3901;

     label5:
        varReplacer3893 = 1;

        return varReplacer3893;

     label6:
        $r5 := @caughtexception;

        varReplacer3905 = "IABUtil/Security";

        varReplacer3906 = "NoSuchAlgorithmException.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3905, varReplacer3906);

        varReplacer3909 = 0;

        return varReplacer3909;

     label7:
        $r6 := @caughtexception;

        varReplacer3902 = "IABUtil/Security";

        varReplacer3903 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3902, varReplacer3903);

        varReplacer3898 = 0;

        return varReplacer3898;

     label8:
        $r7 := @caughtexception;

        varReplacer3895 = "IABUtil/Security";

        varReplacer3896 = "Signature exception.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3895, varReplacer3896);

        varReplacer3897 = 0;

        return varReplacer3897;

     label9:
        $r8 := @caughtexception;

        varReplacer3899 = "IABUtil/Security";

        varReplacer3900 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3899, varReplacer3900);

        varReplacer3904 = 0;

        return varReplacer3904;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.SignatureException from label1 to label2 with label8;
        catch java.security.SignatureException from label3 to label4 with label8;
        catch com.SDTCOInApp.Market.Base64DecoderException from label1 to label2 with label9;
        catch com.SDTCOInApp.Market.Base64DecoderException from label3 to label4 with label9;
    }

    public static boolean verifyPurchase(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, varReplacer3890, varReplacer3891;
        boolean $z0;
        java.security.PublicKey $r3;
        int varReplacer3892;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label2;

     label1:
        varReplacer3890 = "IABUtil/Security";

        varReplacer3891 = "Purchase verification failed: missing data.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3890, varReplacer3891);

        varReplacer3892 = 0;

        return varReplacer3892;

     label2:
        $r3 = staticinvoke <com.SDTCOInApp.Market.Security: java.security.PublicKey generatePublicKey(java.lang.String)>($r0);

        $z0 = staticinvoke <com.SDTCOInApp.Market.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>($r3, $r1, $r2);

        return $z0;
    }
}
