public class com.reparatur_held_company.transfer.RestController extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static com.reparatur_held_company.transfer.RestController instance;
    private android.content.Context mContext;

    private void <init>()
    {
        com.reparatur_held_company.transfer.RestController $r0;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        return;
    }

    static java.lang.Object[] access$000(com.reparatur_held_company.transfer.RestController, com.reparatur_held_company.model.nodb.ExecutorSession) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        java.lang.Object[] $r2;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter1: com.reparatur_held_company.model.nodb.ExecutorSession;

        $r2 = specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: java.lang.Object[] apiCheckAndUpdateCurrentExecutor(com.reparatur_held_company.model.nodb.ExecutorSession)>($r1);

        return $r2;
    }

    static com.reparatur_held_company.model.db.ExecutorModel access$100(com.reparatur_held_company.transfer.RestController, com.reparatur_held_company.model.nodb.ExecutorSession, com.reparatur_held_company.model.db.RegistrationModel) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        com.reparatur_held_company.model.db.RegistrationModel $r2;
        com.reparatur_held_company.model.db.ExecutorModel $r3;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter1: com.reparatur_held_company.model.nodb.ExecutorSession;

        $r2 := @parameter2: com.reparatur_held_company.model.db.RegistrationModel;

        $r3 = specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.model.db.ExecutorModel apiUpdateProfile(com.reparatur_held_company.model.nodb.ExecutorSession,com.reparatur_held_company.model.db.RegistrationModel)>($r1, $r2);

        return $r3;
    }

    static java.util.List access$1000(com.reparatur_held_company.transfer.RestController) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        java.util.List $r1;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 = specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: java.util.List apiGetCategories()>();

        return $r1;
    }

    static android.content.Context access$200(com.reparatur_held_company.transfer.RestController)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        android.content.Context r1;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        r1 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        return r1;
    }

    static void access$300(com.reparatur_held_company.transfer.RestController, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        java.lang.String $r1, $r2, $r3;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: void apiLogin(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, $r3);

        return;
    }

    static void access$400(com.reparatur_held_company.transfer.RestController, com.reparatur_held_company.model.nodb.ExecutorSession) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter1: com.reparatur_held_company.model.nodb.ExecutorSession;

        specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: void apiLogout(com.reparatur_held_company.model.nodb.ExecutorSession)>($r1);

        return;
    }

    static java.util.List access$500(com.reparatur_held_company.transfer.RestController, com.reparatur_held_company.model.nodb.ExecutorSession, long, long, int) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        long $l0, $l1;
        int $i2;
        java.util.List $r2;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter1: com.reparatur_held_company.model.nodb.ExecutorSession;

        $l0 := @parameter2: long;

        $l1 := @parameter3: long;

        $i2 := @parameter4: int;

        $r2 = specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: java.util.List apiGetPotentialWork(com.reparatur_held_company.model.nodb.ExecutorSession,long,long,int)>($r1, $l0, $l1, $i2);

        return $r2;
    }

    static java.util.List access$600(com.reparatur_held_company.transfer.RestController, com.reparatur_held_company.model.nodb.ExecutorSession, long, long, int, int) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        long $l0, $l1;
        int $i2, $i3;
        java.util.List $r2;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter1: com.reparatur_held_company.model.nodb.ExecutorSession;

        $l0 := @parameter2: long;

        $l1 := @parameter3: long;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $r2 = specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: java.util.List apiGetAllWork(com.reparatur_held_company.model.nodb.ExecutorSession,long,long,int,int)>($r1, $l0, $l1, $i2, $i3);

        return $r2;
    }

    static com.reparatur_held_company.model.db.OfferModel access$700(com.reparatur_held_company.transfer.RestController, com.reparatur_held_company.model.nodb.ExecutorSession, com.reparatur_held_company.model.db.OfferModel) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        com.reparatur_held_company.model.db.OfferModel $r2;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter1: com.reparatur_held_company.model.nodb.ExecutorSession;

        $r2 := @parameter2: com.reparatur_held_company.model.db.OfferModel;

        $r2 = specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.model.db.OfferModel apiMakeOfferForAnOrder(com.reparatur_held_company.model.nodb.ExecutorSession,com.reparatur_held_company.model.db.OfferModel)>($r1, $r2);

        return $r2;
    }

    static java.util.Map access$800(com.reparatur_held_company.transfer.RestController, com.reparatur_held_company.model.nodb.ExecutorSession, boolean, java.lang.Integer[]) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        boolean $z0;
        java.lang.Integer[] $r2;
        java.util.Map $r3;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter1: com.reparatur_held_company.model.nodb.ExecutorSession;

        $z0 := @parameter2: boolean;

        $r2 := @parameter3: java.lang.Integer[];

        $r3 = specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: java.util.Map apiGetOrdersByIDs(com.reparatur_held_company.model.nodb.ExecutorSession,boolean,java.lang.Integer[])>($r1, $z0, $r2);

        return $r3;
    }

    static boolean access$900(com.reparatur_held_company.transfer.RestController, com.reparatur_held_company.model.nodb.ExecutorSession, java.util.Set) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        java.util.Set $r2;
        boolean $z0;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter1: com.reparatur_held_company.model.nodb.ExecutorSession;

        $r2 := @parameter2: java.util.Set;

        $z0 = specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: boolean apiUpdateOrdersForCurrentExecutor(com.reparatur_held_company.model.nodb.ExecutorSession,java.util.Set)>($r1, $r2);

        return $z0;
    }

    private java.lang.Object[] apiCheckAndUpdateCurrentExecutor(com.reparatur_held_company.model.nodb.ExecutorSession) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        android.content.Context $r2;
        com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper $r3;
        com.reparatur_held_company.storage.SQLiteDataHelper $r4;
        com.j256.ormlite.dao.RuntimeExceptionDao $r5;
        int $i0, $i1;
        java.lang.Integer $r6;
        java.lang.Object $r7;
        com.reparatur_held_company.model.db.ExecutorModel $r8;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r10;
        java.lang.String $r11, $r26;
        java.lang.Throwable $r12, $r23;
        okhttp3.HttpUrl $r13;
        okhttp3.HttpUrl$Builder $r14;
        okhttp3.Request$Builder $r15;
        okhttp3.Headers $r16;
        okhttp3.Request $r17;
        com.reparatur_held_company.transfer.HttpClientProvider $r18;
        okhttp3.OkHttpClient $r19;
        okhttp3.Call $r20;
        okhttp3.Response $r21;
        java.lang.Object[] $r22;
        okhttp3.ResponseBody $r24;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r25;
        boolean $z0;
        org.json.JSONObject $r27;
        com.reparatur_held_company.transfer.json.CheckExecutorVersionJsonResp $r28;
        java.lang.Boolean $r29;
        com.reparatur_held_company.transfer.json.GetExecutorJsonResp $r30;
        com.j256.ormlite.stmt.DeleteBuilder $r31;
        com.j256.ormlite.stmt.Where $r32;
        com.reparatur_held_company.model.db.ImageModel $r33;
        java.util.List $r34;
        java.util.Iterator $r35;
        java.util.Collection $r36;
        com.reparatur_held_company.model.db.PostalCodeModel $r37;
        com.reparatur_held_company.model.db.ExecutorCategoryModel $r38;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.nodb.ExecutorSession;

        $r2 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r3 = staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class)>($r2, class "Lcom/reparatur_held_company/storage/SQLiteDataHelper;");

        $r4 = (com.reparatur_held_company.storage.SQLiteDataHelper) $r3;

     label01:
        $r5 = virtualinvoke $r4.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorDAO()>();

        $i0 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r7 = virtualinvoke $r5.<com.j256.ormlite.dao.RuntimeExceptionDao: java.lang.Object queryForId(java.lang.Object)>($r6);

        $r8 = (com.reparatur_held_company.model.db.ExecutorModel) $r7;

     label02:
        if $r8 != null goto label05;

     label03:
        $r9 = new java.lang.Exception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such executor - ");

        $i0 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r11);

        throw $r9;

     label04:
        $r12 := @caughtexception;

        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        throw $r12;

     label05:
        entermonitor $r0;

     label06:
        $r13 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>("http://api.reparatur-held.de/api/v1/");

        $r14 = virtualinvoke $r13.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        $r14 = virtualinvoke $r14.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>("checkExecutorVersion");

        $i0 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r14 = virtualinvoke $r14.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("executor_id", $r11);

        $r13 = virtualinvoke $r14.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r15 = new okhttp3.Request$Builder;

        specialinvoke $r15.<okhttp3.Request$Builder: void <init>()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FkxFTkrkXm8Y8nr3nyrNPg");

        $r11 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r13, $r11);

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r13);

        $r16 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r16);

        $r11 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("sessionKey", $r11);

        $r17 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r18 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r19 = virtualinvoke $r18.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r20 = virtualinvoke $r19.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r17);

        $r21 = interfaceinvoke $r20.<okhttp3.Call: okhttp3.Response execute()>();

        $i0 = virtualinvoke $r21.<okhttp3.Response: int code()>();

        if $i0 < 200 goto label07;

        $i0 = virtualinvoke $r21.<okhttp3.Response: int code()>();

        if $i0 < 300 goto label10;

     label07:
        $r9 = new java.lang.Exception;

        $r22 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke $r21.<okhttp3.Response: int code()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r22[0] = $r6;

        $r11 = virtualinvoke $r21.<okhttp3.Response: java.lang.String message()>();

        $r22[1] = $r11;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d - %s", $r22);

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r11);

        throw $r9;

     label08:
        $r23 := @caughtexception;

        exitmonitor $r0;

     label09:
        throw $r23;

     label10:
        $r24 = virtualinvoke $r21.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r11 = virtualinvoke $r24.<okhttp3.ResponseBody: java.lang.String string()>();

        $r25 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r11);

        $z0 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label13;

        $i0 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        $r11 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: java.lang.String getResponseErrorByCode(int)>($i0);

        $r26 = $r11;

        $r9 = new java.lang.Exception;

        if $r11 == null goto label12;

     label11:
        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r26);

        throw $r9;

     label12:
        $r26 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        goto label11;

     label13:
        $r27 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONObject getJData()>();

        $r28 = staticinvoke <com.reparatur_held_company.transfer.json.CheckExecutorVersionJsonResp: com.reparatur_held_company.transfer.json.CheckExecutorVersionJsonResp fromJsonObject(org.json.JSONObject)>($r27);

        $i0 = virtualinvoke $r28.<com.reparatur_held_company.transfer.json.CheckExecutorVersionJsonResp: int getExecutorId()>();

        $i1 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        if $i0 == $i1 goto label14;

        $r9 = new java.lang.Exception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Servie returned bad answer. Executor ID=");

        $i0 = virtualinvoke $r28.<com.reparatur_held_company.transfer.json.CheckExecutorVersionJsonResp: int getExecutorId()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r11);

        throw $r9;

     label14:
        $i0 = virtualinvoke $r28.<com.reparatur_held_company.transfer.json.CheckExecutorVersionJsonResp: int getInstanceVersion()>();

        $i1 = virtualinvoke $r8.<com.reparatur_held_company.model.db.ExecutorModel: int getVersion()>();

        if $i0 != $i1 goto label16;

        $r22 = newarray (java.lang.Object)[2];

        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r22[0] = $r29;

        $r22[1] = $r8;

        exitmonitor $r0;

     label15:
        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        return $r22;

     label16:
        $r13 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>("http://api.reparatur-held.de/api/v1/");

        $r14 = virtualinvoke $r13.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        $r14 = virtualinvoke $r14.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>("executor");

        $i0 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r14 = virtualinvoke $r14.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("executor_id", $r11);

        $r13 = virtualinvoke $r14.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r15 = new okhttp3.Request$Builder;

        specialinvoke $r15.<okhttp3.Request$Builder: void <init>()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FkxFTkrkXm8Y8nr3nyrNPg");

        $r11 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r13, $r11);

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r13);

        $r16 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r16);

        $r11 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("sessionKey", $r11);

        $r17 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r18 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r19 = virtualinvoke $r18.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r20 = virtualinvoke $r19.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r17);

        $r21 = interfaceinvoke $r20.<okhttp3.Call: okhttp3.Response execute()>();

        $i0 = virtualinvoke $r21.<okhttp3.Response: int code()>();

        if $i0 < 200 goto label17;

        $i0 = virtualinvoke $r21.<okhttp3.Response: int code()>();

        if $i0 < 300 goto label18;

     label17:
        $r9 = new java.lang.Exception;

        $r22 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke $r21.<okhttp3.Response: int code()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r22[0] = $r6;

        $r11 = virtualinvoke $r21.<okhttp3.Response: java.lang.String message()>();

        $r22[1] = $r11;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d - %s", $r22);

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r11);

        throw $r9;

     label18:
        $r24 = virtualinvoke $r21.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r11 = virtualinvoke $r24.<okhttp3.ResponseBody: java.lang.String string()>();

        $r25 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r11);

        $z0 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label21;

        $i0 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        $r11 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: java.lang.String getResponseErrorByCode(int)>($i0);

        $r26 = $r11;

        $r9 = new java.lang.Exception;

        if $r11 == null goto label20;

     label19:
        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r26);

        throw $r9;

     label20:
        $r26 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        goto label19;

     label21:
        $r27 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONObject getJData()>();

        $r30 = staticinvoke <com.reparatur_held_company.transfer.json.GetExecutorJsonResp: com.reparatur_held_company.transfer.json.GetExecutorJsonResp fromJsonObject(org.json.JSONObject)>($r27);

        $r8 = virtualinvoke $r30.<com.reparatur_held_company.transfer.json.GetExecutorJsonResp: com.reparatur_held_company.model.db.ExecutorModel createExecutor()>();

        $r5 = virtualinvoke $r4.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getImageDAO()>();

        $r31 = virtualinvoke $r5.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.stmt.DeleteBuilder deleteBuilder()>();

        $r32 = virtualinvoke $r31.<com.j256.ormlite.stmt.DeleteBuilder: com.j256.ormlite.stmt.Where where()>();

        $i0 = virtualinvoke $r8.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r32.<com.j256.ormlite.stmt.Where: com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object)>("owner_executor", $r6);

        virtualinvoke $r31.<com.j256.ormlite.stmt.DeleteBuilder: int delete()>();

        $r5 = virtualinvoke $r4.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getPostocdeDAO()>();

        $r31 = virtualinvoke $r5.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.stmt.DeleteBuilder deleteBuilder()>();

        $r32 = virtualinvoke $r31.<com.j256.ormlite.stmt.DeleteBuilder: com.j256.ormlite.stmt.Where where()>();

        $i0 = virtualinvoke $r8.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r32.<com.j256.ormlite.stmt.Where: com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object)>("owner_executor", $r6);

        virtualinvoke $r31.<com.j256.ormlite.stmt.DeleteBuilder: int delete()>();

        $r5 = virtualinvoke $r4.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorCategoryDAO()>();

        $r31 = virtualinvoke $r5.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.stmt.DeleteBuilder deleteBuilder()>();

        $r32 = virtualinvoke $r31.<com.j256.ormlite.stmt.DeleteBuilder: com.j256.ormlite.stmt.Where where()>();

        $i0 = virtualinvoke $r8.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke $r32.<com.j256.ormlite.stmt.Where: com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object)>("executor", $r6);

        virtualinvoke $r31.<com.j256.ormlite.stmt.DeleteBuilder: int delete()>();

        $r33 = virtualinvoke $r8.<com.reparatur_held_company.model.db.ExecutorModel: com.reparatur_held_company.model.db.ImageModel getLogo()>();

        if $r33 == null goto label22;

        $r5 = virtualinvoke $r4.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getImageDAO()>();

        $r33 = virtualinvoke $r8.<com.reparatur_held_company.model.db.ExecutorModel: com.reparatur_held_company.model.db.ImageModel getLogo()>();

        virtualinvoke $r5.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object)>($r33);

     label22:
        $r34 = virtualinvoke $r8.<com.reparatur_held_company.model.db.ExecutorModel: java.util.List getCertificates()>();

        $r35 = interfaceinvoke $r34.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z0 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label24;

        $r7 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        $r33 = (com.reparatur_held_company.model.db.ImageModel) $r7;

        $r5 = virtualinvoke $r4.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getImageDAO()>();

        virtualinvoke $r5.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object)>($r33);

        goto label23;

     label24:
        $r36 = virtualinvoke $r8.<com.reparatur_held_company.model.db.ExecutorModel: java.util.Collection getPostalCodes()>();

        $r35 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();

     label25:
        $z0 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label26;

        $r7 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        $r37 = (com.reparatur_held_company.model.db.PostalCodeModel) $r7;

        $r5 = virtualinvoke $r4.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getPostocdeDAO()>();

        virtualinvoke $r5.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r37);

        goto label25;

     label26:
        $r36 = virtualinvoke $r8.<com.reparatur_held_company.model.db.ExecutorModel: java.util.Collection getCategories()>();

        $r35 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();

     label27:
        $z0 = interfaceinvoke $r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label28;

        $r7 = interfaceinvoke $r35.<java.util.Iterator: java.lang.Object next()>();

        $r38 = (com.reparatur_held_company.model.db.ExecutorCategoryModel) $r7;

        $r5 = virtualinvoke $r4.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorCategoryDAO()>();

        virtualinvoke $r5.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r38);

        goto label27;

     label28:
        $r5 = virtualinvoke $r4.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorDAO()>();

        virtualinvoke $r5.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object)>($r8);

        $r22 = newarray (java.lang.Object)[2];

        $r29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r22[0] = $r29;

        $r22[1] = $r8;

        exitmonitor $r0;

     label29:
        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        return $r22;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label03 to label04 with label04;
        catch java.lang.Throwable from label05 to label06 with label04;
        catch java.lang.Throwable from label06 to label09 with label08;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label10 to label15 with label08;
        catch java.lang.Throwable from label16 to label29 with label08;
    }

    private java.util.List apiGetAllWork(com.reparatur_held_company.model.nodb.ExecutorSession, long, long, int, int) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1, $r5;
        long $l0, $l1;
        int $i2, $i3, $i4;
        java.util.ArrayList $r2;
        okhttp3.HttpUrl $r3;
        okhttp3.HttpUrl$Builder $r4, $r7;
        java.lang.String $r6, $r21;
        byte $b5;
        okhttp3.Request$Builder $r8;
        okhttp3.Headers $r9;
        okhttp3.Request $r10;
        com.reparatur_held_company.transfer.HttpClientProvider $r11;
        okhttp3.OkHttpClient $r12;
        okhttp3.Call $r13;
        okhttp3.Response $r14;
        java.lang.Exception $r15;
        java.lang.Object[] $r16;
        java.lang.Integer $r17;
        java.lang.Throwable $r18;
        okhttp3.ResponseBody $r19;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r20;
        boolean $z0;
        com.reparatur_held_company.transfer.exceptions.ReparaturSubscriptionExpiredException $r22;
        org.json.JSONArray $r23;
        org.json.JSONObject $r24;
        com.reparatur_held_company.model.nodb.PotentialWorkModel $r25;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.nodb.ExecutorSession;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        entermonitor $r0;

     label01:
        $r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>("http://api.reparatur-held.de/api/v1/");

        $r4 = virtualinvoke $r3.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        $r4 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>("userOrder");

        $r5 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        $i4 = virtualinvoke $r5.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        $r4 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("executor_id", $r6);

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r4 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("tStart", $r6);

        $b5 = $l1 cmp 0L;

        if $b5 <= 0 goto label02;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r7 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("tEnd", $r6);

        virtualinvoke $r7.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

     label02:
        if $i2 <= 0 goto label03;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("limit", $r6);

     label03:
        if $i3 <= 0 goto label04;

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("offset", $r6);

     label04:
        $r3 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r8 = new okhttp3.Request$Builder;

        specialinvoke $r8.<okhttp3.Request$Builder: void <init>()>();

        $r3 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r3, "FkxFTkrkXm8Y8nr3nyrNPg");

        $r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r3);

        $r9 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r9);

        $r6 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("sessionKey", $r6);

        $r10 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r11 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r12 = virtualinvoke $r11.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r13 = virtualinvoke $r12.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r10);

        $r14 = interfaceinvoke $r13.<okhttp3.Call: okhttp3.Response execute()>();

        $i2 = virtualinvoke $r14.<okhttp3.Response: int code()>();

        if $i2 < 200 goto label05;

        $i2 = virtualinvoke $r14.<okhttp3.Response: int code()>();

        if $i2 < 300 goto label08;

     label05:
        $r15 = new java.lang.Exception;

        $r16 = newarray (java.lang.Object)[2];

        $i2 = virtualinvoke $r14.<okhttp3.Response: int code()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r16[0] = $r17;

        $r6 = virtualinvoke $r14.<okhttp3.Response: java.lang.String message()>();

        $r16[1] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d - %s", $r16);

        specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>($r6);

        throw $r15;

     label06:
        $r18 := @caughtexception;

        exitmonitor $r0;

     label07:
        throw $r18;

     label08:
        $r19 = virtualinvoke $r14.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r6 = virtualinvoke $r19.<okhttp3.ResponseBody: java.lang.String string()>();

        $r20 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r6);

        $z0 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label13;

        $i2 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        $r6 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: java.lang.String getResponseErrorByCode(int)>($i2);

        $r21 = $r6;

        $i2 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        lookupswitch($i2)
        {
            case 10: goto label11;
            default: goto label09;
        };

     label09:
        $r15 = new java.lang.Exception;

        if $r6 == null goto label12;

     label10:
        specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>($r21);

        throw $r15;

     label11:
        $r22 = new com.reparatur_held_company.transfer.exceptions.ReparaturSubscriptionExpiredException;

        $r6 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        specialinvoke $r22.<com.reparatur_held_company.transfer.exceptions.ReparaturSubscriptionExpiredException: void <init>(java.lang.String)>($r6);

        throw $r22;

     label12:
        $r21 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        goto label10;

     label13:
        $r23 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONArray getJDataArray()>();

        exitmonitor $r0;

     label14:
        $i2 = virtualinvoke $r23.<org.json.JSONArray: int length()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i2);

        $i3 = 0;

     label15:
        if $i3 >= $i2 goto label16;

        $r24 = virtualinvoke $r23.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i3);

        $r25 = staticinvoke <com.reparatur_held_company.model.nodb.PotentialWorkModel: com.reparatur_held_company.model.nodb.PotentialWorkModel fromServerJson(org.json.JSONObject)>($r24);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r25);

        $i3 = $i3 + 1;

        goto label15;

     label16:
        return $r2;

        catch java.lang.Throwable from label01 to label07 with label06;
        catch java.lang.Throwable from label08 to label14 with label06;
    }

    private java.util.List apiGetCategories() throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        java.util.ArrayList $r1;
        okhttp3.HttpUrl $r2;
        okhttp3.HttpUrl$Builder $r3;
        okhttp3.Request$Builder $r4;
        okhttp3.Headers $r5;
        okhttp3.Request $r6;
        com.reparatur_held_company.transfer.HttpClientProvider $r7;
        okhttp3.OkHttpClient $r8;
        okhttp3.Call $r9;
        okhttp3.Response $r10;
        int $i0, $i1;
        java.lang.Exception $r11;
        java.lang.Object[] $r12;
        java.lang.Integer $r13;
        java.lang.String $r14, $r18, varReplacer2250, varReplacer2251, varReplacer2252, varReplacer2253;
        java.lang.Throwable $r15;
        okhttp3.ResponseBody $r16;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r17;
        boolean $z0;
        org.json.JSONArray $r19;
        org.json.JSONObject $r20;
        com.reparatur_held_company.model.db.CategoryModel $r21;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        entermonitor $r0;

     label01:
        varReplacer2250 = "http://api.reparatur-held.de/api/v1/";

        $r2 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>(varReplacer2250);

        $r3 = virtualinvoke $r2.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        varReplacer2253 = "getCategories";

        $r3 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>(varReplacer2253);

        $r2 = virtualinvoke $r3.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r4 = new okhttp3.Request$Builder;

        specialinvoke $r4.<okhttp3.Request$Builder: void <init>()>();

        varReplacer2251 = "FkxFTkrkXm8Y8nr3nyrNPg";

        $r2 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r2, varReplacer2251);

        $r4 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r2);

        $r5 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r4 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r5);

        $r6 = virtualinvoke $r4.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r7 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r8 = virtualinvoke $r7.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r9 = virtualinvoke $r8.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r6);

        $r10 = interfaceinvoke $r9.<okhttp3.Call: okhttp3.Response execute()>();

        $i0 = virtualinvoke $r10.<okhttp3.Response: int code()>();

        if $i0 < 200 goto label02;

        $i0 = virtualinvoke $r10.<okhttp3.Response: int code()>();

        if $i0 < 300 goto label05;

     label02:
        $r11 = new java.lang.Exception;

        $r12 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke $r10.<okhttp3.Response: int code()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12[0] = $r13;

        $r14 = virtualinvoke $r10.<okhttp3.Response: java.lang.String message()>();

        $r12[1] = $r14;

        varReplacer2252 = "Server returned error: code - %d, message - %s";

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer2252, $r12);

        specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>($r14);

        throw $r11;

     label03:
        $r15 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r15;

     label05:
        $r16 = virtualinvoke $r10.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r14 = virtualinvoke $r16.<okhttp3.ResponseBody: java.lang.String string()>();

        $r17 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r14);

        $z0 = virtualinvoke $r17.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label08;

        $i0 = virtualinvoke $r17.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw0()>();

        $r14 = null;

        $r18 = null;

        $r11 = new java.lang.Exception;

        goto label07;

     label06:
        specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>($r18);

        throw $r11;

     label07:
        $r18 = virtualinvoke $r17.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        goto label06;

     label08:
        $r19 = virtualinvoke $r17.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONArray getJDataArray()>();

        $r1 = new java.util.ArrayList;

        $i0 = virtualinvoke $r19.<org.json.JSONArray: int length()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        $i0 = 0;

     label09:
        $i1 = virtualinvoke $r19.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label10;

        $r20 = virtualinvoke $r19.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        $r21 = staticinvoke <com.reparatur_held_company.model.db.CategoryModel: com.reparatur_held_company.model.db.CategoryModel fromServerJson(org.json.JSONObject)>($r20);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r21);

        $i0 = $i0 + 1;

        goto label09;

     label10:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        exitmonitor $r0;

     label11:
        return $r1;

        catch java.lang.Throwable from label01 to label04 with label03;
        catch java.lang.Throwable from label05 to label11 with label03;
    }

    private java.util.Map apiGetOrdersByIDs(com.reparatur_held_company.model.nodb.ExecutorSession, boolean, java.lang.Integer[]) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        boolean $z0, $z1;
        java.lang.Integer[] $r2;
        org.json.JSONArray $r3;
        java.util.ArrayList $r4, $r5;
        long $l0, $l4;
        int $i1, $i2, $i3;
        java.lang.Integer $r6;
        okhttp3.HttpUrl $r7;
        okhttp3.HttpUrl$Builder $r8;
        java.lang.String $r9, $r23, varReplacer1422, varReplacer1423, varReplacer1424, varReplacer1425, varReplacer1426, varReplacer1427, varReplacer1428, varReplacer1429, varReplacer1430, varReplacer1431, varReplacer1432, varReplacer1433, varReplacer1434;
        okhttp3.Request$Builder $r10;
        java.lang.StringBuilder $r11;
        okhttp3.Headers $r12;
        okhttp3.Request $r13;
        com.reparatur_held_company.transfer.HttpClientProvider $r14;
        okhttp3.OkHttpClient $r15;
        okhttp3.Call $r16;
        okhttp3.Response $r17;
        java.lang.Exception $r18;
        java.lang.Object[] $r19;
        java.lang.Throwable $r20, $r33;
        okhttp3.ResponseBody $r21;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r22;
        org.json.JSONObject $r24;
        com.reparatur_held_company.model.db.OrderModel $r25;
        java.util.HashMap $r26;
        android.content.Context $r27;
        com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper $r28;
        com.reparatur_held_company.storage.SQLiteDataHelper $r29;
        java.util.Iterator $r30;
        java.lang.Object $r31;
        com.reparatur_held_company.model.nodb.OrderStage $r32;
        byte $b5;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.nodb.ExecutorSession;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.Integer[];

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        entermonitor $r0;

     label01:
        $r3 = new org.json.JSONArray;

        specialinvoke $r3.<org.json.JSONArray: void <init>()>();

        $i1 = lengthof $r2;

        $i2 = 0;

     label02:
        if $i2 >= $i1 goto label03;

        $r6 = $r2[$i2];

        $i3 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        virtualinvoke $r3.<org.json.JSONArray: org.json.JSONArray put(int)>($i3);

        $i2 = $i2 + 1;

        goto label02;

     label03:
        varReplacer1425 = "http://api.reparatur-held.de/api/v1/";

        $r7 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>(varReplacer1425);

        $r8 = virtualinvoke $r7.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        varReplacer1424 = "executorGetOrders";

        $r8 = virtualinvoke $r8.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>(varReplacer1424);

        $i1 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        varReplacer1426 = "executor_id";

        $r8 = virtualinvoke $r8.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer1426, $r9);

        $r7 = virtualinvoke $r8.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r10 = new okhttp3.Request$Builder;

        specialinvoke $r10.<okhttp3.Request$Builder: void <init>()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer1428 = "FkxFTkrkXm8Y8nr3nyrNPg";

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1428);

        $r9 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r7, $r9);

        $r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r7);

        $r12 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r12);

        $r9 = virtualinvoke $r3.<org.json.JSONArray: java.lang.String toString()>();

        varReplacer1434 = "orderIds";

        $r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>(varReplacer1434, $r9);

        $r9 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        varReplacer1422 = "sessionKey";

        $r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>(varReplacer1422, $r9);

        $r13 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r14 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r15 = virtualinvoke $r14.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r16 = virtualinvoke $r15.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r13);

        $r17 = interfaceinvoke $r16.<okhttp3.Call: okhttp3.Response execute()>();

        $i1 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        if $i1 < 200 goto label04;

        $i1 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        if $i1 < 300 goto label08;

     label04:
        $r18 = new java.lang.Exception;

        $r19 = newarray (java.lang.Object)[2];

        $i1 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r19[0] = $r6;

        $r9 = virtualinvoke $r17.<okhttp3.Response: java.lang.String message()>();

        $r19[1] = $r9;

        varReplacer1427 = "%d - %s";

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer1427, $r19);

        specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>($r9);

        throw $r18;

     label05:
        $r20 := @caughtexception;

     label06:
        exitmonitor $r0;

     label07:
        throw $r20;

     label08:
        $r21 = virtualinvoke $r17.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r9 = virtualinvoke $r21.<okhttp3.ResponseBody: java.lang.String string()>();

        $r22 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r9);

        $z1 = virtualinvoke $r22.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z1 != 0 goto label11;

        $i1 = virtualinvoke $r22.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw0()>();

        $r9 = null;

        $r23 = null;

        $r18 = new java.lang.Exception;

        goto label10;

     label09:
        specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>($r23);

        throw $r18;

     label10:
        $r23 = virtualinvoke $r22.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        goto label09;

     label11:
        $r3 = virtualinvoke $r22.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONArray getJDataArray()>();

        $i1 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

     label12:
        $i2 = 0;

     label13:
        if $i2 >= $i1 goto label15;

     label14:
        $r3 = virtualinvoke $r22.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONArray getJDataArray()>();

        $r24 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i2);

        $r25 = staticinvoke <com.reparatur_held_company.model.db.OrderModel: com.reparatur_held_company.model.db.OrderModel fromServerJson(org.json.JSONObject)>($r24);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r25);

        $i2 = $i2 + 1;

        goto label13;

     label15:
        if $z0 == 0 goto label17;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        $r26 = new java.util.HashMap;

        specialinvoke $r26.<java.util.HashMap: void <init>()>();

        $r2 = newarray (java.lang.Integer)[0];

        varReplacer1429 = "ids_changed";

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1429, $r2);

        varReplacer1433 = "orders";

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1433, $r4);

        exitmonitor $r0;

     label16:
        return $r26;

     label17:
        exitmonitor $r0;

     label18:
        $r5 = new java.util.ArrayList;

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>($i1);

        $r27 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r28 = staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class)>($r27, class "Lcom/reparatur_held_company/storage/SQLiteDataHelper;");

        $r29 = (com.reparatur_held_company.storage.SQLiteDataHelper) $r28;

     label19:
        $r30 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

     label21:
        if $z0 == 0 goto label27;

     label22:
        $r31 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        $r25 = (com.reparatur_held_company.model.db.OrderModel) $r31;

        $z0 = virtualinvoke $r29.<com.reparatur_held_company.storage.SQLiteDataHelper: boolean updateOrder(com.reparatur_held_company.model.db.OrderModel)>($r25);

     label23:
        if $z0 == 0 goto label20;

     label24:
        $r19 = newarray (java.lang.Object)[2];

        $i1 = virtualinvoke $r25.<com.reparatur_held_company.model.db.OrderModel: int getId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r19[0] = $r6;

        $r32 = virtualinvoke $r25.<com.reparatur_held_company.model.db.OrderModel: com.reparatur_held_company.model.nodb.OrderStage getStage()>();

        $r19[1] = $r32;

        varReplacer1430 = "Order %d was updated. New stage = %s";

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer1430, $r19);

        varReplacer1431 = "RestController";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1431, $r9);

        $i1 = virtualinvoke $r25.<com.reparatur_held_company.model.db.OrderModel: int getId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

     label25:
        goto label20;

     label26:
        $r33 := @caughtexception;

        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        throw $r33;

     label27:
        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l4 - $l0;

        $b5 = $l0 cmp 600L;

        if $b5 >= 0 goto label28;

        $l0 = 600L - $l0;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

     label28:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        $r26 = new java.util.HashMap;

        specialinvoke $r26.<java.util.HashMap: void <init>()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r2 = newarray (java.lang.Integer)[$i1];

        $r19 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r2);

        varReplacer1432 = "ids_changed";

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1432, $r19);

        varReplacer1423 = "orders";

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1423, $r4);

        return $r26;

     label29:
        $r20 := @caughtexception;

        goto label06;

        catch java.lang.Throwable from label01 to label07 with label05;
        catch java.lang.Throwable from label08 to label12 with label05;
        catch java.lang.Throwable from label14 to label16 with label29;
        catch java.lang.Throwable from label17 to label18 with label29;
        catch java.lang.Throwable from label19 to label21 with label26;
        catch java.lang.Throwable from label22 to label23 with label26;
        catch java.lang.Throwable from label24 to label25 with label26;
    }

    private java.util.List apiGetPotentialWork(com.reparatur_held_company.model.nodb.ExecutorSession, long, long, int) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        long $l0, $l1, varReplacer1795;
        int $i2, $i3;
        java.util.ArrayList $r2;
        okhttp3.HttpUrl $r3;
        okhttp3.HttpUrl$Builder $r4, $r6;
        java.lang.String $r5, $r21, varReplacer1789, varReplacer1790, varReplacer1791, varReplacer1792, varReplacer1793, varReplacer1794, varReplacer1796, varReplacer1797, varReplacer1798;
        byte $b4;
        okhttp3.Request$Builder $r7;
        java.lang.StringBuilder $r8;
        okhttp3.Headers $r9;
        okhttp3.Request $r10;
        com.reparatur_held_company.transfer.HttpClientProvider $r11;
        okhttp3.OkHttpClient $r12;
        okhttp3.Call $r13;
        okhttp3.Response $r14;
        java.lang.Exception $r15;
        java.lang.Object[] $r16;
        java.lang.Integer $r17;
        java.lang.Throwable $r18;
        okhttp3.ResponseBody $r19;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r20;
        boolean $z0;
        com.reparatur_held_company.transfer.exceptions.ReparaturSubscriptionExpiredException $r22;
        org.json.JSONArray $r23;
        org.json.JSONObject $r24;
        com.reparatur_held_company.model.nodb.PotentialWorkModel $r25;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.nodb.ExecutorSession;

        $l0 := @parameter1: long;

        $l1 := @parameter2: long;

        $i2 := @parameter3: int;

        entermonitor $r0;

     label01:
        varReplacer1792 = "http://api.reparatur-held.de/api/v1/";

        $r3 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>(varReplacer1792);

        $r4 = virtualinvoke $r3.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        varReplacer1791 = "executorOrder";

        $r4 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>(varReplacer1791);

        $i3 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        varReplacer1793 = "executor_id";

        $r4 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer1793, $r5);

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        varReplacer1796 = "tStart";

        $r4 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer1796, $r5);

        $b4 = $l1 cmp 0L;

        if $b4 <= 0 goto label02;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        varReplacer1789 = "tEnd";

        $r6 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer1789, $r5);

        virtualinvoke $r6.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

     label02:
        if $i2 <= 0 goto label03;

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        varReplacer1790 = "limit";

        virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer1790, $r5);

     label03:
        $r3 = virtualinvoke $r4.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r7 = new okhttp3.Request$Builder;

        specialinvoke $r7.<okhttp3.Request$Builder: void <init>()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer1798 = "FkxFTkrkXm8Y8nr3nyrNPg";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1798);

        $r5 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r3, $r5);

        $r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r3);

        $r9 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r9);

        $r5 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        varReplacer1794 = "sessionKey";

        $r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>(varReplacer1794, $r5);

        $r10 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r11 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r12 = virtualinvoke $r11.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r13 = virtualinvoke $r12.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r10);

        $r14 = interfaceinvoke $r13.<okhttp3.Call: okhttp3.Response execute()>();

        $i2 = virtualinvoke $r14.<okhttp3.Response: int code()>();

        if $i2 < 200 goto label04;

        $i2 = virtualinvoke $r14.<okhttp3.Response: int code()>();

        if $i2 < 300 goto label07;

     label04:
        $r15 = new java.lang.Exception;

        $r16 = newarray (java.lang.Object)[2];

        $i2 = virtualinvoke $r14.<okhttp3.Response: int code()>();

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r16[0] = $r17;

        $r5 = virtualinvoke $r14.<okhttp3.Response: java.lang.String message()>();

        $r16[1] = $r5;

        varReplacer1797 = "%d - %s";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer1797, $r16);

        specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw $r15;

     label05:
        $r18 := @caughtexception;

        exitmonitor $r0;

     label06:
        throw $r18;

     label07:
        $r19 = virtualinvoke $r14.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r5 = virtualinvoke $r19.<okhttp3.ResponseBody: java.lang.String string()>();

        $r20 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r5);

        $z0 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label12;

        $i2 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw0()>();

        $r5 = null;

        $r21 = null;

        $i2 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        lookupswitch($i2)
        {
            case 10: goto label10;
            default: goto label08;
        };

     label08:
        $r15 = new java.lang.Exception;

        goto label11;

     label09:
        specialinvoke $r15.<java.lang.Exception: void <init>(java.lang.String)>($r21);

        throw $r15;

     label10:
        $r22 = new com.reparatur_held_company.transfer.exceptions.ReparaturSubscriptionExpiredException;

        $r5 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        specialinvoke $r22.<com.reparatur_held_company.transfer.exceptions.ReparaturSubscriptionExpiredException: void <init>(java.lang.String)>($r5);

        throw $r22;

     label11:
        $r21 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        goto label09;

     label12:
        $r23 = virtualinvoke $r20.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONArray getJDataArray()>();

        exitmonitor $r0;

     label13:
        $i2 = virtualinvoke $r23.<org.json.JSONArray: int length()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>(int)>($i2);

        $i3 = 0;

     label14:
        if $i3 >= $i2 goto label15;

        $r24 = virtualinvoke $r23.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i3);

        $r25 = staticinvoke <com.reparatur_held_company.model.nodb.PotentialWorkModel: com.reparatur_held_company.model.nodb.PotentialWorkModel fromServerJson(org.json.JSONObject)>($r24);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r25);

        $i3 = $i3 + 1;

        goto label14;

     label15:
        if $i2 <= 1 goto label16;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r2);

     label16:
        varReplacer1795 = 800L;

        staticinvoke <java.lang.Thread: void sleep(long)>(varReplacer1795);

        return $r2;

        catch java.lang.Throwable from label01 to label06 with label05;
        catch java.lang.Throwable from label07 to label13 with label05;
    }

    private java.util.Map apiGetWorkAmount(com.reparatur_held_company.model.nodb.ExecutorSession) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        java.util.HashMap $r2;
        java.lang.Exception $r3;
        okhttp3.HttpUrl $r4;
        okhttp3.HttpUrl$Builder $r5;
        int $i0, $i1;
        java.lang.String $r6, $r20;
        okhttp3.Request$Builder $r7;
        java.lang.StringBuilder $r8;
        okhttp3.Headers $r9;
        okhttp3.Request $r10;
        com.reparatur_held_company.transfer.HttpClientProvider $r11;
        okhttp3.OkHttpClient $r12;
        okhttp3.Call $r13;
        okhttp3.Response $r14;
        java.lang.Object[] $r15;
        java.lang.Integer $r16;
        java.lang.Throwable $r17;
        okhttp3.ResponseBody $r18;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r19;
        boolean $z0;
        org.json.JSONArray $r21;
        org.json.JSONObject $r22;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.nodb.ExecutorSession;

        if $r1 != null goto label01;

        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>("A valid session must be provided");

        throw $r3;

     label01:
        entermonitor $r0;

     label02:
        $r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>("http://api.reparatur-held.de/api/v1/");

        $r5 = virtualinvoke $r4.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        $r5 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>("executorWorkAmount");

        $i0 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("executor_id", $r6);

        $r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r7 = new okhttp3.Request$Builder;

        specialinvoke $r7.<okhttp3.Request$Builder: void <init>()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FkxFTkrkXm8Y8nr3nyrNPg");

        $r6 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r4, $r6);

        $r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4);

        $r9 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r9);

        $r6 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r7 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("sessionKey", $r6);

        $r10 = virtualinvoke $r7.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r11 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r12 = virtualinvoke $r11.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r13 = virtualinvoke $r12.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r10);

        $r14 = interfaceinvoke $r13.<okhttp3.Call: okhttp3.Response execute()>();

        $i0 = virtualinvoke $r14.<okhttp3.Response: int code()>();

        if $i0 < 200 goto label03;

        $i0 = virtualinvoke $r14.<okhttp3.Response: int code()>();

        if $i0 < 300 goto label06;

     label03:
        $r3 = new java.lang.Exception;

        $r15 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke $r14.<okhttp3.Response: int code()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r15[0] = $r16;

        $r6 = virtualinvoke $r14.<okhttp3.Response: java.lang.String message()>();

        $r15[1] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d - %s", $r15);

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r6);

        throw $r3;

     label04:
        $r17 := @caughtexception;

        exitmonitor $r0;

     label05:
        throw $r17;

     label06:
        $r18 = virtualinvoke $r14.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r6 = virtualinvoke $r18.<okhttp3.ResponseBody: java.lang.String string()>();

        $r19 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r6);

        $z0 = virtualinvoke $r19.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label09;

        $i0 = virtualinvoke $r19.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        $r6 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: java.lang.String getResponseErrorByCode(int)>($i0);

        $r20 = $r6;

        $r3 = new java.lang.Exception;

        if $r6 == null goto label08;

     label07:
        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r20);

        throw $r3;

     label08:
        $r20 = virtualinvoke $r19.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        goto label07;

     label09:
        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        $i0 = 0;

     label10:
        $r21 = virtualinvoke $r19.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONArray getJDataArray()>();

        $i1 = virtualinvoke $r21.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label11;

        $r21 = virtualinvoke $r19.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONArray getJDataArray()>();

        $r22 = virtualinvoke $r21.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i0);

        $r6 = virtualinvoke $r22.<org.json.JSONObject: java.lang.String getString(java.lang.String)>("postal_code");

        $i1 = virtualinvoke $r22.<org.json.JSONObject: int getInt(java.lang.String)>("quantity");

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r16);

        $i0 = $i0 + 1;

        goto label10;

     label11:
        exitmonitor $r0;

     label12:
        return $r2;

        catch java.lang.Throwable from label02 to label05 with label04;
        catch java.lang.Throwable from label06 to label12 with label04;
    }

    private void apiLogin(java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        java.lang.String $r1, $r2, $r3, varReplacer3905, varReplacer3907, varReplacer3908, varReplacer3909, varReplacer3910, varReplacer3912, varReplacer3914, varReplacer3915, varReplacer3916, varReplacer3917, varReplacer3918, varReplacer3919;
        org.json.JSONObject $r4;
        android.content.Context $r5;
        boolean $z0;
        com.reparatur_held_company.transfer.RestCustomException $r6;
        okhttp3.HttpUrl $r7;
        okhttp3.HttpUrl$Builder $r8;
        com.reparatur_held_company.transfer.HmacMD5 $r9;
        byte[] $r10;
        okhttp3.Request$Builder $r11;
        okhttp3.Headers $r12;
        okhttp3.Request $r13;
        com.reparatur_held_company.transfer.HttpClientProvider $r14;
        okhttp3.OkHttpClient $r15;
        okhttp3.Call $r16;
        okhttp3.Response $r17;
        int $i0, varReplacer3904, varReplacer3906, varReplacer3911, varReplacer3913;
        okhttp3.ResponseBody $r18;
        java.lang.Throwable $r19, $r36;
        org.json.JSONException $r20;
        java.lang.Exception $r21;
        java.lang.Object[] $r22;
        java.lang.Integer $r23;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r24;
        java.lang.StringBuilder $r25;
        com.reparatur_held_company.model.db.ExecutorModel $r26;
        com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper $r27;
        com.reparatur_held_company.storage.SQLiteDataHelper $r28;
        com.j256.ormlite.dao.RuntimeExceptionDao $r29;
        com.j256.ormlite.stmt.DeleteBuilder $r30;
        com.j256.ormlite.stmt.Where $r31;
        com.reparatur_held_company.model.db.ImageModel $r32;
        java.util.List $r33;
        java.util.Iterator $r34;
        java.lang.Object $r35;
        java.util.Collection $r37;
        com.reparatur_held_company.model.db.PostalCodeModel $r38;
        com.reparatur_held_company.model.db.ExecutorCategoryModel $r39;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r5 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $z0 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: boolean isAvailableInternetConnection(android.content.Context)>($r5);

        if $z0 != 0 goto label01;

        $r6 = new com.reparatur_held_company.transfer.RestCustomException;

        $r5 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        varReplacer3913 = 2131099743;

        $r1 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int)>(varReplacer3913);

        specialinvoke $r6.<com.reparatur_held_company.transfer.RestCustomException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label01:
        entermonitor $r0;

     label02:
        varReplacer3917 = "http://api.reparatur-held.de/api/v1/";

        $r7 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>(varReplacer3917);

        $r8 = virtualinvoke $r7.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        varReplacer3907 = "executorLogin";

        $r8 = virtualinvoke $r8.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>(varReplacer3907);

        varReplacer3905 = "email";

        virtualinvoke $r8.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer3905, $r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label03;

        varReplacer3915 = "gcm_token_android";

        virtualinvoke $r8.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer3915, $r3);

     label03:
        $r9 = new com.reparatur_held_company.transfer.HmacMD5;

        $r1 = "FkxFTkrkXm8Y8nr3nyrNPg";

        $r10 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        specialinvoke $r9.<com.reparatur_held_company.transfer.HmacMD5: void <init>(byte[])>($r10);

        $r10 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r9 = virtualinvoke $r9.<com.reparatur_held_company.transfer.HmacMD5: com.reparatur_held_company.transfer.HmacMD5 setMessage(byte[])>($r10);

        $r9 = virtualinvoke $r9.<com.reparatur_held_company.transfer.HmacMD5: com.reparatur_held_company.transfer.HmacMD5 applySHA1ToMessage()>();

        $r10 = virtualinvoke $r9.<com.reparatur_held_company.transfer.HmacMD5: byte[] createAuthKey()>();

        $r1 = staticinvoke <com.reparatur_held_company.transfer.HmacMD5: java.lang.String hmacBytesToString(byte[])>($r10);

        varReplacer3918 = "authKey";

        virtualinvoke $r8.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer3918, $r1);

        $r11 = new okhttp3.Request$Builder;

        specialinvoke $r11.<okhttp3.Request$Builder: void <init>()>();

        $r7 = virtualinvoke $r8.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r7);

        $r12 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r12);

        $r13 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r14 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r15 = virtualinvoke $r14.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r16 = virtualinvoke $r15.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r13);

        $r17 = interfaceinvoke $r16.<okhttp3.Call: okhttp3.Response execute()>();

        $i0 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        if $i0 < 200 goto label04;

        if $i0 < 300 goto label20;

     label04:
        $i0 = $i0 / 100;

        if $i0 != 4 goto label19;

        $r18 = virtualinvoke $r17.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r1 = virtualinvoke $r18.<okhttp3.ResponseBody: java.lang.String string()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

     label05:
        if $z0 != 0 goto label09;

     label06:
        $r4 = new org.json.JSONObject;

     label07:
        specialinvoke $r4.<org.json.JSONObject: void <init>(java.lang.String)>($r1);

        varReplacer3912 = "error_code";

        $i0 = virtualinvoke $r4.<org.json.JSONObject: int optInt(java.lang.String)>(varReplacer3912);

     label08:
        lookupswitch($i0)
        {
            case 1: goto label12;
            case 2: goto label09;
            case 3: goto label09;
            case 4: goto label16;
            default: goto label09;
        };

     label09:
        $r6 = new com.reparatur_held_company.transfer.RestCustomException;

        $r5 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        varReplacer3906 = 2131099737;

        $r1 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int)>(varReplacer3906);

        specialinvoke $r6.<com.reparatur_held_company.transfer.RestCustomException: void <init>(java.lang.String)>($r1);

        throw $r6;

     label10:
        $r19 := @caughtexception;

        exitmonitor $r0;

     label11:
        throw $r19;

     label12:
        $r6 = new com.reparatur_held_company.transfer.RestCustomException;

        $r5 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

     label13:
        varReplacer3904 = 2131099746;

        $r1 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int)>(varReplacer3904);

        specialinvoke $r6.<com.reparatur_held_company.transfer.RestCustomException: void <init>(java.lang.String)>($r1);

     label14:
        throw $r6;

     label15:
        $r20 := @caughtexception;

        goto label09;

     label16:
        $r6 = new com.reparatur_held_company.transfer.RestCustomException;

        $r5 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

     label17:
        varReplacer3911 = 2131099752;

        $r1 = virtualinvoke $r5.<android.content.Context: java.lang.String getString(int)>(varReplacer3911);

        specialinvoke $r6.<com.reparatur_held_company.transfer.RestCustomException: void <init>(java.lang.String)>($r1);

     label18:
        throw $r6;

     label19:
        $r21 = new java.lang.Exception;

        $r22 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r22[0] = $r23;

        $r1 = virtualinvoke $r17.<okhttp3.Response: java.lang.String message()>();

        $r22[1] = $r1;

        varReplacer3914 = "%d - %s";

        $r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer3914, $r22);

        specialinvoke $r21.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r21;

     label20:
        $r18 = virtualinvoke $r17.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r1 = virtualinvoke $r18.<okhttp3.ResponseBody: java.lang.String string()>();

        $r24 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r1);

        $z0 = virtualinvoke $r24.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label21;

        $r21 = new java.lang.Exception;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        varReplacer3916 = "Server returned error - ";

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3916);

        $r1 = virtualinvoke $r24.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        $r25 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.Exception: void <init>(java.lang.String)>($r1);

        throw $r21;

     label21:
        $r4 = virtualinvoke $r24.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONObject getJData()>();

        $r26 = staticinvoke <com.reparatur_held_company.model.db.ExecutorModel: com.reparatur_held_company.model.db.ExecutorModel fromServerJson(org.json.JSONObject)>($r4);

        $r4 = virtualinvoke $r24.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONObject getJData()>();

        varReplacer3919 = "session_key";

        $r1 = virtualinvoke $r4.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer3919);

        $i0 = virtualinvoke $r26.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: void login(int,java.lang.String)>($i0, $r1);

        $r5 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r27 = staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class)>($r5, class "Lcom/reparatur_held_company/storage/SQLiteDataHelper;");

        $r28 = (com.reparatur_held_company.storage.SQLiteDataHelper) $r27;

     label22:
        $r29 = virtualinvoke $r28.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getImageDAO()>();

        $r30 = virtualinvoke $r29.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.stmt.DeleteBuilder deleteBuilder()>();

        $r31 = virtualinvoke $r30.<com.j256.ormlite.stmt.DeleteBuilder: com.j256.ormlite.stmt.Where where()>();

        $i0 = virtualinvoke $r26.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        varReplacer3910 = "owner_executor";

        virtualinvoke $r31.<com.j256.ormlite.stmt.Where: com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object)>(varReplacer3910, $r23);

        virtualinvoke $r30.<com.j256.ormlite.stmt.DeleteBuilder: int delete()>();

        $r29 = virtualinvoke $r28.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getPostocdeDAO()>();

        $r30 = virtualinvoke $r29.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.stmt.DeleteBuilder deleteBuilder()>();

        $r31 = virtualinvoke $r30.<com.j256.ormlite.stmt.DeleteBuilder: com.j256.ormlite.stmt.Where where()>();

        $i0 = virtualinvoke $r26.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        varReplacer3909 = "owner_executor";

        virtualinvoke $r31.<com.j256.ormlite.stmt.Where: com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object)>(varReplacer3909, $r23);

        virtualinvoke $r30.<com.j256.ormlite.stmt.DeleteBuilder: int delete()>();

        $r29 = virtualinvoke $r28.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorCategoryDAO()>();

        $r30 = virtualinvoke $r29.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.stmt.DeleteBuilder deleteBuilder()>();

        $r31 = virtualinvoke $r30.<com.j256.ormlite.stmt.DeleteBuilder: com.j256.ormlite.stmt.Where where()>();

        $i0 = virtualinvoke $r26.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        varReplacer3908 = "executor";

        virtualinvoke $r31.<com.j256.ormlite.stmt.Where: com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object)>(varReplacer3908, $r23);

        virtualinvoke $r30.<com.j256.ormlite.stmt.DeleteBuilder: int delete()>();

        $r32 = virtualinvoke $r26.<com.reparatur_held_company.model.db.ExecutorModel: com.reparatur_held_company.model.db.ImageModel getLogo()>();

        if $r32 == null goto label23;

        $r29 = virtualinvoke $r28.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getImageDAO()>();

        $r32 = virtualinvoke $r26.<com.reparatur_held_company.model.db.ExecutorModel: com.reparatur_held_company.model.db.ImageModel getLogo()>();

        virtualinvoke $r29.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r32);

     label23:
        $r33 = virtualinvoke $r26.<com.reparatur_held_company.model.db.ExecutorModel: java.util.List getCertificates()>();

        $r34 = interfaceinvoke $r33.<java.util.List: java.util.Iterator iterator()>();

     label24:
        $z0 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label28;

        $r35 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        $r32 = (com.reparatur_held_company.model.db.ImageModel) $r35;

        $r29 = virtualinvoke $r28.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getImageDAO()>();

        virtualinvoke $r29.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r32);

     label25:
        goto label24;

     label26:
        $r36 := @caughtexception;

     label27:
        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        throw $r36;

     label28:
        $r37 = virtualinvoke $r26.<com.reparatur_held_company.model.db.ExecutorModel: java.util.Collection getPostalCodes()>();

        $r34 = interfaceinvoke $r37.<java.util.Collection: java.util.Iterator iterator()>();

     label29:
        $z0 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label30;

        $r35 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        $r38 = (com.reparatur_held_company.model.db.PostalCodeModel) $r35;

        $r29 = virtualinvoke $r28.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getPostocdeDAO()>();

        virtualinvoke $r29.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r38);

        goto label29;

     label30:
        $r37 = virtualinvoke $r26.<com.reparatur_held_company.model.db.ExecutorModel: java.util.Collection getCategories()>();

        $r34 = interfaceinvoke $r37.<java.util.Collection: java.util.Iterator iterator()>();

     label31:
        $z0 = interfaceinvoke $r34.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label32;

        $r35 = interfaceinvoke $r34.<java.util.Iterator: java.lang.Object next()>();

        $r39 = (com.reparatur_held_company.model.db.ExecutorCategoryModel) $r35;

        $r29 = virtualinvoke $r28.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorCategoryDAO()>();

        virtualinvoke $r29.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r39);

        goto label31;

     label32:
        $r29 = virtualinvoke $r28.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorDAO()>();

        virtualinvoke $r29.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object)>($r26);

     label33:
        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        exitmonitor $r0;

     label34:
        return;

        catch java.lang.Throwable from label02 to label05 with label10;
        catch org.json.JSONException from label07 to label08 with label15;
        catch java.lang.Throwable from label06 to label08 with label10;
        catch java.lang.Throwable from label09 to label11 with label10;
        catch org.json.JSONException from label13 to label14 with label15;
        catch org.json.JSONException from label17 to label18 with label15;
        catch java.lang.Throwable from label12 to label19 with label10;
        catch java.lang.Throwable from label19 to label22 with label10;
        catch java.lang.Throwable from label22 to label25 with label26;
        catch java.lang.Throwable from label27 to label28 with label10;
        catch java.lang.Throwable from label28 to label33 with label26;
        catch java.lang.Throwable from label33 to label34 with label10;
    }

    private void apiLogout(com.reparatur_held_company.model.nodb.ExecutorSession) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        org.json.JSONObject $r2;
        java.lang.Exception $r3;
        android.content.Context $r4;
        com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper $r5;
        com.reparatur_held_company.storage.SQLiteDataHelper $r6;
        com.reparatur_held_company.gcm.GcmCredentials $r7;
        okhttp3.HttpUrl $r8;
        okhttp3.HttpUrl$Builder $r9;
        java.lang.String $r10, varReplacer2274, varReplacer2275, varReplacer2276, varReplacer2277, varReplacer2278, varReplacer2279, varReplacer2280, varReplacer2281, varReplacer2282, varReplacer2283;
        okhttp3.Request$Builder $r11;
        java.lang.StringBuilder $r12;
        okhttp3.Headers $r13;
        okhttp3.Request $r14;
        com.reparatur_held_company.transfer.HttpClientProvider $r15;
        okhttp3.OkHttpClient $r16;
        okhttp3.Call $r17;
        okhttp3.Response $r18;
        int $i0;
        java.lang.Object[] $r19;
        java.lang.Integer $r20;
        java.lang.Throwable $r21, $r22;
        okhttp3.ResponseBody $r23;
        boolean $z0;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.nodb.ExecutorSession;

        if $r1 != null goto label01;

        $r3 = new java.lang.Exception;

        varReplacer2283 = "A valid session must be provided";

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer2283);

        throw $r3;

     label01:
        $r4 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r5 = staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class)>($r4, class "Lcom/reparatur_held_company/storage/SQLiteDataHelper;");

        $r6 = (com.reparatur_held_company.storage.SQLiteDataHelper) $r5;

     label02:
        entermonitor $r0;

     label03:
        $r4 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r7 = staticinvoke <com.reparatur_held_company.gcm.GcmCredentials: com.reparatur_held_company.gcm.GcmCredentials fromPreferences(android.content.Context)>($r4);

        varReplacer2280 = "http://api.reparatur-held.de/api/v1/";

        $r8 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>(varReplacer2280);

        $r9 = virtualinvoke $r8.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        varReplacer2274 = "executorLogout";

        $r9 = virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>(varReplacer2274);

        if $r7 == null goto label04;

        $r10 = virtualinvoke $r7.<com.reparatur_held_company.gcm.GcmCredentials: java.lang.String getToken()>();

        varReplacer2277 = "gcm_token_android";

        virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer2277, $r10);

     label04:
        $r11 = new okhttp3.Request$Builder;

        specialinvoke $r11.<okhttp3.Request$Builder: void <init>()>();

        $r8 = virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer2278 = "FkxFTkrkXm8Y8nr3nyrNPg";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2278);

        $r10 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r8, $r10);

        $r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r8);

        $r13 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r13);

        $r10 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        varReplacer2279 = "sessionKey";

        $r11 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>(varReplacer2279, $r10);

        $r14 = virtualinvoke $r11.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r15 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r16 = virtualinvoke $r15.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r17 = virtualinvoke $r16.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r14);

        $r18 = interfaceinvoke $r17.<okhttp3.Call: okhttp3.Response execute()>();

        $i0 = virtualinvoke $r18.<okhttp3.Response: int code()>();

        if $i0 < 200 goto label05;

        $i0 = virtualinvoke $r18.<okhttp3.Response: int code()>();

        if $i0 < 300 goto label09;

     label05:
        $r3 = new java.lang.Exception;

        $r19 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke $r18.<okhttp3.Response: int code()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r19[0] = $r20;

        $r10 = virtualinvoke $r18.<okhttp3.Response: java.lang.String message()>();

        $r19[1] = $r10;

        varReplacer2282 = "%d - %s";

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer2282, $r19);

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r10);

        throw $r3;

     label06:
        $r21 := @caughtexception;

        exitmonitor $r0;

     label07:
        throw $r21;

     label08:
        $r22 := @caughtexception;

        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        throw $r22;

     label09:
        $r23 = virtualinvoke $r18.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r10 = virtualinvoke $r23.<okhttp3.ResponseBody: java.lang.String string()>();

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>(java.lang.String)>($r10);

        varReplacer2275 = "success";

        $z0 = virtualinvoke $r2.<org.json.JSONObject: boolean getBoolean(java.lang.String)>(varReplacer2275);

        if $z0 != 0 goto label10;

        $r3 = new java.lang.Exception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        varReplacer2281 = "Server returned error - ";

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2281);

        varReplacer2276 = "error_message";

        $r10 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String optString(java.lang.String)>(varReplacer2276);

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r10);

        throw $r3;

     label10:
        exitmonitor $r0;

     label11:
        virtualinvoke $r6.<com.reparatur_held_company.storage.SQLiteDataHelper: void eraseWholeDatabase()>();

        staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: void logout()>();

     label12:
        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        return;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label07 with label06;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.lang.Throwable from label09 to label11 with label06;
        catch java.lang.Throwable from label11 to label12 with label08;
    }

    private com.reparatur_held_company.model.db.OfferModel apiMakeOfferForAnOrder(com.reparatur_held_company.model.nodb.ExecutorSession, com.reparatur_held_company.model.db.OfferModel) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        com.reparatur_held_company.model.db.OfferModel $r2;
        java.lang.Exception $r3;
        okhttp3.HttpUrl $r4;
        okhttp3.HttpUrl$Builder $r5;
        int $i0, $i1;
        java.lang.String $r6, $r23;
        com.reparatur_held_company.model.db.OrderModel $r7;
        okhttp3.Request$Builder $r8;
        java.lang.StringBuilder $r9;
        okhttp3.MediaType $r10;
        okhttp3.RequestBody $r11;
        okhttp3.Headers $r12;
        okhttp3.Request $r13;
        com.reparatur_held_company.transfer.HttpClientProvider $r14;
        okhttp3.OkHttpClient $r15;
        okhttp3.Call $r16;
        okhttp3.Response $r17;
        java.lang.Object[] $r18;
        java.lang.Integer $r19;
        java.lang.Throwable $r20;
        okhttp3.ResponseBody $r21;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r22;
        boolean $z0;
        org.json.JSONObject $r24;
        com.reparatur_held_company.transfer.json.MakeOfferJsonResp $r25;
        java.lang.Integer[] $r26;
        java.util.Date $r27;
        long $l2;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.nodb.ExecutorSession;

        $r2 := @parameter1: com.reparatur_held_company.model.db.OfferModel;

        entermonitor $r0;

     label01:
        $r4 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>("http://api.reparatur-held.de/api/v1/");

        $r5 = virtualinvoke $r4.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        $r5 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>("executorOffer");

        $i0 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("executor_id", $r6);

        $r7 = virtualinvoke $r2.<com.reparatur_held_company.model.db.OfferModel: com.reparatur_held_company.model.db.OrderModel getOwnerOrder()>();

        $i0 = virtualinvoke $r7.<com.reparatur_held_company.model.db.OrderModel: int getId()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>("order_id", $r6);

        $r4 = virtualinvoke $r5.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r8 = new okhttp3.Request$Builder;

        specialinvoke $r8.<okhttp3.Request$Builder: void <init>()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FkxFTkrkXm8Y8nr3nyrNPg");

        $r6 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r4, $r6);

        $r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r4);

        $r10 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.MediaType MEDIA_TYPE_POST>;

        $r6 = staticinvoke <com.reparatur_held_company.transfer.json.JsonHelper: java.lang.String createMakeOfferBody(com.reparatur_held_company.model.db.OfferModel)>($r2);

        $r11 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>($r10, $r6);

        $r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r11);

        $r12 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r12);

        $r6 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r8 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>("sessionKey", $r6);

        $r13 = virtualinvoke $r8.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r14 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r15 = virtualinvoke $r14.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r16 = virtualinvoke $r15.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r13);

        $r17 = interfaceinvoke $r16.<okhttp3.Call: okhttp3.Response execute()>();

        $i0 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        if $i0 < 200 goto label02;

        $i0 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        if $i0 < 300 goto label05;

     label02:
        $r3 = new java.lang.Exception;

        $r18 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r18[0] = $r19;

        $r6 = virtualinvoke $r17.<okhttp3.Response: java.lang.String message()>();

        $r18[1] = $r6;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d - %s", $r18);

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r6);

        throw $r3;

     label03:
        $r20 := @caughtexception;

        exitmonitor $r0;

     label04:
        throw $r20;

     label05:
        $r21 = virtualinvoke $r17.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r6 = virtualinvoke $r21.<okhttp3.ResponseBody: java.lang.String string()>();

        $r22 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r6);

        $z0 = virtualinvoke $r22.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label08;

        $i0 = virtualinvoke $r22.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        $r6 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: java.lang.String getResponseErrorByCode(int)>($i0);

        $r23 = $r6;

        $r3 = new java.lang.Exception;

        if $r6 == null goto label07;

     label06:
        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r23);

        throw $r3;

     label07:
        $r23 = virtualinvoke $r22.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        goto label06;

     label08:
        $r24 = virtualinvoke $r22.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONObject getJData()>();

        $r7 = virtualinvoke $r2.<com.reparatur_held_company.model.db.OfferModel: com.reparatur_held_company.model.db.OrderModel getOwnerOrder()>();

        $i0 = virtualinvoke $r7.<com.reparatur_held_company.model.db.OrderModel: int getId()>();

        $r25 = staticinvoke <com.reparatur_held_company.transfer.json.MakeOfferJsonResp: com.reparatur_held_company.transfer.json.MakeOfferJsonResp fromJsonObject(org.json.JSONObject,int)>($r24, $i0);

        $r7 = virtualinvoke $r2.<com.reparatur_held_company.model.db.OfferModel: com.reparatur_held_company.model.db.OrderModel getOwnerOrder()>();

        $i0 = virtualinvoke $r7.<com.reparatur_held_company.model.db.OrderModel: int getId()>();

        $i1 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.MakeOfferJsonResp: int getOrderId()>();

        if $i0 != $i1 goto label09;

        $i0 = virtualinvoke $r2.<com.reparatur_held_company.model.db.OfferModel: int getExecutorId()>();

        $i1 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        if $i0 == $i1 goto label10;

     label09:
        $r3 = new java.lang.Exception;

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>("ID set returned by the backend has wrong valies");

        throw $r3;

     label10:
        $r26 = newarray (java.lang.Integer)[1];

        $i0 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.MakeOfferJsonResp: int getOrderId()>();

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r26[0] = $r19;

        specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: java.util.Map apiGetOrdersByIDs(com.reparatur_held_company.model.nodb.ExecutorSession,boolean,java.lang.Integer[])>($r1, 0, $r26);

     label11:
        $i0 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.MakeOfferJsonResp: int getOfferId()>();

        virtualinvoke $r2.<com.reparatur_held_company.model.db.OfferModel: void setId(int)>($i0);

        $r27 = virtualinvoke $r25.<com.reparatur_held_company.transfer.json.MakeOfferJsonResp: java.util.Date getTimeCreation()>();

        $l2 = virtualinvoke $r27.<java.util.Date: long getTime()>();

        virtualinvoke $r2.<com.reparatur_held_company.model.db.OfferModel: void setCreationTimestamp(long)>($l2);

        exitmonitor $r0;

     label12:
        return $r2;

     label13:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label14:
        goto label11;

        catch java.lang.Throwable from label01 to label04 with label03;
        catch java.lang.Throwable from label05 to label10 with label03;
        catch java.lang.Exception from label10 to label11 with label13;
        catch java.lang.Throwable from label10 to label11 with label03;
        catch java.lang.Throwable from label11 to label12 with label03;
        catch java.lang.Throwable from label13 to label14 with label03;
    }

    private boolean apiUpdateOrdersForCurrentExecutor(com.reparatur_held_company.model.nodb.ExecutorSession, java.util.Set) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        java.util.Set $r2;
        org.json.JSONArray $r3;
        java.lang.Integer $r4;
        java.util.HashSet $r5, $r7;
        java.util.ArrayList $r6;
        long $l0, $l3;
        java.util.Iterator $r8;
        boolean $z0, $z1;
        java.lang.Object $r9;
        com.reparatur_held_company.model.nodb.OrderStage $r10;
        int $i1, $i2, varReplacer3895;
        java.lang.Throwable $r11, $r36;
        okhttp3.HttpUrl $r12;
        okhttp3.HttpUrl$Builder $r13;
        java.lang.String $r14, $r27, varReplacer3887, varReplacer3888, varReplacer3889, varReplacer3890, varReplacer3891, varReplacer3892, varReplacer3893, varReplacer3894, varReplacer3896, varReplacer3897;
        okhttp3.Request$Builder $r15;
        java.lang.StringBuilder $r16;
        okhttp3.Headers $r17;
        okhttp3.Request $r18;
        com.reparatur_held_company.transfer.HttpClientProvider $r19;
        okhttp3.OkHttpClient $r20;
        okhttp3.Call $r21;
        okhttp3.Response $r22;
        java.lang.Exception $r23;
        java.lang.Object[] $r24;
        okhttp3.ResponseBody $r25;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r26;
        org.json.JSONObject $r28;
        com.reparatur_held_company.model.db.OrderModel $r29;
        android.content.Context $r30;
        com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper $r31;
        com.reparatur_held_company.storage.SQLiteDataHelper $r32;
        com.reparatur_held_company.storage.SQLiteDataHelper$PreparedQueries $r33;
        com.reparatur_held_company.model.nodb.OrderStage[] $r34;
        java.lang.Integer[] $r35;
        byte $b4;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.nodb.ExecutorSession;

        $r2 := @parameter1: java.util.Set;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        entermonitor $r0;

     label01:
        $r3 = new org.json.JSONArray;

        specialinvoke $r3.<org.json.JSONArray: void <init>()>();

        $r8 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (com.reparatur_held_company.model.nodb.OrderStage) $r9;

        $i1 = virtualinvoke $r10.<com.reparatur_held_company.model.nodb.OrderStage: int getJsonIntValue()>();

        virtualinvoke $r3.<org.json.JSONArray: org.json.JSONArray put(int)>($i1);

        goto label02;

     label03:
        $r11 := @caughtexception;

     label04:
        exitmonitor $r0;

     label05:
        throw $r11;

     label06:
        varReplacer3893 = "http://api.reparatur-held.de/api/v1/";

        $r12 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>(varReplacer3893);

        $r13 = virtualinvoke $r12.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        varReplacer3888 = "executorGetMyOrders";

        $r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>(varReplacer3888);

        $i1 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: int getExecutorId()>();

        $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        varReplacer3896 = "executor_id";

        $r13 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer3896, $r14);

        $r15 = new okhttp3.Request$Builder;

        specialinvoke $r15.<okhttp3.Request$Builder: void <init>()>();

        $r12 = virtualinvoke $r13.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer3891 = "FkxFTkrkXm8Y8nr3nyrNPg";

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3891);

        $r14 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r12, $r14);

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r12);

        $r17 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r17);

        $r14 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        varReplacer3897 = "sessionKey";

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>(varReplacer3897, $r14);

        $r14 = virtualinvoke $r3.<org.json.JSONArray: java.lang.String toString()>();

        varReplacer3887 = "includeStage";

        $r15 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>(varReplacer3887, $r14);

        $r18 = virtualinvoke $r15.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r19 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r20 = virtualinvoke $r19.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r21 = virtualinvoke $r20.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r18);

        $r22 = interfaceinvoke $r21.<okhttp3.Call: okhttp3.Response execute()>();

        $i1 = virtualinvoke $r22.<okhttp3.Response: int code()>();

        if $i1 < 200 goto label07;

        $i1 = virtualinvoke $r22.<okhttp3.Response: int code()>();

        if $i1 < 300 goto label08;

     label07:
        $r23 = new java.lang.Exception;

        $r24 = newarray (java.lang.Object)[2];

        $i1 = virtualinvoke $r22.<okhttp3.Response: int code()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r24[0] = $r4;

        $r14 = virtualinvoke $r22.<okhttp3.Response: java.lang.String message()>();

        $r24[1] = $r14;

        varReplacer3890 = "%d - %s";

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer3890, $r24);

        specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>($r14);

        throw $r23;

     label08:
        $r25 = virtualinvoke $r22.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r14 = virtualinvoke $r25.<okhttp3.ResponseBody: java.lang.String string()>();

        $r26 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r14);

        $z0 = virtualinvoke $r26.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label11;

        $i1 = virtualinvoke $r26.<com.reparatur_held_company.transfer.json.CommonJsonResponse: int getErrorCode()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw0()>();

        $r14 = null;

        $r27 = null;

        $r23 = new java.lang.Exception;

        goto label10;

     label09:
        specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>($r27);

        throw $r23;

     label10:
        $r27 = virtualinvoke $r26.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        goto label09;

     label11:
        $r3 = virtualinvoke $r26.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONArray getJDataArray()>();

        $i1 = virtualinvoke $r3.<org.json.JSONArray: int length()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($i1);

     label12:
        $i2 = 0;

     label13:
        if $i2 >= $i1 goto label15;

     label14:
        $r3 = virtualinvoke $r26.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONArray getJDataArray()>();

        $r28 = virtualinvoke $r3.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i2);

        $r29 = staticinvoke <com.reparatur_held_company.model.db.OrderModel: com.reparatur_held_company.model.db.OrderModel fromServerJson(org.json.JSONObject)>($r28);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r29);

        $i2 = $i2 + 1;

        goto label13;

     label15:
        exitmonitor $r0;

     label16:
        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        $z0 = 0;

        $r30 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r31 = staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class)>($r30, class "Lcom/reparatur_held_company/storage/SQLiteDataHelper;");

        $r32 = (com.reparatur_held_company.storage.SQLiteDataHelper) $r31;

     label17:
        $r33 = virtualinvoke $r32.<com.reparatur_held_company.storage.SQLiteDataHelper: com.reparatur_held_company.storage.SQLiteDataHelper$PreparedQueries getPreparedQueries()>();

        $i1 = interfaceinvoke $r2.<java.util.Set: int size()>();

        $r34 = newarray (com.reparatur_held_company.model.nodb.OrderStage)[$i1];

        $r24 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r34);

        $r34 = (com.reparatur_held_company.model.nodb.OrderStage[]) $r24;

        $r35 = virtualinvoke $r33.<com.reparatur_held_company.storage.SQLiteDataHelper$PreparedQueries: java.lang.Integer[] selectOrderIdsByStages(com.reparatur_held_company.model.nodb.OrderStage[])>($r34);

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        $r8 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label19:
        if $z1 == 0 goto label22;

     label20:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r29 = (com.reparatur_held_company.model.db.OrderModel) $r9;

        $i1 = virtualinvoke $r29.<com.reparatur_held_company.model.db.OrderModel: int getId()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>($r4);

        $z1 = virtualinvoke $r32.<com.reparatur_held_company.storage.SQLiteDataHelper: boolean updateOrder(com.reparatur_held_company.model.db.OrderModel)>($r29);

     label21:
        if $z1 == 0 goto label18;

        $z0 = 1;

        goto label18;

     label22:
        $i1 = lengthof $r35;

     label23:
        $i2 = 0;

     label24:
        if $i2 >= $i1 goto label29;

     label25:
        $r4 = $r35[$i2];

        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>($r4);

     label26:
        if $z1 != 0 goto label28;

     label27:
        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label28:
        $i2 = $i2 + 1;

        goto label24;

     label29:
        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        $i1 = interfaceinvoke $r5.<java.util.Set: int size()>();

        if $i1 <= 0 goto label30;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        varReplacer3889 = "Check state of ";

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3889);

        $i1 = interfaceinvoke $r5.<java.util.Set: int size()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        varReplacer3892 = " lost order(s)";

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3892);

        $r14 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer3894 = "RestController";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer3894, $r14);

        $z0 = 1;

        $i1 = interfaceinvoke $r5.<java.util.Set: int size()>();

        $r35 = newarray (java.lang.Integer)[$i1];

        $r24 = interfaceinvoke $r5.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r35);

        $r35 = (java.lang.Integer[]) $r24;

        varReplacer3895 = 0;

        specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: java.util.Map apiGetOrdersByIDs(com.reparatur_held_company.model.nodb.ExecutorSession,boolean,java.lang.Integer[])>($r1, varReplacer3895, $r35);

     label30:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l3 - $l0;

        $b4 = $l0 cmp 1200L;

        if $b4 >= 0 goto label33;

        $l0 = 1200L - $l0;

        staticinvoke <java.lang.Thread: void sleep(long)>($l0);

        return $z0;

     label31:
        $r36 := @caughtexception;

        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        throw $r36;

     label32:
        $r11 := @caughtexception;

        goto label04;

     label33:
        return $z0;

        catch java.lang.Throwable from label01 to label05 with label03;
        catch java.lang.Throwable from label06 to label12 with label03;
        catch java.lang.Throwable from label14 to label16 with label32;
        catch java.lang.Throwable from label17 to label19 with label31;
        catch java.lang.Throwable from label20 to label21 with label31;
        catch java.lang.Throwable from label22 to label23 with label31;
        catch java.lang.Throwable from label25 to label26 with label31;
        catch java.lang.Throwable from label27 to label28 with label31;
    }

    private com.reparatur_held_company.model.db.ExecutorModel apiUpdateProfile(com.reparatur_held_company.model.nodb.ExecutorSession, com.reparatur_held_company.model.db.RegistrationModel) throws java.lang.Exception
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.nodb.ExecutorSession $r1;
        com.reparatur_held_company.model.db.RegistrationModel $r2;
        android.content.Context $r3;
        boolean $z0;
        com.reparatur_held_company.transfer.RestCustomException $r4;
        java.lang.String $r5, varReplacer3955, varReplacer3957, varReplacer3958, varReplacer3959, varReplacer3960, varReplacer3963, varReplacer3964, varReplacer3965, varReplacer3966, varReplacer3967;
        okhttp3.MediaType $r6;
        okhttp3.RequestBody $r7;
        okhttp3.HttpUrl $r8;
        okhttp3.HttpUrl$Builder $r9;
        okhttp3.Request$Builder $r10;
        java.lang.StringBuilder $r11;
        okhttp3.Headers $r12;
        okhttp3.Request $r13;
        com.reparatur_held_company.transfer.HttpClientProvider $r14;
        okhttp3.OkHttpClient $r15;
        okhttp3.Call $r16;
        okhttp3.Response $r17;
        int $i0, varReplacer3961, varReplacer3962;
        java.lang.Throwable $r18, $r35, $r39;
        java.lang.Exception $r19;
        java.lang.Object[] $r20;
        java.lang.Integer $r21;
        okhttp3.ResponseBody $r22;
        com.reparatur_held_company.transfer.json.CommonJsonResponse $r23;
        org.json.JSONObject $r24;
        com.reparatur_held_company.model.db.ExecutorModel $r25;
        com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper $r26;
        com.reparatur_held_company.storage.SQLiteDataHelper $r27;
        com.j256.ormlite.dao.RuntimeExceptionDao $r28;
        com.j256.ormlite.stmt.DeleteBuilder $r29;
        com.j256.ormlite.stmt.Where $r30;
        com.reparatur_held_company.model.db.ImageModel $r31;
        java.util.List $r32;
        java.util.Iterator $r33;
        java.lang.Object $r34;
        java.util.Collection $r36;
        com.reparatur_held_company.model.db.PostalCodeModel $r37;
        com.reparatur_held_company.model.db.ExecutorCategoryModel $r38;
        long varReplacer3956;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.nodb.ExecutorSession;

        $r2 := @parameter1: com.reparatur_held_company.model.db.RegistrationModel;

        $r3 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $z0 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: boolean isAvailableInternetConnection(android.content.Context)>($r3);

        if $z0 != 0 goto label01;

        $r4 = new com.reparatur_held_company.transfer.RestCustomException;

        $r3 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        varReplacer3962 = 2131099743;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>(varReplacer3962);

        specialinvoke $r4.<com.reparatur_held_company.transfer.RestCustomException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label01:
        entermonitor $r0;

     label02:
        $r5 = virtualinvoke $r2.<com.reparatur_held_company.model.db.RegistrationModel: java.lang.String createServerJSON()>();

        $r6 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.MediaType MEDIA_TYPE_POST>;

        $r7 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)>($r6, $r5);

        varReplacer3957 = "http://api.reparatur-held.de/api/v1/";

        $r8 = staticinvoke <okhttp3.HttpUrl: okhttp3.HttpUrl parse(java.lang.String)>(varReplacer3957);

        $r9 = virtualinvoke $r8.<okhttp3.HttpUrl: okhttp3.HttpUrl$Builder newBuilder()>();

        varReplacer3958 = "executorUpdateProfile";

        $r9 = virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)>(varReplacer3958);

        $r5 = $r2.<com.reparatur_held_company.model.db.RegistrationModel: java.lang.String email>;

        varReplacer3964 = "email";

        $r9 = virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)>(varReplacer3964, $r5);

        $r8 = virtualinvoke $r9.<okhttp3.HttpUrl$Builder: okhttp3.HttpUrl build()>();

        $r10 = new okhttp3.Request$Builder;

        specialinvoke $r10.<okhttp3.Request$Builder: void <init>()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer3959 = "FkxFTkrkXm8Y8nr3nyrNPg";

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3959);

        $r5 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <com.reparatur_held_company.transfer.HttpClientUtils: okhttp3.HttpUrl addAuthKey(okhttp3.HttpUrl,java.lang.String)>($r8, $r5);

        $r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder url(okhttp3.HttpUrl)>($r8);

        $r12 = <com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.Headers DEFAULT_HEADERS>;

        $r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder headers(okhttp3.Headers)>($r12);

        $r5 = virtualinvoke $r1.<com.reparatur_held_company.model.nodb.ExecutorSession: java.lang.String getSessionKey()>();

        varReplacer3960 = "sessionKey";

        $r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>(varReplacer3960, $r5);

        $r10 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request$Builder post(okhttp3.RequestBody)>($r7);

        $r13 = virtualinvoke $r10.<okhttp3.Request$Builder: okhttp3.Request build()>();

        $r14 = staticinvoke <com.reparatur_held_company.transfer.HttpClientProvider: com.reparatur_held_company.transfer.HttpClientProvider getInstance()>();

        $r15 = virtualinvoke $r14.<com.reparatur_held_company.transfer.HttpClientProvider: okhttp3.OkHttpClient getDefaultRESTClient()>();

        $r16 = virtualinvoke $r15.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>($r13);

        $r17 = interfaceinvoke $r16.<okhttp3.Call: okhttp3.Response execute()>();

        $i0 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        if $i0 < 200 goto label03;

        if $i0 < 300 goto label07;

     label03:
        $i0 = $i0 / 100;

        if $i0 != 4 goto label06;

        $r4 = new com.reparatur_held_company.transfer.RestCustomException;

        $r3 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        varReplacer3961 = 2131099737;

        $r5 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>(varReplacer3961);

        specialinvoke $r4.<com.reparatur_held_company.transfer.RestCustomException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label04:
        $r18 := @caughtexception;

        exitmonitor $r0;

     label05:
        throw $r18;

     label06:
        $r19 = new java.lang.Exception;

        $r20 = newarray (java.lang.Object)[2];

        $i0 = virtualinvoke $r17.<okhttp3.Response: int code()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r20[0] = $r21;

        $r5 = virtualinvoke $r17.<okhttp3.Response: java.lang.String message()>();

        $r20[1] = $r5;

        varReplacer3955 = "%d - %s";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer3955, $r20);

        specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw $r19;

     label07:
        $r22 = virtualinvoke $r17.<okhttp3.Response: okhttp3.ResponseBody body()>();

        $r5 = virtualinvoke $r22.<okhttp3.ResponseBody: java.lang.String string()>();

        $r23 = staticinvoke <com.reparatur_held_company.transfer.json.CommonJsonResponse: com.reparatur_held_company.transfer.json.CommonJsonResponse fromJson(java.lang.String)>($r5);

        $z0 = virtualinvoke $r23.<com.reparatur_held_company.transfer.json.CommonJsonResponse: boolean isSuccess()>();

        if $z0 != 0 goto label08;

        $r19 = new java.lang.Exception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer3966 = "Server returned error - ";

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3966);

        $r5 = virtualinvoke $r23.<com.reparatur_held_company.transfer.json.CommonJsonResponse: java.lang.String getErrorMessage()>();

        $r11 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw $r19;

     label08:
        $r24 = virtualinvoke $r23.<com.reparatur_held_company.transfer.json.CommonJsonResponse: org.json.JSONObject getJData()>();

        $r25 = staticinvoke <com.reparatur_held_company.model.db.ExecutorModel: com.reparatur_held_company.model.db.ExecutorModel fromServerJson(org.json.JSONObject)>($r24);

     label09:
        varReplacer3956 = 400L;

        staticinvoke <java.lang.Thread: void sleep(long)>(varReplacer3956);

     label10:
        $r3 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r26 = staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context,java.lang.Class)>($r3, class "Lcom/reparatur_held_company/storage/SQLiteDataHelper;");

        $r27 = (com.reparatur_held_company.storage.SQLiteDataHelper) $r26;

     label11:
        $r28 = virtualinvoke $r27.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getImageDAO()>();

        $r29 = virtualinvoke $r28.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.stmt.DeleteBuilder deleteBuilder()>();

        $r30 = virtualinvoke $r29.<com.j256.ormlite.stmt.DeleteBuilder: com.j256.ormlite.stmt.Where where()>();

        $i0 = virtualinvoke $r25.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        varReplacer3963 = "owner_executor";

        virtualinvoke $r30.<com.j256.ormlite.stmt.Where: com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object)>(varReplacer3963, $r21);

        virtualinvoke $r29.<com.j256.ormlite.stmt.DeleteBuilder: int delete()>();

        $r28 = virtualinvoke $r27.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getPostocdeDAO()>();

        $r29 = virtualinvoke $r28.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.stmt.DeleteBuilder deleteBuilder()>();

        $r30 = virtualinvoke $r29.<com.j256.ormlite.stmt.DeleteBuilder: com.j256.ormlite.stmt.Where where()>();

        $i0 = virtualinvoke $r25.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        varReplacer3965 = "owner_executor";

        virtualinvoke $r30.<com.j256.ormlite.stmt.Where: com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object)>(varReplacer3965, $r21);

        virtualinvoke $r29.<com.j256.ormlite.stmt.DeleteBuilder: int delete()>();

        $r28 = virtualinvoke $r27.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorCategoryDAO()>();

        $r29 = virtualinvoke $r28.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.stmt.DeleteBuilder deleteBuilder()>();

        $r30 = virtualinvoke $r29.<com.j256.ormlite.stmt.DeleteBuilder: com.j256.ormlite.stmt.Where where()>();

        $i0 = virtualinvoke $r25.<com.reparatur_held_company.model.db.ExecutorModel: int getId()>();

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        varReplacer3967 = "executor";

        virtualinvoke $r30.<com.j256.ormlite.stmt.Where: com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object)>(varReplacer3967, $r21);

        virtualinvoke $r29.<com.j256.ormlite.stmt.DeleteBuilder: int delete()>();

        $r31 = virtualinvoke $r25.<com.reparatur_held_company.model.db.ExecutorModel: com.reparatur_held_company.model.db.ImageModel getLogo()>();

        if $r31 == null goto label12;

        $r28 = virtualinvoke $r27.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getImageDAO()>();

        $r31 = virtualinvoke $r25.<com.reparatur_held_company.model.db.ExecutorModel: com.reparatur_held_company.model.db.ImageModel getLogo()>();

        virtualinvoke $r28.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r31);

     label12:
        $r32 = virtualinvoke $r25.<com.reparatur_held_company.model.db.ExecutorModel: java.util.List getCertificates()>();

        $r33 = interfaceinvoke $r32.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z0 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        $r31 = (com.reparatur_held_company.model.db.ImageModel) $r34;

        $r28 = virtualinvoke $r27.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getImageDAO()>();

        virtualinvoke $r28.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r31);

     label14:
        goto label13;

     label15:
        $r35 := @caughtexception;

     label16:
        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        throw $r35;

     label17:
        $r36 = virtualinvoke $r25.<com.reparatur_held_company.model.db.ExecutorModel: java.util.Collection getPostalCodes()>();

        $r33 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();

     label18:
        $z0 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        $r37 = (com.reparatur_held_company.model.db.PostalCodeModel) $r34;

        $r28 = virtualinvoke $r27.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getPostocdeDAO()>();

        virtualinvoke $r28.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r37);

        goto label18;

     label19:
        $r36 = virtualinvoke $r25.<com.reparatur_held_company.model.db.ExecutorModel: java.util.Collection getCategories()>();

        $r33 = interfaceinvoke $r36.<java.util.Collection: java.util.Iterator iterator()>();

     label20:
        $z0 = interfaceinvoke $r33.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label21;

        $r34 = interfaceinvoke $r33.<java.util.Iterator: java.lang.Object next()>();

        $r38 = (com.reparatur_held_company.model.db.ExecutorCategoryModel) $r34;

        $r28 = virtualinvoke $r27.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorCategoryDAO()>();

        virtualinvoke $r28.<com.j256.ormlite.dao.RuntimeExceptionDao: int create(java.lang.Object)>($r38);

        goto label20;

     label21:
        $r28 = virtualinvoke $r27.<com.reparatur_held_company.storage.SQLiteDataHelper: com.j256.ormlite.dao.RuntimeExceptionDao getExecutorDAO()>();

        virtualinvoke $r28.<com.j256.ormlite.dao.RuntimeExceptionDao: com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object)>($r25);

     label22:
        staticinvoke <com.j256.ormlite.android.apptools.OpenHelperManager: void releaseHelper()>();

        exitmonitor $r0;

     label23:
        return $r25;

     label24:
        $r39 := @caughtexception;

        goto label10;

        catch java.lang.Throwable from label02 to label05 with label04;
        catch java.lang.Throwable from label06 to label09 with label04;
        catch java.lang.InterruptedException from label09 to label10 with label24;
        catch java.lang.Throwable from label09 to label10 with label04;
        catch java.lang.Throwable from label10 to label11 with label04;
        catch java.lang.Throwable from label11 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label04;
        catch java.lang.Throwable from label17 to label22 with label15;
        catch java.lang.Throwable from label22 to label23 with label04;
    }

    public static void checkAndUpdateCurrentExecutor(com.reparatur_held_company.transfer.callbacks.OnCheckUpdateExecutorListener)
    {
        com.reparatur_held_company.transfer.callbacks.OnCheckUpdateExecutorListener $r0;
        com.reparatur_held_company.transfer.RestController $r1;

        $r0 := @parameter0: com.reparatur_held_company.transfer.callbacks.OnCheckUpdateExecutorListener;

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: void checkAndUpdateCurrentExecutorAsync(com.reparatur_held_company.transfer.callbacks.OnCheckUpdateExecutorListener)>($r0);

        return;
    }

    private void checkAndUpdateCurrentExecutorAsync(com.reparatur_held_company.transfer.callbacks.OnCheckUpdateExecutorListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.transfer.callbacks.OnCheckUpdateExecutorListener $r1;
        com.reparatur_held_company.transfer.RestController$TaskCheckAndUpdateExecutor $r2;
        com.reparatur_held_company.model.nodb.ExecutorSession $r3;
        java.lang.Void[] $r4;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.transfer.callbacks.OnCheckUpdateExecutorListener;

        $r2 = new com.reparatur_held_company.transfer.RestController$TaskCheckAndUpdateExecutor;

        $r3 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        specialinvoke $r2.<com.reparatur_held_company.transfer.RestController$TaskCheckAndUpdateExecutor: void <init>(com.reparatur_held_company.transfer.RestController,com.reparatur_held_company.model.nodb.ExecutorSession,com.reparatur_held_company.transfer.callbacks.OnCheckUpdateExecutorListener)>($r0, $r3, $r1);

        $r4 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.<com.reparatur_held_company.transfer.RestController$TaskCheckAndUpdateExecutor: void safeExecute(java.lang.Object[])>($r4);

        return;
    }

    public static void getAllWork(long, int, int, com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)
    {
        long $l0;
        int $i1, $i2;
        com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener $r0;
        com.reparatur_held_company.transfer.RestController $r1;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $r0 := @parameter3: com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener;

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: void getAllWorkAsync(long,long,int,int,com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)>($l0, -1L, $i1, $i2, $r0);

        return;
    }

    private void getAllWorkAsync(long, long, int, int, com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        long $l0, $l1;
        int $i2, $i3;
        com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener $r1;
        com.reparatur_held_company.model.nodb.ExecutorSession $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        com.reparatur_held_company.transfer.RestController$TaskGetAllWork $r5;
        java.lang.Long[] $r6;
        java.lang.Long $r7;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r1 := @parameter4: com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener;

        $r2 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        if $r2 != null goto label1;

        if $r1 == null goto label2;

        $r3 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>(2131099747);

        interfaceinvoke $r1.<com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener: void onError(java.lang.Exception,java.lang.String)>(null, $r4);

        return;

     label1:
        $r5 = new com.reparatur_held_company.transfer.RestController$TaskGetAllWork;

        $r2 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        specialinvoke $r5.<com.reparatur_held_company.transfer.RestController$TaskGetAllWork: void <init>(com.reparatur_held_company.transfer.RestController,com.reparatur_held_company.model.nodb.ExecutorSession,com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)>($r0, $r2, $r1);

        $r6 = newarray (java.lang.Long)[4];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[0] = $r7;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r6[1] = $r7;

        $l0 = (long) $i2;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[2] = $r7;

        $l0 = (long) $i3;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[3] = $r7;

        virtualinvoke $r5.<com.reparatur_held_company.transfer.RestController$TaskGetAllWork: void safeExecute(java.lang.Object[])>($r6);

     label2:
        return;
    }

    public static void getCategories(com.reparatur_held_company.transfer.callbacks.OnGetCategoriesListener)
    {
        com.reparatur_held_company.transfer.callbacks.OnGetCategoriesListener $r0;
        com.reparatur_held_company.transfer.RestController $r1;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.transfer.callbacks.OnGetCategoriesListener;

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: void getCategoriesAsync(com.reparatur_held_company.transfer.callbacks.OnGetCategoriesListener)>($r0);

        return;
    }

    private void getCategoriesAsync(com.reparatur_held_company.transfer.callbacks.OnGetCategoriesListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.transfer.callbacks.OnGetCategoriesListener $r1;
        com.reparatur_held_company.transfer.RestController$TaskLoadCategories $r2;
        java.lang.Void[] $r3;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.transfer.callbacks.OnGetCategoriesListener;

        $r2 = new com.reparatur_held_company.transfer.RestController$TaskLoadCategories;

        specialinvoke $r2.<com.reparatur_held_company.transfer.RestController$TaskLoadCategories: void <init>(com.reparatur_held_company.transfer.RestController,com.reparatur_held_company.transfer.callbacks.OnGetCategoriesListener)>($r0, $r1);

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.<com.reparatur_held_company.transfer.RestController$TaskLoadCategories: void safeExecute(java.lang.Object[])>($r3);

        return;
    }

    private static com.reparatur_held_company.transfer.RestController getInstance()
    {
        com.reparatur_held_company.transfer.RestController $r0;
        java.lang.Throwable $r1;

        nop;

        $r0 = <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController instance>;

        if $r0 != null goto label3;

        entermonitor class "Lcom/reparatur_held_company/transfer/RestController;";

     label1:
        $r0 = <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController instance>;

        if $r0 != null goto label2;

        $r0 = new com.reparatur_held_company.transfer.RestController;

        specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: void <init>()>();

        <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController instance> = $r0;

     label2:
        exitmonitor class "Lcom/reparatur_held_company/transfer/RestController;";

     label3:
        $r0 = <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController instance>;

        return $r0;

     label4:
        $r1 := @caughtexception;

     label5:
        exitmonitor class "Lcom/reparatur_held_company/transfer/RestController;";

     label6:
        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public static void getOrdersByIds(boolean, java.util.List, com.reparatur_held_company.transfer.callbacks.OnGetOrdersListener)
    {
        boolean $z0;
        java.util.List $r0;
        com.reparatur_held_company.transfer.callbacks.OnGetOrdersListener $r1;
        com.reparatur_held_company.transfer.RestController $r2;
        int varReplacer1883;

        nop;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.util.List;

        $r1 := @parameter2: com.reparatur_held_company.transfer.callbacks.OnGetOrdersListener;

        $r2 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        varReplacer1883 = 1;

        specialinvoke $r2.<com.reparatur_held_company.transfer.RestController: void getOrdersByIdsAsync(boolean,java.util.List,com.reparatur_held_company.transfer.callbacks.OnGetOrdersListener)>(varReplacer1883, $r0, $r1);

        return;
    }

    private void getOrdersByIdsAsync(boolean, java.util.List, com.reparatur_held_company.transfer.callbacks.OnGetOrdersListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        boolean $z0;
        java.util.List $r1;
        com.reparatur_held_company.transfer.callbacks.OnGetOrdersListener $r2;
        com.reparatur_held_company.model.nodb.ExecutorSession $r3;
        android.content.Context $r4;
        java.lang.String $r5;
        com.reparatur_held_company.transfer.RestController$TaskGetOrdersByIds $r6;
        int $i0, varReplacer1884, varReplacer1885;
        java.lang.Integer[] $r7;
        java.lang.Object[] $r8;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.util.List;

        $r2 := @parameter2: com.reparatur_held_company.transfer.callbacks.OnGetOrdersListener;

        $r3 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        if $r3 != null goto label1;

        if $r2 == null goto label2;

        $r4 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        varReplacer1885 = 2131099747;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(varReplacer1885);

        interfaceinvoke $r2.<com.reparatur_held_company.transfer.callbacks.OnGetOrdersListener: void onError(java.lang.String)>($r5);

        return;

     label1:
        $r6 = new com.reparatur_held_company.transfer.RestController$TaskGetOrdersByIds;

        $r3 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        varReplacer1884 = 1;

        specialinvoke $r6.<com.reparatur_held_company.transfer.RestController$TaskGetOrdersByIds: void <init>(com.reparatur_held_company.transfer.RestController,com.reparatur_held_company.model.nodb.ExecutorSession,boolean,com.reparatur_held_company.transfer.callbacks.OnGetOrdersListener)>($r0, $r3, varReplacer1884, $r2);

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r7 = newarray (java.lang.Integer)[$i0];

        $r8 = interfaceinvoke $r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        virtualinvoke $r6.<com.reparatur_held_company.transfer.RestController$TaskGetOrdersByIds: void safeExecute(java.lang.Object[])>($r8);

     label2:
        return;
    }

    public static java.util.List getOrdersByIdsSync(boolean, java.lang.Integer[])
    {
        boolean $z0;
        java.lang.Integer[] $r0;
        com.reparatur_held_company.transfer.RestController $r1;
        java.util.List $r2;
        int varReplacer1418;

        nop;

        $z0 := @parameter0: boolean;

        $r0 := @parameter1: java.lang.Integer[];

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        varReplacer1418 = 0;

        $r2 = specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: java.util.List getOrdersByIdsSyncInternal(boolean,java.lang.Integer[])>(varReplacer1418, $r0);

        return $r2;
    }

    private java.util.List getOrdersByIdsSyncInternal(boolean, java.lang.Integer[])
    {
        com.reparatur_held_company.transfer.RestController $r0;
        boolean $z0;
        java.lang.Integer[] $r1;
        java.lang.Exception $r2;
        com.reparatur_held_company.model.nodb.ExecutorSession $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        java.util.List $r6;
        java.util.ArrayList $r7;
        int varReplacer1420;
        java.lang.String varReplacer1421;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.lang.Integer[];

     label1:
        $r3 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        varReplacer1420 = 0;

        $r4 = specialinvoke $r0.<com.reparatur_held_company.transfer.RestController: java.util.Map apiGetOrdersByIDs(com.reparatur_held_company.model.nodb.ExecutorSession,boolean,java.lang.Integer[])>($r3, varReplacer1420, $r1);

        varReplacer1421 = "orders";

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer1421);

        $r6 = (java.util.List) $r5;

     label2:
        return $r6;

     label3:
        $r2 := @caughtexception;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        return $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void getPotentialWork(long, int, com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)
    {
        long $l0, varReplacer2983;
        int $i1, varReplacer2984;
        com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener $r0;
        com.reparatur_held_company.transfer.RestController $r1;

        nop;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r0 := @parameter2: com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener;

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        varReplacer2983 = -1L;

        varReplacer2984 = 150;

        specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: void getPotentialWorkAsync(long,long,int,com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)>($l0, varReplacer2983, varReplacer2984, $r0);

        return;
    }

    public static void getPotentialWork(long, long, com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)
    {
        long $l0, $l1;
        com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener $r0;
        com.reparatur_held_company.transfer.RestController $r1;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $r0 := @parameter2: com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener;

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: void getPotentialWorkAsync(long,long,int,com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)>($l0, $l1, -1, $r0);

        return;
    }

    private void getPotentialWorkAsync(long, long, int, com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        long $l0, $l1, varReplacer2987;
        int $i2, varReplacer2985;
        com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener $r1;
        com.reparatur_held_company.model.nodb.ExecutorSession $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        com.reparatur_held_company.transfer.RestController$TaskGetPotentialWork $r5;
        java.lang.Long[] $r6;
        java.lang.Long $r7;
        null_type varReplacer2986;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $i2 := @parameter2: int;

        $r1 := @parameter3: com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener;

        $r2 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        if $r2 != null goto label1;

        if $r1 == null goto label2;

        $r3 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        varReplacer2985 = 2131099747;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>(varReplacer2985);

        varReplacer2986 = null;

        interfaceinvoke $r1.<com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener: void onError(java.lang.Exception,java.lang.String)>(varReplacer2986, $r4);

        return;

     label1:
        $r5 = new com.reparatur_held_company.transfer.RestController$TaskGetPotentialWork;

        $r2 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        specialinvoke $r5.<com.reparatur_held_company.transfer.RestController$TaskGetPotentialWork: void <init>(com.reparatur_held_company.transfer.RestController,com.reparatur_held_company.model.nodb.ExecutorSession,com.reparatur_held_company.transfer.callbacks.OnGetPotentialWorkListener)>($r0, $r2, $r1);

        $r6 = newarray (java.lang.Long)[3];

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[0] = $r7;

        varReplacer2987 = -1L;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(varReplacer2987);

        $r6[1] = $r7;

        $l0 = (long) 150;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $r6[2] = $r7;

        virtualinvoke $r5.<com.reparatur_held_company.transfer.RestController$TaskGetPotentialWork: void safeExecute(java.lang.Object[])>($r6);

     label2:
        return;
    }

    public static java.util.List getPotentialWorkSync()
    {
        java.lang.Exception $r0;
        com.reparatur_held_company.transfer.RestController $r1;
        com.reparatur_held_company.model.nodb.ExecutorSession $r2;
        long $l0, varReplacer1414;
        java.util.List $r3;
        int varReplacer1415;
        null_type varReplacer1416;

     label1:
        nop;

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        $r2 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        varReplacer1414 = -1L;

        varReplacer1415 = 300;

        $r3 = specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: java.util.List apiGetPotentialWork(com.reparatur_held_company.model.nodb.ExecutorSession,long,long,int)>($r2, $l0, varReplacer1414, varReplacer1415);

     label2:
        return $r3;

     label3:
        $r0 := @caughtexception;

        virtualinvoke $r0.<java.lang.Exception: void printStackTrace()>();

        varReplacer1416 = null;

        return varReplacer1416;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.util.Map getWorkAmountSync()
    {
        java.lang.Exception $r0;
        com.reparatur_held_company.transfer.RestController $r1;
        com.reparatur_held_company.model.nodb.ExecutorSession $r2;
        java.util.Map $r3;

     label1:
        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        $r2 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        $r3 = specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: java.util.Map apiGetWorkAmount(com.reparatur_held_company.model.nodb.ExecutorSession)>($r2);

     label2:
        return $r3;

     label3:
        $r0 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void loginAsync(java.lang.String, java.lang.String, java.lang.String, com.reparatur_held_company.transfer.callbacks.OnLoginListener)
    {
        java.lang.String $r0, $r1, $r2;
        com.reparatur_held_company.transfer.callbacks.OnLoginListener $r3;
        com.reparatur_held_company.transfer.RestController $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: com.reparatur_held_company.transfer.callbacks.OnLoginListener;

        $r4 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        specialinvoke $r4.<com.reparatur_held_company.transfer.RestController: void loginAsyncInternal(java.lang.String,java.lang.String,java.lang.String,com.reparatur_held_company.transfer.callbacks.OnLoginListener)>($r0, $r1, $r2, $r3);

        return;
    }

    private void loginAsyncInternal(java.lang.String, java.lang.String, java.lang.String, com.reparatur_held_company.transfer.callbacks.OnLoginListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        java.lang.String $r1, $r2, $r3;
        com.reparatur_held_company.transfer.callbacks.OnLoginListener $r4;
        com.reparatur_held_company.transfer.RestController$TaskLogin $r5;
        java.lang.String[] $r6;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: com.reparatur_held_company.transfer.callbacks.OnLoginListener;

        $r5 = new com.reparatur_held_company.transfer.RestController$TaskLogin;

        specialinvoke $r5.<com.reparatur_held_company.transfer.RestController$TaskLogin: void <init>(com.reparatur_held_company.transfer.RestController,com.reparatur_held_company.transfer.callbacks.OnLoginListener)>($r0, $r4);

        $r6 = newarray (java.lang.String)[3];

        $r6[0] = $r1;

        $r6[1] = $r2;

        $r6[2] = $r3;

        virtualinvoke $r5.<com.reparatur_held_company.transfer.RestController$TaskLogin: void safeExecute(java.lang.Object[])>($r6);

        return;
    }

    public static void logoutAsync(com.reparatur_held_company.transfer.callbacks.OnLogoutListener)
    {
        com.reparatur_held_company.transfer.callbacks.OnLogoutListener $r0;
        com.reparatur_held_company.transfer.RestController $r1;

        $r0 := @parameter0: com.reparatur_held_company.transfer.callbacks.OnLogoutListener;

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: void logoutAsyncInternal(com.reparatur_held_company.transfer.callbacks.OnLogoutListener)>($r0);

        return;
    }

    private void logoutAsyncInternal(com.reparatur_held_company.transfer.callbacks.OnLogoutListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.transfer.callbacks.OnLogoutListener $r1;
        com.reparatur_held_company.model.nodb.ExecutorSession $r2;
        android.content.Context $r3;
        java.lang.String $r4;
        com.reparatur_held_company.transfer.RestController$TaskLogout $r5;
        com.reparatur_held_company.model.nodb.ExecutorSession[] $r6;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.transfer.callbacks.OnLogoutListener;

        $r2 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        if $r2 != null goto label1;

        if $r1 == null goto label2;

        $r3 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>(2131099747);

        interfaceinvoke $r1.<com.reparatur_held_company.transfer.callbacks.OnLogoutListener: void onLogoutError(java.lang.String)>($r4);

        return;

     label1:
        $r5 = new com.reparatur_held_company.transfer.RestController$TaskLogout;

        specialinvoke $r5.<com.reparatur_held_company.transfer.RestController$TaskLogout: void <init>(com.reparatur_held_company.transfer.RestController,com.reparatur_held_company.transfer.callbacks.OnLogoutListener)>($r0, $r1);

        $r6 = newarray (com.reparatur_held_company.model.nodb.ExecutorSession)[1];

        $r2 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        $r6[0] = $r2;

        virtualinvoke $r5.<com.reparatur_held_company.transfer.RestController$TaskLogout: void safeExecute(java.lang.Object[])>($r6);

     label2:
        return;
    }

    public static boolean logoutSync()
    {
        java.lang.Exception $r0;
        com.reparatur_held_company.transfer.RestController $r1;
        com.reparatur_held_company.model.nodb.ExecutorSession $r2;
        int varReplacer2272, varReplacer2273;

     label1:
        nop;

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        $r2 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: void apiLogout(com.reparatur_held_company.model.nodb.ExecutorSession)>($r2);

     label2:
        varReplacer2272 = 1;

        return varReplacer2272;

     label3:
        $r0 := @caughtexception;

        varReplacer2273 = 0;

        return varReplacer2273;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void makeOfferForAnOrder(com.reparatur_held_company.model.db.OfferModel, com.reparatur_held_company.transfer.callbacks.OnMakeOfferListener)
    {
        com.reparatur_held_company.model.db.OfferModel $r0;
        com.reparatur_held_company.transfer.callbacks.OnMakeOfferListener $r1;
        com.reparatur_held_company.transfer.RestController $r2;

        $r0 := @parameter0: com.reparatur_held_company.model.db.OfferModel;

        $r1 := @parameter1: com.reparatur_held_company.transfer.callbacks.OnMakeOfferListener;

        $r2 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        specialinvoke $r2.<com.reparatur_held_company.transfer.RestController: void makeOfferForAnOrderAsync(com.reparatur_held_company.model.db.OfferModel,com.reparatur_held_company.transfer.callbacks.OnMakeOfferListener)>($r0, $r1);

        return;
    }

    private void makeOfferForAnOrderAsync(com.reparatur_held_company.model.db.OfferModel, com.reparatur_held_company.transfer.callbacks.OnMakeOfferListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.db.OfferModel $r1;
        com.reparatur_held_company.transfer.callbacks.OnMakeOfferListener $r2;
        com.reparatur_held_company.model.nodb.ExecutorSession $r3;
        android.content.Context $r4;
        java.lang.String $r5;
        com.reparatur_held_company.transfer.RestController$TaskMakeOffer $r6;
        com.reparatur_held_company.model.db.OfferModel[] $r7;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.db.OfferModel;

        $r2 := @parameter1: com.reparatur_held_company.transfer.callbacks.OnMakeOfferListener;

        $r3 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        if $r3 != null goto label1;

        if $r2 == null goto label2;

        $r4 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(2131099747);

        interfaceinvoke $r2.<com.reparatur_held_company.transfer.callbacks.OnMakeOfferListener: void onError(java.lang.String)>($r5);

        return;

     label1:
        $r6 = new com.reparatur_held_company.transfer.RestController$TaskMakeOffer;

        $r3 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        specialinvoke $r6.<com.reparatur_held_company.transfer.RestController$TaskMakeOffer: void <init>(com.reparatur_held_company.transfer.RestController,com.reparatur_held_company.model.nodb.ExecutorSession,com.reparatur_held_company.transfer.callbacks.OnMakeOfferListener)>($r0, $r3, $r2);

        $r7 = newarray (com.reparatur_held_company.model.db.OfferModel)[1];

        $r7[0] = $r1;

        virtualinvoke $r6.<com.reparatur_held_company.transfer.RestController$TaskMakeOffer: void safeExecute(java.lang.Object[])>($r7);

     label2:
        return;
    }

    public static void setApplicationContext(android.content.Context)
    {
        android.content.Context $r0;
        com.reparatur_held_company.transfer.RestController $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        specialinvoke $r1.<com.reparatur_held_company.transfer.RestController: void setContext(android.content.Context)>($r0);

        return;
    }

    private void setContext(android.content.Context)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        android.content.Context $r1;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: android.content.Context;

        $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext> = $r1;

        return;
    }

    public static void updateActiveOrders(com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener)
    {
        com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener $r0;
        java.util.HashSet $r1;
        com.reparatur_held_company.transfer.RestController $r2;
        com.reparatur_held_company.model.nodb.OrderStage $r3;

        $r0 := @parameter0: com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r3 = <com.reparatur_held_company.model.nodb.OrderStage: com.reparatur_held_company.model.nodb.OrderStage HAS_OFFERS>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r3 = <com.reparatur_held_company.model.nodb.OrderStage: com.reparatur_held_company.model.nodb.OrderStage OFFER_ACCEPTED>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r2 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        virtualinvoke $r2.<com.reparatur_held_company.transfer.RestController: void updateOrdersForCurrentExecutorAsync(java.util.Set,com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener)>($r1, $r0);

        return;
    }

    public static void updateArchiveOrders(com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener)
    {
        com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener $r0;
        java.util.HashSet $r1;
        com.reparatur_held_company.transfer.RestController $r2;
        com.reparatur_held_company.model.nodb.OrderStage $r3;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener;

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        $r3 = <com.reparatur_held_company.model.nodb.OrderStage: com.reparatur_held_company.model.nodb.OrderStage CLOSED>;

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r2 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        virtualinvoke $r2.<com.reparatur_held_company.transfer.RestController: void updateOrdersForCurrentExecutorAsync(java.util.Set,com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener)>($r1, $r0);

        return;
    }

    public static void updateProfileAsync(com.reparatur_held_company.model.db.RegistrationModel, com.reparatur_held_company.transfer.callbacks.OnUpdateProfileListener)
    {
        com.reparatur_held_company.model.db.RegistrationModel $r0;
        com.reparatur_held_company.transfer.callbacks.OnUpdateProfileListener $r1;
        com.reparatur_held_company.transfer.RestController $r2;

        nop;

        $r0 := @parameter0: com.reparatur_held_company.model.db.RegistrationModel;

        $r1 := @parameter1: com.reparatur_held_company.transfer.callbacks.OnUpdateProfileListener;

        $r2 = staticinvoke <com.reparatur_held_company.transfer.RestController: com.reparatur_held_company.transfer.RestController getInstance()>();

        specialinvoke $r2.<com.reparatur_held_company.transfer.RestController: void updateProfileAsyncInternal(com.reparatur_held_company.model.db.RegistrationModel,com.reparatur_held_company.transfer.callbacks.OnUpdateProfileListener)>($r0, $r1);

        return;
    }

    private void updateProfileAsyncInternal(com.reparatur_held_company.model.db.RegistrationModel, com.reparatur_held_company.transfer.callbacks.OnUpdateProfileListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        com.reparatur_held_company.model.db.RegistrationModel $r1;
        com.reparatur_held_company.transfer.callbacks.OnUpdateProfileListener $r2;
        com.reparatur_held_company.model.nodb.ExecutorSession $r3;
        android.content.Context $r4;
        java.lang.String $r5;
        com.reparatur_held_company.transfer.RestController$TaskUpdateProfile $r6;
        com.reparatur_held_company.model.db.RegistrationModel[] $r7;
        int varReplacer3000;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: com.reparatur_held_company.model.db.RegistrationModel;

        $r2 := @parameter1: com.reparatur_held_company.transfer.callbacks.OnUpdateProfileListener;

        $r3 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        if $r3 != null goto label1;

        if $r2 == null goto label2;

        $r4 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        varReplacer3000 = 2131099747;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(varReplacer3000);

        interfaceinvoke $r2.<com.reparatur_held_company.transfer.callbacks.OnUpdateProfileListener: void onError(java.lang.String)>($r5);

        return;

     label1:
        $r6 = new com.reparatur_held_company.transfer.RestController$TaskUpdateProfile;

        $r3 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        specialinvoke $r6.<com.reparatur_held_company.transfer.RestController$TaskUpdateProfile: void <init>(com.reparatur_held_company.transfer.RestController,com.reparatur_held_company.model.nodb.ExecutorSession,com.reparatur_held_company.transfer.callbacks.OnUpdateProfileListener)>($r0, $r3, $r2);

        $r7 = newarray (com.reparatur_held_company.model.db.RegistrationModel)[1];

        $r7[0] = $r1;

        virtualinvoke $r6.<com.reparatur_held_company.transfer.RestController$TaskUpdateProfile: void safeExecute(java.lang.Object[])>($r7);

     label2:
        return;
    }

    public void updateOrdersForCurrentExecutorAsync(java.util.Set, com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener)
    {
        com.reparatur_held_company.transfer.RestController $r0;
        java.util.Set $r1;
        com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener $r2;
        com.reparatur_held_company.model.nodb.ExecutorSession $r3;
        android.content.Context $r4;
        java.lang.String $r5;
        com.reparatur_held_company.transfer.RestController$TaskUpdateOrdersForExecutor $r6;
        java.lang.Void[] $r7;
        int varReplacer373;

        nop;

        $r0 := @this: com.reparatur_held_company.transfer.RestController;

        $r1 := @parameter0: java.util.Set;

        $r2 := @parameter1: com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener;

        $r3 = staticinvoke <com.reparatur_held_company.core.CurrentSessionHolder: com.reparatur_held_company.model.nodb.ExecutorSession getCurrentSession()>();

        if $r3 != null goto label1;

        if $r2 == null goto label2;

        $r4 = $r0.<com.reparatur_held_company.transfer.RestController: android.content.Context mContext>;

        varReplacer373 = 2131099747;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.String getString(int)>(varReplacer373);

        interfaceinvoke $r2.<com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener: void onError(java.lang.String)>($r5);

        return;

     label1:
        $r6 = new com.reparatur_held_company.transfer.RestController$TaskUpdateOrdersForExecutor;

        specialinvoke $r6.<com.reparatur_held_company.transfer.RestController$TaskUpdateOrdersForExecutor: void <init>(com.reparatur_held_company.transfer.RestController,java.util.Set,com.reparatur_held_company.transfer.callbacks.OnUpdateCompleteListener)>($r0, $r1, $r2);

        $r7 = newarray (java.lang.Void)[0];

        virtualinvoke $r6.<com.reparatur_held_company.transfer.RestController$TaskUpdateOrdersForExecutor: void safeExecute(java.lang.Object[])>($r7);

     label2:
        return;
    }
}
