public class vf extends java.lang.Object
{
    private final java.security.KeyPair a;

    public void <init>()
    {
        vf $r0;
        com.rethinkbooks.api.App $r1;
        java.security.KeyPair $r2;

        nop;

        $r0 := @this: vf;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.rethinkbooks.api.App: com.rethinkbooks.api.App b()>();

        $r2 = staticinvoke <vf: java.security.KeyPair a(android.content.Context)>($r1);

        $r0.<vf: java.security.KeyPair a> = $r2;

        return;
    }

    private static java.security.KeyPair a(android.content.Context)
    {
        android.content.Context $r0;
        java.security.KeyPair $r1, $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        entermonitor class "Lvf;";

     label1:
        $r1 = staticinvoke <vf: java.security.KeyPair b(android.content.Context)>($r0);

        $r2 = $r1;

        if $r1 != null goto label2;

        $r1 = staticinvoke <vf: java.security.KeyPair c()>();

        $r2 = $r1;

        staticinvoke <vf: boolean a(android.content.Context,java.security.KeyPair)>($r0, $r1);

     label2:
        exitmonitor class "Lvf;";

        return $r2;

     label3:
        $r3 := @caughtexception;

        exitmonitor class "Lvf;";

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private static boolean a(android.content.Context, java.security.KeyPair)
    {
        android.content.Context $r0;
        java.security.KeyPair $r1;
        java.io.ByteArrayOutputStream $r2;
        java.io.ObjectOutputStream $r3;
        java.security.PublicKey $r4;
        java.security.interfaces.RSAPublicKey $r5;
        java.math.BigInteger $r6;
        java.security.PrivateKey $r7;
        java.security.interfaces.RSAPrivateKey $r8;
        com.rethinkbooks.api.App $r9;
        android.content.SharedPreferences $r10;
        android.content.SharedPreferences$Editor $r11;
        byte[] $r12;
        java.lang.String $r13, varReplacer1480, varReplacer1481;
        boolean $z0;
        java.lang.Throwable $r14, $r15;
        int varReplacer1477, varReplacer1479;
        null_type varReplacer1478;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.security.KeyPair;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

     label01:
        $r3 = new java.io.ObjectOutputStream;

     label02:
        specialinvoke $r3.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r2);

     label03:
        $r4 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>();

     label04:
        $r5 = (java.security.interfaces.RSAPublicKey) $r4;

     label05:
        $r6 = interfaceinvoke $r5.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getModulus()>();

        virtualinvoke $r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r5.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getPublicExponent()>();

        virtualinvoke $r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

     label06:
        $r8 = (java.security.interfaces.RSAPrivateKey) $r7;

     label07:
        $r6 = interfaceinvoke $r8.<java.security.interfaces.RSAPrivateKey: java.math.BigInteger getModulus()>();

        virtualinvoke $r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        $r6 = interfaceinvoke $r8.<java.security.interfaces.RSAPrivateKey: java.math.BigInteger getPrivateExponent()>();

        virtualinvoke $r3.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r6);

        $r9 = staticinvoke <com.rethinkbooks.api.App: com.rethinkbooks.api.App b()>();

        $r10 = virtualinvoke $r9.<com.rethinkbooks.api.App: android.content.SharedPreferences g()>();

        $r11 = interfaceinvoke $r10.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r12 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        varReplacer1477 = 0;

        $r13 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r12, varReplacer1477);

        varReplacer1480 = "com.rethinkbooks.bookdownload.EncryptedBookKeyPairKeyPair";

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer1480, $r13);

        $z0 = interfaceinvoke $r11.<android.content.SharedPreferences$Editor: boolean commit()>();

     label08:
        staticinvoke <org.apache.commons.io.d: void a(java.io.OutputStream)>($r3);

        varReplacer1478 = null;

        staticinvoke <org.apache.commons.io.d: void a(java.io.OutputStream)>(varReplacer1478);

        return $z0;

     label09:
        $r14 := @caughtexception;

        $r3 = null;

     label10:
        varReplacer1481 = "Could not write keys file.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1481, $r14);

     label11:
        staticinvoke <org.apache.commons.io.d: void a(java.io.OutputStream)>($r3);

        staticinvoke <org.apache.commons.io.d: void a(java.io.OutputStream)>($r2);

        varReplacer1479 = 0;

        return varReplacer1479;

     label12:
        $r15 := @caughtexception;

        $r3 = null;

     label13:
        staticinvoke <org.apache.commons.io.d: void a(java.io.OutputStream)>($r3);

        staticinvoke <org.apache.commons.io.d: void a(java.io.OutputStream)>($r2);

        throw $r15;

     label14:
        $r15 := @caughtexception;

        goto label13;

     label15:
        $r14 := @caughtexception;

        goto label10;

        catch java.io.IOException from label02 to label03 with label09;
        catch java.lang.Throwable from label01 to label03 with label12;
        catch java.io.IOException from label03 to label04 with label15;
        catch java.io.IOException from label05 to label06 with label15;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.lang.Throwable from label03 to label08 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
    }

    private static java.security.KeyPair b(android.content.Context)
    {
        android.content.Context $r0;
        java.security.spec.RSAPrivateKeySpec $r1;
        com.rethinkbooks.api.App $r2;
        android.content.SharedPreferences $r3;
        java.lang.String $r4, varReplacer1464, varReplacer1467, varReplacer1469, varReplacer1470, varReplacer1472, varReplacer1475;
        byte[] $r5;
        java.io.ObjectInputStream $r6;
        java.io.ByteArrayInputStream $r7;
        java.security.spec.RSAPublicKeySpec $r8;
        java.lang.Object $r9;
        java.math.BigInteger $r10, $r11;
        java.security.KeyFactory $r12;
        java.security.PublicKey $r13;
        java.security.PrivateKey $r14;
        java.security.KeyPair $r15;
        java.lang.Throwable $r16, $r18, $r19, $r20;
        java.lang.ClassNotFoundException $r17;
        null_type varReplacer1465, varReplacer1468, varReplacer1471, varReplacer1473, varReplacer1474, varReplacer1476;
        int varReplacer1466;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.rethinkbooks.api.App: com.rethinkbooks.api.App b()>();

        $r3 = virtualinvoke $r2.<com.rethinkbooks.api.App: android.content.SharedPreferences g()>();

        varReplacer1472 = "com.rethinkbooks.bookdownload.EncryptedBookKeyPairKeyPair";

        varReplacer1473 = null;

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer1472, varReplacer1473);

        if $r4 == null goto label38;

        varReplacer1466 = 0;

        $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r4, varReplacer1466);

     label01:
        $r6 = new java.io.ObjectInputStream;

        $r7 = new java.io.ByteArrayInputStream;

     label02:
        specialinvoke $r7.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        specialinvoke $r6.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r7);

     label03:
        $r8 = new java.security.spec.RSAPublicKeySpec;

     label04:
        $r9 = virtualinvoke $r6.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label05:
        $r10 = (java.math.BigInteger) $r9;

     label06:
        $r9 = virtualinvoke $r6.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label07:
        $r11 = (java.math.BigInteger) $r9;

     label08:
        specialinvoke $r8.<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r10, $r11);

     label09:
        $r1 = new java.security.spec.RSAPrivateKeySpec;

     label10:
        $r9 = virtualinvoke $r6.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label11:
        $r10 = (java.math.BigInteger) $r9;

     label12:
        $r9 = virtualinvoke $r6.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label13:
        $r11 = (java.math.BigInteger) $r9;

     label14:
        specialinvoke $r1.<java.security.spec.RSAPrivateKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r10, $r11);

        varReplacer1469 = "RSA";

        $r12 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1469);

        $r13 = virtualinvoke $r12.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8);

        $r14 = virtualinvoke $r12.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r1);

     label15:
        $r15 = new java.security.KeyPair;

     label16:
        specialinvoke $r15.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r13, $r14);

     label17:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r6);

        return $r15;

     label18:
        $r16 := @caughtexception;

        $r6 = null;

     label19:
        varReplacer1475 = "Could not read keys file.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1475, $r16);

     label20:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r6);

        varReplacer1474 = null;

        return varReplacer1474;

     label21:
        $r17 := @caughtexception;

        $r6 = null;

     label22:
        varReplacer1470 = "Could not read keys file.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1470, $r17);

     label23:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r6);

        varReplacer1465 = null;

        return varReplacer1465;

     label24:
        $r18 := @caughtexception;

        $r6 = null;

     label25:
        varReplacer1464 = "Could not read keys file.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1464, $r18);

     label26:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r6);

        varReplacer1476 = null;

        return varReplacer1476;

     label27:
        $r19 := @caughtexception;

        $r6 = null;

     label28:
        varReplacer1467 = "Could not read keys file.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1467, $r19);

     label29:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r6);

        varReplacer1471 = null;

        return varReplacer1471;

     label30:
        $r20 := @caughtexception;

        $r6 = null;

     label31:
        staticinvoke <org.apache.commons.io.d: void a(java.io.InputStream)>($r6);

        throw $r20;

     label32:
        $r20 := @caughtexception;

        goto label31;

     label33:
        $r20 := @caughtexception;

        goto label31;

     label34:
        $r19 := @caughtexception;

        goto label28;

     label35:
        $r18 := @caughtexception;

        goto label25;

     label36:
        $r17 := @caughtexception;

        goto label22;

     label37:
        $r16 := @caughtexception;

        goto label19;

     label38:
        varReplacer1468 = null;

        return varReplacer1468;

        catch java.io.IOException from label02 to label03 with label18;
        catch java.lang.ClassNotFoundException from label02 to label03 with label21;
        catch java.security.NoSuchAlgorithmException from label02 to label03 with label24;
        catch java.security.spec.InvalidKeySpecException from label02 to label03 with label27;
        catch java.lang.Throwable from label01 to label03 with label30;
        catch java.io.IOException from label04 to label05 with label37;
        catch java.io.IOException from label06 to label07 with label37;
        catch java.io.IOException from label08 to label09 with label37;
        catch java.io.IOException from label10 to label11 with label37;
        catch java.io.IOException from label12 to label13 with label37;
        catch java.io.IOException from label14 to label15 with label37;
        catch java.io.IOException from label16 to label17 with label37;
        catch java.lang.ClassNotFoundException from label04 to label05 with label36;
        catch java.lang.ClassNotFoundException from label06 to label07 with label36;
        catch java.lang.ClassNotFoundException from label08 to label09 with label36;
        catch java.lang.ClassNotFoundException from label10 to label11 with label36;
        catch java.lang.ClassNotFoundException from label12 to label13 with label36;
        catch java.lang.ClassNotFoundException from label14 to label15 with label36;
        catch java.lang.ClassNotFoundException from label16 to label17 with label36;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label35;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label35;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label35;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label35;
        catch java.security.NoSuchAlgorithmException from label12 to label13 with label35;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label35;
        catch java.security.NoSuchAlgorithmException from label16 to label17 with label35;
        catch java.security.spec.InvalidKeySpecException from label04 to label05 with label34;
        catch java.security.spec.InvalidKeySpecException from label06 to label07 with label34;
        catch java.security.spec.InvalidKeySpecException from label08 to label09 with label34;
        catch java.security.spec.InvalidKeySpecException from label10 to label11 with label34;
        catch java.security.spec.InvalidKeySpecException from label12 to label13 with label34;
        catch java.security.spec.InvalidKeySpecException from label14 to label15 with label34;
        catch java.security.spec.InvalidKeySpecException from label16 to label17 with label34;
        catch java.lang.Throwable from label03 to label17 with label32;
        catch java.lang.Throwable from label19 to label20 with label33;
        catch java.lang.Throwable from label22 to label23 with label32;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label28 to label29 with label32;
    }

    private static java.security.KeyPair c()
    {
        java.security.KeyPairGenerator $r0;
        java.security.KeyPair $r1;
        java.lang.Throwable $r2;
        null_type varReplacer1482;
        java.lang.String varReplacer1483, varReplacer1485;
        int varReplacer1484;

     label1:
        nop;

        varReplacer1483 = "RSA";

        $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer1483);

        varReplacer1484 = 1024;

        virtualinvoke $r0.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer1484);

        $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        varReplacer1485 = "Could not generate new key pair.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1485, $r2);

        varReplacer1482 = null;

        return varReplacer1482;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public java.lang.String a()
    {
        vf $r0;
        java.security.KeyPair $r1;
        java.security.PublicKey $r2;
        byte[] $r3;
        java.lang.String $r4;

        $r0 := @this: vf;

        $r1 = $r0.<vf: java.security.KeyPair a>;

        $r2 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r3 = interfaceinvoke $r2.<java.security.PublicKey: byte[] getEncoded()>();

        $r4 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, 2);

        return $r4;
    }

    public java.security.Key a(java.lang.String)
    {
        vf $r0;
        java.lang.String $r1, varReplacer1450, varReplacer1451, varReplacer1452, varReplacer1454, varReplacer1457, varReplacer1458, varReplacer1459;
        byte[] $r2;
        javax.crypto.Cipher $r3;
        java.security.KeyPair $r4;
        java.security.PrivateKey $r5;
        javax.crypto.spec.SecretKeySpec $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11;
        null_type varReplacer1453, varReplacer1455, varReplacer1460, varReplacer1461, varReplacer1463;
        int varReplacer1456, varReplacer1462;

        nop;

        $r0 := @this: vf;

        $r1 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        varReplacer1462 = 2;

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, varReplacer1462);

     label01:
        varReplacer1452 = "RSA/None/PKCS1Padding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1452);

     label02:
        $r4 = $r0.<vf: java.security.KeyPair a>;

     label03:
        $r5 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        varReplacer1456 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1456, $r5);

        $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2);

     label04:
        $r6 = new javax.crypto.spec.SecretKeySpec;

     label05:
        varReplacer1457 = "AES";

        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1457);

     label06:
        return $r6;

     label07:
        $r7 := @caughtexception;

        varReplacer1458 = "Could not decrypt book key.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1458, $r7);

        varReplacer1463 = null;

        return varReplacer1463;

     label08:
        $r8 := @caughtexception;

        varReplacer1450 = "Could not decrypt book key.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1450, $r8);

        varReplacer1455 = null;

        return varReplacer1455;

     label09:
        $r9 := @caughtexception;

        varReplacer1454 = "Could not decrypt book key.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1454, $r9);

        varReplacer1453 = null;

        return varReplacer1453;

     label10:
        $r10 := @caughtexception;

        varReplacer1459 = "Could not decrypt book key.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1459, $r10);

        varReplacer1461 = null;

        return varReplacer1461;

     label11:
        $r11 := @caughtexception;

        varReplacer1451 = "Could not decrypt book key.";

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>(varReplacer1451, $r11);

        varReplacer1460 = null;

        return varReplacer1460;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label07;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label07;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label07;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label08;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label08;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label08;
        catch java.security.InvalidKeyException from label01 to label02 with label09;
        catch java.security.InvalidKeyException from label03 to label04 with label09;
        catch java.security.InvalidKeyException from label05 to label06 with label09;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label10;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label10;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label10;
        catch javax.crypto.BadPaddingException from label01 to label02 with label11;
        catch javax.crypto.BadPaddingException from label03 to label04 with label11;
        catch javax.crypto.BadPaddingException from label05 to label06 with label11;
    }

    public java.lang.String b()
    {
        vf $r0;
        java.security.SecureRandom $r1;
        byte[] $r2;
        javax.crypto.Cipher $r3;
        java.security.KeyPair $r4;
        java.security.PublicKey $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11;

        $r0 := @this: vf;

        $r1 = new java.security.SecureRandom;

        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();

        $r2 = newarray (byte)[16];

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2);

     label01:
        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/None/PKCS1Padding");

     label02:
        $r4 = $r0.<vf: java.security.KeyPair a>;

     label03:
        $r5 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r5);

        $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2);

        $r6 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r2, 2);

     label04:
        return $r6;

     label05:
        $r7 := @caughtexception;

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>("Could not decrypt book key.", $r7);

     label06:
        return null;

     label07:
        $r8 := @caughtexception;

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>("Could not decrypt book key.", $r8);

        goto label06;

     label08:
        $r9 := @caughtexception;

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>("Could not decrypt book key.", $r9);

        goto label06;

     label09:
        $r10 := @caughtexception;

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>("Could not decrypt book key.", $r10);

        goto label06;

     label10:
        $r11 := @caughtexception;

        staticinvoke <com.rethinkbooks.api.f: void b(java.lang.String,java.lang.Throwable)>("Could not decrypt book key.", $r11);

        goto label06;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label07;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label07;
        catch java.security.InvalidKeyException from label01 to label02 with label08;
        catch java.security.InvalidKeyException from label03 to label04 with label08;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label09;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label09;
        catch javax.crypto.BadPaddingException from label01 to label02 with label10;
        catch javax.crypto.BadPaddingException from label03 to label04 with label10;
    }
}
