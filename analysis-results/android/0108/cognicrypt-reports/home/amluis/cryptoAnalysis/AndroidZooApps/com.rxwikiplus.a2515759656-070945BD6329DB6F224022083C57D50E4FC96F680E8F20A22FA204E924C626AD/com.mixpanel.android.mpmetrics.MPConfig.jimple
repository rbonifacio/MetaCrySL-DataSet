public class com.mixpanel.android.mpmetrics.MPConfig extends java.lang.Object
{
    public static boolean DEBUG;
    private static final java.lang.String LOGTAG;
    static final int MAX_NOTIFICATION_CACHE_COUNT;
    static final java.lang.String REFERRER_PREFS_NAME;
    public static final int UI_FEATURES_MIN_API;
    public static final java.lang.String VERSION;
    private static com.mixpanel.android.mpmetrics.MPConfig sInstance;
    private static final java.lang.Object sInstanceLock;
    private final boolean mAutoShowMixpanelUpdates;
    private final int mBulkUploadLimit;
    private final int mDataExpiration;
    private final int mDebugFlushInterval;
    private final java.lang.String mDecideEndpoint;
    private final java.lang.String mDecideFallbackEndpoint;
    private final boolean mDisableAppOpenEvent;
    private final boolean mDisableEmulatorBindingUI;
    private final boolean mDisableFallback;
    private final boolean mDisableGestureBindingUI;
    private final java.lang.String mEditorUrl;
    private final java.lang.String mEventsEndpoint;
    private final java.lang.String mEventsFallbackEndpoint;
    private final int mFlushInterval;
    private final int mMinimumDatabaseLimit;
    private final java.lang.String mPeopleEndpoint;
    private final java.lang.String mPeopleFallbackEndpoint;
    private final java.lang.String mResourcePackageName;
    private javax.net.ssl.SSLSocketFactory mSSLSocketFactory;
    private final boolean mTestMode;

    static void <clinit>()
    {
        java.lang.Object $r0;
        int varReplacer503;

        nop;

        varReplacer503 = 0;

        <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG> = varReplacer503;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.mixpanel.android.mpmetrics.MPConfig: java.lang.Object sInstanceLock> = $r0;

        return;
    }

    void <init>(android.os.Bundle, android.content.Context)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        android.os.Bundle $r1;
        android.content.Context $r2;
        java.lang.Throwable $r3;
        javax.net.ssl.SSLContext $r4;
        javax.net.ssl.SSLSocketFactory $r5;
        boolean $z0, $z1;
        int $i0, varReplacer520, varReplacer522, varReplacer532, varReplacer534, varReplacer537, varReplacer539, varReplacer542, varReplacer544, varReplacer564, varReplacer568, varReplacer571, varReplacer575, varReplacer577;
        java.lang.String $r6, $r7, varReplacer507, varReplacer508, varReplacer509, varReplacer510, varReplacer511, varReplacer512, varReplacer513, varReplacer514, varReplacer515, varReplacer516, varReplacer517, varReplacer518, varReplacer519, varReplacer521, varReplacer523, varReplacer524, varReplacer525, varReplacer526, varReplacer527, varReplacer528, varReplacer529, varReplacer530, varReplacer531, varReplacer533, varReplacer535, varReplacer536, varReplacer538, varReplacer540, varReplacer541, varReplacer543, varReplacer545, varReplacer546, varReplacer547, varReplacer548, varReplacer549, varReplacer550, varReplacer551, varReplacer552, varReplacer553, varReplacer554, varReplacer555, varReplacer556, varReplacer557, varReplacer558, varReplacer559, varReplacer560, varReplacer561, varReplacer562, varReplacer563, varReplacer565, varReplacer566, varReplacer567, varReplacer569, varReplacer570, varReplacer572, varReplacer573, varReplacer574, varReplacer576, varReplacer578, varReplacer582, varReplacer583, varReplacer584, varReplacer585, varReplacer586;
        java.lang.StringBuilder $r8;
        null_type varReplacer579, varReplacer580, varReplacer581;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: android.os.Bundle;

        $r2 := @parameter1: android.content.Context;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

     label01:
        varReplacer511 = "TLS";

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer511);

        varReplacer579 = null;

        varReplacer580 = null;

        varReplacer581 = null;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer579, varReplacer579, varReplacer579);

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label02:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory> = $r5;

        varReplacer519 = "com.mixpanel.android.MPConfig.EnableDebugLogging";

        varReplacer520 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer519, varReplacer520);

        <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG> = $z0;

        varReplacer582 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys";

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean containsKey(java.lang.String)>(varReplacer582);

        if $z0 == 0 goto label03;

        varReplacer517 = "MixpanelAPI.Conf";

        varReplacer518 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys has been deprecated in favor of com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates. Please update this key as soon as possible.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer517, varReplacer518);

     label03:
        varReplacer533 = "com.mixpanel.android.MPConfig.BulkUploadLimit";

        varReplacer534 = 40;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer533, varReplacer534);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mBulkUploadLimit> = $i0;

        varReplacer576 = "com.mixpanel.android.MPConfig.FlushInterval";

        varReplacer577 = 60000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer576, varReplacer577);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mFlushInterval> = $i0;

        varReplacer563 = "com.mixpanel.android.MPConfig.DebugFlushInterval";

        varReplacer564 = 1000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer563, varReplacer564);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDebugFlushInterval> = $i0;

        varReplacer521 = "com.mixpanel.android.MPConfig.DataExpiration";

        varReplacer522 = 432000000;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer521, varReplacer522);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDataExpiration> = $i0;

        varReplacer531 = "com.mixpanel.android.MPConfig.MinimumDatabaseLimit";

        varReplacer532 = 20971520;

        $i0 = virtualinvoke $r1.<android.os.Bundle: int getInt(java.lang.String,int)>(varReplacer531, varReplacer532);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mMinimumDatabaseLimit> = $i0;

        varReplacer574 = "com.mixpanel.android.MPConfig.DisableFallback";

        varReplacer575 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer574, varReplacer575);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableFallback> = $z0;

        varReplacer545 = "com.mixpanel.android.MPConfig.ResourcePackageName";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer545);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mResourcePackageName> = $r6;

        varReplacer541 = "com.mixpanel.android.MPConfig.DisableGestureBindingUI";

        varReplacer542 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer541, varReplacer542);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableGestureBindingUI> = $z0;

        varReplacer536 = "com.mixpanel.android.MPConfig.DisableEmulatorBindingUI";

        varReplacer537 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer536, varReplacer537);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableEmulatorBindingUI> = $z0;

        varReplacer567 = "com.mixpanel.android.MPConfig.DisableAppOpenEvent";

        varReplacer568 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer567, varReplacer568);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableAppOpenEvent> = $z0;

        varReplacer543 = "com.mixpanel.android.MPConfig.AutoCheckForSurveys";

        varReplacer544 = 1;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer543, varReplacer544);

        varReplacer538 = "com.mixpanel.android.MPConfig.AutoShowMixpanelUpdates";

        varReplacer539 = 1;

        $z1 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer538, varReplacer539);

        if $z0 == 0 goto label13;

        if $z1 == 0 goto label13;

        $z0 = 1;

     label04:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mAutoShowMixpanelUpdates> = $z0;

        varReplacer570 = "com.mixpanel.android.MPConfig.TestMode";

        varReplacer571 = 0;

        $z0 = virtualinvoke $r1.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>(varReplacer570, varReplacer571);

        $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mTestMode> = $z0;

        varReplacer578 = "com.mixpanel.android.MPConfig.EventsEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer578);

        $r7 = $r6;

        if $r6 != null goto label05;

        $r7 = "https://api.mixpanel.com/track?ip=1";

     label05:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsEndpoint> = $r7;

        varReplacer527 = "com.mixpanel.android.MPConfig.EventsFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer527);

        $r7 = $r6;

        if $r6 != null goto label06;

        $r7 = "http://api.mixpanel.com/track?ip=1";

     label06:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsFallbackEndpoint> = $r7;

        varReplacer528 = "com.mixpanel.android.MPConfig.PeopleEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer528);

        $r7 = $r6;

        if $r6 != null goto label07;

        $r7 = "https://api.mixpanel.com/engage";

     label07:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleEndpoint> = $r7;

        varReplacer552 = "com.mixpanel.android.MPConfig.PeopleFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer552);

        $r7 = $r6;

        if $r6 != null goto label08;

        $r7 = "http://api.mixpanel.com/engage";

     label08:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleFallbackEndpoint> = $r7;

        varReplacer566 = "com.mixpanel.android.MPConfig.DecideEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer566);

        $r7 = $r6;

        if $r6 != null goto label09;

        $r7 = "https://decide.mixpanel.com/decide";

     label09:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideEndpoint> = $r7;

        varReplacer586 = "com.mixpanel.android.MPConfig.DecideFallbackEndpoint";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer586);

        $r7 = $r6;

        if $r6 != null goto label10;

        $r7 = "http://decide.mixpanel.com/decide";

     label10:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideFallbackEndpoint> = $r7;

        varReplacer525 = "com.mixpanel.android.MPConfig.EditorUrl";

        $r6 = virtualinvoke $r1.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer525);

        $r7 = $r6;

        if $r6 != null goto label11;

        $r7 = "wss://switchboard.mixpanel.com/connect/";

     label11:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEditorUrl> = $r7;

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        if $z0 == 0 goto label14;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer559 = "Mixpanel configured with:\n    AutoShowMixpanelUpdates ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer559);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getAutoShowMixpanelUpdates()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer510 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer510);

        varReplacer523 = "    BulkUploadLimit ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer523);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getBulkUploadLimit()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer585 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer585);

        varReplacer512 = "    FlushInterval ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer512);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getFlushInterval(android.content.Context)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer551 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer551);

        varReplacer549 = "    DataExpiration ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer549);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getDataExpiration()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer547 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer547);

        varReplacer526 = "    MinimumDatabaseLimit ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer526);

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getMinimumDatabaseLimit()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer573 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer573);

        varReplacer584 = "    DisableFallback ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer584);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableFallback()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer556 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer556);

        varReplacer516 = "    DisableAppOpenEvent ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer516);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableAppOpenEvent()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer515 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer515);

        varReplacer524 = "    DisableDeviceUIBinding ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer524);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableGestureBindingUI()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer540 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer540);

        varReplacer562 = "    DisableEmulatorUIBinding ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer562);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getDisableEmulatorBindingUI()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer550 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer550);

        varReplacer572 = "    EnableDebugLogging ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer572);

        $z0 = <com.mixpanel.android.mpmetrics.MPConfig: boolean DEBUG>;

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer507 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer507);

        varReplacer565 = "    TestMode ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer565);

        $z0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean getTestMode()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        varReplacer557 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer557);

        varReplacer514 = "    EventsEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer514);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEventsEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer548 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer548);

        varReplacer535 = "    PeopleEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer535);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getPeopleEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer508 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer508);

        varReplacer530 = "    DecideEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer530);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getDecideEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer561 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer561);

        varReplacer583 = "    EventsFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer583);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEventsFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer553 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer553);

        varReplacer569 = "    PeopleFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer569);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getPeopleFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer558 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer558);

        varReplacer529 = "    DecideFallbackEndpoint ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer529);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getDecideFallbackEndpoint()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer513 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer513);

        varReplacer509 = "    EditorUrl ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer509);

        $r6 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String getEditorUrl()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer560 = "\n";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer560);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer546 = "MixpanelAPI.Conf";

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>(varReplacer546, $r6);

        return;

     label12:
        $r3 := @caughtexception;

        varReplacer554 = "MixpanelAPI.Conf";

        varReplacer555 = "System has no SSL support. Built-in events editor will not be available";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer554, varReplacer555, $r3);

        $r5 = null;

        goto label02;

     label13:
        $z0 = 0;

        goto label04;

     label14:
        return;

        catch java.security.GeneralSecurityException from label01 to label02 with label12;
    }

    public static com.mixpanel.android.mpmetrics.MPConfig getInstance(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        com.mixpanel.android.mpmetrics.MPConfig $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = <com.mixpanel.android.mpmetrics.MPConfig: java.lang.Object sInstanceLock>;

        entermonitor $r1;

     label1:
        $r2 = <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance>;

        if $r2 != null goto label2;

        $r0 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = staticinvoke <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig readConfig(android.content.Context)>($r0);

        <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance> = $r2;

     label2:
        exitmonitor $r1;

     label3:
        $r2 = <com.mixpanel.android.mpmetrics.MPConfig: com.mixpanel.android.mpmetrics.MPConfig sInstance>;

        return $r2;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor $r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    static com.mixpanel.android.mpmetrics.MPConfig readConfig(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        java.lang.String $r2, varReplacer504;
        android.content.pm.PackageManager $r3;
        android.content.pm.ApplicationInfo $r4;
        android.os.Bundle $r5;
        com.mixpanel.android.mpmetrics.MPConfig $r6;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8;
        int varReplacer505;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

     label1:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        varReplacer505 = 128;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, varReplacer505);

     label2:
        $r5 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r5 != null goto label4;

        $r5 = new android.os.Bundle;

     label3:
        specialinvoke $r5.<android.os.Bundle: void <init>()>();

     label4:
        $r6 = new com.mixpanel.android.mpmetrics.MPConfig;

     label5:
        specialinvoke $r6.<com.mixpanel.android.mpmetrics.MPConfig: void <init>(android.os.Bundle,android.content.Context)>($r5, $r0);

     label6:
        return $r6;

     label7:
        $r1 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer504 = "Can\'t configure Mixpanel with package name ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer504);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r2, $r1);

        throw $r7;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label7;
        catch android.content.pm.PackageManager$NameNotFoundException from label5 to label6 with label7;
    }

    public boolean getAutoShowMixpanelUpdates()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mAutoShowMixpanelUpdates>;

        return z0;
    }

    public int getBulkUploadLimit()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mBulkUploadLimit>;

        return i0;
    }

    public int getDataExpiration()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDataExpiration>;

        return i0;
    }

    public java.lang.String getDecideEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideEndpoint>;

        return r1;
    }

    public java.lang.String getDecideFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mDecideFallbackEndpoint>;

        return r1;
    }

    public boolean getDisableAppOpenEvent()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableAppOpenEvent>;

        return z0;
    }

    public boolean getDisableEmulatorBindingUI()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableEmulatorBindingUI>;

        return z0;
    }

    public boolean getDisableFallback()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableFallback>;

        return z0;
    }

    public boolean getDisableGestureBindingUI()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mDisableGestureBindingUI>;

        return z0;
    }

    public java.lang.String getEditorUrl()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEditorUrl>;

        return r1;
    }

    public java.lang.String getEventsEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsEndpoint>;

        return r1;
    }

    public java.lang.String getEventsFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mEventsFallbackEndpoint>;

        return r1;
    }

    public int getFlushInterval()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int $i0;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $i0 = virtualinvoke $r0.<com.mixpanel.android.mpmetrics.MPConfig: int getFlushInterval(android.content.Context)>(null);

        return $i0;
    }

    public int getFlushInterval(android.content.Context)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        android.content.Context $r1;
        android.content.pm.ApplicationInfo $r2;
        int $i0;
        boolean $z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: android.content.Context;

        if $r1 == null goto label2;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i0 = $r2.<android.content.pm.ApplicationInfo: int flags>;

        $i0 = $i0 & 2;

        $r2.<android.content.pm.ApplicationInfo: int flags> = $i0;

        if $i0 == 0 goto label2;

        $z0 = 1;

     label1:
        if $z0 == 0 goto label3;

        $i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mDebugFlushInterval>;

        return $i0;

     label2:
        $z0 = 0;

        goto label1;

     label3:
        $i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mFlushInterval>;

        return $i0;
    }

    public int getMinimumDatabaseLimit()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        int i0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        i0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: int mMinimumDatabaseLimit>;

        return i0;
    }

    public java.lang.String getPeopleEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleEndpoint>;

        return r1;
    }

    public java.lang.String getPeopleFallbackEndpoint()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mPeopleFallbackEndpoint>;

        return r1;
    }

    public java.lang.String getResourcePackageName()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        r1 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: java.lang.String mResourcePackageName>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        java.lang.Throwable $r1;
        javax.net.ssl.SSLSocketFactory r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        entermonitor $r0;

     label1:
        r2 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory>;

     label2:
        exitmonitor $r0;

        return r2;

     label3:
        $r1 := @caughtexception;

        exitmonitor $r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean getTestMode()
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        boolean z0;

        nop;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        z0 = $r0.<com.mixpanel.android.mpmetrics.MPConfig: boolean mTestMode>;

        return z0;
    }

    public void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
    {
        com.mixpanel.android.mpmetrics.MPConfig $r0;
        javax.net.ssl.SSLSocketFactory $r1;
        java.lang.Throwable $r2;

        $r0 := @this: com.mixpanel.android.mpmetrics.MPConfig;

        $r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        entermonitor $r0;

     label1:
        $r0.<com.mixpanel.android.mpmetrics.MPConfig: javax.net.ssl.SSLSocketFactory mSSLSocketFactory> = $r1;

     label2:
        exitmonitor $r0;

        return;

     label3:
        $r2 := @caughtexception;

        exitmonitor $r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
