Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6598)
		Method: <com.billdesk.utils.i: java.lang.String b(java.lang.String)>
		SHA-256: 3218326f89101cfb287e007293d89d1f9122163a25681f110a2e7230aa58a3dc
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.billdesk.utils.i: java.lang.String b(java.lang.String)>
		SHA-256: 3ba4f9d8833a61622516b01b123659930e70c73ad41466558773627d91ebe68b
		Secure: false
	Object:
		Variable: varReplacer6598
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6598)
		Method: <com.billdesk.utils.i: java.lang.String b(java.lang.String)>
		SHA-256: f8f9cf32347ef33437f525aea732fe6df22f91dfe76f4059ffdf16e57c3b93ec
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.billdesk.utils.i: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 48e8241ececcbc09bb24457f6f13063ede59203b8b541943bcb20fa8ebbd8c92
		Secure: false
	Object:
		Variable: varReplacer2186
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2185, varReplacer2186)
		Method: <com.billdesk.utils.i: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 4a910d1d129efe4bc4fc3c448e4061681bb8010f2fc25863dd1db9242469f005
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6594)
		Method: <com.billdesk.utils.i: java.lang.String c(java.lang.String)>
		SHA-256: 23cf26e67e07cae9f9b24d60d3a35ec40d80e6548ab5119dd91c1d6b0e7932a5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11050)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 8194bc47df80f528d6d51033f1723e7afb972b49e5b582d8aa37b91a97cb2d83
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.billdesk.utils.i: java.lang.String c()>
		SHA-256: 8915e8a7a9f45066ff433121a330c832374a1ad8c62e9b1e69b9bd88ae959fd0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer6588, varReplacer6589)
		Method: <com.billdesk.utils.i: java.lang.String c(java.lang.String)>
		SHA-256: 2769273e5b8931d2b77ad93ea9e703dc5a04d43250f76294083eb67e1d6babf3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer6600, varReplacer6601)
		Method: <com.billdesk.utils.i: java.lang.String b(java.lang.String)>
		SHA-256: 6eddf66026cb3332c005265759199db3e64bf1aadbff9c4bdd795ffacacb2b7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11622)
		Method: <com.google.ads.conversiontracking.g: java.lang.String e(android.content.Context)>
		SHA-256: 10e6410b776b4b7703395c9dffce3d2229d55e9049685071bc6de1a5d6691e22
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.billdesk.utils.i: java.lang.String c()>
		SHA-256: e4309269a15074f14955cb99ad05460046b1dc571b640d17d7a74f6b50960cde
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.billdesk.utils.i: java.lang.String c()>
		SHA-256: 89c71c6af85eae707bb03315b27841c63530b0436efc49d08352ca58198461cf
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.billdesk.utils.i: java.lang.String c(java.lang.String)>
		SHA-256: 85fe52a81d947e582324491a19b8b6704137eaf31bc85d69e61b2cd05e8a4bfc
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2176)
		Method: <com.billdesk.utils.i: java.lang.String c()>
		SHA-256: 62f3f4f5d3afa2217cfd6ee33855e3e106a7cd04368975c8ce09dc1c6909caa1
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.conversiontracking.g: java.lang.String e(android.content.Context)>
		SHA-256: a79e94387df141fe9dcb34d2ae3fc05c5097b22bbdc3a1b0291ebb4f6436ceb4
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer2184)
		Method: <com.billdesk.utils.i: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 10d21863d6090b66405c2e46e98ec16507136bd8bbd0922e17129ff613e6a690
		Secure: false
	Object:
		Variable: varReplacer6594
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6594)
		Method: <com.billdesk.utils.i: java.lang.String c(java.lang.String)>
		SHA-256: 99fe359a51cc016f0046720dd500131c5ffa94ff47bd6fc794913fe4a3c7cc8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2185, varReplacer2186)
		Method: <com.billdesk.utils.i: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 911da55dd49e67fe76367593899f96020bd6b867890fed89c9ea87b08c33e08a
		Secure: false

Findings in Java Class: com.billdesk.utils.i

	 in Method: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #10d21863d6090b66405c2e46e98ec16507136bd8bbd0922e17129ff613e6a690)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer2184)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #911da55dd49e67fe76367593899f96020bd6b867890fed89c9ea87b08c33e08a)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2185, varReplacer2186)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #911da55dd49e67fe76367593899f96020bd6b867890fed89c9ea87b08c33e08a)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2185, varReplacer2186)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #911da55dd49e67fe76367593899f96020bd6b867890fed89c9ea87b08c33e08a)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2185, varReplacer2186)


	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2769273e5b8931d2b77ad93ea9e703dc5a04d43250f76294083eb67e1d6babf3)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer6588, varReplacer6589)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6594)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2769273e5b8931d2b77ad93ea9e703dc5a04d43250f76294083eb67e1d6babf3)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer6588, varReplacer6589)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6593, $r3)


	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6eddf66026cb3332c005265759199db3e64bf1aadbff9c4bdd795ffacacb2b7)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer6600, varReplacer6601)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6eddf66026cb3332c005265759199db3e64bf1aadbff9c4bdd795ffacacb2b7)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer6600, varReplacer6601)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6595, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6598)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 20

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 1
	ConstraintError: 6
	IncompleteOperationError: 1
	RequiredPredicateError: 6
=====================================================================