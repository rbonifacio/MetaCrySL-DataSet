Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: ee76d2bfe9bfb0e0cb94119aaa1d667dfd06540ffafedff71218aae2fa638f2f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 1b14969e783f50655d3bd517cc82f9c4f0fd3a29a3e8d224d34ce476f69fcf6d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.lang.String Decrypt(java.lang.String)>
		SHA-256: 894759b2db79125b4010be47049f0303bbed9cfe8bd8fa5012f5b950a7f70f5e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 80036ccae0362268b16dd4497906104c1e7454942f99af3c6bbc930a9d7c3571
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: f5d4bf9ca7f7fb9000cf6a89dae134f0d93e52312b490bf6d8a3635e0c274af1
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2198)
		Method: <com.amap.api.mapcore.util.ae: byte[] a(byte[],java.security.Key)>
		SHA-256: 2e7712cdc316c2e7d1fb86e33ead522c5762b5ada1578f023169d54fa8a31a9c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore.util.ae: byte[] a(byte[],java.security.Key)>
		SHA-256: 7118cedcd1272beec6441677092e34eca25d1e26247df61777ff03f1cbe575ec
		Secure: false
	Object:
		Variable: varReplacer8163
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8163)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 40e14b7153fb9c332141f330d5a68604704c7390098f40a376609028d48f2428
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: 589f10f65a2d04fe4b0bb06abf8101daf047c6762569191c753224ee717411cc
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 67f8276464ff2b603934593edfd3991f3b602712d92e93712f83733b7783915
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: a270ad1e474c7014c22f8189d40a6ed8de9e6ca6418b6f9a16de8aea80cdb347
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10372)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: 2d28ef7cc7b3e6711f3c56e99d85317292234258ae53e434df0b21bf6b2af9e4
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8163)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: bede80ac26babae3973098dce0eda9c9e33f4eda201e3b57b3f075122a9cf902
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8258)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 98dd46d41fb2f15093b21c1761217ff68556d934cbe9d3129b094d3e90ce1b5f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore.util.af: byte[] e(java.lang.String)>
		SHA-256: 92b4774bded19ea50d02608588a010229f25214f28a8e9a0b442768cebd56e74
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1463)
		Method: <com.tencent.map.b.j: java.lang.String a(java.lang.String)>
		SHA-256: 60cfa56cc0df2ffdefbc1dd6ed028f01e8949bb402ce83c3e272b9200bed9772
		Secure: true
	Object:
		Variable: varReplacer2435
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2435)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 3776d78267fd4501b5d387608bf02582997d78ece166c3030af0637302b4471a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8158)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: 3db69c5e4c2c0f1f5c18c13bd85136cb40872e78afab61fefe6525e81905432e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8251)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 52fda2d7967e5fb6895bcf1b2edaad364ff4c00d09cf36a9dfad4a0d4bbb7d68
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 843224542b8045866e2b201d3cf573220816f10246ae7402275589ce305416e0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9781)
		Method: <com.tencent.bugly.proguard.a: java.lang.String c(byte[])>
		SHA-256: 56087122e43d0ae77fbb17cf580af9fe8d0ec97d04b6e7b84e1e0b8db47181f9
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2360)
		Method: <com.amap.api.mapcore.util.aa: java.lang.String d(android.content.Context)>
		SHA-256: f07d35bdbdeda93d6b9860b60736c6b873a1e194969fae5af4a88ab93cd84759
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.bugly.proguard.a: java.lang.String c(byte[])>
		SHA-256: ff0d77755436d914fb56b3a2f634c3ad31326ca70bf4b6e2956b7ac053abda15
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: d5fc6a00628c92493961aa46e24d2ff45caf80798b927c9cbb038e6af52f14f6
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8156)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: 670074b03fb0d4053ef08332148da4e5b9dd9a027655f6f8aed1bb61a7679ae0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8162)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: feef8695a50f34bf03428dbbed754dd24e1845e0e20fe284b008e05e8b2e4a11
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: 6231d677a58346b93ae4827c3807ee04a717c38ebcd8a071789221fab4f16d51
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2431)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: bb4f54885bb08a52b5aba945db32f43b19d6592e4f0d0e4f34da187f94d4c20e
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.amap.api.mapcore.util.aa: java.lang.String d(android.content.Context)>
		SHA-256: c2dc3b755376c943b6f6ad74a0aebb51c7adb7be56922b9f704b66a7619fe7a7
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: 7cbd5d5d94f52e4331a8dca3938b3018a489aa8f58fb370c08b421666674c8e3
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: c4d4007881f660d31095047c858a7cddf0ade719a9b3b9bb76358ae5434d949b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.map.b.j: java.lang.String a(java.lang.String)>
		SHA-256: db395b22ced56c5ca633af477c861f58a097b1af3e802f766964c415de885445
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 7782097f1055b534e6d44451764bbb10690c9bff58e0be87a9fe2845542e39e4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8256)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 78fd526366c48d61b6f2dbe09f6b4a9cd5b6a87ba22c26a2d526502284cfddcd
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.service.n: int a()>
		SHA-256: a023cbedd15aeb08d4597292c13371032fd0867070577fd2b53e53fff5b500ca
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.sina.weibo.sdk.utils.MD5: java.lang.String hexdigest(byte[])>
		SHA-256: 16aa4c15dca4d2c82517c55b108c61e0c5de7c3d017811cd36da0633c8165603
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 896348da707dd1822855f5e5b10c716bff1dc73b7431e5a4c37c0dc968480211
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.sina.weibo.sdk.net.HttpManager: org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory()>
		SHA-256: 69839fb2317ad945c0b4b9ffb83d9288ad7e5826dc1c6ada88da2e60e8afceaf
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7411)
		Method: <com.sina.weibo.sdk.utils.MD5: java.lang.String hexdigest(byte[])>
		SHA-256: 530702d3eb5cb4dd66bc5fc9fa6d6414aeec49384e229d1f1f7a2ed144d6e799
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2438)
		Method: <com.amap.api.mapcore.util.af: byte[] e(java.lang.String)>
		SHA-256: 70141233b7a8165e8a1bc804fcf3165886a40046aef26d8c764ebc21f1750f72
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: 8e4d3ce3f6a3961627a164a718666216cbb71ad4d5d8d2a6bc5f52f33a56ba40
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7691)
		Method: <com.tencent.open.utils.Util: boolean a(android.content.Context)>
		SHA-256: 90a19a742cffc769b4bb5afcfaf258d23dfa0deec30b662f0e474a8977ff513d
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: bfdf7a7690f99313d7d90ffe799c08accc3face2ec5e8c2f9d6c2ccbb3a7f821
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 2472aefda38552dc0f4055d2972c26b41e8abea31e51e01e8293a5dd7f550933
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2435)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: e20c698453bb9ed970a4fdebac8769857e6226b9028055835f3237e581b4bbe0
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 206b4963140b17abac96861a36b9d2bee2e80bfd0be442b7244586e8f24c8e25
		Secure: false
	Object:
		Variable: varReplacer10276
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer10276)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.security.Key generateKey(java.lang.String)>
		SHA-256: f62831ac2465454ce6fd6e9342693ca9660ae20260b2ee2f49c2f7a307f2f519
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.tencent.open.utils.HttpUtils: org.apache.http.client.HttpClient getHttpClient(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 20492e4fb32e47e28a7ead4d25141df0a45263484a75ab23a7f3a5178dcc300c
		Secure: true
	Object:
		Variable: varReplacer8258
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8258)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: f8aa189fb6152b9ab777e01fa3ebb8c5f06fb9d390b229b5c00f241e76696102
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: 9d5518b928395bd05bce5b6b363adfca98533751c6f8b6369158fc7086bf8946
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: e3190b6f4323befbf18670a0eb10cd2790133ea7e985cb6f92d999f647f560e9
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer10276)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.security.Key generateKey(java.lang.String)>
		SHA-256: 8b80b90290bb2e545b894ef0bce77f08a684549092936b3b747803b64932d8f7
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8257)
		Method: <com.tencent.bugly.proguard.G: byte[] a(byte[])>
		SHA-256: 6025e8f4c0c8887feaeffbcdf2d31a6e40232966c3c262db9692df836c25dbd9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2746)
		Method: <com.sina.weibo.sdk.net.SSLSocketFactoryEx: void <init>(java.security.KeyStore)>
		SHA-256: b3d90a4a498e20474d266df5880fc85eab624e03f8dbd60a41d9d45a7e48118a
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.proguard.H: byte[] b(byte[])>
		SHA-256: af73d191f04fe76a3c80ddd9c6d7afb7b255a38fa62b970666b8234f23f01145
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2350)
		Method: <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>
		SHA-256: a3ba87dc2b49e66c5791a19a0ecccc08fd9469ecc049bfe32b12aea9cdb43486
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2826)
		Method: <com.tencent.open.utils.HttpUtils$MyX509TrustManager: void <init>()>
		SHA-256: 40221308167378b29a98da29f2e257d8d3f1bf0ccb86f964a2681a48d3c48378
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.ae: byte[] b(byte[],byte[])>
		SHA-256: 9f2ecbcf0ee8886570e73aedaf73524fe8fadcea7811ef0d9ef99da1547b845b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.H: byte[] a(byte[])>
		SHA-256: 5b930072ad5d1b3ed7c071611f426825e983b472eb593477709e101538243fa1
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10264)
		Method: <com.sina.weibo.sdk.utils.AesEncrypt: java.lang.String Decrypt(java.lang.String)>
		SHA-256: f7cb18504f55edad3c5d555a8f93b46956024835482911670b5f4df5ecc55035
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2821)
		Method: <com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: a14becf7c3623dc39f2272b77e95f8235288a5cb8c890b694208e89d07d04b67
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: edf8d4512ea4d685450853f37af1c60bdb4661ea96e0a8476dfe9d41f4bd92a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.mapcore.util.ac: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 389c07dc610e9470c8bbaee59735ccb0e4e113470448f046bbf75e4a029f4fbc
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.proguard.G: byte[] b(byte[])>
		SHA-256: 73f75e94dd18c8e60393fab7a10f7972581160a9f6bae754fd386d4cacec499
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.service.n: int a()>
		SHA-256: 16d7cd6aa4087b031a907b24534a6a500be48b38a3f079a76545d42f020f7354
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)
		Method: <com.sina.weibo.sdk.utils.AidTask: java.lang.String encryptRsa(java.lang.String,java.lang.String)>
		SHA-256: d2a1354d23d4474f7b0b87ca60a309fac7b03735277eb00bde8a2df7d932081c
		Secure: false

Findings in Java Class: com.amap.api.mapcore.util.ac

	 in Method: java.lang.String c(android.content.Context,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #a3ba87dc2b49e66c5791a19a0ecccc08fd9469ecc049bfe32b12aea9cdb43486)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2350)


Findings in Java Class: com.tencent.open.utils.HttpUtils$MyX509TrustManager

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #40221308167378b29a98da29f2e257d8d3f1bf0ccb86f964a2681a48d3c48378)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #40221308167378b29a98da29f2e257d8d3f1bf0ccb86f964a2681a48d3c48378)
			First parameter (with value "JKS") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2826)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #40221308167378b29a98da29f2e257d8d3f1bf0ccb86f964a2681a48d3c48378)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = null

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #40221308167378b29a98da29f2e257d8d3f1bf0ccb86f964a2681a48d3c48378)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r5)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #40221308167378b29a98da29f2e257d8d3f1bf0ccb86f964a2681a48d3c48378)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2826)


Findings in Java Class: cn.jpush.android.util.g

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.tencent.bugly.proguard.H

	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8157, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8157, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3db69c5e4c2c0f1f5c18c13bd85136cb40872e78afab61fefe6525e81905432e)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {TDEA, AES, DESEDE, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8158)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #670074b03fb0d4053ef08332148da4e5b9dd9a027655f6f8aed1bb61a7679ae0)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8156)


	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #52fda2d7967e5fb6895bcf1b2edaad364ff4c00d09cf36a9dfad4a0d4bbb7d68)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8251)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8254, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #78fd526366c48d61b6f2dbe09f6b4a9cd5b6a87ba22c26a2d526502284cfddcd)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {TDEA, AES, DESEDE, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8256)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


Findings in Java Class: com.sina.weibo.sdk.utils.AidTask

	 in Method: java.lang.String encryptRsa(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10376, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2d28ef7cc7b3e6711f3c56e99d85317292234258ae53e434df0b21bf6b2af9e4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #2d28ef7cc7b3e6711f3c56e99d85317292234258ae53e434df0b21bf6b2af9e4)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r6, $i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2d28ef7cc7b3e6711f3c56e99d85317292234258ae53e434df0b21bf6b2af9e4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10376, $r4)


Findings in Java Class: com.amap.api.mapcore.util.ae

	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2199, $r1)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2432, $r7, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2432, $r7, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


Findings in Java Class: com.tencent.bugly.proguard.G

	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8260, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8258)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8164, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8164, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8163)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)


Findings in Java Class: com.sina.weibo.sdk.utils.AesEncrypt

	 in Method: java.security.Key generateKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer10276)


	 in Method: java.lang.String Decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10265, $r5)


Findings in Java Class: com.sina.weibo.sdk.net.SSLSocketFactoryEx

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2747, r6, varReplacer2747)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2747, r6, varReplacer2747)


Findings in Java Class: com.tencent.open.utils.HttpUtils$CustomSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2822, r7, varReplacer2822)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2822, r7, varReplacer2822)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 67

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 2
	RequiredPredicateError: 25
	ConstraintError: 5
	ImpreciseValueExtractionError: 1
	IncompleteOperationError: 6
	NeverTypeOfError: 1
=====================================================================