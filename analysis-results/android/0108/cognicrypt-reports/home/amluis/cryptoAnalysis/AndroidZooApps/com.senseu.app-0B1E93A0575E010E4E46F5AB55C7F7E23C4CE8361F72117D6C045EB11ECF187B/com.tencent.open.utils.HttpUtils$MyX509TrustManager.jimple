public class com.tencent.open.utils.HttpUtils$MyX509TrustManager extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
    javax.net.ssl.X509TrustManager a;

    void <init>() throws java.lang.Exception
    {
        com.tencent.open.utils.HttpUtils$MyX509TrustManager $r0;
        java.security.KeyStore $r1;
        javax.net.ssl.TrustManager[] $r2;
        java.io.FileInputStream $r3;
        java.lang.String $r4, varReplacer2797, varReplacer2798, varReplacer2799, varReplacer2801, varReplacer2802;
        char[] $r5;
        javax.net.ssl.TrustManagerFactory $r6;
        int $i0, $i1;
        javax.net.ssl.TrustManager $r7;
        boolean $z0;
        javax.net.ssl.X509TrustManager $r8;
        java.lang.Exception $r9;
        java.lang.Throwable $r10, $r11;
        null_type varReplacer2800;

        nop;

        $r0 := @this: com.tencent.open.utils.HttpUtils$MyX509TrustManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

     label01:
        varReplacer2799 = "JKS";

        $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2799);

     label02:
        $r2 = newarray (javax.net.ssl.TrustManager)[0];

        if $r1 == null goto label13;

     label03:
        $r3 = new java.io.FileInputStream;

        varReplacer2802 = "trustedCerts";

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>(varReplacer2802);

     label04:
        $r4 = "passphrase";

     label05:
        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r5);

        varReplacer2797 = "SunX509";

        varReplacer2798 = "SunJSSE";

        $r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer2797, varReplacer2798);

        virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1);

        $r2 = virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label06:
        if $r3 == null goto label07;

        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label07:
        $i0 = 0;

     label08:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label15;

        $r7 = $r2[$i0];

        $z0 = $r7 instanceof javax.net.ssl.X509TrustManager;

        if $z0 == 0 goto label14;

        $r7 = $r2[$i0];

        $r8 = (javax.net.ssl.X509TrustManager) $r7;

        $r0.<com.tencent.open.utils.HttpUtils$MyX509TrustManager: javax.net.ssl.X509TrustManager a> = $r8;

        return;

     label09:
        $r9 := @caughtexception;

        $r1 = null;

        goto label02;

     label10:
        $r10 := @caughtexception;

        $r3 = null;

        $r11 = $r10;

     label11:
        if $r3 == null goto label12;

        virtualinvoke $r3.<java.io.FileInputStream: void close()>();

     label12:
        throw $r11;

     label13:
        $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4);

        varReplacer2800 = null;

        virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer2800);

        $r2 = virtualinvoke $r6.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        goto label07;

     label14:
        $i0 = $i0 + 1;

        goto label08;

     label15:
        $r9 = new java.lang.Exception;

        varReplacer2801 = "Couldn\'t initialize";

        specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer2801);

        throw $r9;

     label16:
        $r11 := @caughtexception;

        goto label11;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Throwable from label05 to label06 with label16;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.tencent.open.utils.HttpUtils$MyX509TrustManager $r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2;
        javax.net.ssl.X509TrustManager $r3;

        $r0 := @this: com.tencent.open.utils.HttpUtils$MyX509TrustManager;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<com.tencent.open.utils.HttpUtils$MyX509TrustManager: javax.net.ssl.X509TrustManager a>;

        interfaceinvoke $r3.<javax.net.ssl.X509TrustManager: void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r1, $r2);

        return;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.tencent.open.utils.HttpUtils$MyX509TrustManager $r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2;
        javax.net.ssl.X509TrustManager $r3;

        $r0 := @this: com.tencent.open.utils.HttpUtils$MyX509TrustManager;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        $r3 = $r0.<com.tencent.open.utils.HttpUtils$MyX509TrustManager: javax.net.ssl.X509TrustManager a>;

        interfaceinvoke $r3.<javax.net.ssl.X509TrustManager: void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String)>($r1, $r2);

        return;
    }

    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        com.tencent.open.utils.HttpUtils$MyX509TrustManager $r0;
        java.security.cert.X509Certificate[] $r1;
        javax.net.ssl.X509TrustManager $r2;

        $r0 := @this: com.tencent.open.utils.HttpUtils$MyX509TrustManager;

        $r2 = $r0.<com.tencent.open.utils.HttpUtils$MyX509TrustManager: javax.net.ssl.X509TrustManager a>;

        $r1 = interfaceinvoke $r2.<javax.net.ssl.X509TrustManager: java.security.cert.X509Certificate[] getAcceptedIssuers()>();

        return $r1;
    }
}
