public class com.shinetech.frenchdictionary.a extends java.lang.Object
{
    private static final byte[] a;

    static void <clinit>()
    {
        byte[] $r0;

        nop;

        $r0 = newarray (byte)[16];

        $r0[0] = 49;

        $r0[1] = 50;

        $r0[2] = 51;

        $r0[3] = 52;

        $r0[4] = 53;

        $r0[5] = 54;

        $r0[6] = 55;

        $r0[7] = 56;

        $r0[8] = 57;

        $r0[9] = 48;

        $r0[10] = 49;

        $r0[11] = 50;

        $r0[12] = 51;

        $r0[13] = 52;

        $r0[14] = 53;

        $r0[15] = 54;

        <com.shinetech.frenchdictionary.a: byte[] a> = $r0;

        return;
    }

    public static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer278, varReplacer279;
        byte[] $r2, $r4;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r5;
        java.lang.Exception $r6;
        java.io.PrintStream $r7;
        int varReplacer280, varReplacer281;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = null;

        $r3 = new javax.crypto.spec.SecretKeySpec;

     label1:
        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer278 = "AES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer278);

        varReplacer279 = "AES/ECB/PKCS5Padding";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer279);

        varReplacer280 = 2;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer280, $r3);

        varReplacer281 = 0;

        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer281);

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

     label2:
        $r2 = $r4;

     label3:
        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r2);

        return $r0;

     label4:
        $r6 := @caughtexception;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r0 = virtualinvoke $r6.<java.lang.Exception: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r0);

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }
}
