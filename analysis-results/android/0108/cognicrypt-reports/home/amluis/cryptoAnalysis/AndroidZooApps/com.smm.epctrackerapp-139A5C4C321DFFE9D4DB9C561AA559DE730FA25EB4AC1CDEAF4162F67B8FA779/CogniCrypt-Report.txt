Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer16905, varReplacer16906)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 9796c56f653d1446421480d1f5e2b87f3e439c0ac549511bf7b724963a39cc66
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer16923, $r24)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: cf4839969b4638d0cf94496f210dd8dbe88e30e05d52484e23243e259655f7b1
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10454)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: fdb0ca2f32f8ad8eddade14df3ee5833c7cb368d41ef39d73d64142f6601840d
		Secure: false
	Object:
		Variable: r32
		Type: java.security.SecureRandom
		Statement: specialinvoke r32.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: ec5a3b9c459e095d06455cbfbb767d05f39652ee39e2deb63e1be93dffc7f5e7
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory createAdditionalApacheCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 15dd4c09357370287da655c9000eb19b850fa2e138e7fa2b62445048968ecb0c
		Secure: true
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 70227ee4cebe6669aebfadd648a5aa0401905e3b0c149905f4e0b616961e20b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16911)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 167560d10a11d84bcd077d448ad60e25b0a1a07777dd69f84e79b0b6b4f94190
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 954e9f666dc6663ac3198d4c83a7c885893390e9e77a37fe053a41ffaa347eb7
		Secure: true
	Object:
		Variable: $r15
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r15 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer16921)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 89c0b23fdcd4ed86656003804dc155f9e5c695258b6e859d77eac025b81d171e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6150)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 603b4570d5e9468d93d684e77cfd2e9398231fb4e81b1e9755108e9f8b08a5e4
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManager[]
		Statement: $r4 = virtualinvoke $r15.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: aba9fa4c2396667a557cdcdbfcf86790b8a3f7d67255e7aabf57ef554d38e4ce
		Secure: false

Findings in Java Class: org.jivesoftware.smack.tcp.XMPPTCPConnection

	 in Method: void proceedTLSReceived()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer16922, r32)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #cf4839969b4638d0cf94496f210dd8dbe88e30e05d52484e23243e259655f7b1)
			First parameter (with value "PKCS11") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer16923, $r24)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer16922, r32)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #9796c56f653d1446421480d1f5e2b87f3e439c0ac549511bf7b724963a39cc66)
			First parameter (with value "KeychainStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer16905, varReplacer16906)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #89c0b23fdcd4ed86656003804dc155f9e5c695258b6e859d77eac025b81d171e)
			First parameter (with value "SunX509") should be any of {PKIX}
			at statement: $r15 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer16921)


Findings in Java Class: com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory

	 in Method: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10450, $r10, varReplacer10450)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10450, $r10, varReplacer10450)


	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6148, r6, varReplacer6148)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6148, r6, varReplacer6148)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 6
=====================================================================