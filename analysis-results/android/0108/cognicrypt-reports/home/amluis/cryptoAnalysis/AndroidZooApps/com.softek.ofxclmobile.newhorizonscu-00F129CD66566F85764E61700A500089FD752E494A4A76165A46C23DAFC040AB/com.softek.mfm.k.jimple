public final class com.softek.mfm.k extends java.lang.Object
{
    public static final byte[] a;
    public static final byte[] b;
    private static final com.softek.common.lang.g c;
    private static final java.lang.String d;
    private static final java.lang.String e;
    private static final java.lang.String f;
    private static final byte[] g;
    private static final byte[] h;

    static void <clinit>()
    {
        com.softek.common.lang.g $r0;
        byte[] $r1;
        android.app.Application $r2;
        android.content.ContentResolver $r3;
        java.lang.String $r4, $r10, varReplacer3765, varReplacer3766, varReplacer3767;
        java.lang.Class $r5;
        java.lang.Class[] $r6;
        java.lang.reflect.Method $r7;
        java.lang.Object[] $r8;
        java.lang.Object $r9;
        java.lang.Exception $r11;

        nop;

        $r0 = staticinvoke <com.softek.common.lang.g$a: com.softek.common.lang.g a()>();

        <com.softek.mfm.k: com.softek.common.lang.g c> = $r0;

        $r1 = newarray (byte)[16];

        $r1[0] = 40;

        $r1[1] = -82;

        $r1[2] = -46;

        $r1[3] = -90;

        $r1[4] = 43;

        $r1[5] = 126;

        $r1[6] = 21;

        $r1[7] = 22;

        $r1[8] = 20;

        $r1[9] = -70;

        $r1[10] = 35;

        $r1[11] = 87;

        $r1[12] = 52;

        $r1[13] = 125;

        $r1[14] = 80;

        $r1[15] = 23;

        <com.softek.mfm.k: byte[] a> = $r1;

        $r1 = newarray (byte)[16];

        $r1[0] = 12;

        $r1[1] = 87;

        $r1[2] = 1;

        $r1[3] = 62;

        $r1[4] = 9;

        $r1[5] = 18;

        $r1[6] = 117;

        $r1[7] = 39;

        $r1[8] = 42;

        $r1[9] = 57;

        $r1[10] = 88;

        $r1[11] = -13;

        $r1[12] = 110;

        $r1[13] = 2;

        $r1[14] = -20;

        $r1[15] = 7;

        <com.softek.mfm.k: byte[] b> = $r1;

        $r2 = <com.softek.common.android.g: android.app.Application a>;

        $r3 = virtualinvoke $r2.<android.app.Application: android.content.ContentResolver getContentResolver()>();

        varReplacer3767 = "android_id";

        $r4 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, varReplacer3767);

        if $r4 != null goto label4;

     label1:
        varReplacer3765 = "android.os.SystemProperties";

        $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(varReplacer3765);

        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "Ljava/lang/String;";

        varReplacer3766 = "get";

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(varReplacer3766, $r6);

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = "ro.serialno";

        $r9 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r5, $r8);

        $r10 = (java.lang.String) $r9;

     label2:
        $r9 = staticinvoke <com.google.common.base.e: java.lang.Object a(java.lang.Object)>($r10);

        $r4 = (java.lang.String) $r9;

        <com.softek.mfm.k: java.lang.String f> = $r4;

        $r1 = <com.softek.mfm.k: byte[] a>;

        $r1 = staticinvoke <com.softek.mfm.k: byte[] a(byte[])>($r1);

        <com.softek.mfm.k: byte[] g> = $r1;

        $r1 = <com.softek.mfm.k: byte[] b>;

        $r1 = staticinvoke <com.softek.mfm.k: byte[] a(byte[])>($r1);

        <com.softek.mfm.k: byte[] h> = $r1;

        return;

     label3:
        $r11 := @caughtexception;

        $r0 = <com.softek.mfm.k: com.softek.common.lang.g c>;

        interfaceinvoke $r0.<com.softek.common.lang.g: void b(java.lang.Throwable)>($r11);

     label4:
        $r10 = $r4;

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>()
    {
        com.softek.mfm.k $r0;

        $r0 := @this: com.softek.mfm.k;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object a(java.io.File)
    {
        java.io.File $r0;
        byte[] $r1, $r6;
        java.io.ObjectInputStream $r2;
        javax.crypto.CipherInputStream $r3;
        java.io.BufferedInputStream $r4;
        java.io.FileInputStream $r5;
        javax.crypto.Cipher $r7;
        java.lang.Object $r8;
        java.lang.Throwable $r9, $r10, $r11, $r14, $r16;
        com.softek.common.lang.g $r12;
        java.util.Map $r13;
        java.lang.String $r15;

        $r0 := @parameter0: java.io.File;

     label01:
        $r2 = new java.io.ObjectInputStream;

        $r3 = new javax.crypto.CipherInputStream;

        $r4 = new java.io.BufferedInputStream;

        $r5 = new java.io.FileInputStream;

     label02:
        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

     label03:
        $r6 = <com.softek.mfm.k: byte[] g>;

        $r1 = <com.softek.mfm.k: byte[] h>;

     label04:
        $r7 = staticinvoke <com.softek.mfm.k: javax.crypto.Cipher a(int,byte[],byte[])>(2, $r6, $r1);

        specialinvoke $r3.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r4, $r7);

        specialinvoke $r2.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r3);

     label05:
        $r8 = virtualinvoke $r2.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label06:
        staticinvoke <com.softek.common.lang.i: void a(java.io.Closeable)>($r2);

     label07:
        return $r8;

     label08:
        $r9 := @caughtexception;

     label09:
        staticinvoke <com.softek.common.lang.i: void a(java.io.Closeable)>($r2);

        throw $r9;

     label10:
        $r10 := @caughtexception;

        return null;

     label11:
        $r11 := @caughtexception;

        $r12 = <com.softek.mfm.k: com.softek.common.lang.g c>;

        interfaceinvoke $r12.<com.softek.common.lang.g: void e(java.lang.Throwable)>($r11);

     label12:
        $r3 = new javax.crypto.CipherInputStream;

        $r4 = new java.io.BufferedInputStream;

        $r5 = new java.io.FileInputStream;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

        $r1 = <com.softek.mfm.k: byte[] g>;

        $r6 = <com.softek.mfm.k: byte[] h>;

        $r7 = staticinvoke <com.softek.mfm.k: javax.crypto.Cipher a(int,byte[],byte[])>(2, $r1, $r6);

        specialinvoke $r3.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r4, $r7);

     label13:
        $r13 = staticinvoke <com.softek.mfm.k: java.util.Map a(java.io.InputStream)>($r3);

     label14:
        staticinvoke <com.softek.common.lang.i: void a(java.io.Closeable)>($r3);

     label15:
        return $r13;

     label16:
        $r14 := @caughtexception;

        $r12 = <com.softek.mfm.k: com.softek.common.lang.g c>;

        $r15 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke $r12.<com.softek.common.lang.g: void e(java.lang.Throwable,java.lang.String,java.lang.Object)>($r14, "Cannot read: {}", $r15);

        return null;

     label17:
        $r16 := @caughtexception;

     label18:
        staticinvoke <com.softek.common.lang.i: void a(java.io.Closeable)>($r3);

        throw $r16;

     label19:
        nop;

        catch java.io.FileNotFoundException from label02 to label03 with label10;
        catch java.io.FileNotFoundException from label04 to label05 with label10;
        catch java.lang.Throwable from label01 to label05 with label11;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.io.FileNotFoundException from label06 to label07 with label10;
        catch java.io.FileNotFoundException from label09 to label10 with label10;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label18 to label19 with label16;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.softek.mfm.k: byte[] g>;

        $r1 = <com.softek.mfm.k: byte[] h>;

        $r0 = staticinvoke <com.softek.mfm.k: java.lang.String a(java.lang.String,byte[],byte[])>($r0, $r2, $r1);

        return $r0;
    }

    private static java.lang.String a(java.lang.String, byte[], byte[])
    {
        java.lang.String $r0;
        byte[] $r1, $r2;
        boolean $z0;
        javax.crypto.Cipher $r3;
        java.lang.Exception $r4;
        com.softek.common.lang.g $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $z0 = staticinvoke <com.softek.jarjar.org.apache.commons.lang3.f: boolean a(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return "";

     label1:
        $r3 = staticinvoke <com.softek.mfm.k: javax.crypto.Cipher a(int,byte[],byte[])>(1, $r1, $r2);

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        $r0 = staticinvoke <com.softek.mfm.g: java.lang.String a(byte[])>($r1);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = <com.softek.mfm.k: com.softek.common.lang.g c>;

        interfaceinvoke $r5.<com.softek.common.lang.g: void e(java.lang.Throwable)>($r4);

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.util.Map a(java.io.InputStream)
    {
        java.io.InputStream $r0;
        java.lang.Object $r1, $r13;
        boolean $z0, $z1;
        int $i0, $i1;
        org.unsynchronized.o $r2;
        java.util.List $r3;
        org.unsynchronized.n $r4;
        org.unsynchronized.g $r5;
        java.lang.String $r6;
        java.util.Map $r7;
        org.unsynchronized.i $r8;
        org.unsynchronized.contenttype $r9, $r10;
        java.util.HashMap $r11;
        org.unsynchronized.p $r12;

        $r0 := @parameter0: java.io.InputStream;

        $z0 = 1;

        $i0 = 0;

        $r2 = new org.unsynchronized.o;

        specialinvoke $r2.<org.unsynchronized.o: void <init>(java.lang.String)>(null);

        virtualinvoke $r2.<org.unsynchronized.o: void a(java.io.InputStream,boolean)>($r0, 0);

        $r3 = virtualinvoke $r2.<org.unsynchronized.o: java.util.List a()>();

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 != 1 goto label07;

        $z1 = 1;

     label01:
        staticinvoke <com.google.common.base.e: void b(boolean)>($z1);

        $r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (org.unsynchronized.n) $r1;

        $r5 = $r4.<org.unsynchronized.n: org.unsynchronized.g b>;

        $r6 = $r5.<org.unsynchronized.g: java.lang.String b>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("java.util.HashMap");

        staticinvoke <com.google.common.base.e: void b(boolean)>($z1);

        $r7 = $r4.<org.unsynchronized.n: java.util.Map c>;

        $i1 = interfaceinvoke $r7.<java.util.Map: int size()>();

        if $i1 != 1 goto label08;

        $z1 = 1;

     label02:
        staticinvoke <com.google.common.base.e: void b(boolean)>($z1);

        $r7 = $r4.<org.unsynchronized.n: java.util.Map c>;

        $r5 = $r4.<org.unsynchronized.n: org.unsynchronized.g b>;

        $r1 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r3 = (java.util.List) $r1;

        $r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (org.unsynchronized.i) $r1;

        $r9 = interfaceinvoke $r8.<org.unsynchronized.i: org.unsynchronized.contenttype c()>();

        $r10 = <org.unsynchronized.contenttype: org.unsynchronized.contenttype BLOCKDATA>;

        if $r9 != $r10 goto label09;

        $z1 = 1;

     label03:
        staticinvoke <com.google.common.base.e: void b(boolean)>($z1);

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i1 % 2;

        if $i1 != 1 goto label10;

     label04:
        staticinvoke <com.google.common.base.e: void b(boolean)>($z0);

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

     label05:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i1 = $i1 / 2;

        if $i0 >= $i1 goto label11;

        $i1 = $i0 * 2;

        $i1 = $i1 + 1;

        $r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r12 = (org.unsynchronized.p) $r1;

        $r6 = $r12.<org.unsynchronized.p: java.lang.String a>;

        $i1 = $i0 * 2;

        $i1 = $i1 + 2;

        $r1 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r8 = (org.unsynchronized.i) $r1;

        $r13 = staticinvoke <com.softek.mfm.g.d: java.lang.Object a(org.unsynchronized.i)>($r8);

        $r1 = <com.softek.mfm.g.d: java.lang.Object a>;

        if $r13 == $r1 goto label06;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r13);

     label06:
        $i0 = $i0 + 1;

        goto label05;

     label07:
        $z1 = 0;

        goto label01;

     label08:
        $z1 = 0;

        goto label02;

     label09:
        $z1 = 0;

        goto label03;

     label10:
        $z0 = 0;

        goto label04;

     label11:
        return $r11;
    }

    private static javax.crypto.Cipher a(int, byte[], byte[])
    {
        int $i0, varReplacer3779, varReplacer3780;
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        javax.crypto.spec.IvParameterSpec $r4;
        java.lang.String varReplacer3778, varReplacer3781;

        nop;

        $i0 := @parameter0: int;

        $r0 := @parameter1: byte[];

        $r1 := @parameter2: byte[];

        varReplacer3778 = "AES/CBC/PKCS5Padding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3778);

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer3781 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3781);

        if $r1 != null goto label1;

        varReplacer3780 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3780, $r2);

        return $r3;

     label1:
        $r4 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        varReplacer3779 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3779, $r2, $r4);

        return $r3;
    }

    public static byte[] a(byte[])
    {
        byte[] $r0, $r2;
        int $i0, $i2, $i3, $i4, $i6;
        byte $b1, $b5;
        java.lang.String $r1;
        java.lang.Object $r3;

        nop;

        $r0 := @parameter0: byte[];

        $i0 = staticinvoke <android.os.Process: int myUid()>();

        $i2 = $i0 % 256;

     label1:
        $i0 = $i0 / 256;

        if $i0 <= 0 goto label2;

        $i3 = $i0 % 256;

        $i2 = $i3 ^ $i2;

        goto label1;

     label2:
        $r1 = <com.softek.mfm.k: java.lang.String f>;

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r2;

        $r3 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r0 = (byte[]) $r3;

        $i3 = 0;

        $i4 = 0;

     label3:
        if $i4 >= $i0 goto label5;

        $b5 = $r0[$i3];

        $b1 = $r2[$i4];

        $b1 = $b5 ^ $b1;

        $r0[$i3] = $b1;

        $b1 = $r0[$i3];

        $i6 = $b1 ^ $i2;

        $b1 = (byte) $i6;

        $r0[$i3] = $b1;

        $i3 = $i3 + 1;

        $i6 = lengthof $r0;

        if $i3 != $i6 goto label4;

        $i3 = 0;

     label4:
        $i4 = $i4 + 1;

        goto label3;

     label5:
        return $r0;
    }

    public static java.lang.String b(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1, $r2;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.softek.mfm.k: byte[] g>;

        $r1 = <com.softek.mfm.k: byte[] h>;

        $r0 = staticinvoke <com.softek.mfm.k: java.lang.String b(java.lang.String,byte[],byte[])>($r0, $r2, $r1);

        return $r0;
    }

    private static java.lang.String b(java.lang.String, byte[], byte[])
    {
        java.lang.String $r0, $r3, varReplacer3772, varReplacer3773;
        byte[] $r1, $r2;
        boolean $z0;
        javax.crypto.Cipher $r4;
        java.lang.Exception $r5;
        com.softek.common.lang.g $r6;
        int varReplacer3774;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $z0 = staticinvoke <com.softek.jarjar.org.apache.commons.lang3.f: boolean a(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        varReplacer3772 = "";

        return varReplacer3772;

     label1:
        $r3 = new java.lang.String;

     label2:
        varReplacer3774 = 2;

        $r4 = staticinvoke <com.softek.mfm.k: javax.crypto.Cipher a(int,byte[],byte[])>(varReplacer3774, $r1, $r2);

        $r1 = staticinvoke <com.softek.mfm.g: byte[] a(java.lang.String)>($r0);

        $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r1);

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        $r6 = <com.softek.mfm.k: com.softek.common.lang.g c>;

        interfaceinvoke $r6.<com.softek.common.lang.g: void e(java.lang.Throwable)>($r5);

        varReplacer3773 = "";

        return varReplacer3773;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static java.lang.String c(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1, $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r2 = <com.softek.mfm.k: byte[] a>;

        $r1 = <com.softek.mfm.k: byte[] b>;

        $r0 = staticinvoke <com.softek.mfm.k: java.lang.String b(java.lang.String,byte[],byte[])>($r0, $r2, $r1);

        return $r0;
    }
}
