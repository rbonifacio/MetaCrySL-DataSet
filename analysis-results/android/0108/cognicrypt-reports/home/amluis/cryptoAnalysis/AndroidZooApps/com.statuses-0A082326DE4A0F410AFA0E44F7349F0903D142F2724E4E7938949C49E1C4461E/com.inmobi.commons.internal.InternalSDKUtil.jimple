public class com.inmobi.commons.internal.InternalSDKUtil extends java.lang.Object
{
    public static final java.lang.String ACTION_CONNECTIVITY_UPDATE;
    public static final java.lang.String ACTION_RECEIVER_REFERRER;
    public static final java.lang.String ACTION_SHARE_INMID;
    public static final java.lang.String BASE_LOG_TAG;
    public static final java.lang.String CACHE_DIR_NAME;
    public static final java.lang.String IM_PREF;
    public static final java.lang.String INMOBI_SDK_RELEASE_DATE;
    public static final java.lang.String INMOBI_SDK_RELEASE_VERSION;
    public static final java.lang.String KEY_LTVID;
    public static final java.lang.String LOGGING_TAG;
    public static final java.lang.String PRODUCT_COMMONS;
    private static java.util.Map a;
    private static com.inmobi.commons.internal.CommonsConfig b;
    private static java.lang.String c;
    private static android.content.Context d;
    private static com.inmobi.commons.cache.CacheController$Validator e;
    private static boolean f;

    static void <clinit>()
    {
        java.util.HashMap $r0;
        com.inmobi.commons.internal.CommonsConfig $r1;
        com.inmobi.commons.internal.InternalSDKUtil$1 $r2;
        int varReplacer2361;
        null_type varReplacer2362;

        nop;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.inmobi.commons.internal.InternalSDKUtil: java.util.Map a> = $r0;

        $r1 = new com.inmobi.commons.internal.CommonsConfig;

        specialinvoke $r1.<com.inmobi.commons.internal.CommonsConfig: void <init>()>();

        <com.inmobi.commons.internal.InternalSDKUtil: com.inmobi.commons.internal.CommonsConfig b> = $r1;

        varReplacer2362 = null;

        <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context d> = varReplacer2362;

        $r2 = new com.inmobi.commons.internal.InternalSDKUtil$1;

        specialinvoke $r2.<com.inmobi.commons.internal.InternalSDKUtil$1: void <init>()>();

        <com.inmobi.commons.internal.InternalSDKUtil: com.inmobi.commons.cache.CacheController$Validator e> = $r2;

        varReplacer2361 = 1;

        <com.inmobi.commons.internal.InternalSDKUtil: boolean f> = varReplacer2361;

        return;
    }

    public void <init>()
    {
        com.inmobi.commons.internal.InternalSDKUtil $r0;

        $r0 := @this: com.inmobi.commons.internal.InternalSDKUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Map JSONToMap(org.json.JSONObject)
    {
        org.json.JSONObject $r0;
        java.util.HashMap $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.lang.String $r4;
        org.json.JSONException $r5;
        java.lang.Exception $r6;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = new java.util.HashMap;

     label1:
        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

     label3:
        if $z0 == 0 goto label8;

     label4:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

     label5:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r3);

     label6:
        goto label2;

     label7:
        $r5 := @caughtexception;

        goto label2;

     label8:
        return $r1;

     label9:
        $r6 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label3 with label9;
        catch java.lang.Exception from label4 to label5 with label9;
        catch org.json.JSONException from label5 to label6 with label7;
        catch java.lang.Exception from label5 to label6 with label9;
    }

    private static void a()
    {
        com.inmobi.commons.uid.UID $r0;
        java.util.Map $r1;
        null_type varReplacer2407;

        nop;

        $r0 = staticinvoke <com.inmobi.commons.uid.UID: com.inmobi.commons.uid.UID getInstance()>();

        varReplacer2407 = null;

        $r1 = virtualinvoke $r0.<com.inmobi.commons.uid.UID: java.util.Map getMapForEncryption(java.util.Map)>(varReplacer2407);

        <com.inmobi.commons.internal.InternalSDKUtil: java.util.Map a> = $r1;

        return;
    }

    static boolean a(java.util.Map)
    {
        java.util.Map $r0;
        com.inmobi.commons.internal.CommonsConfig $r1;
        com.inmobi.commons.metric.Logger $r2;
        com.inmobi.commons.metric.MetricConfigParams $r3;
        java.lang.Exception $r4;
        int varReplacer2409, varReplacer2410;

        nop;

        $r0 := @parameter0: java.util.Map;

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void a()>();

        $r1 = new com.inmobi.commons.internal.CommonsConfig;

     label1:
        specialinvoke $r1.<com.inmobi.commons.internal.CommonsConfig: void <init>()>();

        virtualinvoke $r1.<com.inmobi.commons.internal.CommonsConfig: void setFromMap(java.util.Map)>($r0);

     label2:
        <com.inmobi.commons.internal.InternalSDKUtil: com.inmobi.commons.internal.CommonsConfig b> = $r1;

     label3:
        $r2 = staticinvoke <com.inmobi.commons.internal.ApiStatCollector: com.inmobi.commons.metric.Logger getLogger()>();

        $r3 = virtualinvoke $r1.<com.inmobi.commons.internal.CommonsConfig: com.inmobi.commons.metric.MetricConfigParams getApiStatsConfig()>();

        virtualinvoke $r2.<com.inmobi.commons.metric.Logger: void setMetricConfigParams(com.inmobi.commons.metric.MetricConfigParams)>($r3);

     label4:
        varReplacer2409 = 1;

        return varReplacer2409;

     label5:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.lang.Exception: void printStackTrace()>();

        varReplacer2410 = 0;

        return varReplacer2410;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static byte[] a(byte[], int, javax.crypto.Cipher) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] $r0, $r2, $r3;
        int $i0, $i2, $i3;
        javax.crypto.Cipher $r1;
        byte $b1;

        nop;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 := @parameter2: javax.crypto.Cipher;

        $r2 = newarray (byte)[0];

        $i0 = lengthof $r0;

        $r3 = newarray (byte)[64];

        $r2 = newarray (byte)[0];

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label4;

        if $i2 <= 0 goto label3;

        $i3 = $i2 % 64;

        if $i3 != 0 goto label3;

        $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        $r2 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: byte[] a(byte[],byte[])>($r2, $r3);

        $i3 = $i2 + 64;

        if $i3 <= $i0 goto label5;

        $i3 = $i0 - $i2;

     label2:
        $r3 = newarray (byte)[$i3];

     label3:
        $i3 = $i2 % 64;

        $b1 = $r0[$i2];

        $r3[$i3] = $b1;

        $i2 = $i2 + 1;

        goto label1;

     label4:
        $r0 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        $r0 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: byte[] a(byte[],byte[])>($r2, $r0);

        return $r0;

     label5:
        $i3 = 64;

        goto label2;
    }

    private static byte[] a(byte[], byte[])
    {
        byte[] $r0, $r1, $r2;
        int $i0, $i1, varReplacer2444, varReplacer2445, varReplacer2446;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = $i0 + $i1;

        $r2 = newarray (byte)[$i0];

        $i0 = lengthof $r0;

        varReplacer2444 = 0;

        varReplacer2445 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, varReplacer2444, $r2, varReplacer2444, $i0);

        $i1 = lengthof $r0;

        $i0 = lengthof $r1;

        varReplacer2446 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer2446, $r2, $i1, $i0);

        return $r2;
    }

    public static java.lang.String byteToHex(byte)
    {
        byte $b0, $b1;
        char[] $r0, $r1;
        char $c2;
        java.lang.String $r2;
        java.lang.Exception $r3;

        $b0 := @parameter0: byte;

     label1:
        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        $r1 = newarray (char)[2];

     label2:
        $b1 = $b0 >> 4;

        $b1 = $b1 & 15;

     label3:
        $c2 = $r0[$b1];

        $r1[0] = $c2;

     label4:
        $b0 = $b0 & 15;

     label5:
        $c2 = $r0[$b0];

        $r1[1] = $c2;

     label6:
        $r2 = new java.lang.String;

     label7:
        specialinvoke $r2.<java.lang.String: void <init>(char[])>($r1);

     label8:
        return $r2;

     label9:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public static boolean checkNetworkAvailibility(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        boolean $z0;
        java.lang.Exception $r4;
        int varReplacer2355, varReplacer2359, varReplacer2360;
        java.lang.String varReplacer2356, varReplacer2357, varReplacer2358;

        nop;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        varReplacer2360 = 0;

        return varReplacer2360;

     label1:
        varReplacer2358 = "connectivity";

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer2358);

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label2:
        if $r3 != null goto label3;

        varReplacer2355 = 0;

        return varReplacer2355;

     label3:
        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        $z0 = virtualinvoke $r3.<android.net.NetworkInfo: boolean isConnected()>();

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        varReplacer2356 = "[InMobi]-4.5.5";

        varReplacer2357 = "Cannot check network state";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2356, varReplacer2357, $r4);

        varReplacer2359 = 0;

        return varReplacer2359;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static void clearSdkCacheDirectory(java.io.File, java.lang.String)
    {
        java.io.File $r0, $r3;
        java.lang.String $r1, $r2;
        int $i0;

        $r0 := @parameter0: java.io.File;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        staticinvoke <com.inmobi.commons.internal.FileOperations: void deleteDirectory(java.io.File)>($r0);

        return;

     label2:
        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r0, $r1);

        staticinvoke <com.inmobi.commons.internal.FileOperations: void deleteDirectory(java.io.File)>($r3);

        return;
    }

    public static java.lang.String convertListToDelimitedString(java.util.List, java.lang.String)
    {
        java.util.List $r0;
        java.lang.String $r1, $r6;
        java.lang.StringBuilder $r2, $r5;
        int $i0, $i1;
        java.lang.Object $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 >= $i1 goto label8;

     label2:
        $i1 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

     label3:
        if $i1 <= 0 goto label5;

     label4:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label5:
        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

     label6:
        $i0 = $i0 + 1;

        goto label1;

     label7:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception Converting map to deliminated string ");

        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>("[InMobi]-4.5.5", $r6, $r4);

        goto label6;

     label8:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.Exception from label4 to label6 with label7;
    }

    public static java.lang.String encodeMapAndconvertToDelimitedString(java.util.Map, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r6, $r8, varReplacer2720, varReplacer2721, varReplacer2722, varReplacer2723;
        java.lang.StringBuilder $r2, $r10;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        int $i0;
        java.lang.Object[] $r7;
        java.lang.Exception $r9;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

     label2:
        $i0 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();

     label3:
        if $i0 <= 0 goto label5;

     label4:
        varReplacer2720 = "&";

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2720);

     label5:
        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String getURLEncoded(java.lang.String)>($r6);

        $r7[0] = $r8;

        $r5 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r6 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String getURLEncoded(java.lang.String)>($r6);

        $r7[1] = $r6;

        varReplacer2721 = "%s=%s";

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer2721, $r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label6:
        goto label1;

     label7:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer2722 = "Exception Converting map to deliminated string ";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2722);

        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2723 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2723, $r6, $r9);

        goto label1;

     label8:
        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

        catch java.lang.Exception from label2 to label3 with label7;
        catch java.lang.Exception from label4 to label6 with label7;
    }

    public static java.lang.String encryptRSA(java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer2423, varReplacer2425, varReplacer2427, varReplacer2429, varReplacer2434, varReplacer2435, varReplacer2436;
        boolean $z0;
        java.math.BigInteger $r2, $r3;
        java.security.KeyFactory $r4;
        java.security.spec.RSAPublicKeySpec $r5;
        java.security.PublicKey $r6;
        java.security.interfaces.RSAPublicKey $r7;
        javax.crypto.Cipher $r8;
        byte[] $r9;
        java.lang.Exception $r10;
        int varReplacer2424, varReplacer2428, varReplacer2430, varReplacer2432, varReplacer2433;
        null_type varReplacer2426, varReplacer2431;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label01;

        $r1 = "";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label02;

     label01:
        varReplacer2426 = null;

        return varReplacer2426;

     label02:
        $r2 = new java.math.BigInteger;

     label03:
        varReplacer2429 = "C10F7968CFE2C76AC6F0650C877806D4514DE58FC239592D2385BCE5609A84B2A0FBDAF29B05505EAD1FDFEF3D7209ACBF34B5D0A806DF18147EA9C0337D6B5B";

        varReplacer2430 = 16;

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String,int)>(varReplacer2429, varReplacer2430);

     label04:
        $r3 = new java.math.BigInteger;

     label05:
        varReplacer2423 = "010001";

        varReplacer2424 = 16;

        specialinvoke $r3.<java.math.BigInteger: void <init>(java.lang.String,int)>(varReplacer2423, varReplacer2424);

        varReplacer2427 = "RSA";

        $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer2427);

     label06:
        $r5 = new java.security.spec.RSAPublicKeySpec;

     label07:
        specialinvoke $r5.<java.security.spec.RSAPublicKeySpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r2, $r3);

        $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5);

        $r7 = (java.security.interfaces.RSAPublicKey) $r6;

        varReplacer2425 = "RSA/ECB/nopadding";

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2425);

        varReplacer2428 = 1;

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2428, $r7);

        varReplacer2436 = "UTF-8";

        $r9 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2436);

        varReplacer2432 = 1;

        $r9 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: byte[] a(byte[],int,javax.crypto.Cipher)>($r9, varReplacer2432, $r8);

        varReplacer2433 = 0;

        $r9 = staticinvoke <com.inmobi.commons.thirdparty.Base64: byte[] encode(byte[],int)>($r9, varReplacer2433);

     label08:
        $r0 = new java.lang.String;

     label09:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r9);

     label10:
        return $r0;

     label11:
        $r10 := @caughtexception;

        varReplacer2434 = "[InMobi]-4.5.5";

        varReplacer2435 = "Exception in encryptRSA";

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2434, varReplacer2435, $r10);

        varReplacer2431 = null;

        return varReplacer2431;

        catch java.lang.Exception from label03 to label04 with label11;
        catch java.lang.Exception from label05 to label06 with label11;
        catch java.lang.Exception from label07 to label08 with label11;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public static boolean getBooleanFromJSON(org.json.JSONObject, java.lang.String, boolean)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1;
        boolean $z0, $z1;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3;
        java.lang.Object $r4;
        java.lang.Class $r5;
        org.json.JSONException $r6;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

     label1:
        $z1 = virtualinvoke $r0.<org.json.JSONObject: boolean getBoolean(java.lang.String)>($r1);

     label2:
        return $z1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JSON with property ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found but has bad datatype(");

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("). Reverting to ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String)>("[InMobi]-4.5.5", $r1);

     label5:
        return $z0;

     label6:
        $r6 := @caughtexception;

        return $z0;

        catch java.lang.Exception from label1 to label2 with label3;
        catch org.json.JSONException from label4 to label5 with label6;
    }

    public static boolean getBooleanFromMap(java.util.Map, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, varReplacer2614, varReplacer2615, varReplacer2616;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Boolean $r3;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r5;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $z0 = $r2 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Boolean) $r2;

        $z0 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer2614 = "Key ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2614);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2616 = " has illegal value";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2616);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2615 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String)>(varReplacer2615, $r1);

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;
    }

    public static com.inmobi.commons.internal.CommonsConfig getConfig()
    {
        com.inmobi.commons.internal.CommonsConfig r0;

        r0 = <com.inmobi.commons.internal.InternalSDKUtil: com.inmobi.commons.internal.CommonsConfig b>;

        return r0;
    }

    public static java.lang.String getConnectivityType(android.content.Context)
    {
        android.content.Context $r0;
        int $i0, $i1;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: android.content.Context;

     label01:
        $i0 = virtualinvoke $r0.<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>("android.permission.ACCESS_NETWORK_STATE");

     label02:
        if $i0 != 0 goto label14;

     label03:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("connectivity");

        $r2 = (android.net.ConnectivityManager) $r1;

     label04:
        if $r2 == null goto label14;

     label05:
        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label06:
        if $r3 == null goto label14;

     label07:
        $i0 = virtualinvoke $r3.<android.net.NetworkInfo: int getType()>();

        $i1 = virtualinvoke $r3.<android.net.NetworkInfo: int getSubtype()>();

     label08:
        if $i0 != 1 goto label09;

        return "wifi";

     label09:
        if $i0 != 0 goto label14;

        if $i1 != 1 goto label10;

        return "gprs";

     label10:
        if $i1 != 2 goto label11;

        return "edge";

     label11:
        if $i1 != 3 goto label12;

        return "umts";

     label12:
        if $i1 != 0 goto label15;

        return "carrier";

     label13:
        $r4 := @caughtexception;

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>("[InMobi]-4.5.5", "Error getting the network info", $r4);

     label14:
        return null;

     label15:
        return "carrier";

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
    }

    public static android.content.Context getContext()
    {
        android.content.Context r0;

        nop;

        r0 = <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context d>;

        return r0;
    }

    public static java.lang.String getDigested(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3, varReplacer2528, varReplacer2529, varReplacer2530;
        boolean $z0;
        java.security.MessageDigest $r4;
        byte[] $r5;
        java.lang.StringBuffer $r6;
        int $i0, $i1, varReplacer2525, varReplacer2527;
        byte $b2;
        short $s3;
        java.lang.Exception $r7;
        null_type varReplacer2526;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label03;

        $r2 = "";

     label01:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label02:
        if $z0 == 0 goto label04;

     label03:
        varReplacer2528 = "TEST_EMULATOR";

        return varReplacer2528;

     label04:
        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1);

        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r5);

        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

     label05:
        $r6 = new java.lang.StringBuffer;

     label06:
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

     label07:
        $i0 = 0;

     label08:
        $i1 = lengthof $r5;

     label09:
        if $i0 >= $i1 goto label14;

     label10:
        $b2 = $r5[$i0];

     label11:
        $s3 = $b2 & 255;

        $i1 = $s3 + 256;

     label12:
        varReplacer2525 = 16;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, varReplacer2525);

        varReplacer2527 = 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(varReplacer2527);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label13:
        $i0 = $i0 + 1;

        goto label08;

     label14:
        $r0 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label15:
        return $r0;

     label16:
        $r7 := @caughtexception;

        varReplacer2529 = "[InMobi]-4.5.5";

        varReplacer2530 = "Exception in getting ODIN-1";

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2529, varReplacer2530, $r7);

        varReplacer2526 = null;

        return varReplacer2526;

        catch java.lang.Exception from label01 to label02 with label16;
        catch java.lang.Exception from label04 to label05 with label16;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Exception from label08 to label09 with label16;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    public static java.util.Map getEncodedMap(java.util.Map)
    {
        java.util.Map $r0;
        java.util.HashMap $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String $r5, $r6;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8;

        $r0 := @parameter0: java.util.Map;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

     label2:
        $r6 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String getURLEncoded(java.lang.String)>($r5);

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r5 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String getURLEncoded(java.lang.String)>($r5);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

     label3:
        goto label1;

     label4:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception Map encoding ");

        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>("[InMobi]-4.5.5", $r6, $r7);

        goto label1;

     label5:
        return $r1;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static java.lang.String getFinalRedirectedUrl(java.lang.String)
    {
        java.lang.String $r0, $r4, $r5;
        int $i0, $i1;
        java.net.URL $r1;
        java.net.URLConnection $r2;
        java.net.HttpURLConnection $r3;
        java.lang.Exception $r6, $r7;

        $r0 := @parameter0: java.lang.String;

        $i0 = 0;

     label01:
        $r1 = new java.net.URL;

     label02:
        specialinvoke $r1.<java.net.URL: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = (java.net.HttpURLConnection) $r2;

        $r4 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String getUserAgent()>();

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("User-Agent", $r4);

        virtualinvoke $r3.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        $i1 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>();

     label03:
        if $i1 < 300 goto label13;

        if $i1 >= 400 goto label13;

     label04:
        $r4 = virtualinvoke $r3.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");

     label05:
        $r5 = $r4;

        if $r4 != null goto label08;

        $r5 = $r0;

     label06:
        virtualinvoke $r3.<java.net.HttpURLConnection: void disconnect()>();

     label07:
        return $r5;

     label08:
        $i1 = virtualinvoke $r3.<java.net.HttpURLConnection: int getResponseCode()>();

     label09:
        if $i1 == 200 goto label06;

        if $i0 >= 5 goto label06;

        $i0 = $i0 + 1;

        $r0 = $r4;

        goto label01;

     label10:
        $r6 := @caughtexception;

     label11:
        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>("[InMobi]-4.5.5", "Cannot get redirect url", $r6);

        return $r0;

     label12:
        $r7 := @caughtexception;

        $r0 = $r5;

        $r6 = $r7;

        goto label11;

     label13:
        $r5 = $r0;

        goto label06;

        catch java.lang.Exception from label02 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
    }

    public static java.lang.String getInMobiInternalVersion(java.lang.String)
    {
        java.lang.String $r0, varReplacer2755, varReplacer2756, varReplacer2757, varReplacer2758, varReplacer2759;
        java.lang.StringBuffer $r1, $r4;
        java.lang.String[] $r2;
        int $i0, $i1, varReplacer2760;
        java.lang.Integer $r3;
        char $c2;
        boolean $z0;
        java.lang.Throwable $r5;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer2758 = "[.]";

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer2758);

        $r1 = new java.lang.StringBuffer;

        varReplacer2755 = "";

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer2755);

        $i0 = 0;

     label01:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label08;

        $r0 = $r2[$i0];

     label02:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r0);

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

     label03:
        $i1 = $i1 + 65;

     label04:
        varReplacer2759 = "T";

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer2759);

     label05:
        $c2 = (char) $i1;

     label06:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

     label07:
        $i0 = $i0 + 1;

        goto label01;

     label08:
        varReplacer2756 = "";

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>(varReplacer2756);

        if $z0 == 0 goto label09;

        varReplacer2757 = "";

        return varReplacer2757;

     label09:
        varReplacer2760 = 1;

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String substring(int)>(varReplacer2760);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toString()>();

        return $r0;

     label10:
        $r5 := @caughtexception;

        goto label07;

        catch java.lang.NumberFormatException from label02 to label03 with label10;
        catch java.lang.NumberFormatException from label04 to label05 with label10;
        catch java.lang.NumberFormatException from label06 to label07 with label10;
    }

    public static int getIntFromJSON(org.json.JSONObject, java.lang.String, int)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1, varReplacer2662, varReplacer2663, varReplacer2664, varReplacer2665;
        int $i0, $i1;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3;
        java.lang.Object $r4;
        java.lang.Class $r5;
        org.json.JSONException $r6;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

     label1:
        $i1 = virtualinvoke $r0.<org.json.JSONObject: int getInt(java.lang.String)>($r1);

     label2:
        return $i1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2665 = "JSON with property ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2665);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2664 = " found but has bad datatype(";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2664);

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        varReplacer2662 = "). Reverting to ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2662);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2663 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String)>(varReplacer2663, $r1);

     label5:
        return $i0;

     label6:
        $r6 := @caughtexception;

        return $i0;

        catch java.lang.Exception from label1 to label2 with label3;
        catch org.json.JSONException from label4 to label5 with label6;
    }

    public static int getIntFromMap(java.util.Map, java.lang.String, int, long)
    {
        java.util.Map $r0;
        java.lang.String $r1, varReplacer2581, varReplacer2582, varReplacer2583;
        int $i0, $i2;
        long $l1, $l3;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Integer $r3;
        byte $b4;
        java.lang.StringBuilder $r4;
        java.lang.IllegalArgumentException $r5;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $l1 := @parameter3: long;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $z0 = $r2 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Integer) $r2;

        $i2 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $l3 = (long) $i2;

        $b4 = $l3 cmp $l1;

        if $b4 > 0 goto label1;

        if $i2 < $i0 goto label1;

        return $i2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer2581 = "Key ";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2581);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2582 = " has illegal value";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2582);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2583 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String)>(varReplacer2583, $r1);

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;
    }

    public static long getLongFromJSON(org.json.JSONObject, java.lang.String, long)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1, varReplacer2666, varReplacer2667, varReplacer2668, varReplacer2670, varReplacer2672, varReplacer2674, varReplacer2675;
        long $l0, $l1, varReplacer2669, varReplacer2671, varReplacer2673;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3;
        java.lang.Object $r4;
        java.lang.Class $r5;
        org.json.JSONException $r6;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

     label1:
        varReplacer2666 = "lastModified";

        $l1 = virtualinvoke $r0.<org.json.JSONObject: long getLong(java.lang.String)>(varReplacer2666);

     label2:
        return $l1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2674 = "JSON with property ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2674);

        varReplacer2672 = "lastModified";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2672);

        varReplacer2668 = " found but has bad datatype(";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2668);

        varReplacer2675 = "lastModified";

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>(varReplacer2675);

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        varReplacer2667 = "). Reverting to ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2667);

        varReplacer2673 = 0L;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(varReplacer2673);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2670 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String)>(varReplacer2670, $r1);

     label5:
        varReplacer2669 = 0L;

        return varReplacer2669;

     label6:
        $r6 := @caughtexception;

        varReplacer2671 = 0L;

        return varReplacer2671;

        catch java.lang.Exception from label1 to label2 with label3;
        catch org.json.JSONException from label4 to label5 with label6;
    }

    public static long getLongFromMap(java.util.Map, java.lang.String, long, long)
    {
        java.util.Map $r0;
        java.lang.String $r1;
        long $l0, $l1, $l2;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.Long $r3;
        byte $b3;
        int $i4, $i5;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $l0 := @parameter2: long;

        $l1 := @parameter3: long;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $z0 = $r2 instanceof java.lang.Long;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.Long) $r2;

        $l2 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $b3 = $l2 cmp $l1;

        if $b3 > 0 goto label1;

        $b3 = $l2 cmp $l0;

        if $b3 < 0 goto label1;

        return $l2;

     label1:
        $b3 = $l0 cmp -2147483648L;

        if $b3 >= 0 goto label2;

        $l0 = -2147483648L;

     label2:
        $i4 = (int) $l0;

        $b3 = $l1 cmp 2147483647L;

        if $b3 <= 0 goto label3;

        $l1 = 2147483647L;

     label3:
        $i5 = (int) $l1;

        $l0 = (long) $i5;

        $i4 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: int getIntFromMap(java.util.Map,java.lang.String,int,long)>($r0, $r1, $i4, $l0);

        $l0 = (long) $i4;

        return $l0;
    }

    public static java.lang.String getLtvpSessionId()
    {
        android.content.Context $r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2, varReplacer2750, varReplacer2752;
        null_type varReplacer2751;
        int varReplacer2753;

        nop;

        $r0 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context getContext()>();

        varReplacer2752 = "inmobiAppAnalyticsSession";

        varReplacer2753 = 0;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer2752, varReplacer2753);

        varReplacer2750 = "APP_SESSION_ID";

        varReplacer2751 = null;

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer2750, varReplacer2751);

        return $r2;
    }

    public static java.lang.Object getObjectFromMap(java.util.Map, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, varReplacer2584, varReplacer2585, varReplacer2586, varReplacer2587, varReplacer2588, varReplacer2589, varReplacer2590, varReplacer2591, varReplacer2592;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r4;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        varReplacer2586 = "ids";

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(varReplacer2586);

        if $r2 == null goto label1;

        $z0 = $r2 instanceof java.util.Map;

        if $z0 == 0 goto label1;

        $r0 = (java.util.Map) $r2;

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2585 = "Key ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2585);

        varReplacer2592 = "ids";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2592);

        varReplacer2590 = " has empty object as value.";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2590);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2588 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String)>(varReplacer2588, $r1);

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2589 = "Key ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2589);

        varReplacer2584 = "ids";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2584);

        varReplacer2591 = " has illegal value";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2591);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2587 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String)>(varReplacer2587, $r1);

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label2:
        return $r2;
    }

    public static java.lang.String getSavedUserAgent()
    {
        java.lang.String r0;

        r0 = <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String c>;

        return r0;
    }

    public static java.io.File getSdkCacheDirectory(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1, $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 = new java.io.File;

        $r2 = virtualinvoke $r0.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, "im_cached_content");

        return $r1;
    }

    public static java.lang.String getStringFromJSON(org.json.JSONObject, java.lang.String, java.lang.String)
    {
        org.json.JSONObject $r0;
        java.lang.String $r1, $r2, $r3, varReplacer2658, varReplacer2659, varReplacer2660, varReplacer2661;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.Object $r6;
        java.lang.Class $r7;
        org.json.JSONException $r8;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.String getString(java.lang.String)>($r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

     label4:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer2661 = "JSON with property ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2661);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2658 = " found but has bad datatype(";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2658);

        $r6 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        varReplacer2659 = "). Reverting to ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2659);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2660 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String)>(varReplacer2660, $r1);

     label5:
        return $r2;

     label6:
        $r8 := @caughtexception;

        return $r2;

        catch java.lang.Exception from label1 to label2 with label3;
        catch org.json.JSONException from label4 to label5 with label6;
    }

    public static java.lang.String getStringFromMap(java.util.Map, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, varReplacer2800, varReplacer2801, varReplacer2802;
        java.lang.Object $r2;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r4;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $z0 = $r2 instanceof java.lang.String;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.String) $r2;

        return $r1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2801 = "Key ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2801);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer2802 = " has illegal value";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2802);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2800 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String)>(varReplacer2800, $r1);

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    public static java.lang.String getURLDecoded(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception URL decoding ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>("[InMobi]-4.5.5", $r0, $r2);

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getURLEncoded(java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer2746, varReplacer2747, varReplacer2748, varReplacer2749;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer2746 = "UTF-8";

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, varReplacer2746);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2749 = "Exception URL encoding ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2749);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2748 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2748, $r0, $r2);

        varReplacer2747 = "";

        return varReplacer2747;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getUserAgent()
    {
        java.lang.String $r0, varReplacer2718, varReplacer2719;
        int $i0;
        android.content.Context $r1;
        android.webkit.WebView $r2;
        android.webkit.WebSettings $r3;
        java.lang.Exception $r4;

        nop;

        $r0 = <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String c>;

        if $r0 != null goto label3;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label4;

        $r1 = <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context d>;

     label1:
        $r0 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil$a: java.lang.String a(android.content.Context)>($r1);

     label2:
        <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String c> = $r0;

     label3:
        $r0 = <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String c>;

        return $r0;

     label4:
        $r2 = new android.webkit.WebView;

        $r1 = <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context d>;

     label5:
        specialinvoke $r2.<android.webkit.WebView: void <init>(android.content.Context)>($r1);

        $r3 = virtualinvoke $r2.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        $r0 = virtualinvoke $r3.<android.webkit.WebSettings: java.lang.String getUserAgentString()>();

     label6:
        <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String c> = $r0;

        goto label3;

     label7:
        $r4 := @caughtexception;

        varReplacer2718 = "[InMobi]-4.5.5";

        varReplacer2719 = "Cannot get user agent";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2718, varReplacer2719, $r4);

        $r0 = <com.inmobi.commons.internal.InternalSDKUtil: java.lang.String c>;

        return $r0;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public static void initialize(android.content.Context)
    {
        android.content.Context $r0, $r1;
        java.lang.String $r2, varReplacer2390, varReplacer2391, varReplacer2392, varReplacer2393, varReplacer2394;
        boolean $z0;
        java.util.Map $r3;
        com.inmobi.commons.cache.CacheController$Validator $r4;
        com.inmobi.commons.cache.ProductConfig $r5;
        com.inmobi.commons.internal.CommonsException $r6;
        java.lang.StringBuilder $r7;
        java.lang.Exception $r8;
        int varReplacer2389;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context getContext()>();

        if $r1 != null goto label1;

        if $r0 != null goto label2;

        $r1 = <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context d>;

        virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

     label1:
        $r2 = staticinvoke <com.inmobi.commons.InMobi: java.lang.String getAppId()>();

        if $r2 != null goto label3;

        return;

     label2:
        $r1 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context d> = $r1;

        goto label1;

     label3:
        $z0 = <com.inmobi.commons.internal.InternalSDKUtil: boolean f>;

        if $z0 == 0 goto label4;

        varReplacer2389 = 0;

        <com.inmobi.commons.internal.InternalSDKUtil: boolean f> = varReplacer2389;

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void a()>();

     label4:
        $r3 = <com.inmobi.commons.internal.InternalSDKUtil: java.util.Map a>;

        $r4 = <com.inmobi.commons.internal.InternalSDKUtil: com.inmobi.commons.cache.CacheController$Validator e>;

     label5:
        varReplacer2394 = "commons";

        $r5 = staticinvoke <com.inmobi.commons.cache.CacheController: com.inmobi.commons.cache.ProductConfig getConfig(java.lang.String,android.content.Context,java.util.Map,com.inmobi.commons.cache.CacheController$Validator)>(varReplacer2394, $r0, $r3, $r4);

        $r3 = virtualinvoke $r5.<com.inmobi.commons.cache.ProductConfig: java.util.Map getData()>();

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: boolean a(java.util.Map)>($r3);

     label6:
        return;

     label7:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer2391 = "IMCommons config init: IMCommonsException caught. Reason: ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2391);

        $r2 = virtualinvoke $r6.<com.inmobi.commons.internal.CommonsException: java.lang.String toString()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2390 = "[InMobi]-4.5.5";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String)>(varReplacer2390, $r2);

        return;

     label8:
        $r8 := @caughtexception;

        varReplacer2392 = "[InMobi]-4.5.5";

        varReplacer2393 = "Exception while getting commons config data.";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String)>(varReplacer2392, varReplacer2393);

        return;

        catch com.inmobi.commons.internal.CommonsException from label5 to label6 with label7;
        catch java.lang.Exception from label5 to label6 with label8;
    }

    public static boolean isHexString(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean matches(java.lang.String)>("[0-9A-F]+");

        return $z0;
    }

    public static boolean isInitializedSuccessfully()
    {
        boolean $z0;

        $z0 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: boolean isInitializedSuccessfully(boolean)>(1);

        return $z0;
    }

    public static boolean isInitializedSuccessfully(boolean)
    {
        boolean $z0;
        android.content.Context $r0;
        java.lang.String $r1;

        $z0 := @parameter0: boolean;

        $r0 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context getContext()>();

        if $r0 == null goto label1;

        $r1 = staticinvoke <com.inmobi.commons.InMobi: java.lang.String getAppId()>();

        if $r1 != null goto label3;

     label1:
        if $z0 == 0 goto label2;

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String)>("[InMobi]-4.5.5", "InMobi not initialized. Call InMobi.initialize before using any InMobi API");

     label2:
        return 0;

     label3:
        return 1;
    }

    public static java.lang.String mapToJSONs(java.util.Map)
    {
        java.util.Map $r0;
        org.json.JSONObject $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String $r5;
        org.json.JSONException $r6;
        java.lang.StringBuilder $r7;

        $r0 := @parameter0: java.util.Map;

        if $r0 == null goto label6;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

     label2:
        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r5, $r4);

     label3:
        goto label1;

     label4:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert map to JSON for key ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String)>("[InMobi]-4.5.5", $r5);

        goto label1;

     label5:
        $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.String toString()>();

        return $r5;

     label6:
        return null;

        catch org.json.JSONException from label2 to label3 with label4;
    }

    public static void populate(java.util.Map, java.util.Map, boolean)
    {
        java.util.Map $r0, $r1, $r7, $r8;
        boolean $z0, $z1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4, $r6;
        java.lang.String $r5;
        int varReplacer2595;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        if $r4 != null goto label2;

        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

     label2:
        $r4 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r6 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $z1 = $r4 instanceof java.util.Map;

        if $z1 == 0 goto label4;

        $z1 = $r6 instanceof java.util.Map;

        if $z1 == 0 goto label4;

        if $z0 != 0 goto label3;

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        goto label1;

     label3:
        $r7 = (java.util.Map) $r4;

        $r8 = (java.util.Map) $r6;

        varReplacer2595 = 1;

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void populate(java.util.Map,java.util.Map,boolean)>($r7, $r8, varReplacer2595);

        goto label1;

     label4:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r4);

        goto label1;

     label5:
        return;
    }

    public static void populate(org.json.JSONObject, org.json.JSONObject, boolean) throws org.json.JSONException
    {
        org.json.JSONObject $r0, $r1, $r8, $r9;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        java.lang.Object $r3, $r5;
        java.lang.String $r4, varReplacer9397, varReplacer9398;
        org.json.JSONException $r6, $r7;
        int varReplacer9396;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: org.json.JSONObject;

        $z0 := @parameter2: boolean;

        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label01:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

     label02:
        virtualinvoke $r1.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

     label03:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

        $r5 = virtualinvoke $r1.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

     label04:
        $z1 = $r3 instanceof org.json.JSONObject;

        if $z1 == 0 goto label12;

        $z1 = $r5 instanceof org.json.JSONObject;

        if $z1 == 0 goto label12;

        if $z0 != 0 goto label09;

     label05:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r4, $r3);

     label06:
        goto label01;

     label07:
        $r6 := @caughtexception;

        varReplacer9397 = "[InMobi]-4.5.5";

        varReplacer9398 = "Cannot populate to json exception";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer9397, varReplacer9398, $r6);

        goto label01;

     label08:
        $r7 := @caughtexception;

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r4, $r3);

        goto label01;

     label09:
        $r8 = (org.json.JSONObject) $r3;

        $r9 = (org.json.JSONObject) $r5;

     label10:
        varReplacer9396 = 1;

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void populate(org.json.JSONObject,org.json.JSONObject,boolean)>($r8, $r9, varReplacer9396);

     label11:
        goto label01;

     label12:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r4, $r3);

     label13:
        goto label01;

     label14:
        return;

        catch org.json.JSONException from label02 to label03 with label08;
        catch org.json.JSONException from label03 to label04 with label07;
        catch org.json.JSONException from label05 to label06 with label07;
        catch org.json.JSONException from label10 to label11 with label07;
        catch org.json.JSONException from label12 to label13 with label07;
    }

    public static org.json.JSONObject populateToNewJSON(org.json.JSONObject, org.json.JSONObject, boolean) throws org.json.JSONException
    {
        org.json.JSONObject $r0, $r1, $r2;
        boolean $z0;
        int varReplacer9394, varReplacer9395;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 := @parameter1: org.json.JSONObject;

        $z0 := @parameter2: boolean;

        $r2 = new org.json.JSONObject;

        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        varReplacer9394 = 0;

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void populate(org.json.JSONObject,org.json.JSONObject,boolean)>($r1, $r2, varReplacer9394);

        varReplacer9395 = 1;

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void populate(org.json.JSONObject,org.json.JSONObject,boolean)>($r0, $r2, varReplacer9395);

        return $r2;
    }

    public static java.util.Map populateToNewMap(java.util.Map, java.util.Map, boolean)
    {
        java.util.Map $r0, $r1;
        boolean $z0;
        java.util.HashMap $r2;
        int varReplacer2593, varReplacer2594;

        nop;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.util.Map;

        $z0 := @parameter2: boolean;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        varReplacer2594 = 0;

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void populate(java.util.Map,java.util.Map,boolean)>($r1, $r2, varReplacer2594);

        varReplacer2593 = 1;

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void populate(java.util.Map,java.util.Map,boolean)>($r0, $r2, varReplacer2593);

        return $r2;
    }

    public static void resetMediaCache(android.content.Context)
    {
        android.content.Context $r0;
        java.io.File $r1;
        boolean $z0;
        java.lang.Class $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: java.io.File getSdkCacheDirectory(android.content.Context)>($r0);

        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void clearSdkCacheDirectory(java.io.File,java.lang.String)>($r1, null);

        $z0 = virtualinvoke $r1.<java.io.File: boolean mkdir()>();

        if $z0 != 0 goto label1;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label1;

        $r2 = class "Lcom/inmobi/commons/internal/InternalSDKUtil;";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String)>($r3, "Cannot create media cache directory");

     label1:
        return;
    }

    public static void setContext(android.content.Context)
    {
        android.content.Context $r0, $r2;
        com.inmobi.commons.cache.CacheController$Validator $r1;
        java.lang.String $r3, varReplacer2384, varReplacer2385, varReplacer2386;
        java.util.Map $r4;
        com.inmobi.commons.internal.CommonsException $r5;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context d>;

        if $r2 != null goto label5;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        <com.inmobi.commons.internal.InternalSDKUtil: android.content.Context d> = $r2;

        $r3 = staticinvoke <com.inmobi.commons.InMobi: java.lang.String getAppId()>();

        if $r3 != null goto label1;

        return;

     label1:
        staticinvoke <com.inmobi.commons.internal.InternalSDKUtil: void a()>();

        $r4 = <com.inmobi.commons.internal.InternalSDKUtil: java.util.Map a>;

        $r1 = <com.inmobi.commons.internal.InternalSDKUtil: com.inmobi.commons.cache.CacheController$Validator e>;

     label2:
        varReplacer2384 = "commons";

        staticinvoke <com.inmobi.commons.cache.CacheController: com.inmobi.commons.cache.ProductConfig getConfig(java.lang.String,android.content.Context,java.util.Map,com.inmobi.commons.cache.CacheController$Validator)>(varReplacer2384, $r0, $r4, $r1);

     label3:
        return;

     label4:
        $r5 := @caughtexception;

        varReplacer2385 = "commons";

        varReplacer2386 = "Unable retrive config for commons product";

        staticinvoke <com.inmobi.commons.internal.Log: void internal(java.lang.String,java.lang.String)>(varReplacer2385, varReplacer2386);

     label5:
        return;

        catch com.inmobi.commons.internal.CommonsException from label2 to label3 with label4;
    }

    public static java.lang.String union(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.String[] $r2;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i0 = 0;

     label1:
        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label3;

        $r0 = $r2[$i0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r0);

        if $z0 != 0 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r0 = $r2[$i0];

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        return $r1;
    }

    public static boolean validateAppId(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String)>("[InMobi]-4.5.5", "appId is null");

        return 0;

     label1:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean matches(java.lang.String)>("(x)+");

        if $z0 == 0 goto label2;

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String)>("[InMobi]-4.5.5", "appId is all xxxxxxx");

        return 0;

     label2:
        $r1 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label3;

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String)>("[InMobi]-4.5.5", "appId is all blank");

        return 0;

     label3:
        return 1;
    }

    public static java.lang.String xorWithKey(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer2476, varReplacer2477, varReplacer2478, varReplacer2479, varReplacer2480, varReplacer2481;
        byte[] $r2, $r3, $r4;
        int $i0, $i1, varReplacer2475;
        byte $b2, $b3;
        java.lang.Exception $r5;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label01:
        varReplacer2480 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2480);

        $i0 = lengthof $r2;

        $r3 = newarray (byte)[$i0];

        varReplacer2481 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer2481);

     label02:
        $i0 = 0;

     label03:
        $i1 = lengthof $r2;

     label04:
        if $i0 >= $i1 goto label09;

     label05:
        $b2 = $r2[$i0];

        $i1 = lengthof $r4;

        $i1 = $i0 % $i1;

        $b3 = $r4[$i1];

     label06:
        $b2 = $b2 ^ $b3;

     label07:
        $r3[$i0] = $b2;

     label08:
        $i0 = $i0 + 1;

        goto label03;

     label09:
        varReplacer2475 = 2;

        $r2 = staticinvoke <com.inmobi.commons.thirdparty.Base64: byte[] encode(byte[],int)>($r3, varReplacer2475);

     label10:
        $r0 = new java.lang.String;

     label11:
        varReplacer2476 = "UTF-8";

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, varReplacer2476);

     label12:
        return $r0;

     label13:
        $r5 := @caughtexception;

        varReplacer2477 = "[InMobi]-4.5.5";

        varReplacer2478 = "Exception in xor with random integer";

        staticinvoke <com.inmobi.commons.internal.Log: void debug(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer2477, varReplacer2478, $r5);

        varReplacer2479 = "";

        return varReplacer2479;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }
}
