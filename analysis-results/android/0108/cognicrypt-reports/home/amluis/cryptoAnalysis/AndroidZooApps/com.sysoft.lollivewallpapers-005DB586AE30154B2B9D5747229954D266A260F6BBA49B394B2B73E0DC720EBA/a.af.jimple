public class a.af extends java.lang.Object implements java.lang.Cloneable
{
    static final java.util.List a;
    static final java.util.List b;
    private int A;
    final a.t c;
    final java.util.List d;
    final java.util.List e;
    final a.r f;
    final a.d g;
    final com.bumptech.glide.k h;
    private java.net.Proxy i;
    private java.util.List j;
    private java.util.List k;
    private java.net.ProxySelector l;
    private javax.net.SocketFactory m;
    private javax.net.ssl.SSLSocketFactory n;
    private a.a.g.b o;
    private javax.net.ssl.HostnameVerifier p;
    private a.h q;
    private a.b r;
    private a.b s;
    private a.m t;
    private a.u u;
    private boolean v;
    private boolean w;
    private boolean x;
    private int y;
    private int z;

    static void <clinit>()
    {
        a.ai[] $r0;
        a.ai $r1;
        java.util.List $r2;
        a.o[] $r3;
        a.o $r4;
        a.ag $r5;

        nop;

        $r0 = newarray (a.ai)[2];

        $r1 = <a.ai: a.ai c>;

        $r0[0] = $r1;

        $r1 = <a.ai: a.ai b>;

        $r0[1] = $r1;

        $r2 = staticinvoke <a.a.c: java.util.List a(java.lang.Object[])>($r0);

        <a.af: java.util.List a> = $r2;

        $r3 = newarray (a.o)[3];

        $r4 = <a.o: a.o a>;

        $r3[0] = $r4;

        $r4 = <a.o: a.o b>;

        $r3[1] = $r4;

        $r4 = <a.o: a.o c>;

        $r3[2] = $r4;

        $r2 = staticinvoke <a.a.c: java.util.List a(java.lang.Object[])>($r3);

        <a.af: java.util.List b> = $r2;

        $r5 = new a.ag;

        specialinvoke $r5.<a.ag: void <init>()>();

        <a.a.a: a.a.a a> = $r5;

        return;
    }

    public void <init>()
    {
        a.af $r0;
        a.ah $r1;

        nop;

        $r0 := @this: a.af;

        $r1 = new a.ah;

        specialinvoke $r1.<a.ah: void <init>()>();

        specialinvoke $r0.<a.af: void <init>(a.ah)>($r1);

        return;
    }

    private void <init>(a.ah)
    {
        a.af $r0;
        a.ah $r1;
        a.t $r2;
        java.util.List $r3;
        java.net.ProxySelector $r4;
        a.r $r5;
        javax.net.SocketFactory $r6;
        java.util.Iterator $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        a.o $r9;
        javax.net.ssl.HostnameVerifier $r10;
        a.h $r11;
        a.a.g.b $r12;
        a.b $r13;
        a.m $r14;
        a.u $r15;
        int $i0;
        javax.net.ssl.X509TrustManager $r16;
        javax.net.ssl.SSLSocketFactory $r17;
        a.a.f.h $r18;
        null_type varReplacer2777, varReplacer2778, varReplacer2779, varReplacer2780, varReplacer2781;

        nop;

        $r0 := @this: a.af;

        $r1 := @parameter0: a.ah;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<a.ah: a.t a>;

        $r0.<a.af: a.t c> = $r2;

        varReplacer2778 = null;

        $r0.<a.af: java.net.Proxy i> = varReplacer2778;

        $r3 = $r1.<a.ah: java.util.List b>;

        $r0.<a.af: java.util.List j> = $r3;

        $r3 = $r1.<a.ah: java.util.List c>;

        $r0.<a.af: java.util.List k> = $r3;

        $r3 = $r1.<a.ah: java.util.List d>;

        $r3 = staticinvoke <a.a.c: java.util.List a(java.util.List)>($r3);

        $r0.<a.af: java.util.List d> = $r3;

        $r3 = $r1.<a.ah: java.util.List e>;

        $r3 = staticinvoke <a.a.c: java.util.List a(java.util.List)>($r3);

        $r0.<a.af: java.util.List e> = $r3;

        $r4 = $r1.<a.ah: java.net.ProxySelector f>;

        $r0.<a.af: java.net.ProxySelector l> = $r4;

        $r5 = $r1.<a.ah: a.r g>;

        $r0.<a.af: a.r f> = $r5;

        varReplacer2779 = null;

        $r0.<a.af: a.d g> = varReplacer2779;

        varReplacer2781 = null;

        $r0.<a.af: com.bumptech.glide.k h> = varReplacer2781;

        $r6 = $r1.<a.ah: javax.net.SocketFactory h>;

        $r0.<a.af: javax.net.SocketFactory m> = $r6;

        $r3 = $r0.<a.af: java.util.List k>;

        $r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        $z0 = 0;

     label1:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (a.o) $r8;

        if $z0 != 0 goto label2;

        $z0 = $r9.<a.o: boolean d>;

        if $z0 == 0 goto label4;

     label2:
        $z0 = 1;

     label3:
        goto label1;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        if $z0 != 0 goto label7;

        varReplacer2777 = null;

        $r0.<a.af: javax.net.ssl.SSLSocketFactory n> = varReplacer2777;

        varReplacer2780 = null;

        $r0.<a.af: a.a.g.b o> = varReplacer2780;

     label6:
        $r10 = $r1.<a.ah: javax.net.ssl.HostnameVerifier i>;

        $r0.<a.af: javax.net.ssl.HostnameVerifier p> = $r10;

        $r11 = $r1.<a.ah: a.h j>;

        $r12 = $r0.<a.af: a.a.g.b o>;

        $r11 = virtualinvoke $r11.<a.h: a.h a(a.a.g.b)>($r12);

        $r0.<a.af: a.h q> = $r11;

        $r13 = $r1.<a.ah: a.b k>;

        $r0.<a.af: a.b r> = $r13;

        $r13 = $r1.<a.ah: a.b l>;

        $r0.<a.af: a.b s> = $r13;

        $r14 = $r1.<a.ah: a.m m>;

        $r0.<a.af: a.m t> = $r14;

        $r15 = $r1.<a.ah: a.u n>;

        $r0.<a.af: a.u u> = $r15;

        $z0 = $r1.<a.ah: boolean o>;

        $r0.<a.af: boolean v> = $z0;

        $z0 = $r1.<a.ah: boolean p>;

        $r0.<a.af: boolean w> = $z0;

        $z0 = $r1.<a.ah: boolean q>;

        $r0.<a.af: boolean x> = $z0;

        $i0 = $r1.<a.ah: int r>;

        $r0.<a.af: int y> = $i0;

        $i0 = $r1.<a.ah: int s>;

        $r0.<a.af: int z> = $i0;

        $i0 = $r1.<a.ah: int t>;

        $r0.<a.af: int A> = $i0;

        return;

     label7:
        $r16 = staticinvoke <a.af: javax.net.ssl.X509TrustManager t()>();

        $r17 = staticinvoke <a.af: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>($r16);

        $r0.<a.af: javax.net.ssl.SSLSocketFactory n> = $r17;

        $r18 = staticinvoke <a.a.f.h: a.a.f.h b()>();

        $r12 = virtualinvoke $r18.<a.a.f.h: a.a.g.b a(javax.net.ssl.X509TrustManager)>($r16);

        $r0.<a.af: a.a.g.b o> = $r12;

        goto label6;
    }

    private static javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
    {
        javax.net.ssl.X509TrustManager $r0;
        javax.net.ssl.SSLContext $r1;
        java.lang.Object[] $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.lang.Throwable $r4;
        java.lang.AssertionError r5;
        javax.net.ssl.TrustManager[] r6;
        null_type varReplacer2782, varReplacer2783;
        java.lang.String varReplacer2784;

        nop;

        $r0 := @parameter0: javax.net.ssl.X509TrustManager;

     label1:
        varReplacer2784 = "TLS";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2784);

     label2:
        $r2 = newarray (javax.net.ssl.TrustManager)[1];

        $r2[0] = $r0;

        r6 = (javax.net.ssl.TrustManager[]) $r2;

     label3:
        varReplacer2782 = null;

        varReplacer2783 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2782, r6, varReplacer2782);

        $r3 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        r5 = new java.lang.AssertionError;

        specialinvoke r5.<java.lang.AssertionError: void <init>()>();

        throw r5;

        catch java.security.GeneralSecurityException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label5;
    }

    private static javax.net.ssl.X509TrustManager t()
    {
        java.lang.String $r0, varReplacer2786;
        javax.net.ssl.TrustManagerFactory $r1;
        javax.net.ssl.TrustManager[] $r2;
        int $i0;
        javax.net.ssl.TrustManager $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.Throwable $r6;
        java.lang.AssertionError $r7;
        javax.net.ssl.X509TrustManager $r8;
        null_type varReplacer2785;

     label1:
        nop;

        $r0 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0);

        varReplacer2785 = null;

        virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer2785);

        $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label2:
        $i0 = lengthof $r2;

        if $i0 != 1 goto label3;

        $r3 = $r2[0];

        $z0 = $r3 instanceof javax.net.ssl.X509TrustManager;

        if $z0 != 0 goto label7;

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

     label4:
        varReplacer2786 = "Unexpected default trust managers:";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2786);

        $r0 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

     label5:
        throw $r4;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label7:
        $r3 = $r2[0];

        $r8 = (javax.net.ssl.X509TrustManager) $r3;

        return $r8;

        catch java.security.GeneralSecurityException from label1 to label2 with label6;
        catch java.security.GeneralSecurityException from label4 to label5 with label6;
    }

    public final int a()
    {
        a.af $r0;
        int i0;

        $r0 := @this: a.af;

        i0 = $r0.<a.af: int y>;

        return i0;
    }

    public final a.g a(a.al)
    {
        a.af $r0;
        a.al $r1;
        a.aj $r2;
        int varReplacer2702;

        nop;

        $r0 := @this: a.af;

        $r1 := @parameter0: a.al;

        $r2 = new a.aj;

        varReplacer2702 = 0;

        specialinvoke $r2.<a.aj: void <init>(a.af,a.al,boolean)>($r0, $r1, varReplacer2702);

        return $r2;
    }

    public final int b()
    {
        a.af $r0;
        int i0;

        $r0 := @this: a.af;

        i0 = $r0.<a.af: int z>;

        return i0;
    }

    public final int c()
    {
        a.af $r0;
        int i0;

        $r0 := @this: a.af;

        i0 = $r0.<a.af: int A>;

        return i0;
    }

    public final java.net.Proxy d()
    {
        a.af $r0;
        java.net.Proxy r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: java.net.Proxy i>;

        return r1;
    }

    public final java.net.ProxySelector e()
    {
        a.af $r0;
        java.net.ProxySelector r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: java.net.ProxySelector l>;

        return r1;
    }

    public final a.r f()
    {
        a.af $r0;
        a.r r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: a.r f>;

        return r1;
    }

    public final a.u g()
    {
        a.af $r0;
        a.u r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: a.u u>;

        return r1;
    }

    public final javax.net.SocketFactory h()
    {
        a.af $r0;
        javax.net.SocketFactory r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: javax.net.SocketFactory m>;

        return r1;
    }

    public final javax.net.ssl.SSLSocketFactory i()
    {
        a.af $r0;
        javax.net.ssl.SSLSocketFactory r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: javax.net.ssl.SSLSocketFactory n>;

        return r1;
    }

    public final javax.net.ssl.HostnameVerifier j()
    {
        a.af $r0;
        javax.net.ssl.HostnameVerifier r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: javax.net.ssl.HostnameVerifier p>;

        return r1;
    }

    public final a.h k()
    {
        a.af $r0;
        a.h r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: a.h q>;

        return r1;
    }

    public final a.b l()
    {
        a.af $r0;
        a.b r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: a.b s>;

        return r1;
    }

    public final a.b m()
    {
        a.af $r0;
        a.b r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: a.b r>;

        return r1;
    }

    public final a.m n()
    {
        a.af $r0;
        a.m r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: a.m t>;

        return r1;
    }

    public final boolean o()
    {
        a.af $r0;
        boolean z0;

        $r0 := @this: a.af;

        z0 = $r0.<a.af: boolean v>;

        return z0;
    }

    public final boolean p()
    {
        a.af $r0;
        boolean z0;

        $r0 := @this: a.af;

        z0 = $r0.<a.af: boolean w>;

        return z0;
    }

    public final boolean q()
    {
        a.af $r0;
        boolean z0;

        $r0 := @this: a.af;

        z0 = $r0.<a.af: boolean x>;

        return z0;
    }

    public final java.util.List r()
    {
        a.af $r0;
        java.util.List r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: java.util.List j>;

        return r1;
    }

    public final java.util.List s()
    {
        a.af $r0;
        java.util.List r1;

        $r0 := @this: a.af;

        r1 = $r0.<a.af: java.util.List k>;

        return r1;
    }
}
