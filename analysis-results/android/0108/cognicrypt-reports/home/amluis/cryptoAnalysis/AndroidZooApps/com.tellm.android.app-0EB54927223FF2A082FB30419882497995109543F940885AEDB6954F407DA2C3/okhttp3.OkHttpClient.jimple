public final class okhttp3.OkHttpClient extends java.lang.Object implements java.lang.Cloneable
{
    private static final java.util.List bgY;
    private static final java.util.List bgZ;
    final javax.net.SocketFactory bdh;
    final java.util.List bdj;
    final java.util.List bdk;
    final java.net.Proxy bdl;
    final javax.net.ssl.SSLSocketFactory bdm;
    final java.util.List bhc;
    final java.util.List bhd;
    final boolean bhh;
    final boolean bhi;
    final boolean bhj;
    final int bhk;
    final int bhl;
    final int bhm;
    final okhttp3.Dns bvf;
    final okhttp3.Authenticator bvg;
    final okhttp3.CertificatePinner bvh;
    final okhttp3.internal.InternalCache bvj;
    final okhttp3.Dispatcher bxR;
    final okhttp3.CookieJar bxS;
    final okhttp3.Cache bxT;
    final okhttp3.Authenticator bxU;
    final okhttp3.ConnectionPool bxV;
    final javax.net.ssl.HostnameVerifier hostnameVerifier;
    final java.net.ProxySelector proxySelector;

    static void <clinit>()
    {
        okhttp3.Protocol[] $r0;
        okhttp3.Protocol $r1;
        java.util.List $r2;
        okhttp3.ConnectionSpec[] $r3;
        okhttp3.ConnectionSpec $r4;
        okhttp3.OkHttpClient$1 $r5;

        nop;

        $r0 = newarray (okhttp3.Protocol)[3];

        $r1 = <okhttp3.Protocol: okhttp3.Protocol bxZ>;

        $r0[0] = $r1;

        $r1 = <okhttp3.Protocol: okhttp3.Protocol bxY>;

        $r0[1] = $r1;

        $r1 = <okhttp3.Protocol: okhttp3.Protocol bxX>;

        $r0[2] = $r1;

        $r2 = staticinvoke <okhttp3.internal.Util: java.util.List b(java.lang.Object[])>($r0);

        <okhttp3.OkHttpClient: java.util.List bgY> = $r2;

        $r3 = newarray (okhttp3.ConnectionSpec)[3];

        $r4 = <okhttp3.ConnectionSpec: okhttp3.ConnectionSpec bxl>;

        $r3[0] = $r4;

        $r4 = <okhttp3.ConnectionSpec: okhttp3.ConnectionSpec bxm>;

        $r3[1] = $r4;

        $r4 = <okhttp3.ConnectionSpec: okhttp3.ConnectionSpec bxn>;

        $r3[2] = $r4;

        $r2 = staticinvoke <okhttp3.internal.Util: java.util.List b(java.lang.Object[])>($r3);

        <okhttp3.OkHttpClient: java.util.List bgZ> = $r2;

        $r5 = new okhttp3.OkHttpClient$1;

        specialinvoke $r5.<okhttp3.OkHttpClient$1: void <init>()>();

        <okhttp3.internal.Internal: okhttp3.internal.Internal byA> = $r5;

        return;
    }

    public void <init>()
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.OkHttpClient$Builder $r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        $r1 = new okhttp3.OkHttpClient$Builder;

        specialinvoke $r1.<okhttp3.OkHttpClient$Builder: void <init>()>();

        specialinvoke $r0.<okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>($r1);

        return;
    }

    private void <init>(okhttp3.OkHttpClient$Builder)
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.OkHttpClient$Builder $r1;
        okhttp3.Dispatcher $r2;
        java.net.Proxy $r3;
        java.util.List $r4;
        java.net.ProxySelector $r5;
        okhttp3.CookieJar $r6;
        okhttp3.Cache $r7;
        okhttp3.internal.InternalCache $r8;
        javax.net.SocketFactory $r9;
        javax.net.ssl.SSLSocketFactory $r10;
        javax.net.ssl.HostnameVerifier $r11;
        okhttp3.CertificatePinner $r12;
        okhttp3.Authenticator $r13;
        okhttp3.ConnectionPool $r14;
        okhttp3.Dns $r15;
        boolean $z0;
        int $i0;
        javax.net.ssl.SSLContext $r16;
        java.lang.Throwable $r17;
        java.lang.AssertionError $r18;
        null_type varReplacer1764, varReplacer1765, varReplacer1766;
        java.lang.String varReplacer1767;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        $r1 := @parameter0: okhttp3.OkHttpClient$Builder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<okhttp3.OkHttpClient$Builder: okhttp3.Dispatcher bxR>;

        $r0.<okhttp3.OkHttpClient: okhttp3.Dispatcher bxR> = $r2;

        $r3 = $r1.<okhttp3.OkHttpClient$Builder: java.net.Proxy bdl>;

        $r0.<okhttp3.OkHttpClient: java.net.Proxy bdl> = $r3;

        $r4 = $r1.<okhttp3.OkHttpClient$Builder: java.util.List bdj>;

        $r0.<okhttp3.OkHttpClient: java.util.List bdj> = $r4;

        $r4 = $r1.<okhttp3.OkHttpClient$Builder: java.util.List bdk>;

        $r0.<okhttp3.OkHttpClient: java.util.List bdk> = $r4;

        $r4 = $r1.<okhttp3.OkHttpClient$Builder: java.util.List bhc>;

        $r4 = staticinvoke <okhttp3.internal.Util: java.util.List Q(java.util.List)>($r4);

        $r0.<okhttp3.OkHttpClient: java.util.List bhc> = $r4;

        $r4 = $r1.<okhttp3.OkHttpClient$Builder: java.util.List bhd>;

        $r4 = staticinvoke <okhttp3.internal.Util: java.util.List Q(java.util.List)>($r4);

        $r0.<okhttp3.OkHttpClient: java.util.List bhd> = $r4;

        $r5 = $r1.<okhttp3.OkHttpClient$Builder: java.net.ProxySelector proxySelector>;

        $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector> = $r5;

        $r6 = $r1.<okhttp3.OkHttpClient$Builder: okhttp3.CookieJar bxS>;

        $r0.<okhttp3.OkHttpClient: okhttp3.CookieJar bxS> = $r6;

        $r7 = $r1.<okhttp3.OkHttpClient$Builder: okhttp3.Cache bxT>;

        $r0.<okhttp3.OkHttpClient: okhttp3.Cache bxT> = $r7;

        $r8 = $r1.<okhttp3.OkHttpClient$Builder: okhttp3.internal.InternalCache bvj>;

        $r0.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache bvj> = $r8;

        $r9 = $r1.<okhttp3.OkHttpClient$Builder: javax.net.SocketFactory bdh>;

        $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory bdh> = $r9;

        $r10 = $r1.<okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory bdm>;

        if $r10 == null goto label2;

        $r10 = $r1.<okhttp3.OkHttpClient$Builder: javax.net.ssl.SSLSocketFactory bdm>;

        $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory bdm> = $r10;

     label1:
        $r11 = $r1.<okhttp3.OkHttpClient$Builder: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier> = $r11;

        $r12 = $r1.<okhttp3.OkHttpClient$Builder: okhttp3.CertificatePinner bvh>;

        $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner bvh> = $r12;

        $r13 = $r1.<okhttp3.OkHttpClient$Builder: okhttp3.Authenticator bvg>;

        $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator bvg> = $r13;

        $r13 = $r1.<okhttp3.OkHttpClient$Builder: okhttp3.Authenticator bxU>;

        $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator bxU> = $r13;

        $r14 = $r1.<okhttp3.OkHttpClient$Builder: okhttp3.ConnectionPool bxV>;

        $r0.<okhttp3.OkHttpClient: okhttp3.ConnectionPool bxV> = $r14;

        $r15 = $r1.<okhttp3.OkHttpClient$Builder: okhttp3.Dns bvf>;

        $r0.<okhttp3.OkHttpClient: okhttp3.Dns bvf> = $r15;

        $z0 = $r1.<okhttp3.OkHttpClient$Builder: boolean bhh>;

        $r0.<okhttp3.OkHttpClient: boolean bhh> = $z0;

        $z0 = $r1.<okhttp3.OkHttpClient$Builder: boolean bhi>;

        $r0.<okhttp3.OkHttpClient: boolean bhi> = $z0;

        $z0 = $r1.<okhttp3.OkHttpClient$Builder: boolean bhj>;

        $r0.<okhttp3.OkHttpClient: boolean bhj> = $z0;

        $i0 = $r1.<okhttp3.OkHttpClient$Builder: int bhk>;

        $r0.<okhttp3.OkHttpClient: int bhk> = $i0;

        $i0 = $r1.<okhttp3.OkHttpClient$Builder: int bhl>;

        $r0.<okhttp3.OkHttpClient: int bhl> = $i0;

        $i0 = $r1.<okhttp3.OkHttpClient$Builder: int bhm>;

        $r0.<okhttp3.OkHttpClient: int bhm> = $i0;

        return;

     label2:
        varReplacer1767 = "TLS";

        $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1767);

        varReplacer1764 = null;

        varReplacer1765 = null;

        varReplacer1766 = null;

        virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1764, varReplacer1764, varReplacer1764);

        $r10 = virtualinvoke $r16.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label3:
        $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory bdm> = $r10;

        goto label1;

     label4:
        $r17 := @caughtexception;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

        catch java.security.GeneralSecurityException from label2 to label3 with label4;
    }

    static java.util.List ZZ()
    {
        java.util.List r0;

        nop;

        r0 = <okhttp3.OkHttpClient: java.util.List bgY>;

        return r0;
    }

    static java.util.List aaa()
    {
        java.util.List r0;

        nop;

        r0 = <okhttp3.OkHttpClient: java.util.List bgZ>;

        return r0;
    }

    public java.util.List Ui()
    {
        okhttp3.OkHttpClient $r0;
        java.util.List r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: java.util.List bhc>;

        return r1;
    }

    public java.util.List Uj()
    {
        okhttp3.OkHttpClient $r0;
        java.util.List r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: java.util.List bhd>;

        return r1;
    }

    public int ZO()
    {
        okhttp3.OkHttpClient $r0;
        int i0;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        i0 = $r0.<okhttp3.OkHttpClient: int bhk>;

        return i0;
    }

    public int ZP()
    {
        okhttp3.OkHttpClient $r0;
        int i0;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        i0 = $r0.<okhttp3.OkHttpClient: int bhl>;

        return i0;
    }

    public int ZQ()
    {
        okhttp3.OkHttpClient $r0;
        int i0;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        i0 = $r0.<okhttp3.OkHttpClient: int bhm>;

        return i0;
    }

    public okhttp3.CookieJar ZR()
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.CookieJar r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: okhttp3.CookieJar bxS>;

        return r1;
    }

    okhttp3.internal.InternalCache ZS()
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.Cache $r1;
        okhttp3.internal.InternalCache r2;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        $r1 = $r0.<okhttp3.OkHttpClient: okhttp3.Cache bxT>;

        if $r1 == null goto label1;

        $r1 = $r0.<okhttp3.OkHttpClient: okhttp3.Cache bxT>;

        r2 = $r1.<okhttp3.Cache: okhttp3.internal.InternalCache bvj>;

        return r2;

     label1:
        r2 = $r0.<okhttp3.OkHttpClient: okhttp3.internal.InternalCache bvj>;

        return r2;
    }

    public okhttp3.Authenticator ZT()
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.Authenticator r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator bxU>;

        return r1;
    }

    public okhttp3.ConnectionPool ZU()
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.ConnectionPool r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: okhttp3.ConnectionPool bxV>;

        return r1;
    }

    public boolean ZV()
    {
        okhttp3.OkHttpClient $r0;
        boolean z0;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        z0 = $r0.<okhttp3.OkHttpClient: boolean bhh>;

        return z0;
    }

    public boolean ZW()
    {
        okhttp3.OkHttpClient $r0;
        boolean z0;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        z0 = $r0.<okhttp3.OkHttpClient: boolean bhi>;

        return z0;
    }

    public boolean ZX()
    {
        okhttp3.OkHttpClient $r0;
        boolean z0;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        z0 = $r0.<okhttp3.OkHttpClient: boolean bhj>;

        return z0;
    }

    public okhttp3.Dispatcher ZY()
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.Dispatcher r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: okhttp3.Dispatcher bxR>;

        return r1;
    }

    public okhttp3.Dns Zp()
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.Dns r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: okhttp3.Dns bvf>;

        return r1;
    }

    public javax.net.SocketFactory Zq()
    {
        okhttp3.OkHttpClient $r0;
        javax.net.SocketFactory r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: javax.net.SocketFactory bdh>;

        return r1;
    }

    public okhttp3.Authenticator Zr()
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.Authenticator r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: okhttp3.Authenticator bvg>;

        return r1;
    }

    public java.util.List Zs()
    {
        okhttp3.OkHttpClient $r0;
        java.util.List r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: java.util.List bdj>;

        return r1;
    }

    public java.util.List Zt()
    {
        okhttp3.OkHttpClient $r0;
        java.util.List r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: java.util.List bdk>;

        return r1;
    }

    public java.net.ProxySelector Zu()
    {
        okhttp3.OkHttpClient $r0;
        java.net.ProxySelector r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: java.net.ProxySelector proxySelector>;

        return r1;
    }

    public java.net.Proxy Zv()
    {
        okhttp3.OkHttpClient $r0;
        java.net.Proxy r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: java.net.Proxy bdl>;

        return r1;
    }

    public javax.net.ssl.SSLSocketFactory Zw()
    {
        okhttp3.OkHttpClient $r0;
        javax.net.ssl.SSLSocketFactory r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory bdm>;

        return r1;
    }

    public javax.net.ssl.HostnameVerifier Zx()
    {
        okhttp3.OkHttpClient $r0;
        javax.net.ssl.HostnameVerifier r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        return r1;
    }

    public okhttp3.CertificatePinner Zy()
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.CertificatePinner r1;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        r1 = $r0.<okhttp3.OkHttpClient: okhttp3.CertificatePinner bvh>;

        return r1;
    }

    public okhttp3.Call b(okhttp3.Request)
    {
        okhttp3.OkHttpClient $r0;
        okhttp3.Request $r1;
        okhttp3.RealCall $r2;

        nop;

        $r0 := @this: okhttp3.OkHttpClient;

        $r1 := @parameter0: okhttp3.Request;

        $r2 = new okhttp3.RealCall;

        specialinvoke $r2.<okhttp3.RealCall: void <init>(okhttp3.OkHttpClient,okhttp3.Request)>($r0, $r1);

        return $r2;
    }
}
