Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.appevents.AppEvent: java.lang.String b(java.lang.String)>
		SHA-256: ea03a75498369af5fe39c3d1902858e1eebcf903810e12b2ec0be1685c24270c
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: dfdfbc12720b58582472a369ee7126d2c89ffccd15b06b641717c7d7a71ba579
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 34aa3b6ee6c7ba7ca161fa3e216f9558d03e22fe0bd8369b62d3fa741d32e768
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 4ff8afa2916954f9a0d986129d899a15493555d793f466f2b9548afac2d34340
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13103)
		Method: <com.umeng.message.proguard.c: java.lang.String a(java.lang.String)>
		SHA-256: 2e56a02fee9a0105ed856efe30a8b7bc52d3f5ce6c364ddbc21b43472c13d753
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 480d62b2174afc77ea171637c712e1afce063fa35eb4849bf29d0ae0c68791d8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.alibaba.sdk.android.feedback.xblink.util.b: byte[] a(byte[],java.lang.String)>
		SHA-256: c2d9ed51f31b30b4fb29e1aa533ed0664137893cffef559788de063fbeb76a97
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.common.util.b: java.lang.String a(byte[])>
		SHA-256: df9cc91db878d9b707b993c5401ae9c0015da739d8d6a1ac2039933dc2b2de26
		Secure: true
	Object:
		Variable: varReplacer13105
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer13105)
		Method: <com.umeng.message.proguard.c: java.lang.String a(java.lang.String)>
		SHA-256: d2c7b70311e03d519f70745d94e8dda2f4794f2944f48319ef20ccb55f34ef2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: 112de34efa7b8be9b5ffcb803e9a8d349b144a8eb478ee5a675a596c16edd59c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9760)
		Method: <com.alibaba.sdk.android.feedback.xblink.util.b: byte[] a(byte[],java.lang.String)>
		SHA-256: 4f84f45c59dae8530f2d49c9af3b5709ea3b5a75b62089c5f5be5b1583f1c3b1
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: a496e81fbb4fcdc5e03a647a323f9f888baa3ef5d73648a3e0b5a3b467ddbd1
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2296)
		Method: <com.oceanpay.util.EncryptUtil: java.lang.String getSHA256Encrypt(java.lang.String)>
		SHA-256: af6dbfae537c1abf88ee0c144f1717654667a51094e66ff5f6b365a89f927b22
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.umeng.message.proguard.c: java.lang.String a(java.lang.String)>
		SHA-256: cd7da6beafa5da85ce8cbc05ab38dd0286a0f6163f20f5054010ceb84f3df7cf
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer13250)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: f4c5574187c04bb3f8a4ac1024f9091494e7ef47cd790bf319da8b856673b438
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9446)
		Method: <com.facebook.appevents.AppEvent: java.lang.String b(java.lang.String)>
		SHA-256: 2f7e1c706f8b80953b74106260e50087734ae878218c90116a7fe481dec6885d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6128)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 5f9be026ce23b84ff789faec8bedb762ce8b2074e2490629c33b1616724186b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11687)
		Method: <com.facebook.common.util.b: java.lang.String a(byte[])>
		SHA-256: da635ecd5564db3f91b3d35d316c8702bc6f0ddac164f70a50f1a4fac97622
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.umeng.message.proguard.c: java.lang.String a(java.lang.String)>
		SHA-256: 135685ec7d22c95150e2b90f16a3df35218ca74037a98888fd20687d7e009b60
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6186)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: be0341fbc7e90f842d96a3a3cfdc348f59aafe4d0fa0abad479d3f93fe922eec
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.oceanpay.util.EncryptUtil: java.lang.String getSHA256Encrypt(java.lang.String)>
		SHA-256: d368edd94b3d830d635499e1c1c1ba56616684f4c5af8f32c9689c5dea3c2af9
		Secure: true
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: ce27a79f159a0b0e9d5beb5b86a8d9d0630db56327d0e0bd86801b701d7f64e7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 6eeb388f9f05d7f3e8f96664808a2e18b13430fbe401cac4e442507aee164771
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer13105)
		Method: <com.umeng.message.proguard.c: java.lang.String a(java.lang.String)>
		SHA-256: 678b983bc7e871428550e0fa749bf47fb8bed1854a29d50d631a5c90d1703fa1
		Secure: false
	Object:
		Variable: varReplacer13250
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer13250)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 3df97c3809418871bdf0f6ed48077a63d23b110442fa40ce9c5bf79e27c573f3
		Secure: false
	Object:
		Variable: varReplacer6128
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6128)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 797526e02a90b6e5f89a5139fda12a6f56dd7714b648424f2e12085824550afe
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6129)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 64a26151f0452e03d69e219ef8d918dd299cd0966836a815f8e7d8b777e24422
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13252)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 2c190c537226a97a157030c0393a759f146d6bd030633299b2006793460af9d7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2319)
		Method: <okhttp3.w: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 7685f602c956d93b6280f0eb0a19fdc7357f863ac3b25f064ec52aeeb7c89cf2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 114e16caa40e734a0e255361d38b3835adb74935128fc69bdb16f1ab64dce330
		Secure: false

Findings in Java Class: com.ta.utdid2.b.a.a

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer13250)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer13251, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer13251, $r3, $r2)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6128)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6130, $r3, $r2)


Findings in Java Class: com.umeng.message.proguard.c

	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer13102, $r4, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer13102, $r4, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer13105)


Findings in Java Class: okhttp3.w

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2320, r7, varReplacer2320)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2320, r7, varReplacer2320)


Findings in Java Class: com.ta.utdid2.device.c

	 in Method: java.lang.String b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 14
=====================================================================