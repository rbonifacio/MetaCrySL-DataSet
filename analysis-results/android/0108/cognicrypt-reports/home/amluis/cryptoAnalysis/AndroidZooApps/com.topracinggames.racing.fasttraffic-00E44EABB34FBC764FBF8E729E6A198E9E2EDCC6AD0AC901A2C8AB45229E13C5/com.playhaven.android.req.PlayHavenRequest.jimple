public abstract class com.playhaven.android.req.PlayHavenRequest extends java.lang.Object
{
    protected static final java.lang.String HMAC;
    private net.minidev.json.JSONObject customDimensions;
    private com.playhaven.android.req.RequestListener handler;
    private java.lang.String ktsid;
    private java.lang.String lastUrl;
    private org.springframework.http.HttpMethod restMethod;
    private javax.crypto.Mac sigMac;

    protected void <init>()
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        org.springframework.http.HttpMethod $r1;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = <org.springframework.http.HttpMethod: org.springframework.http.HttpMethod GET>;

        $r0.<com.playhaven.android.req.PlayHavenRequest: org.springframework.http.HttpMethod restMethod> = $r1;

        return;
    }

    static org.springframework.http.HttpMethod access$0(com.playhaven.android.req.PlayHavenRequest)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        org.springframework.http.HttpMethod r1;

        nop;

        $r0 := @parameter0: com.playhaven.android.req.PlayHavenRequest;

        r1 = $r0.<com.playhaven.android.req.PlayHavenRequest: org.springframework.http.HttpMethod restMethod>;

        return r1;
    }

    protected static java.lang.String base64Digest(java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException
    {
        java.lang.String $r0;
        byte[] $r1;
        int $i0, varReplacer5199;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.playhaven.android.req.PlayHavenRequest: byte[] dataDigest(java.lang.String)>($r0);

        $r0 = staticinvoke <com.playhaven.android.req.PlayHavenRequest: java.lang.String convertToBase64(byte[])>($r1);

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 + -1;

        varReplacer5199 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5199, $i0);

        return $r0;
    }

    protected static java.lang.String convertToBase64(byte[]) throws java.io.UnsupportedEncodingException
    {
        byte[] $r0;
        java.lang.String $r1;
        java.nio.charset.Charset $r2;
        null_type varReplacer5228;
        int varReplacer5229;

        nop;

        $r0 := @parameter0: byte[];

        if $r0 != null goto label1;

        varReplacer5228 = null;

        return varReplacer5228;

     label1:
        $r1 = new java.lang.String;

        varReplacer5229 = 9;

        $r0 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r0, varReplacer5229);

        $r2 = staticinvoke <com.playhaven.android.PlayHaven: java.nio.charset.Charset getUTF8()>();

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r0, $r2);

        return $r1;
    }

    protected static java.lang.String convertToHex(byte[])
    {
        byte[] $r0;
        java.lang.StringBuilder $r1;
        java.util.Formatter $r2;
        byte $b0;
        int $i1, $i2;
        java.lang.String $r3;
        java.lang.Object[] $r4;
        java.lang.Byte $r5;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        $i1 = lengthof $r0;

        $i1 = $i1 * 2;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i1);

        $r2 = new java.util.Formatter;

        specialinvoke $r2.<java.util.Formatter: void <init>(java.lang.Appendable)>($r1);

        $i1 = lengthof $r0;

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label2;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $b0 = $r0[$i2];

        $r4 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r4[0] = $r5;

        virtualinvoke $r2.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%02x", $r4);

        $i2 = $i2 + 1;

        goto label1;
    }

    protected static byte[] dataDigest(java.lang.String) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, varReplacer5227;
        java.security.MessageDigest $r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;
        null_type varReplacer5226;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        varReplacer5226 = null;

        return varReplacer5226;

     label1:
        varReplacer5227 = "SHA-1";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5227);

        $r2 = staticinvoke <com.playhaven.android.PlayHaven: java.nio.charset.Charset getUTF8()>();

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3);

        return $r3;
    }

    protected static com.playhaven.android.PlayHaven$ConnectionType getConnectionType(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Throwable $r1;
        java.lang.Object $r2;
        android.net.ConnectivityManager $r3;
        android.net.NetworkInfo $r4;
        android.net.NetworkInfo$State $r5, $r6;
        com.playhaven.android.PlayHaven$ConnectionType r7;
        int varReplacer5200, varReplacer5202;
        java.lang.String varReplacer5201;

        nop;

        $r0 := @parameter0: android.content.Context;

     label01:
        varReplacer5201 = "connectivity";

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer5201);

     label02:
        $r3 = (android.net.ConnectivityManager) $r2;

        if $r3 != null goto label03;

        r7 = <com.playhaven.android.PlayHaven$ConnectionType: com.playhaven.android.PlayHaven$ConnectionType NO_NETWORK>;

        return r7;

     label03:
        varReplacer5200 = 1;

        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(varReplacer5200);

     label04:
        if $r4 == null goto label08;

     label05:
        $r5 = virtualinvoke $r4.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

     label06:
        $r6 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r5 == $r6 goto label07;

        $r6 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTING>;

        if $r5 != $r6 goto label08;

     label07:
        r7 = <com.playhaven.android.PlayHaven$ConnectionType: com.playhaven.android.PlayHaven$ConnectionType WIFI>;

        return r7;

     label08:
        varReplacer5202 = 0;

        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>(varReplacer5202);

     label09:
        if $r4 == null goto label14;

     label10:
        $r5 = virtualinvoke $r4.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

     label11:
        $r6 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTED>;

        if $r5 == $r6 goto label12;

        $r6 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTING>;

        if $r5 != $r6 goto label14;

     label12:
        r7 = <com.playhaven.android.PlayHaven$ConnectionType: com.playhaven.android.PlayHaven$ConnectionType MOBILE>;

        return r7;

     label13:
        $r1 := @caughtexception;

        r7 = <com.playhaven.android.PlayHaven$ConnectionType: com.playhaven.android.PlayHaven$ConnectionType NO_PERMISSION>;

        return r7;

     label14:
        r7 = <com.playhaven.android.PlayHaven$ConnectionType: com.playhaven.android.PlayHaven$ConnectionType NO_NETWORK>;

        return r7;

        catch java.lang.SecurityException from label01 to label02 with label13;
        catch java.lang.SecurityException from label03 to label04 with label13;
        catch java.lang.SecurityException from label05 to label06 with label13;
        catch java.lang.SecurityException from label08 to label09 with label13;
        catch java.lang.SecurityException from label10 to label11 with label13;
    }

    protected static java.lang.String hexDigest(java.lang.String) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.playhaven.android.req.PlayHavenRequest: byte[] dataDigest(java.lang.String)>($r0);

        $r0 = staticinvoke <com.playhaven.android.req.PlayHavenRequest: java.lang.String convertToHex(byte[])>($r1);

        return $r0;
    }

    public void addDimension(java.lang.String, java.lang.Object)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        net.minidev.json.JSONObject $r3;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 = $r0.<com.playhaven.android.req.PlayHavenRequest: net.minidev.json.JSONObject customDimensions>;

        if $r3 != null goto label1;

        $r3 = new net.minidev.json.JSONObject;

        specialinvoke $r3.<net.minidev.json.JSONObject: void <init>()>();

        $r0.<com.playhaven.android.req.PlayHavenRequest: net.minidev.json.JSONObject customDimensions> = $r3;

     label1:
        $r3 = $r0.<com.playhaven.android.req.PlayHavenRequest: net.minidev.json.JSONObject customDimensions>;

        virtualinvoke $r3.<net.minidev.json.JSONObject: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return;
    }

    public void addDimensions(java.util.Map)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        java.util.Map $r1;
        net.minidev.json.JSONObject $r2;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: java.util.Map;

        $r2 = $r0.<com.playhaven.android.req.PlayHavenRequest: net.minidev.json.JSONObject customDimensions>;

        if $r2 != null goto label1;

        $r2 = new net.minidev.json.JSONObject;

        specialinvoke $r2.<net.minidev.json.JSONObject: void <init>()>();

        $r0.<com.playhaven.android.req.PlayHavenRequest: net.minidev.json.JSONObject customDimensions> = $r2;

     label1:
        $r2 = $r0.<com.playhaven.android.req.PlayHavenRequest: net.minidev.json.JSONObject customDimensions>;

        virtualinvoke $r2.<net.minidev.json.JSONObject: void putAll(java.util.Map)>($r1);

        return;
    }

    protected void addSignature(org.springframework.web.util.UriComponentsBuilder, android.content.SharedPreferences, java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        org.springframework.web.util.UriComponentsBuilder $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: org.springframework.web.util.UriComponentsBuilder;

        $r2 := @parameter1: android.content.SharedPreferences;

        $r3 := @parameter2: java.lang.String;

        virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: void addV4Signature(org.springframework.web.util.UriComponentsBuilder,android.content.SharedPreferences,java.lang.String)>($r1, $r2, $r3);

        return;
    }

    protected void addV3Signature(org.springframework.web.util.UriComponentsBuilder, android.content.SharedPreferences, java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        org.springframework.web.util.UriComponentsBuilder $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3, $r7;
        java.lang.Object[] $r4;
        java.lang.String[] $r5;
        com.playhaven.android.PlayHaven$Config $r6;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: org.springframework.web.util.UriComponentsBuilder;

        $r2 := @parameter1: android.content.SharedPreferences;

        $r3 := @parameter2: java.lang.String;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = newarray (java.lang.String)[4];

        $r6 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config Token>;

        $r7 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r2, $r6);

        $r5[0] = $r7;

        $r6 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config DeviceId>;

        $r7 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r2, $r6);

        $r5[1] = $r7;

        $r5[2] = $r3;

        $r6 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config Secret>;

        $r3 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r2, $r6);

        $r5[3] = $r3;

        $r3 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String concat(java.lang.String,java.lang.String[])>(":", $r5);

        $r3 = staticinvoke <com.playhaven.android.req.PlayHavenRequest: java.lang.String hexDigest(java.lang.String)>($r3);

        $r4[0] = $r3;

        virtualinvoke $r1.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>("signature", $r4);

        return;
    }

    protected void addV4Signature(org.springframework.web.util.UriComponentsBuilder, android.content.SharedPreferences, java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException, java.security.InvalidKeyException
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        org.springframework.web.util.UriComponentsBuilder $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3, $r4, varReplacer5242, varReplacer5244, varReplacer5245;
        java.lang.String[] $r5;
        com.playhaven.android.PlayHaven$Config $r6;
        java.lang.Object[] $r7;
        int varReplacer5243;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: org.springframework.web.util.UriComponentsBuilder;

        $r2 := @parameter1: android.content.SharedPreferences;

        $r3 := @parameter2: java.lang.String;

        $r4 = $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String ktsid>;

        if $r4 != null goto label2;

        $r5 = newarray (java.lang.String)[3];

        $r6 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config DeviceId>;

        $r4 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r2, $r6);

        $r5[0] = $r4;

        $r6 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config Token>;

        $r4 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r2, $r6);

        $r5[1] = $r4;

        $r5[2] = $r3;

        varReplacer5244 = ":";

        $r3 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String concat(java.lang.String,java.lang.String[])>(varReplacer5244, $r5);

     label1:
        $r7 = newarray (java.lang.Object)[1];

        varReplacer5243 = 1;

        $r3 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String createHmac(android.content.SharedPreferences,java.lang.String,boolean)>($r2, $r3, varReplacer5243);

        $r7[0] = $r3;

        varReplacer5245 = "sig4";

        virtualinvoke $r1.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5245, $r7);

        return;

     label2:
        $r5 = newarray (java.lang.String)[4];

        $r6 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config DeviceId>;

        $r4 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r2, $r6);

        $r5[0] = $r4;

        $r4 = $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String ktsid>;

        $r5[1] = $r4;

        $r6 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config Token>;

        $r4 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r2, $r6);

        $r5[2] = $r4;

        $r5[3] = $r3;

        varReplacer5242 = ":";

        $r3 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String concat(java.lang.String,java.lang.String[])>(varReplacer5242, $r5);

        goto label1;
    }

    protected transient java.lang.String concat(java.lang.String, java.lang.String[])
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        java.lang.String $r1, varReplacer5158;
        java.lang.String[] $r2;
        java.lang.StringBuilder $r3;
        int $i0, $i1;
        boolean $z0;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String[];

        $z0 = 1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        $r1 = $r2[$i1];

        if $r1 != null goto label4;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        if $z0 != 0 goto label6;

        varReplacer5158 = ":";

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5158);

     label5:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        goto label3;

     label6:
        $z0 = 0;

        goto label5;
    }

    protected java.lang.String createHmac(android.content.SharedPreferences, java.lang.String, boolean) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException, java.security.InvalidKeyException
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2, $r5, varReplacer5160, varReplacer5161, varReplacer5162, varReplacer5163;
        boolean $z0;
        javax.crypto.spec.SecretKeySpec $r3;
        com.playhaven.android.PlayHaven$Config $r4;
        java.nio.charset.Charset $r6;
        byte[] $r7;
        javax.crypto.Mac $r8;
        int varReplacer5159;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 := @parameter1: java.lang.String;

        $z0 := @parameter2: boolean;

        $r4 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config Secret>;

        $r5 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r1, $r4);

        $r3 = new javax.crypto.spec.SecretKeySpec;

        $r6 = staticinvoke <com.playhaven.android.PlayHaven: java.nio.charset.Charset getUTF8()>();

        $r7 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

        varReplacer5160 = "HmacSHA1";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer5160);

        varReplacer5163 = "HmacSHA1";

        $r8 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5163);

        virtualinvoke $r8.<javax.crypto.Mac: void init(java.security.Key)>($r3);

        $r6 = staticinvoke <com.playhaven.android.PlayHaven: java.nio.charset.Charset getUTF8()>();

        $r7 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r6);

        virtualinvoke $r8.<javax.crypto.Mac: void update(byte[])>($r7);

        $r7 = virtualinvoke $r8.<javax.crypto.Mac: byte[] doFinal()>();

        $r2 = new java.lang.String;

        varReplacer5159 = 8;

        $r7 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r7, varReplacer5159);

        $r6 = staticinvoke <com.playhaven.android.PlayHaven: java.nio.charset.Charset getUTF8()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r7, $r6);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        varReplacer5161 = "=";

        varReplacer5162 = "";

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(varReplacer5161, varReplacer5162);

        return $r2;
    }

    protected org.springframework.web.util.UriComponentsBuilder createUrl(android.content.Context) throws com.playhaven.android.PlayHavenException
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.Context $r1;
        java.lang.Exception $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        java.util.Locale $r4;
        android.util.DisplayMetrics $r5;
        android.graphics.Point $r6;
        android.content.SharedPreferences $r7;
        com.playhaven.android.PlayHaven$Config $r8;
        java.lang.String $r9, $r19, varReplacer5164, varReplacer5165, varReplacer5166, varReplacer5167, varReplacer5168, varReplacer5169, varReplacer5170, varReplacer5171, varReplacer5172, varReplacer5173, varReplacer5174, varReplacer5175, varReplacer5176, varReplacer5177, varReplacer5178, varReplacer5179, varReplacer5180, varReplacer5181, varReplacer5182, varReplacer5183, varReplacer5184, varReplacer5185, varReplacer5186, varReplacer5187, varReplacer5188, varReplacer5189, varReplacer5191, varReplacer5192;
        org.springframework.web.util.UriComponentsBuilder $r10;
        android.content.res.Resources $r11;
        int $i0, varReplacer5190;
        java.lang.Object[] $r12, $r22;
        java.lang.Integer $r13;
        java.lang.Object $r14;
        android.view.WindowManager $r15;
        android.view.Display $r16;
        com.playhaven.android.PlayHaven$ConnectionType $r17;
        android.content.res.Configuration $r18;
        java.lang.String[] $r20;
        java.lang.StringBuilder $r21;
        net.minidev.json.JSONObject $r23;
        boolean $z0;
        java.util.UUID $r24;
        java.nio.charset.Charset $r25;
        byte[] $r26;
        javax.crypto.Mac $r27;
        com.playhaven.android.PlayHavenException $r28;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.Context;

     label01:
        $r7 = staticinvoke <com.playhaven.android.PlayHaven: android.content.SharedPreferences getPreferences(android.content.Context)>($r1);

     label02:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config APIServer>;

     label03:
        $r9 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r7, $r8);

        $r10 = staticinvoke <org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder fromHttpUrl(java.lang.String)>($r9);

        $r11 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: int getApiPath(android.content.Context)>($r1);

        $r9 = virtualinvoke $r11.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder path(java.lang.String)>($r9);

        $r12 = newarray (java.lang.Object)[1];

     label04:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config AppPkg>;

     label05:
        $r9 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r7, $r8);

        $r12[0] = $r9;

        varReplacer5164 = "app";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5164, $r12);

        $r12 = newarray (java.lang.Object)[1];

     label06:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config OptOut>;

     label07:
        varReplacer5184 = "0";

        $r9 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config,java.lang.String)>($r7, $r8, varReplacer5184);

        $r12[0] = $r9;

        varReplacer5187 = "opt_out";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5187, $r12);

        $r12 = newarray (java.lang.Object)[1];

     label08:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config AppVersion>;

     label09:
        $r9 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r7, $r8);

        $r12[0] = $r9;

        varReplacer5167 = "app_version";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5167, $r12);

        $r12 = newarray (java.lang.Object)[1];

     label10:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config OSVersion>;

     label11:
        varReplacer5190 = 0;

        $r13 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.Integer getInt(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config,int)>($r7, $r8, varReplacer5190);

        $r12[0] = $r13;

        varReplacer5168 = "os";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5168, $r12);

        varReplacer5173 = "window";

        $r14 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer5173);

        $r15 = (android.view.WindowManager) $r14;

        $r16 = interfaceinvoke $r15.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r12 = newarray (java.lang.Object)[1];

     label12:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config DeviceModel>;

     label13:
        $r9 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r7, $r8);

        $r12[0] = $r9;

        varReplacer5183 = "hardware";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5183, $r12);

        $r17 = staticinvoke <com.playhaven.android.req.PlayHavenRequest: com.playhaven.android.PlayHaven$ConnectionType getConnectionType(android.content.Context)>($r1);

        $r12 = newarray (java.lang.Object)[1];

        $i0 = virtualinvoke $r17.<com.playhaven.android.PlayHaven$ConnectionType: int ordinal()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12[0] = $r13;

        varReplacer5182 = "connection";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5182, $r12);

        $r12 = newarray (java.lang.Object)[1];

        $r11 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r18 = virtualinvoke $r11.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r18.<android.content.res.Configuration: int screenLayout>;

     label14:
        $i0 = $i0 & 15;

     label15:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12[0] = $r13;

        varReplacer5172 = "idiom";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5172, $r12);

     label16:
        $r6 = new android.graphics.Point;

     label17:
        specialinvoke $r6.<android.graphics.Point: void <init>()>();

     label18:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 13 goto label48;

     label19:
        virtualinvoke $r16.<android.view.Display: void getSize(android.graphics.Point)>($r6);

     label20:
        $r12 = newarray (java.lang.Object)[1];

        $i0 = $r6.<android.graphics.Point: int x>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12[0] = $r13;

        varReplacer5176 = "width";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5176, $r12);

        $r12 = newarray (java.lang.Object)[1];

        $i0 = $r6.<android.graphics.Point: int y>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12[0] = $r13;

        varReplacer5178 = "height";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5178, $r12);

     label21:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config SDKVersion>;

     label22:
        $r9 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r7, $r8);

     label23:
        $r19 = <com.playhaven.android.Version: java.lang.String PLUGIN_BUILD_TIME>;

     label24:
        varReplacer5177 = "[\\s]";

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer5177);

     label25:
        $r21 = new java.lang.StringBuilder;

     label26:
        varReplacer5181 = ".";

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5181);

        $r19 = $r20[0];

        varReplacer5170 = "-";

        varReplacer5171 = "";

        $r19 = virtualinvoke $r19.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(varReplacer5170, varReplacer5171);

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5188 = "-SNAPSHOT";

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer5188, $r19);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r9;

        varReplacer5189 = "sdk_version";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5189, $r12);

        $r12 = newarray (java.lang.Object)[1];

     label27:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config PluginIdentifer>;

     label28:
        $r9 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r7, $r8);

        $r12[0] = $r9;

        varReplacer5174 = "plugin";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5174, $r12);

        $r11 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r18 = virtualinvoke $r11.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r4 = $r18.<android.content.res.Configuration: java.util.Locale locale>;

        $r12 = newarray (java.lang.Object)[1];

        $r22 = newarray (java.lang.Object)[2];

        $r9 = virtualinvoke $r4.<java.util.Locale: java.lang.String toString()>();

        $r22[0] = $r9;

        $r9 = virtualinvoke $r4.<java.util.Locale: java.lang.String getLanguage()>();

        $r22[1] = $r9;

        varReplacer5165 = "%s,%s";

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer5165, $r22);

        $r12[0] = $r9;

        varReplacer5175 = "languages";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5175, $r12);

        $r12 = newarray (java.lang.Object)[1];

     label29:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config Token>;

     label30:
        $r9 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r7, $r8);

        $r12[0] = $r9;

        varReplacer5179 = "token";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5179, $r12);

        $r12 = newarray (java.lang.Object)[1];

     label31:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config DeviceId>;

     label32:
        $r9 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r7, $r8);

        $r12[0] = $r9;

        varReplacer5191 = "device";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5191, $r12);

     label33:
        $r5 = new android.util.DisplayMetrics;

     label34:
        specialinvoke $r5.<android.util.DisplayMetrics: void <init>()>();

        virtualinvoke $r16.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r5);

        $r12 = newarray (java.lang.Object)[1];

        $i0 = $r5.<android.util.DisplayMetrics: int densityDpi>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r12[0] = $r13;

        varReplacer5186 = "dpi";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5186, $r12);

        $r23 = $r0.<com.playhaven.android.req.PlayHavenRequest: net.minidev.json.JSONObject customDimensions>;

     label35:
        if $r23 == null goto label39;

     label36:
        $r23 = $r0.<com.playhaven.android.req.PlayHavenRequest: net.minidev.json.JSONObject customDimensions>;

        $z0 = virtualinvoke $r23.<net.minidev.json.JSONObject: boolean isEmpty()>();

     label37:
        if $z0 != 0 goto label39;

     label38:
        $r12 = newarray (java.lang.Object)[1];

        $r23 = $r0.<com.playhaven.android.req.PlayHavenRequest: net.minidev.json.JSONObject customDimensions>;

        $r9 = virtualinvoke $r23.<net.minidev.json.JSONObject: java.lang.String toJSONString()>();

        $r12[0] = $r9;

        varReplacer5192 = "custom";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5192, $r12);

     label39:
        $r24 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r9 = virtualinvoke $r24.<java.util.UUID: java.lang.String toString()>();

        $r9 = staticinvoke <com.playhaven.android.req.PlayHavenRequest: java.lang.String base64Digest(java.lang.String)>($r9);

        $r12 = newarray (java.lang.Object)[1];

        $r12[0] = $r9;

        varReplacer5180 = "nonce";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5180, $r12);

        $r19 = staticinvoke <com.playhaven.android.util.KontagentUtil: java.lang.String getSenderId(android.content.Context)>($r1);

        $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String ktsid> = $r19;

        $r19 = $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String ktsid>;

     label40:
        if $r19 == null goto label42;

     label41:
        $r12 = newarray (java.lang.Object)[1];

        $r19 = $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String ktsid>;

        $r12[0] = $r19;

        varReplacer5185 = "sid";

        virtualinvoke $r10.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponentsBuilder queryParam(java.lang.String,java.lang.Object[])>(varReplacer5185, $r12);

     label42:
        virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: void addSignature(org.springframework.web.util.UriComponentsBuilder,android.content.SharedPreferences,java.lang.String)>($r10, $r7, $r9);

     label43:
        $r8 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config Secret>;

     label44:
        $r19 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r7, $r8);

     label45:
        $r3 = new javax.crypto.spec.SecretKeySpec;

     label46:
        $r25 = staticinvoke <com.playhaven.android.PlayHaven: java.nio.charset.Charset getUTF8()>();

        $r26 = virtualinvoke $r19.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r25);

        varReplacer5169 = "HmacSHA1";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r26, varReplacer5169);

        varReplacer5166 = "HmacSHA1";

        $r27 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5166);

        $r0.<com.playhaven.android.req.PlayHavenRequest: javax.crypto.Mac sigMac> = $r27;

        $r27 = $r0.<com.playhaven.android.req.PlayHavenRequest: javax.crypto.Mac sigMac>;

        virtualinvoke $r27.<javax.crypto.Mac: void init(java.security.Key)>($r3);

        $r27 = $r0.<com.playhaven.android.req.PlayHavenRequest: javax.crypto.Mac sigMac>;

        $r25 = staticinvoke <com.playhaven.android.PlayHaven: java.nio.charset.Charset getUTF8()>();

        $r26 = virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r25);

        virtualinvoke $r27.<javax.crypto.Mac: void update(byte[])>($r26);

     label47:
        return $r10;

     label48:
        $i0 = virtualinvoke $r16.<android.view.Display: int getWidth()>();

        $r6.<android.graphics.Point: int x> = $i0;

        $i0 = virtualinvoke $r16.<android.view.Display: int getHeight()>();

        $r6.<android.graphics.Point: int y> = $i0;

     label49:
        goto label20;

     label50:
        $r2 := @caughtexception;

        $r28 = new com.playhaven.android.PlayHavenException;

        specialinvoke $r28.<com.playhaven.android.PlayHavenException: void <init>(java.lang.Throwable)>($r2);

        throw $r28;

        catch java.lang.Exception from label01 to label02 with label50;
        catch java.lang.Exception from label03 to label04 with label50;
        catch java.lang.Exception from label05 to label06 with label50;
        catch java.lang.Exception from label07 to label08 with label50;
        catch java.lang.Exception from label09 to label10 with label50;
        catch java.lang.Exception from label11 to label12 with label50;
        catch java.lang.Exception from label13 to label14 with label50;
        catch java.lang.Exception from label15 to label16 with label50;
        catch java.lang.Exception from label17 to label18 with label50;
        catch java.lang.Exception from label19 to label21 with label50;
        catch java.lang.Exception from label22 to label23 with label50;
        catch java.lang.Exception from label24 to label25 with label50;
        catch java.lang.Exception from label26 to label27 with label50;
        catch java.lang.Exception from label28 to label29 with label50;
        catch java.lang.Exception from label30 to label31 with label50;
        catch java.lang.Exception from label32 to label33 with label50;
        catch java.lang.Exception from label34 to label35 with label50;
        catch java.lang.Exception from label36 to label37 with label50;
        catch java.lang.Exception from label38 to label40 with label50;
        catch java.lang.Exception from label41 to label43 with label50;
        catch java.lang.Exception from label44 to label45 with label50;
        catch java.lang.Exception from label46 to label47 with label50;
        catch java.lang.Exception from label48 to label49 with label50;
    }

    protected int getApiPath(android.content.Context)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.Context $r1;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.Context;

        return -1;
    }

    protected com.playhaven.android.compat.VendorCompat getCompat(android.content.Context)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.Context $r1;
        com.playhaven.android.compat.VendorCompat $r2;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.playhaven.android.PlayHaven: com.playhaven.android.compat.VendorCompat getVendorCompat(android.content.Context)>($r1);

        return $r2;
    }

    protected org.springframework.http.HttpEntity getEntity()
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        org.springframework.http.HttpEntity $r1;
        org.springframework.http.HttpHeaders $r2;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 = new org.springframework.http.HttpEntity;

        $r2 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: org.springframework.http.HttpHeaders getHeaders()>();

        specialinvoke $r1.<org.springframework.http.HttpEntity: void <init>(org.springframework.util.MultiValueMap)>($r2);

        return $r1;
    }

    protected org.springframework.http.HttpHeaders getHeaders()
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        org.springframework.http.HttpHeaders $r1;
        java.util.List $r2;
        org.springframework.http.MediaType $r3;
        java.lang.String $r4;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 = new org.springframework.http.HttpHeaders;

        specialinvoke $r1.<org.springframework.http.HttpHeaders: void <init>()>();

        $r3 = new org.springframework.http.MediaType;

        specialinvoke $r3.<org.springframework.http.MediaType: void <init>(java.lang.String,java.lang.String)>("application", "json");

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        virtualinvoke $r1.<org.springframework.http.HttpHeaders: void setAccept(java.util.List)>($r2);

        $r4 = <com.playhaven.android.req.UserAgent: java.lang.String USER_AGENT>;

        virtualinvoke $r1.<org.springframework.http.HttpHeaders: void setUserAgent(java.lang.String)>($r4);

        return $r1;
    }

    protected java.lang.Integer getInt(android.content.SharedPreferences, com.playhaven.android.PlayHaven$Config, int)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.SharedPreferences $r1;
        com.playhaven.android.PlayHaven$Config $r2;
        int $i0, varReplacer5241;
        java.lang.String $r3;
        java.lang.Integer $r4;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 := @parameter1: com.playhaven.android.PlayHaven$Config;

        $i0 := @parameter2: int;

        $r3 = virtualinvoke $r2.<com.playhaven.android.PlayHaven$Config: java.lang.String toString()>();

        varReplacer5241 = 0;

        $i0 = interfaceinvoke $r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>($r3, varReplacer5241);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        return $r4;
    }

    public java.lang.String getLastUrl()
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        java.lang.String r1;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        r1 = $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String lastUrl>;

        return r1;
    }

    protected org.springframework.http.HttpMethod getMethod()
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        org.springframework.http.HttpMethod r1;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        r1 = $r0.<com.playhaven.android.req.PlayHavenRequest: org.springframework.http.HttpMethod restMethod>;

        return r1;
    }

    protected java.lang.String getMockJsonResponse()
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        null_type varReplacer4837;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        varReplacer4837 = null;

        return varReplacer4837;
    }

    public com.playhaven.android.req.RequestListener getResponseHandler()
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        com.playhaven.android.req.RequestListener r1;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        r1 = $r0.<com.playhaven.android.req.PlayHavenRequest: com.playhaven.android.req.RequestListener handler>;

        return r1;
    }

    protected java.lang.String getString(android.content.SharedPreferences, com.playhaven.android.PlayHaven$Config)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.SharedPreferences $r1;
        com.playhaven.android.PlayHaven$Config $r2;
        java.lang.String $r3, varReplacer4860;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 := @parameter1: com.playhaven.android.PlayHaven$Config;

        varReplacer4860 = "unknown";

        $r3 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config,java.lang.String)>($r1, $r2, varReplacer4860);

        return $r3;
    }

    protected java.lang.String getString(android.content.SharedPreferences, com.playhaven.android.PlayHaven$Config, java.lang.String)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.SharedPreferences $r1;
        com.playhaven.android.PlayHaven$Config $r2;
        java.lang.String $r3, $r4;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.SharedPreferences;

        $r2 := @parameter1: com.playhaven.android.PlayHaven$Config;

        $r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke $r2.<com.playhaven.android.PlayHaven$Config: java.lang.String toString()>();

        $r3 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r4, $r3);

        return $r3;
    }

    public java.lang.String getUrl(android.content.Context) throws com.playhaven.android.PlayHavenException
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.Context $r1;
        org.springframework.web.util.UriComponentsBuilder $r2;
        org.springframework.web.util.UriComponents $r3;
        java.lang.String $r4;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.Context;

        $r2 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: org.springframework.web.util.UriComponentsBuilder createUrl(android.content.Context)>($r1);

        $r3 = virtualinvoke $r2.<org.springframework.web.util.UriComponentsBuilder: org.springframework.web.util.UriComponents build()>();

        $r3 = virtualinvoke $r3.<org.springframework.web.util.UriComponents: org.springframework.web.util.UriComponents encode()>();

        $r4 = virtualinvoke $r3.<org.springframework.web.util.UriComponents: java.lang.String toUriString()>();

        $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String lastUrl> = $r4;

        $r4 = $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String lastUrl>;

        return $r4;
    }

    protected void handleResponse(com.playhaven.android.PlayHavenException)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        com.playhaven.android.PlayHavenException $r1;
        com.playhaven.android.req.RequestListener $r2;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: com.playhaven.android.PlayHavenException;

        $r2 = $r0.<com.playhaven.android.req.PlayHavenRequest: com.playhaven.android.req.RequestListener handler>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.playhaven.android.req.PlayHavenRequest: com.playhaven.android.req.RequestListener handler>;

        interfaceinvoke $r2.<com.playhaven.android.req.RequestListener: void handleResponse(com.playhaven.android.PlayHavenException)>($r1);

     label1:
        return;
    }

    protected void handleResponse(java.lang.String)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        java.lang.String $r1;
        com.playhaven.android.req.RequestListener $r2;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.playhaven.android.req.PlayHavenRequest: com.playhaven.android.req.RequestListener handler>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.playhaven.android.req.PlayHavenRequest: com.playhaven.android.req.RequestListener handler>;

        interfaceinvoke $r2.<com.playhaven.android.req.RequestListener: void handleResponse(java.lang.String)>($r1);

     label1:
        return;
    }

    public void send(android.content.Context)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.Context $r1;
        java.lang.Thread $r2;
        com.playhaven.android.req.PlayHavenRequest$1 $r3;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.Context;

        $r2 = new java.lang.Thread;

        $r3 = new com.playhaven.android.req.PlayHavenRequest$1;

        specialinvoke $r3.<com.playhaven.android.req.PlayHavenRequest$1: void <init>(com.playhaven.android.req.PlayHavenRequest,android.content.Context)>($r0, $r1);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    protected void serverSuccess(android.content.Context)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.Context $r1;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.Context;

        return;
    }

    protected void setMethod(org.springframework.http.HttpMethod)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        org.springframework.http.HttpMethod $r1;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: org.springframework.http.HttpMethod;

        $r0.<com.playhaven.android.req.PlayHavenRequest: org.springframework.http.HttpMethod restMethod> = $r1;

        return;
    }

    public void setResponseHandler(com.playhaven.android.req.RequestListener)
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        com.playhaven.android.req.RequestListener $r1;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: com.playhaven.android.req.RequestListener;

        $r0.<com.playhaven.android.req.PlayHavenRequest: com.playhaven.android.req.RequestListener handler> = $r1;

        return;
    }

    protected void validateSignatures(android.content.Context, java.lang.String, java.lang.String) throws com.playhaven.android.req.SignatureException
    {
        com.playhaven.android.req.PlayHavenRequest $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r3, $r9, varReplacer4838, varReplacer4840, varReplacer4841, varReplacer4842, varReplacer4843, varReplacer4844, varReplacer4845, varReplacer4846, varReplacer4847, varReplacer4848, varReplacer4849, varReplacer4851, varReplacer4852, varReplacer4853, varReplacer4854, varReplacer4855, varReplacer4856, varReplacer4857, varReplacer4858;
        javax.crypto.Mac $r4;
        com.playhaven.android.req.SignatureException $r5, $r18;
        com.playhaven.android.req.SignatureException$Type $r6;
        java.nio.charset.Charset $r7;
        byte[] $r8;
        boolean $z0;
        java.lang.Object[] $r10;
        android.content.SharedPreferences $r11;
        java.lang.Object $r12;
        net.minidev.json.JSONArray $r13;
        int $i0, $i1, varReplacer4839, varReplacer4850, varReplacer4859;
        net.minidev.json.JSONObject $r14;
        java.lang.String[] $r15;
        com.playhaven.android.PlayHaven$Config $r16;
        com.jayway.jsonpath.Filter[] $r17;
        java.lang.Exception $r19, $r20;

        nop;

        $r0 := @this: com.playhaven.android.req.PlayHavenRequest;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 = $r0.<com.playhaven.android.req.PlayHavenRequest: javax.crypto.Mac sigMac>;

        if $r4 != null goto label01;

        return;

     label01:
        if $r2 != null goto label02;

        $r5 = new com.playhaven.android.req.SignatureException;

        $r6 = <com.playhaven.android.req.SignatureException$Type: com.playhaven.android.req.SignatureException$Type Digest>;

        varReplacer4851 = "No digest found";

        specialinvoke $r5.<com.playhaven.android.req.SignatureException: void <init>(com.playhaven.android.req.SignatureException$Type,java.lang.String)>($r6, varReplacer4851);

        throw $r5;

     label02:
        if $r3 != null goto label03;

        $r5 = new com.playhaven.android.req.SignatureException;

        $r6 = <com.playhaven.android.req.SignatureException$Type: com.playhaven.android.req.SignatureException$Type Digest>;

        varReplacer4854 = "No JSON found";

        specialinvoke $r5.<com.playhaven.android.req.SignatureException: void <init>(com.playhaven.android.req.SignatureException$Type,java.lang.String)>($r6, varReplacer4854);

        throw $r5;

     label03:
        $r4 = $r0.<com.playhaven.android.req.PlayHavenRequest: javax.crypto.Mac sigMac>;

        $r7 = staticinvoke <com.playhaven.android.PlayHaven: java.nio.charset.Charset getUTF8()>();

        $r8 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r7);

        virtualinvoke $r4.<javax.crypto.Mac: void update(byte[])>($r8);

        $r4 = $r0.<com.playhaven.android.req.PlayHavenRequest: javax.crypto.Mac sigMac>;

        $r8 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>();

        $r9 = new java.lang.String;

        varReplacer4850 = 8;

        $r8 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r8, varReplacer4850);

        $r7 = staticinvoke <com.playhaven.android.PlayHaven: java.nio.charset.Charset getUTF8()>();

        specialinvoke $r9.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r8, $r7);

        $r9 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label04;

        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = $r2;

        $r10[1] = $r9;

        varReplacer4844 = "Signature error. Received: %s != Derived: %s";

        staticinvoke <com.playhaven.android.PlayHaven: void v(java.lang.String,java.lang.Object[])>(varReplacer4844, $r10);

        $r5 = new com.playhaven.android.req.SignatureException;

        $r6 = <com.playhaven.android.req.SignatureException$Type: com.playhaven.android.req.SignatureException$Type Digest>;

        varReplacer4847 = "Signature mismatch";

        specialinvoke $r5.<com.playhaven.android.req.SignatureException: void <init>(com.playhaven.android.req.SignatureException$Type,java.lang.String)>($r6, varReplacer4847);

        throw $r5;

     label04:
        $r11 = staticinvoke <com.playhaven.android.PlayHaven: android.content.SharedPreferences getPreferences(android.content.Context)>($r1);

     label05:
        varReplacer4855 = "$.response.context.content.*.parameters.rewards";

        $r12 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.Object getPath(java.lang.String,java.lang.String)>($r3, varReplacer4855);

     label06:
        $r13 = (net.minidev.json.JSONArray) $r12;

     label07:
        if $r13 == null goto label10;

        $i0 = 0;

     label08:
        $i1 = virtualinvoke $r13.<net.minidev.json.JSONArray: int size()>();

     label09:
        if $i0 < $i1 goto label36;

     label10:
        varReplacer4845 = "$.response.context.content.*.parameters.purchases";

        $r12 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.Object getPath(java.lang.String,java.lang.String)>($r3, varReplacer4845);

     label11:
        $r13 = (net.minidev.json.JSONArray) $r12;

     label12:
        if $r13 == null goto label57;

        $i0 = 0;

     label13:
        $i1 = virtualinvoke $r13.<net.minidev.json.JSONArray: int size()>();

     label14:
        if $i0 >= $i1 goto label57;

     label15:
        $r12 = virtualinvoke $r13.<net.minidev.json.JSONArray: java.lang.Object get(int)>($i0);

     label16:
        $r14 = (net.minidev.json.JSONObject) $r12;

        $r15 = newarray (java.lang.String)[5];

     label17:
        $r16 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config DeviceId>;

     label18:
        $r2 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r11, $r16);

     label19:
        $r15[0] = $r2;

     label20:
        varReplacer4848 = "$.product";

        $r2 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.String asString(net.minidev.json.JSONObject,java.lang.String)>($r14, varReplacer4848);

     label21:
        $r15[1] = $r2;

     label22:
        varReplacer4838 = "$.name";

        $r2 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.String asString(net.minidev.json.JSONObject,java.lang.String)>($r14, varReplacer4838);

     label23:
        $r15[2] = $r2;

     label24:
        varReplacer4856 = "$.quantity";

        $r2 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.String asString(net.minidev.json.JSONObject,java.lang.String)>($r14, varReplacer4856);

     label25:
        $r15[3] = $r2;

     label26:
        varReplacer4840 = "$.receipt";

        $r2 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.String asString(net.minidev.json.JSONObject,java.lang.String)>($r14, varReplacer4840);

     label27:
        $r15[4] = $r2;

     label28:
        varReplacer4843 = ":";

        $r2 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String concat(java.lang.String,java.lang.String[])>(varReplacer4843, $r15);

        varReplacer4859 = 1;

        $r2 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String createHmac(android.content.SharedPreferences,java.lang.String,boolean)>($r11, $r2, varReplacer4859);

     label29:
        $r17 = newarray (com.jayway.jsonpath.Filter)[0];

     label30:
        varReplacer4849 = "$.sig4";

        $r12 = staticinvoke <com.jayway.jsonpath.JsonPath: java.lang.Object read(java.lang.Object,java.lang.String,com.jayway.jsonpath.Filter[])>($r14, varReplacer4849, $r17);

     label31:
        $r3 = (java.lang.String) $r12;

     label32:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label33:
        if $z0 != 0 goto label55;

        $r5 = new com.playhaven.android.req.SignatureException;

        $r6 = <com.playhaven.android.req.SignatureException$Type: com.playhaven.android.req.SignatureException$Type Purchase>;

     label34:
        varReplacer4853 = "Signature does not match.";

        specialinvoke $r5.<com.playhaven.android.req.SignatureException: void <init>(com.playhaven.android.req.SignatureException$Type,java.lang.String)>($r6, varReplacer4853);

        throw $r5;

     label35:
        $r5 := @caughtexception;

        throw $r5;

     label36:
        $r12 = virtualinvoke $r13.<net.minidev.json.JSONArray: java.lang.Object get(int)>($i0);

     label37:
        $r14 = (net.minidev.json.JSONObject) $r12;

        $r15 = newarray (java.lang.String)[4];

     label38:
        $r16 = <com.playhaven.android.PlayHaven$Config: com.playhaven.android.PlayHaven$Config DeviceId>;

     label39:
        $r2 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String getString(android.content.SharedPreferences,com.playhaven.android.PlayHaven$Config)>($r11, $r16);

     label40:
        $r15[0] = $r2;

     label41:
        varReplacer4852 = "$.reward";

        $r2 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.String asString(net.minidev.json.JSONObject,java.lang.String)>($r14, varReplacer4852);

     label42:
        $r15[1] = $r2;

     label43:
        varReplacer4842 = "$.quantity";

        $r2 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.String asString(net.minidev.json.JSONObject,java.lang.String)>($r14, varReplacer4842);

     label44:
        $r15[2] = $r2;

     label45:
        varReplacer4846 = "$.receipt";

        $r2 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.String asString(net.minidev.json.JSONObject,java.lang.String)>($r14, varReplacer4846);

     label46:
        $r15[3] = $r2;

     label47:
        varReplacer4841 = ":";

        $r2 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String concat(java.lang.String,java.lang.String[])>(varReplacer4841, $r15);

        varReplacer4839 = 1;

        $r2 = virtualinvoke $r0.<com.playhaven.android.req.PlayHavenRequest: java.lang.String createHmac(android.content.SharedPreferences,java.lang.String,boolean)>($r11, $r2, varReplacer4839);

        varReplacer4857 = "$.sig4";

        $r12 = staticinvoke <com.playhaven.android.util.JsonUtil: java.lang.Object getPath(net.minidev.json.JSONObject,java.lang.String)>($r14, varReplacer4857);

     label48:
        $r9 = (java.lang.String) $r12;

     label49:
        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

     label50:
        if $z0 != 0 goto label53;

        $r5 = new com.playhaven.android.req.SignatureException;

        $r6 = <com.playhaven.android.req.SignatureException$Type: com.playhaven.android.req.SignatureException$Type Reward>;

     label51:
        varReplacer4858 = "Signature does not match.";

        specialinvoke $r5.<com.playhaven.android.req.SignatureException: void <init>(com.playhaven.android.req.SignatureException$Type,java.lang.String)>($r6, varReplacer4858);

        throw $r5;

     label52:
        $r18 := @caughtexception;

        throw $r18;

     label53:
        $i0 = $i0 + 1;

        goto label08;

     label54:
        $r19 := @caughtexception;

        $r5 = new com.playhaven.android.req.SignatureException;

        $r6 = <com.playhaven.android.req.SignatureException$Type: com.playhaven.android.req.SignatureException$Type Reward>;

        specialinvoke $r5.<com.playhaven.android.req.SignatureException: void <init>(java.lang.Throwable,com.playhaven.android.req.SignatureException$Type)>($r19, $r6);

        throw $r5;

     label55:
        $i0 = $i0 + 1;

        goto label13;

     label56:
        $r20 := @caughtexception;

        $r5 = new com.playhaven.android.req.SignatureException;

        $r6 = <com.playhaven.android.req.SignatureException$Type: com.playhaven.android.req.SignatureException$Type Purchase>;

        specialinvoke $r5.<com.playhaven.android.req.SignatureException: void <init>(java.lang.Throwable,com.playhaven.android.req.SignatureException$Type)>($r20, $r6);

        throw $r5;

     label57:
        return;

        catch com.playhaven.android.req.SignatureException from label05 to label06 with label52;
        catch com.playhaven.android.req.SignatureException from label08 to label09 with label52;
        catch java.lang.Exception from label05 to label07 with label54;
        catch java.lang.Exception from label08 to label09 with label54;
        catch com.playhaven.android.req.SignatureException from label10 to label11 with label35;
        catch com.playhaven.android.req.SignatureException from label13 to label14 with label35;
        catch com.playhaven.android.req.SignatureException from label15 to label16 with label35;
        catch com.playhaven.android.req.SignatureException from label18 to label19 with label35;
        catch com.playhaven.android.req.SignatureException from label20 to label21 with label35;
        catch com.playhaven.android.req.SignatureException from label22 to label23 with label35;
        catch com.playhaven.android.req.SignatureException from label24 to label25 with label35;
        catch com.playhaven.android.req.SignatureException from label26 to label27 with label35;
        catch com.playhaven.android.req.SignatureException from label28 to label29 with label35;
        catch com.playhaven.android.req.SignatureException from label30 to label31 with label35;
        catch com.playhaven.android.req.SignatureException from label32 to label33 with label35;
        catch com.playhaven.android.req.SignatureException from label34 to label35 with label35;
        catch java.lang.Exception from label10 to label12 with label56;
        catch java.lang.Exception from label13 to label14 with label56;
        catch java.lang.Exception from label15 to label17 with label56;
        catch java.lang.Exception from label18 to label33 with label56;
        catch java.lang.Exception from label34 to label35 with label56;
        catch com.playhaven.android.req.SignatureException from label36 to label37 with label52;
        catch com.playhaven.android.req.SignatureException from label39 to label40 with label52;
        catch com.playhaven.android.req.SignatureException from label41 to label42 with label52;
        catch com.playhaven.android.req.SignatureException from label43 to label44 with label52;
        catch com.playhaven.android.req.SignatureException from label45 to label46 with label52;
        catch com.playhaven.android.req.SignatureException from label47 to label48 with label52;
        catch com.playhaven.android.req.SignatureException from label49 to label50 with label52;
        catch com.playhaven.android.req.SignatureException from label51 to label52 with label52;
        catch java.lang.Exception from label36 to label38 with label54;
        catch java.lang.Exception from label39 to label50 with label54;
        catch java.lang.Exception from label51 to label52 with label54;
    }
}
