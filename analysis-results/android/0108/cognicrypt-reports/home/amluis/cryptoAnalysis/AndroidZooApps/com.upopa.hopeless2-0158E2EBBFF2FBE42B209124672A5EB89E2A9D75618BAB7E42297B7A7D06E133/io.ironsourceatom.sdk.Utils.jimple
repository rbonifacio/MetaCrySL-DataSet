class io.ironsourceatom.sdk.Utils extends java.lang.Object
{

    void <init>()
    {
        io.ironsourceatom.sdk.Utils $r0;

        $r0 := @this: io.ironsourceatom.sdk.Utils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String auth(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer5696, varReplacer5697, varReplacer5698, varReplacer5699, varReplacer5700, varReplacer5701;
        byte $b0;
        java.lang.StringBuilder $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        int $i1, $i2;
        byte[] $r4;
        javax.crypto.Mac $r5;
        java.lang.Object[] $r6;
        java.lang.Byte $r7;
        java.lang.Throwable $r8, $r9, $r10;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i1 = 0;

        $r3 = new javax.crypto.spec.SecretKeySpec;

     label01:
        varReplacer5700 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5700);

        varReplacer5697 = "HmacSHA256";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer5697);

        varReplacer5699 = "HmacSHA256";

        $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5699);

        virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r3);

     label02:
        $r2 = new java.lang.StringBuilder;

     label03:
        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer5701 = "UTF-8";

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5701);

        $r4 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4);

     label04:
        $i2 = lengthof $r4;

     label05:
        if $i1 >= $i2 goto label10;

        $b0 = $r4[$i1];

        $r6 = newarray (java.lang.Object)[1];

     label06:
        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

     label07:
        $r6[0] = $r7;

     label08:
        varReplacer5696 = "%1$02x";

        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer5696, $r6);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label09:
        $i1 = $i1 + 1;

        goto label05;

     label10:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        return $r0;

     label12:
        $r8 := @caughtexception;

     label13:
        varReplacer5698 = "";

        return varReplacer5698;

     label14:
        $r9 := @caughtexception;

        goto label13;

     label15:
        $r10 := @caughtexception;

        goto label13;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label12;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label12;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label12;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label12;
        catch java.security.InvalidKeyException from label01 to label02 with label14;
        catch java.security.InvalidKeyException from label03 to label04 with label14;
        catch java.security.InvalidKeyException from label06 to label07 with label14;
        catch java.security.InvalidKeyException from label08 to label09 with label14;
        catch java.security.InvalidKeyException from label10 to label11 with label14;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label15;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label15;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label15;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label15;
        catch java.io.UnsupportedEncodingException from label10 to label11 with label15;
    }

    public static byte[] getBytes(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2;
        int $i0, varReplacer5713, varReplacer5714;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = newarray (byte)[8192];

     label1:
        $i0 = lengthof $r2;

        varReplacer5714 = 0;

        $i0 = virtualinvoke $r0.<java.io.InputStream: int read(byte[],int,int)>($r2, varReplacer5714, $i0);

        if $i0 == -1 goto label2;

        varReplacer5713 = 0;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, varReplacer5713, $i0);

        goto label1;

     label2:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void flush()>();

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }
}
