Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8854)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 8439580dd257bde8df9c1630c220c498a8831d35787ca0e791d0d3ae279d5e19
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.r: java.lang.String b(java.lang.String)>
		SHA-256: ad63fb0f25897e919c23cde3d1a908adc05d8f40d72de1e14c7d98939e609f2e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 6e6f3a156274bccb5009c67a602212222822b175df2e03889ca0ead18734c307
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12187)
		Method: <com.google.android.gms.internal.zzbm: java.security.MessageDigest zzcG()>
		SHA-256: 109a1807eb1493a6a6ce4ad3a41c5dcd1fe6cf71ad0d73105da105828564cd87
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer8858)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: b303e262e00ed39d0b57c0ccd001c401251df9dbc2e4b32bed181f580cf66263
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 4c3ef24d9dcbe9c3c805a70b30efd3900d8efcc8b976bdf307a218612149c602
		Secure: false
	Object:
		Variable: varReplacer8870
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8870)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 923fe05ce13f20926dbf94945f17c676c8713789e72fe7e033de2e1dbd4c910b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzbp: byte[] zzz(java.lang.String)>
		SHA-256: b0c1270d8a7c1ba60118aeb2618aeac235345c871438a18cbf79b117c582490a
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3293)
		Method: <com.google.android.gms.internal.zzip: java.lang.String zzha()>
		SHA-256: c0d28b8902327fde763ec71607879774de1df667a01984f77af0e5ff5aa9d01a
		Secure: true
	Object:
		Variable: varReplacer10429
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10429)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: d2b2fc4bdd4270b5913765f018ac550281c385f0797d8e1a34995caaa2753650
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 5a4ce487d3da3934d330909e15f4b82460918db06fc9ea79826feeef29fe6fe3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10429)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 3a339976e62950ab4b056502eaf90f3bab80d16c77d41f6407c17b5acb8fff9f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: c912c10fbdf9c59ad4f89e99034f2098742bd04a6912e7829063391bc286c150
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8855)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 6cab867d1655584055495efb2e9379d6d65f1861bd7f57e6da7b736de7b4595e
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.jiubang.business.advert.util.ConnectionManager: org.apache.http.client.HttpClient getNewHttpClient(org.apache.http.params.HttpParams)>
		SHA-256: 39430a73f0e1dd22ceef384447c8b7f78a6bc07c7f36c9d753b88de424704c9
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5723)
		Method: <com.jiubang.business.advert.util.SSLSocketFactoryEx: void <init>(java.security.KeyStore)>
		SHA-256: c98ae8e47fe74d2ace098d33b5ccde2f55c22f7a8d8c19793276df2d3790ee1d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8871)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 90ab32822988e9128e22e83054cef12674f51573561be777988dc21ded6a530c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: 4d0d73ed509b99931dd07e65ab72bb4c38bc5cabf8058c750064f3607fcd6b2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9904)
		Method: <com.mobvista.sdk.m.a.f.c: java.lang.String b(java.lang.String)>
		SHA-256: 6cd5c85c1b16dfc342f3e5ce56b041528f60c886546db30eed83dc1e0a29bf56
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10428)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 4cac8fe79efad34a7518becdd77f6158da18707d887608c094021658da9e5e17
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.sdk.m.a.f.c: java.lang.String b(java.lang.String)>
		SHA-256: 34ba3c9bb7fa93036505409e6f624148d580a4ef39cd6b74abdee3d1e3232629
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 13b7df8e4159afd3c95e773a0a2fb89a181151c51e2fcbe7400da8a0d51bf426
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10857)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: 77994d08b0c1ab1c97576591c65752beb4d02888e3fddebf49c363e75104d723
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8859)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 5b374f738d78469182067886a62076d13a67ea4d090ba3d0df4e2700e1e2a231
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 57b34ea97dd082ce3816307185da5f3c24486a235eadb14d113287b38117a418
		Secure: false
	Object:
		Variable: varReplacer8855
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8855)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: d9da935986d618c73e63360e3812398091fec94f2ecd2018c17526083aa7883
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8870)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 58ffa89a7b162c0c34847c3584479aa3df8b6146862199edb024a01a1be51a58
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer8860, varReplacer8861)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: e7d31c3ed643e5dfddf20b0be5c63f600cb975b608fecd5e0ea49e79eb83d6f6
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: bdc7512ec38c2cc09adba71da2f9eeaa86d77e6218983960216f0ede83a261e7
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzip: java.lang.String zzha()>
		SHA-256: 20add7c3d4e7c11c391545d8ff692a916f933084b53b79ebc8c4ae85a58aa523
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5465)
		Method: <com.facebook.ads.internal.util.r: java.lang.String b(java.lang.String)>
		SHA-256: 8edeef4df15f1068df5e116e5f8a54b6ca74efb759d740d2e794a43b4ba0efb
		Secure: true
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3959)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: bcc16ee54251a976a6420f2684d52867c3dc3b7d2ac4729c6557e36bae79b0e7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: a0fb3191ce4c347e6dc4d2c93a2b28d5d01589a91341d353d9d79172a555d6fa
		Secure: false

Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3963, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #bcc16ee54251a976a6420f2684d52867c3dc3b7d2ac4729c6557e36bae79b0e7)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3959)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3963, r12, $r3)


Findings in Java Class: com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt

	 in Method: byte[] decrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8439580dd257bde8df9c1630c220c498a8831d35787ca0e791d0d3ae279d5e19)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8854)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8439580dd257bde8df9c1630c220c498a8831d35787ca0e791d0d3ae279d5e19)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8854)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8855)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8853, $r2)


	 in Method: byte[] encrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #90ab32822988e9128e22e83054cef12674f51573561be777988dc21ded6a530c)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8871)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #90ab32822988e9128e22e83054cef12674f51573561be777988dc21ded6a530c)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8871)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8870)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8872, $r2)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer8857, $r2)


Findings in Java Class: com.google.android.gms.internal.zzbn

	 in Method: java.lang.String zzB(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #109a1807eb1493a6a6ce4ad3a41c5dcd1fe6cf71ad0d73105da105828564cd87)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzbm: byte[] zzz(java.lang.String)>($r1)


	 in Method: java.lang.String zzA(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #109a1807eb1493a6a6ce4ad3a41c5dcd1fe6cf71ad0d73105da105828564cd87)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzbm: byte[] zzz(java.lang.String)>($r1)


Findings in Java Class: com.jiubang.business.advert.util.SSLSocketFactoryEx

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5721, r5, varReplacer5721)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5721, r5, varReplacer5721)


Findings in Java Class: com.google.android.gms.internal.zzar

	 in Method: byte[] zzc(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10429)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10427, $r10, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 12
	IncompleteOperationError: 2
	ConstraintError: 5
=====================================================================