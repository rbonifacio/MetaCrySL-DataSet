Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.c.a.a: byte[] a(int)>
		SHA-256: 3f11a2aebe407b793940ab5a06c1a9c0c3504da88c0e2c8f3f4c736766d43690
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer3808, varReplacer3809)
		Method: <com.c.a.a: byte[] a(int)>
		SHA-256: 9a11d9b9584e73205eba83ffb3a9acd8c5a2268ff5ba2fe0dd6b35c805338aa1
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 49b0991ec4db97511e0a9605f37cdac92c6c6619f8973ee389e3d86c78826961
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1256)
		Method: <c.aj: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: b81dbaaae7f7f1b4894d908ef1d75db8a6b2d784331dc8caad769113da631996
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3801)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: a52fc956b967a01364b723776354ed843f3323c67db85dd8db4c3653713679a6
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3794)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: b1844f0de762c33a21d5deced1ba22757606118a408b3dfea2a5c232438b2336
		Secure: true
	Object:
		Variable: varReplacer3814
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3814)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 234a08d629cd701667bc8514208127ae09756c050fcbc0c7f233b8f41c2cf4c3
		Secure: false
	Object:
		Variable: varReplacer3811
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3811)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 8d2791e88a12f6f7b6dfe034a7d44eeaac9bd77a6bc9c54e6ae28a225271af23
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer663)
		Method: <parknshop.parknshopapp.Utils.f: c.ak a()>
		SHA-256: ecd7546233ed6a6690568d25ce49e3598e75a7f95b38862fe1fec2a2cc9a5bb4
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4239)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 43f353960f5eb72497197ae5f57c8946ec2744ac53a6c6df13f721aad74be124
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3817)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: d46a4e2a776a1a8a7685fd8550fba8b77306f0ea183da4f58352d493bfa5b7e
		Secure: false
	Object:
		Variable: varReplacer3816
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3815, varReplacer3816)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 284c48600808b256be3529ff0ce619da21d43102406dcfd6e532654993fb757
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer658)
		Method: <parknshop.parknshopapp.r: c.ak a(c.ak)>
		SHA-256: df8bd22267af87c8f369cafb47553871f84732d3d59bb5598b75b9474155b11a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3821)
		Method: <com.c.a.c: void d()>
		SHA-256: 8045cfd84c3ff6d9eb4bf150e84b7c204458b19df56f46783389d37e6670dbe7
		Secure: true
	Object:
		Variable: varReplacer3801
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3801)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: b37673520f8797f6d32089cf1b8cbd1541d2a6af1db44b44f7f402f5e4138258
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a.c: void d()>
		SHA-256: 5f11170c0830485070437f05ddb232c64d2202d1714075160e608039cee429ab
		Secure: true
	Object:
		Variable: varReplacer3798
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3797, $i0, varReplacer3798)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: e7deaa3e5ab5a70ba9c38615bcf2e69e71062e18a67354e495ac30c51e7f1452
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.c.a.a: byte[] a(com.c.a.b,com.c.a.f)>
		SHA-256: 36ccaffd5df31af12c6519920ab1cc93c8763b7b3de943b0e4737a6f5039543
		Secure: false
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: specialinvoke r14.<java.security.SecureRandom: void <init>()>()
		Method: <parknshop.parknshopapp.Utils.f: c.ak a()>
		SHA-256: 8d0642c9b9f4d9f53ae393fba9113dac0b32662ae94782b26c676bc69e4472e8
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3814)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 3fa619dfa5ae602f37560b234c92fb2910d9edf4584ab9d31acd704166d08bff
		Secure: false
	Object:
		Variable: varReplacer3793
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3793)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: 2f76dc91c52f1f2e8b17d7201cb055b6aab28b40b4947aa197af455d6f4dfb8e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3815, varReplacer3816)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: cb497893603aeab235bab4b7ce2a7639ea586c91b6e329f227cc59807f0cc5dd
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3797, $i0, varReplacer3798)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String)>
		SHA-256: df88e50c7b24d228d0a1c73f7e095796c128065a183884e8211a1b68755e5e0f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4245)
		Method: <com.c.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: b8305ae88eec8b5c300879c14d83f6e2f4ee61fb90472a4fb3d9aea1e8214c3b
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3793)
		Method: <com.c.a.a: com.c.a.f a()>
		SHA-256: f901572e69d082741753871e985a36094dd1a300de56ecaa30a130691eb3658e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4260)
		Method: <com.c.a.a: com.c.a.b a(byte[],com.c.a.f)>
		SHA-256: 252b9605e78b7fad1fb5614b53efc468d1504b37bc819aee4fa313864a833585
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3811)
		Method: <com.c.a.a: com.c.a.f a(java.lang.String,byte[])>
		SHA-256: 3466f94e08e5c99ce4433fdb46d11726b2477a9b53c1fd99734c45c9b5b485cd
		Secure: false

Findings in Java Class: parknshop.parknshopapp.r

	 in Method: c.ak a(c.ak)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #df8bd22267af87c8f369cafb47553871f84732d3d59bb5598b75b9474155b11a)
			First parameter (with value "TLSv1.2") should be any of {TLS}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer658)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer659, r16, varReplacer659)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer659, r16, varReplacer659)


Findings in Java Class: com.c.a.a

	 in Method: com.c.a.f a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer3801)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3797, $i0, varReplacer3798)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer3797, $i0, varReplacer3798)


	 in Method: com.c.a.f a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3814)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cb497893603aeab235bab4b7ce2a7639ea586c91b6e329f227cc59807f0cc5dd)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer3811)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cb497893603aeab235bab4b7ce2a7639ea586c91b6e329f227cc59807f0cc5dd)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3815, varReplacer3816)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer3815, varReplacer3816)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #d46a4e2a776a1a8a7685fd8550fba8b77306f0ea183da4f58352d493bfa5b7e)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3817)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: com.c.a.f a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3793)


	 in Method: byte[] a(com.c.a.b,com.c.a.f)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4241, $r5, $r2)


	 in Method: com.c.a.b a(byte[],com.c.a.f)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4261, $r5, $r2)


Findings in Java Class: c.aj

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1257, r7, varReplacer1257)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1257, r7, varReplacer1257)


Findings in Java Class: parknshop.parknshopapp.Utils.f

	 in Method: c.ak a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer662, r16, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer662, r16, $r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 32

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 1
	IncompleteOperationError: 1
	RequiredPredicateError: 16
	ConstraintError: 2
	ImpreciseValueExtractionError: 1
=====================================================================