Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer21699)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: a9f4171c375e84626c191b41b9238fed324a42317594d2c034def4349346d9ed
		Secure: false
	Object:
		Variable: varReplacer21699
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer21699)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: e8fff15a0c71a12e15e413bcd8ff61e0cbbef18e1bd3182613ecb104f3c6c5c8
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Mac
		Statement: $r10 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer17132)
		Method: <com.paypal.android.sdk.C: org.apache.http.Header a(java.lang.String,java.util.List,java.lang.String)>
		SHA-256: 20b6651ae9c046f9421f9e2edc91e6112c27cc9bb695a21fc48f8aabd7f0e3ab
		Secure: true
	Object:
		Variable: varReplacer17127
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer17127)
		Method: <com.paypal.android.sdk.C: org.apache.http.Header a(java.lang.String,java.util.List,java.lang.String)>
		SHA-256: 574af0bd572ac209020dbbdf77e7937c9107e592d7a68ca2601a4434d1607ba4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.paypal.android.sdk.x: java.lang.String b(java.lang.String)>
		SHA-256: c42d088aaa89c41e7592125b770ea6cac4050e33e490aa3467e43809ef175f91
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 60029a1b2e5ee22a3931915434a5fa44cf27db5eb408040851f105ce7e16415b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17055)
		Method: <com.paypal.android.sdk.ag: void <init>()>
		SHA-256: ac2a4935febeae23a19ed3b4ca0fa7d89dc8d57b2a86dd66543919b5f425f972
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer17057)
		Method: <com.paypal.android.sdk.ae: java.security.KeyStore b()>
		SHA-256: 96cc3195dac8270c13c5c52bbe652f8c8d44a22f14e1989f58793c85671a8644
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21126)
		Method: <com.paypal.android.sdk.x: java.lang.String b(java.lang.String)>
		SHA-256: f8f4843f3662e3ec81faa198c40a90048279c761cd86c0fec187be78f236c865
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer21697)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 30501d38eea5e8a847acb802f87d08d38e052c6b0bf7ef041655e4202164e2e0
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.paypal.android.sdk.x: java.lang.String b(java.lang.String)>
		SHA-256: 98b7aebf904404c8c88186c4c1b27b7e823466e4660a3fff8345b339685fce60
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer21129)
		Method: <com.paypal.android.sdk.x: java.lang.String b(java.lang.String)>
		SHA-256: 738dfed47ca136deffee2d950a4e40f0808a53713dd616745e357698fa47328a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5017)
		Method: <com.google.android.gms.internal.cz: java.lang.String r(java.lang.String)>
		SHA-256: 213f1976b9bbccdb7ec55e11687bd8e017db79d3aedc890a9f0b462ee5fd9a55
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer17127)
		Method: <com.paypal.android.sdk.C: org.apache.http.Header a(java.lang.String,java.util.List,java.lang.String)>
		SHA-256: 57033e1c02c7298afff44f072b07d0954f49255c2c961b3d1d29197b0a9049ed
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer17060)
		Method: <com.paypal.android.sdk.ae: java.security.KeyStore b()>
		SHA-256: 9b7d84d11e4a56c4bccbf767da2f7458a892250805fefc4965bb542db290f05c
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r10.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.paypal.android.sdk.C: org.apache.http.Header a(java.lang.String,java.util.List,java.lang.String)>
		SHA-256: 29771e2c8120ca8ecdc00bf9f6418c74167f9dc6292613101372aad5c74c2d85
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.cz: java.lang.String r(java.lang.String)>
		SHA-256: a3f01be0606678eca024644aedc1e466b3ff25ece4ca8d723dca6b985b76ac40
		Secure: true

Findings in Java Class: com.paypal.android.sdk.ae

	 in Method: java.security.KeyStore b()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #96cc3195dac8270c13c5c52bbe652f8c8d44a22f14e1989f58793c85671a8644)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r2, $r4)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #96cc3195dac8270c13c5c52bbe652f8c8d44a22f14e1989f58793c85671a8644)
			First parameter (with value "JKS") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer17057)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #9b7d84d11e4a56c4bccbf767da2f7458a892250805fefc4965bb542db290f05c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r2, $r4)


Findings in Java Class: com.paypal.android.sdk.x

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f8f4843f3662e3ec81faa198c40a90048279c761cd86c0fec187be78f236c865)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21126)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer21127, $r6)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #738dfed47ca136deffee2d950a4e40f0808a53713dd616745e357698fa47328a)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer21129)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


Findings in Java Class: oauth.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer21699)


Findings in Java Class: com.paypal.android.sdk.C

	 in Method: org.apache.http.Header a(java.lang.String,java.util.List,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer17127)


Findings in Java Class: com.paypal.android.sdk.ag

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17053, r6, varReplacer17053)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17053, r6, varReplacer17053)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	ConstraintError: 3
	RequiredPredicateError: 6
=====================================================================