public class com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory extends org.apache.http.conn.ssl.SSLSocketFactory
{
    protected javax.net.ssl.SSLContext sslContext;

    public void <init>(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException
    {
        com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory $r0;
        java.security.KeyStore $r1;
        javax.net.ssl.SSLContext $r2;
        java.lang.String $r3, varReplacer648;
        javax.net.ssl.KeyManagerFactory $r4;
        char[] $r5;
        javax.net.ssl.KeyManager[] $r6;
        java.lang.Object[] $r7;
        java.security.KeyStore[] $r8;
        com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager r9;
        javax.net.ssl.TrustManager[] r10;
        null_type varReplacer641, varReplacer642, varReplacer643, varReplacer644, varReplacer645, varReplacer646, varReplacer647;

        nop;

        $r0 := @this: com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory;

        $r1 := @parameter0: java.security.KeyStore;

        varReplacer642 = null;

        varReplacer643 = null;

        varReplacer644 = null;

        varReplacer645 = null;

        varReplacer646 = null;

        varReplacer647 = null;

        specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)>(varReplacer642, varReplacer642, varReplacer642, varReplacer642, varReplacer642, varReplacer642);

        varReplacer648 = "TLSv1.2";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer648);

        $r0.<com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext> = $r2;

        $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3);

        $r3 = "123456";

        $r5 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r5);

        $r2 = $r0.<com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r6 = virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();

        $r7 = newarray (javax.net.ssl.TrustManager)[1];

        r9 = new com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager;

        $r8 = newarray (java.security.KeyStore)[1];

        $r8[0] = $r1;

        specialinvoke r9.<com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager: void <init>(java.security.KeyStore[])>($r8);

        $r7[0] = r9;

        r10 = (javax.net.ssl.TrustManager[]) $r7;

        varReplacer641 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, r10, varReplacer641);

        return;
    }

    public java.net.Socket createSocket() throws java.io.IOException
    {
        com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;

        $r0 := @this: com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory;

        $r1 = $r0.<com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r3;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException
    {
        com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;

        $r0 := @this: com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        return $r1;
    }

    public javax.net.ssl.SSLContext getSslContext()
    {
        com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory $r0;
        javax.net.ssl.SSLContext r1;

        $r0 := @this: com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory;

        r1 = $r0.<com.workstream.authenticate.communication.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        return r1;
    }
}
