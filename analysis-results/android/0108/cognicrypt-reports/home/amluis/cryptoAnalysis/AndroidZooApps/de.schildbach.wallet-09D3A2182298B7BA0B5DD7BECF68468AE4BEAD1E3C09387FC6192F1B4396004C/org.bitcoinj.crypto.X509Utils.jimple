public class org.bitcoinj.crypto.X509Utils extends java.lang.Object
{

    public static java.lang.String getDisplayNameFromCertificate(java.security.cert.X509Certificate, boolean) throws java.security.cert.CertificateParsingException
    {
        java.security.cert.X509Certificate $r0;
        boolean $z0, $z1;
        org.spongycastle.asn1.x500.X500Name $r1;
        org.spongycastle.asn1.x500.RDN $r2;
        int $i0, $i1, varReplacer2432, varReplacer2433;
        javax.security.auth.x500.X500Principal $r3;
        java.lang.String $r4, $r5, $r6, $r7, $r12, varReplacer2431;
        org.spongycastle.asn1.x500.RDN[] $r8;
        org.spongycastle.asn1.x500.AttributeTypeAndValue $r9;
        org.spongycastle.asn1.ASN1Encodable $r10;
        org.spongycastle.asn1.ASN1String $r11;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r13, $r14;
        java.util.Collection $r15;
        java.util.Iterator $r16;
        java.lang.Object $r17;
        java.util.List $r18;
        java.lang.Integer $r19;
        com.google.common.base.Joiner $r20;
        java.lang.Object[] $r21;

        nop;

        $r0 := @parameter0: java.security.cert.X509Certificate;

        $z0 := @parameter1: boolean;

        $r1 = new org.spongycastle.asn1.x500.X500Name;

        $r3 = virtualinvoke $r0.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r4 = virtualinvoke $r3.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        specialinvoke $r1.<org.spongycastle.asn1.x500.X500Name: void <init>(java.lang.String)>($r4);

        $r4 = null;

        $r5 = null;

        $r6 = null;

        $r7 = null;

        $r8 = virtualinvoke $r1.<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.RDN[] getRDNs()>();

        $i0 = lengthof $r8;

        $i1 = 0;

     label01:
        if $i1 >= $i0 goto label06;

        $r2 = $r8[$i1];

        $r9 = virtualinvoke $r2.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        $r10 = virtualinvoke $r9.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

        $r11 = (org.spongycastle.asn1.ASN1String) $r10;

        $r12 = interfaceinvoke $r11.<org.spongycastle.asn1.ASN1String: java.lang.String getString()>();

        $r13 = virtualinvoke $r9.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

        $r14 = <org.spongycastle.asn1.x500.style.RFC4519Style: org.spongycastle.asn1.ASN1ObjectIdentifier cn>;

        $z1 = virtualinvoke $r13.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label03;

        $r4 = $r12;

     label02:
        $i1 = $i1 + 1;

        goto label01;

     label03:
        $r14 = <org.spongycastle.asn1.x500.style.RFC4519Style: org.spongycastle.asn1.ASN1ObjectIdentifier o>;

        $z1 = virtualinvoke $r13.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label04;

        $r5 = $r12;

        goto label02;

     label04:
        $r14 = <org.spongycastle.asn1.x500.style.RFC4519Style: org.spongycastle.asn1.ASN1ObjectIdentifier l>;

        $z1 = virtualinvoke $r13.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label05;

        $r6 = $r12;

        goto label02;

     label05:
        $r14 = <org.spongycastle.asn1.x500.style.RFC4519Style: org.spongycastle.asn1.ASN1ObjectIdentifier c>;

        $z1 = virtualinvoke $r13.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r14);

        if $z1 == 0 goto label02;

        $r7 = $r12;

        goto label02;

     label06:
        $r15 = virtualinvoke $r0.<java.security.cert.X509Certificate: java.util.Collection getSubjectAlternativeNames()>();

        $r12 = null;

        if $r15 == null goto label08;

        $r16 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r18 = (java.util.List) $r17;

        varReplacer2432 = 0;

        $r17 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(varReplacer2432);

        $r19 = (java.lang.Integer) $r17;

        $i0 = virtualinvoke $r19.<java.lang.Integer: int intValue()>();

        if $i0 != 1 goto label07;

        varReplacer2433 = 1;

        $r17 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(varReplacer2433);

        $r12 = (java.lang.String) $r17;

        goto label07;

     label08:
        if $r5 == null goto label09;

        varReplacer2431 = ", ";

        $r20 = staticinvoke <com.google.common.base.Joiner: com.google.common.base.Joiner on(java.lang.String)>(varReplacer2431);

        $r20 = virtualinvoke $r20.<com.google.common.base.Joiner: com.google.common.base.Joiner skipNulls()>();

        $r21 = newarray (java.lang.Object)[1];

        $r21[0] = $r7;

        $r4 = virtualinvoke $r20.<com.google.common.base.Joiner: java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[])>($r5, $r6, $r21);

        return $r4;

     label09:
        if $r4 == null goto label10;

        return $r4;

     label10:
        return $r12;
    }

    public static java.security.KeyStore loadKeyStore(java.lang.String, java.lang.String, java.io.InputStream) throws java.security.KeyStoreException
    {
        java.lang.String $r0, $r1;
        java.io.InputStream $r2;
        java.lang.Throwable $r3, $r6, $r8, $r9, $r10;
        java.security.KeyStore $r4;
        char[] $r5;
        java.security.KeyStoreException $r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.io.InputStream;

     label01:
        $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0);

     label02:
        $r5 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

     label03:
        virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r2, $r5);

     label04:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label05:
        return $r4;

     label06:
        $r6 := @caughtexception;

     label07:
        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label08:
        $r8 := @caughtexception;

     label09:
        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label10:
        throw $r8;

     label11:
        $r9 := @caughtexception;

     label12:
        $r7 = new java.security.KeyStoreException;

        specialinvoke $r7.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>($r9);

        throw $r7;

     label13:
        $r10 := @caughtexception;

        return $r4;

     label14:
        $r3 := @caughtexception;

        goto label10;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.io.IOException from label02 to label03 with label06;
        catch java.io.IOException from label03 to label04 with label06;
        catch java.security.GeneralSecurityException from label01 to label02 with label11;
        catch java.security.GeneralSecurityException from label02 to label03 with label11;
        catch java.security.GeneralSecurityException from label03 to label04 with label11;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.io.IOException from label04 to label05 with label13;
        catch java.lang.Throwable from label07 to label08 with label08;
        catch java.io.IOException from label09 to label10 with label14;
        catch java.lang.Throwable from label12 to label13 with label08;
    }
}
