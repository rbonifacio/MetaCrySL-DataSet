public class com.google.bitcoin.protocols.payments.PaymentSession extends java.lang.Object
{
    private static com.google.common.util.concurrent.ListeningExecutorService executor;
    private com.google.bitcoin.core.NetworkParameters params;
    private org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails;
    private org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest;
    public com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData pkiVerificationData;
    private java.math.BigInteger totalValue;
    private java.lang.String trustStorePath;

    static void <clinit>()
    {
        com.google.common.util.concurrent.ListeningExecutorService $r0;

        nop;

        $r0 = <com.google.bitcoin.utils.Threading: com.google.common.util.concurrent.ListeningExecutorService THREAD_POOL>;

        <com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListeningExecutorService executor> = $r0;

        return;
    }

    public void <init>(org.bitcoin.protocols.payments.Protos$PaymentRequest) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.bitcoin.protocols.payments.Protos$PaymentRequest $r1;
        java.math.BigInteger $r2;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 := @parameter0: org.bitcoin.protocols.payments.Protos$PaymentRequest;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.math.BigInteger totalValue> = $r2;

        specialinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: void parsePaymentRequest(org.bitcoin.protocols.payments.Protos$PaymentRequest)>($r1);

        virtualinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>();

        return;
    }

    public void <init>(org.bitcoin.protocols.payments.Protos$PaymentRequest, boolean) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.bitcoin.protocols.payments.Protos$PaymentRequest $r1;
        boolean $z0;
        java.math.BigInteger $r2;

        nop;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 := @parameter0: org.bitcoin.protocols.payments.Protos$PaymentRequest;

        $z0 := @parameter1: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.math.BigInteger totalValue> = $r2;

        specialinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: void parsePaymentRequest(org.bitcoin.protocols.payments.Protos$PaymentRequest)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>();

     label1:
        return;
    }

    public void <init>(org.bitcoin.protocols.payments.Protos$PaymentRequest, boolean, java.lang.String) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.bitcoin.protocols.payments.Protos$PaymentRequest $r1;
        boolean $z0;
        java.lang.String $r2;
        java.math.BigInteger $r3;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 := @parameter0: org.bitcoin.protocols.payments.Protos$PaymentRequest;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.math.BigInteger totalValue> = $r3;

        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.lang.String trustStorePath> = $r2;

        specialinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: void parsePaymentRequest(org.bitcoin.protocols.payments.Protos$PaymentRequest)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki()>();

     label1:
        return;
    }

    public static com.google.common.util.concurrent.ListenableFuture createFromBitcoinUri(com.google.bitcoin.uri.BitcoinURI) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        com.google.bitcoin.uri.BitcoinURI $r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        $r0 := @parameter0: com.google.bitcoin.uri.BitcoinURI;

        $r1 = staticinvoke <com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListenableFuture createFromBitcoinUri(com.google.bitcoin.uri.BitcoinURI,boolean,java.lang.String)>($r0, 1, null);

        return $r1;
    }

    public static com.google.common.util.concurrent.ListenableFuture createFromBitcoinUri(com.google.bitcoin.uri.BitcoinURI, boolean) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        com.google.bitcoin.uri.BitcoinURI $r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        $r0 := @parameter0: com.google.bitcoin.uri.BitcoinURI;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListenableFuture createFromBitcoinUri(com.google.bitcoin.uri.BitcoinURI,boolean,java.lang.String)>($r0, $z0, null);

        return $r1;
    }

    public static com.google.common.util.concurrent.ListenableFuture createFromBitcoinUri(com.google.bitcoin.uri.BitcoinURI, boolean, java.lang.String) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        com.google.bitcoin.uri.BitcoinURI $r0;
        boolean $z0;
        java.lang.String $r1, $r3;
        java.lang.Throwable $r2;
        java.lang.StringBuilder $r4, r7;
        java.net.URI $r5, r9;
        com.google.common.util.concurrent.ListenableFuture $r6;
        com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL r8;
        java.lang.Exception r10;

        $r0 := @parameter0: com.google.bitcoin.uri.BitcoinURI;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.String;

        $r3 = virtualinvoke $r0.<com.google.bitcoin.uri.BitcoinURI: java.lang.String getPaymentRequestUrl()>();

        if $r3 != null goto label1;

        r8 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No payment request URL (r= parameter) in BitcoinURI ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r1 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r8.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL: void <init>(java.lang.String)>($r1);

        throw r8;

     label1:
        r9 = new java.net.URI;

        $r5 = r9;

     label2:
        specialinvoke r9.<java.net.URI: void <init>(java.lang.String)>($r3);

        $r6 = staticinvoke <com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListenableFuture fetchPaymentRequest(java.net.URI,boolean,java.lang.String)>($r5, $z0, $r1);

     label3:
        return $r6;

     label4:
        $r2 := @caughtexception;

        r8 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL;

        r10 = (java.lang.Exception) $r2;

        specialinvoke r8.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL: void <init>(java.lang.Exception)>(r10);

        throw r8;

        catch java.net.URISyntaxException from label2 to label3 with label4;
    }

    public static com.google.common.util.concurrent.ListenableFuture createFromUrl(java.lang.String) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        java.lang.String $r0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListenableFuture createFromUrl(java.lang.String,boolean,java.lang.String)>($r0, 1, null);

        return $r1;
    }

    public static com.google.common.util.concurrent.ListenableFuture createFromUrl(java.lang.String, boolean) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        java.lang.String $r0;
        boolean $z0;
        com.google.common.util.concurrent.ListenableFuture $r1;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = staticinvoke <com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListenableFuture createFromUrl(java.lang.String,boolean,java.lang.String)>($r0, $z0, null);

        return $r1;
    }

    public static com.google.common.util.concurrent.ListenableFuture createFromUrl(java.lang.String, boolean, java.lang.String) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        java.lang.Throwable $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;
        java.net.URI $r4, r6;
        com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL r5;
        java.lang.Exception r7;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.String;

        if $r0 != null goto label1;

        r5 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL;

        specialinvoke r5.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL: void <init>(java.lang.String)>("null paymentRequestUrl");

        throw r5;

     label1:
        r6 = new java.net.URI;

        $r4 = r6;

     label2:
        specialinvoke r6.<java.net.URI: void <init>(java.lang.String)>($r0);

        $r3 = staticinvoke <com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListenableFuture fetchPaymentRequest(java.net.URI,boolean,java.lang.String)>($r4, $z0, $r1);

     label3:
        return $r3;

     label4:
        $r2 := @caughtexception;

        r5 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL;

        r7 = (java.lang.Exception) $r2;

        specialinvoke r5.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentRequestURL: void <init>(java.lang.Exception)>(r7);

        throw r5;

        catch java.net.URISyntaxException from label2 to label3 with label4;
    }

    private java.security.KeyStore createKeyStore(java.lang.String) throws java.io.IOException, java.security.KeyStoreException, java.security.NoSuchAlgorithmException, java.security.cert.CertificateException
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        char $c0;
        java.lang.String $r1, $r2, $r3, $r4, varReplacer4065, varReplacer4066, varReplacer4067, varReplacer4068, varReplacer4072, varReplacer4073, varReplacer4074, varReplacer4076;
        char[] $r5;
        java.security.KeyStore $r6;
        java.io.FileInputStream $r7;
        java.lang.Class $r8;
        java.lang.reflect.Field $r9;
        int $i1, varReplacer4069, varReplacer4075;
        java.lang.StringBuilder $r10;
        java.lang.Throwable $r11, $r13, $r15;
        java.io.InputStream $r12;
        java.lang.RuntimeException $r14;
        java.lang.ClassNotFoundException $r16;
        null_type varReplacer4070, varReplacer4071;

        nop;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r3 = $r2;

        $r4 = "changeit";

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        if $r1 == null goto label01;

        $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2);

        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r5);

        return $r6;

     label01:
        varReplacer4072 = "android.os.Build$VERSION";

        $r8 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(varReplacer4072);

        varReplacer4076 = "SDK_INT";

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(varReplacer4076);

        $i1 = virtualinvoke $r9.<java.lang.reflect.Field: int getInt(java.lang.Object)>($r8);

     label02:
        if $i1 < 14 goto label05;

     label03:
        varReplacer4068 = "AndroidCAStore";

        $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4068);

        varReplacer4070 = null;

        varReplacer4071 = null;

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer4070, varReplacer4070);

     label04:
        return $r6;

     label05:
        $r3 = "BKS";

        $r10 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer4066 = "java.home";

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer4066);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label07:
        $r2 = "/etc/security/cacerts.bks";

        $c0 = <java.io.File: char separatorChar>;

     label08:
        varReplacer4075 = 47;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(varReplacer4075, $c0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r1 = $r2;

     label10:
        if $r1 != null goto label11;

        varReplacer4067 = "javax.net.ssl.trustStore";

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer4067);

     label11:
        if $r1 != null goto label12;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        varReplacer4074 = "java.home";

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer4074);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = "/lib/security/cacerts";

        $c0 = <java.io.File: char separatorChar>;

        varReplacer4069 = 47;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(char,char)>(varReplacer4069, $c0);

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3);

     label13:
        $r7 = new java.io.FileInputStream;

     label14:
        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.lang.String)>($r1);

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r5);

     label15:
        return $r6;

     label16:
        $r11 := @caughtexception;

        varReplacer4073 = "JKS";

        $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4073);

        $r8 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        varReplacer4065 = "cacerts";

        $r12 = virtualinvoke $r8.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(varReplacer4065);

        virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r5);

        return $r6;

     label17:
        $r13 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r13);

        throw $r14;

     label18:
        $r15 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r15);

        throw $r14;

     label19:
        $r16 := @caughtexception;

        goto label10;

        catch java.lang.ClassNotFoundException from label01 to label02 with label19;
        catch java.lang.ClassNotFoundException from label03 to label04 with label19;
        catch java.lang.ClassNotFoundException from label06 to label07 with label19;
        catch java.lang.ClassNotFoundException from label08 to label09 with label19;
        catch java.lang.NoSuchFieldException from label01 to label02 with label17;
        catch java.lang.NoSuchFieldException from label03 to label04 with label17;
        catch java.lang.NoSuchFieldException from label06 to label07 with label17;
        catch java.lang.NoSuchFieldException from label08 to label09 with label17;
        catch java.lang.IllegalAccessException from label01 to label02 with label18;
        catch java.lang.IllegalAccessException from label03 to label04 with label18;
        catch java.lang.IllegalAccessException from label06 to label07 with label18;
        catch java.lang.IllegalAccessException from label08 to label09 with label18;
        catch java.io.FileNotFoundException from label12 to label13 with label16;
        catch java.io.FileNotFoundException from label14 to label15 with label16;
    }

    private static com.google.common.util.concurrent.ListenableFuture fetchPaymentRequest(java.net.URI, boolean, java.lang.String)
    {
        java.net.URI $r0;
        boolean $z0;
        java.lang.String $r1;
        com.google.bitcoin.protocols.payments.PaymentSession$1 $r2;
        com.google.common.util.concurrent.ListenableFuture $r3;
        com.google.common.util.concurrent.ListeningExecutorService $r4;

        $r0 := @parameter0: java.net.URI;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: java.lang.String;

        $r4 = <com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListeningExecutorService executor>;

        $r2 = new com.google.bitcoin.protocols.payments.PaymentSession$1;

        specialinvoke $r2.<com.google.bitcoin.protocols.payments.PaymentSession$1: void <init>(java.net.URI,boolean,java.lang.String)>($r0, $z0, $r1);

        $r3 = interfaceinvoke $r4.<com.google.common.util.concurrent.ListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)>($r2);

        return $r3;
    }

    private void parsePaymentRequest(org.bitcoin.protocols.payments.Protos$PaymentRequest) throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.bitcoin.protocols.payments.Protos$PaymentRequest $r1;
        com.google.protobuf.InvalidProtocolBufferException $r2;
        com.google.bitcoin.protocols.payments.PaymentRequestException $r3;
        int $i0;
        com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidVersion $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6, varReplacer3625, varReplacer3626, varReplacer3627, varReplacer3628, varReplacer3629, varReplacer3630, varReplacer3631;
        boolean $z0;
        org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder $r7;
        com.google.protobuf.ByteString $r8;
        com.google.protobuf.AbstractMessage$Builder $r9;
        org.bitcoin.protocols.payments.Protos$PaymentDetails $r10;
        com.google.bitcoin.params.MainNetParams $r11;
        com.google.bitcoin.core.NetworkParameters $r12;
        com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidNetwork $r13;
        com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidOutputs $r14;
        java.util.List $r15;
        java.util.Iterator $r16;
        java.lang.Object $r17;
        org.bitcoin.protocols.payments.Protos$Output $r18;
        java.math.BigInteger $r19, $r20;
        long $l1;

        nop;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 := @parameter0: org.bitcoin.protocols.payments.Protos$PaymentRequest;

        if $r1 != null goto label04;

        $r3 = new com.google.bitcoin.protocols.payments.PaymentRequestException;

     label01:
        varReplacer3626 = "request cannot be null";

        specialinvoke $r3.<com.google.bitcoin.protocols.payments.PaymentRequestException: void <init>(java.lang.String)>(varReplacer3626);

     label02:
        throw $r3;

     label03:
        $r2 := @caughtexception;

        $r3 = new com.google.bitcoin.protocols.payments.PaymentRequestException;

        specialinvoke $r3.<com.google.bitcoin.protocols.payments.PaymentRequestException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label04:
        $i0 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentRequest: int getPaymentDetailsVersion()>();

     label05:
        if $i0 == 1 goto label08;

        $r4 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidVersion;

        $r5 = new java.lang.StringBuilder;

     label06:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer3630 = "Version 1 required. Received version ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3630);

        $i0 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentRequest: int getPaymentDetailsVersion()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidVersion: void <init>(java.lang.String)>($r6);

     label07:
        throw $r4;

     label08:
        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest> = $r1;

     label09:
        $z0 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentRequest: boolean hasSerializedPaymentDetails()>();

     label10:
        if $z0 != 0 goto label13;

        $r3 = new com.google.bitcoin.protocols.payments.PaymentRequestException;

     label11:
        varReplacer3627 = "No PaymentDetails";

        specialinvoke $r3.<com.google.bitcoin.protocols.payments.PaymentRequestException: void <init>(java.lang.String)>(varReplacer3627);

     label12:
        throw $r3;

     label13:
        $r7 = staticinvoke <org.bitcoin.protocols.payments.Protos$PaymentDetails: org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder newBuilder()>();

        $r8 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getSerializedPaymentDetails()>();

        $r9 = virtualinvoke $r7.<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: com.google.protobuf.AbstractMessage$Builder mergeFrom(com.google.protobuf.ByteString)>($r8);

     label14:
        $r7 = (org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder) $r9;

     label15:
        $r10 = virtualinvoke $r7.<org.bitcoin.protocols.payments.Protos$PaymentDetails$Builder: org.bitcoin.protocols.payments.Protos$PaymentDetails build()>();

     label16:
        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails> = $r10;

        $r10 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        if $r10 != null goto label19;

        $r3 = new com.google.bitcoin.protocols.payments.PaymentRequestException;

     label17:
        varReplacer3631 = "Invalid PaymentDetails";

        specialinvoke $r3.<com.google.bitcoin.protocols.payments.PaymentRequestException: void <init>(java.lang.String)>(varReplacer3631);

     label18:
        throw $r3;

     label19:
        $r10 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

     label20:
        $z0 = virtualinvoke $r10.<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasNetwork()>();

     label21:
        if $z0 != 0 goto label29;

     label22:
        $r11 = staticinvoke <com.google.bitcoin.params.MainNetParams: com.google.bitcoin.params.MainNetParams get()>();

     label23:
        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.core.NetworkParameters params> = $r11;

     label24:
        $r12 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.core.NetworkParameters params>;

        if $r12 != null goto label32;

        $r13 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidNetwork;

        $r5 = new java.lang.StringBuilder;

     label25:
        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer3625 = "Invalid network ";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3625);

     label26:
        $r10 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

     label27:
        $r6 = virtualinvoke $r10.<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getNetwork()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidNetwork: void <init>(java.lang.String)>($r6);

     label28:
        throw $r13;

     label29:
        $r10 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

     label30:
        $r6 = virtualinvoke $r10.<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getNetwork()>();

        $r12 = staticinvoke <com.google.bitcoin.core.NetworkParameters: com.google.bitcoin.core.NetworkParameters fromPmtProtocolID(java.lang.String)>($r6);

     label31:
        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.core.NetworkParameters params> = $r12;

        goto label24;

     label32:
        $r10 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

     label33:
        $i0 = virtualinvoke $r10.<org.bitcoin.protocols.payments.Protos$PaymentDetails: int getOutputsCount()>();

     label34:
        if $i0 >= 1 goto label37;

        $r14 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidOutputs;

     label35:
        varReplacer3628 = "No outputs";

        specialinvoke $r14.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidOutputs: void <init>(java.lang.String)>(varReplacer3628);

     label36:
        throw $r14;

     label37:
        $r10 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

     label38:
        $r15 = virtualinvoke $r10.<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.util.List getOutputsList()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label39:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

     label40:
        if $z0 == 0 goto label47;

     label41:
        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

     label42:
        $r18 = (org.bitcoin.protocols.payments.Protos$Output) $r17;

     label43:
        $z0 = virtualinvoke $r18.<org.bitcoin.protocols.payments.Protos$Output: boolean hasAmount()>();

     label44:
        if $z0 == 0 goto label39;

        $r19 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.math.BigInteger totalValue>;

     label45:
        $l1 = virtualinvoke $r18.<org.bitcoin.protocols.payments.Protos$Output: long getAmount()>();

        $r20 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l1);

        $r19 = virtualinvoke $r19.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r20);

     label46:
        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.math.BigInteger totalValue> = $r19;

        goto label39;

     label47:
        $r19 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.math.BigInteger totalValue>;

        $r20 = <com.google.bitcoin.core.NetworkParameters: java.math.BigInteger MAX_MONEY>;

     label48:
        $i0 = virtualinvoke $r19.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r20);

     label49:
        if $i0 <= 0 goto label52;

        $r14 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidOutputs;

     label50:
        varReplacer3629 = "The outputs are way too big.";

        specialinvoke $r14.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidOutputs: void <init>(java.lang.String)>(varReplacer3629);

     label51:
        throw $r14;

     label52:
        return;

        catch com.google.protobuf.InvalidProtocolBufferException from label01 to label02 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label04 to label05 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label06 to label07 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label09 to label10 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label11 to label12 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label13 to label14 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label15 to label16 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label17 to label18 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label20 to label21 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label22 to label23 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label25 to label26 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label27 to label28 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label30 to label31 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label33 to label34 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label35 to label36 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label38 to label40 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label41 to label42 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label43 to label44 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label45 to label46 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label48 to label49 with label03;
        catch com.google.protobuf.InvalidProtocolBufferException from label50 to label51 with label03;
    }

    public java.util.Date getDate()
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        java.util.Date $r1;
        org.bitcoin.protocols.payments.Protos$PaymentDetails $r2;
        long $l0;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 = new java.util.Date;

        $r2 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $l0 = virtualinvoke $r2.<org.bitcoin.protocols.payments.Protos$PaymentDetails: long getTime()>();

        $l0 = $l0 * 1000L;

        specialinvoke $r1.<java.util.Date: void <init>(long)>($l0);

        return $r1;
    }

    public java.lang.String getMemo()
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.bitcoin.protocols.payments.Protos$PaymentDetails $r1;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $z0 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasMemo()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $r2 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getMemo()>();

        return $r2;

     label1:
        return null;
    }

    public org.bitcoin.protocols.payments.Protos$Payment getPayment(java.util.List, com.google.bitcoin.core.Address, java.lang.String) throws java.io.IOException
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        java.util.List $r1;
        com.google.bitcoin.core.Address $r2;
        java.lang.String $r3;
        java.io.ByteArrayOutputStream $r4;
        org.bitcoin.protocols.payments.Protos$PaymentDetails $r5;
        boolean $z0;
        org.bitcoin.protocols.payments.Protos$Payment$Builder $r6;
        com.google.protobuf.ByteString $r7;
        org.bitcoin.protocols.payments.Protos$Output$Builder $r8;
        java.math.BigInteger $r9;
        long $l0;
        com.google.bitcoin.script.Script $r10;
        byte[] $r11;
        java.util.Iterator $r12;
        java.lang.Object $r13;
        com.google.bitcoin.core.Transaction $r14;
        org.bitcoin.protocols.payments.Protos$Payment $r15;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.google.bitcoin.core.Address;

        $r3 := @parameter2: java.lang.String;

        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $z0 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasPaymentUrl()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r6 = staticinvoke <org.bitcoin.protocols.payments.Protos$Payment: org.bitcoin.protocols.payments.Protos$Payment$Builder newBuilder()>();

        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $z0 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasMerchantData()>();

        if $z0 == 0 goto label2;

        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $r7 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentDetails: com.google.protobuf.ByteString getMerchantData()>();

        virtualinvoke $r6.<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder setMerchantData(com.google.protobuf.ByteString)>($r7);

     label2:
        if $r2 == null goto label3;

        $r8 = staticinvoke <org.bitcoin.protocols.payments.Protos$Output: org.bitcoin.protocols.payments.Protos$Output$Builder newBuilder()>();

        $r9 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.math.BigInteger totalValue>;

        $l0 = virtualinvoke $r9.<java.math.BigInteger: long longValue()>();

        virtualinvoke $r8.<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder setAmount(long)>($l0);

        $r10 = staticinvoke <com.google.bitcoin.script.ScriptBuilder: com.google.bitcoin.script.Script createOutputScript(com.google.bitcoin.core.Address)>($r2);

        $r11 = virtualinvoke $r10.<com.google.bitcoin.script.Script: byte[] getProgram()>();

        $r7 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>($r11);

        virtualinvoke $r8.<org.bitcoin.protocols.payments.Protos$Output$Builder: org.bitcoin.protocols.payments.Protos$Output$Builder setScript(com.google.protobuf.ByteString)>($r7);

        virtualinvoke $r6.<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder addRefundTo(org.bitcoin.protocols.payments.Protos$Output$Builder)>($r8);

     label3:
        if $r3 == null goto label4;

        virtualinvoke $r6.<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder setMemo(java.lang.String)>($r3);

     label4:
        $r12 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (com.google.bitcoin.core.Transaction) $r13;

        virtualinvoke $r14.<com.google.bitcoin.core.Transaction: void verify()>();

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke $r14.<com.google.bitcoin.core.Transaction: void bitcoinSerialize(java.io.OutputStream)>($r4);

        $r11 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r7 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[])>($r11);

        virtualinvoke $r6.<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment$Builder addTransactions(com.google.protobuf.ByteString)>($r7);

        goto label5;

     label6:
        $r15 = virtualinvoke $r6.<org.bitcoin.protocols.payments.Protos$Payment$Builder: org.bitcoin.protocols.payments.Protos$Payment build()>();

        return $r15;
    }

    public org.bitcoin.protocols.payments.Protos$PaymentDetails getPaymentDetails()
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.bitcoin.protocols.payments.Protos$PaymentDetails r1;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        r1 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        return r1;
    }

    public org.bitcoin.protocols.payments.Protos$PaymentRequest getPaymentRequest()
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.bitcoin.protocols.payments.Protos$PaymentRequest r1;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        r1 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest>;

        return r1;
    }

    public java.lang.String getPaymentUrl()
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.bitcoin.protocols.payments.Protos$PaymentDetails $r1;
        boolean $z0;
        java.lang.String $r2;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $z0 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasPaymentUrl()>();

        if $z0 == 0 goto label1;

        $r1 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $r2 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getPaymentUrl()>();

        return $r2;

     label1:
        return null;
    }

    public com.google.bitcoin.core.Wallet$SendRequest getSendRequest()
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        com.google.bitcoin.core.Transaction $r1;
        com.google.bitcoin.core.NetworkParameters $r2;
        org.bitcoin.protocols.payments.Protos$PaymentDetails $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.bitcoin.protocols.payments.Protos$Output $r7;
        com.google.bitcoin.core.TransactionOutput $r8;
        long $l0;
        java.math.BigInteger $r9;
        com.google.protobuf.ByteString $r10;
        byte[] $r11;
        com.google.bitcoin.core.Wallet$SendRequest $r12;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 = new com.google.bitcoin.core.Transaction;

        $r2 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.core.NetworkParameters params>;

        specialinvoke $r1.<com.google.bitcoin.core.Transaction: void <init>(com.google.bitcoin.core.NetworkParameters)>($r2);

        $r3 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $r4 = virtualinvoke $r3.<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.util.List getOutputsList()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.bitcoin.protocols.payments.Protos$Output) $r6;

        $r8 = new com.google.bitcoin.core.TransactionOutput;

        $r2 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.core.NetworkParameters params>;

        $l0 = virtualinvoke $r7.<org.bitcoin.protocols.payments.Protos$Output: long getAmount()>();

        $r9 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l0);

        $r10 = virtualinvoke $r7.<org.bitcoin.protocols.payments.Protos$Output: com.google.protobuf.ByteString getScript()>();

        $r11 = virtualinvoke $r10.<com.google.protobuf.ByteString: byte[] toByteArray()>();

        specialinvoke $r8.<com.google.bitcoin.core.TransactionOutput: void <init>(com.google.bitcoin.core.NetworkParameters,com.google.bitcoin.core.Transaction,java.math.BigInteger,byte[])>($r2, $r1, $r9, $r11);

        virtualinvoke $r1.<com.google.bitcoin.core.Transaction: com.google.bitcoin.core.TransactionOutput addOutput(com.google.bitcoin.core.TransactionOutput)>($r8);

        goto label1;

     label2:
        $r12 = staticinvoke <com.google.bitcoin.core.Wallet$SendRequest: com.google.bitcoin.core.Wallet$SendRequest forTx(com.google.bitcoin.core.Transaction)>($r1);

        return $r12;
    }

    public java.math.BigInteger getValue()
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        java.math.BigInteger r1;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        r1 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.math.BigInteger totalValue>;

        return r1;
    }

    public boolean isExpired()
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.bitcoin.protocols.payments.Protos$PaymentDetails $r1;
        boolean $z0;
        long $l0, $l1;
        byte $b2;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $z0 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentDetails: boolean hasExpires()>();

        if $z0 == 0 goto label1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 / 1000L;

        $r1 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

        $l1 = virtualinvoke $r1.<org.bitcoin.protocols.payments.Protos$PaymentDetails: long getExpires()>();

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected com.google.common.util.concurrent.ListenableFuture sendPayment(java.net.URL, org.bitcoin.protocols.payments.Protos$Payment)
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        java.net.URL $r1;
        org.bitcoin.protocols.payments.Protos$Payment $r2;
        com.google.bitcoin.protocols.payments.PaymentSession$2 $r3;
        com.google.common.util.concurrent.ListenableFuture $r4;
        com.google.common.util.concurrent.ListeningExecutorService $r5;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 := @parameter0: java.net.URL;

        $r2 := @parameter1: org.bitcoin.protocols.payments.Protos$Payment;

        $r5 = <com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListeningExecutorService executor>;

        $r3 = new com.google.bitcoin.protocols.payments.PaymentSession$2;

        specialinvoke $r3.<com.google.bitcoin.protocols.payments.PaymentSession$2: void <init>(com.google.bitcoin.protocols.payments.PaymentSession,java.net.URL,org.bitcoin.protocols.payments.Protos$Payment)>($r0, $r1, $r2);

        $r4 = interfaceinvoke $r5.<com.google.common.util.concurrent.ListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)>($r3);

        return $r4;
    }

    public com.google.common.util.concurrent.ListenableFuture sendPayment(java.util.List, com.google.bitcoin.core.Address, java.lang.String) throws com.google.bitcoin.protocols.payments.PaymentRequestException, com.google.bitcoin.core.VerificationException, java.io.IOException
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        java.util.List $r1;
        com.google.bitcoin.core.Address $r2;
        java.lang.String $r3;
        java.lang.Throwable $r4;
        org.bitcoin.protocols.payments.Protos$Payment $r5;
        boolean $z0;
        org.bitcoin.protocols.payments.Protos$PaymentDetails $r6;
        com.google.common.util.concurrent.ListenableFuture $r7;
        com.google.bitcoin.protocols.payments.PaymentRequestException$Expired r8;
        java.net.URL r9;
        com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentURL r10;
        java.lang.Exception r11;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r1 := @parameter0: java.util.List;

        $r2 := @parameter1: com.google.bitcoin.core.Address;

        $r3 := @parameter2: java.lang.String;

        $r5 = virtualinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$Payment getPayment(java.util.List,com.google.bitcoin.core.Address,java.lang.String)>($r1, $r2, $r3);

        if $r5 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: boolean isExpired()>();

        if $z0 == 0 goto label2;

        r8 = new com.google.bitcoin.protocols.payments.PaymentRequestException$Expired;

        specialinvoke r8.<com.google.bitcoin.protocols.payments.PaymentRequestException$Expired: void <init>(java.lang.String)>("PaymentRequest is expired");

        throw r8;

     label2:
        r9 = new java.net.URL;

        $r6 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentDetails paymentDetails>;

     label3:
        $r3 = virtualinvoke $r6.<org.bitcoin.protocols.payments.Protos$PaymentDetails: java.lang.String getPaymentUrl()>();

        specialinvoke r9.<java.net.URL: void <init>(java.lang.String)>($r3);

     label4:
        $r7 = virtualinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.common.util.concurrent.ListenableFuture sendPayment(java.net.URL,org.bitcoin.protocols.payments.Protos$Payment)>(r9, $r5);

        return $r7;

     label5:
        $r4 := @caughtexception;

        r10 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentURL;

        r11 = (java.lang.Exception) $r4;

        specialinvoke r10.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPaymentURL: void <init>(java.lang.Exception)>(r11);

        throw r10;

        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    public com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData verifyPki() throws com.google.bitcoin.protocols.payments.PaymentRequestException
    {
        com.google.bitcoin.protocols.payments.PaymentSession $r0;
        org.spongycastle.asn1.x500.X500Name $r1, r51;
        java.security.cert.PKIXParameters $r2, r50;
        org.spongycastle.asn1.x500.RDN $r3;
        com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData $r4, r52;
        org.bitcoin.protocols.payments.Protos$PaymentRequest $r5;
        java.lang.String $r6, $r22, varReplacer3633, varReplacer3634, varReplacer3635, varReplacer3637, varReplacer3638, varReplacer3639, varReplacer3640, varReplacer3641, varReplacer3643;
        boolean $z0;
        com.google.protobuf.ByteString $r7;
        org.bitcoin.protocols.payments.Protos$X509Certificates $r8;
        int $i0, $i1, varReplacer3636, varReplacer3644;
        com.google.protobuf.InvalidProtocolBufferException $r9;
        java.lang.StringBuilder $r10, r46;
        java.lang.Throwable $r11, $r20, $r31, $r39, $r41, $r42, $r43, $r44;
        java.security.cert.CertificateFactory $r12;
        java.util.ArrayList $r13;
        java.util.List $r14;
        java.util.Iterator $r15;
        java.lang.Object $r16;
        java.io.InputStream $r17;
        java.security.cert.Certificate $r18;
        java.security.cert.X509Certificate $r19;
        java.security.cert.CertPath $r21;
        java.security.KeyStore $r23;
        java.security.cert.CertPathValidator $r24;
        java.security.cert.CertPathValidatorResult $r25;
        java.security.cert.PKIXCertPathValidatorResult $r26;
        java.security.PublicKey $r27;
        java.security.Signature $r28;
        org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder $r29;
        byte[] $r30;
        javax.security.auth.x500.X500Principal $r32;
        org.spongycastle.asn1.x500.RDN[] $r33;
        org.spongycastle.asn1.x500.AttributeTypeAndValue $r34;
        org.spongycastle.asn1.ASN1ObjectIdentifier $r35, $r36;
        org.spongycastle.asn1.ASN1Encodable $r37;
        org.spongycastle.asn1.ASN1String $r38;
        java.security.cert.TrustAnchor $r40;
        com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPkiData r45;
        com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPkiType r47;
        com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException r48;
        java.lang.RuntimeException r49;
        java.lang.Exception r53;
        null_type varReplacer3632, varReplacer3642;

        nop;

        $r0 := @this: com.google.bitcoin.protocols.payments.PaymentSession;

        $r4 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData pkiVerificationData>;

        if $r4 == null goto label01;

        $r4 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData pkiVerificationData>;

        return $r4;

     label01:
        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest>;

     label02:
        $r6 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentRequest: java.lang.String getPkiType()>();

        varReplacer3643 = "none";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3643);

     label03:
        if $z0 == 0 goto label04;

        varReplacer3632 = null;

        return varReplacer3632;

     label04:
        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest>;

     label05:
        $r6 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentRequest: java.lang.String getPkiType()>();

        varReplacer3637 = "x509+sha256";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3637);

     label06:
        if $z0 == 0 goto label13;

        $r6 = "SHA256withRSA";

     label07:
        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest>;

     label08:
        $r7 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getPkiData()>();

        $r8 = staticinvoke <org.bitcoin.protocols.payments.Protos$X509Certificates: org.bitcoin.protocols.payments.Protos$X509Certificates parseFrom(com.google.protobuf.ByteString)>($r7);

        $i0 = virtualinvoke $r8.<org.bitcoin.protocols.payments.Protos$X509Certificates: int getCertificateCount()>();

     label09:
        if $i0 != 0 goto label22;

        r45 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPkiData;

     label10:
        varReplacer3638 = "No certificates provided in message: server config error";

        specialinvoke r45.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPkiData: void <init>(java.lang.String)>(varReplacer3638);

     label11:
        throw r45;

     label12:
        $r9 := @caughtexception;

        r45 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPkiData;

        specialinvoke r45.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPkiData: void <init>(java.lang.Exception)>($r9);

        throw r45;

     label13:
        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest>;

     label14:
        $r6 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentRequest: java.lang.String getPkiType()>();

        varReplacer3634 = "x509+sha1";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3634);

     label15:
        if $z0 == 0 goto label16;

        $r6 = "SHA1withRSA";

        goto label07;

     label16:
        r47 = new com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPkiType;

        r46 = new java.lang.StringBuilder;

        $r10 = r46;

     label17:
        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        varReplacer3640 = "Unsupported PKI type: ";

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3640);

     label18:
        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest>;

     label19:
        $r6 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentRequest: java.lang.String getPkiType()>();

        $r10 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<com.google.bitcoin.protocols.payments.PaymentRequestException$InvalidPkiType: void <init>(java.lang.String)>($r6);

     label20:
        throw r47;

     label21:
        $r11 := @caughtexception;

        r48 = new com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException;

        r53 = (java.lang.Exception) $r11;

        specialinvoke r48.<com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException: void <init>(java.lang.Exception)>(r53);

        throw r48;

     label22:
        varReplacer3635 = "X.509";

        $r12 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer3635);

        $r13 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();

        $r14 = virtualinvoke $r8.<org.bitcoin.protocols.payments.Protos$X509Certificates: java.util.List getCertificateList()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z0 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

     label24:
        if $z0 == 0 goto label32;

     label25:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

     label26:
        $r7 = (com.google.protobuf.ByteString) $r16;

     label27:
        $r17 = virtualinvoke $r7.<com.google.protobuf.ByteString: java.io.InputStream newInput()>();

        $r18 = virtualinvoke $r12.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r17);

     label28:
        $r19 = (java.security.cert.X509Certificate) $r18;

     label29:
        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r19);

     label30:
        goto label23;

     label31:
        $r20 := @caughtexception;

        r49 = new java.lang.RuntimeException;

        specialinvoke r49.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r20);

        throw r49;

     label32:
        $r21 = virtualinvoke $r12.<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.util.List)>($r13);

     label33:
        r50 = new java.security.cert.PKIXParameters;

        $r2 = r50;

        $r22 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.lang.String trustStorePath>;

     label34:
        $r23 = specialinvoke $r0.<com.google.bitcoin.protocols.payments.PaymentSession: java.security.KeyStore createKeyStore(java.lang.String)>($r22);

        specialinvoke r50.<java.security.cert.PKIXParameters: void <init>(java.security.KeyStore)>($r23);

        varReplacer3644 = 0;

        virtualinvoke $r2.<java.security.cert.PKIXParameters: void setRevocationEnabled(boolean)>(varReplacer3644);

        varReplacer3641 = "PKIX";

        $r24 = staticinvoke <java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String)>(varReplacer3641);

        $r25 = virtualinvoke $r24.<java.security.cert.CertPathValidator: java.security.cert.CertPathValidatorResult validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>($r21, $r2);

     label35:
        $r26 = (java.security.cert.PKIXCertPathValidatorResult) $r25;

     label36:
        $r27 = virtualinvoke $r26.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey getPublicKey()>();

        $r28 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6);

        virtualinvoke $r28.<java.security.Signature: void initVerify(java.security.PublicKey)>($r27);

     label37:
        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest>;

     label38:
        $r29 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentRequest: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder toBuilder()>();

     label39:
        $r7 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>;

     label40:
        virtualinvoke $r29.<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder setSignature(com.google.protobuf.ByteString)>($r7);

        $r5 = virtualinvoke $r29.<org.bitcoin.protocols.payments.Protos$PaymentRequest$Builder: org.bitcoin.protocols.payments.Protos$PaymentRequest build()>();

        $r30 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentRequest: byte[] toByteArray()>();

        virtualinvoke $r28.<java.security.Signature: void update(byte[])>($r30);

     label41:
        $r5 = $r0.<com.google.bitcoin.protocols.payments.PaymentSession: org.bitcoin.protocols.payments.Protos$PaymentRequest paymentRequest>;

     label42:
        $r7 = virtualinvoke $r5.<org.bitcoin.protocols.payments.Protos$PaymentRequest: com.google.protobuf.ByteString getSignature()>();

        $r30 = virtualinvoke $r7.<com.google.protobuf.ByteString: byte[] toByteArray()>();

        $z0 = virtualinvoke $r28.<java.security.Signature: boolean verify(byte[])>($r30);

     label43:
        if $z0 != 0 goto label47;

        r48 = new com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException;

     label44:
        varReplacer3633 = "Invalid signature, this payment request is not valid.";

        specialinvoke r48.<com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException: void <init>(java.lang.String)>(varReplacer3633);

     label45:
        throw r48;

     label46:
        $r31 := @caughtexception;

        r49 = new java.lang.RuntimeException;

        specialinvoke r49.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r31);

        throw r49;

     label47:
        varReplacer3636 = 0;

        $r16 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(varReplacer3636);

     label48:
        $r19 = (java.security.cert.X509Certificate) $r16;

     label49:
        $r32 = virtualinvoke $r19.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

     label50:
        r51 = new org.spongycastle.asn1.x500.X500Name;

        $r1 = r51;

     label51:
        $r6 = virtualinvoke $r32.<javax.security.auth.x500.X500Principal: java.lang.String getName()>();

        specialinvoke r51.<org.spongycastle.asn1.x500.X500Name: void <init>(java.lang.String)>($r6);

     label52:
        $r6 = null;

        $r22 = null;

     label53:
        $r33 = virtualinvoke $r1.<org.spongycastle.asn1.x500.X500Name: org.spongycastle.asn1.x500.RDN[] getRDNs()>();

     label54:
        $i0 = lengthof $r33;

        $i1 = 0;

     label55:
        if $i1 >= $i0 goto label72;

        $r3 = $r33[$i1];

     label56:
        $r34 = virtualinvoke $r3.<org.spongycastle.asn1.x500.RDN: org.spongycastle.asn1.x500.AttributeTypeAndValue getFirst()>();

        $r35 = virtualinvoke $r34.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

     label57:
        $r36 = <org.spongycastle.asn1.x500.style.RFC4519Style: org.spongycastle.asn1.ASN1ObjectIdentifier cn>;

     label58:
        $z0 = virtualinvoke $r35.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r36);

     label59:
        if $z0 == 0 goto label64;

     label60:
        $r37 = virtualinvoke $r34.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

     label61:
        $r38 = (org.spongycastle.asn1.ASN1String) $r37;

     label62:
        $r6 = interfaceinvoke $r38.<org.spongycastle.asn1.ASN1String: java.lang.String getString()>();

     label63:
        $i1 = $i1 + 1;

        goto label55;

     label64:
        $r35 = virtualinvoke $r34.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1ObjectIdentifier getType()>();

     label65:
        $r36 = <org.spongycastle.asn1.x500.style.RFC4519Style: org.spongycastle.asn1.ASN1ObjectIdentifier o>;

     label66:
        $z0 = virtualinvoke $r35.<org.spongycastle.asn1.ASN1ObjectIdentifier: boolean equals(java.lang.Object)>($r36);

     label67:
        if $z0 == 0 goto label63;

     label68:
        $r37 = virtualinvoke $r34.<org.spongycastle.asn1.x500.AttributeTypeAndValue: org.spongycastle.asn1.ASN1Encodable getValue()>();

     label69:
        $r38 = (org.spongycastle.asn1.ASN1String) $r37;

     label70:
        $r22 = interfaceinvoke $r38.<org.spongycastle.asn1.ASN1String: java.lang.String getString()>();

     label71:
        goto label63;

     label72:
        if $r6 != null goto label76;

        if $r22 != null goto label76;

        r48 = new com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException;

     label73:
        varReplacer3639 = "Invalid certificate, no CN or O fields";

        specialinvoke r48.<com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException: void <init>(java.lang.String)>(varReplacer3639);

     label74:
        throw r48;

     label75:
        $r39 := @caughtexception;

        r48 = new com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException;

        r53 = (java.lang.Exception) $r39;

        specialinvoke r48.<com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException: void <init>(java.lang.Exception)>(r53);

        throw r48;

     label76:
        r52 = new com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData;

        $r4 = r52;

     label77:
        $r40 = virtualinvoke $r26.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor getTrustAnchor()>();

        varReplacer3642 = null;

        specialinvoke r52.<com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData: void <init>(java.lang.String,java.lang.String,java.security.PublicKey,java.security.cert.TrustAnchor,com.google.bitcoin.protocols.payments.PaymentSession$1)>($r6, $r22, $r27, $r40, varReplacer3642);

     label78:
        $r0.<com.google.bitcoin.protocols.payments.PaymentSession: com.google.bitcoin.protocols.payments.PaymentSession$PkiVerificationData pkiVerificationData> = $r4;

        return $r4;

     label79:
        $r41 := @caughtexception;

        r48 = new com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException;

        r53 = (java.lang.Exception) $r41;

        specialinvoke r48.<com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException: void <init>(java.lang.Exception)>(r53);

        throw r48;

     label80:
        $r42 := @caughtexception;

        r48 = new com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException;

        r53 = (java.lang.Exception) $r42;

        specialinvoke r48.<com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException: void <init>(java.lang.Exception)>(r53);

        throw r48;

     label81:
        $r43 := @caughtexception;

        r48 = new com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException;

        r53 = (java.lang.Exception) $r43;

        specialinvoke r48.<com.google.bitcoin.protocols.payments.PaymentRequestException$PkiVerificationException: void <init>(java.lang.Exception)>(r53);

        throw r48;

     label82:
        $r44 := @caughtexception;

        r49 = new java.lang.RuntimeException;

        specialinvoke r49.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r44);

        throw r49;

        catch com.google.protobuf.InvalidProtocolBufferException from label02 to label03 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label05 to label06 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label08 to label09 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label10 to label11 with label12;
        catch java.security.cert.CertificateException from label02 to label03 with label21;
        catch java.security.cert.CertificateException from label05 to label06 with label21;
        catch java.security.cert.CertificateException from label08 to label09 with label21;
        catch java.security.cert.CertificateException from label10 to label11 with label21;
        catch java.security.NoSuchAlgorithmException from label02 to label03 with label31;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label31;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label31;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label31;
        catch java.security.InvalidAlgorithmParameterException from label02 to label03 with label46;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label46;
        catch java.security.InvalidAlgorithmParameterException from label08 to label09 with label46;
        catch java.security.InvalidAlgorithmParameterException from label10 to label11 with label46;
        catch java.security.cert.CertPathValidatorException from label02 to label03 with label75;
        catch java.security.cert.CertPathValidatorException from label05 to label06 with label75;
        catch java.security.cert.CertPathValidatorException from label08 to label09 with label75;
        catch java.security.cert.CertPathValidatorException from label10 to label11 with label75;
        catch java.security.InvalidKeyException from label02 to label03 with label79;
        catch java.security.InvalidKeyException from label05 to label06 with label79;
        catch java.security.InvalidKeyException from label08 to label09 with label79;
        catch java.security.InvalidKeyException from label10 to label11 with label79;
        catch java.security.SignatureException from label02 to label03 with label80;
        catch java.security.SignatureException from label05 to label06 with label80;
        catch java.security.SignatureException from label08 to label09 with label80;
        catch java.security.SignatureException from label10 to label11 with label80;
        catch java.io.IOException from label02 to label03 with label81;
        catch java.io.IOException from label05 to label06 with label81;
        catch java.io.IOException from label08 to label09 with label81;
        catch java.io.IOException from label10 to label11 with label81;
        catch java.security.KeyStoreException from label02 to label03 with label82;
        catch java.security.KeyStoreException from label05 to label06 with label82;
        catch java.security.KeyStoreException from label08 to label09 with label82;
        catch java.security.KeyStoreException from label10 to label11 with label82;
        catch com.google.protobuf.InvalidProtocolBufferException from label14 to label15 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label17 to label18 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label19 to label20 with label12;
        catch java.security.cert.CertificateException from label14 to label15 with label21;
        catch java.security.cert.CertificateException from label17 to label18 with label21;
        catch java.security.cert.CertificateException from label19 to label20 with label21;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label31;
        catch java.security.NoSuchAlgorithmException from label17 to label18 with label31;
        catch java.security.NoSuchAlgorithmException from label19 to label20 with label31;
        catch java.security.InvalidAlgorithmParameterException from label14 to label15 with label46;
        catch java.security.InvalidAlgorithmParameterException from label17 to label18 with label46;
        catch java.security.InvalidAlgorithmParameterException from label19 to label20 with label46;
        catch java.security.cert.CertPathValidatorException from label14 to label15 with label75;
        catch java.security.cert.CertPathValidatorException from label17 to label18 with label75;
        catch java.security.cert.CertPathValidatorException from label19 to label20 with label75;
        catch java.security.InvalidKeyException from label14 to label15 with label79;
        catch java.security.InvalidKeyException from label17 to label18 with label79;
        catch java.security.InvalidKeyException from label19 to label20 with label79;
        catch java.security.SignatureException from label14 to label15 with label80;
        catch java.security.SignatureException from label17 to label18 with label80;
        catch java.security.SignatureException from label19 to label20 with label80;
        catch java.io.IOException from label14 to label15 with label81;
        catch java.io.IOException from label17 to label18 with label81;
        catch java.io.IOException from label19 to label20 with label81;
        catch java.security.KeyStoreException from label14 to label15 with label82;
        catch java.security.KeyStoreException from label17 to label18 with label82;
        catch java.security.KeyStoreException from label19 to label20 with label82;
        catch com.google.protobuf.InvalidProtocolBufferException from label22 to label24 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label25 to label26 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label27 to label28 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label29 to label30 with label12;
        catch java.security.cert.CertificateException from label22 to label24 with label21;
        catch java.security.cert.CertificateException from label25 to label26 with label21;
        catch java.security.cert.CertificateException from label27 to label28 with label21;
        catch java.security.cert.CertificateException from label29 to label30 with label21;
        catch java.security.NoSuchAlgorithmException from label22 to label24 with label31;
        catch java.security.NoSuchAlgorithmException from label25 to label26 with label31;
        catch java.security.NoSuchAlgorithmException from label27 to label28 with label31;
        catch java.security.NoSuchAlgorithmException from label29 to label30 with label31;
        catch java.security.InvalidAlgorithmParameterException from label22 to label24 with label46;
        catch java.security.InvalidAlgorithmParameterException from label25 to label26 with label46;
        catch java.security.InvalidAlgorithmParameterException from label27 to label28 with label46;
        catch java.security.InvalidAlgorithmParameterException from label29 to label30 with label46;
        catch java.security.cert.CertPathValidatorException from label22 to label24 with label75;
        catch java.security.cert.CertPathValidatorException from label25 to label26 with label75;
        catch java.security.cert.CertPathValidatorException from label27 to label28 with label75;
        catch java.security.cert.CertPathValidatorException from label29 to label30 with label75;
        catch java.security.InvalidKeyException from label22 to label24 with label79;
        catch java.security.InvalidKeyException from label25 to label26 with label79;
        catch java.security.InvalidKeyException from label27 to label28 with label79;
        catch java.security.InvalidKeyException from label29 to label30 with label79;
        catch java.security.SignatureException from label22 to label24 with label80;
        catch java.security.SignatureException from label25 to label26 with label80;
        catch java.security.SignatureException from label27 to label28 with label80;
        catch java.security.SignatureException from label29 to label30 with label80;
        catch java.io.IOException from label22 to label24 with label81;
        catch java.io.IOException from label25 to label26 with label81;
        catch java.io.IOException from label27 to label28 with label81;
        catch java.io.IOException from label29 to label30 with label81;
        catch java.security.KeyStoreException from label22 to label24 with label82;
        catch java.security.KeyStoreException from label25 to label26 with label82;
        catch java.security.KeyStoreException from label27 to label28 with label82;
        catch java.security.KeyStoreException from label29 to label30 with label82;
        catch com.google.protobuf.InvalidProtocolBufferException from label32 to label33 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label34 to label35 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label36 to label37 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label38 to label39 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label40 to label41 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label42 to label43 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label44 to label45 with label12;
        catch java.security.cert.CertificateException from label32 to label33 with label21;
        catch java.security.cert.CertificateException from label34 to label35 with label21;
        catch java.security.cert.CertificateException from label36 to label37 with label21;
        catch java.security.cert.CertificateException from label38 to label39 with label21;
        catch java.security.cert.CertificateException from label40 to label41 with label21;
        catch java.security.cert.CertificateException from label42 to label43 with label21;
        catch java.security.cert.CertificateException from label44 to label45 with label21;
        catch java.security.NoSuchAlgorithmException from label32 to label33 with label31;
        catch java.security.NoSuchAlgorithmException from label34 to label35 with label31;
        catch java.security.NoSuchAlgorithmException from label36 to label37 with label31;
        catch java.security.NoSuchAlgorithmException from label38 to label39 with label31;
        catch java.security.NoSuchAlgorithmException from label40 to label41 with label31;
        catch java.security.NoSuchAlgorithmException from label42 to label43 with label31;
        catch java.security.NoSuchAlgorithmException from label44 to label45 with label31;
        catch java.security.InvalidAlgorithmParameterException from label32 to label33 with label46;
        catch java.security.InvalidAlgorithmParameterException from label34 to label35 with label46;
        catch java.security.InvalidAlgorithmParameterException from label36 to label37 with label46;
        catch java.security.InvalidAlgorithmParameterException from label38 to label39 with label46;
        catch java.security.InvalidAlgorithmParameterException from label40 to label41 with label46;
        catch java.security.InvalidAlgorithmParameterException from label42 to label43 with label46;
        catch java.security.InvalidAlgorithmParameterException from label44 to label45 with label46;
        catch java.security.cert.CertPathValidatorException from label32 to label33 with label75;
        catch java.security.cert.CertPathValidatorException from label34 to label35 with label75;
        catch java.security.cert.CertPathValidatorException from label36 to label37 with label75;
        catch java.security.cert.CertPathValidatorException from label38 to label39 with label75;
        catch java.security.cert.CertPathValidatorException from label40 to label41 with label75;
        catch java.security.cert.CertPathValidatorException from label42 to label43 with label75;
        catch java.security.cert.CertPathValidatorException from label44 to label45 with label75;
        catch java.security.InvalidKeyException from label32 to label33 with label79;
        catch java.security.InvalidKeyException from label34 to label35 with label79;
        catch java.security.InvalidKeyException from label36 to label37 with label79;
        catch java.security.InvalidKeyException from label38 to label39 with label79;
        catch java.security.InvalidKeyException from label40 to label41 with label79;
        catch java.security.InvalidKeyException from label42 to label43 with label79;
        catch java.security.InvalidKeyException from label44 to label45 with label79;
        catch java.security.SignatureException from label32 to label33 with label80;
        catch java.security.SignatureException from label34 to label35 with label80;
        catch java.security.SignatureException from label36 to label37 with label80;
        catch java.security.SignatureException from label38 to label39 with label80;
        catch java.security.SignatureException from label40 to label41 with label80;
        catch java.security.SignatureException from label42 to label43 with label80;
        catch java.security.SignatureException from label44 to label45 with label80;
        catch java.io.IOException from label32 to label33 with label81;
        catch java.io.IOException from label34 to label35 with label81;
        catch java.io.IOException from label36 to label37 with label81;
        catch java.io.IOException from label38 to label39 with label81;
        catch java.io.IOException from label40 to label41 with label81;
        catch java.io.IOException from label42 to label43 with label81;
        catch java.io.IOException from label44 to label45 with label81;
        catch java.security.KeyStoreException from label32 to label33 with label82;
        catch java.security.KeyStoreException from label34 to label35 with label82;
        catch java.security.KeyStoreException from label36 to label37 with label82;
        catch java.security.KeyStoreException from label38 to label39 with label82;
        catch java.security.KeyStoreException from label40 to label41 with label82;
        catch java.security.KeyStoreException from label42 to label43 with label82;
        catch java.security.KeyStoreException from label44 to label45 with label82;
        catch com.google.protobuf.InvalidProtocolBufferException from label47 to label48 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label49 to label50 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label51 to label52 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label53 to label54 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label56 to label57 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label58 to label59 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label60 to label61 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label62 to label63 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label64 to label65 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label66 to label67 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label68 to label69 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label70 to label71 with label12;
        catch com.google.protobuf.InvalidProtocolBufferException from label73 to label74 with label12;
        catch java.security.cert.CertificateException from label47 to label48 with label21;
        catch java.security.cert.CertificateException from label49 to label50 with label21;
        catch java.security.cert.CertificateException from label51 to label52 with label21;
        catch java.security.cert.CertificateException from label53 to label54 with label21;
        catch java.security.cert.CertificateException from label56 to label57 with label21;
        catch java.security.cert.CertificateException from label58 to label59 with label21;
        catch java.security.cert.CertificateException from label60 to label61 with label21;
        catch java.security.cert.CertificateException from label62 to label63 with label21;
        catch java.security.cert.CertificateException from label64 to label65 with label21;
        catch java.security.cert.CertificateException from label66 to label67 with label21;
        catch java.security.cert.CertificateException from label68 to label69 with label21;
        catch java.security.cert.CertificateException from label70 to label71 with label21;
        catch java.security.cert.CertificateException from label73 to label74 with label21;
        catch java.security.NoSuchAlgorithmException from label47 to label48 with label31;
        catch java.security.NoSuchAlgorithmException from label49 to label50 with label31;
        catch java.security.NoSuchAlgorithmException from label51 to label52 with label31;
        catch java.security.NoSuchAlgorithmException from label53 to label54 with label31;
        catch java.security.NoSuchAlgorithmException from label56 to label57 with label31;
        catch java.security.NoSuchAlgorithmException from label58 to label59 with label31;
        catch java.security.NoSuchAlgorithmException from label60 to label61 with label31;
        catch java.security.NoSuchAlgorithmException from label62 to label63 with label31;
        catch java.security.NoSuchAlgorithmException from label64 to label65 with label31;
        catch java.security.NoSuchAlgorithmException from label66 to label67 with label31;
        catch java.security.NoSuchAlgorithmException from label68 to label69 with label31;
        catch java.security.NoSuchAlgorithmException from label70 to label71 with label31;
        catch java.security.NoSuchAlgorithmException from label73 to label74 with label31;
        catch java.security.InvalidAlgorithmParameterException from label47 to label48 with label46;
        catch java.security.InvalidAlgorithmParameterException from label49 to label50 with label46;
        catch java.security.InvalidAlgorithmParameterException from label51 to label52 with label46;
        catch java.security.InvalidAlgorithmParameterException from label53 to label54 with label46;
        catch java.security.InvalidAlgorithmParameterException from label56 to label57 with label46;
        catch java.security.InvalidAlgorithmParameterException from label58 to label59 with label46;
        catch java.security.InvalidAlgorithmParameterException from label60 to label61 with label46;
        catch java.security.InvalidAlgorithmParameterException from label62 to label63 with label46;
        catch java.security.InvalidAlgorithmParameterException from label64 to label65 with label46;
        catch java.security.InvalidAlgorithmParameterException from label66 to label67 with label46;
        catch java.security.InvalidAlgorithmParameterException from label68 to label69 with label46;
        catch java.security.InvalidAlgorithmParameterException from label70 to label71 with label46;
        catch java.security.InvalidAlgorithmParameterException from label73 to label74 with label46;
        catch java.security.cert.CertPathValidatorException from label47 to label48 with label75;
        catch java.security.cert.CertPathValidatorException from label49 to label50 with label75;
        catch java.security.cert.CertPathValidatorException from label51 to label52 with label75;
        catch java.security.cert.CertPathValidatorException from label53 to label54 with label75;
        catch java.security.cert.CertPathValidatorException from label56 to label57 with label75;
        catch java.security.cert.CertPathValidatorException from label58 to label59 with label75;
        catch java.security.cert.CertPathValidatorException from label60 to label61 with label75;
        catch java.security.cert.CertPathValidatorException from label62 to label63 with label75;
        catch java.security.cert.CertPathValidatorException from label64 to label65 with label75;
        catch java.security.cert.CertPathValidatorException from label66 to label67 with label75;
        catch java.security.cert.CertPathValidatorException from label68 to label69 with label75;
        catch java.security.cert.CertPathValidatorException from label70 to label71 with label75;
        catch java.security.cert.CertPathValidatorException from label73 to label74 with label75;
        catch java.security.InvalidKeyException from label47 to label48 with label79;
        catch java.security.InvalidKeyException from label49 to label50 with label79;
        catch java.security.InvalidKeyException from label51 to label52 with label79;
        catch java.security.InvalidKeyException from label53 to label54 with label79;
        catch java.security.InvalidKeyException from label56 to label57 with label79;
        catch java.security.InvalidKeyException from label58 to label59 with label79;
        catch java.security.InvalidKeyException from label60 to label61 with label79;
        catch java.security.InvalidKeyException from label62 to label63 with label79;
        catch java.security.InvalidKeyException from label64 to label65 with label79;
        catch java.security.InvalidKeyException from label66 to label67 with label79;
        catch java.security.InvalidKeyException from label68 to label69 with label79;
        catch java.security.InvalidKeyException from label70 to label71 with label79;
        catch java.security.InvalidKeyException from label73 to label74 with label79;
        catch java.security.SignatureException from label47 to label48 with label80;
        catch java.security.SignatureException from label49 to label50 with label80;
        catch java.security.SignatureException from label51 to label52 with label80;
        catch java.security.SignatureException from label53 to label54 with label80;
        catch java.security.SignatureException from label56 to label57 with label80;
        catch java.security.SignatureException from label58 to label59 with label80;
        catch java.security.SignatureException from label60 to label61 with label80;
        catch java.security.SignatureException from label62 to label63 with label80;
        catch java.security.SignatureException from label64 to label65 with label80;
        catch java.security.SignatureException from label66 to label67 with label80;
        catch java.security.SignatureException from label68 to label69 with label80;
        catch java.security.SignatureException from label70 to label71 with label80;
        catch java.security.SignatureException from label73 to label74 with label80;
        catch java.io.IOException from label47 to label48 with label81;
        catch java.io.IOException from label49 to label50 with label81;
        catch java.io.IOException from label51 to label52 with label81;
        catch java.io.IOException from label53 to label54 with label81;
        catch java.io.IOException from label56 to label57 with label81;
        catch java.io.IOException from label58 to label59 with label81;
        catch java.io.IOException from label60 to label61 with label81;
        catch java.io.IOException from label62 to label63 with label81;
        catch java.io.IOException from label64 to label65 with label81;
        catch java.io.IOException from label66 to label67 with label81;
        catch java.io.IOException from label68 to label69 with label81;
        catch java.io.IOException from label70 to label71 with label81;
        catch java.io.IOException from label73 to label74 with label81;
        catch java.security.KeyStoreException from label47 to label48 with label82;
        catch java.security.KeyStoreException from label49 to label50 with label82;
        catch java.security.KeyStoreException from label51 to label52 with label82;
        catch java.security.KeyStoreException from label53 to label54 with label82;
        catch java.security.KeyStoreException from label56 to label57 with label82;
        catch java.security.KeyStoreException from label58 to label59 with label82;
        catch java.security.KeyStoreException from label60 to label61 with label82;
        catch java.security.KeyStoreException from label62 to label63 with label82;
        catch java.security.KeyStoreException from label64 to label65 with label82;
        catch java.security.KeyStoreException from label66 to label67 with label82;
        catch java.security.KeyStoreException from label68 to label69 with label82;
        catch java.security.KeyStoreException from label70 to label71 with label82;
        catch java.security.KeyStoreException from label73 to label74 with label82;
        catch com.google.protobuf.InvalidProtocolBufferException from label77 to label78 with label12;
        catch java.security.cert.CertificateException from label77 to label78 with label21;
        catch java.security.NoSuchAlgorithmException from label77 to label78 with label31;
        catch java.security.InvalidAlgorithmParameterException from label77 to label78 with label46;
        catch java.security.cert.CertPathValidatorException from label77 to label78 with label75;
        catch java.security.InvalidKeyException from label77 to label78 with label79;
        catch java.security.SignatureException from label77 to label78 with label80;
        catch java.io.IOException from label77 to label78 with label81;
        catch java.security.KeyStoreException from label77 to label78 with label82;
    }
}
