public final class hr.asseco.android.f.a.a extends java.lang.Object
{
    private static final int[] a;

    static void <clinit>()
    {
        int[] $r0;

        nop;

        $r0 = newarray (int)[9];

        $r0[0] = 1;

        $r0[1] = 10;

        $r0[2] = 100;

        $r0[3] = 1000;

        $r0[4] = 10000;

        $r0[5] = 100000;

        $r0[6] = 1000000;

        $r0[7] = 10000000;

        $r0[8] = 100000000;

        <hr.asseco.android.f.a.a: int[] a> = $r0;

        return;
    }

    public static hr.asseco.android.utils.d a(java.lang.String, byte[], java.lang.String, java.lang.String, java.lang.Long)
    {
        java.lang.String $r0, $r2, $r3, $r6, $r7, $r8;
        byte[] $r1, $r5, $r10;
        java.lang.Long $r4;
        int $i0, $i1, $i2, $i8, $i9;
        boolean $z0;
        java.lang.RuntimeException $r9;
        byte $b3, $b5, $b6, $b7, $b10;
        short $s4;
        java.math.BigInteger $r11;
        long $l11;
        int[] $r12;
        hr.asseco.android.utils.d $r13;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r4 := @parameter4: java.lang.Long;

        $r6 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>(":");

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $i1 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i1 = $i1 + 1;

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i2 = $i2 + 1;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String,int)>(":", $i2);

        $r8 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        $i1 = virtualinvoke $r6.<java.lang.String: int lastIndexOf(java.lang.String)>(":");

        $i1 = $i1 + 1;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i1);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("ocra-1");

        if $z0 != 0 goto label01;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("OCRA algorithm not supported");

        throw $r9;

     label01:
        $i1 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("sha1");

        if $i1 <= 1 goto label09;

        $r7 = "HmacSHA1";

     label02:
        $i1 = virtualinvoke $r8.<java.lang.String: int lastIndexOf(int)>(45);

        $i1 = $i1 + 1;

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>($i1);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $b3 = 0;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("c");

        if $i2 == -1 goto label03;

        $b3 = 8;

     label03:
        $s4 = 0;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("q");

        if $i2 == -1 goto label04;

        staticinvoke <hr.asseco.android.f.a.a: void a(java.lang.String,java.lang.String)>($r6, $r3);

        $s4 = 128;

     label04:
        $b5 = 0;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("p");

        if $i2 == -1 goto label05;

        $b5 = 20;

     label05:
        $b6 = 0;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("s");

        if $i2 == -1 goto label06;

        $b6 = 64;

     label06:
        $b7 = 0;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(java.lang.String)>("t");

        if $i2 == -1 goto label07;

        $b7 = 8;

     label07:
        $i2 = $i0 + $b3;

        $i2 = $i2 + $s4;

        $i2 = $i2 + $b5;

        $i2 = $i2 + $b6;

        $i2 = $i2 + $b7;

        $i2 = $i2 + 1;

        $r5 = newarray (byte)[$i2];

        $r10 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i2 = lengthof $r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, 0, $r5, 0, $i2);

        if $b3 <= 0 goto label14;

        if $r2 == null goto label14;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i2 <= 0 goto label14;

        $r11 = new java.math.BigInteger;

        specialinvoke $r11.<java.math.BigInteger: void <init>(java.lang.String,int)>($r2, 16);

        $r10 = virtualinvoke $r11.<java.math.BigInteger: byte[] toByteArray()>();

        $i2 = lengthof $r10;

        if $i2 != 9 goto label12;

        $i2 = 0;

     label08:
        if $i2 >= 8 goto label14;

        $i8 = lengthof $r10;

        if $i2 >= $i8 goto label14;

        $i8 = $i2 + 8;

        $i9 = lengthof $r10;

        $i8 = $i8 - $i9;

        $i8 = $i8 + $i0;

        $i8 = $i8 + 1;

        $i9 = $i2 + 1;

        $b10 = $r10[$i9];

        $r5[$i8] = $b10;

        $i2 = $i2 + 1;

        goto label08;

     label09:
        $i1 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("sha256");

        if $i1 <= 1 goto label10;

        $r7 = "HmacSHA256";

        goto label02;

     label10:
        $i1 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("sha512");

        if $i1 <= 1 goto label11;

        $r7 = "HmacSHA512";

        goto label02;

     label11:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("HMAC function in OCRA suite not supported");

        throw $r9;

     label12:
        $i2 = 0;

     label13:
        if $i2 >= 8 goto label14;

        $i8 = lengthof $r10;

        if $i2 >= $i8 goto label14;

        $i8 = $i2 + 8;

        $i9 = lengthof $r10;

        $i8 = $i8 - $i9;

        $i8 = $i8 + $i0;

        $i8 = $i8 + 1;

        $b10 = $r10[$i2];

        $r5[$i8] = $b10;

        $i2 = $i2 + 1;

        goto label13;

     label14:
        if $s4 <= 0 goto label16;

        $r10 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        $i2 = 0;

     label15:
        if $i2 >= 128 goto label16;

        $i8 = lengthof $r10;

        if $i2 >= $i8 goto label16;

        $i8 = $i2 + $i0;

        $i8 = $i8 + 1;

        $i8 = $i8 + $b3;

        $b10 = $r10[$i2];

        $r5[$i8] = $b10;

        $i2 = $i2 + 1;

        goto label15;

     label16:
        if $b7 <= 0 goto label20;

        if $r4 == null goto label20;

        $l11 = virtualinvoke $r4.<java.lang.Long: long longValue()>();

        $r10 = newarray (byte)[8];

        $i2 = 7;

     label17:
        if $i2 < 0 goto label18;

        $i8 = (int) $l11;

        $b7 = (byte) $i8;

        $r10[$i2] = $b7;

        $l11 = $l11 >>> 8;

        $i2 = $i2 + -1;

        goto label17;

     label18:
        $i2 = 0;

     label19:
        if $i2 >= 8 goto label20;

        $i8 = lengthof $r10;

        if $i2 >= $i8 goto label20;

        $i8 = $i2 + 8;

        $i9 = lengthof $r10;

        $i8 = $i8 - $i9;

        $i8 = $i8 + $i0;

        $i8 = $i8 + 1;

        $i8 = $i8 + $b3;

        $i8 = $i8 + $s4;

        $i8 = $i8 + $b5;

        $i8 = $i8 + $b6;

        $b7 = $r10[$i2];

        $r5[$i8] = $b7;

        $i2 = $i2 + 1;

        goto label19;

     label20:
        $r1 = staticinvoke <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>($r7, $r1, $r5);

        $i0 = lengthof $r1;

        $i0 = $i0 + -1;

        $b3 = $r1[$i0];

        $b3 = $b3 & 15;

        $b5 = $r1[$b3];

        $b5 = $b5 & 127;

        $i0 = $b5 << 24;

        $i2 = $b3 + 1;

        $b5 = $r1[$i2];

        $s4 = $b5 & 255;

        $i2 = $s4 << 16;

        $i0 = $i0 | $i2;

        $i2 = $b3 + 2;

        $b5 = $r1[$i2];

        $s4 = $b5 & 255;

        $i2 = $s4 << 8;

        $i0 = $i0 | $i2;

        $i2 = $b3 + 3;

        $b3 = $r1[$i2];

        $s4 = $b3 & 255;

        $i0 = $s4 | $i0;

        $r12 = <hr.asseco.android.f.a.a: int[] a>;

        $i2 = $r12[$i1];

        $i0 = $i0 % $i2;

        $r13 = staticinvoke <hr.asseco.android.utils.d: hr.asseco.android.utils.d b(int)>($i0);

        $i0 = virtualinvoke $r13.<hr.asseco.android.utils.d: int length()>();

        if $i0 >= $i1 goto label21;

        $i0 = virtualinvoke $r13.<hr.asseco.android.utils.d: int length()>();

        $i1 = $i1 - $i0;

        virtualinvoke $r13.<hr.asseco.android.utils.d: hr.asseco.android.utils.d a(int)>($i1);

     label21:
        return $r13;
    }

    private static void a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.RuntimeException $r2;
        char $c4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

        if $r1 == null goto label01;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 != 0 goto label02;

     label01:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid challenge");

        throw $r2;

     label02:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String toLowerCase()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("q");

        if $i1 == -1 goto label17;

        $i2 = $i1 + 2;

        $i3 = $i1 + 4;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        if $i2 < 4 goto label03;

        if $i2 <= 64 goto label04;

     label03:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid question length in OCRA suite");

        throw $r2;

     label04:
        $i1 = $i1 + 1;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        lookupswitch($c4)
        {
            case 97: goto label07;
            case 104: goto label14;
            case 110: goto label11;
            default: goto label05;
        };

     label05:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid question format in OCRA suite");

        throw $r2;

     label06:
        $i0 = $i0 + 1;

     label07:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label17;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        if $c4 < 48 goto label08;

        if $c4 <= 57 goto label06;

     label08:
        if $c4 < 97 goto label09;

        if $c4 <= 122 goto label06;

     label09:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid challenge format (alphanumeric expected)");

        throw $r2;

     label10:
        $i0 = $i0 + 1;

     label11:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label17;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c4 < 48 goto label12;

        if $c4 <= 57 goto label10;

     label12:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid challenge format (numeric expected)");

        throw $r2;

     label13:
        $i0 = $i0 + 1;

     label14:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label17;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $c4 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c4);

        if $c4 < 48 goto label15;

        if $c4 <= 57 goto label13;

     label15:
        if $c4 < 97 goto label16;

        if $c4 <= 102 goto label13;

     label16:
        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid challenge format (hexadecimal expected)");

        throw $r2;

     label17:
        return;
    }

    public static byte[] a(java.lang.String, byte[], byte[])
    {
        java.lang.String $r0, varReplacer877, varReplacer878;
        byte[] $r1, $r2;
        javax.crypto.Mac $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        java.lang.Exception $r5;
        java.lang.RuntimeException $r6;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

     label1:
        varReplacer877 = "HmacSHA1";

        $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer877);

     label2:
        $r4 = new javax.crypto.spec.SecretKeySpec;

     label3:
        varReplacer878 = "RAW";

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer878);

        virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r4);

        $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2);

     label4:
        return $r1;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
