public final class org.android.agoo.common.c extends java.lang.Object
{
    private static byte[] a;
    private static java.lang.ThreadLocal b;
    private static final java.security.spec.AlgorithmParameterSpec c;
    private static final java.security.SecureRandom d;

    static void <clinit>()
    {
        byte[] $r0;
        java.lang.ThreadLocal $r1;
        javax.crypto.spec.IvParameterSpec $r2;
        java.security.SecureRandom $r3;

        nop;

        $r0 = newarray (byte)[16];

        $r0[0] = 82;

        $r0[1] = 22;

        $r0[2] = 50;

        $r0[3] = 44;

        $r0[4] = -16;

        $r0[5] = 124;

        $r0[6] = -40;

        $r0[7] = -114;

        $r0[8] = -87;

        $r0[9] = -40;

        $r0[10] = 37;

        $r0[11] = 23;

        $r0[12] = -56;

        $r0[13] = 23;

        $r0[14] = -33;

        $r0[15] = 75;

        <org.android.agoo.common.c: byte[] a> = $r0;

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        <org.android.agoo.common.c: java.lang.ThreadLocal b> = $r1;

        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r0 = <org.android.agoo.common.c: byte[] a>;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0);

        <org.android.agoo.common.c: java.security.spec.AlgorithmParameterSpec c> = $r2;

        $r3 = new java.security.SecureRandom;

        specialinvoke $r3.<java.security.SecureRandom: void <init>()>();

        <org.android.agoo.common.c: java.security.SecureRandom d> = $r3;

        return;
    }

    public void <init>()
    {
        org.android.agoo.common.c $r0;

        $r0 := @this: org.android.agoo.common.c;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static final javax.crypto.Cipher a()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        javax.crypto.Cipher $r2;
        java.lang.Throwable $r3, $r6;
        java.lang.StringBuilder $r4, r7;
        java.lang.String $r5, varReplacer6650, varReplacer6651, varReplacer6652;
        java.lang.RuntimeException r8;
        java.security.NoSuchAlgorithmException r9;
        javax.crypto.NoSuchPaddingException r10;

        nop;

        $r0 = <org.android.agoo.common.c: java.lang.ThreadLocal b>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (javax.crypto.Cipher) $r1;

        if $r2 != null goto label5;

     label1:
        varReplacer6650 = "AES/CBC/PKCS5Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6650);

     label2:
        $r0 = <org.android.agoo.common.c: java.lang.ThreadLocal b>;

        virtualinvoke $r0.<java.lang.ThreadLocal: void set(java.lang.Object)>($r2);

        return $r2;

     label3:
        $r3 := @caughtexception;

        r8 = new java.lang.RuntimeException;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer6652 = "get Chipher error:";

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6652);

        r9 = (java.security.NoSuchAlgorithmException) $r3;

        $r5 = virtualinvoke r9.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r5, $r3);

        throw r8;

     label4:
        $r6 := @caughtexception;

        r8 = new java.lang.RuntimeException;

        r7 = new java.lang.StringBuilder;

        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer6651 = "get Chipher error:";

        $r4 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6651);

        r10 = (javax.crypto.NoSuchPaddingException) $r6;

        $r5 = virtualinvoke r10.<javax.crypto.NoSuchPaddingException: java.lang.String getMessage()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r5, $r6);

        throw r8;

     label5:
        return $r2;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label4;
    }

    private static final javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec, byte[], int)
    {
        javax.crypto.spec.SecretKeySpec $r0;
        byte[] $r1;
        int $i0, varReplacer6641;
        javax.crypto.Cipher $r2;
        javax.crypto.spec.IvParameterSpec $r3, r10;
        java.security.SecureRandom $r4;
        java.lang.Throwable $r5, $r8, $r9;
        java.lang.StringBuilder $r6, r11;
        java.lang.String $r7, varReplacer6640, varReplacer6642, varReplacer6643;
        java.lang.RuntimeException r12;
        java.security.InvalidKeyException r13;
        java.security.InvalidAlgorithmParameterException r14;
        java.lang.IllegalArgumentException r15;

        nop;

        $r0 := @parameter0: javax.crypto.spec.SecretKeySpec;

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $r2 = staticinvoke <org.android.agoo.common.c: javax.crypto.Cipher a()>();

        r10 = new javax.crypto.spec.IvParameterSpec;

        $r3 = r10;

     label1:
        specialinvoke r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

     label2:
        $r4 = <org.android.agoo.common.c: java.security.SecureRandom d>;

     label3:
        varReplacer6641 = 2;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer6641, $r0, $r3, $r4);

     label4:
        return $r2;

     label5:
        $r5 := @caughtexception;

        r12 = new java.lang.RuntimeException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer6643 = "init Chipher error:";

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6643);

        r13 = (java.security.InvalidKeyException) $r5;

        $r7 = virtualinvoke r13.<java.security.InvalidKeyException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r5);

        throw r12;

     label6:
        $r8 := @caughtexception;

        r12 = new java.lang.RuntimeException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer6640 = "init Chipher error:";

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6640);

        r14 = (java.security.InvalidAlgorithmParameterException) $r8;

        $r7 = virtualinvoke r14.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r8);

        throw r12;

     label7:
        $r9 := @caughtexception;

        r12 = new java.lang.RuntimeException;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer6642 = "init Chipher error:";

        $r6 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6642);

        r15 = (java.lang.IllegalArgumentException) $r9;

        $r7 = virtualinvoke r15.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r12.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r7, $r9);

        throw r12;

        catch java.security.InvalidKeyException from label1 to label2 with label5;
        catch java.security.InvalidKeyException from label3 to label4 with label5;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label6;
        catch java.security.InvalidAlgorithmParameterException from label3 to label4 with label6;
        catch java.lang.IllegalArgumentException from label1 to label2 with label7;
        catch java.lang.IllegalArgumentException from label3 to label4 with label7;
    }

    public static byte[] a(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i4, $i5, varReplacer6624, varReplacer6625;
        char $c3;
        byte $b6;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i1 / 2;

        $r1 = newarray (byte)[$i0];

        $i2 = 0;

     label1:
        if $i2 >= $i1 goto label2;

        $i0 = $i2 / 2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i2);

        varReplacer6624 = 16;

        $i4 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, varReplacer6624);

        $i4 = $i4 << 4;

        $i5 = $i2 + 1;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i5);

        varReplacer6625 = 16;

        $i5 = staticinvoke <java.lang.Character: int digit(char,int)>($c3, varReplacer6625);

        $i4 = $i4 + $i5;

        $b6 = (byte) $i4;

        $r1[$i0] = $b6;

        $i2 = $i2 + 2;

        goto label1;

     label2:
        return $r1;
    }

    public static final byte[] a(byte[])
    {
        byte[] $r0;
        java.lang.RuntimeException $r1;
        java.security.MessageDigest $r2;
        java.lang.Throwable $r3;
        java.lang.String varReplacer6629, varReplacer6630;

        nop;

        $r0 := @parameter0: byte[];

     label1:
        varReplacer6630 = "MD5";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6630);

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

     label2:
        return $r0;

     label3:
        $r3 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        varReplacer6629 = "md5 value Throwable";

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer6629, $r3);

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static final byte[] a(byte[], javax.crypto.spec.SecretKeySpec, byte[]) throws java.lang.IllegalArgumentException
    {
        byte[] $r0, $r2;
        javax.crypto.spec.SecretKeySpec $r1;
        javax.crypto.Cipher $r3;
        java.lang.Throwable $r4, $r7;
        java.lang.StringBuilder $r5, r8;
        java.lang.String $r6, varReplacer6627, varReplacer6628;
        java.lang.IllegalArgumentException r9;
        javax.crypto.IllegalBlockSizeException r10;
        javax.crypto.BadPaddingException r11;
        int varReplacer6626;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: javax.crypto.spec.SecretKeySpec;

        $r2 := @parameter2: byte[];

     label1:
        varReplacer6626 = 2;

        $r3 = staticinvoke <org.android.agoo.common.c: javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,byte[],int)>($r1, $r2, varReplacer6626);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        r9 = new java.lang.IllegalArgumentException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer6627 = "AES decrypt error:";

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6627);

        r10 = (javax.crypto.IllegalBlockSizeException) $r4;

        $r6 = virtualinvoke r10.<javax.crypto.IllegalBlockSizeException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r4);

        throw r9;

     label4:
        $r7 := @caughtexception;

        r9 = new java.lang.IllegalArgumentException;

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer6628 = "AES decrypt error:";

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6628);

        r11 = (javax.crypto.BadPaddingException) $r7;

        $r6 = virtualinvoke r11.<javax.crypto.BadPaddingException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r7);

        throw r9;

        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label3;
        catch javax.crypto.BadPaddingException from label1 to label2 with label4;
    }

    public static byte[] a(byte[], byte[])
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Mac $r3;
        java.lang.Throwable $r4;
        java.lang.RuntimeException $r5;
        java.lang.String varReplacer6635, varReplacer6636, varReplacer6637;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer6637 = "HmacSHA1";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6637);

     label1:
        varReplacer6635 = "HmacSHA1";

        $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6635);

        virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        varReplacer6636 = "HmacSHA1 Throwable";

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer6636, $r4);

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
