public class com.mezzo.common.network.SslConnect extends java.lang.Object
{
    public static final javax.net.ssl.HostnameVerifier DO_NOT_VERIFY;

    static void <clinit>()
    {
        com.mezzo.common.network.SslConnect$1 r0;
        javax.net.ssl.HostnameVerifier r1;

        nop;

        r0 = new com.mezzo.common.network.SslConnect$1;

        specialinvoke r0.<com.mezzo.common.network.SslConnect$1: void <init>()>();

        r1 = (javax.net.ssl.HostnameVerifier) r0;

        <com.mezzo.common.network.SslConnect: javax.net.ssl.HostnameVerifier DO_NOT_VERIFY> = r1;

        return;
    }

    public void <init>()
    {
        com.mezzo.common.network.SslConnect $r0;

        $r0 := @this: com.mezzo.common.network.SslConnect;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void trustAllHosts()
    {
        java.lang.Exception $r0;
        java.lang.Object[] $r1;
        javax.net.ssl.SSLContext $r2;
        java.security.SecureRandom $r3, r6;
        javax.net.ssl.SSLSocketFactory $r4;
        com.mezzo.common.network.SslConnect$2 r5;
        javax.net.ssl.TrustManager[] r7;
        null_type varReplacer979;
        java.lang.String varReplacer980;

        nop;

        $r1 = newarray (javax.net.ssl.TrustManager)[1];

        r5 = new com.mezzo.common.network.SslConnect$2;

        specialinvoke r5.<com.mezzo.common.network.SslConnect$2: void <init>()>();

        $r1[0] = r5;

     label1:
        varReplacer980 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer980);

     label2:
        r6 = new java.security.SecureRandom;

        $r3 = r6;

     label3:
        specialinvoke r6.<java.security.SecureRandom: void <init>()>();

        r7 = (javax.net.ssl.TrustManager[]) $r1;

        varReplacer979 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer979, r7, $r3);

        $r4 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r4);

     label4:
        return;

     label5:
        $r0 := @caughtexception;

        virtualinvoke $r0.<java.lang.Exception: void printStackTrace()>();

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }
}
