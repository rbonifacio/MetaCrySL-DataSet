Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <btworks.codeguard.engine.MainService: boolean engineExist(android.content.pm.ApplicationInfo,java.lang.String)>
		SHA-256: 924ec2f4aaa6024edcaacb70cc7c92010f35cf304e1b11e601fd9426c0907d8a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r14)
		Method: <btworks.jce.provider.C.E: int[] A(int,int,int,int,int,byte[],int)>
		SHA-256: 553bfba3cbefdec71464befcfa87d4e0e1434c5bba3222226028353f7907002c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.L: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: a9ea333903b7f07f918b6597f190f81e30459d3aa549d1d0083fc272da98f747
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <o.ᐩ: void ˎ()>
		SHA-256: 1876fb8f778254d7c5a7c5a3865a33beee445d506ed939302f5ada907e30a294
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <o.ᴸ: java.lang.String ˎ(int,java.lang.String,java.lang.String)>
		SHA-256: e223da144188edbdfbc85e1c41c44c2eda88185a2ac2cc7c7ca6beec1e99616e
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke r40.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, $r5)
		Method: <o.ᐩ: void ˏ(android.content.Context,boolean,o.ᐡ)>
		SHA-256: cb3232fc5f092c086267aab9eccefbb39d39da39aa440cc09b7293c9d4f6fdab
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.S: void A(java.security.Key,boolean)>
		SHA-256: d17d62c35e8d8c88442c8e67825ddb833b7f3e0de9088818084ffd428d83b8d0
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <o.ᴸ: java.lang.String ˎ(int,java.lang.String,java.lang.String)>
		SHA-256: b9209999b48e7505e8db7f47010bdc9568a3c1d4c1d1ca6fbeb3004d5ba942db
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.C: void D(java.security.Key)>
		SHA-256: c9aa342e6b0469a4bf91afdfd05f561f52f0e34c8f67a3654dc19259c2452f2a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.K: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 1f55fd99c59cbe5c70190f9b323b62695c6bb21f69ec4c3c348ff8fa83c77ea2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <o.ᐩ: byte[] ˋ(java.lang.String,byte[])>
		SHA-256: ad8499aee6c9b11d04f4ba429f196a70d5d8c07cfc4214b0332b1532222ca1ec
		Secure: true
	Object:
		Variable: r40
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r40.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, $r5)
		Method: <o.ᐩ: void ˏ(android.content.Context,boolean,o.ᐡ)>
		SHA-256: b1af1b66ec2c8e8e6a1d49333b0fe74394fc9c859d53f4fa1a3e50b9d59b3e89
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r3, varReplacer3033, $i0)
		Method: <o.ﭠ: void ˏ(int,java.io.File,java.io.File)>
		SHA-256: d6d9116d56fdb5cca36fdb2b9625ddf1a026b432708a981120a4b365a8c4302a
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <o.ᕀ: boolean ॱ(java.lang.String,java.lang.String,java.security.PublicKey)>
		SHA-256: 1898929283219b2657c26bb1533800f5d72e9caf6b1d85288185499bf22ba5e5
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r5)
		Method: <o.ᐩ: void ˎ()>
		SHA-256: bac3851b64d131a8d71ac7380a42e7b06602b62ac36f0209178f6ecca8473d10
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)
		Method: <o.ˈ: java.lang.String ˏ(java.lang.String)>
		SHA-256: 1d8bd8bb39c0997a5abbdfa42aa8097b4f9db7e634164cd95d58daa0128b2135
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <btworks.codeguard.engine.MainService: boolean engineExist(android.content.pm.ApplicationInfo,java.lang.String)>
		SHA-256: 924ec2f4aaa6024edcaacb70cc7c92010f35cf304e1b11e601fd9426c0907d8a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.A: void B(java.security.Key)>
		SHA-256: 1633e64109d95d76a86393382e4c449da2e40239fd93a01067846dcc83ba6f19
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r3, varReplacer1391, $i0)
		Method: <o.ﭠ: byte[] ˎ(int,java.io.InputStream)>
		SHA-256: fb7a38ed9f02bf961b5bbe21db180a00473e2b30f90dbe083f396602d159df61
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <o.ˈ: java.lang.String ॱ(byte[])>
		SHA-256: 9b7015a96abb549880de7b1d876f0f9a40c6d0ba574f98abfbc6b0f3f0990bab
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.T: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 6b06844f6b2d4d0fcea8bd59a858b4399ee550ac2553e873c650cbcd5c729090
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.I: void A(java.security.Key,boolean)>
		SHA-256: c98ad39f50b8d46a1be635c7418336e23c43bfcf8b03ee4bb3600ceca7e65762
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <o.İ: java.lang.String ॱ(byte[])>
		SHA-256: c1e9fd2c5f3c77b2ca353923c9ebe947dd47c8109008f922f6ed82212efa3363
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.H: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 5acbb23880dfabe84c63a5461ae2bd854181db887c8aba157e153fc81165155f
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <btworks.jce.provider.rsa.O: void <init>()>
		SHA-256: 4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4
		Secure: false
	Object:
		Variable: r43
		Type: java.security.SecureRandom
		Statement: specialinvoke r43.<java.security.SecureRandom: void <init>()>()
		Method: <o.ᐩ: void ˏ(android.content.Context,boolean,o.ᐡ)>
		SHA-256: c186230a18244f4095a7b291017d1350f9d4ff7460760a4e138615e787de2880
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r4, $r5)
		Method: <o.ﭠ: byte[] ˎ(int,java.io.InputStream)>
		SHA-256: 318ec97ea49d6ca997bdfd49a416397ba63fcdc61078af182cf4436a718db52d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r7)
		Method: <btworks.jce.provider.C.D: int[] A(int,int,int,int,int,byte[],int)>
		SHA-256: c27813af544ac59231c22d21cb5024b0300f77249489943bab5aa422bc5fc2e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal()>()
		Method: <o.ﭠ: byte[] ˎ(int,java.io.InputStream)>
		SHA-256: 97d53d9d0d1905e1e6042a974d8b650c3dfa8e8183839ee50daaad107ec64458
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.O: void A(java.security.Key,boolean)>
		SHA-256: c991ef237706036ba8aa007e53da84eb2594ac8dcaeb66da46a377cbaddc1aad
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r7 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.S: void A(java.security.Key,boolean)>
		SHA-256: 8645f3bf4d433464ce1dd7ea855ce08847f94b72f57172df8c52be80de843eaf
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.Q: void A(java.security.Key,boolean)>
		SHA-256: d7416b0e975dfd0035ee8b4a432d8f689ddde103688f787f3f97b2da129d4e07
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <o.ˈ: java.lang.String ॱ(byte[])>
		SHA-256: 33dcdf8d4900c90d430fdee44a914682f4ac31665a546ce4f37b0f65ca20c028
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.M: void A(java.security.Key,boolean)>
		SHA-256: 46d9fd5257cb1a169ff595b8e07546c5994c93d7d7a39a802a8bed2761dc8350
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r4)
		Method: <o.ﭠ: void ˋ()>
		SHA-256: 83f0fe1ba1c0350751922d58661f11b4302b33d308bb712b5be52a4c16b9d207
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.K: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 1f55fd99c59cbe5c70190f9b323b62695c6bb21f69ec4c3c348ff8fa83c77ea2
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)
		Method: <o.ˈ: java.lang.String ॱ(byte[],byte[])>
		SHA-256: fd1f56a7c93d7d412b0e0a2b74f663cab993ceb6fedd4d88a5582ef3b5d41c7b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r3, $r4)
		Method: <o.ﭠ: java.lang.String ॱ(java.lang.String)>
		SHA-256: cef15f31239e3ecee22c0728d24cf4b8650ebad7e87bf407f5cfdc16239b81cf
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <o.ˈ: java.lang.String ॱ(byte[],byte[])>
		SHA-256: c9bcf9723be350ae690a04dc7d1a602625d643870fdbe0ad225ade865f8e2927
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.C: void D(java.security.Key)>
		SHA-256: f3af894929ed52a36cb1089cc303afe1641a25b553c7faa828726bd40ed548bb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <btworks.codeguard.engine.MainService: boolean engineExist(android.content.pm.ApplicationInfo,java.lang.String)>
		SHA-256: 7eeb63432930332615ccbd0fd863559a74cb68dd919b135e409301e4f8e59c5d
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()
		Method: <btworks.codeguard.engine.B: void E()>
		SHA-256: ba9156d58a1e739c609102251965e9ea05d61f0cb6d39678a6bbeb128c2c4b17
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <o.ˈ: java.lang.String ˏ(java.lang.String)>
		SHA-256: a221e8f3f54fa749897cfe93ba5c9dd299ee761ddd1897dbd2f42fc214e4ac32
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.H: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 5acbb23880dfabe84c63a5461ae2bd854181db887c8aba157e153fc81165155f
		Secure: false
	Object:
		Variable: $r14
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r14)
		Method: <btworks.jce.provider.C.E: int[] A(int,int,int,int,int,byte[],int)>
		SHA-256: fdcb2884b35eb10daa5d4583ba36d3d9b5cdf291750ce160d1e4f93337e8f555
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <o.ᐩ: void ˎ()>
		SHA-256: 1876fb8f778254d7c5a7c5a3865a33beee445d506ed939302f5ada907e30a294
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <o.ᐩ: byte[] ˋ(java.lang.String,byte[])>
		SHA-256: 649c196f36a9f7c25926be13b5e8f5c7ba2d2a6fb8821d255cddda7a26e30c51
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <o.İ: java.lang.String ॱ(byte[])>
		SHA-256: 4ecd5b05be6aca864d48e3b9742a1f571983ba15c8714b7d29c8f5a116bc813c
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <o.ᴸ: byte[] ॱ(java.lang.String,byte[])>
		SHA-256: 8d99e34952dd72c94b778a656c53bac466025a464ed6ce58e30ebfb1fe5e8d86
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <o.ˡ: java.lang.String ˎ(java.lang.String)>
		SHA-256: ae7673cfe348173a09c5ba683edb7d60c4021232c432fba9e0d1210e0d780550
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.A: void B(java.security.Key)>
		SHA-256: b98818e670b714c687b5c7e6bd2ffdce1e0a42ef43d4dfdcad8f9cc356449cdb
		Secure: true
	Object:
		Variable: $r20
		Type: java.security.MessageDigest
		Statement: $r20 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <btworks.codeguard.engine.B: void E()>
		SHA-256: 290e52c18382e70ecd79373eb67e8530fe75ada46a9dea7fccddf65c79815c1e
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <o.ᕀ: boolean ॱ(java.lang.String,java.lang.String,java.security.PublicKey)>
		SHA-256: e02700938369b925d3efcb47c40f63e15d64ddb201b6401e1b20b3ebe43cc3e2
		Secure: false
	Object:
		Variable: $r0
		Type: btworks.xcrypto.G
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <btworks.xcrypto.G: void <init>(java.lang.String)>
		SHA-256: 2e4a3693296204c34b750f1f56e79a9f1eaa4227d92cd2c2b84e865917ff1d3
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)
		Method: <o.ˈ: java.lang.String ॱ(byte[],byte[])>
		SHA-256: 28bd012d08fe13509f73fd30ed2636bce6d085cb99eb3d9d517c5f9bd23b8de0
		Secure: false
	Object:
		Variable: r41
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r41.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10)
		Method: <o.ᐩ: void ˏ(android.content.Context,boolean,o.ᐡ)>
		SHA-256: eb90650eba64261ab6ba050ec017e59e18fb7c8b5ab46ef4f7ad38d84cfd5e52
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r10 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r3, varReplacer1391, $i0)
		Method: <o.ﭠ: byte[] ˎ(int,java.io.InputStream)>
		SHA-256: 7aaad3541d8442597a54abb64e33a8c36f694a383aee87738b194a061ee4c68d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.O: void A(java.security.Key,boolean)>
		SHA-256: 2e3ba8daadb26f549747bb23fb6fe0b317ec21bf199fd83c921ff553087d06e6
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.M: void A(java.security.Key,boolean)>
		SHA-256: 787db2bab37f8c8958f95c1102abf2b996581bc1dfea819141590704217e169a
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r8 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r3, varReplacer3033, $i0)
		Method: <o.ﭠ: void ˏ(int,java.io.File,java.io.File)>
		SHA-256: e6a851f489265b2f5acb749b74d63a881f54757dec39205406e1fb1b61a2fc9f
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <o.ᴸ: java.lang.String ˎ(int,java.lang.String,java.lang.String)>
		SHA-256: bb2f948a0ec9f077627a45bc86266ef9f71725202366ac7af003636de7959758
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <o.ˈ: java.lang.String ॱ(byte[],byte[])>
		SHA-256: fe73288ae1b1240ee979e005a052172fde9143b2cc6374c548aa7b25d068b8b4
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <o.ˈ: java.lang.String ॱ(byte[],byte[])>
		SHA-256: cb97890bd83d77ef3b5eb62ebb768f0abb9da99b2dee5b823b8b068569c8198d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.T: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: 6b06844f6b2d4d0fcea8bd59a858b4399ee550ac2553e873c650cbcd5c729090
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r4)
		Method: <o.ﭠ: void ˋ()>
		SHA-256: af6b5f2763890a2fae02d914430c95b2d51822bb08985477545030cc4c16858
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r5 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.I: void A(java.security.Key,boolean)>
		SHA-256: 615aca41add2a1711acbb7f03ab747f7339bbb1ea03173b084579c1486ef3c40
		Secure: true
	Object:
		Variable: r9
		Type: java.security.SecureRandom
		Statement: specialinvoke r9.<java.security.SecureRandom: void <init>()>()
		Method: <btworks.codeguard.engine.B: javax.net.ssl.SSLSocketFactory J()>
		SHA-256: e6be9375b7b318296f9ae2a54941a9bc4ac238c4be0f8865cf654d1f1a9f2242
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <o.ﭠ: java.lang.String ॱ(java.lang.String)>
		SHA-256: 8688ee0ca4a8ccf8fec8c406c1a5e06d1569ad8918931b581388a1bed7cb5d94
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r10, $r11)
		Method: <o.ﭠ: void ˏ(int,java.io.File,java.io.File)>
		SHA-256: 3bd0b3b85f6733ada2ab087fbb2dc2be12f9d12494f50d575ea961ec2ef59e00
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <o.ᴸ: byte[] ॱ(java.lang.String,byte[])>
		SHA-256: 6d34efb74bc87ca7386294d82d407afd6da01018e89139e78efbd148cdb8d0d8
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <o.ˡ: java.lang.String ˎ(java.lang.String)>
		SHA-256: 40c0534869f32e4deb0d4b865628ae6fa437c437597acc4bf3dec17856c4c661
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <btworks.jce.provider.cipher.Q: void A(java.security.Key,boolean)>
		SHA-256: 9ab83b48dcd8c48bda625a4f925d4b8e1056a2b2c990aa8e0b009f819bb78eed
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <btworks.codeguard.engine.B: javax.net.ssl.SSLSocketFactory J()>
		SHA-256: 3fdac6ae1fd0e939427628798e94a2350822fdde7ddfdf63d270d487b9bf2b82
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal()>()
		Method: <o.ﭠ: void ˏ(int,java.io.File,java.io.File)>
		SHA-256: c5e5a23d5402390a14154215256727ba8745957c2d742549e702c523ace95be6
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <btworks.codeguard.engine.MainService: boolean engineExist(android.content.pm.ApplicationInfo,java.lang.String)>
		SHA-256: 7eeb63432930332615ccbd0fd863559a74cb68dd919b135e409301e4f8e59c5d
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <btworks.codeguard.engine.B: javax.net.ssl.SSLSocketFactory J()>
		SHA-256: 3fdac6ae1fd0e939427628798e94a2350822fdde7ddfdf63d270d487b9bf2b82
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r5)
		Method: <o.ᐩ: void ˎ()>
		SHA-256: bac3851b64d131a8d71ac7380a42e7b06602b62ac36f0209178f6ecca8473d10
		Secure: false
	Object:
		Variable: r9
		Type: java.security.SecureRandom
		Statement: specialinvoke r9.<java.security.SecureRandom: void <init>()>()
		Method: <btworks.codeguard.engine.B: javax.net.ssl.SSLSocketFactory J()>
		SHA-256: e6be9375b7b318296f9ae2a54941a9bc4ac238c4be0f8865cf654d1f1a9f2242
		Secure: true
	Object:
		Variable: $r7
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r7)
		Method: <btworks.jce.provider.C.D: int[] A(int,int,int,int,int,byte[],int)>
		SHA-256: 32fc4aa2235f250da124f40cf4ebb958387e17a47516b87f20abede829f765ad
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <btworks.jce.provider.cipher.L: java.security.spec.AlgorithmParameterSpec H()>
		SHA-256: a9ea333903b7f07f918b6597f190f81e30459d3aa549d1d0083fc272da98f747
		Secure: false

Findings in Java Class: o.ﭠ

	 in Method: byte[] ˎ(int,java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1392, $r7)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1392, $r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #318ec97ea49d6ca997bdfd49a416397ba63fcdc61078af182cf4436a718db52d)
			Unexpected call to method <javax.crypto.Cipher: byte[] doFinal()> on object of type javax.crypto.Cipher. Expect a call to one of the following methods javax.crypto.Cipher: byte[] doFinal(byte[]),javax.crypto.Cipher: byte[] doFinal(byte[],int,int),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters),javax.crypto.Cipher: void init(int,java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec),javax.crypto.Cipher: void init(int,java.security.cert.Certificate),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom),javax.crypto.Cipher: int update(byte[],int,int,byte[],int),javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer),javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom),javax.crypto.Cipher: byte[] wrap(java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int),javax.crypto.Cipher: byte[] update(byte[],int,int),javax.crypto.Cipher: int update(byte[],int,int,byte[]),javax.crypto.Cipher: byte[] update(byte[]),javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)
			at statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal()>()


	 in Method: void ˏ(int,java.io.File,java.io.File)
		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3034, $r13)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3bd0b3b85f6733ada2ab087fbb2dc2be12f9d12494f50d575ea961ec2ef59e00)
			Unexpected call to method <javax.crypto.Cipher: byte[] doFinal()> on object of type javax.crypto.Cipher. Expect a call to one of the following methods javax.crypto.Cipher: byte[] doFinal(byte[]),javax.crypto.Cipher: byte[] doFinal(byte[],int,int),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters),javax.crypto.Cipher: void init(int,java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec),javax.crypto.Cipher: void init(int,java.security.cert.Certificate),javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom),javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom),javax.crypto.Cipher: int update(byte[],int,int,byte[],int),javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer),javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom),javax.crypto.Cipher: byte[] wrap(java.security.Key),javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom),javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int),javax.crypto.Cipher: byte[] update(byte[],int,int),javax.crypto.Cipher: int update(byte[],int,int,byte[]),javax.crypto.Cipher: byte[] update(byte[]),javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)
			at statement: $r3 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3034, $r13)


	 in Method: void ˋ()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r4)


	 in Method: java.lang.String ॱ(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9003, $r6)


Findings in Java Class: btworks.xcrypto.Cipher

	 in Method: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <btworks.xcrypto.Cipher: void A(btworks.xcrypto.Cipher)>($r0)


	 in Method: btworks.xcrypto.Cipher getInstance(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r8.<btworks.jce.provider.rsa.O: void <init>()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<btworks.xcrypto.Cipher: void <init>(java.lang.String)>($r4)


	 in Method: void init(int,java.security.Key)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <btworks.xcrypto.Cipher: void A(btworks.xcrypto.Cipher)>($r0)


	 in Method: byte[] doFinal(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <btworks.xcrypto.Cipher: void A(btworks.xcrypto.Cipher)>($r0)


Findings in Java Class: o.ᐩ

	 in Method: void ˏ(android.content.Context,boolean,o.ᐡ)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r14.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r41.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r40.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, $r5)


	 in Method: void ˎ()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9573, r13, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9571, r13, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9571, r13, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9573, r13, $r7)


Findings in Java Class: o.ᴸ

	 in Method: java.lang.String ˎ(int,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = virtualinvoke $r13.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = virtualinvoke $r13.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r13 = staticinvoke <btworks.xcrypto.Cipher: btworks.xcrypto.Cipher getInstance(java.lang.String)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = virtualinvoke $r13.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r2)


Findings in Java Class: btworks.jce.provider.C.D

	 in Method: int[] A(int,int,int,int,int,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r8.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r6)


Findings in Java Class: btworks.jce.provider.C.E

	 in Method: int[] A(int,int,int,int,int,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r14)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4cf6bd01317110fd3df2980c7532b6526228a1f556082e61ec15d246b9fc22e4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r15.<btworks.xcrypto.Cipher: byte[] doFinal(byte[])>($r1)


Findings in Java Class: btworks.codeguard.engine.B

	 in Method: void E()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #290e52c18382e70ecd79373eb67e8530fe75ada46a9dea7fccddf65c79815c1e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r19 = $r20

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #290e52c18382e70ecd79373eb67e8530fe75ada46a9dea7fccddf65c79815c1e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #290e52c18382e70ecd79373eb67e8530fe75ada46a9dea7fccddf65c79815c1e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte), java.security.MessageDigest: void update(byte[])
			at statement: virtualinvoke $r19.<java.security.MessageDigest: void update(byte[],int,int)>($r1, varReplacer6626, $i2)


	 in Method: javax.net.ssl.SSLSocketFactory J()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6686, r10, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6683, r10, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6686, r10, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6683, r10, $r6)


Findings in Java Class: btworks.jce.provider.cipher.H

	 in Method: java.security.spec.AlgorithmParameterSpec H()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: btworks.jce.provider.cipher.L

	 in Method: java.security.spec.AlgorithmParameterSpec H()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: btworks.jce.provider.cipher.K

	 in Method: java.security.spec.AlgorithmParameterSpec H()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: o.ᕀ

	 in Method: boolean ॱ(java.lang.String,java.lang.String,java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: o.ˈ

	 in Method: java.lang.String ॱ(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4591, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)


Findings in Java Class: btworks.jce.provider.cipher.T

	 in Method: java.security.spec.AlgorithmParameterSpec H()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 80

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 2
	RequiredPredicateError: 29
	IncompleteOperationError: 21
	TypestateError: 3
=====================================================================