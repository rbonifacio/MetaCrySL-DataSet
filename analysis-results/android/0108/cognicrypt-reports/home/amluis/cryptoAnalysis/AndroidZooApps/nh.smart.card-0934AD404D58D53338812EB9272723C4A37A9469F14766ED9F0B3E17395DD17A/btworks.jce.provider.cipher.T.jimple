class btworks.jce.provider.cipher.T extends btworks.jce.provider.cipher.R
{
    private static int \u02ca;
    private static int \u02ce;
    private static final byte[] \u02cf;
    private static int \u0971;
    private boolean K;
    private int L;
    private byte[] M;
    private int N;
    private final byte[] O;
    private int P;
    protected long Q;
    private final byte[] R;

    static void <clinit>()
    {
        byte[] $r0;
        int varReplacer5606, varReplacer5607, varReplacer5608;

        nop;

        $r0 = newarray (byte)[125];

        $r0[0] = 18;

        $r0[1] = 84;

        $r0[2] = 36;

        $r0[3] = -83;

        $r0[4] = 37;

        $r0[5] = 8;

        $r0[6] = -21;

        $r0[7] = 11;

        $r0[8] = -3;

        $r0[9] = -5;

        $r0[10] = -68;

        $r0[11] = 41;

        $r0[12] = 13;

        $r0[13] = -54;

        $r0[14] = 83;

        $r0[15] = -3;

        $r0[16] = -11;

        $r0[17] = -2;

        $r0[18] = 6;

        $r0[19] = -3;

        $r0[20] = 3;

        $r0[21] = -4;

        $r0[22] = -1;

        $r0[23] = -56;

        $r0[24] = -12;

        $r0[25] = 73;

        $r0[26] = 5;

        $r0[27] = -11;

        $r0[28] = 12;

        $r0[29] = 3;

        $r0[30] = 0;

        $r0[31] = -13;

        $r0[32] = -2;

        $r0[33] = 17;

        $r0[34] = -84;

        $r0[35] = 76;

        $r0[36] = -7;

        $r0[37] = 9;

        $r0[38] = -7;

        $r0[39] = 13;

        $r0[40] = -12;

        $r0[41] = -58;

        $r0[42] = 31;

        $r0[43] = 0;

        $r0[44] = -1;

        $r0[45] = -2;

        $r0[46] = -1;

        $r0[47] = 2;

        $r0[48] = 8;

        $r0[49] = -75;

        $r0[50] = 83;

        $r0[51] = -10;

        $r0[52] = 17;

        $r0[53] = -21;

        $r0[54] = -69;

        $r0[55] = 28;

        $r0[56] = -11;

        $r0[57] = -17;

        $r0[58] = 79;

        $r0[59] = 3;

        $r0[60] = -82;

        $r0[61] = 30;

        $r0[62] = 5;

        $r0[63] = 6;

        $r0[64] = 7;

        $r0[65] = -8;

        $r0[66] = -3;

        $r0[67] = 13;

        $r0[68] = 13;

        $r0[69] = -29;

        $r0[70] = 10;

        $r0[71] = 3;

        $r0[72] = -12;

        $r0[73] = 8;

        $r0[74] = 20;

        $r0[75] = -12;

        $r0[76] = -10;

        $r0[77] = 17;

        $r0[78] = -21;

        $r0[79] = 31;

        $r0[80] = 0;

        $r0[81] = -1;

        $r0[82] = -2;

        $r0[83] = -1;

        $r0[84] = 2;

        $r0[85] = 8;

        $r0[86] = -75;

        $r0[87] = 83;

        $r0[88] = -10;

        $r0[89] = 17;

        $r0[90] = -21;

        $r0[91] = -69;

        $r0[92] = 73;

        $r0[93] = 10;

        $r0[94] = -83;

        $r0[95] = 16;

        $r0[96] = -16;

        $r0[97] = 79;

        $r0[98] = 3;

        $r0[99] = -82;

        $r0[100] = 78;

        $r0[101] = 1;

        $r0[102] = 5;

        $r0[103] = -84;

        $r0[104] = 65;

        $r0[105] = -65;

        $r0[106] = 77;

        $r0[107] = 8;

        $r0[108] = -9;

        $r0[109] = 8;

        $r0[110] = -11;

        $r0[111] = 7;

        $r0[112] = -4;

        $r0[113] = -7;

        $r0[114] = -69;

        $r0[115] = 79;

        $r0[116] = -9;

        $r0[117] = -70;

        $r0[118] = 24;

        $r0[119] = -24;

        $r0[120] = 66;

        $r0[121] = 7;

        $r0[122] = 11;

        $r0[123] = -1;

        $r0[124] = -69;

        <btworks.jce.provider.cipher.T: byte[] \u02cf> = $r0;

        varReplacer5607 = 210;

        <btworks.jce.provider.cipher.T: int \u02ce> = varReplacer5607;

        varReplacer5608 = 0;

        <btworks.jce.provider.cipher.T: int \u0971> = varReplacer5608;

        varReplacer5606 = 1;

        <btworks.jce.provider.cipher.T: int \u02ca> = varReplacer5606;

        return;
    }

    void <init>(btworks.jce.provider.cipher.P)
    {
        btworks.jce.provider.cipher.T $r0;
        btworks.jce.provider.cipher.P $r1;
        int $i0;
        byte[] $r2;
        null_type varReplacer5614;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $r1 := @parameter0: btworks.jce.provider.cipher.P;

        specialinvoke $r0.<btworks.jce.provider.cipher.R: void <init>(btworks.jce.provider.cipher.P)>($r1);

        varReplacer5614 = null;

        $r0.<btworks.jce.provider.cipher.T: byte[] M> = varReplacer5614;

        $i0 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r2 = newarray (byte)[$i0];

        $r0.<btworks.jce.provider.cipher.T: byte[] R> = $r2;

        $i0 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r2 = newarray (byte)[$i0];

        $r0.<btworks.jce.provider.cipher.T: byte[] O> = $r2;

        $i0 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r0.<btworks.jce.provider.cipher.T: int L> = $i0;

        return;
    }

    void <init>(btworks.jce.provider.cipher.P, int)
    {
        btworks.jce.provider.cipher.T $r0;
        btworks.jce.provider.cipher.P $r1;
        int $i0, $i4, $i5;
        java.security.NoSuchAlgorithmException $r2;
        byte[] $r3;
        byte $b1, $b2, $b3;
        java.lang.String $r4;
        java.lang.Exception $r5;
        null_type varReplacer5615;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $r1 := @parameter0: btworks.jce.provider.cipher.P;

        $i0 := @parameter1: int;

     label01:
        specialinvoke $r0.<btworks.jce.provider.cipher.R: void <init>(btworks.jce.provider.cipher.P)>($r1);

     label02:
        varReplacer5615 = null;

        $r0.<btworks.jce.provider.cipher.T: byte[] M> = varReplacer5615;

     label03:
        if $i0 == 0 goto label04;

        goto label19;

     label04:
        $r2 = new java.security.NoSuchAlgorithmException;

        $r3 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $b1 = $r3[25];

        $i0 = $b1 + 1;

        $b1 = (byte) $i0;

        $r3 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $b2 = $r3[101];

        $r3 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $b3 = $r3[30];

        $r4 = staticinvoke <btworks.jce.provider.cipher.T: java.lang.String \u02ca(byte,int,short)>($b1, $b2, $b3);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r2.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label05:
        $b1 = 1;

        goto label07;

     label06:
        $r5 := @caughtexception;

        throw $r5;

     label07:
        lookupswitch($b1)
        {
            case 0: goto label17;
            case 1: goto label27;
            default: goto label08;
        };

     label08:
        goto label16;

     label09:
        $b1 = 0;

        goto label11;

     label10:
        $r2 = new java.security.NoSuchAlgorithmException;

        $r3 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $b1 = $r3[4];

        $r3 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $b2 = $r3[101];

        $r3 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $b3 = $r3[37];

        $r4 = staticinvoke <btworks.jce.provider.cipher.T: java.lang.String \u02ca(byte,int,short)>($b1, $b2, $b3);

        $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r2.<java.security.NoSuchAlgorithmException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label11:
        lookupswitch($b1)
        {
            case 0: goto label13;
            case 1: goto label10;
            default: goto label12;
        };

     label12:
        goto label15;

     label13:
        $i4 = <btworks.jce.provider.cipher.T: int \u02ca>;

        $i4 = $i4 + 57;

        $i5 = $i4 % 128;

        <btworks.jce.provider.cipher.T: int \u0971> = $i5;

        $i4 = $i4 % 2;

        if $i4 == 0 goto label14;

        goto label05;

     label14:
        goto label16;

     label15:
        $b1 = 1;

        goto label11;

     label16:
        $b1 = 0;

        goto label07;

     label17:
        $i4 = $r0.<btworks.jce.provider.cipher.T: int C>;

        if $i0 <= $i4 goto label18;

        goto label10;

     label18:
        goto label21;

     label19:
        $i4 = $i0 % 8;

        if $i4 == 0 goto label20;

        goto label04;

     label20:
        $i0 = $i0 / 8;

        if $i0 < 1 goto label15;

        goto label09;

     label21:
        $i4 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r3 = newarray (byte)[$i4];

     label22:
        $r0.<btworks.jce.provider.cipher.T: byte[] R> = $r3;

     label23:
        $i4 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $r3 = newarray (byte)[$i4];

     label24:
        $r0.<btworks.jce.provider.cipher.T: byte[] O> = $r3;

     label25:
        $r0.<btworks.jce.provider.cipher.T: int L> = $i0;

     label26:
        return;

     label27:
        $i4 = $r0.<btworks.jce.provider.cipher.T: int C>;

        if $i0 <= $i4 goto label21;

        goto label10;

        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label02 to label03 with label06;
        catch java.lang.Exception from label21 to label22 with label06;
        catch java.lang.Exception from label22 to label23 with label06;
        catch java.lang.Exception from label23 to label24 with label06;
        catch java.lang.Exception from label24 to label25 with label06;
        catch java.lang.Exception from label25 to label26 with label06;
    }

    private void A(byte)
    {
        btworks.jce.provider.cipher.T $r0;
        byte $b0;
        boolean $z0;
        byte[] $r1;
        int $i1, $i2;
        long $l3;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $b0 := @parameter0: byte;

        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] O>;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int N>;

        $i2 = $i1 + 1;

        $r0.<btworks.jce.provider.cipher.T: int N> = $i2;

        $i2 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $i1 = $i1 % $i2;

        $r1[$i1] = $b0;

        $l3 = $r0.<btworks.jce.provider.cipher.T: long Q>;

        $l3 = $l3 + 1L;

        $r0.<btworks.jce.provider.cipher.T: long Q> = $l3;

        $z0 = virtualinvoke $r0.<btworks.jce.provider.cipher.T: boolean I()>();

        if $z0 == 0 goto label1;

        specialinvoke $r0.<btworks.jce.provider.cipher.T: void J()>();

     label1:
        return;
    }

    private void J()
    {
        btworks.jce.provider.cipher.T $r0;
        int $i0, $i1, $i2, varReplacer6328, varReplacer6329, varReplacer6330;
        byte[] $r1, $r2;
        byte $b3;
        btworks.jce.provider.cipher.P $r3;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $i0 = 0;

        goto label2;

     label1:
        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] R>;

        $r2 = $r0.<btworks.jce.provider.cipher.T: byte[] O>;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int N>;

        $i2 = $i1 + 1;

        $r0.<btworks.jce.provider.cipher.T: int N> = $i2;

        $i2 = $r0.<btworks.jce.provider.cipher.T: int C>;

        $i1 = $i1 % $i2;

        $b3 = $r2[$i1];

        $r1[$i0] = $b3;

        $i0 = $i0 + 1;

     label2:
        $i1 = $r0.<btworks.jce.provider.cipher.T: int C>;

        if $i0 < $i1 goto label1;

        $r3 = $r0.<btworks.jce.provider.cipher.T: btworks.jce.provider.cipher.P A>;

        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] R>;

        $r2 = $r0.<btworks.jce.provider.cipher.T: byte[] R>;

        varReplacer6328 = 0;

        varReplacer6329 = 0;

        virtualinvoke $r3.<btworks.jce.provider.cipher.P: void A(byte[],int,byte[],int)>($r1, varReplacer6328, $r2, varReplacer6328);

        varReplacer6330 = 0;

        $r0.<btworks.jce.provider.cipher.T: int P> = varReplacer6330;

        return;
    }

    private static java.lang.String \u02ca(byte, int, short)
    {
        byte[] $r0, $r1;
        int $i0, $i2, $i4, $i5, $i6, $i7, $i8, varReplacer5616;
        byte $b1;
        short $s3;
        java.lang.String $r2;
        java.lang.Exception $r3;

        nop;

        $b1 := @parameter0: byte;

        $i2 := @parameter1: int;

        $s3 := @parameter2: short;

        goto label04;

     label01:
        goto label05;

     label02:
        $i2 = $i2 + 1;

        $b1 = (byte) $i5;

        $r0[$i6] = $b1;

        if $i6 != $i4 goto label03;

        goto label07;

     label03:
        goto label06;

     label04:
        $r2 = new java.lang.String;

        $i4 = 47 - $s3;

        $i2 = $i2 * 3;

        $i5 = 73 - $i2;

        $i2 = $b1 + 4;

        $r1 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $i6 = 0;

        $r0 = newarray (byte)[$i4];

        $i4 = $i4 + -1;

        if $r1 != null goto label02;

        goto label10;

     label05:
        $i5 = $i7 + $i5;

        goto label02;

     label06:
        $i6 = $i6 + 1;

        $i7 = $i5;

        $i5 = $r1[$i2];

        goto label11;

     label07:
        varReplacer5616 = 0;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int)>($r0, varReplacer5616);

     label08:
        return $r2;

     label09:
        $r3 := @caughtexception;

        throw $r3;

     label10:
        $i7 = $i2;

        goto label05;

     label11:
        $i0 = <btworks.jce.provider.cipher.T: int \u0971>;

        $i8 = $i0 + 77;

        $i0 = $i8 % 128;

        <btworks.jce.provider.cipher.T: int \u02ca> = $i0;

        $i0 = $i8 % 2;

        if $i0 != 0 goto label05;

        goto label01;

        catch java.lang.Exception from label07 to label08 with label09;
    }

    final int A(int)
    {
        btworks.jce.provider.cipher.T $r0;
        int $i0;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $i0 := @parameter0: int;

        return $i0;
    }

    int A(byte[], int, int, byte[], int)
    {
        btworks.jce.provider.cipher.T $r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1, $i2, $i5, $i6, $i7;
        byte $b3, $b4;
        boolean $z0;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $r1 := @parameter0: byte[];

        $i5 := @parameter1: int;

        $i0 := @parameter2: int;

        $r2 := @parameter3: byte[];

        $i6 := @parameter4: int;

        $i7 = $i0;

        goto label4;

     label1:
        $r3 = $r0.<btworks.jce.provider.cipher.T: byte[] R>;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int P>;

        $i2 = $i1 + 1;

        $r0.<btworks.jce.provider.cipher.T: int P> = $i2;

        $b3 = $r3[$i1];

        $i1 = $i5;

        $i5 = $i5 + 1;

        $b4 = $r1[$i1];

        $b3 = $b4 ^ $b3;

        $z0 = $r0.<btworks.jce.provider.cipher.T: boolean K>;

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $b4 = $b3;

     label3:
        specialinvoke $r0.<btworks.jce.provider.cipher.T: void A(byte)>($b4);

        $i1 = $i6;

        $i6 = $i6 + 1;

        $r2[$i1] = $b3;

     label4:
        $i1 = $i7;

        $i7 = $i7 + -1;

        if $i1 > 0 goto label1;

        return $i0;
    }

    void A(boolean, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)
    {
        btworks.jce.provider.cipher.T $r0;
        boolean $z0;
        java.security.Key $r1;
        java.security.spec.AlgorithmParameterSpec $r2;
        java.security.SecureRandom $r3;
        int $i0, $i4, varReplacer6357, varReplacer6358, varReplacer6359;
        java.lang.Exception $r4, $r5;
        java.security.InvalidAlgorithmParameterException $r6;
        byte[] $r7, $r9;
        byte $b1, $b2, $b3;
        java.lang.String $r8;
        btworks.jce.provider.cipher.P $r10;
        javax.crypto.spec.IvParameterSpec $r11;
        long varReplacer6356;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: java.security.Key;

        $r2 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        $r3 := @parameter3: java.security.SecureRandom;

        goto label05;

     label01:
        $r4 := @caughtexception;

        throw $r4;

     label02:
        $r5 := @caughtexception;

        throw $r5;

     label03:
        $r6 = new java.security.InvalidAlgorithmParameterException;

        $r7 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $b1 = $r7[22];

        $r7 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $b2 = $r7[30];

        $r7 = <btworks.jce.provider.cipher.T: byte[] \u02cf>;

        $b3 = $r7[5];

        $r8 = staticinvoke <btworks.jce.provider.cipher.T: java.lang.String \u02ca(byte,int,short)>($b1, $b2, $b3);

        $r8 = virtualinvoke $r8.<java.lang.String: java.lang.String intern()>();

        specialinvoke $r6.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label04:
        varReplacer6356 = 0L;

        $r0.<btworks.jce.provider.cipher.T: long Q> = varReplacer6356;

        $r7 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

        $r9 = $r0.<btworks.jce.provider.cipher.T: byte[] O>;

        varReplacer6358 = 0;

        varReplacer6359 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, varReplacer6358, $r9, varReplacer6358, $i0);

        specialinvoke $r0.<btworks.jce.provider.cipher.T: void J()>();

        return;

     label05:
        $r10 = $r0.<btworks.jce.provider.cipher.T: btworks.jce.provider.cipher.P A>;

     label06:
        varReplacer6357 = 0;

        virtualinvoke $r10.<btworks.jce.provider.cipher.P: void A(java.security.Key,boolean)>($r1, varReplacer6357);

     label07:
        $r0.<btworks.jce.provider.cipher.T: boolean K> = $z0;

     label08:
        $r11 = (javax.crypto.spec.IvParameterSpec) $r2;

     label09:
        $r7 = virtualinvoke $r11.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

     label10:
        $r0.<btworks.jce.provider.cipher.T: byte[] M> = $r7;

     label11:
        $r7 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

     label12:
        $i0 = lengthof $r7;

     label13:
        $i4 = $r0.<btworks.jce.provider.cipher.T: int C>;

     label14:
        if $i0 == $i4 goto label04;

        goto label03;

        catch java.lang.Exception from label05 to label06 with label02;
        catch java.lang.Exception from label06 to label07 with label02;
        catch java.lang.Exception from label07 to label08 with label02;
        catch java.lang.Exception from label08 to label09 with label01;
        catch java.lang.Exception from label09 to label10 with label01;
        catch java.lang.Exception from label10 to label11 with label01;
        catch java.lang.Exception from label11 to label12 with label01;
        catch java.lang.Exception from label12 to label13 with label01;
        catch java.lang.Exception from label13 to label14 with label01;
    }

    final byte[] A()
    {
        btworks.jce.provider.cipher.T $r0;
        byte[] r1;

        $r0 := @this: btworks.jce.provider.cipher.T;

        r1 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

        return r1;
    }

    final boolean E()
    {
        btworks.jce.provider.cipher.T $r0;
        int varReplacer5621;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        varReplacer5621 = 0;

        return varReplacer5621;
    }

    final java.security.spec.AlgorithmParameterSpec H()
    {
        btworks.jce.provider.cipher.T $r0;
        byte[] $r1;
        javax.crypto.spec.IvParameterSpec $r2;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

        if $r1 != null goto label1;

        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r1 = virtualinvoke $r0.<btworks.jce.provider.cipher.T: byte[] C()>();

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        return $r2;

     label1:
        $r2 = new javax.crypto.spec.IvParameterSpec;

        $r1 = $r0.<btworks.jce.provider.cipher.T: byte[] M>;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        return $r2;
    }

    protected boolean I()
    {
        btworks.jce.provider.cipher.T $r0;
        long $l0, $l2;
        int $i1, varReplacer6326, varReplacer6327;
        byte $b3;

        nop;

        $r0 := @this: btworks.jce.provider.cipher.T;

        $l0 = $r0.<btworks.jce.provider.cipher.T: long Q>;

        $i1 = $r0.<btworks.jce.provider.cipher.T: int L>;

        $l2 = (long) $i1;

        $l0 = $l0 % $l2;

        $b3 = $l0 cmp 0L;

        if $b3 != 0 goto label1;

        varReplacer6326 = 1;

        return varReplacer6326;

     label1:
        varReplacer6327 = 0;

        return varReplacer6327;
    }
}
