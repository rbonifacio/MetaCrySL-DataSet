Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7805)
		Method: <ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 85d3cf0f58970fc0fdb3dcbb8d1431a51bb746a3d029d55b9c115ca80d97de53
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4713)
		Method: <ph.teligent.nce.signup.HttpClient: org.apache.http.conn.ssl.SSLSocketFactory a()>
		SHA-256: 30caf2a323de8a39911952dbaf4c4c22b69eb651df9b11101b3438945cbeeca5
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <ph.teligent.nce.utils.Common: java.lang.String az(java.lang.String)>
		SHA-256: 15670c7e791a84c07ee4cefac2ef0d84db49a5fb6ff3d2bb5a0780395ef5b311
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13112)
		Method: <ph.teligent.nce.HalfPriceAndroidClientActivity: void Q()>
		SHA-256: c29b95187a7414da215fbca5666b9107b2cd58f53c4eff213f9bc1008617ac1e
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9179)
		Method: <ph.teligent.nce.sip.LocalSipProfile: jsip.sip.header.ProxyAuthorizationHeader getProxyAuthorizationHeader(jsip.sip.header.HeaderFactory)>
		SHA-256: ab8c6ad0853faee0ca3980519ffa9232057c52fd7c94afa5c21294bb732aedf
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9193)
		Method: <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 371757fb358c4f9d0086a7e48617892329e4679a5b251ffdd67a12436844d6e0
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <ph.teligent.nce.sip.LocalSipProfile: jsip.sip.header.ProxyAuthorizationHeader getProxyAuthorizationHeader(jsip.sip.header.HeaderFactory)>
		SHA-256: 8b287fdc62585b736f49df9144a1f0c1395055a4b2e8c0c4ed87c86a6909a073
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14295)
		Method: <ph.teligent.nce.bitmapfun.util.ImageCache: java.lang.String d(java.lang.String)>
		SHA-256: 3cc9e274d675d836f36b2fd430bfd7eb4ca45828cdcfef381b178dfe4e53260
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManager[]
		Statement: $r4 = virtualinvoke $r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: be45d6ce531a00699ae9de0d9b7557dc9720a956be91ac33ed6bf28b7eeadbe9
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 16fa0db58d9744e95300bbf547645071328681a1897af8928c94f6fd61e192ec
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <ph.teligent.nce.bitmapfun.util.ImageCache: java.lang.String d(java.lang.String)>
		SHA-256: 8ca0d79f22aecd326fa7ddefc2ab8d46d329ce8990a16ba99aee86556b02c9bf
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <ph.teligent.nce.HalfPriceAndroidClientActivity: void Q()>
		SHA-256: 811763fefb25ca5ef0454c7935ce84515e117c23657407445ae67cde4bb118f0
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r6 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r5)
		Method: <ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 533b7d1b53f92df1e958108524c2fa782f1cf2ef79fe09f1d0beb7aec94ef8dc
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9196)
		Method: <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 139cb95debcd703d9b4fd571eddd2982b622d43f9afdc4bfa41566f940312a65
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9186)
		Method: <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: cc8f599c98768c9a58a8e4d904072ebbd3112f2fb34f51c7c0bf14276c41a054
		Secure: true
	Object:
		Variable: r17
		Type: java.security.SecureRandom
		Statement: specialinvoke r17.<java.security.SecureRandom: void <init>()>()
		Method: <ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: e6d41c450731693a21a44fda829278d177861ae2d59ddc6dcdb0d060167629c
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27062)
		Method: <ph.teligent.nce.utils.Common: java.lang.String az(java.lang.String)>
		SHA-256: 46d447d62e7fd1d932797d48803544c2e6a2751901489f75108731375c3b5c63
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 16fa0db58d9744e95300bbf547645071328681a1897af8928c94f6fd61e192ec
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <ph.teligent.nce.sip.AuthorizationDigest: java.lang.String getDigest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 16fa0db58d9744e95300bbf547645071328681a1897af8928c94f6fd61e192ec
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4707)
		Method: <ph.teligent.nce.signup.HttpClient: org.apache.http.impl.client.DefaultHttpClient a(org.apache.http.impl.client.DefaultHttpClient)>
		SHA-256: fcbf00af80f22b8b85be25fb621ffa8b34ba4d838409877f8307d7e291a58669
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <ph.teligent.nce.webservice.HttpClient: org.apache.http.conn.ssl.SSLSocketFactory newSslSocketFactory()>
		SHA-256: d0356c841c27d304339136ebcbe04732a95deaeaab6441f519a7a851e3ca8d0f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12301)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 6e5fd8a45c5e4453f8eb032c0fa564bfb561a7a7202f6e5912343d58977d715e
		Secure: true

Findings in Java Class: ph.teligent.nce.signup.HttpClient

	 in Method: org.apache.http.conn.ssl.SSLSocketFactory a()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #30caf2a323de8a39911952dbaf4c4c22b69eb651df9b11101b3438945cbeeca5)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r5)


	 in Method: org.apache.http.impl.client.DefaultHttpClient a(org.apache.http.impl.client.DefaultHttpClient)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4708, r14, varReplacer4708)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4708, r14, varReplacer4708)


Findings in Java Class: ph.teligent.nce.HalfPriceAndroidClientActivity

	 in Method: void Q()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c29b95187a7414da215fbca5666b9107b2cd58f53c4eff213f9bc1008617ac1e)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13112)


Findings in Java Class: ph.teligent.nce.webservice.HttpClient$AdditionalKeyStoresSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, r18, r17)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r6.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, r18, r17)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 23

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 1
	ConstraintError: 1
	RequiredPredicateError: 5
=====================================================================