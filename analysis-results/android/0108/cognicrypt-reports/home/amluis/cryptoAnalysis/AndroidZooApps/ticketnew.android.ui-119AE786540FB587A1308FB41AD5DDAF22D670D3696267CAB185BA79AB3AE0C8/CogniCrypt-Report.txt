Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 4ff8afa2916954f9a0d986129d899a15493555d793f466f2b9548afac2d34340
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.enstage.wibmo.a.b: void b(android.content.Context)>
		SHA-256: c6501d07500f0fdf920c34ff00601a378eca5229b37f22825e2d0ed88541ec8c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2478)
		Method: <com.enstage.wibmo.a.f: javax.net.ssl.TrustManager[] a(android.content.Context,int,char[])>
		SHA-256: c43d3d9c485afe6b5dc9c911d4df6fb040888ce818fc7a2672310dd795fc3650
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2083)
		Method: <ticketnew.android.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: b6b5453cbb014870c801cb7c16dc1e6735691fd6410b584f31cb56c4a3af8c79
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2472)
		Method: <com.enstage.wibmo.a.b: void b(android.content.Context)>
		SHA-256: 9b0043c81cb19e455a7ccb9df1ee43a0d991db5722b5a96bcd24aedfea2838e1
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3087)
		Method: <okhttp3.ah: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: a8b3458a078fa334f945e50e42d1e782bb50504ee8efda5e11b413fdc5a89774
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: a61f0932c04ce188e6bb166225db66224e54563f8f737d09a20ff440584eb0f2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 34aa3b6ee6c7ba7ca161fa3e216f9558d03e22fe0bd8369b62d3fa741d32e768
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: dfdfbc12720b58582472a369ee7126d2c89ffccd15b06b641717c7d7a71ba579
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1192)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: a23720b7f7a9709918e465b5247989d816f7f576db1696609369d34e0dccd03e
		Secure: false
	Object:
		Variable: varReplacer8510
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8510)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: 5c844372cb71d525586efd7f556c1785074ab36e7c95735061b72812ce1054b8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: 946fbde51d1d82cb8c9c8781f208942a5bcd4b5dfbdfc60fd6e1c1748c1c327d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <ticketnew.android.utils.m: java.lang.String a(java.lang.String)>
		SHA-256: cf8ef25d33ed5c061510309f582ea33d9d6609c1a9bff42513f560ba929c1012
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: d4f75e7af8cb2b9beb9636be7f6c704b5761c6ad731b7764de675727d6a3d6ec
		Secure: false
	Object:
		Variable: varReplacer1193
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1193)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 43d52ac5b0e6c6797be3de0faf6528c01c67f2dd6c949b8836a09bf5f5cf7864
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1265)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: 8dcdd67079e063678dfe2f96d33117f2663ece1735242a40ed8719f9822141bb
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1197)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] getRawKey(byte[])>
		SHA-256: 1a05c737c166729d658a7b909a704c51b25e525cf42ca2547bcaa7586a19f52e
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: 1d15918481c23eaf8ad67f8473cd6270be855d0ac1ee537eaa95c40028eb8f0e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2085)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 8d75ab96d6bafac3a61dfdcfc48cf642e99e1f2cd7e9b69011b0c1da6276d2f4
		Secure: false
	Object:
		Variable: varReplacer2085
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2085)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 41af952993cf66ac3e4e2959d6178cf279a8fd1fe35b69feba2214d1f3c8f607
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1198, varReplacer1199)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] getRawKey(byte[])>
		SHA-256: 9c4d047f8cb6a2ae38618ba2374e3d2ebccad6df0e826f717459311987e9e7c3
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1041)
		Method: <com.ut.mini.d.g: byte[] c(byte[])>
		SHA-256: fc58a4f8bbe931d593fe69195856491143be7bab82dda557614d4c4e5535426d
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5115)
		Method: <com.enstage.wibmo.a.e: void <clinit>()>
		SHA-256: 4c81bc196e649552d02c2b8a431d0ca93ae294c6b1fc925c80e47e6abd959134
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8508)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: 3bdf913773e53130ee43ddd934de8ecc423b8ced66ebd262190dd00ca4790a3d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: c50c863f2ff909afe1b58e13fcfc3a87e89f420204d1c66094d663a6b251de35
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5116)
		Method: <com.enstage.wibmo.a.e: void <clinit>()>
		SHA-256: 58763550241fdd12a1b88820499c50af0399b7b2af998ee6318009967b1f365b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 6c7a05063baf69722bdf3472ac79dad7cd8cafa170f66aabf811c81773019fca
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1193)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 2019feb7f15707f2f673434a8add00670e89b96d47a24cf3e2747379d8210dd8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4802)
		Method: <com.facebook.appevents.AppEvent: java.lang.String b(java.lang.String)>
		SHA-256: ebea95ad41de2c6506903afcc61720d5dbc5aa84efaf0a5306743635f6ad9705
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ut.mini.d.g: byte[] c(byte[])>
		SHA-256: 3739b25702c94a437ce251ba23d4b13d5e628a4a1a86afdc9be9f2f771c33cc3
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: 59be999f21a029ef6241871ee4fdbde55aeef24a975cd5a53fdf342a502d8a66
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.UTUtdid: java.lang.String _calcHmac(byte[])>
		SHA-256: c56b4a53962695dba6cf0be5933bafaaae5ee8490208939544c98c05b06de931
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8510)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] encrypt(byte[],byte[])>
		SHA-256: 662dd6cb94cc93f1e4381d8bbbbc4f573e2c6709d74e3907031f503898cce5b2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2087)
		Method: <ticketnew.android.user.c.a: byte[] a(byte[],byte[])>
		SHA-256: 1f3dfe18c86a1d3ba16d3a011fe96cf4c216f722feb20902d0517da6cc9c85c0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] decrypt(byte[],byte[])>
		SHA-256: 7fdf9633958e5a79b855419b02fe2d5e9240f88364219bd86d94ab52959500f1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ta.utdid2.android.utils.AESUtils: byte[] getRawKey(byte[])>
		SHA-256: 1db58a57f7a01ae5ed6db8971432ce4d5e0513bec07b11602533597e19488ccc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.appevents.AppEvent: java.lang.String b(java.lang.String)>
		SHA-256: ea03a75498369af5fe39c3d1902858e1eebcf903810e12b2ec0be1685c24270c
		Secure: true

Findings in Java Class: com.enstage.wibmo.a.f

	 in Method: javax.net.ssl.TrustManager[] a(android.content.Context,int,char[])
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #c43d3d9c485afe6b5dc9c911d4df6fb040888ce818fc7a2672310dd795fc3650)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r1)


Findings in Java Class: ticketnew.android.user.c.a

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2085)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2086, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


Findings in Java Class: com.enstage.wibmo.a.b

	 in Method: void b(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r1, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r1, $r2)


Findings in Java Class: okhttp3.ah

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3088, r7, varReplacer3088)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3088, r7, varReplacer3088)


Findings in Java Class: com.ta.utdid2.android.utils.AESUtils

	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8509, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8509, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8510)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1193)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1194, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1196, $r2)


Findings in Java Class: com.ta.utdid2.device.UTUtdid

	 in Method: java.lang.String _calcHmac(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 37

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 16
	NeverTypeOfError: 1
=====================================================================