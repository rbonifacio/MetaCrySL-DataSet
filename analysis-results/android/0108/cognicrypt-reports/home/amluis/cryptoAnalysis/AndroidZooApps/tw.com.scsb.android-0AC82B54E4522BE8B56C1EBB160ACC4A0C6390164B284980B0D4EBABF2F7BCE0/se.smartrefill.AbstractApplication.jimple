public abstract class se.smartrefill.AbstractApplication extends android.app.Application implements se.smartrefill.service.LoggingService
{
    protected static final java.lang.String INFLOW_ANDROID;
    private static final java.lang.String PROP_KEY_ALLOWED_CMD_EXEC_NETWORK_OUTAGE_DURATION;
    private static final java.lang.String PROP_KEY_ALLOWED_CMD_EXEC_RETRIES_ON_NETWORK_ERRORS;
    private static final java.lang.String PROP_KEY_BASE_URL;
    private static final java.lang.String PROP_KEY_DEBUG;
    private static final java.lang.String PROP_KEY_FACEBOOK_APP_ID;
    private static final java.lang.String PROP_KEY_FACEBOOK_APP_SECRET;
    private static final java.lang.String PROP_KEY_GOOGLE_ANALYTICS_CUSTOM_VARIABLES;
    private static final java.lang.String PROP_KEY_GOOGLE_ANALYTICS_KEY;
    private static final java.lang.String PROP_KEY_GOOGLE_API_KEY;
    private static final java.lang.String PROP_KEY_GOOGLE_MAPS_KEY;
    private static final java.lang.String PROP_KEY_GOOGLE_PROJECT_ID;
    private static final java.lang.String PROP_KEY_GOOGLE_PROJECT_NUMBER;
    private static final java.lang.String PROP_KEY_HIERARCHY_VIEW_SERVER;
    private static final java.lang.String PROP_KEY_LOCAL_SESSION_MILLIS;
    private static final java.lang.String PROP_KEY_LOG_LEVEL;
    private static final java.lang.String PROP_KEY_SECURE_BASE_URL;
    private static final java.lang.String PROP_KEY_TIMEOUT_CONNECT;
    private static final java.lang.String PROP_KEY_TIMEOUT_SOCKET;
    private static final java.lang.String PROP_KEY_TRUST_ALL_SERVER_CERTIFICATES;
    private static final java.lang.String PROP_KEY_USE_CRASHLYTICS;
    private static final java.lang.String SETTINGS_FILE_NAME;
    protected static final java.lang.String USER_TRACE_POINTS_FILE_NAME;
    protected se.smartrefill.service.CacheService cacheService;
    private se.smartrefill.command.CommandExecutor commandExecutor;
    protected se.smartrefill.command.CommandPublisher commandPublisher;
    protected se.smartrefill.service.ContextService contextService;
    private se.smartrefill.domain.AdDeviceAppProperties deviceAppProps;
    private se.smartrefill.repository.HistoricalCommandRepository historicalCommandRepository;
    protected se.smartrefill.service.HistoricalCommandService historicalCommandService;
    protected se.smartrefill.service.LocalSessionService localSessionService;
    protected se.smartrefill.service.LoggingService loggingService;
    protected se.smartrefill.service.NetworkStatusService networkStatusService;
    protected com.fasterxml.jackson.databind.ObjectMapper objectMapper;
    private com.squareup.okhttp.OkHttpClient primaryHttpClient;
    private java.util.Properties prop;
    protected se.smartrefill.service.PropertyService propertyService;
    protected se.smartrefill.service.PushService pushService;
    private com.squareup.okhttp.OkHttpClient secondaryHttpClient;
    private java.lang.String settingsFileName;
    protected se.smartrefill.service.TimerService timerService;
    protected se.smartrefill.service.UserTraceService userTraceService;

    public void <init>()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String varReplacer3142;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer3142 = "settings.properties";

        specialinvoke $r0.<se.smartrefill.AbstractApplication: void <init>(java.lang.String)>(varReplacer3142);

        return;
    }

    public void <init>(java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer3143;
        java.util.Properties $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<android.app.Application: void <init>()>();

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        $r0.<se.smartrefill.AbstractApplication: java.util.Properties prop> = $r2;

        varReplacer3143 = "settings.properties";

        $r0.<se.smartrefill.AbstractApplication: java.lang.String settingsFileName> = varReplacer3143;

        return;
    }

    private void ejectServicesNested(se.smartrefill.command.AggregatedCommand)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.AggregatedCommand $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        se.smartrefill.command.Command $r5;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.command.AggregatedCommand;

        $r2 = virtualinvoke $r1.<se.smartrefill.command.AggregatedCommand: java.util.List getCommands()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (se.smartrefill.command.Command) $r4;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void ejectServices(se.smartrefill.command.Command)>($r5);

        goto label1;

     label2:
        return;
    }

    private java.net.HttpCookie getCookieFromHttpClient(com.squareup.okhttp.OkHttpClient, java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        com.squareup.okhttp.OkHttpClient $r1;
        java.lang.String $r2, $r8;
        java.net.CookieStore $r3;
        boolean $z0;
        java.util.List $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.net.HttpCookie $r7;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        $r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.net.CookieStore getCookieStoreFromHttpClient(com.squareup.okhttp.OkHttpClient)>($r1);

        if $r3 == null goto label1;

        $z0 = staticinvoke <se.smartrefill.util.StringUtil: boolean isBlank(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        $r4 = interfaceinvoke $r3.<java.net.CookieStore: java.util.List getCookies()>();

        $z0 = staticinvoke <se.smartrefill.util.ListUtil: boolean isNullOrEmpty(java.util.List)>($r4);

        if $z0 != 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.net.CookieStore: java.util.List getCookies()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.net.HttpCookie) $r6;

        $r8 = virtualinvoke $r7.<java.net.HttpCookie: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label3;

        return $r7;

     label4:
        return null;
    }

    private java.net.CookieStore getCookieStoreFromHttpClient(com.squareup.okhttp.OkHttpClient)
    {
        se.smartrefill.AbstractApplication $r0;
        com.squareup.okhttp.OkHttpClient $r1;
        java.net.CookieHandler $r2;
        java.net.CookieManager $r3;
        java.net.CookieStore $r4;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        $r2 = virtualinvoke $r1.<com.squareup.okhttp.OkHttpClient: java.net.CookieHandler getCookieHandler()>();

        $r3 = (java.net.CookieManager) $r2;

        $r4 = virtualinvoke $r3.<java.net.CookieManager: java.net.CookieStore getCookieStore()>();

        return $r4;
    }

    private java.util.List getCookiesCopyFromHttpClient(com.squareup.okhttp.OkHttpClient)
    {
        se.smartrefill.AbstractApplication $r0;
        com.squareup.okhttp.OkHttpClient $r1;
        java.net.CookieStore $r2;
        java.util.ArrayList $r3;
        java.util.List $r4;
        java.lang.Throwable $r5;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        $r2 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.net.CookieStore getCookieStoreFromHttpClient(com.squareup.okhttp.OkHttpClient)>($r1);

        if $r2 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        return $r3;

     label1:
        entermonitor $r2;

     label2:
        $r3 = new java.util.ArrayList;

        $r4 = interfaceinvoke $r2.<java.net.CookieStore: java.util.List getCookies()>();

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        exitmonitor $r2;

     label3:
        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        return $r4;

     label4:
        $r5 := @caughtexception;

     label5:
        exitmonitor $r2;

     label6:
        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    private se.smartrefill.domain.AdDeviceAppProperties getDeviceAppProperties()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.domain.AdDeviceAppProperties $r1;
        int $i0, varReplacer1232;
        java.lang.String $r2, $r5, varReplacer1230;
        android.content.pm.PackageManager $r3;
        android.content.pm.PackageInfo $r4;
        java.lang.Class $r6;
        java.lang.reflect.Field $r7;
        java.lang.Object $r8;
        boolean $z0;
        se.smartrefill.service.InformationService $r9;
        java.lang.Throwable $r10;
        java.lang.Exception $r11;
        null_type varReplacer1231;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        if $r1 != null goto label6;

        $r1 = new se.smartrefill.domain.AdDeviceAppProperties;

        specialinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: void <init>()>();

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps> = $r1;

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: void setAndroidApiLevel(int)>($i0);

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        $r2 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: void setAndroidVersionName(java.lang.String)>($r2);

     label1:
        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getPackageName()>();

        varReplacer1232 = 128;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r2, varReplacer1232);

     label2:
        $r2 = $r4.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r5 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label3:
        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: void setAppId(java.lang.String)>($r2);

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: void setAppVersion(java.lang.String)>($r5);

        $r6 = class "Landroid/os/Build;";

     label4:
        varReplacer1230 = "MANUFACTURER";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(varReplacer1230);

        varReplacer1231 = null;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(varReplacer1231);

        $r2 = (java.lang.String) $r8;

     label5:
        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: void setDeviceManufacturer(java.lang.String)>($r2);

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        $r2 = <android.os.Build: java.lang.String MODEL>;

        virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: void setDeviceModel(java.lang.String)>($r2);

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        $r2 = <android.os.Build: java.lang.String PRODUCT>;

        virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: void setDeviceProduct(java.lang.String)>($r2);

     label6:
        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        $r2 = virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: java.lang.String getUserLanguageCode()>();

        $z0 = staticinvoke <se.smartrefill.util.StringUtil: boolean isBlank(java.lang.String)>($r2);

        if $z0 == 0 goto label7;

        $r9 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.InformationService getInformationService()>();

        if $r9 == null goto label7;

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        $r2 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getLanguageCode()>();

        virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: void setUserLanguageCode(java.lang.String)>($r2);

     label7:
        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties deviceAppProps>;

        return $r1;

     label8:
        $r10 := @caughtexception;

        $r5 = "";

        $r2 = "";

        goto label3;

     label9:
        $r11 := @caughtexception;

        $r2 = "";

        goto label5;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label8;
        catch java.lang.Exception from label4 to label5 with label9;
    }

    private java.lang.String getGoogleAnalyticsCustomVariables()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer2078;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2078 = "googleAnalyticsCustomVariables";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer2078);

        return $r1;
    }

    private java.lang.String getGoogleAnalyticsKey()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer2074;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2074 = "googleAnalyticsKey";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer2074);

        return $r1;
    }

    private java.lang.String getLogLevel()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer2054, varReplacer2055;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2054 = "logLevel";

        varReplacer2055 = "ERROR";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String,java.lang.String)>(varReplacer2054, varReplacer2055);

        return $r1;
    }

    private com.squareup.okhttp.CipherSuite[] getOkHttpClientCipherSuites()
    {
        se.smartrefill.AbstractApplication $r0;
        com.squareup.okhttp.CipherSuite[] $r1;
        com.squareup.okhttp.CipherSuite $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = newarray (com.squareup.okhttp.CipherSuite)[96];

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256>;

        $r1[0] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256>;

        $r1[1] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_RSA_WITH_AES_128_GCM_SHA256>;

        $r1[2] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA>;

        $r1[3] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA>;

        $r1[4] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA>;

        $r1[5] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA>;

        $r1[6] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA>;

        $r1[7] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA>;

        $r1[8] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA>;

        $r1[9] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256>;

        $r1[10] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA>;

        $r1[11] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA>;

        $r1[12] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA>;

        $r1[13] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_NULL_MD5>;

        $r1[14] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_NULL_SHA>;

        $r1[15] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_EXPORT_WITH_RC4_40_MD5>;

        $r1[16] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_RC4_128_MD5>;

        $r1[17] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_RC4_128_SHA>;

        $r1[18] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_EXPORT_WITH_DES40_CBC_SHA>;

        $r1[19] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_DES_CBC_SHA>;

        $r1[20] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA>;

        $r1[21] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_DSS_WITH_DES_CBC_SHA>;

        $r1[22] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA>;

        $r1[23] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA>;

        $r1[24] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_RSA_WITH_DES_CBC_SHA>;

        $r1[25] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA>;

        $r1[26] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_EXPORT_WITH_RC4_40_MD5>;

        $r1[27] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_WITH_RC4_128_MD5>;

        $r1[28] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA>;

        $r1[29] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_WITH_DES_CBC_SHA>;

        $r1[30] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_WITH_3DES_EDE_CBC_SHA>;

        $r1[31] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_WITH_DES_CBC_SHA>;

        $r1[32] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_SHA>;

        $r1[33] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_WITH_RC4_128_SHA>;

        $r1[34] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_WITH_DES_CBC_MD5>;

        $r1[35] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_WITH_3DES_EDE_CBC_MD5>;

        $r1[36] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_WITH_RC4_128_MD5>;

        $r1[37] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA>;

        $r1[38] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_SHA>;

        $r1[39] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5>;

        $r1[40] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_KRB5_EXPORT_WITH_RC4_40_MD5>;

        $r1[41] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA>;

        $r1[42] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA>;

        $r1[43] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA>;

        $r1[44] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_NULL_SHA256>;

        $r1[45] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA256>;

        $r1[46] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA256>;

        $r1[47] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_DSS_WITH_AES_128_CBC_SHA256>;

        $r1[48] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_RSA_WITH_AES_128_CBC_SHA256>;

        $r1[49] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_DSS_WITH_AES_256_CBC_SHA256>;

        $r1[50] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_RSA_WITH_AES_256_CBC_SHA256>;

        $r1[51] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_WITH_AES_128_CBC_SHA256>;

        $r1[52] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_WITH_AES_256_CBC_SHA256>;

        $r1[53] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384>;

        $r1[54] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384>;

        $r1[55] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_DSS_WITH_AES_128_GCM_SHA256>;

        $r1[56] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DHE_DSS_WITH_AES_256_GCM_SHA384>;

        $r1[57] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_WITH_AES_128_GCM_SHA256>;

        $r1[58] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_DH_anon_WITH_AES_256_GCM_SHA384>;

        $r1[59] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_EMPTY_RENEGOTIATION_INFO_SCSV>;

        $r1[60] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_ECDSA_WITH_NULL_SHA>;

        $r1[61] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_ECDSA_WITH_RC4_128_SHA>;

        $r1[62] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA>;

        $r1[63] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA>;

        $r1[64] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA>;

        $r1[65] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_ECDSA_WITH_NULL_SHA>;

        $r1[66] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_ECDSA_WITH_RC4_128_SHA>;

        $r1[67] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA>;

        $r1[68] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_RSA_WITH_NULL_SHA>;

        $r1[69] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_RSA_WITH_RC4_128_SHA>;

        $r1[70] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA>;

        $r1[71] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA>;

        $r1[72] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA>;

        $r1[73] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_RSA_WITH_NULL_SHA>;

        $r1[74] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_RSA_WITH_RC4_128_SHA>;

        $r1[75] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA>;

        $r1[76] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA>;

        $r1[77] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_anon_WITH_NULL_SHA>;

        $r1[78] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_anon_WITH_RC4_128_SHA>;

        $r1[79] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA>;

        $r1[80] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_anon_WITH_AES_128_CBC_SHA>;

        $r1[81] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_anon_WITH_AES_256_CBC_SHA>;

        $r1[82] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256>;

        $r1[83] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384>;

        $r1[84] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256>;

        $r1[85] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384>;

        $r1[86] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256>;

        $r1[87] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256>;

        $r1[88] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384>;

        $r1[89] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384>;

        $r1[90] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256>;

        $r1[91] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384>;

        $r1[92] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384>;

        $r1[93] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256>;

        $r1[94] = $r2;

        $r2 = <com.squareup.okhttp.CipherSuite: com.squareup.okhttp.CipherSuite TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384>;

        $r1[95] = $r2;

        return $r1;
    }

    private java.lang.String getUserAgentHeaderValue()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.domain.AdDeviceAppProperties $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, varReplacer2819, varReplacer2820, varReplacer2821, varReplacer2822, varReplacer2823, varReplacer2824, varReplacer2825;
        int $i0;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = specialinvoke $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties getDeviceAppProperties()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer2824 = "OkHttp/2.5.0 Android/";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2824);

        $r3 = virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: java.lang.String getAndroidVersionName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2819 = "/";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2819);

        $i0 = virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: int getAndroidApiLevel()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer2821 = " ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2821);

        $r3 = virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: java.lang.String getDeviceManufacturer()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2822 = "/";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2822);

        $r3 = virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: java.lang.String getDeviceModel()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2823 = "/";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2823);

        $r3 = virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: java.lang.String getDeviceProduct()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2825 = " ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2825);

        $r3 = virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: java.lang.String getAppId()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer2820 = "/";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2820);

        $r3 = virtualinvoke $r1.<se.smartrefill.domain.AdDeviceAppProperties: java.lang.String getAppVersion()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private void injectServicesNested(se.smartrefill.command.AggregatedCommand)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.AggregatedCommand $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        se.smartrefill.command.Command $r5;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.command.AggregatedCommand;

        $r2 = virtualinvoke $r1.<se.smartrefill.command.AggregatedCommand: java.util.List getCommands()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (se.smartrefill.command.Command) $r4;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void injectServices(se.smartrefill.command.Command)>($r5);

        goto label1;

     label2:
        return;
    }

    private com.squareup.okhttp.OkHttpClient setupHttpClient()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer2057, varReplacer2058, varReplacer2059, varReplacer2060, varReplacer2065, varReplacer2066, varReplacer2067, varReplacer2068, varReplacer2069, varReplacer2070;
        java.lang.Boolean $r2;
        boolean $z0;
        java.lang.Object[] $r3;
        se.smartrefill.AbstractApplication$1 $r4, r26;
        javax.net.ssl.SSLContext $r5;
        java.security.SecureRandom $r6, r27;
        se.smartrefill.httpclient.SecureSocketFactory $r7, r28;
        com.squareup.okhttp.OkHttpClient $r8, r29;
        se.smartrefill.AbstractApplication$2 $r9, r30;
        com.squareup.okhttp.ConnectionSpec$Builder $r10, r31;
        com.squareup.okhttp.ConnectionSpec $r11;
        com.squareup.okhttp.CipherSuite[] $r12;
        java.util.ArrayList $r13, r32;
        int $i0, $i1;
        javax.net.ssl.SSLParameters $r14;
        java.lang.String[] $r15;
        java.lang.StringBuilder $r16, r34;
        java.lang.Throwable $r17, $r19, $r25;
        javax.net.ssl.SSLEngine $r18;
        long $l2;
        java.util.concurrent.TimeUnit $r20;
        java.util.List $r21;
        java.net.CookieManager $r22, r36;
        java.net.CookieStore $r23;
        java.net.CookiePolicy $r24;
        se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory r33;
        se.smartrefill.net.UserAgentInterceptor r35;
        javax.net.ssl.TrustManager[] r37;
        null_type varReplacer2061, varReplacer2062, varReplacer2063, varReplacer2064;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2057 = "trustAllServerCertificates";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer2057);

        if $r1 == null goto label31;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label31;

     label01:
        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        r26 = new se.smartrefill.AbstractApplication$1;

     label02:
        $r4 = r26;

     label03:
        specialinvoke r26.<se.smartrefill.AbstractApplication$1: void <init>(se.smartrefill.AbstractApplication)>($r0);

        $r3[0] = $r4;

        varReplacer2060 = "SSL";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2060);

        r27 = new java.security.SecureRandom;

     label04:
        $r6 = r27;

     label05:
        specialinvoke r27.<java.security.SecureRandom: void <init>()>();

        r37 = (javax.net.ssl.TrustManager[]) $r3;

        varReplacer2061 = null;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2061, r37, $r6);

        r28 = new se.smartrefill.httpclient.SecureSocketFactory;

     label06:
        $r7 = r28;

     label07:
        specialinvoke r28.<se.smartrefill.httpclient.SecureSocketFactory: void <init>()>();

        r29 = new com.squareup.okhttp.OkHttpClient;

     label08:
        $r8 = r29;

     label09:
        specialinvoke r29.<com.squareup.okhttp.OkHttpClient: void <init>()>();

     label10:
        virtualinvoke $r8.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory)>($r7);

        r30 = new se.smartrefill.AbstractApplication$2;

     label11:
        $r9 = r30;

     label12:
        specialinvoke r30.<se.smartrefill.AbstractApplication$2: void <init>(se.smartrefill.AbstractApplication)>($r0);

        virtualinvoke $r8.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier)>($r9);

     label13:
        if $r8 != null goto label14;

        r29 = new com.squareup.okhttp.OkHttpClient;

        $r8 = r29;

        specialinvoke r29.<com.squareup.okhttp.OkHttpClient: void <init>()>();

     label14:
        r31 = new com.squareup.okhttp.ConnectionSpec$Builder;

        $r11 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec MODERN_TLS>;

        specialinvoke r31.<com.squareup.okhttp.ConnectionSpec$Builder: void <init>(com.squareup.okhttp.ConnectionSpec)>($r11);

        $r12 = specialinvoke $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.CipherSuite[] getOkHttpClientCipherSuites()>();

        $r10 = virtualinvoke r31.<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec$Builder cipherSuites(com.squareup.okhttp.CipherSuite[])>($r12);

        $r11 = virtualinvoke $r10.<com.squareup.okhttp.ConnectionSpec$Builder: com.squareup.okhttp.ConnectionSpec build()>();

        r32 = new java.util.ArrayList;

        $r13 = r32;

        specialinvoke r32.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r11 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec CLEARTEXT>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r11);

        virtualinvoke $r8.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setConnectionSpecs(java.util.List)>($r13);

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 16 goto label15;

        $z0 = staticinvoke <se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: boolean isSupported()>();

        if $z0 == 0 goto label15;

        r33 = new se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory;

        specialinvoke r33.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: void <init>()>();

        virtualinvoke $r8.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory)>(r33);

     label15:
        varReplacer2065 = "Trying to enforce TLSv1.2 by \'SSLContext.getInstance(\"TLSv1.2\")\'";

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logDebug(java.lang.String)>(varReplacer2065);

        varReplacer2067 = "TLSv1.2";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2067);

        varReplacer2062 = null;

        varReplacer2063 = null;

        varReplacer2064 = null;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2062, varReplacer2062, varReplacer2062);

        $r14 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLParameters getSupportedSSLParameters()>();

        $r15 = virtualinvoke $r14.<javax.net.ssl.SSLParameters: java.lang.String[] getProtocols()>();

     label16:
        $i0 = lengthof $r15;

        $i1 = 0;

     label17:
        if $i1 >= $i0 goto label22;

        $r1 = $r15[$i1];

        r34 = new java.lang.StringBuilder;

        $r16 = r34;

     label18:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        varReplacer2058 = "Context supported protocol: ";

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2058);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logDebug(java.lang.String)>($r1);

     label19:
        $i1 = $i1 + 1;

        goto label17;

     label20:
        $r17 := @caughtexception;

        $r8 = null;

     label21:
        varReplacer2068 = "Failed to apply a trust-all-server-certificates socket factory. Defaulting to a normal OkHttpClient.";

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logWarn(java.lang.String,java.lang.Throwable)>(varReplacer2068, $r17);

        goto label13;

     label22:
        $r18 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>();

        $r15 = virtualinvoke $r18.<javax.net.ssl.SSLEngine: java.lang.String[] getSupportedProtocols()>();

     label23:
        $i0 = lengthof $r15;

        $i1 = 0;

     label24:
        if $i1 >= $i0 goto label28;

        $r1 = $r15[$i1];

        r34 = new java.lang.StringBuilder;

        $r16 = r34;

     label25:
        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        varReplacer2069 = "Engine supported protocol: ";

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2069);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logDebug(java.lang.String)>($r1);

     label26:
        $i1 = $i1 + 1;

        goto label24;

     label27:
        $r19 := @caughtexception;

        varReplacer2070 = "Failed to enforce TLSv1.2";

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logWarn(java.lang.String,java.lang.Throwable)>(varReplacer2070, $r19);

     label28:
        $i0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: int getConnectionTimeout()>();

        $l2 = (long) $i0;

        $r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r8.<com.squareup.okhttp.OkHttpClient: void setConnectTimeout(long,java.util.concurrent.TimeUnit)>($l2, $r20);

        $i0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: int getSocketTimeout()>();

        $l2 = (long) $i0;

        $r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r8.<com.squareup.okhttp.OkHttpClient: void setReadTimeout(long,java.util.concurrent.TimeUnit)>($l2, $r20);

        $r1 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getUserAgentHeaderValue()>();

        $r21 = virtualinvoke $r8.<com.squareup.okhttp.OkHttpClient: java.util.List networkInterceptors()>();

        r35 = new se.smartrefill.net.UserAgentInterceptor;

        specialinvoke r35.<se.smartrefill.net.UserAgentInterceptor: void <init>(java.lang.String)>($r1);

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(r35);

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        varReplacer2066 = "OkHttp uses User-Agent: ";

        $r16 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2066);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logDebug(java.lang.String)>($r1);

        r36 = new java.net.CookieManager;

        $r22 = r36;

        $r23 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.net.CookieStore createCookieStore()>();

        $r24 = <java.net.CookiePolicy: java.net.CookiePolicy ACCEPT_ALL>;

        specialinvoke r36.<java.net.CookieManager: void <init>(java.net.CookieStore,java.net.CookiePolicy)>($r23, $r24);

        staticinvoke <java.net.CookieHandler: void setDefault(java.net.CookieHandler)>($r22);

        virtualinvoke $r8.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setCookieHandler(java.net.CookieHandler)>($r22);

        return $r8;

     label29:
        $r25 := @caughtexception;

        varReplacer2059 = "Failed to enforce TLSv1.2";

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logWarn(java.lang.String,java.lang.Throwable)>(varReplacer2059, $r25);

        goto label28;

     label30:
        $r17 := @caughtexception;

        goto label21;

     label31:
        $r8 = null;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label04 with label20;
        catch java.lang.Throwable from label05 to label06 with label20;
        catch java.lang.Throwable from label07 to label08 with label20;
        catch java.lang.Throwable from label09 to label10 with label20;
        catch java.lang.Throwable from label10 to label11 with label30;
        catch java.lang.Throwable from label12 to label13 with label30;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label27;
        catch java.security.NoSuchAlgorithmException from label18 to label19 with label27;
        catch java.security.KeyManagementException from label15 to label16 with label29;
        catch java.security.KeyManagementException from label18 to label19 with label29;
        catch java.security.NoSuchAlgorithmException from label22 to label23 with label27;
        catch java.security.NoSuchAlgorithmException from label25 to label26 with label27;
        catch java.security.KeyManagementException from label22 to label23 with label29;
        catch java.security.KeyManagementException from label25 to label26 with label29;
    }

    public void addCommandListener(se.smartrefill.command.CommandListener)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.CommandListener $r1;
        se.smartrefill.command.CommandExecutor $r2;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.command.CommandListener;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        interfaceinvoke $r2.<se.smartrefill.command.CommandExecutor: void addCommandListener(se.smartrefill.command.CommandListener)>($r1);

        return;
    }

    public void addTraceEvent(se.smartrefill.domain.AdUserTraceEvent)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.domain.AdUserTraceEvent $r1;
        se.smartrefill.service.UserTraceService $r2;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.domain.AdUserTraceEvent;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.UserTraceService userTraceService>;

        if $r2 == null goto label1;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.UserTraceService userTraceService>;

        interfaceinvoke $r2.<se.smartrefill.service.UserTraceService: void addTraceEvent(se.smartrefill.domain.AdUserTraceEvent)>($r1);

     label1:
        return;
    }

    public void clearAllCommands()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.CommandExecutor $r1;
        java.util.List $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        se.smartrefill.command.Command $r5;
        se.smartrefill.command.AggregatedCommand $r6;
        java.lang.Throwable $r7;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        interfaceinvoke $r1.<se.smartrefill.command.CommandExecutor: void clear()>();

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r2 = interfaceinvoke $r1.<se.smartrefill.command.CommandExecutor: java.util.List getCurrentlyExecutedCommands()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (se.smartrefill.command.Command) $r4;

        if $r5 == null goto label1;

        interfaceinvoke $r5.<se.smartrefill.command.Command: void cancel()>();

     label2:
        interfaceinvoke $r5.<se.smartrefill.command.Command: void onFinish()>();

     label3:
        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void ejectServices(se.smartrefill.command.Command)>($r5);

        $z0 = $r5 instanceof se.smartrefill.command.AggregatedCommand;

        if $z0 == 0 goto label1;

        $r6 = (se.smartrefill.command.AggregatedCommand) $r5;

        specialinvoke $r0.<se.smartrefill.AbstractApplication: void ejectServicesNested(se.smartrefill.command.AggregatedCommand)>($r6);

        goto label1;

     label4:
        $r7 := @caughtexception;

        goto label3;

     label5:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public void clearAllCommandsAndRestartCommandExecutor()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.CommandExecutor $r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void clearAllCommands()>();

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        interfaceinvoke $r1.<se.smartrefill.command.CommandExecutor: void restart()>();

        return;
    }

    protected void configPrimaryHttpClient(com.squareup.okhttp.OkHttpClient)
    {
        se.smartrefill.AbstractApplication $r0;
        com.squareup.okhttp.OkHttpClient $r1;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        return;
    }

    protected void configSecondaryHttpClient(com.squareup.okhttp.OkHttpClient)
    {
        se.smartrefill.AbstractApplication $r0;
        com.squareup.okhttp.OkHttpClient $r1;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: com.squareup.okhttp.OkHttpClient;

        return;
    }

    public abstract se.smartrefill.activity.AbstractActivityLifeCycleMonitor createActivityLifeCycleMonitor(android.app.Activity);

    protected java.net.CookieStore createCookieStore()
    {
        se.smartrefill.AbstractApplication $r0;
        null_type varReplacer2826;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2826 = null;

        return varReplacer2826;
    }

    public abstract se.smartrefill.fragment.AbstractFragmentLifeCycleMonitor createFragmentLifeCycleMonitor(android.support.v4.app.Fragment);

    protected void ejectServices(se.smartrefill.command.Command)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.Command $r1;
        boolean $z0;
        se.smartrefill.service.LoggingServiceAware $r2;
        se.smartrefill.service.UserTraceServiceAware $r3;
        se.smartrefill.service.CacheServiceAware $r4;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.command.Command;

        $z0 = $r1 instanceof se.smartrefill.service.LoggingServiceAware;

        if $z0 == 0 goto label1;

        $r2 = (se.smartrefill.service.LoggingServiceAware) $r1;

        interfaceinvoke $r2.<se.smartrefill.service.LoggingServiceAware: void setLoggingService(se.smartrefill.service.LoggingService)>(null);

     label1:
        $z0 = $r1 instanceof se.smartrefill.service.UserTraceServiceAware;

        if $z0 == 0 goto label2;

        $r3 = (se.smartrefill.service.UserTraceServiceAware) $r1;

        interfaceinvoke $r3.<se.smartrefill.service.UserTraceServiceAware: void setUserTraceService(se.smartrefill.service.UserTraceService)>(null);

     label2:
        $z0 = $r1 instanceof se.smartrefill.service.CacheServiceAware;

        if $z0 == 0 goto label3;

        $r4 = (se.smartrefill.service.CacheServiceAware) $r1;

        interfaceinvoke $r4.<se.smartrefill.service.CacheServiceAware: void setCacheService(se.smartrefill.service.CacheService)>(null);

     label3:
        return;
    }

    public int getAllowedCommandExecutionNetworkOutageDuration()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer1233;
        boolean $z0;
        int $i0, varReplacer1234;
        java.lang.Throwable $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer1233 = "allowedCommandExecutionNetworkOutageDurationInMs";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer1233);

        $z0 = staticinvoke <se.smartrefill.util.StringUtil: boolean isNotBlank(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

     label4:
        varReplacer1234 = 0;

        return varReplacer1234;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int getAllowedCommandExecutionRetriesOnNetworkErrors()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer1235;
        boolean $z0;
        int $i0, varReplacer1236;
        java.lang.Throwable $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer1235 = "allowedCommandExecutionRetriesOnNetworkErrors";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer1235);

        $z0 = staticinvoke <se.smartrefill.util.StringUtil: boolean isNotBlank(java.lang.String)>($r1);

        if $z0 == 0 goto label4;

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

     label4:
        varReplacer1236 = 0;

        return varReplacer1236;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public abstract int getApiVersion();

    public java.lang.String getApplicationId()
    {
        se.smartrefill.AbstractApplication $r0;
        android.content.pm.PackageManager $r1;
        java.lang.String $r2, varReplacer1240, varReplacer1241;
        android.content.pm.PackageInfo $r3;
        java.lang.Throwable $r4;
        int varReplacer1242;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

     label1:
        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getPackageName()>();

        varReplacer1242 = 128;

        $r3 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r2, varReplacer1242);

     label2:
        $r2 = $r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        return $r2;

     label3:
        $r4 := @caughtexception;

        varReplacer1241 = "Failed to retrieve the application id";

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logInfo(java.lang.String)>(varReplacer1241);

        varReplacer1240 = "";

        return varReplacer1240;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public int getApplicationVersion()
    {
        se.smartrefill.AbstractApplication $r0;
        android.content.pm.PackageManager $r1;
        java.lang.String $r2;
        android.content.pm.PackageInfo $r3;
        java.lang.Throwable $r4;
        int i0;

        $r0 := @this: se.smartrefill.AbstractApplication;

     label1:
        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r2, 128);

     label2:
        i0 = $r3.<android.content.pm.PackageInfo: int versionCode>;

        return i0;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logInfo(java.lang.String)>("Failed to retrieve the version number");

        return 0;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public java.lang.String getApplicationVersionName()
    {
        se.smartrefill.AbstractApplication $r0;
        android.content.pm.PackageManager $r1;
        java.lang.String $r2;
        android.content.pm.PackageInfo $r3;
        java.lang.Throwable $r4;

        $r0 := @this: se.smartrefill.AbstractApplication;

     label1:
        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r2, 128);

     label2:
        $r2 = $r3.<android.content.pm.PackageInfo: java.lang.String versionName>;

        return $r2;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logInfo(java.lang.String)>("Failed to retrieve the version name");

        return "";

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public java.lang.String getBaseUrl()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>("baseUrl");

        return $r1;
    }

    public se.smartrefill.service.CacheService getCacheService()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.CacheService r1;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.CacheService cacheService>;

        return r1;
    }

    public se.smartrefill.command.CommandPublisher getCommandPublisher()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.CommandPublisher r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandPublisher commandPublisher>;

        return r1;
    }

    public int getConnectionTimeout()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer2816;
        int $i0, varReplacer2815;
        java.lang.Exception $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2816 = "timeoutConnect";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer2816);

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        varReplacer2815 = 0;

        return varReplacer2815;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public se.smartrefill.service.ContextService getContextService()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.ContextService r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.ContextService contextService>;

        return r1;
    }

    public abstract java.lang.String getCountryCode();

    public abstract java.lang.String getCustomerOwner();

    public abstract se.smartrefill.service.CustomerService getCustomerService();

    protected int getDensityDpi()
    {
        se.smartrefill.AbstractApplication $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int i0;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r2.<android.util.DisplayMetrics: int densityDpi>;

        return i0;
    }

    public java.lang.String getDeviceId()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.InformationService $r1;
        java.lang.String $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.InformationService getInformationService()>();

        $r2 = interfaceinvoke $r1.<se.smartrefill.service.InformationService: java.lang.String getDeviceId()>();

        return $r2;
    }

    protected java.lang.String getFacebookAppId()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>("facebookAppId");

        return $r1;
    }

    protected java.lang.String getFacebookAppSecret()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>("facebookAppSecret");

        return $r1;
    }

    protected java.lang.Integer getGoogleAnalyticsConfigurationFileId()
    {
        se.smartrefill.AbstractApplication $r0;

        $r0 := @this: se.smartrefill.AbstractApplication;

        return null;
    }

    public java.lang.String getGoogleApiKey()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>("googleApiKey");

        return $r1;
    }

    public java.lang.String getGoogleMapsKey()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>("googleMapsKey");

        return $r1;
    }

    public java.lang.String getGoogleProjectId()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer2056;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2056 = "googleProjectId";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer2056);

        return $r1;
    }

    public java.lang.String getGoogleProjectNumber()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer2072;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2072 = "googleProjectNumber";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer2072);

        return $r1;
    }

    public se.smartrefill.service.HistoricalCommandService getHistoricalCommandService()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.HistoricalCommandService r1;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.HistoricalCommandService historicalCommandService>;

        return r1;
    }

    public abstract se.smartrefill.service.InformationService getInformationService();

    public java.lang.String getInstitute()
    {
        se.smartrefill.AbstractApplication $r0;

        $r0 := @this: se.smartrefill.AbstractApplication;

        return null;
    }

    public abstract java.lang.String getLanguageCode();

    public java.lang.Integer getLocalSessionMillis()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer1642;
        java.lang.Integer $r2;
        java.lang.Exception $r3;
        null_type varReplacer1643;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

     label1:
        varReplacer1642 = "localSessionMillis";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer1642);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        varReplacer1643 = null;

        return varReplacer1643;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public se.smartrefill.service.LocalSessionService getLocalSessionService()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.LocalSessionService r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LocalSessionService localSessionService>;

        return r1;
    }

    protected abstract java.lang.String getLogTag();

    public se.smartrefill.service.LoggingService getLoggingService()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.LoggingService r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        return r1;
    }

    public long getMaxCommandNotificationAgeMillis()
    {
        se.smartrefill.AbstractApplication $r0;

        $r0 := @this: se.smartrefill.AbstractApplication;

        return 3600000L;
    }

    public se.smartrefill.service.NetworkStatusService getNetworkStatusService()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.NetworkStatusService r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.NetworkStatusService networkStatusService>;

        return r1;
    }

    protected com.fasterxml.jackson.databind.ObjectMapper getObjectMapper()
    {
        se.smartrefill.AbstractApplication $r0;
        com.fasterxml.jackson.databind.ObjectMapper $r1;
        com.fasterxml.jackson.databind.DeserializationFeature $r2;
        com.fasterxml.jackson.'annotation'.JsonInclude$Include $r3;
        int varReplacer1223;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = $r0.<se.smartrefill.AbstractApplication: com.fasterxml.jackson.databind.ObjectMapper objectMapper>;

        if $r1 != null goto label1;

        $r1 = new com.fasterxml.jackson.databind.ObjectMapper;

        specialinvoke $r1.<com.fasterxml.jackson.databind.ObjectMapper: void <init>()>();

        $r0.<se.smartrefill.AbstractApplication: com.fasterxml.jackson.databind.ObjectMapper objectMapper> = $r1;

        $r1 = $r0.<se.smartrefill.AbstractApplication: com.fasterxml.jackson.databind.ObjectMapper objectMapper>;

        $r2 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNKNOWN_PROPERTIES>;

        varReplacer1223 = 0;

        virtualinvoke $r1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean)>($r2, varReplacer1223);

        $r1 = $r0.<se.smartrefill.AbstractApplication: com.fasterxml.jackson.databind.ObjectMapper objectMapper>;

        $r3 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include NON_NULL>;

        virtualinvoke $r1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper setSerializationInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Include)>($r3);

     label1:
        $r1 = $r0.<se.smartrefill.AbstractApplication: com.fasterxml.jackson.databind.ObjectMapper objectMapper>;

        return $r1;
    }

    public se.smartrefill.command.PersistentCommandProxy getPersistentCommandProxy(se.smartrefill.command.CommandListener)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.CommandListener $r1;
        se.smartrefill.repository.HistoricalCommandRepository $r2;
        boolean $z0;
        se.smartrefill.command.PersistentCommandProxy $r3;
        long $l0;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.command.CommandListener;

        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isPersistentCommandProxyUsed()>();

        if $z0 == 0 goto label1;

        $r3 = new se.smartrefill.command.PersistentCommandProxy;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.repository.HistoricalCommandRepository historicalCommandRepository>;

        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isDebug()>();

        specialinvoke $r3.<se.smartrefill.command.PersistentCommandProxy: void <init>(se.smartrefill.AbstractApplication,se.smartrefill.command.CommandListener,se.smartrefill.repository.HistoricalCommandRepository,boolean)>($r0, $r1, $r2, $z0);

        $l0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: long getMaxCommandNotificationAgeMillis()>();

        virtualinvoke $r3.<se.smartrefill.command.PersistentCommandProxy: void setMaxNotificationAgeMillis(long)>($l0);

        return $r3;

     label1:
        return null;
    }

    public java.net.HttpCookie getPrimaryHttpClientsCookie(java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        java.net.HttpCookie $r2;
        com.squareup.okhttp.OkHttpClient $r3;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient primaryHttpClient>;

        $r2 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.net.HttpCookie getCookieFromHttpClient(com.squareup.okhttp.OkHttpClient,java.lang.String)>($r3, $r1);

        return $r2;
    }

    public java.net.CookieStore getPrimaryHttpClientsCookieStore()
    {
        se.smartrefill.AbstractApplication $r0;
        java.net.CookieStore $r1;
        com.squareup.okhttp.OkHttpClient $r2;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r2 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient primaryHttpClient>;

        $r1 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.net.CookieStore getCookieStoreFromHttpClient(com.squareup.okhttp.OkHttpClient)>($r2);

        return $r1;
    }

    public java.util.List getPrimaryHttpClientsCookies()
    {
        se.smartrefill.AbstractApplication $r0;
        java.util.List $r1;
        com.squareup.okhttp.OkHttpClient $r2;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r2 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient primaryHttpClient>;

        $r1 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.util.List getCookiesCopyFromHttpClient(com.squareup.okhttp.OkHttpClient)>($r2);

        return $r1;
    }

    public java.lang.String getProperty(java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        null_type varReplacer1417;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        varReplacer1417 = null;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String,java.lang.String)>($r1, varReplacer1417);

        return $r1;
    }

    public java.lang.String getProperty(java.lang.String, java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, $r2, $r3, $r4;
        boolean $z0;
        java.util.Properties $r5;
        java.lang.StringBuilder $r6;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = null;

        $r4 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getPropertyKeyPrefix()>();

        $z0 = staticinvoke <se.smartrefill.util.StringUtil: boolean isNotBlank(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r5 = $r0.<se.smartrefill.AbstractApplication: java.util.Properties prop>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getPropertyKeyPrefix()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r3);

     label1:
        if $r3 != null goto label2;

        $r5 = $r0.<se.smartrefill.AbstractApplication: java.util.Properties prop>;

        $r1 = virtualinvoke $r5.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>($r1, $r2);

        return $r1;

     label2:
        return $r3;
    }

    public java.lang.String getPropertyKeyPrefix()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        se.smartrefill.service.PropertyService $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.PropertyService propertyService>;

        $r1 = interfaceinvoke $r2.<se.smartrefill.service.PropertyService: java.lang.String getPropertyKeyPrefix()>();

        return $r1;
    }

    public se.smartrefill.service.PushService getPushService()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.PushService r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.PushService pushService>;

        return r1;
    }

    public abstract int getRestVersion();

    public java.net.HttpCookie getSecondaryHttpClientsCookie(java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        java.net.HttpCookie $r2;
        com.squareup.okhttp.OkHttpClient $r3;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient secondaryHttpClient>;

        $r2 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.net.HttpCookie getCookieFromHttpClient(com.squareup.okhttp.OkHttpClient,java.lang.String)>($r3, $r1);

        return $r2;
    }

    public java.net.CookieStore getSecondaryHttpClientsCookieStore()
    {
        se.smartrefill.AbstractApplication $r0;
        java.net.CookieStore $r1;
        com.squareup.okhttp.OkHttpClient $r2;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r2 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient secondaryHttpClient>;

        $r1 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.net.CookieStore getCookieStoreFromHttpClient(com.squareup.okhttp.OkHttpClient)>($r2);

        return $r1;
    }

    public java.util.List getSecondaryHttpClientsCookies()
    {
        se.smartrefill.AbstractApplication $r0;
        java.util.List $r1;
        com.squareup.okhttp.OkHttpClient $r2;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r2 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient secondaryHttpClient>;

        $r1 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.util.List getCookiesCopyFromHttpClient(com.squareup.okhttp.OkHttpClient)>($r2);

        return $r1;
    }

    public java.lang.String getSecureBaseUrl()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>("secureBaseUrl");

        return $r1;
    }

    public abstract java.lang.String getServiceName();

    public int getSocketTimeout()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer2818;
        int $i0, varReplacer2817;
        java.lang.Exception $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2818 = "timeoutSocket";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer2818);

     label1:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        varReplacer2817 = 0;

        return varReplacer2817;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public abstract java.lang.Class getStartActivity();

    public se.smartrefill.service.TimerService getTimerService()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.TimerService r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.TimerService timerService>;

        return r1;
    }

    public se.smartrefill.service.UserTraceService getUserTraceService()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.UserTraceService r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.UserTraceService userTraceService>;

        return r1;
    }

    protected void injectServices(se.smartrefill.command.Command)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.Command $r1;
        boolean $z0;
        se.smartrefill.command.AbstractHttpCommand $r2;
        java.lang.String $r3;
        com.squareup.okhttp.OkHttpClient $r4;
        se.smartrefill.command.rest.AbstractRestCommand $r5;
        int $i0;
        se.smartrefill.service.LoggingServiceAware $r6;
        se.smartrefill.service.LoggingService $r7;
        se.smartrefill.service.UserTraceService $r8;
        se.smartrefill.service.UserTraceServiceAware $r9;
        se.smartrefill.service.CacheServiceAware $r10;
        se.smartrefill.service.CacheService $r11;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.command.Command;

        $z0 = $r1 instanceof se.smartrefill.command.AbstractHttpCommand;

        if $z0 == 0 goto label1;

        $r2 = (se.smartrefill.command.AbstractHttpCommand) $r1;

        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isDebug()>();

        virtualinvoke $r2.<se.smartrefill.command.AbstractHttpCommand: void setDebug(boolean)>($z0);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getLogTag()>();

        virtualinvoke $r2.<se.smartrefill.command.AbstractHttpCommand: void setLogTag(java.lang.String)>($r3);

        $z0 = interfaceinvoke $r1.<se.smartrefill.command.Command: boolean isPrimaryExecution()>();

        if $z0 == 0 goto label5;

        $r4 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient primaryHttpClient>;

        virtualinvoke $r2.<se.smartrefill.command.AbstractHttpCommand: void setHttpClient(com.squareup.okhttp.OkHttpClient)>($r4);

     label1:
        $z0 = $r1 instanceof se.smartrefill.command.rest.AbstractRestCommand;

        if $z0 == 0 goto label2;

        $r5 = (se.smartrefill.command.rest.AbstractRestCommand) $r1;

        $i0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: int getApiVersion()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setApiVersion(int)>($i0);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getApplicationId()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setApplicationId(java.lang.String)>($r3);

        $i0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: int getApplicationVersion()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setApplicationVersion(int)>($i0);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getApplicationVersionName()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setApplicationVersionName(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getBaseUrl()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setBaseUrl(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getCountryCode()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setCountryCode(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getCustomerOwner()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setCustomerOwner(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getDeviceId()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setDeviceId(java.lang.String)>($r3);

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setInflow(java.lang.String)>("Android");

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getInstitute()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setInstitute(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getLanguageCode()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setLanguage(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getSecureBaseUrl()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setSecureBaseUrl(java.lang.String)>($r3);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getServiceName()>();

        virtualinvoke $r5.<se.smartrefill.command.rest.AbstractRestCommand: void setServiceName(java.lang.String)>($r3);

     label2:
        $z0 = $r1 instanceof se.smartrefill.service.LoggingServiceAware;

        if $z0 == 0 goto label3;

        $r6 = (se.smartrefill.service.LoggingServiceAware) $r1;

        $r7 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        interfaceinvoke $r6.<se.smartrefill.service.LoggingServiceAware: void setLoggingService(se.smartrefill.service.LoggingService)>($r7);

     label3:
        $z0 = $r1 instanceof se.smartrefill.service.UserTraceServiceAware;

        if $z0 == 0 goto label4;

        $r8 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.UserTraceService userTraceService>;

        if $r8 == null goto label4;

        $r9 = (se.smartrefill.service.UserTraceServiceAware) $r1;

        $r8 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.UserTraceService userTraceService>;

        interfaceinvoke $r9.<se.smartrefill.service.UserTraceServiceAware: void setUserTraceService(se.smartrefill.service.UserTraceService)>($r8);

     label4:
        $z0 = $r1 instanceof se.smartrefill.service.CacheServiceAware;

        if $z0 == 0 goto label6;

        $r10 = (se.smartrefill.service.CacheServiceAware) $r1;

        $r11 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.CacheService cacheService>;

        interfaceinvoke $r10.<se.smartrefill.service.CacheServiceAware: void setCacheService(se.smartrefill.service.CacheService)>($r11);

        return;

     label5:
        $r4 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient secondaryHttpClient>;

        virtualinvoke $r2.<se.smartrefill.command.AbstractHttpCommand: void setHttpClient(com.squareup.okhttp.OkHttpClient)>($r4);

        goto label1;

     label6:
        return;
    }

    public boolean isCrashlyticsUsed()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer1237;
        boolean $z0;
        int varReplacer1238, varReplacer1239;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer1237 = "useCrashlytics";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer1237);

        $z0 = staticinvoke <se.smartrefill.util.StringUtil: boolean isNotBlank(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        varReplacer1238 = 1;

        return varReplacer1238;

     label1:
        varReplacer1239 = 0;

        return varReplacer1239;
    }

    public boolean isDebug()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer1229;
        boolean $z0;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer1229 = "debug";

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>(varReplacer1229);

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r1);

        return $z0;
    }

    protected boolean isGoogleAnalyticsUsed()
    {
        se.smartrefill.AbstractApplication $r0;
        int varReplacer2075;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        varReplacer2075 = 1;

        return varReplacer2075;
    }

    public boolean isHierarchyViewServerEnabled()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        boolean $z0;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getProperty(java.lang.String)>("hierarchyViewServer");

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r1);

        return $z0;
    }

    public boolean isPersistentCommandProxyUsed()
    {
        se.smartrefill.AbstractApplication $r0;

        $r0 := @this: se.smartrefill.AbstractApplication;

        return 1;
    }

    protected abstract boolean isPushUsed();

    public void logDebug(java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        boolean $z0;
        se.smartrefill.service.LoggingService $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isDebug()>();

        if $z0 == 0 goto label1;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        interfaceinvoke $r2.<se.smartrefill.service.LoggingService: void logDebug(java.lang.String)>($r1);

     label1:
        return;
    }

    public void logDebug(java.lang.String, java.lang.Throwable)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        boolean $z0;
        se.smartrefill.service.LoggingService $r3;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isDebug()>();

        if $z0 == 0 goto label1;

        $r3 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        interfaceinvoke $r3.<se.smartrefill.service.LoggingService: void logDebug(java.lang.String,java.lang.Throwable)>($r1, $r2);

     label1:
        return;
    }

    public void logError(java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        se.smartrefill.service.LoggingService $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        interfaceinvoke $r2.<se.smartrefill.service.LoggingService: void logError(java.lang.String)>($r1);

        return;
    }

    public void logError(java.lang.String, java.lang.Throwable)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer3130;
        java.lang.Throwable $r2;
        se.smartrefill.service.LoggingService $r3;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        varReplacer3130 = "Failed to load properties";

        interfaceinvoke $r3.<se.smartrefill.service.LoggingService: void logError(java.lang.String,java.lang.Throwable)>(varReplacer3130, $r2);

        return;
    }

    public void logInfo(java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer1416;
        se.smartrefill.service.LoggingService $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        varReplacer1416 = "Failed to retrieve the application id";

        interfaceinvoke $r2.<se.smartrefill.service.LoggingService: void logInfo(java.lang.String)>(varReplacer1416);

        return;
    }

    public void logInfo(java.lang.String, java.lang.Throwable)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        se.smartrefill.service.LoggingService $r3;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        interfaceinvoke $r3.<se.smartrefill.service.LoggingService: void logInfo(java.lang.String,java.lang.Throwable)>($r1, $r2);

        return;
    }

    public void logWarn(java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1, varReplacer2076;
        se.smartrefill.service.LoggingService $r2;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        varReplacer2076 = "Ok, so you have decided that your app should not use Google Analytics. That\'s fine! But why do you have GA properties (such as \'googleAnalyticsKey\') in settings.properties. You should remove those GA properties!";

        interfaceinvoke $r2.<se.smartrefill.service.LoggingService: void logWarn(java.lang.String)>(varReplacer2076);

        return;
    }

    public void logWarn(java.lang.String, java.lang.Throwable)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        se.smartrefill.service.LoggingService $r3;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        $r3 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        interfaceinvoke $r3.<se.smartrefill.service.LoggingService: void logWarn(java.lang.String,java.lang.Throwable)>($r1, $r2);

        return;
    }

    public void onCreate()
    {
        se.smartrefill.AbstractApplication $r0;
        java.util.Properties $r1;
        java.lang.String $r2, varReplacer1217;
        com.fasterxml.jackson.databind.ObjectMapper $r3;
        se.smartrefill.command.multithreaded.PrioritizedMultiThreadedCommandExecutor $r4;
        boolean $z0;
        se.smartrefill.command.CommandExecutor $r5;
        se.smartrefill.service.LoggingService $r6;
        se.smartrefill.service.UserTraceService $r7;
        se.smartrefill.service.HistoricalCommandService $r8;
        se.smartrefill.service.CacheService $r9;
        se.smartrefill.service.NetworkStatusService $r10;
        se.smartrefill.command.CommandPublisher $r11;
        se.smartrefill.domain.AdDeviceAppProperties $r12;
        int $i0;
        java.lang.StringBuilder $r13;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        specialinvoke $r0.<android.app.Application: void onCreate()>();

        $r1 = $r0.<se.smartrefill.AbstractApplication: java.util.Properties prop>;

        $r2 = $r0.<se.smartrefill.AbstractApplication: java.lang.String settingsFileName>;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.util.Properties readProperties(java.util.Properties,java.lang.String)>($r1, $r2);

        $r3 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: com.fasterxml.jackson.databind.ObjectMapper getObjectMapper()>();

        $r0.<se.smartrefill.AbstractApplication: com.fasterxml.jackson.databind.ObjectMapper objectMapper> = $r3;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void onPreSetupServices()>();

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void setupServices()>();

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void onPostSetupServices()>();

        $r4 = new se.smartrefill.command.multithreaded.PrioritizedMultiThreadedCommandExecutor;

        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isDebug()>();

        specialinvoke $r4.<se.smartrefill.command.multithreaded.PrioritizedMultiThreadedCommandExecutor: void <init>(boolean)>($z0);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor> = $r4;

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r6 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setLoggingService(se.smartrefill.service.LoggingService)>($r6);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r7 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.UserTraceService userTraceService>;

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setUserTraceService(se.smartrefill.service.UserTraceService)>($r7);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r8 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.HistoricalCommandService historicalCommandService>;

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setHistoricalCommandService(se.smartrefill.service.HistoricalCommandService)>($r8);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r9 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.CacheService cacheService>;

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setCacheService(se.smartrefill.service.CacheService)>($r9);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r10 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.NetworkStatusService networkStatusService>;

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setNetworkStatusService(se.smartrefill.service.NetworkStatusService)>($r10);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r11 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandPublisher commandPublisher>;

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setCommandPublisher(se.smartrefill.command.CommandPublisher)>($r11);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r3 = $r0.<se.smartrefill.AbstractApplication: com.fasterxml.jackson.databind.ObjectMapper objectMapper>;

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper)>($r3);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r12 = specialinvoke $r0.<se.smartrefill.AbstractApplication: se.smartrefill.domain.AdDeviceAppProperties getDeviceAppProperties()>();

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setDeviceAppProperties(se.smartrefill.domain.AdDeviceAppProperties)>($r12);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $i0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: int getAllowedCommandExecutionNetworkOutageDuration()>();

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setAllowedNetworkOutageDurationInMsBeforeFail(int)>($i0);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $i0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: int getAllowedCommandExecutionRetriesOnNetworkErrors()>();

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void setAllowedRetriesOnNetworkErrors(int)>($i0);

        $r5 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        interfaceinvoke $r5.<se.smartrefill.command.CommandExecutor: void start()>();

        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isCrashlyticsUsed()>();

        if $z0 == 0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        varReplacer1217 = "USING PACKAGE NAME ---------------------------------------------------------------------------------------------------> ";

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1217);

        $r2 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getApplicationId()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logDebug(java.lang.String)>($r2);

     label1:
        return;
    }

    protected void onPostSetupServices()
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        se.smartrefill.service.PushService $r2;
        com.squareup.okhttp.OkHttpClient $r3;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.PushService pushService>;

        if $r2 == null goto label1;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.PushService pushService>;

        $r1 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getDeviceId()>();

        interfaceinvoke $r2.<se.smartrefill.service.PushService: void setDeviceId(java.lang.String)>($r1);

     label1:
        $r3 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient primaryHttpClient>;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void configPrimaryHttpClient(com.squareup.okhttp.OkHttpClient)>($r3);

        $r3 = $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient secondaryHttpClient>;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void configSecondaryHttpClient(com.squareup.okhttp.OkHttpClient)>($r3);

        return;
    }

    protected void onPreSetupServices()
    {
        se.smartrefill.AbstractApplication $r0;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        return;
    }

    public void onTerminate()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.CommandExecutor $r1;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        specialinvoke $r0.<android.app.Application: void onTerminate()>();

        $r1 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        interfaceinvoke $r1.<se.smartrefill.command.CommandExecutor: void stop()>();

        return;
    }

    public java.lang.String pushCommandInternal(se.smartrefill.command.Command)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.Command $r1;
        java.lang.String $r2;
        boolean $z0;
        se.smartrefill.command.AggregatedCommand $r3;
        se.smartrefill.command.CommandExecutor $r4;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.command.Command;

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void injectServices(se.smartrefill.command.Command)>($r1);

        $z0 = $r1 instanceof se.smartrefill.command.AggregatedCommand;

        if $z0 == 0 goto label1;

        $r3 = (se.smartrefill.command.AggregatedCommand) $r1;

        specialinvoke $r0.<se.smartrefill.AbstractApplication: void injectServicesNested(se.smartrefill.command.AggregatedCommand)>($r3);

     label1:
        $r4 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        $r2 = interfaceinvoke $r4.<se.smartrefill.command.CommandExecutor: java.lang.String pushCommand(se.smartrefill.command.Command)>($r1);

        return $r2;
    }

    protected java.util.Properties readProperties(java.util.Properties, java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.util.Properties $r1, $r3;
        java.lang.String $r2, varReplacer1222;
        java.lang.ClassLoader $r4;
        java.io.InputStream $r5;
        java.lang.Throwable $r6, $r7;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.util.Properties;

        $r2 := @parameter1: java.lang.String;

        if $r1 != null goto label09;

        $r3 = new java.util.Properties;

     label01:
        specialinvoke $r3.<java.util.Properties: void <init>()>();

     label02:
        $r4 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.ClassLoader getClassLoader()>();

        $r5 = virtualinvoke $r4.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>($r2);

     label03:
        if $r5 == null goto label10;

     label04:
        virtualinvoke $r3.<java.util.Properties: void load(java.io.InputStream)>($r5);

     label05:
        return $r3;

     label06:
        $r6 := @caughtexception;

        $r7 = $r6;

        $r3 = $r1;

     label07:
        varReplacer1222 = "Failed to load properties";

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logError(java.lang.String,java.lang.Throwable)>(varReplacer1222, $r7);

        return $r3;

     label08:
        $r7 := @caughtexception;

        goto label07;

     label09:
        $r3 = $r1;

        goto label02;

     label10:
        return $r3;

        catch java.io.IOException from label01 to label02 with label06;
        catch java.io.IOException from label02 to label03 with label08;
        catch java.io.IOException from label04 to label05 with label08;
    }

    public void removeCommandListener(se.smartrefill.command.CommandListener)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.CommandListener $r1;
        se.smartrefill.command.CommandExecutor $r2;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.command.CommandListener;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        interfaceinvoke $r2.<se.smartrefill.command.CommandExecutor: void removeCommandListener(se.smartrefill.command.CommandListener)>($r1);

        return;
    }

    public void replaceCommandListener(se.smartrefill.command.CommandListener, se.smartrefill.command.CommandListener)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.command.CommandListener $r1, $r2;
        se.smartrefill.command.CommandExecutor $r3;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.command.CommandListener;

        $r2 := @parameter1: se.smartrefill.command.CommandListener;

        $r3 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandExecutor commandExecutor>;

        interfaceinvoke $r3.<se.smartrefill.command.CommandExecutor: void replaceCommandListener(se.smartrefill.command.CommandListener,se.smartrefill.command.CommandListener)>($r1, $r2);

        return;
    }

    public void setLocalSessionService(se.smartrefill.service.LocalSessionService)
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.service.LocalSessionService $r1;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: se.smartrefill.service.LocalSessionService;

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LocalSessionService localSessionService> = $r1;

        return;
    }

    public void setPropertyKeyPrefix(java.lang.String)
    {
        se.smartrefill.AbstractApplication $r0;
        java.lang.String $r1;
        se.smartrefill.service.PropertyService $r2;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.PropertyService propertyService>;

        interfaceinvoke $r2.<se.smartrefill.service.PropertyService: void setPropertyKeyPrefix(java.lang.String)>($r1);

        return;
    }

    protected void setupServices()
    {
        se.smartrefill.AbstractApplication $r0;
        se.smartrefill.repository.file.FileUserTraceRepository $r1;
        se.smartrefill.repository.file.FileCacheRepository $r2;
        se.smartrefill.repository.file.FilePropertyRepository $r3;
        java.lang.String $r4, $r7, varReplacer1724, varReplacer1725, varReplacer1727, varReplacer1728, varReplacer1730, varReplacer1732, varReplacer1733, varReplacer1734, varReplacer1735;
        se.smartrefill.service.impl.PropertyServiceImpl $r5;
        se.smartrefill.service.impl.LoggingServiceImpl $r6;
        boolean $z0;
        java.lang.IllegalStateException $r8;
        com.squareup.okhttp.OkHttpClient $r9;
        se.smartrefill.repository.memory.InMemoryHistoricalCommandRepository $r10;
        se.smartrefill.command.CommandPublisherImpl $r11;
        se.smartrefill.service.impl.ContextServiceImpl $r12;
        se.smartrefill.service.impl.PushServiceImpl $r13;
        se.smartrefill.command.CommandPublisher $r14;
        se.smartrefill.service.LoggingService $r15;
        int $i0, varReplacer1726, varReplacer1731, varReplacer1736;
        se.smartrefill.service.impl.JavaUtilTimerService $r16;
        se.smartrefill.service.impl.HistoricalCommandServiceImpl $r17;
        se.smartrefill.repository.HistoricalCommandRepository $r18;
        se.smartrefill.service.impl.CacheServiceImpl $r19;
        se.smartrefill.service.CacheService $r20;
        java.util.Map $r21;
        se.smartrefill.service.impl.NetworkStatusServiceImpl $r22;
        android.content.Context $r23;
        java.lang.Integer $r24;
        java.util.Properties $r25;
        se.smartrefill.service.impl.GoogleAnalyticsV4UserTraceService $r26;
        se.smartrefill.service.UserTraceService $r27;
        null_type varReplacer1729;

        nop;

        $r0 := @this: se.smartrefill.AbstractApplication;

        $r3 = new se.smartrefill.repository.file.FilePropertyRepository;

        $r4 = "SCSB";

        varReplacer1727 = "SCSB";

        specialinvoke $r3.<se.smartrefill.repository.file.FilePropertyRepository: void <init>(android.content.Context,java.lang.String)>($r0, varReplacer1727);

        $r5 = new se.smartrefill.service.impl.PropertyServiceImpl;

        specialinvoke $r5.<se.smartrefill.service.impl.PropertyServiceImpl: void <init>(se.smartrefill.repository.PropertyRepository)>($r3);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.PropertyService propertyService> = $r5;

        $r6 = new se.smartrefill.service.impl.LoggingServiceImpl;

        $r4 = "SCSB";

        $r7 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getLogLevel()>();

        varReplacer1724 = "SCSB";

        specialinvoke $r6.<se.smartrefill.service.impl.LoggingServiceImpl: void <init>(java.lang.String,java.lang.String)>(varReplacer1724, $r7);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService> = $r6;

        $r4 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getGoogleProjectId()>();

        $z0 = staticinvoke <se.smartrefill.util.StringUtil: boolean isNotBlank(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        varReplacer1734 = "\n\t|\n\t|\n\t|\n\t|\n\t|\n\t|\n\t|\n\t|\n\t|\n\t|\n\t|\n\t|\n\t+----------------------> Found property \'googleProjectId\' in settings.properties. It must be named \'googleProjectNumber\'! Rinse and repeat!";

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>(varReplacer1734);

        throw $r8;

     label1:
        $r9 = specialinvoke $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient setupHttpClient()>();

        $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient primaryHttpClient> = $r9;

        $r9 = specialinvoke $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient setupHttpClient()>();

        $r0.<se.smartrefill.AbstractApplication: com.squareup.okhttp.OkHttpClient secondaryHttpClient> = $r9;

        $r1 = new se.smartrefill.repository.file.FileUserTraceRepository;

        $r4 = "SCSB";

        varReplacer1728 = "SCSB";

        specialinvoke $r1.<se.smartrefill.repository.file.FileUserTraceRepository: void <init>(android.content.Context,java.lang.String)>($r0, varReplacer1728);

        $r10 = new se.smartrefill.repository.memory.InMemoryHistoricalCommandRepository;

        specialinvoke $r10.<se.smartrefill.repository.memory.InMemoryHistoricalCommandRepository: void <init>()>();

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.repository.HistoricalCommandRepository historicalCommandRepository> = $r10;

        $r2 = new se.smartrefill.repository.file.FileCacheRepository;

        $r4 = "SCSB";

        varReplacer1732 = "SCSB";

        specialinvoke $r2.<se.smartrefill.repository.file.FileCacheRepository: void <init>(android.content.Context,java.lang.String)>($r0, varReplacer1732);

        $r11 = new se.smartrefill.command.CommandPublisherImpl;

        specialinvoke $r11.<se.smartrefill.command.CommandPublisherImpl: void <init>(se.smartrefill.AbstractApplication)>($r0);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandPublisher commandPublisher> = $r11;

        $r12 = new se.smartrefill.service.impl.ContextServiceImpl;

        specialinvoke $r12.<se.smartrefill.service.impl.ContextServiceImpl: void <init>(android.content.Context)>($r0);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.ContextService contextService> = $r12;

        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isPushUsed()>();

        if $z0 == 0 goto label2;

        $r13 = new se.smartrefill.service.impl.PushServiceImpl;

        $r4 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getGoogleProjectNumber()>();

        $r7 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getApplicationId()>();

        $r14 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandPublisher commandPublisher>;

        $r15 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        $i0 = 1;

        varReplacer1736 = 1;

        specialinvoke $r13.<se.smartrefill.service.impl.PushServiceImpl: void <init>(android.content.Context,java.lang.String,java.lang.String,se.smartrefill.command.CommandPublisher,se.smartrefill.service.LoggingService,int)>($r0, $r4, $r7, $r14, $r15, varReplacer1736);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.PushService pushService> = $r13;

     label2:
        $r16 = new se.smartrefill.service.impl.JavaUtilTimerService;

        specialinvoke $r16.<se.smartrefill.service.impl.JavaUtilTimerService: void <init>()>();

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.TimerService timerService> = $r16;

        $r17 = new se.smartrefill.service.impl.HistoricalCommandServiceImpl;

        $r18 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.repository.HistoricalCommandRepository historicalCommandRepository>;

        specialinvoke $r17.<se.smartrefill.service.impl.HistoricalCommandServiceImpl: void <init>(se.smartrefill.repository.HistoricalCommandRepository)>($r18);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.HistoricalCommandService historicalCommandService> = $r17;

        $r19 = new se.smartrefill.service.impl.CacheServiceImpl;

        specialinvoke $r19.<se.smartrefill.service.impl.CacheServiceImpl: void <init>(se.smartrefill.repository.CacheRepository)>($r2);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.CacheService cacheService> = $r19;

        $r20 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.CacheService cacheService>;

        $r21 = <se.smartrefill.domain.AdDataVersionKey: java.util.Map KEYS>;

        interfaceinvoke $r20.<se.smartrefill.service.CacheService: void addClientServerKeyMappings(java.util.Map)>($r21);

        $r22 = new se.smartrefill.service.impl.NetworkStatusServiceImpl;

        $r23 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: android.content.Context getApplicationContext()>();

        specialinvoke $r22.<se.smartrefill.service.impl.NetworkStatusServiceImpl: void <init>(android.content.Context)>($r23);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.NetworkStatusService networkStatusService> = $r22;

        $r4 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getGoogleAnalyticsKey()>();

        $z0 = staticinvoke <se.smartrefill.util.StringUtil: boolean isNotBlank(java.lang.String)>($r4);

        if $z0 == 0 goto label4;

        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isGoogleAnalyticsUsed()>();

        if $z0 == 0 goto label3;

        varReplacer1733 = "Exiting app! You have configured the property \'googleAnalyticsKey\' in settings.properties. CoreAndroid-5.1 and above requires that the app uses v. 4 of GA. You see how to upgrade to v. 4 of GA in CoreAndroid:doc/changelog.txt under version 4.6.4";

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logError(java.lang.String)>(varReplacer1733);

        varReplacer1726 = 1;

        staticinvoke <java.lang.System: void exit(int)>(varReplacer1726);

        return;

     label3:
        varReplacer1725 = "Ok, so you have decided that your app should not use Google Analytics. That\'s fine! But why do you have GA properties (such as \'googleAnalyticsKey\') in settings.properties. You should remove those GA properties!";

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logWarn(java.lang.String)>(varReplacer1725);

        return;

     label4:
        $z0 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: boolean isGoogleAnalyticsUsed()>();

        if $z0 == 0 goto label6;

        $r24 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.Integer getGoogleAnalyticsConfigurationFileId()>();

        if $r24 == null goto label5;

        varReplacer1729 = null;

        varReplacer1730 = "usertracepoints.properties";

        $r25 = virtualinvoke $r0.<se.smartrefill.AbstractApplication: java.util.Properties readProperties(java.util.Properties,java.lang.String)>(varReplacer1729, varReplacer1730);

        $r26 = new se.smartrefill.service.impl.GoogleAnalyticsV4UserTraceService;

        $r15 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.LoggingService loggingService>;

        $r14 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.command.CommandPublisher commandPublisher>;

        $i0 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();

        specialinvoke $r26.<se.smartrefill.service.impl.GoogleAnalyticsV4UserTraceService: void <init>(se.smartrefill.service.LoggingService,se.smartrefill.command.CommandPublisher,se.smartrefill.repository.UserTraceRepository,java.util.Properties,int,android.content.Context)>($r15, $r14, $r1, $r25, $i0, $r0);

        $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.UserTraceService userTraceService> = $r26;

        $r27 = $r0.<se.smartrefill.AbstractApplication: se.smartrefill.service.UserTraceService userTraceService>;

        $r4 = specialinvoke $r0.<se.smartrefill.AbstractApplication: java.lang.String getGoogleAnalyticsCustomVariables()>();

        interfaceinvoke $r27.<se.smartrefill.service.UserTraceService: void setCustomVariables(java.lang.String)>($r4);

        return;

     label5:
        varReplacer1735 = "You have decided to use Google Analytics in this app (by returning true in AbstractApplication.isGoogleAnalyticsUsed()), but Google Analytics (v. 4) is not correctly setup! You see how to upgrade to v. 4 of GA in CoreAndroid:doc/changelog.txt under version 4.6.4";

        virtualinvoke $r0.<se.smartrefill.AbstractApplication: void logError(java.lang.String)>(varReplacer1735);

        varReplacer1731 = 1;

        staticinvoke <java.lang.System: void exit(int)>(varReplacer1731);

     label6:
        return;
    }
}
