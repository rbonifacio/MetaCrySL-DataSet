public class se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory extends javax.net.ssl.SSLSocketFactory
{
    private javax.net.ssl.SSLContext sc;
    private javax.net.ssl.SSLSocketFactory ssf;

    public void <init>()
    {
        se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.lang.Throwable $r3, $r4;
        java.security.NoSuchAlgorithmException r5;
        java.security.KeyManagementException r6;
        null_type varReplacer2795, varReplacer2796, varReplacer2797;
        java.lang.String varReplacer2798;

        nop;

        $r0 := @this: se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory;

        specialinvoke $r0.<javax.net.ssl.SSLSocketFactory: void <init>()>();

     label1:
        varReplacer2798 = "TLSv1.2";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2798);

     label2:
        $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLContext sc> = $r1;

        $r1 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLContext sc>;

        if $r1 == null goto label9;

        $r1 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLContext sc>;

     label3:
        varReplacer2795 = null;

        varReplacer2796 = null;

        varReplacer2797 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2795, varReplacer2795, varReplacer2795);

     label4:
        $r1 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLContext sc>;

     label5:
        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label6:
        $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLSocketFactory ssf> = $r2;

        return;

     label7:
        $r3 := @caughtexception;

        r5 = (java.security.NoSuchAlgorithmException) $r3;

        virtualinvoke r5.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return;

     label8:
        $r4 := @caughtexception;

        r6 = (java.security.KeyManagementException) $r4;

        virtualinvoke r6.<java.security.KeyManagementException: void printStackTrace()>();

     label9:
        return;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label7;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label7;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label7;
        catch java.security.KeyManagementException from label1 to label2 with label8;
        catch java.security.KeyManagementException from label3 to label4 with label8;
        catch java.security.KeyManagementException from label5 to label6 with label8;
    }

    public static boolean isSupported()
    {
        javax.net.ssl.SSLSocketFactory $r0;
        javax.net.ssl.SSLContext $r1;
        java.lang.Throwable $r2;
        int varReplacer2079, varReplacer2080;
        null_type varReplacer2081, varReplacer2082, varReplacer2083;
        java.lang.String varReplacer2084;

        nop;

        $r0 = null;

     label1:
        varReplacer2084 = "TLSv1.2";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2084);

     label2:
        if $r1 == null goto label4;

     label3:
        varReplacer2081 = null;

        varReplacer2082 = null;

        varReplacer2083 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2081, varReplacer2081, varReplacer2081);

        $r0 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label4:
        if $r0 == null goto label6;

        if $r1 == null goto label6;

        varReplacer2079 = 1;

        return varReplacer2079;

     label5:
        $r2 := @caughtexception;

     label6:
        varReplacer2080 = 0;

        return varReplacer2080;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException
    {
        se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory $r0;
        java.lang.String $r1;
        int $i0;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;
        javax.net.ssl.SSLSocket $r4;
        java.lang.String[] $r5;

        $r0 := @this: se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLSocketFactory ssf>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r1, $i0);

        $r4 = (javax.net.ssl.SSLSocket) $r3;

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedProtocols()>();

        virtualinvoke $r4.<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>($r5);

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedCipherSuites()>();

        virtualinvoke $r4.<javax.net.ssl.SSLSocket: void setEnabledCipherSuites(java.lang.String[])>($r5);

        return $r4;
    }

    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException
    {
        se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.net.InetAddress $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Socket $r4;
        javax.net.ssl.SSLSocket $r5;
        java.lang.String[] $r6;

        $r0 := @this: se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLSocketFactory ssf>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        $r5 = (javax.net.ssl.SSLSocket) $r4;

        $r6 = virtualinvoke $r5.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedProtocols()>();

        virtualinvoke $r5.<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>($r6);

        $r6 = virtualinvoke $r5.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedCipherSuites()>();

        virtualinvoke $r5.<javax.net.ssl.SSLSocket: void setEnabledCipherSuites(java.lang.String[])>($r6);

        return $r5;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int) throws java.io.IOException
    {
        se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory $r0;
        java.net.InetAddress $r1;
        int $i0;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;
        javax.net.ssl.SSLSocket $r4;
        java.lang.String[] $r5;

        $r0 := @this: se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory;

        $r1 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        $r2 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLSocketFactory ssf>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>($r1, $i0);

        $r4 = (javax.net.ssl.SSLSocket) $r3;

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedProtocols()>();

        virtualinvoke $r4.<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>($r5);

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedCipherSuites()>();

        virtualinvoke $r4.<javax.net.ssl.SSLSocket: void setEnabledCipherSuites(java.lang.String[])>($r5);

        return $r4;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int) throws java.io.IOException
    {
        se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory $r0;
        java.net.InetAddress $r1, $r2;
        int $i0, $i1;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Socket $r4;
        javax.net.ssl.SSLSocket $r5;
        java.lang.String[] $r6;

        $r0 := @this: se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory;

        $r1 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        $r3 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLSocketFactory ssf>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

        $r5 = (javax.net.ssl.SSLSocket) $r4;

        $r6 = virtualinvoke $r5.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedProtocols()>();

        virtualinvoke $r5.<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>($r6);

        $r6 = virtualinvoke $r5.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedCipherSuites()>();

        virtualinvoke $r5.<javax.net.ssl.SSLSocket: void setEnabledCipherSuites(java.lang.String[])>($r6);

        return $r5;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException
    {
        se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLSocketFactory $r3;
        javax.net.ssl.SSLSocket $r4;
        java.lang.String[] $r5;

        $r0 := @this: se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLSocketFactory ssf>;

        $r1 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        $r4 = (javax.net.ssl.SSLSocket) $r1;

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedProtocols()>();

        virtualinvoke $r4.<javax.net.ssl.SSLSocket: void setEnabledProtocols(java.lang.String[])>($r5);

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocket: java.lang.String[] getSupportedCipherSuites()>();

        virtualinvoke $r4.<javax.net.ssl.SSLSocket: void setEnabledCipherSuites(java.lang.String[])>($r5);

        return $r4;
    }

    public java.lang.String[] getDefaultCipherSuites()
    {
        se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory $r0;
        java.lang.String[] $r1;
        javax.net.ssl.SSLSocketFactory $r2;

        $r0 := @this: se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory;

        $r2 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLSocketFactory ssf>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.lang.String[] getDefaultCipherSuites()>();

        return $r1;
    }

    public java.lang.String[] getSupportedCipherSuites()
    {
        se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory $r0;
        java.lang.String[] $r1;
        javax.net.ssl.SSLSocketFactory $r2;

        $r0 := @this: se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory;

        $r2 = $r0.<se.smartrefill.net.TLS1Point2EnablingSSLSocketFactory: javax.net.ssl.SSLSocketFactory ssf>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.lang.String[] getSupportedCipherSuites()>();

        return $r1;
    }
}
