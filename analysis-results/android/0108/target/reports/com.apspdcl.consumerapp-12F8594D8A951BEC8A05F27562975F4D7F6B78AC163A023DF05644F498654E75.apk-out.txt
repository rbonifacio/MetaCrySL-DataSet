Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.apspdcl.consumerapp-12F8594D8A951BEC8A05F27562975F4D7F6B78AC163A023DF05644F498654E75.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer236
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer236)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: bc0cfe1940aaf98892e23b22efe648fa7b12f7c24e45f0bd5047f02b62031ebc
		Secure: false
	Object:
		Variable: varReplacer227
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer227)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: 602c712b6afa621a6e73e1e8f9030b9db800ebb15aa3aac655698a262f38a3b1
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: 3c858def843d59aedd854bb43b9e0486729f6bedc5064821245629f0cb9889ce
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer242, varReplacer243)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 85a1aa1aad6d1d062355554237528764f74d325b13eeb7d6943852194096d4
		Secure: false
	Object:
		Variable: varReplacer243
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer242, varReplacer243)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: b26f10adaba8b52a670387ec108eb9901b632c23745ab24007e9d62906c670fb
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: 7a7c42c5e000581cdcf0400ffe5613a28b16b97ba91f77c72eee5a0015ba6e39
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: f39f96f1dd7dfcd6a5c557878bc207e586aa9a8301d41d84a7a70385b53c05f3
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 163d721d126490691c0644fa18262a76d7366188ac3646ed1f9c1c114be521f6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1890)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 1a7cdb5fb352f0c531f8618a5fdd71e8bc8dc3afe0863bcc14e889a542eadce4
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer241)
		Method: <com.billdesk.utils.h: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: a46cbe120db07add8b1bdc3a97b9c740bdf4ff241daace0c697437cf483ce32e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: e021cc5cbe4f64a0cde5110aa93bf8fa8b477bafdbe440998525eb4fddd94604
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: aafcb1a4afdc06ae6b2432cdd529750e9f44a4bce64ba479bfd321b896355bda
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer236)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: 52023f7d1a1c6a2e5e21b31514b40750262200bb2e6e34d2ee802e6e4d6d3035
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer227)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: 7b76df388aced2470cc7e1024dc8757efeeaa1f3cf7c775f787784477fb22e0d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer239, varReplacer240)
		Method: <com.billdesk.utils.h: java.lang.String b(java.lang.String)>
		SHA-256: 38bf002aabb4679ea07a702d660627a824830be555fdd83f18ee2176b390c67c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer217)
		Method: <com.billdesk.utils.h: java.lang.String c()>
		SHA-256: 2a234d14f81c0eae42e6ab74434cea605715b3ca5789c79de01ff03a7a88d996
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer231, varReplacer232)
		Method: <com.billdesk.utils.h: java.lang.String c(java.lang.String)>
		SHA-256: 8b86eddcbd9f655e37ed962450196031cd91579056cef2290d25828fd75f752d
		Secure: false

Findings in Java Class: com.billdesk.utils.h

	 in Method: java.lang.String c(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer229, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8b86eddcbd9f655e37ed962450196031cd91579056cef2290d25828fd75f752d)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer231, varReplacer232)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer227)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8b86eddcbd9f655e37ed962450196031cd91579056cef2290d25828fd75f752d)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer231, varReplacer232)


	 in Method: java.lang.String b(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer236)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38bf002aabb4679ea07a702d660627a824830be555fdd83f18ee2176b390c67c)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer239, varReplacer240)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #38bf002aabb4679ea07a702d660627a824830be555fdd83f18ee2176b390c67c)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer239, varReplacer240)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer235, $r0)


	 in Method: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #85a1aa1aad6d1d062355554237528764f74d325b13eeb7d6943852194096d4)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer242, varReplacer243)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #a46cbe120db07add8b1bdc3a97b9c740bdf4ff241daace0c697437cf483ce32e)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer241)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #85a1aa1aad6d1d062355554237528764f74d325b13eeb7d6943852194096d4)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #85a1aa1aad6d1d062355554237528764f74d325b13eeb7d6943852194096d4)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer242, varReplacer243)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer242, varReplacer243)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1891, r5, varReplacer1891)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1891, r5, varReplacer1891)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	NeverTypeOfError: 1
	ConstraintError: 6
	RequiredPredicateError: 8
=====================================================================
