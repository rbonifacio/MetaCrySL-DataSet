Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cabmanng.android.passenger-06632BC1D67CDC3EA967A8288F285E301A2ED65604C29E5F2B3231921FC4C177.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 19689  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: 4789b4ccbb1d42d5adf2e8b25b1bc85d41349ba6a539a507bc032b4b1d65f0c4
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer16095, varReplacer16096)
		Method: <utilslib.g: java.security.SecureRandom e()>
		SHA-256: bbfc083b1273b649c4ca2e0b647ccd7286ba7e50936b32d30d957b718839bbc
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzdu(java.lang.String)>
		SHA-256: 91d6ae651ea468ee55b204b8531f2e40ebb8a460987b346249056da8de8b5b12
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.paypal.android.sdk.ar: java.lang.String a(java.lang.String)>
		SHA-256: 51e13467ab151b2c36ea6e990fafcaf8145699ddd626190a58a24426292bcc39
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <utilslib.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: 7783709ffb59212b53ecfaa3646ac9e01977d69d48097298577a30772a4d8880
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29850)
		Method: <okhttp3.internal.o: okio.ByteString a(okio.ByteString)>
		SHA-256: f1bf194203ea48a4172bcb1fc2f492a854fac40a8481f17dec06d1aa8bb76332
		Secure: true
	Object:
		Variable: varReplacer27005
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer27005)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: a62fc9532ceda1844ced89a6220336e633d456fd61f86d738a2f9fd595788d5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <utilslib.a: byte[] a(int)>
		SHA-256: fb29420aa97b5775051d78ac21aaddb65cadc18b767a2ea9df4d12c22313ecc6
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <utilslib.g: void <init>(android.content.Context)>
		SHA-256: aa867a8eeaf783aa542b950740bdf67aab6849cf884333f62afc1a67261dec44
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer27010)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: da345a44f86a1ae2ea7dae7fe80a79c2065125c4325b96a5d5740adcbc21856d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer18590, varReplacer18591)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: b396383e702ca13b058da339267f279b26b6a841623710158e2c4991d7a96f2d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer16108)
		Method: <utilslib.g: void <init>(android.content.Context)>
		SHA-256: 29fc0f8acca7218ec7dcf8e60cf9383e8704b7d1388a51030b35e99daaa8a8ec
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27110)
		Method: <utilslib.a: utilslib.b a(byte[],utilslib.c)>
		SHA-256: 1570e0aa6bc690b453b2922514801256e2c6503952d3c5fb859032764338b3bf
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27981)
		Method: <com.paypal.android.sdk.ar: java.lang.String a(java.lang.String)>
		SHA-256: 2b41d88ef52d22ca880539faa2921c599df52de0d917c3d25f60add3aa621b99
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer25712)
		Method: <com.paypal.android.sdk.bk: void <init>(java.io.InputStream)>
		SHA-256: a5f06614eb8f8d436aad957e06eaea2f4b8854e51b93c18ba613926dc9672cdd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <utilslib.a: utilslib.b a(byte[],utilslib.c)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer16098)
		Method: <utilslib.g: java.security.SecureRandom e()>
		SHA-256: 3d8f2f0274cb0e1997aff67b424fbb08ab678ce9f3d200e471b9ac14158bab59
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <utilslib.g: java.lang.String a(int)>
		SHA-256: c90f66b795d19daaa85e6efdc40f16cb85a607d421a103468da4a80ec047498e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer27112)
		Method: <utilslib.a: byte[] a(int)>
		SHA-256: a3ef8b50c226a65bb2ff2279abaf0204624e55344d8f4ba37f6cb4b55304f1ba
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer18593)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 68f55fe1c56f9f21e5cc9b1e4aa11e6c430b7862f120f5e8814329dcbc14c487
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <utilslib.a: byte[] b(utilslib.b,utilslib.c)>
		SHA-256: 93956974d148af49c7bedf886430bab7e5a8bdbb54e9810aa547f86e20abd43c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26782)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 102be0d6d7649b885acec3db3240025f99406761baa3f657e01e9b7850e31101
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 11e4b9e822e63d4e2ebae0304751656dada7c05ac1ac98dc04c4fdb80ba34128
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer25763)
		Method: <okhttp3.ag: void <init>(okhttp3.ai)>
		SHA-256: a22aad9c81e1681e0945105d98bfb1db639eca4c303e02c3c84497a7df7a594c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer18588, $i0, varReplacer18589)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: d9a47e7d742c4855f1b0dc5ca670f60d854510617dad25aba1d94e2aa235c07d
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer26821)
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: 97d0d2077dede41ff55adaf249f25adc1391d2ae72c51fc98b1cbab4210ec8f
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer18594)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: cca3b8799e64763054f26368833f21eee2826b750517242530b5ededb982771c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <utilslib.g: java.lang.String c(java.lang.String)>
		SHA-256: 7bf7c978af92b6417eda45aae21d5de964b14b7f5aa26ca2cb6c4f39074fa5d3
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <utilslib.g: void d()>
		SHA-256: decff693ee2c26a537ada762670d192f55bf3bd79d0f45c2e56e9690f5ac7147
		Secure: true
	Object:
		Variable: varReplacer18591
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer18590, varReplacer18591)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: cc3d7f874406ecb7a75c94b0dbe95bfc444a315878726ff96315de66c9e8e6a8
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18550)
		Method: <utilslib.a: byte[] b(utilslib.b,utilslib.c)>
		SHA-256: 7ea1b28bed39612859e5d58a18bdc45f14ce21845379b819d6f835c58a9cefa0
		Secure: false
	Object:
		Variable: varReplacer18592
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer18592)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: 54b164ed7ba79d5dd2a36880700b1073934899f153dadc91c58366b330ad75af
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer18555)
		Method: <utilslib.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 65b33aa3d14eb8499d20c7f6f3d0121c1ef4341ba8e5e52cee19c8bdbc19802a
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18587)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: 2ab92a97b32b8217c7e979185aee5257f71e6e7572f3d3bdd933568d6c42f06c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <utilslib.a: utilslib.b a(byte[],utilslib.c)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer24995)
		Method: <com.paypal.android.sdk.bg: okhttp3.ai a(int,boolean,boolean,java.lang.String,java.lang.String)>
		SHA-256: bf4228895d6766ae4c277d29b598c8d941835c5c0da10a509179bc29faa024a6
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer27005)
		Method: <utilslib.p: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 7fcfdf42ba2907a65a3500512adbdf65c05e50f74ae11d86a380b6d73fe05337
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26975)
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 2aabf96b964fa4b4a6e304ac24d43d86a5d5e0ec1c2dc737791896d63250de6a
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27280)
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: 12d19b980b483c69d6bae1a2b26cbe4007c04bea9195cd7b58af56c63584a315
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <utilslib.a: byte[] b(utilslib.b,utilslib.c)>
		SHA-256: deaa291ca3d0ffc59d7ad7c1373c0bb84caba0350d0558fb8d4c3e426704100e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18539)
		Method: <utilslib.g: java.lang.String c(java.lang.String)>
		SHA-256: 6094bc20d363435c8097be345b26701e0e1d8981461cfb19f9fea4de3698d2f7
		Secure: true
	Object:
		Variable: varReplacer16108
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer16108)
		Method: <utilslib.g: void <init>(android.content.Context)>
		SHA-256: 579e2634d6fe11f48df2d843f896ccace4906efd5c514178cd40492f61c127f0
		Secure: false
	Object:
		Variable: varReplacer18593
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer18593)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: c3d5dc60004ebaea1517524500c814b32a0e2d767412cda8cb64a9d60be059c5
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: varReplacer18589
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer18588, $i0, varReplacer18589)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: 853cc470c20b32e0371865af2e8d7e4b735008033b7302b177feb9b335b565a2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.paypal.android.sdk.bk: void <init>(java.io.InputStream)>
		SHA-256: 91e8b28f911461d611cb6c91ce26981fd96629ddc47effbfee4107508e445622
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 51d771176588bd9b377838ae77608f0ca53802f65bd7d4d703667e5fef52b40b
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.o: okio.ByteString a(okio.ByteString)>
		SHA-256: acda6d00e6d7c8bd95ce4103ea2444534c57c44135882f6740a39a37032a030a
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer18592)
		Method: <utilslib.a: utilslib.c a(java.lang.String,byte[])>
		SHA-256: b97c3559d36b1896a299f981cd05e93a51b7750626df972ee64bd6c6fdc69421
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16116)
		Method: <utilslib.g: javax.crypto.Cipher f()>
		SHA-256: 524baf707b500635fbdd341743f1590be91282ac904cc0ee51ceb569c92e310a
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16114)
		Method: <utilslib.g: javax.crypto.Cipher f()>
		SHA-256: 73acc0f30842055bfa343a346fc6183a1025e2b1c92954a18600cbb629f1c4c6
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer25714)
		Method: <com.paypal.android.sdk.bk: void <init>()>
		SHA-256: 8e1b269051d5ad00a8f5c492f02cbc33b06c045161f48af0948cf208517b5eb
		Secure: false
	Object:
		Variable: varReplacer18587
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18587)
		Method: <utilslib.a: utilslib.c a(java.lang.String)>
		SHA-256: 85fe9d1e48aba8118bb930ba5079d76046d2d071bbe03131edddd5e85668b8f8
		Secure: false

Findings in Java Class: utilslib.g

	 in Method: javax.crypto.Cipher f()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #73acc0f30842055bfa343a346fc6183a1025e2b1c92954a18600cbb629f1c4c6)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16114)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #73acc0f30842055bfa343a346fc6183a1025e2b1c92954a18600cbb629f1c4c6)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16114)


	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer16108)


Findings in Java Class: utilslib.a

	 in Method: utilslib.c a(java.lang.String)
		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer18588, $i0, varReplacer18589)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18587)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer18588, $i0, varReplacer18589)


	 in Method: utilslib.c a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer18593)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b396383e702ca13b058da339267f279b26b6a841623710158e2c4991d7a96f2d)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer18592)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #cca3b8799e64763054f26368833f21eee2826b750517242530b5ededb982771c)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer18594)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer18590, varReplacer18591)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b396383e702ca13b058da339267f279b26b6a841623710158e2c4991d7a96f2d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer18590, varReplacer18591)


	 in Method: byte[] b(utilslib.b,utilslib.c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer18551, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: utilslib.b a(byte[],utilslib.c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27109, $r5, $r2)


Findings in Java Class: com.paypal.android.sdk.bg

	 in Method: okhttp3.ai a(int,boolean,boolean,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25000, r23, varReplacer25000)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25000, r23, varReplacer25000)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #bf4228895d6766ae4c277d29b598c8d941835c5c0da10a509179bc29faa024a6)
			First parameter (with value "TLSv1") should be any of {TLS}
			at statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer24995)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #102be0d6d7649b885acec3db3240025f99406761baa3f657e01e9b7850e31101)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26782)


Findings in Java Class: utilslib.p

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer27005)


Findings in Java Class: com.paypal.android.sdk.bk

	 in Method: void <init>(java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25708, $r16, varReplacer25708)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25708, $r16, varReplacer25708)


	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25715, varReplacer25715, varReplacer25715)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25715, varReplacer25715, varReplacer25715)


Findings in Java Class: okhttp3.ag

	 in Method: void <init>(okhttp3.ai)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25765, varReplacer25765, varReplacer25765)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25765, varReplacer25765, varReplacer25765)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 59

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 21
	NeverTypeOfError: 1
	ImpreciseValueExtractionError: 1
	ConstraintError: 6
	IncompleteOperationError: 1
=====================================================================
