Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cga.flexconnector-10DBA8B8554DEF433A3127AEC81E84747DFF7DAA47A2AEDBDEC946E35D410B8E.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cga.utilities.util_String: java.lang.String md5(java.lang.String)>
		SHA-256: 1b065fe5b03e97dfd6f3469d16a3788df2d88eee4500cbb8f309b58483f38b56
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6425)
		Method: <com.cga.utilities.util_AES256: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 3c302b3b39ed05ad34dc14818cf757821630286956a4684979a12691ad91c28f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.cga.utilities.util_AES256: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: d2cca2a00782ef94b172536e0d58a0336bf0c2f4e60586c30d3147217f96bfc8
		Secure: false
	Object:
		Variable: varReplacer6425
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6425)
		Method: <com.cga.utilities.util_AES256: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 2f14cc197d86280740bd27c7e4b74a47fd75833f407b5e6679852a69b7faa55
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6416)
		Method: <com.cga.utilities.util_AES256: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 50c46834c8a6045ee11eed2fc91a63180f3f48268b626df680be5ba73655d61d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6395)
		Method: <com.cga.utilities.util_Network: java.lang.String excutePost(java.lang.String,java.lang.String)>
		SHA-256: d1a769067af4837a1cf2203d02fe4ffd99ee44fd5f5e54d798fe6cf0c6016b4b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.cga.utilities.util_AES256: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: ed6b435b429f9fa0a62f116f5396516db5162ec1cea571aa82a1c51bc63e3b3e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.cga.utilities.util_AES256: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: c7ca48b2c5405e60d8e77d12d9c8022be461ec8d5f8b33c76076079f2f101ea9
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.cga.utilities.util_AES256: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: f0cc7b33c247dca8b56c116cd960921ba0c9d32820e05e7b8a27d3aa2e633313
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6415)
		Method: <com.cga.utilities.util_AES256: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 4c48cfb4524cbfd0505c4fc5b71c801a4f6875975bdf79c86bce37de673ef2c
		Secure: false
	Object:
		Variable: varReplacer6415
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6415)
		Method: <com.cga.utilities.util_AES256: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: ce8bb8859ce65f12b3703e43601472b85279fc8626e9d26f22960ec3e6633f34
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.cga.utilities.util_AES256: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 6ca1b5790a7af60db0c52839af73b47d90b34e8a90bfe9214e9f78dc9a68e9a5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1498)
		Method: <com.cga.utilities.util_String: java.lang.String md5(java.lang.String)>
		SHA-256: fad233f99c4f62e82146d9f91a65271b5a4e2c5e0ffe2ba574e12889efb61376
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6426)
		Method: <com.cga.utilities.util_AES256: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 279bd0a103a162a13877cf0e010def1b8683fb23aba259e3422bf9232a0732b9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.cga.utilities.util_AES256: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 878ee5001283bcf2826587126f72e651c4e000c374c85c05139c92f661f46a50
		Secure: false

Findings in Java Class: com.cga.utilities.util_AES256

	 in Method: byte[] decrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6414, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6415)


	 in Method: byte[] encrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6424, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6425)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6424, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


Findings in Java Class: com.cga.utilities.util_Network

	 in Method: java.lang.String excutePost(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6364, r37, varReplacer6364)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6364, r37, varReplacer6364)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 9
=====================================================================
