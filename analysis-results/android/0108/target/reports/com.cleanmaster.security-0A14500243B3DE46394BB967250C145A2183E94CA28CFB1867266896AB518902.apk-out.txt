Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.cleanmaster.security-0A14500243B3DE46394BB967250C145A2183E94CA28CFB1867266896AB518902.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String b(java.lang.String,byte[])>
		SHA-256: 294774355650ef54317942aa033ea413478f12f314ae78f11ea6aba9303fe7d8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1439)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: a86802d5142c65f75803487ff7e58525953d1bb047b8e3f154eb4ed4fde96dd4
		Secure: true
	Object:
		Variable: varReplacer4991
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4991)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 83f955051e5005636af1e26606286cf2312f3975418955ea5bf34d5af217960e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 9812a629d23beccafa21efc59029240b468afb9bb9cb6b7b2b5487adb29f5331
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4397)
		Method: <com.cleanmaster.security.callblock.credentials.KeyUtils: java.lang.String a(java.lang.String)>
		SHA-256: 1f6a94b11036e27df419f6240d403912d3c356a1145ee4b6f2293c9faa17c213
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,byte[])>
		SHA-256: de94c736b45bd4b8e56c85204c42b87d3fe3f3206b548189d2f92351b974bac8
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.cleanmaster.security.util.MD5Util: java.lang.String a(java.lang.String)>
		SHA-256: 9ace980680c171724d02ba9d5b946915c3451001e4c93140e0f2fa26f5947ea3
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cleanmaster.security.util.MD5Util: long d(java.lang.String)>
		SHA-256: 9f56225732b386a4c771e564c100c20157dbcdcaf6869feb6594f54bcff22ab6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4992)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,byte[])>
		SHA-256: d8e3611f4bd1b9755f61cdbff743704e966c64f86bf92875400865c288833e25
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1441)
		Method: <com.cleanmaster.security.callblock.credentials.KeyUtils: java.lang.String a(android.content.Context)>
		SHA-256: edc844326c60c6edcddccd290201afff459386023371ed392459e2b7ce937082
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14212)
		Method: <com.cleanmaster.security.util.MD5Util: long d(java.lang.String)>
		SHA-256: 8f813755986dd9f36420a236c80106a0a13e193976f75b96e5bbec4c05db36f5
		Secure: true
	Object:
		Variable: varReplacer2486
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2486)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String b(java.lang.String,byte[])>
		SHA-256: 7e1fe0786c8720425cf1c1147d3638bbf7af920fb51c5c7023892f79b5c2d500
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2486)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String b(java.lang.String,byte[])>
		SHA-256: cace4b72abfe26c3fb90de1e2140b081ede644cc26f93319bc58cba3e02f3a21
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4991)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 30ac3faf21e32755c9f27ab7eacc5be7d995ad6ae201124b8147d9c340f1878c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cleanmaster.security.callblock.credentials.KeyUtils: java.lang.String a(java.lang.String)>
		SHA-256: 768f918e8899fae2e4443d8a5d02ce6006788ec0791158961aa3e57ffec4a525
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cleanmaster.security.callblock.credentials.KeyUtils: java.lang.String a(android.content.Context)>
		SHA-256: 5e040f3bc87a7065a59e4f5e1682870e27673c766f86cb297c22cb3d326cfc2f
		Secure: false
	Object:
		Variable: varReplacer1438
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1438)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 47c8084591f254dcd2c9be67b749b5f8ac1c1ffbf074e515f7e4935a272a3366
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1438)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: fb565a370847d3012fc95c6224236ff38707037aa9f15dbd68ca2bc19726faed
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2487)
		Method: <com.cleanmaster.security.callblock.utils.SecurityUtil: java.lang.String b(java.lang.String,byte[])>
		SHA-256: 5e3b865bd4dfa69d1245bdbc583bdffe588ded1068860a2432931e7cc8f2099e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2703)
		Method: <com.cleanmaster.security.util.MD5Util: java.lang.String a(java.lang.String)>
		SHA-256: da4b13a1f74e0b63d907abd71c0a473f69d69f71d46f56b95ad1ab0b93a39d96
		Secure: true

Findings in Java Class: com.cleanmaster.security.callblock.credentials.KeyUtils

	 in Method: java.lang.String a(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #edc844326c60c6edcddccd290201afff459386023371ed392459e2b7ce937082)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1441)


Findings in Java Class: com.cleanmaster.security.callblock.utils.SecurityUtil

	 in Method: java.lang.String b(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5e3b865bd4dfa69d1245bdbc583bdffe588ded1068860a2432931e7cc8f2099e)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2487)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5e3b865bd4dfa69d1245bdbc583bdffe588ded1068860a2432931e7cc8f2099e)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2487)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2486)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2485, $r2)


	 in Method: java.lang.String a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4990, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d8e3611f4bd1b9755f61cdbff743704e966c64f86bf92875400865c288833e25)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4992)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d8e3611f4bd1b9755f61cdbff743704e966c64f86bf92875400865c288833e25)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4992)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4991)


	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1438)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 20

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ConstraintError: 5
=====================================================================
