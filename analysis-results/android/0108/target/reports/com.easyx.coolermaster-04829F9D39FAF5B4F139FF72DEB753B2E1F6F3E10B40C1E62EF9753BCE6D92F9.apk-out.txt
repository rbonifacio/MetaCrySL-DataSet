Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.easyx.coolermaster-04829F9D39FAF5B4F139FF72DEB753B2E1F6F3E10B40C1E62EF9753BCE6D92F9.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
06:52:50.275 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <android.content.Context: android.content.Context getApplicationContext()> for class com.google.android.gms.analytics.internal.ae
Alive 66952  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8955)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: 4292cae8f3a80ba9775bcabae2a4949ead93e5d990e3785be76227f763312537
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xinmei.adsdk.utils.a: byte[] a(byte[],java.security.Key)>
		SHA-256: defbc4b7fb5d3c71cbf4d8f2e717a32c0a66bc2b21ba0dd8b3d675ed5143a7a6
		Secure: false
	Object:
		Variable: varReplacer1595
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1595)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[],byte[])>
		SHA-256: 5280f8529e9f073ff95428317f2021a085377ca856390b777f3848d650efe85d
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyStore
		Statement: $r11 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 2f60181713d6f5ba9d7147e52d275fa1384e51fe31796c1e6effaa0e31708dfb
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xinmei.adsdk.utils.a: byte[] b()>
		SHA-256: 6c968a2ebbc994743debaa0f8ff4b55131f79d716707e0bf8bcc02401e1fb8a9
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1595)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[],byte[])>
		SHA-256: 610b431b0659e2bf8483de0b31e272f8144cff833cab9c810b627eb92b436d78
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3114)
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: 909ac7db84076a4a1064616d8878970006689fab75d4ac57e3418f20d5f20934
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8932)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: 3ccd4f28d512cb6a7ef0dc570b2888232e9dc642e6d03999f76b635e30bd6c45
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r1 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xinmei.adsdk.utils.a: byte[] b()>
		SHA-256: f22521785f615dd0e4d1e83f1ba09a0ce0783a24c18e091d07c7c4134fab6156
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4182)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 41168f16f72d519a12a908dd8da32a5b9bd75d4013081a9e36bc16fa7fec69f9
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.xinmei.adsdk.utils.a: void c()>
		SHA-256: 37f7cbbc0475c0bef73971e5b9ec7619051e1c7359fd4900ab8d1b0cfda7455e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3779)
		Method: <com.xinmei.adsdk.utils.t: java.lang.String d(java.lang.String)>
		SHA-256: 2efa30b50db81f95d5afe828466495e014d456574983a7f0124f3abb5eadb961
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyStore
		Statement: $r11 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 2f60181713d6f5ba9d7147e52d275fa1384e51fe31796c1e6effaa0e31708dfb
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke $r12.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 616dea5870abd7100e346a82870661e7e0d4aa0710c5ecda884c5c032ec0ae5f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: 9bec08917d8c17d6308fce1047325c6c7c3f151094e6e268fc8e7d3e89e5beab
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: 285b7cc6277f9df04e8584a4ae6095db72579ef07c82dcc337109710ad50a785
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8954)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: 1ca17127809b64d1b7402101b2395cc32297721dee5488e914f1cb0c3a3a0681
		Secure: false
	Object:
		Variable: varReplacer8954
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8954)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: 2ff6e8f21045e3ebb6a20ebdd62ebe05f472fbc0194eecec9ef6e3f9ecfce2f2
		Secure: false
	Object:
		Variable: varReplacer1608
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1608)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: f3514d7b12a40dc69d54492aab924d26d33a056e024b0db3248c6a950873a97a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer3482)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: 3b6ac34b9239c3c1e056283835679acac37e45e9ee9239fb83660bd42736f9e7
		Secure: false
	Object:
		Variable: r48
		Type: java.security.SecureRandom
		Statement: specialinvoke r48.<java.security.SecureRandom: void <init>()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: ae5ec3e880e484c2347a8bdd275050f73a5344dc7e5478fa3752317de601fd99
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.easyxapp.xp.common.util.m: java.lang.String a(byte[])>
		SHA-256: 3b0c508c2288e4aa0fb5b4beceefbd5abae5b8b3b3b3ecec0e7ca13b87cd70b9
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 4c007d82661266b5817bbe92225f4b95e375d4009b399b6ad4a1c654005f0fd7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1592, varReplacer1593)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: c3a48d2fc69184e0de325dd010e5a390468dbedaeee9e4748fca3de628705f32
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.a: java.lang.String a(java.lang.String)>
		SHA-256: 5e54d7c75072b6ee2b597c5b9413576e6ddb692cffad2f913372e9e2b04fca41
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer3482)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: 3fa4037e8c44c79f71dac876cafcef4ff19056940493515b8ba740695cb59880
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8178)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: bda02ef2ef783d3b69770aa16117a413b1c630eaf8ae902450ed241656be3cb7
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xinmei.adsdk.utils.t: java.lang.String d(java.lang.String)>
		SHA-256: fe78fb20306caeb2098c3351d7c84e71a43002c1ecb78c7071cdaeb833f1122b
		Secure: true
	Object:
		Variable: r48
		Type: java.security.SecureRandom
		Statement: specialinvoke r48.<java.security.SecureRandom: void <init>()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: ae5ec3e880e484c2347a8bdd275050f73a5344dc7e5478fa3752317de601fd99
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.easyxapp.kr.d.f: java.lang.String a(byte[])>
		SHA-256: a5091df634c9932547c7f9e8ded9e5a872158e191c59298d4fa426bacb71d339
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyxapp.common.d.b: byte[] a(java.lang.String,byte[])>
		SHA-256: ca0bf1c97755bf745e72f10f87c4e24f8b7dce695ba5b7e758416d86fb7d9af9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 2125805d03a1e43489bdecc5db182c9da3fb7141e4e8c4afb45e18805c8edeaa
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: d03c4b5dde23467f8ab226b16bdfd736c32e8c7c65effcb3bc7906bfe80486ab
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer8934, varReplacer8935)
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 5100adb610f42a15c8149d4c44c957f272a7ebe32ed7cf9deda2cc90f24ad678
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1594)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: af50cedf213d583d798b810347a8ffe0676081ddd5985ec91c655f0031335078
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3484)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: aa0a1e51d92e79f30524a32624438229793482a1c1c5e2cde3c43378b1110b25
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8209)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 2bd9877f872d20a719890e588ea1e8a1d67a4153ea0bb1ee2491a42232d58c71
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1181)
		Method: <com.easyxapp.kr.d.f: java.lang.String a(byte[])>
		SHA-256: 6dd5078cb5474f0fbb391d9d0b56cc63b063139bae5eac138f431eb3dc991ba8
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 70afe47b024b63fe976daddfdc9e396708d342a20ebc3fba7e11727837415f3b
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8205)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 722b85bdebba64fdcf87f6305b455a7c22eab14053ccfd4c6513cd5e446b1555
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1591)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[])>
		SHA-256: eb1bb341e9dd7521de539f3ec33f18dd54524b67b3e7d396ae556fcbfb20c3e2
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3495)
		Method: <com.xinmei.adsdk.utils.a: void c()>
		SHA-256: e513e9cc82f79ef5886852855e66d39022ac9845c283c645a6946f26ddd9bf2b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1609)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: de9607ee646d264a7ed95214dcb0b06d75ec79744b5d7461f9efd54190f5658a
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke $r12.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 616dea5870abd7100e346a82870661e7e0d4aa0710c5ecda884c5c032ec0ae5f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 5ef8d28ab179e258311805f92969e46c2035be744d6c2feb40b4edb626054f36
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3804)
		Method: <com.xinmei.adsdk.utils.a: byte[] a(byte[],java.security.Key)>
		SHA-256: a957886c2b726fa472d986e47d9ce90617404a5a6697a5334b32e87b32a306ed
		Secure: false
	Object:
		Variable: varReplacer8932
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8932)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: 6bab39e68912c29bc05be1b8cee4f2a9b0b177f600d1d68a001a0047fcde74be
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8933)
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 25882d4fc9634b9e914786358a77be2fbbca1187c2ea62913dd39b685248fbba
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer8936)
		Method: <com.easyxapp.common.d.b: byte[] a(byte[])>
		SHA-256: 562412a681950baff3c8243113bfab64bb0a4f4a5dcd3176f5e5957748d0c582
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8187)
		Method: <com.easyxapp.common.http.a: void a()>
		SHA-256: 328e7122809367fff0395c9a8782a60529f5ae8350594c6301ef07b4b599ed3c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1597)
		Method: <com.easyx.coolermaster.c.a: byte[] a(byte[],byte[])>
		SHA-256: 1aced45a89e47dae6fc14abdfbcf88af4ca107bcafb8ba5dec34d13547e9e6d8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8931)
		Method: <com.easyxapp.common.d.b: byte[] b(java.lang.String,byte[])>
		SHA-256: e563d8c5edb6bf6860f98bdabd49feb93ed80f57938c552824bcb80cf7a06b7f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1608)
		Method: <com.easyx.coolermaster.c.a: byte[] b(byte[],byte[])>
		SHA-256: 97dda9ae7444990c82979bec22d7562e5f3a46544ea88092012b371848d645ed
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)
		Method: <com.xinmei.adsdk.utils.n: byte[] a(byte[],java.lang.String)>
		SHA-256: cec1cae73ed5d071f0d6946e6489a03382b4cb2fad6bcba1f496013ecc632401
		Secure: false
	Object:
		Variable: r5
		Type: java.security.SecureRandom
		Statement: specialinvoke r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.xinmei.adsdk.utils.a: void c()>
		SHA-256: 9f1c4ae5f4fdc8824f49a30e855726d5cf9a79f85f0407845e9f9b016c50d1fa
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7659)
		Method: <com.easyxapp.xp.common.util.m: java.lang.String a(byte[])>
		SHA-256: c395b75e50d358d5b8f0d4f7c4b0089b01ad65d3a6f399b70eea08e895db349
		Secure: true

Findings in Java Class: com.easyx.coolermaster.c.a

	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1aced45a89e47dae6fc14abdfbcf88af4ca107bcafb8ba5dec34d13547e9e6d8)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1597)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1aced45a89e47dae6fc14abdfbcf88af4ca107bcafb8ba5dec34d13547e9e6d8)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1597)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1595)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1aced45a89e47dae6fc14abdfbcf88af4ca107bcafb8ba5dec34d13547e9e6d8)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1608)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #de9607ee646d264a7ed95214dcb0b06d75ec79744b5d7461f9efd54190f5658a)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1609)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #de9607ee646d264a7ed95214dcb0b06d75ec79744b5d7461f9efd54190f5658a)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1609)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1610, $r2)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1590, $r2)


Findings in Java Class: com.xinmei.adsdk.utils.n

	 in Method: byte[] a(byte[],java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #aa0a1e51d92e79f30524a32624438229793482a1c1c5e2cde3c43378b1110b25)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer3482)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #aa0a1e51d92e79f30524a32624438229793482a1c1c5e2cde3c43378b1110b25)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #aa0a1e51d92e79f30524a32624438229793482a1c1c5e2cde3c43378b1110b25)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: void init(int,java.security.cert.Certificate,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters), javax.crypto.Cipher: void init(int,java.security.Key), javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec), update, javax.crypto.Cipher: void init(int,java.security.cert.Certificate), javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom), javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom), wrap, doFinal
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3487, $r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #aa0a1e51d92e79f30524a32624438229793482a1c1c5e2cde3c43378b1110b25)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer3482)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #aa0a1e51d92e79f30524a32624438229793482a1c1c5e2cde3c43378b1110b25)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), init, javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i3)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, varReplacer3482)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3487, $r6)


Findings in Java Class: com.xinmei.adsdk.utils.a

	 in Method: void c()
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>($i0, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #e513e9cc82f79ef5886852855e66d39022ac9845c283c645a6946f26ddd9bf2b)
			First parameter (with value "Blowfish") should be any of {HmacSHA224, HmacSHA256, AES, HmacSHA384, AESWRAP, DESede, HmacMD5, HmacSHA512, DESedeWRAP}
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3495)


	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3805, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a957886c2b726fa472d986e47d9ce90617404a5a6697a5334b32e87b32a306ed)
			First parameter (with value "Blowfish/ECB/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3804)


Findings in Java Class: com.easyxapp.common.http.a

	 in Method: void a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2bd9877f872d20a719890e588ea1e8a1d67a4153ea0bb1ee2491a42232d58c71)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8209)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #328e7122809367fff0395c9a8782a60529f5ae8350594c6301ef07b4b599ed3c)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8187)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r53, $r17)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #722b85bdebba64fdcf87f6305b455a7c22eab14053ccfd4c6513cd5e446b1555)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8205)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #bda02ef2ef783d3b69770aa16117a413b1c630eaf8ae902450ed241656be3cb7)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r12 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer8178)


Findings in Java Class: com.easyxapp.common.d.b

	 in Method: byte[] b(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8932)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e563d8c5edb6bf6860f98bdabd49feb93ed80f57938c552824bcb80cf7a06b7f)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8931)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8930, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e563d8c5edb6bf6860f98bdabd49feb93ed80f57938c552824bcb80cf7a06b7f)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8931)


	 in Method: byte[] a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8956, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8954)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4292cae8f3a80ba9775bcabae2a4949ead93e5d990e3785be76227f763312537)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8955)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4292cae8f3a80ba9775bcabae2a4949ead93e5d990e3785be76227f763312537)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8955)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer8937, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 56

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 14
	ImpreciseValueExtractionError: 1
	RequiredPredicateError: 16
	TypestateError: 3
	IncompleteOperationError: 3
=====================================================================
