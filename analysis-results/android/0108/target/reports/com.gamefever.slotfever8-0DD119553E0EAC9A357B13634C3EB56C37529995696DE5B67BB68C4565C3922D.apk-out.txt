Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.gamefever.slotfever8-0DD119553E0EAC9A357B13634C3EB56C37529995696DE5B67BB68C4565C3922D.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 381357  5000
09:56:46.381 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:46.517 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:46.744 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:46.758 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:47.104 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
09:56:47.126 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.millennialmedia.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
09:56:47.530 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$WildcardTypeImpl
09:56:47.531 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$WildcardTypeImpl
09:56:48.713 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$WildcardTypeImpl
09:56:49.084 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.millennialmedia.google.gson.internal.$Gson$Types$WildcardTypeImpl
09:56:49.084 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$WildcardTypeImpl
09:56:49.084 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$WildcardTypeImpl
09:56:49.099 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.099 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.129 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.130 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.130 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.132 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.172 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.256 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.256 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.256 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
09:56:49.313 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.millennialmedia.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
09:56:49.934 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.millennialmedia.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
09:56:49.945 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.millennialmedia.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
Alive 32291  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.google.android.gms.internal.i: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 46956732628d4da9d4a217c6f2dc5371f6fca84c2d81ef3d7273199c675b5132
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7089)
		Method: <com.google.android.gms.internal.p: byte[] c(byte[],java.lang.String)>
		SHA-256: 69a29c600e7001ccda9cc1b94898b994f4f835c638e69dadd4ac75a28d627ed8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3701)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: bd2ffe2e0249325d2feff9cad9f95e3d5fc998c7735c807785b91d32848fe6dd
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11421)
		Method: <com.google.android.gms.internal.i: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 58d621151917948e64b0e45043461adbf9b29133e381e5cb3e54a225f4b90b45
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] decryptAES(byte[],byte[])>
		SHA-256: 449208dcd896d5948d24426fc434eec35a40d7f1f7f4eab5641251f041eaaf32
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5651)
		Method: <com.appfireworks.android.util.AppEncryption: void <init>(java.lang.String)>
		SHA-256: 3ed886ac22b882a830eb6417357a326358de60302685dc7279f08d28bbc5596d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.appfireworks.android.util.AppEncryption: java.security.spec.AlgorithmParameterSpec getIV()>
		SHA-256: 1f6b8c87b92c27611f53710eaa0beb599c247dca499a739ef876786fe6f2f5db
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tapjoy.internal.cm: byte[] a(byte[])>
		SHA-256: db4459fc53dc3db4099655aacaf2c8f099e0ea31cb2dcea4567b42e7c627ad6f
		Secure: true
	Object:
		Variable: varReplacer7086
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7086)
		Method: <com.google.android.gms.internal.p: byte[] c(byte[],java.lang.String)>
		SHA-256: 2ad7d9ea2c65a3e86a6c722f4b850971175d860988c14a87f4a52c32c89ada46
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6949)
		Method: <com.google.android.gms.internal.dv: java.lang.String u(java.lang.String)>
		SHA-256: e165840b350ec293637254b0b918b93c2110d21f0e695d9947531d03d1d07e2
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2646)
		Method: <com.millennialmedia.android.MMSDK: java.lang.String getMMdid(android.content.Context)>
		SHA-256: 359fe33f782ba897fc746e3f813a06bd0742d4aaf59820d88fffe937cc205a4f
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.dv: java.lang.String u(java.lang.String)>
		SHA-256: 28afdbaf0d0d342c6c60956598490599ba52932539975229c41e3eead6b4608d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4376)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] encryptAES(byte[],byte[])>
		SHA-256: 7e02e6d1d378f47c96ad76e0bb2755f130c04b5dc0560d4c52c44713eb2f3d19
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.dj: java.lang.String br()>
		SHA-256: f5f7166fded65fb7b35cc67338c5c9bbe4541fec0585739ef3a84895e0941aad
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tapjoy.TapjoyUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 8cb0e883032585b32965763a80dc6b74a618534bc10c1a39d16b02d90fcb5f04
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4562)
		Method: <com.tapjoy.internal.cm: byte[] a(byte[])>
		SHA-256: a149b9e5900c120b00781997e2523c6710be5403d6d261759c650e74af133a08
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.MessageDigest
		Statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3106)
		Method: <com.gamefever.slotfever8.SlotFever: void onCreate(android.os.Bundle)>
		SHA-256: da187d9d3ce751dfbcf9ac8295c8f392fbb55e58f272f3744ba61243261bf712
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4377)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] encryptAES(byte[],byte[])>
		SHA-256: 64b2674c385bd976e19a29c708f7d3e471881f00d1823556416ccf6e88245a56
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8366)
		Method: <com.google.android.gms.internal.dj: java.lang.String br()>
		SHA-256: b5e60e5a025c22ca2c30b8a3ee50f0f96d0e8f1e499ae11ba53a261a147c23f7
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.internal.i: java.lang.String a(byte[],java.lang.String)>
		SHA-256: fd3591844203df2792f7ae14ab765018054fd60ed4edfa0f95b1be15391e532a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer4371)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] getRawKeyAES(byte[])>
		SHA-256: 5f82d69d69f79e33f6beccfb7bfe8ce1c11bd1ccf8472cb1be0d437ae85e41ab
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.p: byte[] c(byte[],java.lang.String)>
		SHA-256: d871c69f8e357d56e75bd60c19a212d36b94a6ab9c5042fe4622452b2ba56881
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.millennialmedia.android.MMSDK: java.lang.String getMMdid(android.content.Context)>
		SHA-256: 555533d791b2c2735b6c08bbe3254d105f99550e9fabedc097cca1d3818b020d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4417)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] decryptAES(byte[],byte[])>
		SHA-256: 6f9fd9715d5c327bd2873579a83ef8e9cb01ae63c7dcea5ec39814a32765545d
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7086)
		Method: <com.google.android.gms.internal.p: byte[] c(byte[],java.lang.String)>
		SHA-256: 73e99ee266c205df6056ed9c01ffebbe83a6fb58ff05dc7f25ccdfac55b3d093
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.appfireworks.android.util.AppEncryption: void <init>(java.lang.String)>
		SHA-256: eaebbf1fc43c078e988ba8eb6ab8fb5cc2fb00b209898b610dbdad3c08855eee
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12608)
		Method: <com.tapjoy.internal.fn: com.tapjoy.internal.lg a(com.tapjoy.internal.lg)>
		SHA-256: 6d18c3970dd513ef5ee96e4b424fe236a767d54b7420804fdfd65b77a5b1027f
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12113)
		Method: <com.tapjoy.internal.ex: javax.net.ssl.SSLSocketFactory f()>
		SHA-256: be210c6bbd9fcebdf86df47c93bf61913bc9f23d7571527e2b58088d6d9ca0c1
		Secure: false
	Object:
		Variable: varReplacer5653
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5653)
		Method: <com.appfireworks.android.util.AppEncryption: void <init>(java.lang.String)>
		SHA-256: 52dc6464ce04a12b5c44c4eeb9612878c1506dc3444ee22c9287fef8cef58e3d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.tapjoy.internal.fn: com.tapjoy.internal.lg a(com.tapjoy.internal.lg)>
		SHA-256: 17d51f7cf00c5653ddf1a1775517ca873b35ba593a2859288bdec8066c178af1
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] decryptAES(byte[],byte[])>
		SHA-256: 75f3e5958c44e04533bd4f20de05f000cd7c8b155c0e110475a50459516467d4
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tapjoy.internal.hi: java.lang.String a(java.lang.String)>
		SHA-256: 748893764d988245615e25fc745f3b5855e55d79a4c57a4596b03ecdbf728fe0
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9100)
		Method: <com.tapjoy.internal.il: void <clinit>()>
		SHA-256: e4e14bfa2ae8efa582323c382e72dc1b2e9c3360709c4b42d9fb88c13d9bee6d
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2644)
		Method: <com.millennialmedia.android.MMSDK: java.lang.String getMMdid(android.content.Context)>
		SHA-256: c3b85f5fededcbe909c0b58a34dfb6432596d8421f742364276ef252f20503b9
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] encryptAES(byte[],byte[])>
		SHA-256: 34fe59724e7a8f58a105fce51deb0d55296e09bd67a9b17f9c4ba37b9fd43859
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer4373)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] getRawKeyAES(byte[])>
		SHA-256: f9cafc0f56caef2f17576c974eab8d7c1662ece85d9f2f97335c6cc4f1bc7cf8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer826)
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: fdf1dc4e0db484ddc3d2e2eb55dc7ceb7edde3cab017578d0e563f9b467f7a8
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.appfireworks.android.util.AppEncryption: byte[] getRawKeyAES(byte[])>
		SHA-256: 3be190a44a6a16c1d91a73e1a23e3f369b2326fca3a7de19ab461fb7580b3a31
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.i: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 3c2aad2980d5ad07608cfdf33ab19634bf77139e4a55e739fa031b88035eed93
		Secure: true
	Object:
		Variable: varReplacer4419
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4419)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] decryptAES(byte[],byte[])>
		SHA-256: c8f630ac4d28f85767a76405a69c710b6d551cdfcc6ace696b697922d051cd46
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4249)
		Method: <com.appfireworks.android.util.AppEncryption: java.lang.String sha1(byte[])>
		SHA-256: edb97cf68df38b7d0be640174e4b895c8fdf0fd6f030ee928e09696d21b8e5dd
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5089)
		Method: <com.tapjoy.TapjoyUtil: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ea408641c01a0aa5336aec4bd0402d4caaa5cab6afb03ace837a2e77854f286
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9101)
		Method: <com.tapjoy.internal.il: void <clinit>()>
		SHA-256: 492f53eff42de4c900fe5b5b84ab0690563854b37bf393ff313dc6c1c87c520b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10148)
		Method: <com.tapjoy.internal.hi: java.lang.String a(java.lang.String)>
		SHA-256: 68bc5d940409796018ebf17d32aa2bc4e446bb677f30592d51aea4dbf1ed44a4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] encryptAES(byte[],byte[])>
		SHA-256: edd0c98e243092c43c80263e961539653fe5740f610974689cf996c551f3c754
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.p: byte[] c(byte[],java.lang.String)>
		SHA-256: 9908742cbf8b1512501949e3b1bee95862fa7f5a6ccb55dc42e2ca1600d6d79e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4419)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] decryptAES(byte[],byte[])>
		SHA-256: e8f19d7f42678cbcfbcc592d3876efe9b2064efbfb416c888d73e1f9f65c6ef6
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.gamefever.slotfever8.SlotFever: void onCreate(android.os.Bundle)>
		SHA-256: 40e4f9e7331143e52cecdcf176c1dd7575ebf0ede24b9fe68a8d8f0b216ee4bc
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.appfireworks.android.util.AppEncryption: java.lang.String sha1(byte[])>
		SHA-256: 4f6024e948a1b5a4da51f928deea609c9f7c8b9717527ef698db745ab1539b3c
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5654)
		Method: <com.appfireworks.android.util.AppEncryption: void <init>(java.lang.String)>
		SHA-256: 628947e5885367c404c438258d3938ea7166d3eb0d8f232d9e7f5c1b727355e1
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.pjqjjosfqj.AdEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: aa1ff51c0e4c5dd0d6b3efbf6aaa8cd8591e5ee3342a2777826bd255728f9e68
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.pjqjjosfqj.AdEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: 5a22917119d747cd0580575884367a87eaffabc3e536afe2db419d0af788a7f1
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.pjqjjosfqj.AdEncryption: java.lang.String b(byte[])>
		SHA-256: eb31f97ac8d5ce7fbb54ee3586cc29580bcc3048f8a4c4e82b3e8b9a6b5c4bd5
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.millennialmedia.android.MMSDK: java.lang.String getMMdid(android.content.Context)>
		SHA-256: 8ac503c14f1c54e3f933b0da2a587ad95b3b497eaf9d5d011d22d999765f43de
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.pjqjjosfqj.AdEncryption: java.lang.String encrypt(java.lang.String)>
		SHA-256: 884acde17469dc5b55ac84cb95b170912634fa71bfdb45ad198f5236406f1c69
		Secure: true
	Object:
		Variable: varReplacer4376
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4376)
		Method: <com.appfireworks.android.util.AppEncryption: byte[] encryptAES(byte[],byte[])>
		SHA-256: a77787c5f5df51a72b5078bc5402660c4d8f6848e970ffde53fc055d63d69e48
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5653)
		Method: <com.appfireworks.android.util.AppEncryption: void <init>(java.lang.String)>
		SHA-256: 8464cebeff22cf9e2b9301aef88f34fff56d4c9ae5dca699cfc34cd524dab45b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.p: byte[] c(byte[],java.lang.String)>
		SHA-256: 33904579d888fb8abeafb5e95baa5f02d26c136a72ed6b40020b668345aaa9d6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.pjqjjosfqj.AdEncryption: java.lang.String b(byte[])>
		SHA-256: da811114f7116ae09d191587c459490a9f2c01d1777163aeb68dcf875cf6fe49
		Secure: true

Findings in Java Class: com.millennialmedia.android.MMSDK

	 in Method: java.lang.String getMMdid(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c3b85f5fededcbe909c0b58a34dfb6432596d8421f742364276ef252f20503b9)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2644)


Findings in Java Class: com.gamefever.slotfever8.SlotFever

	 in Method: void onCreate(android.os.Bundle)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #da187d9d3ce751dfbcf9ac8295c8f392fbb55e58f272f3744ba61243261bf712)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3106)


Findings in Java Class: com.appfireworks.android.util.AppEncryption

	 in Method: byte[] encryptAES(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #64b2674c385bd976e19a29c708f7d3e471881f00d1823556416ccf6e88245a56)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4377)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4375, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #64b2674c385bd976e19a29c708f7d3e471881f00d1823556416ccf6e88245a56)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4377)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4376)


	 in Method: byte[] decryptAES(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6f9fd9715d5c327bd2873579a83ef8e9cb01ae63c7dcea5ec39814a32765545d)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4417)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4418, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4419)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6f9fd9715d5c327bd2873579a83ef8e9cb01ae63c7dcea5ec39814a32765545d)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4417)


	 in Method: void <init>(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5653)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #628947e5885367c404c438258d3938ea7166d3eb0d8f232d9e7f5c1b727355e1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5654)


	 in Method: byte[] getRawKeyAES(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer4372, $r2)


	 in Method: java.security.spec.AlgorithmParameterSpec getIV()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.tapjoy.internal.il

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e4e14bfa2ae8efa582323c382e72dc1b2e9c3360709c4b42d9fb88c13d9bee6d)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9100)


Findings in Java Class: com.tapjoy.internal.hi

	 in Method: java.lang.String a(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #68bc5d940409796018ebf17d32aa2bc4e446bb677f30592d51aea4dbf1ed44a4)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.internal.p

	 in Method: byte[] c(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7088, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7086)


Findings in Java Class: com.tapjoy.internal.ex

	 in Method: javax.net.ssl.SSLSocketFactory f()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12114, varReplacer12114, varReplacer12114)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12114, varReplacer12114, varReplacer12114)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 61

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 12
	TypestateError: 1
	ConstraintError: 7
	IncompleteOperationError: 1
=====================================================================
