Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.geaxgame.pokerkingvip-052D7D754250B53B7DF9EEC45033699F18E0424DBEF3C0A5FCF7C02290FB8857.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 349083  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12255)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 1a8c292f53ee0a20d78d225a54e58ad135cfa234840a24f61bfc58b1912ebee
		Secure: false
	Object:
		Variable: varReplacer5572
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5572)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 4fb6e07568b3bd9087358e80ece3b9317ee5d4ed8dea0edff8fa18ec668c23a3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2059)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: 485f020cc254d627a8e27874dccc3a8fc2677cb86a8487bb53f30fc325a33d6e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.appflood.e.j: java.lang.String b(byte[])>
		SHA-256: f0a711a704dba212a150f9b585675172a455965ee158cf4fba7f3f516f4fa21d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: a3232e8688ae4e198ca0b61a1f294125840bb3e949c51352e910c17120326afc
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: varReplacer12256
		Type: java.lang.String
		Statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer12256)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: f7768b9d662cd9690fa1df1328b18082961127b3dfcea841adcb623218ab16b6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.geaxgame.pokerking.util.OpenUDID_manager: void generateOpenUDID()>
		SHA-256: 383e92c6a9159fc4f0849cfb26da514bdc062562f7df112fbf4a2f6833661549
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer2057)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: 7b30611d05a83f1ee811a03455521acfaa064e2f8ce7a924eda9c84c4dacfc69
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5107)
		Method: <u.aly.bk: java.lang.String b(java.lang.String)>
		SHA-256: 96c0d95648eba79526f94395fd0f55e8ad37955015d113b4458bf4eeb8ac88a6
		Secure: true
	Object:
		Variable: r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer12256)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: acbe6fed61a20857cf540db237dac4fca17c0caac6f16b742802fe0a299198be
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5071)
		Method: <u.aly.bj: java.lang.String A(android.content.Context)>
		SHA-256: 521d66c614b1ff24534cc0ca4d0d9e0c015c8e8989ffbbe69b124d2e6785de23
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.geaxgame.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c678472b4c19c53650e756c77dab364889209724da847a2f30c698a83517174f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5572)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 52556906c5158e60d5aa949071223c1f98b1a2b8bd309ee6473efa4671ce04dd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 8407a152a750198a9cecc8c173b46fb5748136d260fe6f5fbe4a174451640e66
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5575)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: bcded8847ce02899fffa882af3cde96839e715cd3b5db09695f22f0d8a0977a8
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5571)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 21d80e2d0959a6b4f43fb9db6cd8ef3ae19d634f40e60578e6637a33445b69ff
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2060)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: ded5983047d9c59c12fde601ef9298ec8e5296305919d1bfac816626d87e41c4
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.bj: java.lang.String A(android.content.Context)>
		SHA-256: 58724a361bbf5df4daf876eebe3769418ddddb0f7192ba5788d5f79f73bd4736
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bk: java.lang.String b(java.lang.String)>
		SHA-256: 7b0e9e4b4482b77d7e90603a509c41cb6b9a71b4e80cef4cb52bd8a7591abd17
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.fyber.utils.q: java.lang.String a(java.lang.String)>
		SHA-256: 256532345a701e2c92c6fc440f379e41a1481858b36eecdd69cc4c3079be8928
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer12352)
		Method: <com.geaxgame.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 856d91a816dbf2c8cc0bd2163ae42bf67c324f931362d379c1bbec02cf6fe6df
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bk: java.lang.String a(java.lang.String)>
		SHA-256: bb73c91bc1e3bbdcada382ac78affdca310f5624af49e618b853b401fa88d569
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: 5023d1fb23f858755586a274bab9b4068723c91183e76eae89e1088436e82dd2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer943)
		Method: <com.fyber.utils.q: java.lang.String a(java.lang.String)>
		SHA-256: 43c23c4f482f7e65e97898fbed0e79362ca551ada59cd09d0689ec0187dc061
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2058)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: f0043946f196eaf0fb4eac129b152c85e40810086d42ada621e71806c6675bb8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1633)
		Method: <com.appflood.e.j: java.lang.String b(byte[])>
		SHA-256: 9b32374c7899bef83a9c86745c06564412db7e398a934e362d11e8edaa5b5feb
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5079)
		Method: <u.aly.bk: java.lang.String a(java.lang.String)>
		SHA-256: a6f5e0618d2fa50494ca5ace55f287a383e3bc7aebb60ad42729330eca19807a
		Secure: true

Findings in Java Class: com.appflood.e.j$b

	 in Method: void <init>(java.lang.String,byte[])
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r5)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #7b30611d05a83f1ee811a03455521acfaa064e2f8ce7a924eda9c84c4dacfc69)
			Second parameter (with value 1)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer2057)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ded5983047d9c59c12fde601ef9298ec8e5296305919d1bfac816626d87e41c4)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2060)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f0043946f196eaf0fb4eac129b152c85e40810086d42ada621e71806c6675bb8)
			First parameter (with value "PBEWithMD5AndDES/CBC/PKCS5Padding") should be any of {AES, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2058)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer2057)


Findings in Java Class: com.fyber.utils.q

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #43c23c4f482f7e65e97898fbed0e79362ca551ada59cd09d0689ec0187dc061)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer943)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5573, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5572)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5573, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.geaxgame.casino.client.api.AES

	 in Method: byte[] decrypt(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12254, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer12256)


Findings in Java Class: com.geaxgame.billing.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 31

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 1
	RequiredPredicateError: 9
	ConstraintError: 4
=====================================================================
