Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.gscandroid.yk-0E4E9BF6D6D411B3EC3E989BC3409D78C4E347BEF8C9F3400916B2312C2F5B6F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14484)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 3c12c66c3a0a14f5ddd2ae0a3f0aa1136db4440a5a994617fab175f08a8e9d46
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer13730)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 62019ab1bf35f3061f8f5cc040008ccb7bc8270aa0973ed7725ed6b76d992cd9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1872)
		Method: <com.cimb.plugin.SSLConection: void allowAllSSL()>
		SHA-256: 3dcb019a5cb35fb98d79379fabbf2d000b8d17c00f56947394a363fa6e437121
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <com.cimb.plugin.LoginUserActivity$attemptLogin: org.ksoap2.serialization.SoapObject doInBackground(java.lang.String[])>
		SHA-256: dd7705996fa4edaeee7100d4bfd9cf79ae68ae3fdf1352562d99f9d5ac441b15
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11912)
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: 265daa19d326c9cbeec636a807cffd5137729486f57b725e5e82808ceeb7b33f
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <com.cimb.plugin.LoginPasswordActivity$attemptLogin: org.ksoap2.serialization.SoapObject doInBackground(java.lang.String[])>
		SHA-256: fefc64b6ccb3b8d24bffb51e0ef6c5ed7308205c8ea5672aa4ba2e1960e1203e
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1819)
		Method: <com.cimb.plugin.LoginUserActivity$attemptLogin: org.ksoap2.serialization.SoapObject doInBackground(java.lang.String[])>
		SHA-256: 38554cf886e86b98a38e7d0972696a7eaed6e7010cf96753bb7e563dfacf9d75
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12801)
		Method: <com.threatmetrix.TrustDefenderMobile.ApplicationInfoGatherer: java.lang.String getHashForPackage(java.lang.String)>
		SHA-256: 33e9868f010ac8d66f36d2c93944201ce641a6bd8853f75d3792888875f21a80
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.threatmetrix.TrustDefenderMobile.ApplicationInfoGatherer: java.lang.String getHashForPackage(java.lang.String)>
		SHA-256: 8cf7902b27cbfb1655cfc3a68c023c63d130f74e3c02a4271a5e99c49d399cb6
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.MessageDigest
		Statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6741)
		Method: <com.gscandroid.yk.activities.FacebookShareActivity: void onCreate(android.os.Bundle)>
		SHA-256: d6a1d639e61af9c94f6c86208cdad586ed0886a5b564ebc606ec25804a9df1b5
		Secure: true
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.gscandroid.yk.activities.FacebookShareActivity: void onCreate(android.os.Bundle)>
		SHA-256: 28fb104d53e09b4d845668195fe016ce92b9e7c8711d67f68c1cd829c13e9e67
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer664)
		Method: <com.threatmetrix.TrustDefenderMobile.StringUtils: void <clinit>()>
		SHA-256: a520238f3e6cba7d3bc44f92a8fae0911d419bb28bbf125b32af400d9aeab6cf
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13193)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: e86c52bf577afe36251503099c279328c0c896246833f69415d54a4d11a394b0
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaH(java.lang.String)>
		SHA-256: b99893f35dd36825378e8706865a4357958a98bd12dbd264e8cce2e0999aa454
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String md5hash(java.lang.String)>
		SHA-256: 2927e1a5cb224287b03f6dd515d016a63eb5cb0704288180ae31d42a6182fe4b
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer665)
		Method: <com.threatmetrix.TrustDefenderMobile.StringUtils: void <clinit>()>
		SHA-256: fe2efc173917669df1a565f2ffb825e62248aca81e4b19b787ed5b450589c88e
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8005)
		Method: <com.cimb.plugin.LoginPasswordActivity$attemptLogin: org.ksoap2.serialization.SoapObject doInBackground(java.lang.String[])>
		SHA-256: f38c662cfa1074876d94ec1f0a8e064ebd0eca214151c3b760a09a40fb455699
		Secure: false
	Object:
		Variable: r9
		Type: java.security.SecureRandom
		Statement: specialinvoke r9.<java.security.SecureRandom: void <init>()>()
		Method: <com.cimb.plugin.SSLConection: void allowAllSSL()>
		SHA-256: aa055fb4b5ca1b953b172613e2bead8683d6d80b99b482f3ae5918ed40084751
		Secure: true

Findings in Java Class: com.threatmetrix.TrustDefenderMobile.ApplicationInfoGatherer

	 in Method: java.lang.String getHashForPackage(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #33e9868f010ac8d66f36d2c93944201ce641a6bd8853f75d3792888875f21a80)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer13727, varReplacer13727, varReplacer13727)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer13727, varReplacer13727, varReplacer13727)


Findings in Java Class: com.cimb.plugin.SSLConection

	 in Method: void allowAllSSL()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1873, $r0, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1873, $r0, $r3)


Findings in Java Class: com.cimb.plugin.LoginUserActivity$attemptLogin

	 in Method: org.ksoap2.serialization.SoapObject doInBackground(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1816, $r8)


Findings in Java Class: com.cimb.plugin.LoginPasswordActivity$attemptLogin

	 in Method: org.ksoap2.serialization.SoapObject doInBackground(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8003, $r8)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	TypestateError: 1
=====================================================================
