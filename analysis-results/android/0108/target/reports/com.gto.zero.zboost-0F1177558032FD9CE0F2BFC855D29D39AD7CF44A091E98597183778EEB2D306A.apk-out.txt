Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.gto.zero.zboost-0F1177558032FD9CE0F2BFC855D29D39AD7CF44A091E98597183778EEB2D306A.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer10046
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer10046)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 6d1e9a44b56bc914b71336ccaf5bb2e7854fb8ac512ac32ca2b2394be81da277
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 81a1924c783053f9b8ba0874b4281d48641e9f5fc0008f3e93a1ee9a3e36d975
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9290)
		Method: <com.gto.zero.zboost.database.i: void <init>(android.content.Context)>
		SHA-256: 7f18e316783885ac8a4ffb30d8b6d6e35c088f3ee2579a048e5beb5e4de9e5cd
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10045)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: af05277eb9e5e0a8df696cf0d56170a6f22a271ee3d1a4e802b3555ee08ade02
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9316)
		Method: <com.gto.zero.zboost.database.c: void <init>(android.content.Context)>
		SHA-256: 6e2f891af00b45e88da5c47c9b949d4efcd8b7416a4e4fc64229b9a7d491801d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer9317)
		Method: <com.gto.zero.zboost.database.c: void <init>(android.content.Context)>
		SHA-256: 21ee2cc14ea5d5ef4a312b57a0efeccd37167dfc6f828d55447b843b5095e733
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer10046)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 203b91a6ce20ef5158fca66e47653ab7ca56fc04f8eff94480ccb4e4c5e9ac34
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 8f2267b288a6974230c49ee6f5c7186b65aa65c38b87b7ea205d114674adb6d1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 28067c78f6b9f9cc96644426aa22057da0e09f52dc078ebb6ca1a3c4ac756fac
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer9293)
		Method: <com.gto.zero.zboost.database.i: void <init>(android.content.Context)>
		SHA-256: b06161f508b80da05d0230ff928068616add68306371e1d6c63ab3840e2065bf
		Secure: true

Findings in Java Class: com.gto.zero.zboost.database.i

	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #af05277eb9e5e0a8df696cf0d56170a6f22a271ee3d1a4e802b3555ee08ade02)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10045)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer10046)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10047, $r2, $r3)


	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer9291, $r2)


Findings in Java Class: com.gto.zero.zboost.database.c

	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer9319, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ConstraintError: 1
=====================================================================
