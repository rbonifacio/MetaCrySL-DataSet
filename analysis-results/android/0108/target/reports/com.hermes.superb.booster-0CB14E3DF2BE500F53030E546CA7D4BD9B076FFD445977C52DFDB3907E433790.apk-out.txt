Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.hermes.superb.booster-0CB14E3DF2BE500F53030E546CA7D4BD9B076FFD445977C52DFDB3907E433790.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,byte[])>
		SHA-256: ac15a362f2ae2f0a8380f561f2a0510521f79b4de643c8e87cc89c93203a384
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 412bf4ed61073de9a0ffc866fcb699e1cc15ef84b8208e61e319c37dd5caa685
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12732)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: cde8b2e00e2bedb29eab764f6ac91d67758490f6c551b30b794cebf10249b70c
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 8308cc419a228b856ecf812f4a1bcec969318612ae2f3894f4977a38456c2fd4
		Secure: true
	Object:
		Variable: varReplacer14629
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14629)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: b00111977f6e6de80b4c7f641ea63cd15b3e02fc16736632413033f770daa6d7
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.h.a.a: byte[] a(java.io.File)>
		SHA-256: 7d5e7b0c1cfa70ba4613c318162e9e61487d6805ffbb7c607cb6a8fc91f841c2
		Secure: true
	Object:
		Variable: varReplacer12733
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer12733)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 9ff52b9e0d6aea5d09eb6e45a906814b5a5577f7f7bbd31124f6181ad49dc865
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.rubbish.cache.d.a.a$1: byte[] a(byte[],java.lang.String)>
		SHA-256: 2b7e9c1bed683db459482ba6e4bace544c2a1aebc1e1c96877e6a04a38d1d177
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3724)
		Method: <com.h.a.a: byte[] a(java.io.File)>
		SHA-256: fac0ab45660552a1efbf8e5bc6a385d4706fe03c6a6d02488a9fb74e7ba54aa
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8174)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 9908c8458854d3030ce1ef1f0f85a8575d2c3c7723055820f4a53e7d61783dc2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,java.io.InputStream)>
		SHA-256: c77dd7e3123e090a0f70bfa24715598749f909592a095168b0c423c9eca397fb
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8176)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 8b310d4473befdf4e9a169553aa2335427ea87650afcb2a78beeef2f01486df6
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 84f14f624f4d28cf9107055bc7a766b26e093fab380bdd1ccd7ba93d1ad0c206
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apusapps.b.a.d: byte[] a(byte[])>
		SHA-256: 40994c5c62a2939a6203497716434df31caaf7367e749f9d6ff943a5690f90ea
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 528f34eade1d2e1325de8f7f1173df3cc96b2f64f4b1332342b0ddfc30f38573
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9558)
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,java.io.InputStream)>
		SHA-256: e8a59b7a8588b044421959923c69e2f379bb7dbb34995f96957e7668d34b72ae
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1da94bc65736b5daec9fb707b121792f525ce16cac0638f4e17beabe1af97476
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.tethys.a: byte[] a(android.content.pm.Signature[])>
		SHA-256: 429798205c2c83583d727c70683157d1a7176cd097489fb4eae5c3e713da1e13
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.h.a.a: java.lang.String a(java.io.InputStream)>
		SHA-256: 429798205c2c83583d727c70683157d1a7176cd097489fb4eae5c3e713da1e13
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 65ca7ceaf382c21c1c08f0077dc608c5bc115ac43a0fb223afa54fb3a12c84fc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 412bf4ed61073de9a0ffc866fcb699e1cc15ef84b8208e61e319c37dd5caa685
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer14628)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 69f6d60be4badf429f162c9b63d179b1bb842732f991a9884ba40020af4ad939
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3450)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 7f851b7cd7d128c6cfe3dccc1cc4529dc72b0ff1c4a5a670dd8d99bbe7a0f2e2
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3449)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 6b310308c8e91003baa8522ef9d4c13c0b8b7ffe13138d56546f9284f5d19985
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5388)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: b9bebc2f5d7b6e3c64f4bfe77b55c6924d598b832b9e270ab9446a2926d8c78c
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 84f14f624f4d28cf9107055bc7a766b26e093fab380bdd1ccd7ba93d1ad0c206
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14629)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 4ee4508a68494ee2d766a9efb189bd25d2c1ae0cbc63353f164fab613f391d31
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6346)
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,byte[])>
		SHA-256: 6d781d88f965d797d2029dbe75b7eaf370de70ed8318a1396b61e33d55b18a18
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3640)
		Method: <com.turbo.global.utils.h: byte[] a(byte[])>
		SHA-256: f38299f4260f6329c6ebb3ac17a33c68e91e21da4061e19061177b4183bfe62f
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11793)
		Method: <d.u: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 2bce8625d35271fc4210f2fa38084e86b118af6afec9e91b93cfdf0350246333
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15527)
		Method: <org.tethys.a: byte[] a(android.content.pm.Signature[])>
		SHA-256: 614a2515bb058aecfe354aac5e68285be0ac637b79884d6b26ce96721846ce6
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12738)
		Method: <com.rubbish.cache.d.a.a$1: byte[] a(byte[],java.lang.String)>
		SHA-256: 7b2efbcbb1fe0d7a22c6470fe827a4a411b1383a9b89c39463c443fed94848fb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer12733)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 69037c0b458ff7ad70c7a20587a676d4a2fcab5ee01c2c8da78439c59e782d75
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14167)
		Method: <com.apusapps.b.a.d: byte[] a(byte[])>
		SHA-256: f43f8dc85856bc9fd058ab771796511bf58872ffe2ddf63c1fa6596a7ae02560
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.turbo.global.utils.h: byte[] a(byte[])>
		SHA-256: 5d9d30a8fc2b3cab3ce50f64335d69be867a3336784fba439579799587daaa12
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 8957e7ab3cccd7e6f0619806ed1ae427ddffbbf870e0f8d39613a1ef40c68d4a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3685)
		Method: <com.h.a.a: java.lang.String a(java.io.InputStream)>
		SHA-256: ad0cfd7022c1ad1b8d6f28a0dcb54e6fd8681710059e792994eb37a0f28331e
		Secure: false

Findings in Java Class: org.enceladus.appexit.a.c

	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #7f851b7cd7d128c6cfe3dccc1cc4529dc72b0ff1c4a5a670dd8d99bbe7a0f2e2)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3450)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer3452, $r6, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6b310308c8e91003baa8522ef9d4c13c0b8b7ffe13138d56546f9284f5d19985)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3449)


Findings in Java Class: com.h.a.a

	 in Method: java.lang.String a(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ad0cfd7022c1ad1b8d6f28a0dcb54e6fd8681710059e792994eb37a0f28331e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #fac0ab45660552a1efbf8e5bc6a385d4706fe03c6a6d02488a9fb74e7ba54aa)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.interlaken.common.d.c

	 in Method: byte[] a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8b310d4473befdf4e9a169553aa2335427ea87650afcb2a78beeef2f01486df6)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8176)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer8175, $r6, $r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #9908c8458854d3030ce1ef1f0f85a8575d2c3c7723055820f4a53e7d61783dc2)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8174)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


Findings in Java Class: org.interlaken.common.d.k

	 in Method: byte[] a(java.lang.String,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e8a59b7a8588b044421959923c69e2f379bb7dbb34995f96957e7668d34b72ae)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.rubbish.cache.d.a.a$2

	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #cde8b2e00e2bedb29eab764f6ac91d67758490f6c551b30b794cebf10249b70c)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12732)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer12733)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12734, $r3)


Findings in Java Class: com.apusapps.b.a.d

	 in Method: byte[] a(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f43f8dc85856bc9fd058ab771796511bf58872ffe2ddf63c1fa6596a7ae02560)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14167)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f43f8dc85856bc9fd058ab771796511bf58872ffe2ddf63c1fa6596a7ae02560)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = null


Findings in Java Class: org.tethys.a

	 in Method: byte[] a(android.content.pm.Signature[])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #614a2515bb058aecfe354aac5e68285be0ac637b79884d6b26ce96721846ce6)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.my.target.core.utils.h

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14629)


Findings in Java Class: d.u

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11791, r6, varReplacer11791)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11791, r6, varReplacer11791)


Findings in Java Class: com.rubbish.cache.d.a.a$1

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12739, $r8)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 38

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 4
	ConstraintError: 5
	RequiredPredicateError: 10
	IncompleteOperationError: 2
=====================================================================
