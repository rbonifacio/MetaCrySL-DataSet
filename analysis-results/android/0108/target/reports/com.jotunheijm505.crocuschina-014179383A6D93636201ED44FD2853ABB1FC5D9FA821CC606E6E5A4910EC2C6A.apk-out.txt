Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.jotunheijm505.crocuschina-014179383A6D93636201ED44FD2853ABB1FC5D9FA821CC606E6E5A4910EC2C6A.apk
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.jotunheijm505.crocuschina.c: java.lang.String a(java.lang.String)>
		SHA-256: e3c108363c7211abfcb0939d2bb945e5340f4e4a9e61bf9296b7c83ed2af09c1
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <com.jotunheijm505.crocuschina.c: byte[] a(java.io.InputStream)>
		SHA-256: f63ef1a9201c27285b3607e535c7b9b7ab605db2fd14cb4b86931af9740a173f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String a(java.lang.String)>
		SHA-256: faf31a06c483acf8782820ab0e741e21d0503e125bed228a07b7e85eb0bb093
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer208)
		Method: <com.jotunheijm505.crocuschina.c: byte[] a(java.io.InputStream)>
		SHA-256: 7d87ba3477fa186db906bb72bfd97f173b66afc8b2c2118889a701776b3352f2
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer77)
		Method: <com.jotunheijm505.crocuschina.c: java.lang.String a(java.lang.String)>
		SHA-256: a5c87936d2ebde5193b4d392220cef699aa92ebce4ce487798fdc79ed3c3f147
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer209)
		Method: <com.jotunheijm505.crocuschina.c: byte[] a(java.io.InputStream)>
		SHA-256: d37f0b5fba0d1abb16985bff9fd75558d061731ad0af293e40e60843c277481d
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r9.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r8, $r7)
		Method: <com.jotunheijm505.crocuschina.c: byte[] a(java.io.InputStream)>
		SHA-256: d574090e174e14a4bcfe5067d6813c9d29f02ce3db764a3f118ea53fc9c8bdeb
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <com.jotunheijm505.crocuschina.c: java.lang.String a(java.lang.String)>
		SHA-256: f63ef1a9201c27285b3607e535c7b9b7ab605db2fd14cb4b86931af9740a173f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer84)
		Method: <com.jotunheijm505.crocuschina.c: java.lang.String a(java.lang.String)>
		SHA-256: ff926cb12f7427e11324d410d3d1602820cde99e322489e0fcc2555bde15a97f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer771)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String a(java.lang.String)>
		SHA-256: 3839871982284810d34284e74c8aec4641951a13d85b78409c108c049a976ca8
		Secure: true

Findings in Java Class: com.jotunheijm505.crocuschina.c

	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer82, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a5c87936d2ebde5193b4d392220cef699aa92ebce4ce487798fdc79ed3c3f147)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer77)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #ff926cb12f7427e11324d410d3d1602820cde99e322489e0fcc2555bde15a97f)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer84)


	 in Method: byte[] a(java.io.InputStream)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #7d87ba3477fa186db906bb72bfd97f173b66afc8b2c2118889a701776b3352f2)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer208)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d37f0b5fba0d1abb16985bff9fd75558d061731ad0af293e40e60843c277481d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r9.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r8, $r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d37f0b5fba0d1abb16985bff9fd75558d061731ad0af293e40e60843c277481d)
			First parameter (with value "DES") should be any of {AES, DESede, RSA}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer209)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	RequiredPredicateError: 3
	ConstraintError: 4
=====================================================================
