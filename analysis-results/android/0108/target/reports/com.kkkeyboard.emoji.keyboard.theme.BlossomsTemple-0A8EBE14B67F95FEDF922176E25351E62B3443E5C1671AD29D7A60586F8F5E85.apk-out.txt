Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.kkkeyboard.emoji.keyboard.theme.BlossomsTemple-0A8EBE14B67F95FEDF922176E25351E62B3443E5C1671AD29D7A60586F8F5E85.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1084)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: 3a712d0d4fd572ad70dceda7b84e1b3461dbffd6109af988d70cb5956dd4a36c
		Secure: false
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: c49baf8b2831a2be9aa3b8b2b456003f3087b1f5f20fd8411803ca8aa53c7285
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.f: java.lang.String a(java.lang.String)>
		SHA-256: 9c415df7a8795f09a7c84712adb6a9d47bdeab0ff98242a60bcc8fa99c39be8
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1795)
		Method: <a.a.aq: byte[] b(byte[])>
		SHA-256: 8d2095492b12a0f971f4638d20e2e7a7d647f26c869ed7f57ec5fc69b30da79f
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.aq: byte[] b(byte[])>
		SHA-256: 1f8589f92ddd9c9fc9264f34a3c71dc073c5e5b21900388f0f0b484642e60f77
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.at: java.lang.String b(java.lang.String)>
		SHA-256: 4ba1a1aa25a09e0dbf1db3d3c2aae7633b122bab5951673f546a6b83d4058959
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.aq: java.lang.String c(java.lang.String)>
		SHA-256: 40770e6c1cd39f8d900d47a26344c77cc362948008cb3c1a44557cfae2545b9c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1087)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: 552e6817c6d22d8404596609d6d672541fbae65b3de33ad745926885b28d1ed1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2636)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: d95753132ac980f96fe97dbbe9164cb764e3caf0f2a513955cc0debfaa823828
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.a.at: java.lang.String a(java.lang.String)>
		SHA-256: 47178459afb1109f1ed6b76ab69e8405e53f917906447e54d6ccd8ceab09aa2b
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: 525bebaa4b250680db00d0bf08b6bd1f38c1a5dd661c3216ff32758250cb92ed
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <a.a.w: void a()>
		SHA-256: 151f8099740741e36599ed2c97f90f4e265b9344d358d05ac8628308b5868b7
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.d.b.a.f: java.lang.String b(java.lang.String)>
		SHA-256: 402b184e9e59555d389ca3f32bd9dba6a1f6d2cda790902ccde2b496ab4dfeb7
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1526)
		Method: <a.a.aq: java.lang.String c(java.lang.String)>
		SHA-256: 433c57b39e4a54796facc74d1c00646963f2a317db093e58a8b39ba3f7d57813
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: 87691fb5b53b2114df82b3e56958c750c9cc905fc478f0880f4d06baf2fc0279
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3776)
		Method: <com.android.volley.f: java.lang.String a(java.lang.String)>
		SHA-256: acb1485c1a238351acf53d44583ceea04ebf179e34e145bf2d3cca0dbf786fc
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5721)
		Method: <com.d.b.a.f: java.lang.String b(java.lang.String)>
		SHA-256: b6c5e0ef7e9e46d70551b2bad1628e98834ecf1bd3980e33691cbfa5674d4d30
		Secure: true
	Object:
		Variable: varReplacer1084
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1084)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: f5172724f6cec35ebb5d7ec515c11a8472b4c5e92f6673506c0ecf951997ac27
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5868)
		Method: <a.a.aa: void <init>(java.security.KeyStore)>
		SHA-256: b1d085f939530cf5224fd9d109565854bccaf5a81858ec6a9f0802850c693d55
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2124)
		Method: <a.a.as: java.lang.String q(android.content.Context)>
		SHA-256: 35ad5fb6c14bf20247528ff6529a3a1a1b6ffaaa5011652e95ceb2d47a6927bd
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: 7e34009075c8bf54d3bc1805145a5b508ed5d19c9b006bd0c54fb4b28cdfabf
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1086)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: ca74f6350c316a4d37def4f6fc48597435efc7eae1e6f4601070a8dbbe5bd48b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: 813ba64931cd1741e31c1b6868d81ca5ca066346a951c1abcf84b799c441bdf
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1085)
		Method: <a.a.aq: byte[] a(byte[],byte[])>
		SHA-256: 1239ee7c43587a5722544026c8a3c0ffd2ce757b7322662ef1e07a6bef38e8c5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1800)
		Method: <a.a.at: java.lang.String b(java.lang.String)>
		SHA-256: bfbc21aecc0c8dc23dee69386b3352c9b989f131cc09575234476a9bbf4cd02f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1074)
		Method: <a.a.at: java.lang.String a(java.lang.String)>
		SHA-256: 84390d49e982aac88626258e4f3f27df442910f6d28ad4b913ae00a5a1397e4b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3330)
		Method: <com.facebook.ads.internal.util.g: void b()>
		SHA-256: 2b42a891688457e611bc92342fcc33e19062aa12e538481871e2d197f4ad9dea
		Secure: false
	Object:
		Variable: varReplacer1087
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1087)
		Method: <a.a.aq: byte[] b(byte[],byte[])>
		SHA-256: 6794327e16242ad23495b0a1b5cad05d9c6dcf76b47c4433452c0335c00d286
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <a.a.as: java.lang.String q(android.content.Context)>
		SHA-256: 278089e7ed8e672a12600343bdab964e1eb1672563b8ae173894324378bc306e
		Secure: true

Findings in Java Class: com.facebook.ads.internal.util.g

	 in Method: void b()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2b42a891688457e611bc92342fcc33e19062aa12e538481871e2d197f4ad9dea)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3330)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3331, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3331, r12, $r3)


Findings in Java Class: a.a.aq

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1084)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1083, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1083, $r2, $r4)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1088, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1087)


Findings in Java Class: a.a.aa

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5866, r7, varReplacer5866)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5866, r7, varReplacer5866)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 11
	ConstraintError: 1
=====================================================================
