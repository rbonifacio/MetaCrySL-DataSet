Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.monitise.mea.android.fortebank-00A80ADD4A0DA78AF807F1A8DCD52BD3ABE3B80C501145CE721EE1ED3C1E4CCB.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 4eca516dc04a7ed2480676f09198d61a3fe719ea8d12579aeb90711e46c517bf
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3609)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 256b3e8f2ba5a1c602a3ad2208233ac2d1139360a1a69692cdd4d67017a147ad
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.SSLContext
		Statement: $r11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4701)
		Method: <cjp: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: f694c5f6ce1dc75fd78e19f67c98741387e9be5e9f6facc1053562ee4062bac7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4157)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 7835b966f0efb002fa12f3fe019b3bc2bb09f0135d08c638d1c63000c7642047
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 4eca516dc04a7ed2480676f09198d61a3fe719ea8d12579aeb90711e46c517bf
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: b72db40b68a9b6afef97b3af64d64c426e3ea36307107ee4a3ddab23b771981e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1592)
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: 4b11c63d7b289111818e8cf7eb4fca86ec0c98b5aac7a6cd808fd12b3f2170db
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7187)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 7c1704bb135ad72357535d162f9301a3f746bcff4d27b53fabbaf5ca35dc8961
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 9e47b02dfb9c74f4866b9ad191499bf3082889c11a77e7a84cbb518717bbb724
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <dqc: eba a(eba)>
		SHA-256: 800b138653cd56c4db3b847d79fdc9123f9c0fdcff762aac97bf66d5b115044a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 1f31580920da22d100f3b9cef3e133c521a496cf62e80f4549eef22de5b1121e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1591)
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: 91418c807571b4e33bf2eefa3c621d480493b6e872ff824cffb96853788b302a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 3d3773e338a654191a74de599eb2819d59784a2d15c025cf6fe97e29ab369e8a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer4134, varReplacer4135)
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: e3d5cd558659362128605487ff2644327ec9bc45bcfe7cfb352a3e76b44eefc3
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3600)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: b5541aa99c4213a64d00020d67d16a58599c5406f509837ce6c47acb630e644b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5618)
		Method: <cjr: void <init>(javax.net.ssl.X509TrustManager)>
		SHA-256: 1477e819827cb190cf44f758d0479c43ee3fa7408fe561dabcf61acf34ba1c41
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5622)
		Method: <dma: void <init>(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: aba7689871e6e8f3a3ada46b6b4fa716e26cbb92b6974369d077305f32a1389a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1617)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: bc87d0a793d91cdcf1627c23d35740596aad75ed2c7f492efe930e6590326144
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 47049074634b680d5aecb4d23434c3ac695c34d9853a0c465f98359cd6ec2c2d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 5ec7a47afe1ae562d4d7cdd8eeb5c1da1ec966e36f2da6ce6d5e32fc9471f9ac
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: ce63b0eb57c5924f1ea668bf881e59bc358571b8e793c42cbaec361fced1670e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 782f4e675b92efede98451fc8ebd6de41ac730c9a36441054aa76b8a166d5b9e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1621)
		Method: <dou: javax.crypto.SecretKey b(android.content.Context,java.lang.String)>
		SHA-256: 118b55ae7e647d5db42d0d2310e998c75d3d91a26c965d827677998c6f8d671
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7777)
		Method: <dqc: eba a(eba)>
		SHA-256: 6d2ab5c6554c208445c00455604db19270fa99e15d290a46621da5a3e1add14
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3612)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: b51f647e5455823c873868a4a7fa7cf15105c64dd6b39294141a236ecc55aecd
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 4c016cfc9356af9e0e52bb7c385984e2d0d9792c594b9ed26282b859a7f1d31c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer4136)
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: af6fcc4afd2746812fae819528edfe3b342f1060da3e4f9f292846b4c35bf14
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 9e47b02dfb9c74f4866b9ad191499bf3082889c11a77e7a84cbb518717bbb724
		Secure: false

Findings in Java Class: dou

	 in Method: void a(android.content.Context,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #91418c807571b4e33bf2eefa3c621d480493b6e872ff824cffb96853788b302a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer1594, $r6)


	 in Method: javax.crypto.SecretKey b(android.content.Context,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #118b55ae7e647d5db42d0d2310e998c75d3d91a26c965d827677998c6f8d671)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #118b55ae7e647d5db42d0d2310e998c75d3d91a26c965d827677998c6f8d671)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r10 = virtualinvoke $r5.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer1622, $r9)


	 in Method: byte[] a(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1618, $r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: byte[] b(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4156, $r0, $r5)


Findings in Java Class: djx

	 in Method: java.lang.String b(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #b5541aa99c4213a64d00020d67d16a58599c5406f509837ce6c47acb630e644b)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r13 = virtualinvoke $r12.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer3604, varReplacer3605)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initSign(java.security.PrivateKey)>($r10)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initSign(java.security.PrivateKey)>($r10)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #b51f647e5455823c873868a4a7fa7cf15105c64dd6b39294141a236ecc55aecd)
			First parameter (with value "SHA512WithRSAEncryption") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3612)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #256b3e8f2ba5a1c602a3ad2208233ac2d1139360a1a69692cdd4d67017a147ad)
			First parameter (with value "SHA512WithRSAEncryption") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3609)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #b5541aa99c4213a64d00020d67d16a58599c5406f509837ce6c47acb630e644b)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle}
			at statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3600)


	 in Method: java.lang.String d(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #af6fcc4afd2746812fae819528edfe3b342f1060da3e4f9f292846b4c35bf14)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer4126)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>(r17)


Findings in Java Class: cjp

	 in Method: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4708, r23, varReplacer4708)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f694c5f6ce1dc75fd78e19f67c98741387e9be5e9f6facc1053562ee4062bac7)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4701)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4708, r23, varReplacer4708)


Findings in Java Class: dma

	 in Method: void <init>(android.content.Context,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #aba7689871e6e8f3a3ada46b6b4fa716e26cbb92b6974369d077305f32a1389a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r8)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7184, varReplacer7184, varReplacer7184)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7184, varReplacer7184, varReplacer7184)


Findings in Java Class: cjr

	 in Method: void <init>(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5616, $r2, varReplacer5616)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5616, $r2, varReplacer5616)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 28

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 12
	IncompleteOperationError: 2
	ConstraintError: 5
	NeverTypeOfError: 3
=====================================================================
