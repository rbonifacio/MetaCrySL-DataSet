Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.prisoncraft.copsnrobbers-03F2FB35D14F1746348DEB5A85A71021017E2A72F14244B02F8EB44578A2EE0F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8144)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d834516f6a9edaaa0e969fcd487200fa28b92b98b1da0a990d626a8a94f24fb3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1da94bc65736b5daec9fb707b121792f525ce16cac0638f4e17beabe1af97476
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9212)
		Method: <com.appodeal.ads.t: javax.net.ssl.SSLSocketFactory d()>
		SHA-256: a5b264bca8116a27752c9eb4ee43de51f10440a4eacc1ea6fa318bc93b705e4d
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.yandex.metrica.impl.c: byte[] b(byte[])>
		SHA-256: 85537bc9b50d6607fe410c29a3d121f60ac749f7929dcf0179e1a7671ab71635
		Secure: true
	Object:
		Variable: varReplacer8144
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8144)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: db232830ec2359b24aced56643458b7fd6769bb6728ea1f2f331ffe7f08fbcf9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9556)
		Method: <com.yandex.metrica.impl.c: byte[] b(byte[])>
		SHA-256: f0ec22070bbd2c1818a21050940d308c9324b4f769fb455942dea48b044c77a4
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer530)
		Method: <com.yandex.metrica.impl.ob.ds: javax.net.ssl.SSLContext a()>
		SHA-256: fdd56b1ffb4f62a083d760982a1aadcbf6e11c6f65ad3818f142a3f842aff107
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3940)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: a706ee945d971e963d2655574811ebc65c97801428d45476259dcfed203b06dd
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer8146)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 3b666807eb54e28431abd40ec4e39f6c94436245d8625cf34c91a3c6fe126c37
		Secure: true

Findings in Java Class: com.appodeal.ads.t

	 in Method: javax.net.ssl.SSLSocketFactory d()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a5b264bca8116a27752c9eb4ee43de51f10440a4eacc1ea6fa318bc93b705e4d)
			First parameter (with value "TLSv1") should be any of {TLS}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9212)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9210, r8, varReplacer9210)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9210, r8, varReplacer9210)


Findings in Java Class: com.my.target.core.utils.h

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8144)


Findings in Java Class: com.yandex.metrica.impl.ob.ds

	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer531, r4, varReplacer531)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer531, r4, varReplacer531)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 5
=====================================================================
