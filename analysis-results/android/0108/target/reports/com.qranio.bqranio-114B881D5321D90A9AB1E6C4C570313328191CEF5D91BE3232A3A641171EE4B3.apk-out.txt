Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.qranio.bqranio-114B881D5321D90A9AB1E6C4C570313328191CEF5D91BE3232A3A641171EE4B3.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <com.localytics.android.AnalyticsHandler: void _updateHeaderForTestModeAttribution(java.lang.String,org.json.JSONObject,com.localytics.android.DatapointHelper$AdvertisingInfo,boolean)>
		SHA-256: c01b882ce9f8e5ef324c3b8d9131b55c7fa50a59a239ef9df76a0b4774ff7d4c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15485)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: b9b37f96e3c0bd7e4b4332247230c4104b0379fbac1b0329b64e6aa5ea408acf
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15130)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 12a9f43942ebbfe7ec9ba5bba54f8eb62402a3652f8461ef961c3c1379423f78
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer16115)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 32bb12c7ae6f65b2d504b05b0251cdf18dbf0854f0ba5179e44953626d48256c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10407)
		Method: <com.qranio.util.Security: java.lang.String decrypt(java.lang.String)>
		SHA-256: afc99386d04f5c9dc2b666090c9fe24193eb5503bcc82091106c63785e731052
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6538)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: 1a91d864fef54c90fc7f0364862f22b831183805a79a77e05eecea1cd1b2995f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16233)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String shaBase64(java.lang.String)>
		SHA-256: 1df48ce6c9e2daa1f7ac3cb1d1ec342ab90af26163391bfab3ad6c1c9b6a65a9
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17073)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 21b12bd33ae609805e795eb19244da43abb60fbbdbbc8d0ff6e77e7d0d54a947
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10487)
		Method: <crittercism.android.da: java.lang.String a(java.lang.String)>
		SHA-256: 8e6a0fa6146aa0d1f95a2919b0e1a98b98aabc3b7cec37516b6fad3196411e2c
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6539)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: 85b239141bd8e35debf22c5aeb4f8bd709fcd8557a6b5f43c6c58096ed36aa69
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11877)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: ea8d21c1a8e4765dcd9948dda6673d741cbb720d6f29ce9e8dc491e5a32a1559
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9949)
		Method: <crittercism.android.y: java.security.Provider a()>
		SHA-256: 715a3ab1cff21fbedb092e7b5ab0c88b0148437c2b60091cf5f487991aedb203
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.jarjar.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: b832aa670c828e2ede739dc34ac5c16bb43a49eaa1e85346ac40adef288109f1
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String shaBase64(java.lang.String)>
		SHA-256: 7e4c598fefb2cc0aa59230e140959cfefafbdf41dc1e16cb0f02ba069289e752
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.util.Random: void nextBytes(byte[])>($r2)
		Method: <com.squareup.okhttp.ws.WebSocketCall: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request,java.util.Random)>
		SHA-256: 5fd49c807860cbf1852f0291c01998409f82892e207cf76802dc130126a4dbbe
		Secure: true
	Object:
		Variable: varReplacer16112
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer16112)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: cdd6b17fef4afa3f6bcf42bd0cee79e6223a60d3ffbad07a3cd6d4f5c97bc3e8
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaT(java.lang.String)>
		SHA-256: 36ba1c4d4a21b43e8434065008241024dfe4622b0bb42c4c93bbc9c8a26a18ab
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.qranio.webserviceconnect.Security: org.apache.http.client.HttpClient getNewHttpClient()>
		SHA-256: 1be05182ec330625056542a313cb41901830cf37581d91b17c13cf3eb07684a4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.squareup.okhttp.ws.WebSocketCall: void <init>(com.squareup.okhttp.OkHttpClient,com.squareup.okhttp.Request)>
		SHA-256: 4b382ab64325a502c3d2d40fdfd66a1acd7d9c126f7523417345f0ebe57f6ee2
		Secure: true
	Object:
		Variable: varReplacer10410
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10410)
		Method: <com.qranio.util.Security: java.security.Key generateKey()>
		SHA-256: 7747fd94d3330da28876e75dec1df793055538e72e8d8ca8fd014ac0ee7cef4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <org.jarjar.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: 5c31efb8beb779517a7f291168d3912335afc0c4abe67c9d32ed8797b2e7c24a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer16112)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 15ab9dfe744852a5bd312a7422d53f2379108961b3fa2e21edd844d68c0032f8
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: 7fca8a799bc6062cb3f0d85d50c9a7042244d50e0849feff92df6616f699e872
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10410)
		Method: <com.qranio.util.Security: java.security.Key generateKey()>
		SHA-256: dccdf4a7c3b34ff4a951a7a8fd53cd7a51db1da5206b97937e544cdc9eff064f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <crittercism.android.da: java.lang.String a(java.lang.String)>
		SHA-256: a8d5f990f480129ebcd9dabf20cc87a7e6dbbf1c3faf732ccff9c89b10b2fdef
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: 2feca76bc0b1f633b0e7445d33ac9d4f4a9606eb32af76fd1505f1fb038c4fdc
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6566)
		Method: <com.qranio.webserviceconnect.Security$MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 8b79e09278a2d9cb1ffcfa593de7fe79c2dc285d737cd9431d282c7ccbf205d
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)
		Method: <com.sromku.simple.fb.utils.Utils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 43a35377bfb25a758eae159694ac09d24d8c3d5d84e510d0079c959e8fdcb063
		Secure: true
	Object:
		Variable: varReplacer6539
		Type: java.lang.String
		Statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6539)
		Method: <com.qranio.webserviceconnect.WSUtils: java.lang.String getWSHash(java.lang.String,java.lang.String)>
		SHA-256: c0a0c15b0193b0b98f4f5625bdabc5cb3b6e91881780ad7f8038261b82b143d4
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.qranio.util.Security: java.lang.String decrypt(java.lang.String)>
		SHA-256: e406d6c161b7cb5f8bd5c05683d11dd35d9cffd56cc5a555c42ebb90acdb170c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.jarjar.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: d04a34131442e6215abf536c38358ba5d3ff2845ebd3a37286f3009aca967eb
		Secure: true

Findings in Java Class: crittercism.android.y

	 in Method: java.security.Provider a()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #715a3ab1cff21fbedb092e7b5ab0c88b0148437c2b60091cf5f487991aedb203)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9949)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #715a3ab1cff21fbedb092e7b5ab0c88b0148437c2b60091cf5f487991aedb203)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r0.<javax.net.ssl.SSLContext: java.security.Provider getProvider()>()


Findings in Java Class: com.qranio.util.Security

	 in Method: java.lang.String decrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #afc99386d04f5c9dc2b666090c9fe24193eb5503bcc82091106c63785e731052)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10407)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10408, $r1)


	 in Method: java.security.Key generateKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10410)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15127, varReplacer15127, varReplacer15127)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15127, varReplacer15127, varReplacer15127)


Findings in Java Class: com.sromku.simple.fb.utils.Utils

	 in Method: java.lang.String encode(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer16112)


Findings in Java Class: com.qranio.webserviceconnect.WSUtils

	 in Method: java.lang.String getWSHash(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6539)


Findings in Java Class: com.qranio.webserviceconnect.Security$MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6564, r5, varReplacer6564)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6564, r5, varReplacer6564)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 8
	ConstraintError: 1
=====================================================================
