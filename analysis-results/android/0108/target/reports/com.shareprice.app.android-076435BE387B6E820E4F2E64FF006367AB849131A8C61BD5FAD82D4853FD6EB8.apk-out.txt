Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.shareprice.app.android-076435BE387B6E820E4F2E64FF006367AB849131A8C61BD5FAD82D4853FD6EB8.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.urbanairship.push.embedded.BoxOfficeClient: java.lang.String getHashedDeviceId(android.content.Context)>
		SHA-256: b1647c0f3f419ac79a1aa48ea656fee17be94686496b3c9c867e324676ec7258
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apptentive.android.sdk.util.Util: java.lang.String md5(java.lang.String)>
		SHA-256: f818b9880815425f66c3d940c2b15dfdc3d9e0a41b38527e1b7ee22715573994
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9060)
		Method: <com.apptentive.android.sdk.util.Util: java.lang.String md5(java.lang.String)>
		SHA-256: ab295976118877fdf4fd6c71b75e5d4c63760a3e748662937ed163b854bd8e43
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2801)
		Method: <net.hockeyapp.android.Constants: void loadCrashIdentifier(android.content.Context)>
		SHA-256: 936a4745dd3620329d5a847e3f43839fc515a9bb6da026c22f1e06e272ec4dd9
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.Constants: void loadCrashIdentifier(android.content.Context)>
		SHA-256: 6a3069053649d899383b61fcfad25384555728d4af17de5336fb5f338ffe42e5
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.urbanairship.push.embedded.Crypto: byte[] decrypt(byte[])>
		SHA-256: 6e1461f1323ecfbab7864244669f51f370d07c62a1a7fd41b033b9457f060912
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.shareprice.app.android.utils.SharePriceHttpUtils: org.apache.http.client.HttpClient getNewHttpClient()>
		SHA-256: 78f0593a1f3de5108f968f56ab3bcbf9967eb1194a50e66803c019a9baca17aa
		Secure: true
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.apps.analytics.PersistentHitStore: void loadExistingSession(android.database.sqlite.SQLiteDatabase)>
		SHA-256: 28ce7f80687f60d700936748d1561bbe406957299dfe63f40eacb0b994499d24
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.urbanairship.push.embedded.Crypto: byte[] encrypt(byte[])>
		SHA-256: 209804a6bc6e01a2918dfb24978a33eeab9add20fe839dcd66f341c19cc48d1d
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.urbanairship.analytics.Analytics: java.lang.String getHashedDeviceId()>
		SHA-256: 7e6f4e8d8b56d579535f27a6deeade155bb4f0d4a1a7c2287393ec5e4360c760
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.urbanairship.push.embedded.Crypto: void <clinit>()>
		SHA-256: 3a86bd922a7407c76b7e0b8703a5cf40106df93e7d5ec5a60eb27796a7ae5a67
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
		SHA-256: e0c72fc41e053c4940df80ac214885a81274dd181ac131e0da4a0b5bbb5e0b40
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1838)
		Method: <com.urbanairship.push.embedded.BoxOfficeClient: java.lang.String getHashedDeviceId(android.content.Context)>
		SHA-256: dd96c8edcf72d422a32f41081b567506533d399be4497e10a616fb9fa8f1847a
		Secure: true
	Object:
		Variable: varReplacer6090
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6090)
		Method: <com.urbanairship.push.embedded.Crypto: void <init>(java.util.UUID)>
		SHA-256: b5f961e10bf3a3b132cad36d3d8c9d5067033a24e3f848809662c03bb2a95af
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6087)
		Method: <com.urbanairship.push.embedded.Crypto: void <init>(java.util.UUID)>
		SHA-256: 3ae255acf5cc1fac6e9eca11bca84c7cfdf5d6613cc475520e8379d6acdca51
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1568)
		Method: <com.google.ads.util.AdUtil: java.lang.String b(java.lang.String)>
		SHA-256: f348b71da998351673124948d3cf0b4f093bba2aa2cb22a400ff90bbabf404fe
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1183)
		Method: <com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: e3af1d722b6510049e2e35fc03e16c7d9272210222a76abba4439d94e80ee64e
		Secure: false
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6090)
		Method: <com.urbanairship.push.embedded.Crypto: void <init>(java.util.UUID)>
		SHA-256: 882b8d895416c30fcb79ce7e8526d6f66301d017205364ef379ed7d1ea789181
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1727)
		Method: <com.urbanairship.analytics.Analytics: java.lang.String getHashedDeviceId()>
		SHA-256: 6aec850c93ae9275d9e059f23a377f2bc05ed5b94fa3cf5963fec5024db92478
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8569)
		Method: <net.hockeyapp.android.LoginActivity: java.lang.String md5(java.lang.String)>
		SHA-256: 9d5714be26896bc9602a2aa708fe0167fc1cc79650283154637a14a73ffb5ed5
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.hockeyapp.android.LoginActivity: java.lang.String md5(java.lang.String)>
		SHA-256: 3bf4987a13fa537dd68996ea5adabcc7ded84a07b3f23a99273afd14778d368
		Secure: true

Findings in Java Class: com.urbanairship.push.embedded.HeliumClient

	 in Method: void register()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3ae255acf5cc1fac6e9eca11bca84c7cfdf5d6613cc475520e8379d6acdca51)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r11.<com.urbanairship.push.embedded.Crypto: byte[] encrypt(byte[])>($r10)


	 in Method: void readResponse()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3ae255acf5cc1fac6e9eca11bca84c7cfdf5d6613cc475520e8379d6acdca51)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r2 = virtualinvoke $r9.<com.urbanairship.push.embedded.Crypto: byte[] decrypt(byte[])>($r2)


Findings in Java Class: com.urbanairship.push.embedded.Crypto

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: byte[] decrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6092, $r2, $r3)


	 in Method: byte[] encrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6112, $r2, $r3)


	 in Method: void <init>(java.util.UUID)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6090)


Findings in Java Class: com.shareprice.app.android.utils.SharePriceHttpUtils$MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1181, r5, varReplacer1181)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1181, r5, varReplacer1181)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 6
=====================================================================
