Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.shuangyue-098F2EEC5850E8FDF6C09F99E09FDA5465411211E15DF0ECB67070840D4FC2AE.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 15745  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15389)
		Method: <u.aly.cj: java.lang.String c(java.lang.String)>
		SHA-256: bb2ff3739411c91e2cb4b940a2adbf67c2f6e0350ecd09cc0c15fa5ebb806cbe
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer13981)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 8dba01a5c75018b3e1c64a93c0f3d684b738f93326d44aaccd33575c4ca44548
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: c4d4007881f660d31095047c858a7cddf0ade719a9b3b9bb76358ae5434d949b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cj: byte[] b(byte[])>
		SHA-256: 4c900ece8f5922e7875f343933ffca231d7462c481943b7e8f1b1528b82a0945
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: 589f10f65a2d04fe4b0bb06abf8101daf047c6762569191c753224ee717411cc
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9265)
		Method: <com.amap.api.mapcore2d.df: byte[] e(java.lang.String)>
		SHA-256: 554c95459124cc3931318096c308ffbe2baeb48cbdd64b1e49478e4679eb765c
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer14643)
		Method: <com.dianyue.shuangyue.googleplay.util.k: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 867687515639d0ce1d7b3d8584a0e867750bcabfe48436939d0ad8912864695a
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: edf8d4512ea4d685450853f37af1c60bdb4661ea96e0a8476dfe9d41f4bd92a
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9510)
		Method: <com.iflytek.sunflower.c.c: java.lang.String a(java.lang.String)>
		SHA-256: 321ec2a32e760ad49caffa1683c8516a2acbd1a7be32aedd5f83d88b09b7ecbb
		Secure: true
	Object:
		Variable: varReplacer9272
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9272)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 5e3daff28f8ccd86142061687ca475b142d0a8b048ff70a379e885db787ca8a3
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1864)
		Method: <com.dianyue.shuangyue.net.http.p: void <init>(java.security.KeyStore)>
		SHA-256: d360493632f9407dd7e044bfe29329642b4d338c528ebe27cc2126bade9bcbba
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2105)
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: 8a76a262dac473afab0ef19a34c3a873c3696208cd0eda46951618ff8937c071
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13670)
		Method: <com.iflytek.cloud.a.i.k: java.lang.String b(java.lang.String)>
		SHA-256: 1d67cade8f446c9f1d8082e06cefe766212c02ae589a33760e258f8f7c756ab6
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: f5d4bf9ca7f7fb9000cf6a89dae134f0d93e52312b490bf6d8a3635e0c274af1
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <u.aly.ag: void a()>
		SHA-256: 5cc4e9b101385fa66f6ff1d11413d5762bd39a30728f5c1ea31647b0f7bd3352
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4838)
		Method: <com.pgyersdk.conf.a: void g(android.content.Context)>
		SHA-256: c45fa8d2b5d4c38eb91cb4476aa7ef4430f7c9e9bb3b292b48418c9949803059
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14993)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: c976266374dbdf17344f5b0cde12d7754e7d9d87bcb06c7eb28608e472992bac
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 8efbf86f5ea16d28f9b105ce3b7240b42e587f75eb726331522c698e11e36cc4
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14989)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: a6af7889e5117d915f242598c73101d012c453bda9f9d3d928104acd0d806715
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.dianyue.shuangyue.net.http.p: java.security.KeyStore a()>
		SHA-256: 2b07ca059440c5511bd37927988fcf6efa990e1795b8235032779d20bc37799b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9271)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 149d150da2021f9454cd6a5ad4e3a4aa4530f883450654fffe18b67efaa58159
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.amap.api.mapcore2d.da: java.lang.String d(android.content.Context)>
		SHA-256: a2f6c42cea7d22055d44a3cd0b20cc9669f5f3144ad90264063dfef3078897fd
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: f44b1d8a1562491f3628393050d3051eaaddafc0a1521f6a48f82755c4d836aa
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: bfdf7a7690f99313d7d90ffe799c08accc3face2ec5e8c2f9d6c2ccbb3a7f821
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 8f959de29dd11411b269c986bbaf8c6255646eb9a772a5c5a0ee108386cc476f
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer13992)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 1741680e0ce282eff055d95b2aff0f890436f0a6fb641ed8cf55bd8f3c75587f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15695)
		Method: <u.aly.cj: byte[] b(byte[])>
		SHA-256: 73fcd429e10cd4e5d2fa4dc2c27d68a992a06ff044c30a912944a1357800a1ff
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cn: java.lang.String a(java.lang.String)>
		SHA-256: a99da5275203c1ac4c0963ef6103e48d5c693ec8820291a487cdbb4c564fc729
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1827)
		Method: <com.dianyue.shuangyue.net.b: java.lang.String c(java.lang.String)>
		SHA-256: ad00450c904716d6bd444bd3d8c31d8c3493a2e47dae1cf0a5c7d315ceb3e165
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: 9d5518b928395bd05bce5b6b363adfca98533751c6f8b6369158fc7086bf8946
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9272)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: e5830d09379e5745f849326645cb7325e15a27c5354e8299d72d2479d0f4cf0e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14991)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 62c240c67f527f40b3c9f584e98a6cd51bd65a3808a123b1d506ed3f63b9a4b
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.pgyersdk.conf.a: void g(android.content.Context)>
		SHA-256: 1a0c3c23a5d3842fdc4a6129337c825534dd47cb3a9bfb4079f1e5fe30b0a00d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15082)
		Method: <u.aly.cn: java.lang.String a(java.lang.String)>
		SHA-256: fde2b2de3caa0078766b86393593dce4ed6f6bb52888a6002da01058e5d01daf
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: 49c5be17f6636d1cddfea76e5c36d1ba1f88788c784d140190c2a1684f41fbeb
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9126)
		Method: <com.amap.api.mapcore2d.da: java.lang.String d(android.content.Context)>
		SHA-256: 7c9964a04d431b03bc8bdfcbcf8e9c3cbb5b9ee0e6633d6d571a36bf0af90c49
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 771d48022bf3b5cd1975d8160cfa1b1cfd84b522b7cfbf5fa22ae7e3e0ec094a
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: e3190b6f4323befbf18670a0eb10cd2790133ea7e985cb6f92d999f647f560e9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 67f8276464ff2b603934593edfd3991f3b602712d92e93712f83733b7783915
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15691)
		Method: <u.aly.cn: java.lang.String b(java.lang.String)>
		SHA-256: e0d3cb11d6eb9c36f7ba6fb817b5808ce79e9a4476a7c5c87f1c360a8aadacfb
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.iflytek.sunflower.c.c: java.lang.String a(java.lang.String)>
		SHA-256: a980ab1cf206f1b2d55efecf6da410427f487cf11829045ba51026744a966f67
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9203)
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 6f993dcc8f9f35b1a3dc1ef05a666315227b269f7edad1beac0c80b849057277
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.dianyue.shuangyue.googleplay.util.k: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 7881da5df3a1926d35307ca3d59bba8d3320568b6e7647592955d6c72c4e4e4d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 667210ec6c57b08d5df500b485f4ccb0e5cdaf1471b1388f525ac35aeea49d65
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16176)
		Method: <com.dianyue.shuangyue.utils.universalimageloader.a.a.b.c: byte[] a(byte[])>
		SHA-256: 3399bfa82f2e9d0916c00b2f7cb7214ebe5545c929fe2500ebf0c4282a3200c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore2d.df: byte[] e(java.lang.String)>
		SHA-256: 82ccb6f87a6fa0897797ba40aa5f6af77ac165443e2b91d24dc90df6348d217f
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 918bebe403e50fa57eec244da90c3e43f8e3d5906186b0e4ed6a963aa2f69db3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9257)
		Method: <com.amap.api.mapcore2d.de: byte[] a(byte[],java.security.Key)>
		SHA-256: a197d658154e7eb4e3e6eba346b417b534447c986e8e99ebdf6b0ca09f6c421c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: void <clinit>()>
		SHA-256: 81571f0f65b71822bd958d9fd94e85c4e0b32e123ab4c4b6ad790e4712eb88cf
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.cm: java.lang.String r(android.content.Context)>
		SHA-256: 7ddb8756d7edb79f60a99a3ecdb48c28c6b7fa89e8e56c7dffd9b3cfc4a4f96
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.iflytek.cloud.a.i.k: java.lang.String b(java.lang.String)>
		SHA-256: 3db1e8c7300ea6b8ceccc7f0e48d9d6ddaff89f31cf48002dd34791f4e992cb7
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14992)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 40ff3e1aadb23a3cfa10e894e769b5fc4e157589934177d6af11bd79357a8350
		Secure: false
	Object:
		Variable: varReplacer13981
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer13981)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 1cc3900c7b6d618496037109c8de305a1cc4d82046808ae6bf6e5924d5a7a27c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore2d.de: byte[] a(byte[],java.security.Key)>
		SHA-256: c727289a66f61570b588ce85ca15414d2e5030eac97434fa4e1adfb6843260e8
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cn: java.lang.String b(java.lang.String)>
		SHA-256: f8d897717eab916f1850eea1d60e41b8fe1d195bf16d452b12f87adea8392a4f
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15896)
		Method: <u.aly.cm: java.lang.String r(android.content.Context)>
		SHA-256: 3ed2155fec7e3354666c200bb8da6faaa3bf4f8d6693b6b3de5f7b292aa6577d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: baf36ba0be0be9712f0773d5e6bd6ea1289e24d9f49bc21a49b2c6b599778b28
		Secure: false
	Object:
		Variable: varReplacer14992
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14992)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 9deb1a292719a0d9a2c60a63aa6f76f7b14e29ce8c42f4da627aca36aac7dded
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: c0ff5c7b3a0bb15c203075d8186ded0937736db447ed4b0f9fef6c06ec241485
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: 8e4d3ce3f6a3961627a164a718666216cbb71ad4d5d8d2a6bc5f52f33a56ba40
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dianyue.shuangyue.net.b: java.lang.String c(java.lang.String)>
		SHA-256: aaa2a9b912a557a05736631d9925e233d1c938a0d56293557677e121c0d6a658
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16167)
		Method: <u.aly.al: void <init>(java.security.KeyStore)>
		SHA-256: 4f4e05a08a06cb4530a05c271de73ac18e760e50e1bf5c107b0894695b961100
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 4e767d3d3eba2d7ee31e03fc2e2634e29a28892a4e9da789c1bf1489d6de298c
		Secure: false
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2900)
		Method: <okhttp3.ah: void <init>(okhttp3.ai)>
		SHA-256: d68610a0a72344d5e68c99f7348db4f999bf89f53ef82ee8488b038f407242b3
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dianyue.shuangyue.utils.universalimageloader.a.a.b.c: byte[] a(byte[])>
		SHA-256: 2c9b15e05768c3bb41a85d6b678b8517c98e5491cef1f7980fad6a50e7446d8b
		Secure: true
	Object:
		Variable: varReplacer14989
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14989)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 580a539f4324cde3f8378ba69818a2d3b933538d0fdc8598b3606bb11c6ad4c1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cj: java.lang.String c(java.lang.String)>
		SHA-256: 2736ac85576c930e5ee78816699e48ebcd23156d0c20e4157a6442a250dbe0ef
		Secure: true

Findings in Java Class: cn.jpush.android.util.g

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.amap.api.mapcore2d.dc

	 in Method: java.lang.String c(android.content.Context,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #6f993dcc8f9f35b1a3dc1ef05a666315227b269f7edad1beac0c80b849057277)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9203)


Findings in Java Class: com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters

	 in Method: java.lang.String calculateSignature(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer13981)


Findings in Java Class: com.dianyue.shuangyue.googleplay.util.k

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.dianyue.shuangyue.net.http.p

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1865, r5, varReplacer1865)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1865, r5, varReplacer1865)


Findings in Java Class: u.aly.cj

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14992)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14994, $r2, $r4)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14990, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14990, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14989)


Findings in Java Class: com.amap.api.mapcore2d.de

	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9256, $r1)


Findings in Java Class: u.aly.al

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16168, r7, varReplacer16168)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16168, r7, varReplacer16168)


Findings in Java Class: okhttp3.ah

	 in Method: void <init>(okhttp3.ai)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2896, varReplacer2896, varReplacer2896)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2896, varReplacer2896, varReplacer2896)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 68

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 16
	IncompleteOperationError: 1
	TypestateError: 1
=====================================================================
