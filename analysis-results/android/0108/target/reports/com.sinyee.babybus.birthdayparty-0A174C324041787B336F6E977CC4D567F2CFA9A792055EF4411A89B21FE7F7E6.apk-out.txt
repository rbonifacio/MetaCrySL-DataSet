Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.sinyee.babybus.birthdayparty-0A174C324041787B336F6E977CC4D567F2CFA9A792055EF4411A89B21FE7F7E6.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.babybus.aiolos.g: java.lang.String a(byte[],javax.crypto.SecretKey)>
		SHA-256: fc5341a4e7e7c92c6110bab7d20a7d0f77ac32e4ecd1e33a6517462dd1bfeaea
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6899)
		Method: <com.babybus.utils.RSAUtils: java.lang.String sPubEncrypt(java.lang.String,java.lang.String)>
		SHA-256: f242a901e07a935e5887cb9c5bf3b260d0c50e1d31565377a7149488c459d52d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9682)
		Method: <com.iqiyi.sdk.android.vcop.net.NewSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: dc053b79a6d6dd9321266547098cba0a98041dbae07442bec189962a925606c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8044)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: d44348a3fda87fab6f800ddc811040ae97a0f281de2dae79aeb43379034537a5
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.babybus.aiolos.g: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: 9d617c963919297fcbc1837279a757bafdc80d23404743e2a74e574e3d788a76
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: 4278ed9157936097667bc52086c2e35029bba55540082bad1ae263bc341943c8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8049)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: 30539a8a30480aa93f2cb0bdc6369ffdbaa3e52846f0cb6df220432080c91850
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8078)
		Method: <com.babybus.aiolos.g: java.lang.String a(byte[],javax.crypto.SecretKey)>
		SHA-256: d8be5f909e736a151008293171d1279aa3663c4b5ded58ded926e8f688765f98
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.babybus.aiolos.g: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: eed6605db0f34bbabfa89c3fb52877f764440e05cd82f090e870c6368df68160
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8079)
		Method: <com.babybus.aiolos.g: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: 5f15c1589a586ab47b6114807f4e84f1effbb35d7343ef5ec9842bbeb3c2b56b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer6846)
		Method: <com.babybus.helper.RSACodeHelper: void init()>
		SHA-256: 6180c12cae133b099cdcfbf335f0860e55e6dad47f6a7cf86d852f3a0b5fb522
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2356)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 97ce43b6084e3e69d82b187cd585bd4db01c30a8775a8e9368de7bd079c36ad8
		Secure: true
	Object:
		Variable: varReplacer8044
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8044)
		Method: <com.babybus.utils.AESUtils: java.lang.String Decrypt(java.lang.String,java.lang.String)>
		SHA-256: 78d7ea5b1040af4c8bfd52e2b4b80525462f12d3633d8b2bbf5a01d23ce78d94
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.babybus.helper.RSACodeHelper: void init()>
		SHA-256: 6bc71973c3f5ea8a041e37be4a70512025cf5a185f39cdbfc493bf5a29f146e9
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.babybus.utils.RSAUtils: java.lang.String sPubEncrypt(java.lang.String,java.lang.String)>
		SHA-256: 8d37f153aed0a1cd0cb26abb78ad69a694aa98dd4ee51f96cbc671d573e6bccc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.babybus.aiolos.g: java.lang.String a(byte[],javax.crypto.SecretKey)>
		SHA-256: d7eef02f82b95a4ddafdd1b9a2e72dc3b04384d186bb714811648f958c085fb3
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10155)
		Method: <com.appodeal.ads.t: javax.net.ssl.SSLSocketFactory d()>
		SHA-256: 9cd6e3c84ec7c435d91fa4901192036600b52bd2ccb205330811ca1d2f6f05ee
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8052)
		Method: <com.babybus.app.App: java.lang.String getMD5MessageDigest(byte[])>
		SHA-256: 7cfef69eb051ef53d775cfc67c81b30ddbb15db31d4423e5660886aaf7e36361
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.iqiyi.sdk.android.vcop.net.HttpTools: void <init>()>
		SHA-256: 8eafe4c250fe5ec89e01de6dc10d5607e313c8a64d63518dc26b9b0bc0c6e901
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.babybus.app.App: java.lang.String getMD5MessageDigest(byte[])>
		SHA-256: e4a548e1b63eebc1a6c77b0b90dce5ba2065846894295a3bd480b9b0a3c5e345
		Secure: true

Findings in Java Class: com.babybus.helper.RSACodeHelper

	 in Method: void init()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #6180c12cae133b099cdcfbf335f0860e55e6dad47f6a7cf86d852f3a0b5fb522)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer6847)


Findings in Java Class: com.babybus.aiolos.g

	 in Method: java.lang.String a(byte[],javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer8077, $r1, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d8be5f909e736a151008293171d1279aa3663c4b5ded58ded926e8f688765f98)
			First parameter (with value "des") should be any of {TDEA, AES, DESEDE, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8078)


	 in Method: javax.crypto.SecretKey a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #5f15c1589a586ab47b6114807f4e84f1effbb35d7343ef5ec9842bbeb3c2b56b)
			First parameter (with value "des") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8079)


Findings in Java Class: com.appodeal.ads.t

	 in Method: javax.net.ssl.SSLSocketFactory d()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10152, r8, varReplacer10152)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9cd6e3c84ec7c435d91fa4901192036600b52bd2ccb205330811ca1d2f6f05ee)
			First parameter (with value "TLSv1") should be any of {TLS}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10155)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10152, r8, varReplacer10152)


Findings in Java Class: com.babybus.utils.RSAUtils

	 in Method: java.lang.String sPubEncrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6901, $r2)


Findings in Java Class: com.iqiyi.sdk.android.vcop.net.NewSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9680, r5, varReplacer9680)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9680, r5, varReplacer9680)


Findings in Java Class: com.babybus.utils.AESUtils

	 in Method: java.lang.String Decrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8050, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8044)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 21

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 9
	ConstraintError: 4
=====================================================================
