Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.tellm.android.app-0EB54927223FF2A082FB30419882497995109543F940885AEDB6954F407DA2C3.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3492)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String du(java.lang.String)>
		SHA-256: 235f1c418b61cf500e0c0033324db5b697284d178301e798457ded99faf56549
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String du(java.lang.String)>
		SHA-256: 4db7f4c8b8dcc9cd59218ebf55f61dc169bb7788eb69c63d53c85115ffd322b5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: 756b01b06feb63ec058f055931b7364dec725eddbf18032316df47bfbaf76753
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3497)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String du(java.lang.String)>
		SHA-256: 87f02b52a31cc6c5c0a6e670d40e3677b2521c9bedd975d38dd8b764c30bfbf7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2993)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String a(java.security.KeyPair)>
		SHA-256: 4f7fd67b42dd7a96994c133855328c37a493032e55494260f37a4668fa64e352
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3488)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String dt(java.lang.String)>
		SHA-256: 26b52884a2b025f6e55048d258f62dcbd6a76e6ccfe2138e15c2523f9251e982
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3061)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair tr()>
		SHA-256: 3a4ece99508eca3650c2fdf6d65d6ddee77db8819dfc6d37684fe7f1d83820dc
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair aK(java.lang.String)>
		SHA-256: fdb563a61f8e0347aa28ffbc9251ddd88a7797d97796ee99b6f835fa6ff57d2e
		Secure: true
	Object:
		Variable: varReplacer3377
		Type: int
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r6, varReplacer3376, varReplacer3377)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: byte[] ax(android.content.Context)>
		SHA-256: b70c8132f051b15e5a865a22de0c868d3482d93f8694b51172869c4de3e732d4
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair f(java.lang.String,long)>
		SHA-256: 5b6d91ccbfe4cdad843eeca339ac144281a5bc04b13d6a5705dff126a149c24c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.Util: okio.ByteString a(okio.ByteString)>
		SHA-256: e12a4bede81b02f3ec9b7a9d52d2fed42a2ff31c2ffb5afaa4b01ccdec2a388f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair tr()>
		SHA-256: dc323537daf211f39a0027256aeb7e3a62e9ebc48faef1f40995267cac3806fe
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8117)
		Method: <com.jodelapp.jodelandroidv3.api.HmacInterceptor: java.lang.String calculateSaltHash(android.content.Context)>
		SHA-256: a90d698402bb40053d2cd5e58700378e28d514c7ce37ce2bc894d4b392dffad8
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3490)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String dt(java.lang.String)>
		SHA-256: e761c2c58237df0975a2271ecc1eb154a088683803a8219171bfc076bd0fdd82
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String dt(java.lang.String)>
		SHA-256: e169e8fa5faab8197645ba73cd6e517a4d3f497a4c35eafe3661ca043bbdf833
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: byte[] ax(android.content.Context)>
		SHA-256: d9fe345977ee1d26ebda849cc3b5a162519b374bae84caa87f1cd4a1f2f97540
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6345)
		Method: <okhttp3.internal.Util: okio.ByteString a(okio.ByteString)>
		SHA-256: 9f769e5cfee573f02952499ac533b6fcc4fa412b95c084385b64cc8b3802bd85
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKeyFactory
		Statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3378)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: byte[] ax(android.content.Context)>
		SHA-256: 8cbbb118df8a6febd047bf966ca3315340b5d174d0f626f147e6dd88de94eea1
		Secure: false
	Object:
		Variable: varReplacer3492
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3492)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String du(java.lang.String)>
		SHA-256: 58e392c1a55062bce99cb857d8484ae0825c7a712e4ddfd645efa5a84408f305
		Secure: false
	Object:
		Variable: varReplacer3488
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3488)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: java.lang.String dt(java.lang.String)>
		SHA-256: 86253e1bff062854bb35000ee4179a91771afd8bc2c968b7f5ac7f2947b3427
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: bb7187a5bb3b8757816d72f6d792fc777b962cfcc06524eec6d517f459d321b
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair f(java.lang.String,long)>
		SHA-256: b1a3c2e51971c55999a38ad2a26b17dfe86bf1526bed5477e12114e8e75e089d
		Secure: true
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1767)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 34b6fe7684c83880b123acc5d884b7360a058db8e4311a0328de6c79b8216d1c
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.jodelapp.jodelandroidv3.api.HmacInterceptor: java.lang.String calculateSaltHash(android.content.Context)>
		SHA-256: e28281151f7c5086567a908d51fac900f213780710bf7a793169e7e856546553
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r6, varReplacer3376, varReplacer3377)
		Method: <com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences: byte[] ax(android.content.Context)>
		SHA-256: 65ce49f7e64d9bd99753f0b9a5d2f65715c8e583aa2b122df779fc2ddefe14f6
		Secure: false

Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #ac332d587bf39023540fdf27c9a6e0af48c14d7b2a948ab0d52f7121a0730bd1)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4f7fd67b42dd7a96994c133855328c37a493032e55494260f37a4668fa64e352)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2993)


Findings in Java Class: com.jodelapp.jodelandroidv3.data.prefs.SecurePreferences

	 in Method: byte[] ax(android.content.Context)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #65ce49f7e64d9bd99753f0b9a5d2f65715c8e583aa2b122df779fc2ddefe14f6)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r6, varReplacer3376, varReplacer3377)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #65ce49f7e64d9bd99753f0b9a5d2f65715c8e583aa2b122df779fc2ddefe14f6)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r6, varReplacer3376, varReplacer3377)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r6, varReplacer3376, varReplacer3377)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #65ce49f7e64d9bd99753f0b9a5d2f65715c8e583aa2b122df779fc2ddefe14f6)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #8cbbb118df8a6febd047bf966ca3315340b5d174d0f626f147e6dd88de94eea1)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithMD5ANDDES, PBEwithSHAAND128BITAES-CBC-BC, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC}
			at statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3378)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)


	 in Method: java.lang.String dt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3488)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e761c2c58237df0975a2271ecc1eb154a088683803a8219171bfc076bd0fdd82)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3490)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3489, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e761c2c58237df0975a2271ecc1eb154a088683803a8219171bfc076bd0fdd82)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3490)


	 in Method: java.lang.String du(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3492)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3496, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #87f02b52a31cc6c5c0a6e670d40e3677b2521c9bedd975d38dd8b764c30bfbf7)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3497)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #87f02b52a31cc6c5c0a6e670d40e3677b2521c9bedd975d38dd8b764c30bfbf7)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3497)


Findings in Java Class: com.jodelapp.jodelandroidv3.api.HmacInterceptor

	 in Method: java.lang.String calculateSaltHash(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a90d698402bb40053d2cd5e58700378e28d514c7ce37ce2bc894d4b392dffad8)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8117)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1764, varReplacer1764, varReplacer1764)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1764, varReplacer1764, varReplacer1764)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 26

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	ConstraintError: 9
	NeverTypeOfError: 1
	RequiredPredicateError: 9
=====================================================================
