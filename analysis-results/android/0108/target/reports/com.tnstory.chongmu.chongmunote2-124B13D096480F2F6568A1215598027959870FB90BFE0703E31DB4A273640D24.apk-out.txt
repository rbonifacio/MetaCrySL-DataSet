Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.tnstory.chongmu.chongmunote2-124B13D096480F2F6568A1215598027959870FB90BFE0703E31DB4A273640D24.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1643)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: da5161c73361e3a7ed11bdacf3a4f32d74c5824c5366e90143d1fd6f63ec3bf1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: fa136a602799631e6b4b59350ee9e51490addbaa3e0a4d88762b38031b45344d
		Secure: false
	Object:
		Variable: varReplacer1643
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1643)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: 92570e8b67be00293a96eff6ea5606fcceb365b3865c31ef01a0dcea7a06fcac
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: 9a39546100165a37e889fd7cf2a6477829cbb9e55b2e972d72febc045529fcda
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: 8de80dfde750b54a8dc4f0a31eeee957e344d00f114bdcad0dca32f685f88fae
		Secure: false
	Object:
		Variable: varReplacer1710
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1710)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: dca268d64dd5a76b088dd17acf3932114037a87f43b1d62f27a4c124ca987a4d
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.clientmate.android.trivialdrivesample.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1646)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] getRawKey(byte[])>
		SHA-256: a62d54930d072ec9f3ba6fedc0bc2aded8a616a8fa31ae8c981cbe25df0b3651
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1708)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: b724e8f5f23577ef140e22a7775eaa798c3bc4e4546a62487ac933e0d6e753dc
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: 4755c5e34f3121596ca9a7f33f965995bb6b82fd562703d3839051d031b7eed3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] getRawKey(byte[])>
		SHA-256: bf58e9be970bb4d9b8b9779a2db2332dda7629a9233a386367015fa09918a479
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1642)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] decrypt(byte[],byte[])>
		SHA-256: 51a31247a591d1e928c062cd5ac02940285d309f3010edc365e79a5aaf33bc4d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1710)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] encrypt(byte[],byte[])>
		SHA-256: f3cb76fe58060fc970c5ff9587e8bac3efc63863a4171a7cdae8d9d3190f8e69
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer5313)
		Method: <com.clientmate.android.trivialdrivesample.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: e2d849868523f4750858ad5fefb6df57780f5d4e47a7b9665de69f10273a24e1
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1647)
		Method: <com.tnstory.chongmu.chongmunote2.SimpleCrypto: byte[] getRawKey(byte[])>
		SHA-256: 7608150688991764916f56db90dab620340bf8bfd86072f557fd6d46fb11994a
		Secure: false

Findings in Java Class: com.tnstory.chongmu.chongmunote2.SimpleCrypto

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1644, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #51a31247a591d1e928c062cd5ac02940285d309f3010edc365e79a5aaf33bc4d)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1642)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #51a31247a591d1e928c062cd5ac02940285d309f3010edc365e79a5aaf33bc4d)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1642)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1643)


	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1710)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b724e8f5f23577ef140e22a7775eaa798c3bc4e4546a62487ac933e0d6e753dc)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1708)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b724e8f5f23577ef140e22a7775eaa798c3bc4e4546a62487ac933e0d6e753dc)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1708)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1709, $r2)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1648, $r2)


Findings in Java Class: com.clientmate.android.trivialdrivesample.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	RequiredPredicateError: 6
=====================================================================
