Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.us.ragnarok-147682E55810C436C0747F93399D23C4655DEEA8913AC81B26E7B43A3426A1EE.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <mp.lib.bg: java.math.BigInteger b(java.lang.String)>
		SHA-256: 3e024304906a5f27c44d05cbd3eb8e20d8401681f322ae13589e7d5916f97965
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <it.partytrack.sdk.compress.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c63b74922f95b9ac587f8620c5cf68e2a27ba8d30d66393e4de224b5d0afb39
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.braintreegateway.encryption.Aes: byte[] secureRandomBytes(int)>
		SHA-256: 73d923fde01034ccecd1fe2167cbcbfac0058d899aab2ea9ed285a5aa33f014f
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <it.partytrack.sdk.compress.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 778469203bdc9e2f84de62c7efc6451e07c41f73b8b26fef9fecaf3c6c1bd359
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5225)
		Method: <com.braintreegateway.encryption.Rsa: java.lang.String encrypt(byte[])>
		SHA-256: ae3e835937ea75176bc82b45597c4560efd20105e1a1fc0e7b64972686dbf1fd
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2277)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 45ed29e7379755c6decb2c2bc0c75df733bcf7ef69098934b787de2e7f1342a3
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.braintreegateway.encryption.Aes: byte[] secureRandomBytes(int)>
		SHA-256: 18739422868e4dfabf0bbbb6d3f25f1e087d7b127f41e5e498e5a540af6d107b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <mp.lib.c: java.lang.String i(java.lang.String)>
		SHA-256: 4d0101cbb26fe264a5262d45359d1757807338788407926e2aace295e2650922
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5932)
		Method: <com.google.example.games.basegameutils.GameHelper: java.lang.String getSHA1CertFingerprint()>
		SHA-256: 116e7b7eda4995c600fb2305383ed1b3554eba31d7aaeccd9fe9fc3220fbd92
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5362)
		Method: <com.braintreegateway.encryption.Aes: java.lang.String encrypt(java.lang.String,byte[],byte[])>
		SHA-256: b97245fbfacf46a0b7c1ae778dd6b113f7929cade5b2f92ac413d8090e72efb2
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <com.google.example.games.basegameutils.GameHelper: java.lang.String getSHA1CertFingerprint()>
		SHA-256: b48ebc2517caf5e76a29367d47a1532224bece324cef1b8dfe8210853a6daccd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.OpenUDID.OpenUDID_manager: void generateOpenUDID()>
		SHA-256: 383e92c6a9159fc4f0849cfb26da514bdc062562f7df112fbf4a2f6833661549
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2884)
		Method: <mp.lib.c: java.lang.String i(java.lang.String)>
		SHA-256: 4c17283671dd589dd9d6318c2fc06ec785f6ee12872568e2fdacb5a7c7af63fc
		Secure: true
	Object:
		Variable: r13
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.braintreegateway.encryption.Aes: java.lang.String encrypt(java.lang.String,byte[],byte[])>
		SHA-256: 75e0227448e1292fb6fd3c58746bde133c0c1fbf9aa7f5e25e8da7a99b19a5d4
		Secure: true
	Object:
		Variable: varReplacer5362
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5362)
		Method: <com.braintreegateway.encryption.Aes: java.lang.String encrypt(java.lang.String,byte[],byte[])>
		SHA-256: 5ecf621d88ec3809ae361e37b62d00b92315b0504eb9af3122b1f92a9b6dc9f2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer5782)
		Method: <com.us.ragnarok.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 14c973c62f4257ce5d888d7b223dc29d4321d3ea60db47769e801aca883c2e5e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5364)
		Method: <com.braintreegateway.encryption.Aes: javax.crypto.Cipher aesCipher()>
		SHA-256: 24d2b3eac0adb23f1dbefcd5377ee105bf84fbe9cf63df6730a0a018a0b540e7
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.braintreegateway.encryption.Aes: java.lang.String encrypt(java.lang.String,byte[],byte[])>
		SHA-256: fd6f6010ce4e325dbebccc126025a17782aef26232f00cd3a54929e73268a236
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2561)
		Method: <mp.lib.bg: java.math.BigInteger b(java.lang.String)>
		SHA-256: aefcb1ba91cab58a8cadea23a5739b60f8211c989ea6392c0b77b9b877a51718
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.us.ragnarok.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.braintreegateway.encryption.Rsa: java.lang.String encrypt(byte[])>
		SHA-256: 7b37e1e229a3204b153b6058c321bb264e60d9a646a734653ba7cc471bfff12b
		Secure: false

Findings in Java Class: com.google.example.games.basegameutils.GameHelper

	 in Method: java.lang.String getSHA1CertFingerprint()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #116e7b7eda4995c600fb2305383ed1b3554eba31d7aaeccd9fe9fc3220fbd92)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5932)


Findings in Java Class: com.us.ragnarok.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.braintreegateway.encryption.Aes

	 in Method: java.lang.String encrypt(java.lang.String,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5360, $r6, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5360, $r6, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer5362)


Findings in Java Class: com.braintreegateway.encryption.Rsa

	 in Method: java.lang.String encrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5224, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 22

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 5
=====================================================================
