Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.vdg.lockvideos-133019E4B5A9D775EB47BE9A4061BBDD46C505CD9317EA3D1FA804F7114C209F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: r10
		Type: java.security.SecureRandom
		Statement: specialinvoke r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.ads.a.h.l: void b()>
		SHA-256: e4957a2576bd95bbc9bd84dfc7820dd27e8738d9c48a7d0314f2f0aa52d0c3d9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5145)
		Method: <com.google.android.gms.b.asb: java.lang.String a(java.lang.String)>
		SHA-256: aa15eb8a3e485f5296f107555f9a4b081e88a28640e5750f9e436b95aac4a864
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2574)
		Method: <com.facebook.ads.a.h.ad: java.lang.String b(java.lang.String)>
		SHA-256: b02412077f8d8c8a765c22c4703591fd75c22a3aee6ccb7ceef2a259029a2e41
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.vdg.lockvideos.b.i: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 4a8ae8ca476e5a69d429f94a9fe066e21cd8329bffcd626377a68715fffe0ba
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1390)
		Method: <b.a.a.e.d.e: javax.net.ssl.SSLContext a()>
		SHA-256: c3f33a67cfe954cc100cd7731b1a583a8fb5ccd6b3427ea7d0a19022187d6236
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1798)
		Method: <com.facebook.ads.a.h.l: void b()>
		SHA-256: 7b4322bd4d77e525c635844c0d0191826d6451d5fab3707497c5b277576de74b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.a.h.ad: java.lang.String b(java.lang.String)>
		SHA-256: c87f4bdd68ccf086a3c4b6a4ac743c78c5e5e1b3fb8c1c8abacf09e2c90d610
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4567)
		Method: <com.vdg.lockvideos.b.i: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 2ce67d728db50312d9592085b85b611858d4734b2cf3ac2a378ccee1b73d845d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4757)
		Method: <com.vdg.lockvideos.f.w: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: a5d7efe0e6ee21a2c0add6cfd1501fc2c23150576dc6ddbf36ac580c18d6f128
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.vdg.lockvideos.f.w: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 2ea434082cc0300eb543e857dbea3c9c99a455ce873b69681e54063764864cc9
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.b.asb: java.lang.String a(java.lang.String)>
		SHA-256: 83aee6d2693a72902bcde7b677954490355d69c0a5a4bcd9a35f5089021d43f2
		Secure: true

Findings in Java Class: com.facebook.ads.a.h.l

	 in Method: void b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1799, r12, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1799, r12, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7b4322bd4d77e525c635844c0d0191826d6451d5fab3707497c5b277576de74b)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1798)


Findings in Java Class: b.a.a.e.d.e

	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1387, varReplacer1387, varReplacer1387)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1387, varReplacer1387, varReplacer1387)


Findings in Java Class: com.vdg.lockvideos.b.i

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.vdg.lockvideos.f.w

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 6
=====================================================================
