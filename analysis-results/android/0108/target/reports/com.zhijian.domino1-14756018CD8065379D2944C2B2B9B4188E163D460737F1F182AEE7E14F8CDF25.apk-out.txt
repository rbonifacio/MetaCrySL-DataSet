Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.zhijian.domino1-14756018CD8065379D2944C2B2B9B4188E163D460737F1F182AEE7E14F8CDF25.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer4436
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4436)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: c14f799933a977d041196cee3d8e0b88909391e4ac12e9bb53ac13a6070ed1cc
		Secure: false
	Object:
		Variable: varReplacer1670
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1670)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d5651e63a7d91fb2912463e2f1686269d45174f1ed5ac6a0e80b55265f37a808
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ccfd9ec438e1b82af96977339bc8a1ccea6aa338e79f6247cffe2cd70b368ca0
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.zhijian.domino.iap.google.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1692)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: 644988006ba1aba76fb0753e6c53f4f286017ef3c8e57dd20d862aff668e0343
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4435)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 83713ef595d277b6133c5d0a60fb6afa0c2986efc8adfaf744a6280868055a3d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4437)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: f1e0a7a1e648bcd87dd026471e47d7b54d9a88a1bb90d13fe62d9177da94db97
		Secure: true
	Object:
		Variable: r19
		Type: java.security.SecureRandom
		Statement: specialinvoke r19.<java.security.SecureRandom: void <init>()>()
		Method: <com.bluepay.b.b.a: java.net.HttpURLConnection b(java.lang.String,java.lang.String,java.util.Map)>
		SHA-256: d37e750ed995e81a526ca08d115e399f43dc90df91fde591753311a141ec1d54
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1698, varReplacer1699)
		Method: <com.bluepay.b.d.u: byte[] b(byte[])>
		SHA-256: e56e83d91467ca3968c294c057bcc83eeeb8108cbfe8fefc7537038fbaba0db
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3029)
		Method: <u.aly.cf: java.lang.String a(java.lang.String)>
		SHA-256: 725cfb2a6e917da2d9d394df1ac72903d2974d3578d6e9230a3debcc35cb614e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4165)
		Method: <u.aly.cf: java.lang.String b(java.lang.String)>
		SHA-256: e543232a057472b41d7025be144e819e5f53174165b15339f697f44b6e1d4a35
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: 912e532c88e821194e6575f7276b7e0527e548749ea1fc593eeb17eacb0fed48
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cf: java.lang.String b(java.lang.String)>
		SHA-256: c95e3d2ff5bc4ad136578cd492bf91938b5304d45584d84a0dbba566f04f353f
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4955)
		Method: <com.bluepay.b.d.e: void <clinit>()>
		SHA-256: fcd5173183c9034389fe7c474b1de16921c4940922ad740d1ca7b5ed9c0a7352
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5206)
		Method: <com.bluepay.b.b.a: java.net.HttpURLConnection b(java.lang.String,java.lang.String,java.util.Map)>
		SHA-256: a9790477ec926a61fca47ea7bdf8553961c47fe25e37e8bb5c317bb6041f7dbf
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 64399d93c679901b692ad3aff3ea463a928df7cbde3a337646a32994552d826c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4436)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 4f4e34d4158941b0a9952b1667fdb3b640cc4f827d843e5d3f5c5b31e347fd0f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cf: java.lang.String a(java.lang.String)>
		SHA-256: d67eb3fda9d1f60ecd8e7dbdc986625a79b79be562603bb71eb8601da82cb91f
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1670)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1f5eec949b48b648b2fa496b31986e71d1af97c660efd257ecefe5f25d7af61
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mimopay.MimopayCore: java.lang.String getAPIKey(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: b1863d309f3745c44c4035e23f8b216c001bfce964f8167ac068eae5184ea81b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 595cd5d15b6766276e15896385885c120e16edd20b8cedfe13df5427a57f4810
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: c3495ee43789b614e009b7fd05317ad1ce164e57f58786da3f37c99230b2977f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1658)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 5e634a7cbd1336e0b2cf58a05c23cc13e96351c7e154dd0b0a4957a9911c50b4
		Secure: false
	Object:
		Variable: varReplacer1692
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1692)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: cf909882552c232c5f777dea4a1af94984d459604d2fe237ac972c0a28c1140b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 8407a152a750198a9cecc8c173b46fb5748136d260fe6f5fbe4a174451640e66
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1696)
		Method: <com.bluepay.b.d.u: byte[] b(byte[])>
		SHA-256: a545a93dbade79774f91e4e2c84f187c7406fd8fd8c9d52bf9a747b732444fd2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer208)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: c84965dd0a19a5caac88a7beea991f4e112ce5962cf4a342c5bbf067dd39d602
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4627)
		Method: <com.zhijian.domino.iap.google.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: cba648529be43df3655a2a270f94b16b8bea0aa4de990a384a74f0cb3f6c32f9
		Secure: false
	Object:
		Variable: varReplacer222
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer222)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.security.Key generateKey(java.lang.String)>
		SHA-256: b8e6aaf530afb6bff7f52f094172bc4f5ce8d0d9f799f9652d44792d06eb89bb
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer222)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.security.Key generateKey(java.lang.String)>
		SHA-256: 565b736ec7c3cb7ee554f2e10eb74eafa020ec31637937e8233069a3284726d1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1694)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: a7711c41e1601514d3e7a9d15992a4c12e132accae340f449cf7b1a047f40c92
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2785)
		Method: <com.mimopay.MimopayCore: java.lang.String getAPIKey(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e2d27a9e57a775b9aa0d12cda2d0864ca41898b56c22ddab1b4e80bc03accbc1
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.bluepay.b.d.u: byte[] b(byte[])>
		SHA-256: 8a76aee69f175ca458fa683054793879e3abdb28d497497fe1c795e6f94a32a7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false

Findings in Java Class: com.codapayments.sdk.gw.util.EncryptUtils

	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c84965dd0a19a5caac88a7beea991f4e112ce5962cf4a342c5bbf067dd39d602)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer208)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c84965dd0a19a5caac88a7beea991f4e112ce5962cf4a342c5bbf067dd39d602)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer208)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer205, $r2)


	 in Method: java.security.Key generateKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer222)


Findings in Java Class: com.bluepay.b.b.a

	 in Method: java.net.HttpURLConnection b(java.lang.String,java.lang.String,java.util.Map)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5202, r24, $r6)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a9790477ec926a61fca47ea7bdf8553961c47fe25e37e8bb5c317bb6041f7dbf)
			First parameter (with value "SSL") should be any of {TLS}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5206)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5202, r24, $r6)


Findings in Java Class: com.bluepay.b.d.u

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1662, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1670)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1697, $r2)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1693, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1692)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4434, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4436)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4434, $r2, $r4)


Findings in Java Class: com.zhijian.domino.iap.google.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 15
=====================================================================
