Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/de.fgi.ms.securesign-12393B4AF623911ACD361CC4D402520D7A8384BB7BEF6D52FE94B9F49EC80161.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: e43ead56044a9371116fcb52a8537d070b3b1edd6a6755086f47d7cfa40599fc
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <cor.ah.l: void <init>()>
		SHA-256: e258c3da732379a6323f070341fcf9dcdb363564cf919d30abdb7e5f0990b252
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: 87be9a926e906383effaff4c375e29bb7485faa2d766ec82d92df120a87da9a6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1733)
		Method: <cor.ar.d: java.lang.String a(byte[],java.security.Key)>
		SHA-256: 9c8f9a8255a027707de67f5328d7a2d889242d413c1971af1158fc406b41c864
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1862)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec b(byte[])>
		SHA-256: 3d2df5c5a5db503104e1f60cc4c875190db50365cd67612d7b43b8b19e93de16
		Secure: false
	Object:
		Variable: varReplacer1862
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1862)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec b(byte[])>
		SHA-256: ad7fff28eff46b58bb4d4b56ab37267299142dd784551abcb6a4db3b46b7b6ad
		Secure: false
	Object:
		Variable: varReplacer1744
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1744)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: 3629286b54f4e3411b447079b11f9423d9a45218eaeab48a402b37aab94104ef
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer963)
		Method: <cor.ar.d: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 2d84f3b7186731416db9343ff645147678685384cc23f62100e2155b9f5257de
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1742)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: f668ea86b912c14e9f4071d2cb316aee1cd8c8847b437c2b181ed82f6054a9b7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1845)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: efb2b3f80469377e09977fd4bb9320fd6136b40034892312488d6a359143d1f8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1740)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: f61bfa30e34dc7b3c350b2f35d24361de0c724034ba87143dd40585507b73d28
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 14c82bce462938a66e642e2f8f9201603e3463add336be297c1996351d3542fe
		Secure: false
	Object:
		Variable: varReplacer624
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer624)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6a5e6a6e98f852a5421383ca7cdcf6cfa5e1c56a5fcd786388e338eaf4e79e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: java.lang.String a(byte[],java.security.Key)>
		SHA-256: 17bbbabf343ebbf03f4b1dff9cda50d46ffb2a12bee2b28683b2da48d8e8bd42
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cor.ar.d: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 1e3e9e5d04e8e8b1737f6338aa348b04a08ffcd06d5f3393fb16bd9e978806af
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1843)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: d09cf8286dae8a185d6068cf79f9555230fb73db675a3c60a8ed8229d00e35d0
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer624)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: c0b1e38964922fca34915d9d90cffbe7f5f5e7d74066b37daa7dc910eeb3534
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1274)
		Method: <cor.ae.h: void <init>(java.security.KeyStore)>
		SHA-256: 8cdafdf2c02ac856d21f2906f62b61adddd076869d2a69b5ae699d2a8867fa01
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1744)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec c()>
		SHA-256: f7ca9053756b1416b14051b3666057e0370c6b5e8836a1a269aa7f2e225d3da4
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: c3aab333969edcfc27b514338051b106cd1b59d5032e6c600725624162efaf49
		Secure: true
	Object:
		Variable: varReplacer1845
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1845)
		Method: <cor.ar.d: javax.crypto.spec.SecretKeySpec a(java.lang.String)>
		SHA-256: c763dc5a91ee464a707a0edccae618f00c1aa7327c12b617d3696d25c0cdbfc7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1746)
		Method: <cor.ar.d: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)>
		SHA-256: 6fdf5076f10840ffbd8700b28d3f6945f6af2ebdbe1fc8fd3cbadf1661ea3395
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer639)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.security.Key)>
		SHA-256: 19b233d1a0c4f672c903093ef00f69e745ec195890efa41c11259800aa871ee6
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cor.ar.d: byte[] a(java.lang.String,java.security.Key)>
		SHA-256: 6c7ecfb3dcd0d53951b50f09f8703077f5cc0e115c52fea2f02c7094bb1466f1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <cor.ae.h: java.security.KeyStore a()>
		SHA-256: 220b9378390358ade1d6a9a43b629270bf5f71c354d985d427798d799a117c0a
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1669)
		Method: <de.coronic.cor03.client.android.util.o: java.lang.String a(android.content.Context)>
		SHA-256: e4ba98f17f6c7167cc3d0713fe08bd7a734a5fed58606d337673043506453654
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <de.coronic.cor03.client.android.util.o: java.lang.String a(android.content.Context)>
		SHA-256: 6f4c4d394a8476ccb834d64d658bd8b4c9bfa261a055d496ed22cceec443416a
		Secure: false

Findings in Java Class: cor.ar.d

	 in Method: byte[] a(java.lang.String,java.security.Key)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #19b233d1a0c4f672c903093ef00f69e745ec195890efa41c11259800aa871ee6)
			First parameter (with value "RSA") should be any of {OAEPPadding, NoPadding, PKCS1Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer639)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #19b233d1a0c4f672c903093ef00f69e745ec195890efa41c11259800aa871ee6)
			First parameter (with value "RSA") should be any of {OAEPPadding, NoPadding, PKCS1Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer639)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer641, $r1)


	 in Method: byte[] c(byte[],javax.crypto.spec.SecretKeySpec)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2d84f3b7186731416db9343ff645147678685384cc23f62100e2155b9f5257de)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer963)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2d84f3b7186731416db9343ff645147678685384cc23f62100e2155b9f5257de)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer963)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer961, $r1)


	 in Method: java.lang.String a(byte[],java.security.Key)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9c8f9a8255a027707de67f5328d7a2d889242d413c1971af1158fc406b41c864)
			First parameter (with value "RSA/None/PKCS1Padding") should be any of RSA/{ECB, Empty String}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1733)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1735, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9c8f9a8255a027707de67f5328d7a2d889242d413c1971af1158fc406b41c864)
			First parameter (with value "RSA/None/PKCS1Padding") should be any of RSA/{ECB, Empty String}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1733)


	 in Method: byte[] a(byte[],javax.crypto.spec.SecretKeySpec)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6fdf5076f10840ffbd8700b28d3f6945f6af2ebdbe1fc8fd3cbadf1661ea3395)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1746)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6fdf5076f10840ffbd8700b28d3f6945f6af2ebdbe1fc8fd3cbadf1661ea3395)
			First parameter (with value "AES") should be any of AES/{OFB, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1746)


	 in Method: byte[] a(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer624)


	 in Method: javax.crypto.spec.SecretKeySpec b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1862)


	 in Method: javax.crypto.spec.SecretKeySpec a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1845)


Findings in Java Class: de.coronic.cor03.client.android.util.o

	 in Method: java.lang.String a(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e4ba98f17f6c7167cc3d0713fe08bd7a734a5fed58606d337673043506453654)
			First parameter (with value "SHA256") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1669)


Findings in Java Class: cor.ae.h

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1272, r5, varReplacer1272)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1272, r5, varReplacer1272)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 27

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
	ConstraintError: 9
=====================================================================
