Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/fast.explorer.web.browser-0A6E629370F1776F3E94C1DE3E8C1E7FDFD043E558201EFF009BD5F2CAEBA5C7.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.a.a.cz: java.lang.String b(java.lang.String)>
		SHA-256: f3bf21ea171a0a3e77f6955ec85de897161a8966749fe0c40ccbb6f33a8978d8
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.a.a.cw: java.lang.String c(java.lang.String)>
		SHA-256: 4cae9241d15e353be2d0fa7e04e76d0cbbbb124bfdee99d1bc530f8ccd98e7aa
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2278)
		Method: <com.a.a.a.cw: java.lang.String c(java.lang.String)>
		SHA-256: 587f5b2715559ee237415e128f443303ee8f95fef7931472e4d39a419e9c83a0
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2856)
		Method: <com.a.a.a.cy: java.lang.String r(android.content.Context)>
		SHA-256: f45c55ec7e6d7d41551db3bbd684fcaa982ebd8e54d71313f32d56cf9aff96a0
		Secure: true
	Object:
		Variable: varReplacer2183
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2183)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: 3063be72440fdf0d319279edc2f1a53b6d5666b112cefb0cb5ccdb5a72c7d8bb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5517)
		Method: <com.ijoysoft.appwall.c.c: java.lang.String b(java.lang.String)>
		SHA-256: 6ceb0f51733d93ae9048b6222fb05e06dbb242c2fb0c1ff8e896fa7f6e1dab8b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.a.a.a.af: void a()>
		SHA-256: 61023ae1cfde2f35061e509ad4b6215f6a7115e7610de3e8b43141d15bc1625
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1552)
		Method: <com.baidu.location.aq: java.lang.String a(byte[],boolean)>
		SHA-256: 8c5ccb7f9e9fca1dbb63e24296a93f97d28abda2744216bebc2c1f61f29545a7
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: c8324634fac14dd2009afea4f5fbb3444cbf8b411a9d6c5060d5407f13eb5126
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2183)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: 44a6c63a4481efb22f2b481f4f354d857eedcab5638f12502c2aecb07ed093b4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2188)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: f0fd6c556e668a26cd7f16364095df717abdb0615402ee9fa4c00130d087d57e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.ijoysoft.appwall.c.c: java.lang.String b(java.lang.String)>
		SHA-256: cd4ef629ef1df99049a308ac5feb7939720eff2c14f740550a70888929459afb
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: 38b051f8ae81e23f12f8f3ef18d9d9f26ac0634e7a51299e3f35bffcfd74d1f7
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.a.a.a.cy: java.lang.String r(android.content.Context)>
		SHA-256: 51661dc21831df68b124087c09d01c1c50b6653cf753a54ef078f2abc2e2aa12
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: 63421fa07878d99f89d1adaf6e84172952bbd803537a3c6be212e72dea4653e7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.a.a.cw: byte[] b(byte[])>
		SHA-256: f0465fae78b0772b817e02d8e4f265ed058f7bf3f8b5548b90dc617f0cfb7506
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2643)
		Method: <com.a.a.a.cw: byte[] b(byte[])>
		SHA-256: 5b79c215269c0838a2217e2fa06fe5b71c933a09c4105d71d1887b50a0d6b11c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2185)
		Method: <com.a.a.a.cw: byte[] a(byte[],byte[])>
		SHA-256: 3eda4ddf2aa8931d6ef25bd6e5f74b3ebe47e088d969ec04537ce7df04cf6e2f
		Secure: false
	Object:
		Variable: varReplacer2188
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2188)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: ef67709d18deb86a3c85ff3ca61772bb582b0831ffc425d70b6b15b699106840
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4098)
		Method: <com.a.a.a.ak: void <init>(java.security.KeyStore)>
		SHA-256: f7cd0bc809fef1879f3c457b40c3eab2f4473a7220a9028ab1ffd1356acb026e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: b513b8086ab0adc956d47bbf64c6c708040e2c827affc6fe8ec34cf3d231cc79
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2186)
		Method: <com.a.a.a.cw: byte[] b(byte[],byte[])>
		SHA-256: e56b62f218baec1c44d95a3c682f08907c6d3ceab052e983464c147b28cdf1ec
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2640)
		Method: <com.a.a.a.cz: java.lang.String b(java.lang.String)>
		SHA-256: 6aaf01abd099e2f26de21f5c089542b0709055a68d231b0ef83e657db752faae
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.baidu.location.aq: java.lang.String a(byte[],boolean)>
		SHA-256: 906af7690167eaf8d5eb11e560441c1f6bf18ca5bd404588a971220446817865
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.a.a.a.cz: java.lang.String a(java.lang.String)>
		SHA-256: 63982f204f558a23d9c25907c3cb6d4c0a79556fe7f0df9919020af8bffdaf99
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2709)
		Method: <com.a.a.a.cz: java.lang.String a(java.lang.String)>
		SHA-256: f79a2a8ebab6e6c8e6a57a664de30e62d0e86c46ae76cde4fb2961857adb7d18
		Secure: true

Findings in Java Class: com.a.a.a.cw

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #587f5b2715559ee237415e128f443303ee8f95fef7931472e4d39a419e9c83a0)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2278)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2187, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2188)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2183)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2184, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2184, $r2, $r4)


Findings in Java Class: com.a.a.a.ak

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4099, r7, varReplacer4099)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4099, r7, varReplacer4099)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 26

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 9
	ConstraintError: 1
=====================================================================
