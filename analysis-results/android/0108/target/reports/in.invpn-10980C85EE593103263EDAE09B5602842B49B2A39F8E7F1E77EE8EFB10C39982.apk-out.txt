Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/in.invpn-10980C85EE593103263EDAE09B5602842B49B2A39F8E7F1E77EE8EFB10C39982.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Alive 17308  5000
Alive 24595  5000
Alive 25822  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: bffe37a2d2b82caef2b49a93bd47e25da59c724bee9ad61d727e7de99f7acae
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1508)
		Method: <u.aly.bs: byte[] b(byte[])>
		SHA-256: de0e02fd6462c146c0dd4005670e2c677d1475c3362fcf0942070e46cd2d658a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2295)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: 4e77bd6947bd7b4536130f5e9538c66bacbdff2573a9dc6eb345ba8e0a7ad24d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 9bec08917d8c17d6308fce1047325c6c7c3f151094e6e268fc8e7d3e89e5beab
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 480d62b2174afc77ea171637c712e1afce063fa35eb4849bf29d0ae0c68791d8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.android.agoo.common.c: byte[] a(byte[])>
		SHA-256: 85075d05eb7693deb90f4991b9c7d9d0798b6b3872d213e4dd07d55a4a51f8b6
		Secure: true
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: ce27a79f159a0b0e9d5beb5b86a8d9d0630db56327d0e0bd86801b701d7f64e7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1049)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 56f5aba0b40dcc3c3aa5dd14ab347c01b812fcfcd169f768c5923777e97e1177
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5905)
		Method: <u.aly.bb: void <init>(java.security.KeyStore)>
		SHA-256: c02ab52dcf73e48376eec6a6f9777a1af82acf11089658f4817528cbb40a6acb
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bs: byte[] b(byte[])>
		SHA-256: 3249420ad06991ff84956727aec3c333639d8ef077ab4291201463339c541e4b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: 112de34efa7b8be9b5ffcb803e9a8d349b144a8eb478ee5a675a596c16edd59c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 34aa3b6ee6c7ba7ca161fa3e216f9558d03e22fe0bd8369b62d3fa741d32e768
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6637)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: 21d30ef362a348e6452e85b4557306c56717dcb4b89e0596139cb83467852e9a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bs: java.lang.String c(java.lang.String)>
		SHA-256: bbe0b8ef84642ecfe2d0251874077e3b23da2170e4f2fb08bea07ceb3b40eade
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <org.android.agoo.common.c: void <clinit>()>
		SHA-256: 2705022dbbf2fad58b29aa7b832e91827679edd40f99b8f72f776b0057153b67
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer6583)
		Method: <org.android.agoo.control.AgooFactory: java.lang.String parseEncryptedMsg(java.lang.String)>
		SHA-256: ff1a01419dfdca22e3f2d7f1e333cde3b153f5fb161c55d18b3ffeb216e361c8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5790)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: be63e4dc6e2d99c955e1921a68f24fbcb2b59cc4d97c931406175f1935ece6f7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: c5a57e32c0226a86444337cd105d2e743b580d87ce60e2157049afb4d2848a9a
		Secure: false
	Object:
		Variable: varReplacer2235
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2235)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: d7b8830290d6e7a3d3c3d27c7c224ddf65bad93b91395b7e7f79f5e57e4a86d5
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: a82afbb0761a6034a969f37b27432ebbeb3f0ad07c0c9c757c6dc182b3a5c0b2
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 7a5b6ff3104b0c697c70f8001151345e86e1c53eed3860aed8f6f84bad7a619c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 4ff8afa2916954f9a0d986129d899a15493555d793f466f2b9548afac2d34340
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1574)
		Method: <u.aly.bv: java.lang.String a(java.lang.String)>
		SHA-256: 643b6abe863d1e7020f57514d1bc071ee1179ae69f84e44a86edbfbed7fd54ba
		Secure: true
	Object:
		Variable: varReplacer1050
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1050)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: df6d30fee4a847f5784921b17866f7002c09a35e46f73c98d298c5c4f4d7ef54
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <u.aly.aw: void a()>
		SHA-256: 6839d53c5c853cf50908053a93d66c4ab720e87bbff149d04df2410de8242ab0
		Secure: true
	Object:
		Variable: varReplacer5792
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5792)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: 55b693c366b6653a40be9538253ce83188c58d945c07bd81d79285fc3abfcd4f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2236)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 92c8309451aef1d34dd32aa1575bd7e997e98d53267c70218dfc58b793403a70
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6635)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: 9ab6793f64495a60df62969ae8e74fa5ed2a8ccf9551c0932bdd451dcbfe87fa
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2235)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: dfbf98f5cf23639bb85673e44f50354af715eda5ed1b1dc70128433a9d998807
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6650)
		Method: <org.android.agoo.common.c: javax.crypto.Cipher a()>
		SHA-256: 5abee43d35f46839db3ef1183d6a510f6cdf00aa58aaf5e397c9726b07c57479
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1051)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 8662be48acade1af55a81d3f3b99c738e9ce7f97b7a0ceccc51d102b5deb4668
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6630)
		Method: <org.android.agoo.common.c: byte[] a(byte[])>
		SHA-256: 1b2cb75c1b2b99257341c3dff58822f53ce065941b92d36b5a56eb5853debf2e
		Secure: true
	Object:
		Variable: r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <org.android.agoo.common.c: javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,byte[],int)>
		SHA-256: 3d1c29f9a6a16f7cacfdcd66eb1c08940e0808e6b96f4e756037ca7ac8bac0b2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.android.agoo.common.c: byte[] a(byte[],javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: 8f2e7913c00617921e7d852b9a31479fa9f5aae33209b7f9e78a25b1061dfac
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: d3e541c1dd63b5d8b4b266e404ab796177c7a82d78852375cf3fcf1b299b6aa7
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2638)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: fbf2430ebabcd5d89d8fde2039c5fe23bebd9d414d6104d2a2a22d0dfd30f32a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: dfdfbc12720b58582472a369ee7126d2c89ffccd15b06b641717c7d7a71ba579
		Secure: false
	Object:
		Variable: varReplacer1047
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1047)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 655de1f72217e8e1b56f9281870bb75a156633a255f72a61b1e7dda54970e0b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6889)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String b(java.lang.String)>
		SHA-256: 3e4573163605a3ff7620f8296b7606fb1d3e6dbdf3f923aacc46a67862ba3314
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.ta.utdid2.device.c: java.lang.String b(byte[])>
		SHA-256: a496e81fbb4fcdc5e03a647a323f9f888baa3ef5d73648a3e0b5a3b467ddbd1
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1047)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: f0505e590fc3e42ed839bae6ac13ff39266639ab7eb59b8f44ad300fa398c85f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2640)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: 2411369ba5d173814477d3afaa82f81786f8d711cd84e36842b0e1590553938f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.android.agoo.common.c: void <clinit>()>
		SHA-256: 1cfaf2cb7506204331ef3ecc4990394b16071f06c77b1b96aef866a09c9d21cc
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1139)
		Method: <u.aly.bs: java.lang.String c(java.lang.String)>
		SHA-256: 1df82c84bde52d9cd517c139fea09c5f498a755d0c121900f0957125083a8cae
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1050)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 5c4ad63231b949e32e683add039aefddd95f168827100a85fd588838423a2d06
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1721)
		Method: <u.aly.bu: java.lang.String u(android.content.Context)>
		SHA-256: 623ad6c570ddbbfb0841315d38e9d02adb9628543fa7f5d658e0105b2aa68bc0
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2557)
		Method: <com.umeng.message.proguard.g: java.lang.String a(java.lang.String)>
		SHA-256: 5a03125fc02eca15926de9fbd29476665b5b823b7aa4c8f79acc8077476c84ed
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2241)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: 812cb23f78edfa23624caccaf1bec2d60d8b8d0ec30c5415570334a2e0960a59
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.message.proguard.g: java.lang.String a(java.lang.String)>
		SHA-256: 8f4b35d04dbcf5b1d5c11b169e15fe55a7ce24c9198acfcbf22b27572989e7da
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bv: java.lang.String b(java.lang.String)>
		SHA-256: d86468cc9392a30c0a2ba2dbe963f5571fbe21bc8208cf57bb28622d3680cc60
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5792)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[],byte[])>
		SHA-256: fb56c5184f903c7990b7cb1dce72564b5013c538ee2d9722029969a62fc19132
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String b(java.lang.String)>
		SHA-256: 76c238b127f0dc616e39488c530b32fcba1af40805ec7fc0872956a83a6da782
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6890)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String a(java.lang.String)>
		SHA-256: 1867f8729acb5eb40c03bcb47ebd7c4978d31492fe61dcba962fe57b7b2ef7f3
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 114e16caa40e734a0e255361d38b3835adb74935128fc69bdb16f1ab64dce330
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 266ce8ef6af251212529e05fd6070ced123a10d0494f7eae63a9e8bb332a6b13
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1506)
		Method: <u.aly.bv: java.lang.String b(java.lang.String)>
		SHA-256: 67db82749c5018ed06bf180820bbdc8d53de3365aa7b9cffbc232c0be035de0d
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: ac2912fd2a8cc62f2d028959fdfebed1a18ae39f8a205fd829cc8080606487cd
		Secure: true
	Object:
		Variable: varReplacer6637
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6637)
		Method: <org.android.agoo.common.c: byte[] a(byte[],byte[])>
		SHA-256: 653444aad97a72883258b39bef9d32de187c236396f45efe193ad5b71f83345
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer2239, varReplacer2240)
		Method: <com.ta.utdid2.b.a.a: byte[] a(byte[])>
		SHA-256: d1bf1adb40619dac124154e5ff56bc8389d17cf5e1ee0932b142231033565d55
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6504)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: a4f2dd1ca19a8d86513b1c826b445577488168809e69034dd4dcb3c443ebf571
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ta.utdid2.b.a.a: byte[] b(byte[],byte[])>
		SHA-256: 6eeb388f9f05d7f3e8f96664808a2e18b13430fbe401cac4e442507aee164771
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.bs: byte[] a(byte[],byte[])>
		SHA-256: 9cfd93e16e92695722f1605f9722d0827a7d09b24ac41bd14056584a47c8b9b9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.alibaba.sdk.android.httpdns.g: java.lang.String a(java.lang.String)>
		SHA-256: 6d1a39c1831e5568cb7c076330221adccad2df3c11e1e633666447394a4bab1a
		Secure: true
	Object:
		Variable: varReplacer2640
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2640)
		Method: <com.umeng.message.proguard.b: java.lang.String a(java.lang.String[])>
		SHA-256: b2aa4b68dd2aaa132c7f469077d0c6cc8f51fecb1706e8ea1fcde5e0af994492
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.bu: java.lang.String u(android.content.Context)>
		SHA-256: b76e41fac3e3573bc28b2b0271af174bb43f8e90d4fcf4a9a078f6c58c75983c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.bs: byte[] b(byte[],byte[])>
		SHA-256: 53e689f0838acc09cc36cef29f7f79a88f3727bc41513a6f98273796d8efc71d
		Secure: false
	Object:
		Variable: varReplacer6583
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer6583)
		Method: <org.android.agoo.control.AgooFactory: java.lang.String parseEncryptedMsg(java.lang.String)>
		SHA-256: 3228fca77042a33e7faf6125e7bf120fa22ed502e935dd0ce8c13d529941162c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bv: java.lang.String a(java.lang.String)>
		SHA-256: 1192797ef7ac70aefcb78b371048d02d5d6336b44a9003cf24a1687fda802802
		Secure: true

Findings in Java Class: u.aly.bs

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1df82c84bde52d9cd517c139fea09c5f498a755d0c121900f0957125083a8cae)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1139)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1047)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1048, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1048, $r2, $r4)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1050)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1052, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.alibaba.sdk.android.httpdns.g

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3e4573163605a3ff7620f8296b7606fb1d3e6dbdf3f923aacc46a67862ba3314)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6889)


Findings in Java Class: com.umeng.message.proguard.b

	 in Method: java.lang.String a(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2639, $r6, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2640)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2639, $r6, $r7)


Findings in Java Class: com.ta.utdid2.device.c

	 in Method: java.lang.String b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)


Findings in Java Class: com.ta.utdid2.b.a.a

	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer2242, $r2)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5791, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5791, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5792)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2237, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2235)


Findings in Java Class: u.aly.bb

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5903, r7, varReplacer5903)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5903, r7, varReplacer5903)


Findings in Java Class: org.android.agoo.common.c

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6637)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


	 in Method: javax.crypto.Cipher a(javax.crypto.spec.SecretKeySpec,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Fourth parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer6641, $r0, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer6641, $r0, $r3, $r4)


Findings in Java Class: org.android.agoo.control.AgooFactory

	 in Method: java.lang.String parseEncryptedMsg(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer6583)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 68

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 28
	ConstraintError: 2
=====================================================================
