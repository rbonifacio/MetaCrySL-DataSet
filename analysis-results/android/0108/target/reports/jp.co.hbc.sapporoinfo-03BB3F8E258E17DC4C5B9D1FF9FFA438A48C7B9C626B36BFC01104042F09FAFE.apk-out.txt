Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/jp.co.hbc.sapporoinfo-03BB3F8E258E17DC4C5B9D1FF9FFA438A48C7B9C626B36BFC01104042F09FAFE.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4383)
		Method: <com.weibo.net.Utility$MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: a66b5e98b933674e0a12170a7506bd4261ecd94251e4c682f30b5f0b01442bec
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer4300)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 266511e2072805510dd5d8019e1773bf72212e0c5611a6d9b8dd4ec3f8806e45
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.weibo.net.Utility$MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: ccc8907951e3e3e487e42d123991f9c79ba48fcf58aa0aa133bdbb8fbccc1af0
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4301)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 438668d2a959a3e7681b5281c31ddc3591d0b8ca5c81d5bef3d63b397872c4c4
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4382)
		Method: <com.weibo.net.Utility$MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 1208afc740b3e8789c5853a1ace9301bafbbd0d8d8037b2a2426c33fbfb2b3b3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.analytics.tracking.android.GAThread: java.lang.String generateClientId()>
		SHA-256: ee0368bfc9737d4afa73398426e9b14cd7b26ad5ce6e84b01bdbbf2e0afc376b
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <com.weibo.net.Utility: org.apache.http.client.HttpClient getNewHttpClient(android.content.Context)>
		SHA-256: 79f58ad3ff6efc51c424beac8867f9e8c8a8507c66b8a595b89a1bfa56d8ceb0
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 60029a1b2e5ee22a3931915434a5fa44cf27db5eb408040851f105ce7e16415b
		Secure: true
	Object:
		Variable: varReplacer4300
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer4300)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 14151d0cff1b227e1359025775c6c9a5234791149b4607dc6905e2b7502184a5
		Secure: false

Findings in Java Class: com.weibo.net.Utility

	 in Method: org.apache.http.client.HttpClient getNewHttpClient(android.content.Context)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1208afc740b3e8789c5853a1ace9301bafbbd0d8d8037b2a2426c33fbfb2b3b3)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: specialinvoke $r11.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>(varReplacer4365, $r6, varReplacer4366)


Findings in Java Class: com.weibo.net.Utility$MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4384, $r6, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4384, $r6, $r2)


Findings in Java Class: oauth.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer4300)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 9

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	RequiredPredicateError: 3
=====================================================================
