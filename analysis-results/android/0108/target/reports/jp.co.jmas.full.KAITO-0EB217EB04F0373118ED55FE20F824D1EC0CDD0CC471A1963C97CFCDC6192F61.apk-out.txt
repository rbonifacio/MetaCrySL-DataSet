Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/jp.co.jmas.full.KAITO-0EB217EB04F0373118ED55FE20F824D1EC0CDD0CC471A1963C97CFCDC6192F61.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)
		Method: <ch.boye.httpclientandroidlib.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: dc4e476ea630cc27c6e5ac5a59a3bd25fb1bde7e5a6feccef577219bf3e4dd18
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.jmas.full.KAITO.kaito.KAITODocProvider: byte[] getHash(byte[])>
		SHA-256: 13da1abb1645ee29635bf8ebe0438b07a7a0767c2b98b526267fb85d76610d4
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer11223)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 5463ea15b55ab44692f60df399ad7cbea5d72670ba83a1f85206efe4bc4b6dc6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha256(byte[])>
		SHA-256: 9ced9c51c14331591363970df2ef4929fe6f001ffc3faa22cbe577fc8899fde4
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.mozilla.gecko.kaito.KAITOLoader: java.lang.String getSha1Digest(byte[])>
		SHA-256: 52672da9d432b3c5d5edd961e30f2dca2331e40469fa9b97c7383befbde61f28
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.cec_ltd.cloudappbase.util.libs.SubString: java.lang.String digestMd5(java.lang.String)>
		SHA-256: 9426bc241b4896a2481b14d138bdab52844378f8d5066e922f9765986e30abe0
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10332)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha1(java.lang.String)>
		SHA-256: be9a6d25f42ebd3c311896ac1f71a71f65167fe044756622d41e7b02c894cd58
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.mozilla.gecko.sync.Utils: void <clinit>()>
		SHA-256: 21751f7aecf1d291eda3d279cbf29dd85f2a1ab722649b63742a78fd41b9d237
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10542)
		Method: <org.mozilla.gecko.updater.UpdateService: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: 1f86a614b773a67f43bd56415627e87a96e6b841b7f9c11cee8a759ed28399ed
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <jp.co.cec.module.serverAction.ServerHttps: void <init>(android.content.Context,java.lang.String,java.lang.String[])>
		SHA-256: 5c20288382bcf0a1627715b310cf727c36369d6746bce4d31f3047df6489b5fb
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11309)
		Method: <jp.co.cec.module.serverAction.MySSLSocketFactory: void <init>(android.content.Context,java.security.KeyStore,java.lang.String,java.lang.String[])>
		SHA-256: 72101d88862dd14d513a9afb47248e8e429d11a9c62e6c3a65f6cf384ff4d11b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9341)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: e29a08149d27d8db564b33a1cecb397d0fbf4d2b898cd090ad4b7616cf77046b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11222)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: e66c87f177933c2ed68a64903ad739b5d32983d49cf332992af416acae9420a4
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12665)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha256(byte[])>
		SHA-256: d3ab414edfb5b54c5153363ddb68762faa2f1f194fc04307e57e2d13c631ed3f
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5353)
		Method: <org.mozilla.gecko.sync.net.BaseResource: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()>
		SHA-256: 6b31193fbd3876ac0d65addc019bc58195d413796091a57ec7d5b08d563f83e1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11048)
		Method: <jp.co.cec_ltd.cloudappbase.util.libs.SubString: java.lang.String digestMd5(java.lang.String)>
		SHA-256: f4b1ff36bc5b037d44e2f1677ff6f16943f8f313f3e3163fb8569f3086f46f6a
		Secure: true
	Object:
		Variable: varReplacer11223
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer11223)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 25ce569be92333af65b0811efb7f989493d43f8f5edc2b62f9110c0e9c7dc233
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11710)
		Method: <jp.co.jmas.full.KAITO.kaito.KAITODocProvider: byte[] getHash(byte[])>
		SHA-256: cbd0f684d61a9f3b3d625ee87ec3849428fc9656cc8bd92aa8ab6ee5cae59e01
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: 16fbdee3ccf53566f47857ba4ca4b44fb5e9d395e6f918a68cd3d7ad2b4abc32
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.mozilla.gecko.sync.Utils: byte[] sha1(java.lang.String)>
		SHA-256: 55c463b3fcc9431d3a265126e007f00c9d82d9b1025b7da12398b8d8dbf7556d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer9346)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: e6b2c80414877bcbac3441639581dd102b50b2940c7c43873427410bb3b5d744
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9323)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: java.lang.String getSha1Digest(byte[])>
		SHA-256: 8e169ff982ff2f2a9bfa38d52a0af4b7c8d02939e489dbd28d612d9a4bada602
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <org.mozilla.gecko.kaito.activate.MultiProxyHttpRequest: org.apache.http.client.HttpClient getHttpClient(org.mozilla.gecko.kaito.activate.KAITOProxy)>
		SHA-256: 1550e599c346e1b335a45b5cfa0f723491256651b00c75d73c02a1cde82c0974
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10965)
		Method: <org.mozilla.gecko.kaito.activate.KAITOSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 41e779ffaa68182370f0932b0e2658531a819f3c31e1dd38c8867365fcf89b7a
		Secure: false
	Object:
		Variable: varReplacer9346
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer9346)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] decrypt(byte[])>
		SHA-256: d0c93710e6d3027cb5fdcb4a00097691784986d6ec843fdb3119c8a16a177a09
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)>
		SHA-256: 8d880835e7f352b72277cb342ada320ac4ef0e1cf4825b19c38a652440e84c82
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.mozilla.gecko.kaito.KAITOLoader: byte[] encrypt(byte[])>
		SHA-256: 2f3806df3da28fe0dd00b1490efaf1a439d9488f1b4544c31f1cc2a9107706a2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.mozilla.gecko.sync.net.BaseResource: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()>
		SHA-256: 921527a4d56c9731eabbd204e7f3975b795533b68dde403bf13034be3bf0ecb6
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer12552)
		Method: <org.mozilla.gecko.browserid.DSACryptoImplementation: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)>
		SHA-256: 428cccabd5ae72ee51f3edf7d446f011cef1ebf6ea54c328023249b0df395868
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.mozilla.gecko.updater.UpdateService: boolean verifyDownloadedPackage(java.io.File)>
		SHA-256: 4ac6f5b22eca17889109082c03467dfaeae8a7313547682c44458185824f732e
		Secure: true

Findings in Java Class: org.mozilla.gecko.updater.UpdateService

	 in Method: boolean verifyDownloadedPackage(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1f86a614b773a67f43bd56415627e87a96e6b841b7f9c11cee8a759ed28399ed)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1f86a614b773a67f43bd56415627e87a96e6b841b7f9c11cee8a759ed28399ed)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <org.mozilla.gecko.updater.UpdateService: java.security.MessageDigest createMessageDigest(java.lang.String)>($r3)


Findings in Java Class: org.mozilla.gecko.browserid.DSACryptoImplementation

	 in Method: org.mozilla.gecko.browserid.BrowserIDKeyPair generateKeyPair(int)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #428cccabd5ae72ee51f3edf7d446f011cef1ebf6ea54c328023249b0df395868)
			First parameter (with value 1024) should be any of {2048}
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer12553)


Findings in Java Class: ch.boye.httpclientandroidlib.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3287, varReplacer3287, varReplacer3287)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3287, varReplacer3287, varReplacer3287)


Findings in Java Class: org.mozilla.gecko.kaito.KAITOLoader

	 in Method: byte[] encrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer11223)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer11218, $r2)


	 in Method: byte[] decrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9343, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer9346)


Findings in Java Class: org.mozilla.gecko.kaito.activate.KAITOSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10963, r5, varReplacer10963)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10963, r5, varReplacer10963)


Findings in Java Class: jp.co.cec.module.serverAction.MySSLSocketFactory

	 in Method: void <init>(android.content.Context,java.security.KeyStore,java.lang.String,java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11307, r8, varReplacer11307)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11307, r8, varReplacer11307)


Findings in Java Class: org.mozilla.gecko.sync.net.BaseResource

	 in Method: ch.boye.httpclientandroidlib.conn.ClientConnectionManager getConnectionManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5346, varReplacer5346, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5346, varReplacer5346, $r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	ConstraintError: 1
	RequiredPredicateError: 12
	IncompleteOperationError: 1
=====================================================================
