Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/kr.co.kgbr.android.sg96v1-0900580278CB96BEE3C2AAD5AC9EC3F0E4912169C3ECAFD53DC52B2D844A1738.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer883)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: df378e46aedaaabe20e30bb4375409f9ba8b9453afbb4c7b259d3649be313159
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1686)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: a3589594309b488d89526df27356b7b5ebbe21ec827807646141c22f4da396ec
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2158)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 228e8ac4b65d3f1a5fd3fd781211bbd34199069a7449f57d65184c55b006ac7f
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: 312bf13afc9aec2dfa0131117dc3e200a55ecd534a7fd640682c03f14a024398
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: e931bd46e7d9ddc749e37536babd18ef495da0cad79eb88630553a684700e180
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1806)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: 7c242874d23aee3327c0cca6bd03f3e08431584291d25025e90331584fe5856b
		Secure: false
	Object:
		Variable: varReplacer1687
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1687)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: 9218b67bdec29825287257c443a1926cfd3aad0280a4bd03c60f4b47e4e9e43a
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: 312bf13afc9aec2dfa0131117dc3e200a55ecd534a7fd640682c03f14a024398
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1802)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: ae329325413b9e8cbe9f2d69574d22791d39b8c84a858aceaf2017a531f0beb5
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1687)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String,java.lang.String,int)>
		SHA-256: 4fab2c4c14732322cac3bc3fca351bde7dc4ea4660f263aede47cd21528fda43
		Secure: false
	Object:
		Variable: varReplacer1806
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1806)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: 85cdd7eeac91624f7a7a079f0027ee028597fa9e8afe150a260127907492c588
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.clbee.authorviewer.aes256decoder.AES256Cipher: byte[] AES_Decode(java.lang.String)>
		SHA-256: a1672d523bdb1d62e6aa591eebae474c0d56146b23328619d7d686f732572bd0
		Secure: false

Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer880, varReplacer880, varReplacer880)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer880, varReplacer880, varReplacer880)


Findings in Java Class: com.clbee.authorviewer.aes256decoder.AES256Cipher

	 in Method: byte[] AES_Decode(java.lang.String,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1682, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1687)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: byte[] AES_Decode(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1798, $r4, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1806)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 8
=====================================================================
