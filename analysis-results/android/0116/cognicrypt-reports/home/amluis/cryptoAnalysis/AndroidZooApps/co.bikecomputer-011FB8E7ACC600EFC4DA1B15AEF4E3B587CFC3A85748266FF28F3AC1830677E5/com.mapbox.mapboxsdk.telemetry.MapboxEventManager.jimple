public class com.mapbox.mapboxsdk.telemetry.MapboxEventManager extends java.lang.Object
{
    private static final okhttp3.MediaType JSON;
    private static final int SESSION_ID_ROTATION_HOURS;
    private static final java.lang.String TAG;
    private static java.text.SimpleDateFormat dateFormat;
    private static long flushDelayInMillis;
    private static long flushDelayInitialInMillis;
    private static long hourInMillis;
    private static com.mapbox.mapboxsdk.telemetry.MapboxEventManager mapboxEventManager;
    private static java.security.MessageDigest messageDigest;
    private java.lang.String accessToken;
    private android.content.Intent batteryStatus;
    private android.content.Context context;
    private android.util.DisplayMetrics displayMetrics;
    private final java.util.Vector events;
    private java.lang.String eventsURL;
    private boolean initialized;
    private java.lang.String mapboxSessionId;
    private long mapboxSessionIdLastSet;
    private java.lang.String mapboxVendorId;
    private final java.lang.String operatingSystem;
    private boolean telemetryEnabled;
    private java.util.Timer timer;
    private java.lang.String userAgent;

    static void <clinit>()
    {
        java.util.Locale $r0;
        okhttp3.MediaType $r1;
        java.text.SimpleDateFormat $r2;
        null_type varReplacer823, varReplacer827;
        long varReplacer824, varReplacer826, varReplacer829;
        java.lang.String varReplacer825, varReplacer828;

        nop;

        varReplacer823 = null;

        <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: com.mapbox.mapboxsdk.telemetry.MapboxEventManager mapboxEventManager> = varReplacer823;

        varReplacer825 = "application/json; charset=utf-8";

        $r1 = staticinvoke <okhttp3.MediaType: okhttp3.MediaType parse(java.lang.String)>(varReplacer825);

        <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: okhttp3.MediaType JSON> = $r1;

        $r2 = new java.text.SimpleDateFormat;

        $r0 = <com.mapbox.mapboxsdk.constants.MapboxConstants: java.util.Locale MAPBOX_LOCALE>;

        varReplacer828 = "yyyy-MM-dd\'T\'HH:mm:ss.SSSZ";

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(varReplacer828, $r0);

        <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.text.SimpleDateFormat dateFormat> = $r2;

        varReplacer829 = 3600000L;

        <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: long hourInMillis> = varReplacer829;

        varReplacer826 = 10000L;

        <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: long flushDelayInitialInMillis> = varReplacer826;

        varReplacer824 = 180000L;

        <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: long flushDelayInMillis> = varReplacer824;

        varReplacer827 = null;

        <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.security.MessageDigest messageDigest> = varReplacer827;

        return;
    }

    private void <init>()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.util.Vector $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, varReplacer916, varReplacer919, varReplacer921;
        null_type varReplacer917, varReplacer918, varReplacer920, varReplacer923, varReplacer925, varReplacer926, varReplacer927;
        long varReplacer922;
        int varReplacer924;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer924 = 0;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean initialized> = varReplacer924;

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Vector events> = $r1;

        varReplacer920 = null;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context> = varReplacer920;

        varReplacer925 = null;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String accessToken> = varReplacer925;

        varReplacer916 = "https://events.mapbox.com";

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String eventsURL> = varReplacer916;

        varReplacer921 = "MapboxEventsAndroid/4.1.1";

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String userAgent> = varReplacer921;

        varReplacer926 = null;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Intent batteryStatus> = varReplacer926;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        varReplacer919 = "Android - ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer919);

        $r3 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String operatingSystem> = $r3;

        varReplacer923 = null;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.util.DisplayMetrics displayMetrics> = varReplacer923;

        varReplacer917 = null;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxVendorId> = varReplacer917;

        varReplacer927 = null;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxSessionId> = varReplacer927;

        varReplacer922 = 0L;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: long mapboxSessionIdLastSet> = varReplacer922;

        varReplacer918 = null;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Timer timer> = varReplacer918;

        return;
    }

    static android.content.Context access$000(com.mapbox.mapboxsdk.telemetry.MapboxEventManager)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        android.content.Context r1;

        $r0 := @parameter0: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        return r1;
    }

    static java.util.Vector access$300(com.mapbox.mapboxsdk.telemetry.MapboxEventManager)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.util.Vector r1;

        $r0 := @parameter0: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Vector events>;

        return r1;
    }

    static okhttp3.MediaType access$400()
    {
        okhttp3.MediaType r0;

        r0 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: okhttp3.MediaType JSON>;

        return r0;
    }

    static java.lang.String access$500(com.mapbox.mapboxsdk.telemetry.MapboxEventManager)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String eventsURL>;

        return r1;
    }

    static java.lang.String access$600(com.mapbox.mapboxsdk.telemetry.MapboxEventManager)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String accessToken>;

        return r1;
    }

    static java.lang.String access$700(com.mapbox.mapboxsdk.telemetry.MapboxEventManager)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.lang.String r1;

        $r0 := @parameter0: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String userAgent>;

        return r1;
    }

    private java.lang.String encodeString(java.lang.String)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.lang.String $r1, $r8, varReplacer1149, varReplacer1150, varReplacer1151, varReplacer1152;
        byte $b0;
        java.lang.Exception $r2;
        java.lang.StringBuilder $r3;
        int $i1, $i2;
        java.security.MessageDigest $r4;
        byte[] $r5;
        java.lang.Object[] $r6;
        java.lang.Byte $r7;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 := @parameter0: java.lang.String;

        $i1 = 0;

        $r4 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.security.MessageDigest messageDigest>;

        if $r4 == null goto label14;

        $r4 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.security.MessageDigest messageDigest>;

     label01:
        virtualinvoke $r4.<java.security.MessageDigest: void reset()>();

     label02:
        $r4 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.security.MessageDigest messageDigest>;

     label03:
        varReplacer1149 = "UTF-8";

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1149);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r5);

     label04:
        $r4 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.security.MessageDigest messageDigest>;

     label05:
        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

     label06:
        $r3 = new java.lang.StringBuilder;

     label07:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $i2 = lengthof $r5;

     label08:
        if $i1 >= $i2 goto label11;

     label09:
        $b0 = $r5[$i1];

        $r6 = newarray (java.lang.Object)[1];

        $r7 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b0);

        $r6[0] = $r7;

        varReplacer1150 = "%02X";

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer1150, $r6);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

     label10:
        $i1 = $i1 + 1;

        goto label08;

     label11:
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        return $r8;

     label13:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer1151 = "Error encoding string, will return in original form.";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1151);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1152 = "MapboxEventManager";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer1152, $r8);

     label14:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label04 with label13;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
    }

    public static java.lang.String generateCreateDate()
    {
        java.util.Date $r0;
        java.lang.String $r1;
        java.text.SimpleDateFormat $r2;

        nop;

        $r2 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.text.SimpleDateFormat dateFormat>;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>()>();

        $r1 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r0);

        return $r1;
    }

    private float getAccesibilityFontScaleSize()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        float f0;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        f0 = $r3.<android.content.res.Configuration: float fontScale>;

        return f0;
    }

    private java.lang.String getApplicationState()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.app.ActivityManager $r3;
        java.util.List $r4;
        java.lang.String $r5, $r8, varReplacer1153, varReplacer1154, varReplacer1155, varReplacer1156;
        java.util.Iterator $r6;
        boolean $z0;
        android.app.ActivityManager$RunningAppProcessInfo $r7;
        int $i0;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        varReplacer1156 = "activity";

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1156);

        $r3 = (android.app.ActivityManager) $r2;

        $r4 = virtualinvoke $r3.<android.app.ActivityManager: java.util.List getRunningAppProcesses()>();

        if $r4 != null goto label1;

        varReplacer1153 = "";

        return varReplacer1153;

     label1:
        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        $r5 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (android.app.ActivityManager$RunningAppProcessInfo) $r2;

        $i0 = $r7.<android.app.ActivityManager$RunningAppProcessInfo: int importance>;

        if $i0 != 100 goto label2;

        $r8 = $r7.<android.app.ActivityManager$RunningAppProcessInfo: java.lang.String processName>;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label2;

        varReplacer1154 = "Foreground";

        return varReplacer1154;

     label3:
        varReplacer1155 = "Background";

        return varReplacer1155;
    }

    private int getBatteryLevel()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        android.content.Intent $r1;
        int $i0, $i1, varReplacer870, varReplacer872;
        float $f0, $f1;
        java.lang.String varReplacer869, varReplacer871;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Intent batteryStatus>;

        varReplacer869 = "level";

        varReplacer870 = -1;

        $i0 = virtualinvoke $r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>(varReplacer869, varReplacer870);

        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Intent batteryStatus>;

        varReplacer871 = "scale";

        varReplacer872 = -1;

        $i1 = virtualinvoke $r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>(varReplacer871, varReplacer872);

        $f0 = (float) $i0;

        $f1 = (float) $i1;

        $f0 = $f0 / $f1;

        $f0 = $f0 * 100.0F;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        return $i0;
    }

    private java.lang.String getCellularCarrier()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.telephony.TelephonyManager $r3;
        java.lang.String $r4, varReplacer878, varReplacer879;
        boolean $z0;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        varReplacer879 = "phone";

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer879);

        $r3 = (android.telephony.TelephonyManager) $r2;

        $r4 = virtualinvoke $r3.<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label1;

        varReplacer878 = "";

        return varReplacer878;

     label1:
        return $r4;
    }

    private java.lang.String getCellularNetworkType()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.telephony.TelephonyManager $r3;
        int $i0;
        java.lang.String varReplacer880, varReplacer881, varReplacer882, varReplacer883, varReplacer884, varReplacer885, varReplacer886, varReplacer887, varReplacer888, varReplacer889, varReplacer890, varReplacer891, varReplacer892, varReplacer893, varReplacer894, varReplacer895, varReplacer896, varReplacer897;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        varReplacer885 = "phone";

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer885);

        $r3 = (android.telephony.TelephonyManager) $r2;

        $i0 = virtualinvoke $r3.<android.telephony.TelephonyManager: int getNetworkType()>();

        lookupswitch($i0)
        {
            case 0: goto label17;
            case 1: goto label09;
            case 2: goto label04;
            case 3: goto label16;
            case 4: goto label03;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label02;
            case 8: goto label10;
            case 9: goto label13;
            case 10: goto label11;
            case 11: goto label14;
            case 12: goto label08;
            case 13: goto label15;
            case 14: goto label05;
            case 15: goto label12;
            default: goto label01;
        };

     label01:
        varReplacer894 = "";

        return varReplacer894;

     label02:
        varReplacer880 = "1xRTT";

        return varReplacer880;

     label03:
        varReplacer893 = "CDMA";

        return varReplacer893;

     label04:
        varReplacer881 = "EDGE";

        return varReplacer881;

     label05:
        varReplacer897 = "EHRPD";

        return varReplacer897;

     label06:
        varReplacer892 = "EVDO_0";

        return varReplacer892;

     label07:
        varReplacer882 = "EVDO_A";

        return varReplacer882;

     label08:
        varReplacer883 = "EVDO_B";

        return varReplacer883;

     label09:
        varReplacer895 = "GPRS";

        return varReplacer895;

     label10:
        varReplacer888 = "HSDPA";

        return varReplacer888;

     label11:
        varReplacer896 = "HSPA";

        return varReplacer896;

     label12:
        varReplacer887 = "HSPAP";

        return varReplacer887;

     label13:
        varReplacer886 = "HSUPA";

        return varReplacer886;

     label14:
        varReplacer889 = "IDEN";

        return varReplacer889;

     label15:
        varReplacer891 = "LTE";

        return varReplacer891;

     label16:
        varReplacer890 = "UMTS";

        return varReplacer890;

     label17:
        varReplacer884 = "Unknown";

        return varReplacer884;
    }

    public static com.mapbox.mapboxsdk.telemetry.MapboxEventManager getMapboxEventManager()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;

        nop;

        $r0 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: com.mapbox.mapboxsdk.telemetry.MapboxEventManager mapboxEventManager>;

        if $r0 != null goto label1;

        $r0 = new com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: void <init>()>();

        <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: com.mapbox.mapboxsdk.telemetry.MapboxEventManager mapboxEventManager> = $r0;

     label1:
        $r0 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: com.mapbox.mapboxsdk.telemetry.MapboxEventManager mapboxEventManager>;

        return $r0;
    }

    private java.lang.String getOrientation()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        int $i0;
        java.lang.String varReplacer866, varReplacer867, varReplacer868;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i0 = $r3.<android.content.res.Configuration: int orientation>;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label2;
            default: goto label1;
        };

     label1:
        varReplacer868 = "";

        return varReplacer868;

     label2:
        varReplacer867 = "Landscape";

        return varReplacer867;

     label3:
        varReplacer866 = "Portrait";

        return varReplacer866;
    }

    private boolean isPluggedIn()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        int $i0, varReplacer874, varReplacer875, varReplacer876, varReplacer877;
        android.content.Intent $r1;
        java.lang.String varReplacer873;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Intent batteryStatus>;

        varReplacer873 = "plugged";

        varReplacer874 = -1;

        $i0 = virtualinvoke $r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>(varReplacer873, varReplacer874);

        if $i0 == 2 goto label2;

        if $i0 != 1 goto label1;

        varReplacer877 = 1;

        return varReplacer877;

     label1:
        varReplacer876 = 0;

        return varReplacer876;

     label2:
        varReplacer875 = 1;

        return varReplacer875;
    }

    private void pushTurnstileEvent()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.util.Hashtable $r1;
        java.lang.String $r2, varReplacer904, varReplacer905, varReplacer906, varReplacer907, varReplacer908, varReplacer909, varReplacer910;
        boolean $z0;
        java.lang.Boolean $r3;
        java.util.Vector $r4;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        varReplacer905 = "event";

        varReplacer906 = "appUserTurnstile";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer905, varReplacer906);

        $r2 = staticinvoke <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String generateCreateDate()>();

        varReplacer910 = "created";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer910, $r2);

        $r2 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxVendorId>;

        varReplacer904 = "userId";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer904, $r2);

        $z0 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean telemetryEnabled>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        varReplacer907 = "enabled.telemetry";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer907, $r3);

        $r4 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Vector events>;

        virtualinvoke $r4.<java.util.Vector: boolean add(java.lang.Object)>($r1);

        virtualinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: void flushEventsQueueImmediately()>();

        varReplacer908 = "MapboxEventManager";

        varReplacer909 = "turnstile event pushed.";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer908, varReplacer909);

        return;
    }

    private void rotateSessionId()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        long $l0, $l1;
        java.lang.String $r1;
        boolean $z0;
        byte $b2;
        java.util.UUID $r2;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxSessionId>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $l0 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: long mapboxSessionIdLastSet>;

        $l1 = $l1 - $l0;

        $l0 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: long hourInMillis>;

        $l0 = 24L * $l0;

        $b2 = $l1 cmp $l0;

        if $b2 <= 0 goto label2;

     label1:
        $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r1 = virtualinvoke $r2.<java.util.UUID: java.lang.String toString()>();

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxSessionId> = $r1;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: long mapboxSessionIdLastSet> = $l1;

     label2:
        return;
    }

    private void validateTelemetryServiceConfigured()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.lang.Exception $r1;
        android.content.pm.ServiceInfo $r2;
        java.lang.String $r3, varReplacer1369, varReplacer1370, varReplacer1372;
        android.content.Context $r4;
        android.content.pm.PackageManager $r5;
        android.content.pm.PackageInfo $r6;
        android.content.pm.ServiceInfo[] $r7;
        int $i0, $i1, varReplacer1371;
        boolean $z0;
        java.lang.StringBuilder $r8, r9;
        com.mapbox.mapboxsdk.exceptions.TelemetryServiceNotConfiguredException r10;
        java.lang.Throwable r11;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

     label01:
        $r4 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        $r5 = virtualinvoke $r4.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        $r3 = virtualinvoke $r4.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1371 = 4;

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, varReplacer1371);

        $r7 = $r6.<android.content.pm.PackageInfo: android.content.pm.ServiceInfo[] services>;

     label02:
        if $r7 == null goto label10;

     label03:
        $r7 = $r6.<android.content.pm.PackageInfo: android.content.pm.ServiceInfo[] services>;

        $i0 = lengthof $r7;

     label04:
        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label10;

     label06:
        $r2 = $r7[$i1];

        $r3 = $r2.<android.content.pm.ServiceInfo: java.lang.String name>;

        varReplacer1370 = "com.mapbox.mapboxsdk.telemetry.TelemetryService";

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1370, $r3);

     label07:
        if $z0 == 0 goto label08;

        return;

     label08:
        $i1 = $i1 + 1;

        goto label05;

     label09:
        $r1 := @caughtexception;

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>()>();

        varReplacer1372 = "Error checking for Telemetry Service Config: ";

        $r8 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1372);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1369 = "MapboxMap";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer1369, $r3);

     label10:
        r10 = new com.mapbox.mapboxsdk.exceptions.TelemetryServiceNotConfiguredException;

        specialinvoke r10.<com.mapbox.mapboxsdk.exceptions.TelemetryServiceNotConfiguredException: void <init>()>();

        r11 = (java.lang.Throwable) r10;

        throw r11;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label06 to label07 with label09;
    }

    public void addLocationEvent(android.location.Location)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        android.location.Location $r1;
        java.util.Hashtable $r2;
        double $d0;
        boolean $z0;
        java.lang.String $r3, varReplacer1136, varReplacer1137, varReplacer1138, varReplacer1139, varReplacer1140, varReplacer1141, varReplacer1142, varReplacer1143, varReplacer1144, varReplacer1145, varReplacer1146;
        java.lang.Double $r4;
        java.util.Vector $r5;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 := @parameter0: android.location.Location;

        $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label2;

        $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label2;

        $d0 = virtualinvoke $r1.<android.location.Location: double getAltitude()>();

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>();

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label2;

        $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>();

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label2;

        $d0 = virtualinvoke $r1.<android.location.Location: double getAltitude()>();

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 != 0 goto label2;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        varReplacer1145 = "event";

        varReplacer1146 = "location";

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1145, varReplacer1146);

        $r3 = staticinvoke <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String generateCreateDate()>();

        varReplacer1143 = "created";

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1143, $r3);

        varReplacer1141 = "source";

        varReplacer1142 = "mapbox";

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1141, varReplacer1142);

        $r3 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxSessionId>;

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String encodeString(java.lang.String)>($r3);

        varReplacer1136 = "sessionId";

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1136, $r3);

        $d0 = virtualinvoke $r1.<android.location.Location: double getLatitude()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        varReplacer1139 = "lat";

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1139, $r4);

        $d0 = virtualinvoke $r1.<android.location.Location: double getLongitude()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        varReplacer1140 = "lng";

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1140, $r4);

        $d0 = virtualinvoke $r1.<android.location.Location: double getAltitude()>();

        $r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        varReplacer1144 = "altitude";

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1144, $r4);

        $r3 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String operatingSystem>;

        varReplacer1137 = "operatingSystem";

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1137, $r3);

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getApplicationState()>();

        varReplacer1138 = "applicationState";

        virtualinvoke $r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer1138, $r3);

        $r5 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Vector events>;

        virtualinvoke $r5.<java.util.Vector: boolean add(java.lang.Object)>($r2);

        specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: void rotateSessionId()>();

     label2:
        return;
    }

    void flushEventsQueueImmediately()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager$FlushTheEventsTask $r1;
        java.lang.Void[] $r2;
        java.lang.String varReplacer911, varReplacer912;
        null_type varReplacer913;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        varReplacer911 = "MapboxEventManager";

        varReplacer912 = "flushEventsQueueImmediately() called...";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer911, varReplacer912);

        $r1 = new com.mapbox.mapboxsdk.telemetry.MapboxEventManager$FlushTheEventsTask;

        varReplacer913 = null;

        specialinvoke $r1.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager$FlushTheEventsTask: void <init>(com.mapbox.mapboxsdk.telemetry.MapboxEventManager,com.mapbox.mapboxsdk.telemetry.MapboxEventManager$1)>($r0, varReplacer913);

        $r2 = newarray (java.lang.Void)[0];

        virtualinvoke $r1.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager$FlushTheEventsTask: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        return;
    }

    public java.lang.Boolean getConnectedToWifi()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.lang.Exception $r1;
        java.lang.Boolean $r2;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.net.wifi.WifiManager $r5;
        boolean $z0;
        android.net.wifi.WifiInfo $r6;
        int $i0, varReplacer898, varReplacer901, varReplacer902;
        java.lang.StringBuilder $r7;
        java.lang.String $r8, varReplacer899, varReplacer900, varReplacer903;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        varReplacer901 = 0;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer901);

        $r3 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        varReplacer899 = "wifi";

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer899);

        $r5 = (android.net.wifi.WifiManager) $r4;

        $z0 = virtualinvoke $r5.<android.net.wifi.WifiManager: boolean isWifiEnabled()>();

        if $z0 == 0 goto label6;

     label1:
        $r6 = virtualinvoke $r5.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $i0 = virtualinvoke $r6.<android.net.wifi.WifiInfo: int getNetworkId()>();

     label2:
        if $i0 == -1 goto label6;

     label3:
        varReplacer902 = 1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer902);

     label4:
        return $r2;

     label5:
        $r1 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        varReplacer903 = "Error getting Wifi Connection Status: ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer903);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer900 = "MapboxEventManager";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer900, $r8);

        varReplacer898 = 0;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(varReplacer898);

     label6:
        return $r2;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public void initialize(android.content.Context, java.lang.String)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        android.content.Context $r1, $r5;
        java.lang.String $r2, $r4, $r17, $r18, varReplacer1337, varReplacer1339, varReplacer1340, varReplacer1343, varReplacer1346, varReplacer1347, varReplacer1348, varReplacer1349, varReplacer1350, varReplacer1351, varReplacer1352, varReplacer1353, varReplacer1354, varReplacer1355, varReplacer1357, varReplacer1358, varReplacer1359, varReplacer1360, varReplacer1361, varReplacer1362, varReplacer1363, varReplacer1364, varReplacer1365, varReplacer1366, varReplacer1367;
        android.content.IntentFilter $r3;
        int $i0, varReplacer1338, varReplacer1342, varReplacer1344, varReplacer1345, varReplacer1356;
        boolean $z0;
        java.security.MessageDigest $r6;
        android.content.SharedPreferences $r7;
        java.util.UUID $r8;
        android.content.SharedPreferences$Editor $r9;
        android.util.DisplayMetrics $r10;
        java.lang.Object $r11;
        android.view.WindowManager $r12;
        android.view.Display $r13;
        android.content.pm.PackageManager $r14;
        android.content.pm.ApplicationInfo $r15;
        android.os.Bundle $r16;
        java.lang.CharSequence $r19;
        android.content.pm.PackageInfo $r20;
        java.lang.StringBuilder $r21;
        android.content.Intent $r22;
        java.lang.Throwable $r23;
        java.lang.Exception $r24;
        null_type varReplacer1341;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        varReplacer1351 = "MapboxEventManager";

        varReplacer1352 = "Telemetry initialize() called...";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1351, varReplacer1352);

        $z0 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean initialized>;

        if $z0 == 0 goto label01;

        varReplacer1359 = "MapboxEventManager";

        varReplacer1360 = "Mapbox Telemetry has already been initialized.";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1359, varReplacer1360);

        return;

     label01:
        $r5 = virtualinvoke $r1.<android.content.Context: android.content.Context getApplicationContext()>();

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context> = $r5;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String accessToken> = $r2;

        specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: void validateTelemetryServiceConfigured()>();

     label02:
        varReplacer1364 = "SHA-1";

        $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1364);

     label03:
        <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.security.MessageDigest messageDigest> = $r6;

     label04:
        specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: void rotateSessionId()>();

        varReplacer1355 = "MapboxSharedPreferences";

        varReplacer1356 = 0;

        $r7 = virtualinvoke $r1.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer1355, varReplacer1356);

        varReplacer1357 = "MapboxEventManager";

        varReplacer1358 = "Right before Telemetry set enabled in initialized()";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1357, varReplacer1358);

        varReplacer1337 = "mapboxTelemetryEnabled";

        varReplacer1338 = 1;

        $z0 = interfaceinvoke $r7.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>(varReplacer1337, varReplacer1338);

        virtualinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: void setTelemetryEnabled(boolean)>($z0);

        varReplacer1346 = "mapboxVendorId";

        $z0 = interfaceinvoke $r7.<android.content.SharedPreferences: boolean contains(java.lang.String)>(varReplacer1346);

        if $z0 == 0 goto label05;

        varReplacer1361 = "mapboxVendorId";

        varReplacer1362 = "";

        $r2 = interfaceinvoke $r7.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer1361, varReplacer1362);

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxVendorId> = $r2;

     label05:
        $r2 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxVendorId>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label06;

        $r8 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r2 = virtualinvoke $r8.<java.util.UUID: java.lang.String toString()>();

        $r2 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String encodeString(java.lang.String)>($r2);

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxVendorId> = $r2;

        $r9 = interfaceinvoke $r7.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r2 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxVendorId>;

        varReplacer1349 = "mapboxVendorId";

        interfaceinvoke $r9.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(varReplacer1349, $r2);

        interfaceinvoke $r9.<android.content.SharedPreferences$Editor: void apply()>();

        interfaceinvoke $r9.<android.content.SharedPreferences$Editor: boolean commit()>();

     label06:
        $r10 = new android.util.DisplayMetrics;

        specialinvoke $r10.<android.util.DisplayMetrics: void <init>()>();

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.util.DisplayMetrics displayMetrics> = $r10;

        varReplacer1343 = "window";

        $r11 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1343);

        $r12 = (android.view.WindowManager) $r11;

        $r13 = interfaceinvoke $r12.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r10 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.util.DisplayMetrics displayMetrics>;

        virtualinvoke $r13.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>($r10);

     label07:
        $r14 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1345 = 128;

        $r15 = virtualinvoke $r14.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, varReplacer1345);

        $r16 = $r15.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        varReplacer1350 = "com.mapbox.TestEventsServer";

        $r17 = virtualinvoke $r16.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1350);

        $r16 = $r15.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        varReplacer1363 = "com.mapbox.TestEventsAccessToken";

        $r18 = virtualinvoke $r16.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1363);

        $r14 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r19 = virtualinvoke $r14.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r15);

        $r2 = interfaceinvoke $r19.<java.lang.CharSequence: java.lang.String toString()>();

        $r14 = virtualinvoke $r1.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1342 = 0;

        $r20 = virtualinvoke $r14.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r4, varReplacer1342);

        $r4 = $r20.<android.content.pm.PackageInfo: java.lang.String versionName>;

        $i0 = $r20.<android.content.pm.PackageInfo: int versionCode>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r17);

     label08:
        if $z0 != 0 goto label10;

     label09:
        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String eventsURL> = $r17;

     label10:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r18);

     label11:
        if $z0 != 0 goto label13;

     label12:
        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String accessToken> = $r18;

     label13:
        $r17 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String userAgent>;

        varReplacer1347 = "MapboxEventsAndroid/4.1.1";

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r17, varReplacer1347);

     label14:
        if $z0 == 0 goto label20;

     label15:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

     label16:
        if $z0 != 0 goto label20;

     label17:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

     label18:
        if $z0 != 0 goto label20;

        $r21 = new java.lang.StringBuilder;

     label19:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        varReplacer1348 = "/";

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1348);

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer1339 = "/";

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1339);

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer1340 = " ";

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1340);

        $r2 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String userAgent>;

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String userAgent> = $r2;

        $r2 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String userAgent>;

        $r2 = staticinvoke <okhttp3.internal.Util: java.lang.String toHumanReadableAscii(java.lang.String)>($r2);

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String userAgent> = $r2;

     label20:
        $r3 = new android.content.IntentFilter;

        varReplacer1366 = "android.intent.action.BATTERY_CHANGED";

        specialinvoke $r3.<android.content.IntentFilter: void <init>(java.lang.String)>(varReplacer1366);

        varReplacer1341 = null;

        $r22 = virtualinvoke $r1.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(varReplacer1341, $r3);

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Intent batteryStatus> = $r22;

        varReplacer1344 = 1;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean initialized> = varReplacer1344;

        return;

     label21:
        $r23 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1365 = "Error getting Encryption Algorithm: ";

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1365);

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r2 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1354 = "MapboxEventManager";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer1354, $r2);

        goto label04;

     label22:
        $r24 := @caughtexception;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer1353 = "Error Trying to load Staging Credentials: ";

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1353);

        $r2 = virtualinvoke $r24.<java.lang.Exception: java.lang.String toString()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1367 = "MapboxEventManager";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer1367, $r2);

        goto label20;

        catch java.security.NoSuchAlgorithmException from label02 to label03 with label21;
        catch java.lang.Exception from label07 to label08 with label22;
        catch java.lang.Exception from label09 to label11 with label22;
        catch java.lang.Exception from label12 to label14 with label22;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.lang.Exception from label17 to label18 with label22;
        catch java.lang.Exception from label19 to label20 with label22;
    }

    public boolean isTelemetryEnabled()
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        boolean z0;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        z0 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean telemetryEnabled>;

        return z0;
    }

    public void pushEvent(java.util.Hashtable)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        java.util.Hashtable $r1;
        android.content.Context $r2;
        java.lang.String $r3, varReplacer831, varReplacer832, varReplacer833, varReplacer834, varReplacer835, varReplacer836, varReplacer837, varReplacer838, varReplacer839, varReplacer840, varReplacer841, varReplacer842, varReplacer843, varReplacer844, varReplacer845, varReplacer846, varReplacer847, varReplacer848, varReplacer849, varReplacer850, varReplacer851, varReplacer852, varReplacer853, varReplacer854, varReplacer855, varReplacer856, varReplacer857, varReplacer858, varReplacer859;
        java.lang.Object $r4;
        boolean $z0;
        android.util.DisplayMetrics $r5;
        float $f0;
        java.lang.Float $r6;
        int $i0;
        java.lang.Integer $r7;
        java.lang.Boolean $r8;
        java.util.Vector $r9;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $r1 := @parameter0: java.util.Hashtable;

        $r2 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        if $r2 == null goto label6;

        $r3 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String accessToken>;

        if $r3 != null goto label1;

        return;

     label1:
        if $r1 == null goto label6;

        varReplacer859 = "event";

        $r4 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(varReplacer859);

        $r3 = (java.lang.String) $r4;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label6;

        varReplacer850 = "map.load";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer850);

        if $z0 == 0 goto label2;

        $r3 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String mapboxVendorId>;

        varReplacer836 = "userId";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer836, $r3);

        $r3 = <android.os.Build: java.lang.String MODEL>;

        varReplacer849 = "model";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer849, $r3);

        $r3 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String operatingSystem>;

        varReplacer847 = "operatingSystem";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer847, $r3);

        $r5 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.util.DisplayMetrics displayMetrics>;

        $f0 = $r5.<android.util.DisplayMetrics: float density>;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        varReplacer845 = "resolution";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer845, $r6);

        $f0 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: float getAccesibilityFontScaleSize()>();

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        varReplacer841 = "accessibilityFontScale";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer841, $r6);

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getOrientation()>();

        varReplacer848 = "orientation";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer848, $r3);

        $i0 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: int getBatteryLevel()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        varReplacer855 = "batteryLevel";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer855, $r7);

        $z0 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean isPluggedIn()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        varReplacer843 = "pluggedIn";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer843, $r8);

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getCellularCarrier()>();

        varReplacer846 = "carrier";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer846, $r3);

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getCellularNetworkType()>();

        varReplacer856 = "cellularNetworkType";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer856, $r3);

        $r8 = virtualinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.Boolean getConnectedToWifi()>();

        varReplacer853 = "wifi";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer853, $r8);

        $r9 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Vector events>;

        virtualinvoke $r9.<java.util.Vector: boolean add(java.lang.Object)>($r1);

        specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: void pushTurnstileEvent()>();

        return;

     label2:
        varReplacer839 = "map.click";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer839);

        if $z0 == 0 goto label4;

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getOrientation()>();

        varReplacer840 = "orientation";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer840, $r3);

        $i0 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: int getBatteryLevel()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        varReplacer835 = "batteryLevel";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer835, $r7);

        $z0 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean isPluggedIn()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        varReplacer842 = "pluggedIn";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer842, $r8);

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getCellularCarrier()>();

        varReplacer837 = "carrier";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer837, $r3);

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getCellularNetworkType()>();

        varReplacer854 = "cellularNetworkType";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer854, $r3);

        $r8 = virtualinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.Boolean getConnectedToWifi()>();

        varReplacer857 = "wifi";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer857, $r8);

     label3:
        $r9 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Vector events>;

        virtualinvoke $r9.<java.util.Vector: boolean add(java.lang.Object)>($r1);

        return;

     label4:
        varReplacer858 = "map.dragend";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer858);

        if $z0 == 0 goto label5;

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getOrientation()>();

        varReplacer844 = "orientation";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer844, $r3);

        $i0 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: int getBatteryLevel()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        varReplacer833 = "batteryLevel";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer833, $r7);

        $z0 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean isPluggedIn()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        varReplacer838 = "pluggedIn";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer838, $r8);

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getCellularCarrier()>();

        varReplacer834 = "carrier";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer834, $r3);

        $r3 = specialinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.String getCellularNetworkType()>();

        varReplacer831 = "cellularNetworkType";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer831, $r3);

        $r8 = virtualinvoke $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.lang.Boolean getConnectedToWifi()>();

        varReplacer832 = "wifi";

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer832, $r8);

        goto label3;

     label5:
        varReplacer851 = "MapboxEventManager";

        varReplacer852 = "This is not an event type in the Events Data Model.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer851, varReplacer852);

     label6:
        return;
    }

    public void setTelemetryEnabled(boolean)
    {
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager $r0;
        boolean $z0, $z1;
        android.os.Handler $r1, r15;
        java.lang.StringBuilder $r2, r11;
        java.lang.String $r3, varReplacer1373, varReplacer1374, varReplacer1375, varReplacer1376, varReplacer1377, varReplacer1378, varReplacer1379, varReplacer1380, varReplacer1381, varReplacer1382, varReplacer1383, varReplacer1384, varReplacer1387, varReplacer1388, varReplacer1390;
        android.content.Context $r4, $r5;
        com.mapbox.mapboxsdk.location.LocationServices $r6;
        java.util.Timer $r7, r13;
        long $l0, $l1, varReplacer1392;
        android.content.SharedPreferences $r8;
        android.content.SharedPreferences$Editor $r9;
        java.util.Vector $r10;
        android.content.Intent r12;
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager$FlushEventsTimerTask r14;
        com.mapbox.mapboxsdk.telemetry.MapboxEventManager$1 r16;
        java.util.TimerTask r17;
        java.lang.Runnable r18;
        int varReplacer1385, varReplacer1386;
        null_type varReplacer1389, varReplacer1391;

        nop;

        $r0 := @this: com.mapbox.mapboxsdk.telemetry.MapboxEventManager;

        $z0 := @parameter0: boolean;

        r11 = new java.lang.StringBuilder;

        specialinvoke r11.<java.lang.StringBuilder: void <init>()>();

        varReplacer1375 = "setTelemetryEnabled(); this.telemetryEnabled = ";

        $r2 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1375);

        $z1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean telemetryEnabled>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        varReplacer1376 = "; telemetryEnabled = ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1376);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1390 = "MapboxEventManager";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1390, $r3);

        $z1 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean telemetryEnabled>;

        if $z1 != $z0 goto label1;

        varReplacer1379 = "MapboxEventManager";

        varReplacer1380 = "No need to start / stop telemetry as it\'s already in that state.";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1379, varReplacer1380);

        return;

     label1:
        if $z0 == 0 goto label5;

        varReplacer1387 = "MapboxEventManager";

        varReplacer1388 = "Starting Telemetry Up!";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1387, varReplacer1388);

        $r4 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        r12 = new android.content.Intent;

        $r5 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        specialinvoke r12.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r5, class "Lcom/mapbox/mapboxsdk/telemetry/TelemetryService;");

        virtualinvoke $r4.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>(r12);

        $r4 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        $r6 = staticinvoke <com.mapbox.mapboxsdk.location.LocationServices: com.mapbox.mapboxsdk.location.LocationServices getLocationServices(android.content.Context)>($r4);

        $z1 = virtualinvoke $r6.<com.mapbox.mapboxsdk.location.LocationServices: boolean areLocationPermissionsGranted()>();

        if $z1 == 0 goto label4;

        varReplacer1373 = "MapboxEventManager";

        varReplacer1374 = "Permissions are good, see if GPS is enabled and if not then setup Ambient.";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1373, varReplacer1374);

        $r4 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        $r6 = staticinvoke <com.mapbox.mapboxsdk.location.LocationServices: com.mapbox.mapboxsdk.location.LocationServices getLocationServices(android.content.Context)>($r4);

        $z1 = virtualinvoke $r6.<com.mapbox.mapboxsdk.location.LocationServices: boolean isGPSEnabled()>();

        if $z1 == 0 goto label2;

        $r4 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        $r6 = staticinvoke <com.mapbox.mapboxsdk.location.LocationServices: com.mapbox.mapboxsdk.location.LocationServices getLocationServices(android.content.Context)>($r4);

        varReplacer1386 = 0;

        virtualinvoke $r6.<com.mapbox.mapboxsdk.location.LocationServices: void toggleGPS(boolean)>(varReplacer1386);

     label2:
        r13 = new java.util.Timer;

        specialinvoke r13.<java.util.Timer: void <init>()>();

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Timer timer> = r13;

        $r7 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Timer timer>;

        r14 = new com.mapbox.mapboxsdk.telemetry.MapboxEventManager$FlushEventsTimerTask;

        varReplacer1391 = null;

        specialinvoke r14.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager$FlushEventsTimerTask: void <init>(com.mapbox.mapboxsdk.telemetry.MapboxEventManager,com.mapbox.mapboxsdk.telemetry.MapboxEventManager$1)>($r0, varReplacer1391);

        $l0 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: long flushDelayInitialInMillis>;

        $l1 = <com.mapbox.mapboxsdk.telemetry.MapboxEventManager: long flushDelayInMillis>;

        r17 = (java.util.TimerTask) r14;

        virtualinvoke $r7.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>(r17, $l0, $l1);

     label3:
        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: boolean telemetryEnabled> = $z0;

        $r4 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        varReplacer1384 = "MapboxSharedPreferences";

        varReplacer1385 = 0;

        $r8 = virtualinvoke $r4.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer1384, varReplacer1385);

        $r9 = interfaceinvoke $r8.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer1383 = "mapboxTelemetryEnabled";

        interfaceinvoke $r9.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>(varReplacer1383, $z0);

        interfaceinvoke $r9.<android.content.SharedPreferences$Editor: void apply()>();

        interfaceinvoke $r9.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;

     label4:
        varReplacer1377 = "MapboxEventManager";

        varReplacer1378 = "Permissions are not good.  Need to do some looping to check on stuff.";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1377, varReplacer1378);

        r15 = new android.os.Handler;

        $r1 = r15;

        specialinvoke r15.<android.os.Handler: void <init>()>();

        r16 = new com.mapbox.mapboxsdk.telemetry.MapboxEventManager$1;

        specialinvoke r16.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager$1: void <init>(com.mapbox.mapboxsdk.telemetry.MapboxEventManager,android.os.Handler)>($r0, $r1);

        r18 = (java.lang.Runnable) r16;

        varReplacer1392 = 10000L;

        virtualinvoke $r1.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r18, varReplacer1392);

        goto label2;

     label5:
        varReplacer1381 = "MapboxEventManager";

        varReplacer1382 = "Shutting Telemetry Down";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1381, varReplacer1382);

        $r10 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Vector events>;

        virtualinvoke $r10.<java.util.Vector: void removeAllElements()>();

        $r4 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        r12 = new android.content.Intent;

        $r5 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: android.content.Context context>;

        specialinvoke r12.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r5, class "Lcom/mapbox/mapboxsdk/telemetry/TelemetryService;");

        virtualinvoke $r4.<android.content.Context: boolean stopService(android.content.Intent)>(r12);

        $r7 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Timer timer>;

        if $r7 == null goto label3;

        $r7 = $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Timer timer>;

        virtualinvoke $r7.<java.util.Timer: void cancel()>();

        varReplacer1389 = null;

        $r0.<com.mapbox.mapboxsdk.telemetry.MapboxEventManager: java.util.Timer timer> = varReplacer1389;

        goto label3;
    }
}
