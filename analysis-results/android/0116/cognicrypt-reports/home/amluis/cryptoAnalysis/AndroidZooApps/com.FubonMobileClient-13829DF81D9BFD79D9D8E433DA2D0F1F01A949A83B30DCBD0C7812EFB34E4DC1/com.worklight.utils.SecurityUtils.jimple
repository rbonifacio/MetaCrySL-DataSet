public class com.worklight.utils.SecurityUtils extends java.lang.Object
{
    public static final java.lang.String HASH_ALGORITH_MD5;
    public static final java.lang.String HASH_ALGORITH_SHA1;
    private static com.worklight.common.Logger logger;

    static void <clinit>()
    {
        com.worklight.common.Logger $r0;
        java.lang.String varReplacer884;

        nop;

        varReplacer884 = "SecurityUtils";

        $r0 = staticinvoke <com.worklight.common.Logger: com.worklight.common.Logger getInstance(java.lang.String)>(varReplacer884);

        <com.worklight.utils.SecurityUtils: com.worklight.common.Logger logger> = $r0;

        return;
    }

    public void <init>()
    {
        com.worklight.utils.SecurityUtils $r0;

        $r0 := @this: com.worklight.utils.SecurityUtils;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.InputStream decryptData(java.io.InputStream, byte[]) throws java.lang.Exception
    {
        java.io.InputStream $r0;
        byte[] $r1;
        javax.crypto.CipherInputStream $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r4;
        java.lang.String varReplacer943, varReplacer945;
        int varReplacer944;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: byte[];

        $r3 = new javax.crypto.spec.SecretKeySpec;

        varReplacer945 = "AES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer945);

        varReplacer943 = "AES";

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer943);

        varReplacer944 = 2;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer944, $r3);

        $r2 = new javax.crypto.CipherInputStream;

        specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r0, $r4);

        return $r2;
    }

    public static java.lang.String hashData(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, varReplacer879;
        java.lang.StringBuilder $r2;
        byte[] $r3;
        int $i0, $i1, varReplacer880, varReplacer881;
        byte $b2;
        short $s3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        varReplacer879 = "SHA-1";

        $r3 = staticinvoke <com.worklight.utils.SecurityUtils: byte[] hashData(byte[],java.lang.String)>($r3, varReplacer879);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label2;

        $b2 = $r3[$i0];

        $s3 = $b2 & 255;

        $i1 = $s3 + 256;

        varReplacer881 = 16;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, varReplacer881);

        varReplacer880 = 1;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(varReplacer880);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r0;
    }

    public static byte[] hashData(byte[], java.lang.String)
    {
        byte[] $r0;
        java.lang.String $r1, varReplacer886, varReplacer887, varReplacer888;
        java.lang.Throwable $r2;
        com.worklight.common.Logger $r3;
        java.security.MessageDigest $r4;
        java.lang.StringBuilder $r5;
        null_type varReplacer889;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

     label1:
        varReplacer886 = "SHA-1";

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer886);

        virtualinvoke $r4.<java.security.MessageDigest: void reset()>();

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r0);

        $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        $r3 = <com.worklight.utils.SecurityUtils: com.worklight.common.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        varReplacer887 = "SHA-1";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer887);

        varReplacer888 = " is not supported on this device";

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer888);

        $r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.worklight.common.Logger: void error(java.lang.String,java.lang.Throwable)>($r1, $r2);

        varReplacer889 = null;

        return varReplacer889;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    public static java.lang.String hashDataFromJSON(android.content.Context, org.json.JSONArray) throws org.json.JSONException, java.io.UnsupportedEncodingException
    {
        android.content.Context $r0;
        org.json.JSONArray $r1;
        java.lang.String $r2, $r6;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        java.lang.String[] $r5;
        int $i0, $i1;
        java.lang.Object[] $r7;
        byte[] $r8;
        java.lang.StringBuilder $r9;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: org.json.JSONArray;

        $r4 = virtualinvoke $r1.<org.json.JSONArray: java.lang.Object get(int)>(0);

        $r2 = (java.lang.String) $r4;

        $r5 = virtualinvoke $r2.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r2 = $r5[0];

        $r4 = virtualinvoke $r1.<org.json.JSONArray: java.lang.Object get(int)>(1);

        $r1 = (org.json.JSONArray) $r4;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $i0 = 0;

     label1:
        $i1 = virtualinvoke $r1.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label2;

        $r6 = virtualinvoke $r1.<org.json.JSONArray: java.lang.String getString(int)>($i0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r5 = newarray (java.lang.String)[0];

        $r7 = interfaceinvoke $r3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r5);

        $r5 = (java.lang.String[]) $r7;

        $r8 = staticinvoke <com.worklight.utils.SecurityUtils: byte[] kpg(android.content.Context,java.lang.String[])>($r0, $r5);

        $r6 = staticinvoke <com.worklight.utils.Base64: java.lang.String encode(byte[],java.lang.String)>($r8, "UTF-8");

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", "");

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = staticinvoke <com.worklight.utils.SecurityUtils: java.lang.String hashData(java.lang.String,java.lang.String)>($r2, "SHA-1");

        return $r2;
    }

    public static byte[] kpg(android.content.Context, java.lang.String[])
    {
        android.content.Context $r0;
        java.lang.String[] $r1;
        java.lang.Throwable $r2;
        byte[] $r3;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String[];

     label1:
        $r3 = staticinvoke <com.worklight.utils.PaidSecurityUtils: byte[] kpg(android.content.Context,java.lang.String[])>($r0, $r1);

     label2:
        return $r3;

     label3:
        $r2 := @caughtexception;

        $r3 = newarray (byte)[0];

        return $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
