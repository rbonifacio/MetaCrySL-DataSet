public class com.LearnPoem.stringsEcrypted extends java.lang.Object
{
    private static int INPUTNUMBER;
    private static final int MAX;
    private static final int SIZE;
    private static java.lang.String SecretKey;
    private static int addINPUTNUMBER;
    private static javax.crypto.Cipher cipher;
    private static int[] helper;
    private static java.lang.String iv;
    private static javax.crypto.spec.IvParameterSpec ivspec;
    private static javax.crypto.spec.SecretKeySpec keyspec;
    private static int[] numbers;

    static void <clinit>()
    {
        int varReplacer1491, varReplacer1493;
        java.lang.String varReplacer1492, varReplacer1494;

        nop;

        varReplacer1494 = "fed8ujdr46543210";

        <com.LearnPoem.stringsEcrypted: java.lang.String iv> = varReplacer1494;

        varReplacer1492 = "kdi49f0789abcdef";

        <com.LearnPoem.stringsEcrypted: java.lang.String SecretKey> = varReplacer1492;

        varReplacer1491 = 10;

        <com.LearnPoem.stringsEcrypted: int INPUTNUMBER> = varReplacer1491;

        varReplacer1493 = 0;

        <com.LearnPoem.stringsEcrypted: int addINPUTNUMBER> = varReplacer1493;

        return;
    }

    public void <init>()
    {
        com.LearnPoem.stringsEcrypted $r0;

        $r0 := @this: com.LearnPoem.stringsEcrypted;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] encrypt(java.lang.String, int) throws java.lang.Exception
    {
        java.lang.String $r0, $r3, varReplacer1501, varReplacer1502, varReplacer1503, varReplacer1505;
        int $i0, $i1, varReplacer1504;
        javax.crypto.spec.IvParameterSpec $r1, r11;
        java.lang.Exception $r2, $r8, r14;
        byte[] $r4;
        javax.crypto.spec.SecretKeySpec $r5, r12;
        javax.crypto.Cipher $r6;
        java.lang.Throwable $r7, $r10;
        java.lang.StringBuilder $r9, r13;
        java.security.NoSuchAlgorithmException r15;
        javax.crypto.NoSuchPaddingException r16;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $r0 == null goto label01;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 != 0 goto label02;

     label01:
        $r8 = new java.lang.Exception;

        varReplacer1502 = "E m p t y, hello h ac ke r - just leave this app alone";

        specialinvoke $r8.<java.lang.Exception: void <init>(java.lang.String)>(varReplacer1502);

        throw $r8;

     label02:
        r11 = new javax.crypto.spec.IvParameterSpec;

        $r3 = <com.LearnPoem.stringsEcrypted: java.lang.String iv>;

     label03:
        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        specialinvoke r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

     label04:
        <com.LearnPoem.stringsEcrypted: javax.crypto.spec.IvParameterSpec ivspec> = r11;

        r12 = new javax.crypto.spec.SecretKeySpec;

        $r3 = <com.LearnPoem.stringsEcrypted: java.lang.String SecretKey>;

     label05:
        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        varReplacer1503 = "AES";

        specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1503);

     label06:
        <com.LearnPoem.stringsEcrypted: javax.crypto.spec.SecretKeySpec keyspec> = r12;

     label07:
        varReplacer1501 = "AES/CBC/NoPadding";

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1501);

     label08:
        <com.LearnPoem.stringsEcrypted: javax.crypto.Cipher cipher> = $r6;

     label09:
        $r6 = <com.LearnPoem.stringsEcrypted: javax.crypto.Cipher cipher>;

        $r5 = <com.LearnPoem.stringsEcrypted: javax.crypto.spec.SecretKeySpec keyspec>;

        $r1 = <com.LearnPoem.stringsEcrypted: javax.crypto.spec.IvParameterSpec ivspec>;

     label10:
        varReplacer1504 = 1;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1504, $r5, $r1);

     label11:
        $r6 = <com.LearnPoem.stringsEcrypted: javax.crypto.Cipher cipher>;

     label12:
        $r0 = staticinvoke <com.LearnPoem.stringsEcrypted: java.lang.String padString(java.lang.String,int)>($r0, $i0);

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r4 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

     label13:
        return $r4;

     label14:
        $r7 := @caughtexception;

     label15:
        r15 = (java.security.NoSuchAlgorithmException) $r7;

        virtualinvoke r15.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label16:
        goto label09;

     label17:
        $r2 := @caughtexception;

        r14 = new java.lang.Exception;

        r13 = new java.lang.StringBuilder;

        varReplacer1505 = "[encrypt] ";

        specialinvoke r13.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1505);

        $r0 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r14.<java.lang.Exception: void <init>(java.lang.String)>($r0);

        throw r14;

     label18:
        $r10 := @caughtexception;

     label19:
        r16 = (javax.crypto.NoSuchPaddingException) $r10;

        virtualinvoke r16.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

     label20:
        goto label09;

        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label14;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label18;
        catch java.lang.Exception from label07 to label08 with label17;
        catch java.lang.Exception from label10 to label11 with label17;
        catch java.lang.Exception from label12 to label13 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label19 to label20 with label17;
    }

    public static java.lang.String getChar(int, int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, varReplacer1489, varReplacer1490;
        java.lang.Exception $r0, $r1;
        java.lang.String $r2, $r3;
        byte[] $r4;
        java.lang.StringBuilder $r5;
        java.lang.Integer $r6;
        char $c5;

        nop;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 := @parameter3: int;

        $r2 = null;

        $i4 = 0;

     label01:
        staticinvoke <com.LearnPoem.stringsEcrypted: void setUp()>();

     label02:
        $r3 = staticinvoke <com.LearnPoem.stringsEcrypted: java.lang.String merge(int,int,int)>($i3, $i2, $i0);

        $r4 = staticinvoke <com.LearnPoem.stringsEcrypted: byte[] encrypt(java.lang.String,int)>($r3, $i1);

        $r3 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

     label03:
        $r5 = new java.lang.StringBuilder;

     label04:
        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

     label05:
        $i0 = $i0 + 10;

     label06:
        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer1490 = 44;

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer1490);

     label07:
        $i0 = <com.LearnPoem.stringsEcrypted: int INPUTNUMBER>;

     label08:
        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        $r2 = $r3;

     label10:
        varReplacer1489 = 44;

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(varReplacer1489);

     label11:
        $i4 = $i0;

     label12:
        $i0 = $i4 + 1;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r2);

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $c5 = (char) $i0;

        $r2 = staticinvoke <java.lang.Character: java.lang.String toString(char)>($c5);

        return $r2;

     label13:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        goto label02;

     label14:
        $r0 := @caughtexception;

        virtualinvoke $r0.<java.lang.Exception: void printStackTrace()>();

        goto label12;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label02 to label03 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
    }

    private static java.lang.String merge(int, int, int)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r0;
        int[] $r1, $r2;

        nop;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        <com.LearnPoem.stringsEcrypted: int addINPUTNUMBER> = $i0;

        $i3 = $i0;

     label1:
        if $i3 <= $i2 goto label4;

        $i3 = $i0;

        $i4 = $i1 + 1;

     label2:
        if $i3 > $i1 goto label3;

        if $i4 <= $i2 goto label5;

     label3:
        if $i3 <= $i1 goto label8;

        $r1 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        $i1 = $r1[$i3];

        $r1 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        $i0 = $r1[$i0];

        $i0 = $i1 + $i0;

        $r1 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        $i1 = $r1[5];

        $i0 = $i0 + $i1;

        $r1 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        $i1 = $r1[6];

        $i0 = $i0 + $i1;

        $i1 = <com.LearnPoem.stringsEcrypted: int INPUTNUMBER>;

        $i0 = $i0 + $i1;

        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        return $r0;

     label4:
        $r1 = <com.LearnPoem.stringsEcrypted: int[] helper>;

        $r2 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        $i4 = $r2[$i3];

        $r1[$i3] = $i4;

        $i3 = $i3 + 1;

        goto label1;

     label5:
        $r1 = <com.LearnPoem.stringsEcrypted: int[] helper>;

        $i5 = $r1[$i3];

        $r1 = <com.LearnPoem.stringsEcrypted: int[] helper>;

        $i6 = $r1[$i4];

        if $i5 > $i6 goto label7;

        $r1 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        $r2 = <com.LearnPoem.stringsEcrypted: int[] helper>;

        $i5 = $r2[$i3];

        $r1[$i0] = $i5;

        $i3 = $i3 + 1;

     label6:
        $i0 = $i0 + 1;

        goto label2;

     label7:
        $r1 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        $r2 = <com.LearnPoem.stringsEcrypted: int[] helper>;

        $i5 = $r2[$i4];

        $r1[$i0] = $i5;

        $i4 = $i4 + 1;

        goto label6;

     label8:
        $r1 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        $r2 = <com.LearnPoem.stringsEcrypted: int[] helper>;

        $i2 = $r2[$i3];

        $r1[$i0] = $i2;

        $i0 = $i0 + 1;

        $i3 = $i3 + 1;

        goto label3;
    }

    private static java.lang.String padString(java.lang.String, int)
    {
        int $i0, $i1, varReplacer1508;
        java.lang.String $r0;
        java.lang.StringBuilder $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 = <com.LearnPoem.stringsEcrypted: int addINPUTNUMBER>;

        $i0 = $i1 + $i0;

        <com.LearnPoem.stringsEcrypted: int INPUTNUMBER> = $i0;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 % 16;

        $i0 = 16 - $i0;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return $r0;

     label2:
        $r1 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer1508 = 32;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer1508);

        $r0 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = $i1 + 1;

        goto label1;
    }

    public static void setUp() throws java.lang.Exception
    {
        java.util.Random $r0;
        int $i0, $i1, varReplacer1506;
        int[] $r1;

        nop;

        $r1 = newarray (int)[99];

        <com.LearnPoem.stringsEcrypted: int[] numbers> = $r1;

        $r1 = newarray (int)[99];

        <com.LearnPoem.stringsEcrypted: int[] helper> = $r1;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        $i1 = 0;

     label1:
        $r1 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label2;

        return;

     label2:
        $r1 = <com.LearnPoem.stringsEcrypted: int[] numbers>;

        varReplacer1506 = 77;

        $i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(varReplacer1506);

        $r1[$i1] = $i0;

        $i1 = $i1 + 1;

        goto label1;
    }
}
