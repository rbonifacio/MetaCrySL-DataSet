public class com.quickblox.core.helper.SignHelper extends java.lang.Object
{
    private static final java.lang.String HMAC_SHA1_ALGORITHM;

    public void <init>()
    {
        com.quickblox.core.helper.SignHelper $r0;

        $r0 := @this: com.quickblox.core.helper.SignHelper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String calculateHMAC_SHA(java.lang.String, java.lang.String) throws java.security.SignatureException
    {
        java.lang.String $r0, $r1, varReplacer1163, varReplacer1165, varReplacer1166;
        byte $b0;
        java.lang.Exception $r2;
        int $i1, $i2, $i4, varReplacer1164;
        java.lang.StringBuilder $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        byte[] $r5;
        javax.crypto.Mac $r6;
        short $s3;
        java.security.SignatureException $r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r4 = new javax.crypto.spec.SecretKeySpec;

     label01:
        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer1165 = "HmacSHA1";

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1165);

        varReplacer1163 = "HmacSHA1";

        $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1163);

        virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r4);

        $r5 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r5 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5);

     label02:
        $r3 = new java.lang.StringBuilder;

     label03:
        $i1 = lengthof $r5;

     label04:
        $i1 = $i1 * 2;

     label05:
        specialinvoke $r3.<java.lang.StringBuilder: void <init>(int)>($i1);

        $i1 = lengthof $r5;

     label06:
        $i2 = 0;

     label07:
        if $i2 >= $i1 goto label15;

     label08:
        $b0 = $r5[$i2];

     label09:
        $s3 = $b0 & 255;

     label10:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $i4 = virtualinvoke $r0.<java.lang.String: int length()>();

     label11:
        if $i4 != 1 goto label13;

     label12:
        varReplacer1164 = 48;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer1164);

     label13:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label14:
        $i2 = $i2 + 1;

        goto label07;

     label15:
        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label16:
        return $r0;

     label17:
        $r2 := @caughtexception;

        $r7 = new java.security.SignatureException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer1166 = "Failed to generate HMAC : ";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1166);

        $r0 = virtualinvoke $r2.<java.lang.Exception: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.security.SignatureException: void <init>(java.lang.String)>($r0);

        throw $r7;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label04 with label17;
        catch java.lang.Exception from label05 to label06 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label10 to label11 with label17;
        catch java.lang.Exception from label12 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
    }
}
