public class com.initech.pkix.'cmp'.CertStatus extends java.lang.Object implements com.initech.asn1.ASN1Type
{
    private byte[] a;
    private int b;
    private com.initech.pkix.'cmp'.PKIStatusInfo c;

    public void <init>()
    {
        com.initech.pkix.'cmp'.CertStatus $r0;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.security.cert.X509Certificate)
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        java.security.cert.X509Certificate $r1;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        virtualinvoke $r0.<com.initech.pkix.'cmp'.CertStatus: void setCertHash(java.security.cert.X509Certificate)>($r1);

        return;
    }

    public void decode(com.initech.asn1.ASN1Decoder)
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        com.initech.asn1.ASN1Decoder $r1;
        int $i0, $i1;
        byte[] $r2;
        boolean $z0;
        com.initech.pkix.'cmp'.PKIStatusInfo $r3;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        $r1 := @parameter0: com.initech.asn1.ASN1Decoder;

        $i0 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: int decodeSequence()>();

        $r2 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: byte[] decodeOctetString()>();

        $r0.<com.initech.pkix.'cmp'.CertStatus: byte[] a> = $r2;

        $i1 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: int decodeIntegerAsInt()>();

        $r0.<com.initech.pkix.'cmp'.CertStatus: int b> = $i1;

        $z0 = virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: boolean endOf(int)>($i0);

        if $z0 != 0 goto label2;

        $r3 = $r0.<com.initech.pkix.'cmp'.CertStatus: com.initech.pkix.'cmp'.PKIStatusInfo c>;

        if $r3 != null goto label1;

        $r3 = new com.initech.pkix.'cmp'.PKIStatusInfo;

        specialinvoke $r3.<com.initech.pkix.'cmp'.PKIStatusInfo: void <init>()>();

        $r0.<com.initech.pkix.'cmp'.CertStatus: com.initech.pkix.'cmp'.PKIStatusInfo c> = $r3;

     label1:
        $r3 = $r0.<com.initech.pkix.'cmp'.CertStatus: com.initech.pkix.'cmp'.PKIStatusInfo c>;

        virtualinvoke $r3.<com.initech.pkix.'cmp'.PKIStatusInfo: void decode(com.initech.asn1.ASN1Decoder)>($r1);

        virtualinvoke $r1.<com.initech.asn1.ASN1Decoder: boolean endOf(int)>($i0);

     label2:
        return;
    }

    public void encode(com.initech.asn1.ASN1Encoder)
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        com.initech.asn1.ASN1Encoder $r1;
        int $i0, $i1;
        byte[] $r2;
        com.initech.pkix.'cmp'.PKIStatusInfo $r3;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        $r1 := @parameter0: com.initech.asn1.ASN1Encoder;

        $i0 = virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: int encodeSequence()>();

        $r2 = $r0.<com.initech.pkix.'cmp'.CertStatus: byte[] a>;

        virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: void encodeOctetString(byte[])>($r2);

        $i1 = $r0.<com.initech.pkix.'cmp'.CertStatus: int b>;

        virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: void encodeInteger(int)>($i1);

        $r3 = $r0.<com.initech.pkix.'cmp'.CertStatus: com.initech.pkix.'cmp'.PKIStatusInfo c>;

        if $r3 == null goto label1;

        $r3 = $r0.<com.initech.pkix.'cmp'.CertStatus: com.initech.pkix.'cmp'.PKIStatusInfo c>;

        virtualinvoke $r3.<com.initech.pkix.'cmp'.PKIStatusInfo: void encode(com.initech.asn1.ASN1Encoder)>($r1);

     label1:
        virtualinvoke $r1.<com.initech.asn1.ASN1Encoder: void endOf(int)>($i0);

        return;
    }

    public byte[] getCertHash()
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        byte[] r1;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        r1 = $r0.<com.initech.pkix.'cmp'.CertStatus: byte[] a>;

        return r1;
    }

    public int getCertReqId()
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        int i0;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        i0 = $r0.<com.initech.pkix.'cmp'.CertStatus: int b>;

        return i0;
    }

    public com.initech.pkix.'cmp'.PKIStatusInfo getPKIStatusInfo()
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        com.initech.pkix.'cmp'.PKIStatusInfo r1;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        r1 = $r0.<com.initech.pkix.'cmp'.CertStatus: com.initech.pkix.'cmp'.PKIStatusInfo c>;

        return r1;
    }

    public void setCertHash(java.security.cert.X509Certificate)
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        java.security.cert.X509Certificate $r1;
        java.lang.String $r2, $r3, varReplacer28428, varReplacer28429, varReplacer28430, varReplacer28431, varReplacer28432, varReplacer28433, varReplacer28434, varReplacer28435;
        int $i0;
        java.security.MessageDigest $r4;
        byte[] $r5;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        $r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = virtualinvoke $r1.<java.security.cert.X509Certificate: java.lang.String getSigAlgName()>();

        $r3 = null;

        varReplacer28428 = "SHA1";

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(varReplacer28428);

        if $i0 < 0 goto label2;

        $r3 = "SHA1";

     label1:
        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3);

        $r5 = virtualinvoke $r1.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5);

        $r0.<com.initech.pkix.'cmp'.CertStatus: byte[] a> = $r5;

        return;

     label2:
        varReplacer28429 = "SHA-256";

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(varReplacer28429);

        if $i0 >= 0 goto label3;

        varReplacer28430 = "SHA256";

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(varReplacer28430);

        if $i0 < 0 goto label4;

     label3:
        $r3 = "SHA-256";

        goto label1;

     label4:
        varReplacer28431 = "SHA-384";

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(varReplacer28431);

        if $i0 >= 0 goto label5;

        varReplacer28432 = "SHA384";

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(varReplacer28432);

        if $i0 < 0 goto label6;

     label5:
        $r3 = "SHA-384";

        goto label1;

     label6:
        varReplacer28433 = "SHA-512";

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(varReplacer28433);

        if $i0 >= 0 goto label7;

        varReplacer28435 = "SHA512";

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(varReplacer28435);

        if $i0 < 0 goto label8;

     label7:
        $r3 = "SHA-512";

        goto label1;

     label8:
        varReplacer28434 = "MD5";

        $i0 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>(varReplacer28434);

        if $i0 < 0 goto label1;

        $r3 = "MD5";

        goto label1;
    }

    public void setCertHash(byte[])
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        byte[] $r1;
        java.lang.Object $r2;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        $r1 := @parameter0: byte[];

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (byte[]) $r2;

        $r0.<com.initech.pkix.'cmp'.CertStatus: byte[] a> = $r1;

        return;
    }

    public void setCertReqId(int)
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        int $i0;

        nop;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        $i0 := @parameter0: int;

        $r0.<com.initech.pkix.'cmp'.CertStatus: int b> = $i0;

        return;
    }

    public void setPKIStatusInfo(com.initech.pkix.'cmp'.PKIStatusInfo)
    {
        com.initech.pkix.'cmp'.CertStatus $r0;
        com.initech.pkix.'cmp'.PKIStatusInfo $r1;

        $r0 := @this: com.initech.pkix.'cmp'.CertStatus;

        $r1 := @parameter0: com.initech.pkix.'cmp'.PKIStatusInfo;

        $r0.<com.initech.pkix.'cmp'.CertStatus: com.initech.pkix.'cmp'.PKIStatusInfo c> = $r1;

        return;
    }
}
