Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer24840, $i0, varReplacer24841)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 39b587a941a95c4a90aad1b89c8c4133056466dd02483beb5c2acaa62eb31b3
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3285)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 744fa36f53670c270f393b4245fa162e7b5e8acebf66cae8dfa5fa2ea409aa25
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer23619)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: a076df1ac50f01c9b5251f8693de62a390bd661671abd19b0c8e7c0376fe1a8f
		Secure: false
	Object:
		Variable: varReplacer24841
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer24840, $i0, varReplacer24841)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: f208a822ecaf310ae5cf757e8e5613b6b2dee1a352714bfce014a911c2388b85
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29371)
		Method: <com.paypal.android.sdk.ap: java.lang.String a(java.lang.String)>
		SHA-256: f7a9998e5b10db22e09602bae05525d8b8891769f92351c3baa5c972c189a70f
		Secure: true
	Object:
		Variable: varReplacer24838
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer24838)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: c1bc8f52970ebf197cd9f242cb2a69a687273bb71039ede9490908afbca55467
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 49b0991ec4db97511e0a9605f37cdac92c6c6619f8973ee389e3d86c78826961
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21874)
		Method: <com.woobi.r: java.lang.String a(java.lang.String)>
		SHA-256: 379332c7cce7a0b712c1a0b72242f979f5335a6d9aa66d3899352555a00b3908
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.f: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 3a1e80698e549c91437350956eb5865d687d056e7348af703228dcb9347cf8b8
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 667d1c74233dc4695844b2a369b7ca168b7b3f396ce37cb94fd304b9f22f5e14
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23756)
		Method: <com.b.a: java.lang.String a(java.lang.String)>
		SHA-256: 2684c47f5bb06cee48cc5dad16725955ad87c05505c86475a86b00dce6279bfa
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.f: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 7352392ac1a61e12c3ab32898ca689dddd258b6f1239ef778511babba2d4e7d
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer24846)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: f5058926c5008ddbe90da9df8ab7d6715744191d6d750ed926410b9e27322b18
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.e: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 23eb3e252b70966d3d0966a2feb58e39bc842849d9905948935e8605dfbd44e2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer24597)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: e0a3c19885087073cd4ed226e55e86e885b2b946ea5928b2e1a94c9938d6cc16
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer23620)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 52761df7c3b76227d6d5aeecdc97ace0ad0722e670ea8b22c7a1bc562b6e27cf
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: $r6 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer23735)
		Method: <com.c.a.a.a$b: void d()>
		SHA-256: 8b05908a29566914e27cca372a55901c18e360957496e01130204e510201dc3a
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.paypal.android.sdk.ap: java.lang.String a(java.lang.String)>
		SHA-256: 4d6e504ac71b2bfa8922545fc87c3c6bff7d76288427fdd13d0af0fb386a7eae
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3351)
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: c5e3adc90f46e7669a5d4f022094efc8b37177cfdf985b28ed6f38f34d773a79
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.paypal.android.sdk.be: void a(okhttp3.OkHttpClient$Builder)>
		SHA-256: f621924fe2e56784575cef4de2c81bd7158a3f476cfcf76844c43012d0db3e60
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer24838)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String)>
		SHA-256: 970a158304cc109be1a2fa5a8a1cd9f66f85b88949597b5d5a5d093932c71412
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.e: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 11f1bcb7ae07944efc67e46877e2d7ceddc5e8edcbf8a0082e0feef337558e47
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer23618)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: b4bc8ea64dee593c526d32bcc5321dff7c3d8d548828e6bcad19f7cd0c93f5cd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.google.android.gms.measurement.internal.m: java.security.MessageDigest j(java.lang.String)>
		SHA-256: cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer23768)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: 96b0a6c658664c08b62ba226c9827c6ff52bd2e0116127d8261642d881a981aa
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.woobi.r: java.lang.String a(java.lang.String)>
		SHA-256: ecac30db3a8dad252fba96484f645a6e999af697f2196475ca7a153464ab981d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer24850)
		Method: <com.c.a.a.a: byte[] a(int)>
		SHA-256: 949764ba15fe7967173a8ea0e2e11f0723b71c7aa7f50637be24c0083a3693d3
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer28172)
		Method: <com.paypal.android.sdk.bi: void <init>(javax.net.ssl.TrustManager)>
		SHA-256: 12f5447de82b134507dac41c15aa15e98d26cba2bf4bfe5e78a743044e384025
		Secure: false
	Object:
		Variable: varReplacer23618
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer23618)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 2fcc3f9df514938d6e0bbda4d35a0183d23d955803b3e3cc788d69a9ba7e3a74
		Secure: false
	Object:
		Variable: varReplacer23620
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer23620)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: e89fb3b015ff618f29550ed9c4c4c5ff0aa1f130ae8e22a61fc0050b913b1a41
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.c.a.a.a: byte[] a(int)>
		SHA-256: fb29420aa97b5775051d78ac21aaddb65cadc18b767a2ea9df4d12c22313ecc6
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a.a.a$b: void d()>
		SHA-256: 2c4df0dfdedbc6ba6aa64eb861bcc76e945ee8fee08de7105c50d6a8805bf65c
		Secure: true
	Object:
		Variable: varReplacer23619
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer23619)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 89797f70b3005d37584a787a53cb20803e47d6f24e9e4a9fa8d78e9e0a1a06e6
		Secure: false
	Object:
		Variable: varReplacer24846
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer24846)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: 400812ccd6cee6f2c960bd45788681aac33fc4ba909220b2d186fbb676a79504
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer23621)
		Method: <com.c.a.a.a: com.c.a.a.a$c a(java.lang.String,byte[],int)>
		SHA-256: 369701f904487e2491c4f577dfa9de485ab188d35a4759f9cda26920cb2b52d0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: 93956974d148af49c7bedf886430bab7e5a8bdbb54e9810aa547f86e20abd43c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.b.a: java.lang.String a(java.lang.String)>
		SHA-256: dc882d1e80d0c4879b4465be6f5455c2ca87100b2286e4177ce35aff39053ee6
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: $r21
		Type: byte[]
		Statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)
		Method: <com.google.android.gms.measurement.internal.z: void e()>
		SHA-256: 2acc783ae146fb83530e758b60624c8af39c1e50c62d500f73395ef622d7f02d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.c: java.security.KeyPair a()>
		SHA-256: 588458274b445946250cb882f03e117802589055ad1c0641c873f0c9f0a9b58b
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.f: java.security.KeyPair f(java.lang.String)>
		SHA-256: 8551cd6b3cc22405d453a0e2748b84cb2fd415de658d3d644bd174e7acddd53a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer23773)
		Method: <com.c.a.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4a3cea0d1dfea57f10262a4511226520baf177ded5a8e11ef0443c5001493c26
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27915)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 4e1169a3154a8efe77b47e6ae3795d47f296aa1aac7f174087046c2e9a0c3e49
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.c.a.a.a: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)>
		SHA-256: deaa291ca3d0ffc59d7ad7c1373c0bb84caba0350d0558fb8d4c3e426704100e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a.a: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer24845)
		Method: <com.c.a.a.a: com.c.a.a.a$c a()>
		SHA-256: ae940f181175d25fc25bd013ddabf14db8764f4e6c9a905ddfd1e6b9fce34eff
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a.a.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: 4524495dfa3fecb4e6af9082328a3644e0e2c7ca52c9e390e41dd827fbce5634
		Secure: true

Findings in Java Class: com.google.android.gms.iid.e

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #11f1bcb7ae07944efc67e46877e2d7ceddc5e8edcbf8a0082e0feef337558e47)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, DSS, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.a

	 in Method: java.lang.String a(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #744fa36f53670c270f393b4245fa162e7b5e8acebf66cae8dfa5fa2ea409aa25)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3285)


Findings in Java Class: com.c.a.a.a

	 in Method: com.c.a.a.a$c a(java.lang.String,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer23618)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer23619)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer23620)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b4bc8ea64dee593c526d32bcc5321dff7c3d8d548828e6bcad19f7cd0c93f5cd)
			Third parameter (with value 100)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer23618)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b4bc8ea64dee593c526d32bcc5321dff7c3d8d548828e6bcad19f7cd0c93f5cd)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer23618)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b4bc8ea64dee593c526d32bcc5321dff7c3d8d548828e6bcad19f7cd0c93f5cd)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: com.c.a.a.a$c a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer24838)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer24840, $i0, varReplacer24841)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer24840, $i0, varReplacer24841)


	 in Method: com.c.a.a.a$c a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer24846)


	 in Method: byte[] b(com.c.a.a.a$a,com.c.a.a.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer23769, $r5, $r2)


	 in Method: com.c.a.a.a$a a(byte[],com.c.a.a.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27916, $r5, $r2)


Findings in Java Class: com.google.android.gms.measurement.internal.z

	 in Method: void e()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r21 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r21)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = staticinvoke <com.google.android.gms.measurement.internal.m: java.security.MessageDigest j(java.lang.String)>(varReplacer25201)


Findings in Java Class: com.google.android.gms.measurement.internal.m

	 in Method: java.security.MessageDigest j(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cfa30433cb7e2ec8586935b52ecdfad19273e60fb50850194ae06b8e9f475763)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer24595, r7, varReplacer24595)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer24595, r7, varReplacer24595)


Findings in Java Class: com.paypal.android.sdk.bi

	 in Method: void <init>(javax.net.ssl.TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer28173, $r2, varReplacer28173)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer28173, $r2, varReplacer28173)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 48

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 15
	ImpreciseValueExtractionError: 1
	ConstraintError: 3
	NeverTypeOfError: 1
	IncompleteOperationError: 4
=====================================================================