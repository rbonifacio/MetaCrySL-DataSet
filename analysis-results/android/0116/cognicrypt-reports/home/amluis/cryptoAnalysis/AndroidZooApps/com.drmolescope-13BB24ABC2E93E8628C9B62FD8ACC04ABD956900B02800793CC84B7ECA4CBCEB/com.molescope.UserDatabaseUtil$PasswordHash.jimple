public class com.molescope.UserDatabaseUtil$PasswordHash extends java.lang.Object
{
    public static final java.lang.String AES_ALGORITHM;
    public static final int HASH_BYTE_SIZE;
    public static final int ITERATION_INDEX;
    public static final java.lang.String PBKDF2_ALGORITHM;
    public static final int PBKDF2_INDEX;
    public static final int PBKDF2_ITERATIONS;
    public static final int SALT_BYTE_SIZE;
    public static final int SALT_INDEX;

    public void <init>()
    {
        com.molescope.UserDatabaseUtil$PasswordHash $r0;

        $r0 := @this: com.molescope.UserDatabaseUtil$PasswordHash;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static byte[] access$100(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: byte[] fromHex(java.lang.String)>($r0);

        return $r1;
    }

    static java.lang.String access$300(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r1;
        int $i0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r0 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: java.lang.String encryptDecrypt(java.lang.String,java.lang.String,int)>($r0, $r1, $i0);

        return $r0;
    }

    public static java.lang.String createHash(char[]) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException
    {
        char[] $r0;
        java.security.SecureRandom $r1;
        byte[] $r2;
        java.lang.String $r3;

        nop;

        $r0 := @parameter0: char[];

        $r1 = new java.security.SecureRandom;

        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();

        $r2 = newarray (byte)[24];

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2);

        $r3 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: java.lang.String createHash(char[],byte[])>($r0, $r2);

        return $r3;
    }

    public static java.lang.String createHash(char[], byte[]) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException
    {
        char[] $r0;
        byte[] $r1, $r2;
        java.lang.StringBuilder $r3;
        java.lang.String $r4, varReplacer2618, varReplacer2621;
        int varReplacer2619, varReplacer2620;

        nop;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: byte[];

        varReplacer2619 = 1000;

        varReplacer2620 = 24;

        $r2 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: byte[] pbkdf2(char[],byte[],int,int)>($r0, $r1, varReplacer2619, varReplacer2620);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer2618 = "1000:";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2618);

        $r4 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: java.lang.String toHex(byte[])>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        varReplacer2621 = ":";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2621);

        $r4 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: java.lang.String toHex(byte[])>($r2);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void createHash(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        char[] $r2;
        android.content.SharedPreferences $r4;
        android.content.SharedPreferences$Editor $r5;
        java.lang.Throwable $r6, $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

     label1:
        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r1 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: java.lang.String createHash(char[])>($r2);

     label2:
        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(2131165939);

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r3, 0);

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(2131165830);

        $r5 = interfaceinvoke $r5.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r3, $r1);

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;

     label3:
        $r6 := @caughtexception;

     label4:
        $r1 = null;

        goto label2;

     label5:
        $r7 := @caughtexception;

        goto label4;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label5;
    }

    private static java.lang.String encryptDecrypt(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r1;
        int $i0, $i1;
        java.lang.Exception $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r4;
        char[] $r5;
        byte[] $r6;
        java.lang.String[] $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        if $r1 == null goto label11;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label11;

     label01:
        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        $r5 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r6 = newarray (byte)[24];

        $r0 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: java.lang.String createHash(char[],byte[])>($r5, $r6);

        $r7 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r0 = $r7[2];

        $r6 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: byte[] fromHex(java.lang.String)>($r0);

     label02:
        $r3 = new javax.crypto.spec.SecretKeySpec;

     label03:
        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, "AES");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r3);

     label04:
        if $i0 != 1 goto label07;

     label05:
        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $r0 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: java.lang.String toHex(byte[])>($r6);

     label06:
        return $r0;

     label07:
        $r0 = new java.lang.String;

     label08:
        $r6 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: byte[] fromHex(java.lang.String)>($r1);

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r6);

     label09:
        return $r0;

     label10:
        $r2 := @caughtexception;

        return "";

     label11:
        return "";

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label03 to label04 with label10;
        catch java.lang.Exception from label05 to label06 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    private static byte[] fromHex(java.lang.String)
    {
        java.lang.String $r0, $r2;
        byte[] $r1;
        int $i0, $i1, $i2, varReplacer1337;
        byte $b3;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 >= $i1 goto label2;

        $i1 = $i0 * 2;

        $i2 = $i0 * 2;

        $i2 = $i2 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        varReplacer1337 = 16;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, varReplacer1337);

        $b3 = (byte) $i1;

        $r1[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return $r1;
    }

    private static byte[] pbkdf2(char[], byte[], int, int) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException
    {
        char[] $r0;
        byte[] $r1;
        int $i0, $i1, varReplacer2622, varReplacer2623;
        javax.crypto.spec.PBEKeySpec $r2;
        javax.crypto.SecretKeyFactory $r3;
        javax.crypto.SecretKey $r4;
        java.lang.String varReplacer2624;

        nop;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r2 = new javax.crypto.spec.PBEKeySpec;

        $i1 = 192;

        varReplacer2622 = 1000;

        varReplacer2623 = 192;

        specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2622, varReplacer2623);

        varReplacer2624 = "PBKDF2WithHmacSHA1";

        $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2624);

        $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2);

        $r1 = interfaceinvoke $r4.<javax.crypto.SecretKey: byte[] getEncoded()>();

        return $r1;
    }

    public static java.lang.String setEncryptionKey(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r3, $r8, varReplacer2615;
        android.content.SharedPreferences $r4;
        char[] $r5;
        java.lang.String[] $r6;
        android.content.SharedPreferences$Editor $r7;
        byte[] $r9;
        java.lang.Throwable $r10;
        java.lang.Exception r11;
        int varReplacer2612, varReplacer2613, varReplacer2614, varReplacer2616;
        null_type varReplacer2617;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = null;

        varReplacer2614 = 2131165939;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(varReplacer2614);

        varReplacer2613 = 0;

        $r4 = virtualinvoke $r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>($r3, varReplacer2613);

        varReplacer2612 = 2131165847;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(varReplacer2612);

        varReplacer2617 = null;

        $r3 = interfaceinvoke $r4.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>($r3, varReplacer2617);

        if $r3 != null goto label07;

     label01:
        $r5 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r1 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: java.lang.String createHash(char[])>($r5);

     label02:
        $r2 = $r1;

     label03:
        varReplacer2615 = ":";

        $r6 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer2615);

     label04:
        $r3 = $r6[1];

     label05:
        $r7 = interfaceinvoke $r4.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        varReplacer2616 = 2131165847;

        $r8 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>(varReplacer2616);

        $r7 = interfaceinvoke $r7.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r8, $r3);

        interfaceinvoke $r7.<android.content.SharedPreferences$Editor: void apply()>();

     label06:
        return $r1;

     label07:
        $r5 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        $r9 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: byte[] fromHex(java.lang.String)>($r3);

        $r1 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: java.lang.String createHash(char[],byte[])>($r5, $r9);

     label08:
        return $r1;

     label09:
        $r10 := @caughtexception;

     label10:
        r11 = (java.lang.Exception) $r10;

        staticinvoke <com.molescope.ParseUtils: void log(android.content.Context,java.lang.Exception,java.lang.Class)>($r0, r11, class "Lcom/molescope/UserDatabaseUtil;");

        return $r2;

     label11:
        $r10 := @caughtexception;

        goto label10;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label09;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label09;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label09;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label11;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label11;
        catch java.security.spec.InvalidKeySpecException from label05 to label06 with label11;
        catch java.security.spec.InvalidKeySpecException from label07 to label08 with label11;
    }

    private static boolean slowEquals(byte[], byte[])
    {
        byte[] $r0, $r1;
        int $i0, $i1, $i2;
        byte $b3, $b4;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r0;

        $i1 = lengthof $r1;

        $i0 = $i0 ^ $i1;

        $i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label2;

        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label2;

        $b3 = $r0[$i1];

        $b4 = $r1[$i1];

        $b3 = $b3 ^ $b4;

        $i0 = $i0 | $b3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        if $i0 != 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    private static java.lang.String toHex(byte[])
    {
        byte[] $r0;
        java.math.BigInteger $r1;
        int $i0, $i1, varReplacer2625, varReplacer2627, varReplacer2628;
        java.lang.String $r2, $r5, varReplacer2626, varReplacer2629;
        java.lang.StringBuilder $r3, $r4;
        java.lang.Object[] $r6;
        java.lang.Integer $r7;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.math.BigInteger;

        varReplacer2625 = 1;

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,byte[])>(varReplacer2625, $r0);

        varReplacer2628 = 16;

        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.lang.String toString(int)>(varReplacer2628);

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i0 = $i0 - $i1;

        if $i0 <= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        varReplacer2626 = "%0";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2626);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer2629 = "d";

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer2629);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (java.lang.Object)[1];

        varReplacer2627 = 0;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(varReplacer2627);

        $r6[0] = $r7;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r5, $r6);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return $r2;
    }

    public static boolean validatePassword(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException
    {
        java.lang.String $r0, $r1;
        char[] $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $z0 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: boolean validatePassword(char[],java.lang.String)>($r2, $r1);

        return $z0;
    }

    public static boolean validatePassword(char[], java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException
    {
        char[] $r0;
        java.lang.String $r1;
        java.lang.String[] $r2;
        int $i0, $i1;
        byte[] $r3, $r4;
        boolean $z0;

        $r0 := @parameter0: char[];

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r1 = $r2[0];

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

        $r1 = $r2[1];

        $r3 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: byte[] fromHex(java.lang.String)>($r1);

        $r1 = $r2[2];

        $r4 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: byte[] fromHex(java.lang.String)>($r1);

        $i1 = lengthof $r4;

        $r3 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: byte[] pbkdf2(char[],byte[],int,int)>($r0, $r3, $i0, $i1);

        $z0 = staticinvoke <com.molescope.UserDatabaseUtil$PasswordHash: boolean slowEquals(byte[],byte[])>($r4, $r3);

        return $z0;
    }
}
