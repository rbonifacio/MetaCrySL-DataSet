Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer2370)
		Method: <com.c.a: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: cf845706ce4daa48e149dad8ccb41de100e9e1eae93ad73e4db68957aa431ca
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.a.a.b: void <clinit>()>
		SHA-256: 3d425707cdb6650dff821a6f07e1b4c3cc3c8d38b9bf8d5c7e5e68d2549a99b4
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2305, varReplacer2306)
		Method: <com.c.a: java.lang.String c(java.lang.String)>
		SHA-256: 28b9ce7a40489886361f0e05ccceada2a2c64414a2540679e5d3eef046d12a0f
		Secure: false
	Object:
		Variable: varReplacer2370
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer2370)
		Method: <com.c.a: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 8b8c56d9ff33e34b96e50c0128834c0f520086ff724108ddab24fd413ea16c28
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: 97a3c8e52d5d993a10361e3bca3694db11475905a77d4cf15ec35998b7b22eb1
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.c.a: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: dc35c37b7d181c0c57d9d96791bcc47344a17b48cb161d0b8ced97bdf5e85dcc
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer2424)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: d0e32e8657f15a39127d231134e61a974aee3181d8e677c48f67e83c44715901
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2429)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: 4f1084f1c47777a8f1de2654b87beb677eaaeb7c35d75746b1f75dc47c911109
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a: java.lang.String d(java.lang.String)>
		SHA-256: f221b64c971b08ca8733dca9b3d988fe997bee0e29ec5d42148b4c5333c7a0c5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.c.a: java.lang.String b()>
		SHA-256: d2c74e1463981ec1c65c9d3bb8e5456a4059191281149395cee667b1afe63a43
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: dde89c5c91a90f42d34096e217463722ace95967856c7ecf2a34fb253d9fe2fb
		Secure: false
	Object:
		Variable: varReplacer2427
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2427)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: 7abf72b89572d40e3a6f202918b604516aae014a67aab6c671393c4af1fec700
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2294)
		Method: <com.c.a: java.lang.String d(java.lang.String)>
		SHA-256: 2791d84d3b707e2e81d8ba97413b8c8c860632e4fb3c44f58b3e2e11855330f4
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: c6d12afe6a832aca049b3156d072862d1a8afef9fb4ec0513b1682ea6d7aa174
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: dde89c5c91a90f42d34096e217463722ace95967856c7ecf2a34fb253d9fe2fb
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer2371)
		Method: <com.c.a: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: ae5925d4e1790bbdb506b4bdd5af19ef8e9329494df9d4421fabd2072c48cef3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2433)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: ddb10c03c35424fd61dc70ee85f36cae04af20050b9c8c818e89dff3ea6600c9
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a: java.lang.String b()>
		SHA-256: d70bbec740c21fcf3a4782571db424a1867ce6766b07594df8a77d108df5fc08
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2307)
		Method: <com.c.a: java.lang.String c(java.lang.String)>
		SHA-256: c961b53f8fd83f961c7cbd658bdccf518f89ecdc90b97818ac127a87d68e2d5b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: c6d12afe6a832aca049b3156d072862d1a8afef9fb4ec0513b1682ea6d7aa174
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: b387260638dfd0cbd4489856ff2a3efda6953e639921e54be59471c00fce5c4d
		Secure: false
	Object:
		Variable: varReplacer2294
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2294)
		Method: <com.c.a: java.lang.String d(java.lang.String)>
		SHA-256: acecb430a307b4ca818e1ec82b1506a7ea7cb0fac5567443fa6c2c2fd0c90292
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2457)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: bf70a9a39b2b4ee04fb3c2a7b740dff463182a0bf98305c2263c0dd66669957a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.b.a.a.j: java.security.KeyStore a()>
		SHA-256: 804b090e8f05047aeaddc785134b86ab23233956db37a2272dbdd85a718d625d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2225)
		Method: <com.b.a.a.j: void <init>(java.security.KeyStore)>
		SHA-256: f957f2dc04a6a7b916a74c6278ac9c88393f4d57371761e74b13f8b884445a05
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2297, varReplacer2298)
		Method: <com.c.a: java.lang.String d(java.lang.String)>
		SHA-256: ab2dc4aa4ffeed20136dfb32d4b1efe8739ee11c3153534d3e80e588b21c8c0e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2434)
		Method: <org.a.a.b: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 68dde1dc9a484f19d737c8d7578c4fb93dcb898b137dfa50b3012dbb2e65e64a
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: b387260638dfd0cbd4489856ff2a3efda6953e639921e54be59471c00fce5c4d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2361)
		Method: <com.c.a: java.lang.String b()>
		SHA-256: 1ab8a791e59300c85ae5c04c227194c47d1ce7ca09f2adde28b27c0178ad4a03
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2427)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: cde34165535d98e6ac34f45c998032c0b6e3193c30b9dcb72b063f270acebace
		Secure: false
	Object:
		Variable: varReplacer2307
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2307)
		Method: <com.c.a: java.lang.String c(java.lang.String)>
		SHA-256: b52ef72458c1c08bc85d2f06b43b797261f14a4fe22012936b6ac53b75afae62
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.c.a: java.lang.String b()>
		SHA-256: cbee8d522b1c00e6b5ddcc2bec823cbd540127e9fbb6c3eb7a81ae474f494680
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2456)
		Method: <org.a.a.b: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)>
		SHA-256: 76a1c381f28e34a40563a327734c88e8e989af542b6fbfaaee3dea7ca85e7c99
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.c.a: java.lang.String c(java.lang.String)>
		SHA-256: 84e403208652919c726caa459befe85a7fce642141ed9ae966eb005ade67223e
		Secure: false
	Object:
		Variable: varReplacer2424
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer2424)
		Method: <org.a.a.b: javax.crypto.SecretKey a(char[],byte[])>
		SHA-256: 991f734b5b417f412657ff4139fedbac4c54223bce73436c7f14c4b20bbd9d01
		Secure: false

Findings in Java Class: com.c.a

	 in Method: java.lang.String d(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ab2dc4aa4ffeed20136dfb32d4b1efe8739ee11c3153534d3e80e588b21c8c0e)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2297, varReplacer2298)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2294)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ab2dc4aa4ffeed20136dfb32d4b1efe8739ee11c3153534d3e80e588b21c8c0e)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2297, varReplacer2298)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2296, $r3)


	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #28b9ce7a40489886361f0e05ccceada2a2c64414a2540679e5d3eef046d12a0f)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2305, varReplacer2306)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2307)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2302, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #28b9ce7a40489886361f0e05ccceada2a2c64414a2540679e5d3eef046d12a0f)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2305, varReplacer2306)


	 in Method: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer2370)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cf845706ce4daa48e149dad8ccb41de100e9e1eae93ad73e4db68957aa431ca)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cf845706ce4daa48e149dad8ccb41de100e9e1eae93ad73e4db68957aa431ca)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer2370)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #cf845706ce4daa48e149dad8ccb41de100e9e1eae93ad73e4db68957aa431ca)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, $i1, varReplacer2370)


Findings in Java Class: org.a.a.b

	 in Method: javax.crypto.SecretKey a(char[],byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #d0e32e8657f15a39127d231134e61a974aee3181d8e677c48f67e83c44715901)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer2424)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #d0e32e8657f15a39127d231134e61a974aee3181d8e677c48f67e83c44715901)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2427)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, varReplacer2424)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)


	 in Method: byte[] a(org.a.a.c,javax.crypto.SecretKey,javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2453, $r2, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: byte[] a(org.a.a.d,javax.crypto.SecretKey,javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2435, $r2, $r11)


Findings in Java Class: com.b.a.a.j

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2226, r5, varReplacer2226)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2226, r5, varReplacer2226)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	RequiredPredicateError: 15
	IncompleteOperationError: 2
	ConstraintError: 5
=====================================================================