public class com.hawk.android.adsdk.ads.net.a.g extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
    private static javax.net.ssl.TrustManager[] a;
    private static final java.security.cert.X509Certificate[] b;

    static void <clinit>()
    {
        java.security.cert.X509Certificate[] $r0;

        nop;

        $r0 = newarray (java.security.cert.X509Certificate)[0];

        <com.hawk.android.adsdk.ads.net.a.g: java.security.cert.X509Certificate[] b> = $r0;

        return;
    }

    public void <init>()
    {
        com.hawk.android.adsdk.ads.net.a.g $r0;

        nop;

        $r0 := @this: com.hawk.android.adsdk.ads.net.a.g;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void a()
    {
        javax.net.ssl.TrustManager[] $r0;
        java.lang.Object[] $r1;
        javax.net.ssl.SSLContext $r2, $r3;
        java.security.SecureRandom $r4, r12;
        javax.net.ssl.SSLSocketFactory $r5;
        java.lang.Throwable $r6, $r7, $r8, $r9;
        com.hawk.android.adsdk.ads.net.a.g$1 r10;
        com.hawk.android.adsdk.ads.net.a.g r11;
        java.security.NoSuchAlgorithmException r13;
        java.security.KeyManagementException r14;
        null_type varReplacer8741;
        java.lang.String varReplacer8742;

        nop;

        r10 = new com.hawk.android.adsdk.ads.net.a.g$1;

        specialinvoke r10.<com.hawk.android.adsdk.ads.net.a.g$1: void <init>()>();

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)>(r10);

        $r0 = <com.hawk.android.adsdk.ads.net.a.g: javax.net.ssl.TrustManager[] a>;

        if $r0 != null goto label01;

        $r1 = newarray (javax.net.ssl.TrustManager)[1];

        r11 = new com.hawk.android.adsdk.ads.net.a.g;

        specialinvoke r11.<com.hawk.android.adsdk.ads.net.a.g: void <init>()>();

        $r1[0] = r11;

        $r0 = (javax.net.ssl.TrustManager[]) $r1;

        <com.hawk.android.adsdk.ads.net.a.g: javax.net.ssl.TrustManager[] a> = $r0;

     label01:
        varReplacer8742 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8742);

     label02:
        $r3 = $r2;

        $r0 = <com.hawk.android.adsdk.ads.net.a.g: javax.net.ssl.TrustManager[] a>;

        r12 = new java.security.SecureRandom;

        $r4 = r12;

     label03:
        specialinvoke r12.<java.security.SecureRandom: void <init>()>();

        varReplacer8741 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8741, $r0, $r4);

     label04:
        $r5 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        staticinvoke <javax.net.ssl.HttpsURLConnection: void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r5);

        return;

     label05:
        $r6 := @caughtexception;

        $r3 = null;

        $r7 = $r6;

     label06:
        r13 = (java.security.NoSuchAlgorithmException) $r7;

        virtualinvoke r13.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label04;

     label07:
        $r8 := @caughtexception;

        $r3 = null;

        $r9 = $r8;

     label08:
        r14 = (java.security.KeyManagementException) $r9;

        virtualinvoke r14.<java.security.KeyManagementException: void printStackTrace()>();

        goto label04;

     label09:
        $r9 := @caughtexception;

        goto label08;

     label10:
        $r7 := @caughtexception;

        goto label06;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label05;
        catch java.security.KeyManagementException from label01 to label02 with label07;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label10;
        catch java.security.KeyManagementException from label03 to label04 with label09;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)
    {
        com.hawk.android.adsdk.ads.net.a.g $r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2;

        $r0 := @this: com.hawk.android.adsdk.ads.net.a.g;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        return;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)
    {
        com.hawk.android.adsdk.ads.net.a.g $r0;
        java.security.cert.X509Certificate[] $r1;
        java.lang.String $r2;

        $r0 := @this: com.hawk.android.adsdk.ads.net.a.g;

        $r1 := @parameter0: java.security.cert.X509Certificate[];

        $r2 := @parameter1: java.lang.String;

        return;
    }

    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        com.hawk.android.adsdk.ads.net.a.g $r0;
        java.security.cert.X509Certificate[] r1;

        $r0 := @this: com.hawk.android.adsdk.ads.net.a.g;

        r1 = <com.hawk.android.adsdk.ads.net.a.g: java.security.cert.X509Certificate[] b>;

        return r1;
    }
}
