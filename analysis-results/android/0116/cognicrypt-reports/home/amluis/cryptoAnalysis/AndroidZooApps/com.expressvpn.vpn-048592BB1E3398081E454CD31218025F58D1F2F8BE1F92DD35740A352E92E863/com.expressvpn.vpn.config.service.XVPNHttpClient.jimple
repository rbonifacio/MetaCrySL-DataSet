public class com.expressvpn.vpn.config.service.XVPNHttpClient extends org.apache.http.impl.client.DefaultHttpClient
{
    private static final com.expressvpn.utils.android.log.L l;
    private org.apache.http.conn.ClientConnectionManager connectionManager;

    static void <clinit>()
    {
        com.expressvpn.utils.android.log.L $r0;
        java.lang.String varReplacer3637;

        nop;

        varReplacer3637 = "XVPNHC";

        $r0 = staticinvoke <com.expressvpn.utils.android.log.Logger: com.expressvpn.utils.android.log.L newLog(java.lang.String)>(varReplacer3637);

        <com.expressvpn.vpn.config.service.XVPNHttpClient: com.expressvpn.utils.android.log.L l> = $r0;

        return;
    }

    public void <init>(org.apache.http.conn.ClientConnectionManager, org.apache.http.params.HttpParams)
    {
        com.expressvpn.vpn.config.service.XVPNHttpClient $r0;
        org.apache.http.conn.ClientConnectionManager $r1;
        org.apache.http.params.HttpParams $r2;

        $r0 := @this: com.expressvpn.vpn.config.service.XVPNHttpClient;

        $r1 := @parameter0: org.apache.http.conn.ClientConnectionManager;

        $r2 := @parameter1: org.apache.http.params.HttpParams;

        specialinvoke $r0.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r1, $r2);

        $r0.<com.expressvpn.vpn.config.service.XVPNHttpClient: org.apache.http.conn.ClientConnectionManager connectionManager> = $r1;

        return;
    }

    private static java.io.InputStream getSslKeystore(com.expressvpn.vpn.EvpnContext)
    {
        com.expressvpn.vpn.EvpnContext $r0;
        java.lang.Exception $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        android.content.res.AssetManager $r4;
        com.expressvpn.vpn.ApplicationProfile$ServerMode $r5;
        java.lang.String $r6, varReplacer3638, varReplacer3639, varReplacer3640, varReplacer3641;
        java.io.InputStream $r7;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9;

        nop;

        $r0 := @parameter0: com.expressvpn.vpn.EvpnContext;

     label1:
        $r2 = interfaceinvoke $r0.<com.expressvpn.vpn.EvpnContext: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $r5 = interfaceinvoke $r0.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.ApplicationProfile$ServerMode resolveServerMode()>();

        $r6 = virtualinvoke $r5.<com.expressvpn.vpn.ApplicationProfile$ServerMode: java.lang.String getCertKeyStorePath()>();

        $r7 = virtualinvoke $r4.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r6);

     label2:
        return $r7;

     label3:
        $r1 := @caughtexception;

        varReplacer3639 = "XVPNHttpClient";

        varReplacer3640 = "Unnable to load keystore";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer3639, varReplacer3640, $r1);

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        varReplacer3641 = "Unnable to load keystore (";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3641);

        $r6 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer3638 = ")";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer3638);

        $r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r6, $r1);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static org.apache.http.conn.ssl.SSLSocketFactory newSslSocketFactory(com.expressvpn.vpn.EvpnContext)
    {
        com.expressvpn.vpn.EvpnContext $r0;
        java.lang.Exception $r1;
        java.io.InputStream $r2;
        java.security.KeyStore $r3;
        java.lang.String $r4, varReplacer3633, varReplacer3634, varReplacer3635;
        char[] $r5;
        org.apache.http.conn.ssl.SSLSocketFactory $r6;
        com.expressvpn.vpn.ApplicationProfile$ServerMode $r7, $r8;
        org.apache.http.conn.ssl.AllowAllHostnameVerifier $r9;
        java.lang.Throwable $r10;
        org.apache.http.conn.ssl.X509HostnameVerifier $r11;
        null_type varReplacer3632;

        nop;

        $r0 := @parameter0: com.expressvpn.vpn.EvpnContext;

        $r2 = staticinvoke <com.expressvpn.vpn.config.service.XVPNHttpClient: java.io.InputStream getSslKeystore(com.expressvpn.vpn.EvpnContext)>($r0);

     label01:
        varReplacer3633 = "BKS";

        $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3633);

     label02:
        $r4 = "bafvmvxg";

     label03:
        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r2, $r5);

     label04:
        staticinvoke <com.expressvpn.vpn.util.io.IOUtils: void closeQuietly(java.io.InputStream)>($r2);

     label05:
        $r6 = new org.apache.http.conn.ssl.SSLSocketFactory;

     label06:
        specialinvoke $r6.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>($r3);

        $r7 = interfaceinvoke $r0.<com.expressvpn.vpn.EvpnContext: com.expressvpn.vpn.ApplicationProfile$ServerMode resolveServerMode()>();

     label07:
        $r8 = <com.expressvpn.vpn.ApplicationProfile$ServerMode: com.expressvpn.vpn.ApplicationProfile$ServerMode Stage>;

        if $r7 != $r8 goto label13;

        $r9 = new org.apache.http.conn.ssl.AllowAllHostnameVerifier;

     label08:
        specialinvoke $r9.<org.apache.http.conn.ssl.AllowAllHostnameVerifier: void <init>()>();

        virtualinvoke $r6.<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>($r9);

     label09:
        return $r6;

     label10:
        $r10 := @caughtexception;

     label11:
        staticinvoke <com.expressvpn.vpn.util.io.IOUtils: void closeQuietly(java.io.InputStream)>($r2);

        throw $r10;

     label12:
        $r1 := @caughtexception;

        varReplacer3634 = "XVPNHttpClient";

        varReplacer3635 = "Unnable to create SSLSocketFactory";

        staticinvoke <com.expressvpn.vpn.util.XVLogger: void logE(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer3634, varReplacer3635, $r1);

        varReplacer3632 = null;

        return varReplacer3632;

     label13:
        $r11 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER>;

     label14:
        virtualinvoke $r6.<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>($r11);

     label15:
        return $r6;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label06 to label07 with label12;
        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label11 to label12 with label12;
        catch java.lang.Exception from label14 to label15 with label12;
    }

    protected org.apache.http.conn.ClientConnectionManager createClientConnectionManager()
    {
        com.expressvpn.vpn.config.service.XVPNHttpClient $r0;
        org.apache.http.conn.ClientConnectionManager r1;

        $r0 := @this: com.expressvpn.vpn.config.service.XVPNHttpClient;

        r1 = $r0.<com.expressvpn.vpn.config.service.XVPNHttpClient: org.apache.http.conn.ClientConnectionManager connectionManager>;

        return r1;
    }
}
