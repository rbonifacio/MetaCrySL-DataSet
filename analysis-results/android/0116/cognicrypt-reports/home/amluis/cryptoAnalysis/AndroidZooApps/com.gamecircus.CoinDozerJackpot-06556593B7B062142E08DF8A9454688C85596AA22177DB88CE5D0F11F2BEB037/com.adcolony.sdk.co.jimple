class com.adcolony.sdk.co extends java.lang.Object
{
    static boolean b;

    static void <clinit>()
    {
        int varReplacer6597;

        nop;

        varReplacer6597 = 0;

        <com.adcolony.sdk.co: boolean b> = varReplacer6597;

        return;
    }

    static float a()
    {
        com.adcolony.sdk.bz $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        java.lang.Exception $r4;
        float f0;

     label1:
        $r0 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r1 = virtualinvoke $r0.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r3.<android.util.DisplayMetrics: float density>;

     label2:
        return f0;

     label3:
        $r4 := @caughtexception;

        return 0.0F;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static int a(char)
    {
        char $c0;
        int $i1, $i2, $i3, varReplacer7100, varReplacer7101, varReplacer7102, varReplacer7103, varReplacer7104, varReplacer7105;

        nop;

        $c0 := @parameter0: char;

        $i1 = 97 - $c0;

        varReplacer7101 = 0;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(varReplacer7101, $i1);

        varReplacer7104 = 1;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, varReplacer7104);

        $i2 = 97 - $c0;

        varReplacer7100 = 0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(varReplacer7100, $i2);

        $i2 = 32 - $i2;

        $i1 = $i1 * $i2;

        $i2 = $c0 + -97;

        varReplacer7102 = 0;

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>(varReplacer7102, $i2);

        $i3 = $c0 + -96;

        varReplacer7103 = 0;

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>(varReplacer7103, $i3);

        varReplacer7105 = 1;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(varReplacer7105, $i3);

        $i2 = $i2 * $i3;

        $i1 = $i1 + $i2;

        return $i1;
    }

    static int a(int)
    {
        int $i0;
        float $f0, $f1;

        $i0 := @parameter0: int;

        $f1 = (float) $i0;

        $f0 = staticinvoke <com.adcolony.sdk.co: float a()>();

        $f0 = $f1 * $f0;

        $i0 = (int) $f0;

        return $i0;
    }

    public static java.lang.Iterable a(java.lang.Iterable)
    {
        java.util.List $r0;
        java.lang.Iterable $r1;

        $r1 := @parameter0: java.lang.Iterable;

        if $r1 != null goto label1;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;

     label1:
        return $r1;
    }

    static java.lang.String a(android.content.Context)
    {
        android.content.Context $r0, $r2;
        java.lang.String $r1, $r5, $r7, varReplacer7057, varReplacer7063, varReplacer7064, varReplacer7066, varReplacer7067;
        java.io.File $r3;
        java.io.File[] $r4;
        int $i0, $i1, varReplacer7058, varReplacer7061, varReplacer7062;
        boolean $z0;
        java.lang.StringBuilder $r6;
        com.adcolony.sdk.bz $r8;
        java.lang.Exception $r9, $r13;
        java.util.ArrayList $r10;
        java.util.Iterator $r11;
        java.lang.Object $r12;
        null_type varReplacer7059, varReplacer7060, varReplacer7065;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = null;

        if $r0 == null goto label20;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        if $r2 != null goto label01;

        varReplacer7060 = null;

        return varReplacer7060;

     label01:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.io.File getFilesDir()>();

        if $r3 == null goto label20;

        $r4 = virtualinvoke $r3.<java.io.File: java.io.File[] listFiles()>();

        if $r4 == null goto label17;

        $i0 = 0;

     label02:
        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label21;

        $r3 = $r4[$i0];

        $r5 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        varReplacer7066 = ".ybin";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>(varReplacer7066);

        if $z0 == 0 goto label07;

        $r5 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer7067 = "file: ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7067);

        $r3 = $r4[$i0];

        $r7 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer7062 = 1;

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r5, $r7, varReplacer7062);

        $r8 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r5 = virtualinvoke $r8.<com.adcolony.sdk.bz: java.lang.String g()>();

        if $r5 == null goto label07;

     label03:
        $r3 = $r4[$i0];

        $r5 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r8 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r7 = virtualinvoke $r8.<com.adcolony.sdk.bz: java.lang.String g()>();

        $z0 = staticinvoke <com.adcolony.sdk.co: boolean a(java.lang.String,java.lang.String,android.content.Context)>($r5, $r7, $r0);

     label04:
        if $z0 == 0 goto label07;

     label05:
        $r3 = $r4[$i0];

        $r5 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

     label06:
        $r1 = $r5;

     label07:
        $i0 = $i0 + 1;

        goto label02;

     label08:
        $r9 := @caughtexception;

        $r5 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer7064 = "failed to read file: ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7064);

        $r3 = $r4[$i0];

        $r7 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer7061 = 1;

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r5, $r7, varReplacer7061);

        $r5 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        varReplacer7063 = "Caught Exception->";

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7063);

        $r7 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r5, $r7, $r9);

        $r8 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r10 = virtualinvoke $r8.<com.adcolony.sdk.bz: java.util.ArrayList h()>();

        if $r10 == null goto label07;

        $r8 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r10 = virtualinvoke $r8.<com.adcolony.sdk.bz: java.util.ArrayList h()>();

        $i1 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label07;

        $r8 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r10 = virtualinvoke $r8.<com.adcolony.sdk.bz: java.util.ArrayList h()>();

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label09:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r12;

     label10:
        $r8 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r5 = virtualinvoke $r8.<com.adcolony.sdk.bz: java.lang.String c(java.lang.String)>($r5);

        $z0 = staticinvoke <com.adcolony.sdk.co: boolean a(java.lang.String,java.lang.String,android.content.Context)>($r1, $r5, $r0);

     label11:
        if $z0 == 0 goto label18;

     label12:
        $r3 = $r4[$i0];

        $r5 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>();

     label13:
        $r1 = $r5;

     label14:
        $z0 = 0;

     label15:
        if $z0 != 0 goto label09;

        goto label07;

     label16:
        $r13 := @caughtexception;

        $z0 = 1;

        goto label15;

     label17:
        $r1 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        varReplacer7057 = "no files found";

        varReplacer7058 = 1;

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r1, varReplacer7057, varReplacer7058);

        varReplacer7059 = null;

        return varReplacer7059;

     label18:
        goto label14;

     label19:
        goto label07;

     label20:
        varReplacer7065 = null;

        return varReplacer7065;

     label21:
        return $r1;

        catch java.lang.Exception from label03 to label04 with label08;
        catch java.lang.Exception from label05 to label06 with label08;
        catch java.lang.Exception from label10 to label11 with label16;
        catch java.lang.Exception from label12 to label13 with label16;
    }

    static java.lang.String a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2, $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        javax.crypto.Mac $r5;
        java.lang.StringBuffer $r6;
        int $i0, $i1;
        byte $b2;
        short $s3;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        if $r1 == null goto label19;

        if $r0 == null goto label19;

     label01:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

     label02:
        $r4 = new javax.crypto.spec.SecretKeySpec;

     label03:
        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, "HmacSHA1");

        $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacSHA1");

        virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r4);

        $r2 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2);

     label04:
        $r6 = new java.lang.StringBuffer;

     label05:
        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

     label06:
        $i0 = 0;

     label07:
        $i1 = lengthof $r2;

     label08:
        if $i0 >= $i1 goto label16;

     label09:
        $b2 = $r2[$i0];

     label10:
        $s3 = $b2 & 255;

     label11:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label12:
        if $i1 != 1 goto label14;

     label13:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label14:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label15:
        $i0 = $i0 + 1;

        goto label07;

     label16:
        $r0 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

     label17:
        return $r0;

     label18:
        $r7 := @caughtexception;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

        $r1 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r1, $r7);

        return "";

     label19:
        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r0, "Empty secret key signing HMAC", 1);

        return "";

        catch java.lang.Exception from label01 to label02 with label18;
        catch java.lang.Exception from label03 to label04 with label18;
        catch java.lang.Exception from label05 to label06 with label18;
        catch java.lang.Exception from label07 to label08 with label18;
        catch java.lang.Exception from label09 to label10 with label18;
        catch java.lang.Exception from label11 to label12 with label18;
        catch java.lang.Exception from label13 to label15 with label18;
        catch java.lang.Exception from label16 to label17 with label18;
    }

    static java.lang.String a(java.lang.String, java.lang.String, java.lang.String, java.util.ArrayList)
    {
        java.lang.String $r0, $r1, $r2, $r5, $r6;
        java.util.ArrayList $r3, r31;
        java.util.UUID $r4;
        long $l0;
        java.util.TreeMap $r7, r27;
        boolean $z0, $z1;
        java.util.Set $r8;
        java.util.Iterator $r9;
        java.lang.Object $r10;
        java.util.Map$Entry $r11;
        java.lang.Throwable $r12, $r15, $r17, $r24, $r25;
        java.lang.StringBuilder $r13, $r16, r29;
        com.adcolony.sdk.co$1 $r14, r28;
        java.lang.Object[] $r18;
        byte[] $r19, $r21;
        com.adcolony.sdk.bz $r20;
        javax.crypto.spec.SecretKeySpec $r22, r30;
        javax.crypto.Mac $r23;
        java.lang.Exception $r26;
        java.io.UnsupportedEncodingException r32;
        java.security.NoSuchAlgorithmException r33;
        java.security.InvalidKeyException r34;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.util.ArrayList;

        $r4 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r5 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("-", "");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l0 = $l0 / 1000L;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        r27 = new java.util.TreeMap;

        $r7 = r27;

        specialinvoke r27.<java.util.TreeMap: void <init>()>();

     label01:
        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("POST");

     label02:
        if $z0 == 0 goto label03;

     label03:
        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("oauth_consumer_key", $r1);

        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("oauth_nonce", $r5);

        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("oauth_signature_method", "HMAC-SHA1");

        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("oauth_timestamp", $r6);

        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("oauth_version", "1.0");

        $r8 = virtualinvoke $r7.<java.util.TreeMap: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z0 == 0 goto label12;

     label06:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label07:
        $r11 = (java.util.Map$Entry) $r10;

     label08:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label09:
        goto label04;

     label10:
        $r12 := @caughtexception;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

        r32 = (java.io.UnsupportedEncodingException) $r12;

        $r1 = virtualinvoke r32.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = (java.lang.Exception) $r12;

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r1, $r26);

     label11:
        return null;

     label12:
        r28 = new com.adcolony.sdk.co$1;

        $r14 = r28;

     label13:
        specialinvoke r28.<com.adcolony.sdk.co$1: void <init>()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r3, $r14);

     label14:
        $r16 = new java.lang.StringBuilder;

        $r13 = $r16;

     label15:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label16:
        $z0 = 1;

     label17:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label18:
        if $z1 == 0 goto label40;

     label19:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label20:
        $r11 = (java.util.Map$Entry) $r10;

     label21:
        if $z0 == 0 goto label28;

        $z0 = 0;

     label22:
        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getKey()>();

     label23:
        $r1 = (java.lang.String) $r10;

     label24:
        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getValue()>();

     label25:
        $r1 = (java.lang.String) $r10;

     label26:
        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

     label27:
        goto label17;

     label28:
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label29:
        goto label22;

     label30:
        $r15 := @caughtexception;

     label31:
        $r1 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

     label32:
        r29 = new java.lang.StringBuilder;

        $r16 = r29;

     label33:
        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

     label34:
        r32 = (java.io.UnsupportedEncodingException) $r15;

     label35:
        $r5 = virtualinvoke r32.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label36:
        $r26 = (java.lang.Exception) $r15;

     label37:
        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r1, $r5, $r26);

     label38:
        goto label27;

     label39:
        $r17 := @caughtexception;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

        r33 = (java.security.NoSuchAlgorithmException) $r17;

        $r1 = virtualinvoke r33.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = (java.lang.Exception) $r17;

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r1, $r26);

        goto label11;

     label40:
        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "UTF-8");

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("%2B", "%2520");

        $r2 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r2, "UTF-8");

     label41:
        $r18 = newarray (java.lang.Object)[3];

        $r18[0] = $r0;

        $r18[1] = $r2;

        $r18[2] = $r1;

     label42:
        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s&%s&%s", $r18);

        $r19 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label43:
        $r16 = new java.lang.StringBuilder;

        $r13 = $r16;

     label44:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r20 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r0 = virtualinvoke $r20.<com.adcolony.sdk.bz: java.lang.String g()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r0 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label45:
        r30 = new javax.crypto.spec.SecretKeySpec;

        $r22 = r30;

     label46:
        specialinvoke r30.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r21, "HmacSHA1");

        $r23 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacSHA1");

        virtualinvoke $r23.<javax.crypto.Mac: void init(java.security.Key)>($r22);

        $r19 = virtualinvoke $r23.<javax.crypto.Mac: byte[] doFinal(byte[])>($r19);

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r19, 2);

     label47:
        r31 = new java.util.ArrayList;

        $r3 = r31;

     label48:
        specialinvoke r31.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r7.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("oauth_signature", $r0);

        $r8 = virtualinvoke $r7.<java.util.TreeMap: java.util.Set entrySet()>();

        $r9 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label49:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label50:
        if $z0 == 0 goto label56;

     label51:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label52:
        $r11 = (java.util.Map$Entry) $r10;

     label53:
        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

     label54:
        goto label49;

     label55:
        $r24 := @caughtexception;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

        r34 = (java.security.InvalidKeyException) $r24;

        $r1 = virtualinvoke r34.<java.security.InvalidKeyException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = (java.lang.Exception) $r24;

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r1, $r26);

        goto label11;

     label56:
        $r16 = new java.lang.StringBuilder;

        $r13 = $r16;

     label57:
        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label58:
        $z0 = 1;

     label59:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label60:
        if $z1 == 0 goto label82;

     label61:
        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

     label62:
        $r11 = (java.util.Map$Entry) $r10;

     label63:
        if $z0 == 0 goto label70;

        $z0 = 0;

     label64:
        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getKey()>();

     label65:
        $r0 = (java.lang.String) $r10;

     label66:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r10 = interfaceinvoke $r11.<java.util.Map$Entry: java.lang.Object getValue()>();

     label67:
        $r0 = (java.lang.String) $r10;

     label68:
        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "UTF-8");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

     label69:
        goto label59;

     label70:
        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label71:
        goto label64;

     label72:
        $r25 := @caughtexception;

     label73:
        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

     label74:
        r29 = new java.lang.StringBuilder;

        $r16 = r29;

     label75:
        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

     label76:
        r32 = (java.io.UnsupportedEncodingException) $r25;

     label77:
        $r1 = virtualinvoke r32.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label78:
        $r26 = (java.lang.Exception) $r25;

     label79:
        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r1, $r26);

     label80:
        goto label69;

     label81:
        $r26 := @caughtexception;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

        $r1 = virtualinvoke $r26.<java.lang.Exception: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r1, $r26);

        goto label11;

     label82:
        r29 = new java.lang.StringBuilder;

        $r16 = r29;

     label83:
        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OAuth ");

        $r0 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label84:
        return $r0;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label10;
        catch java.io.UnsupportedEncodingException from label03 to label05 with label10;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label10;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label39;
        catch java.security.NoSuchAlgorithmException from label03 to label05 with label39;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label39;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label39;
        catch java.security.InvalidKeyException from label01 to label02 with label55;
        catch java.security.InvalidKeyException from label03 to label05 with label55;
        catch java.security.InvalidKeyException from label06 to label07 with label55;
        catch java.security.InvalidKeyException from label08 to label09 with label55;
        catch java.lang.Exception from label01 to label02 with label81;
        catch java.lang.Exception from label03 to label05 with label81;
        catch java.lang.Exception from label06 to label09 with label81;
        catch java.io.UnsupportedEncodingException from label13 to label14 with label10;
        catch java.io.UnsupportedEncodingException from label15 to label16 with label10;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label10;
        catch java.io.UnsupportedEncodingException from label19 to label20 with label10;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label39;
        catch java.security.NoSuchAlgorithmException from label15 to label16 with label39;
        catch java.security.NoSuchAlgorithmException from label17 to label18 with label39;
        catch java.security.NoSuchAlgorithmException from label19 to label20 with label39;
        catch java.security.InvalidKeyException from label13 to label14 with label55;
        catch java.security.InvalidKeyException from label15 to label16 with label55;
        catch java.security.InvalidKeyException from label17 to label18 with label55;
        catch java.security.InvalidKeyException from label19 to label20 with label55;
        catch java.lang.Exception from label13 to label14 with label81;
        catch java.lang.Exception from label15 to label16 with label81;
        catch java.lang.Exception from label17 to label18 with label81;
        catch java.lang.Exception from label19 to label21 with label81;
        catch java.io.UnsupportedEncodingException from label22 to label23 with label30;
        catch java.io.UnsupportedEncodingException from label24 to label25 with label30;
        catch java.io.UnsupportedEncodingException from label26 to label27 with label30;
        catch java.security.NoSuchAlgorithmException from label22 to label23 with label39;
        catch java.security.NoSuchAlgorithmException from label24 to label25 with label39;
        catch java.security.NoSuchAlgorithmException from label26 to label27 with label39;
        catch java.security.InvalidKeyException from label22 to label23 with label55;
        catch java.security.InvalidKeyException from label24 to label25 with label55;
        catch java.security.InvalidKeyException from label26 to label27 with label55;
        catch java.lang.Exception from label22 to label27 with label81;
        catch java.io.UnsupportedEncodingException from label28 to label29 with label10;
        catch java.io.UnsupportedEncodingException from label31 to label32 with label10;
        catch java.io.UnsupportedEncodingException from label33 to label34 with label10;
        catch java.io.UnsupportedEncodingException from label35 to label36 with label10;
        catch java.io.UnsupportedEncodingException from label37 to label38 with label10;
        catch java.security.NoSuchAlgorithmException from label28 to label29 with label39;
        catch java.security.NoSuchAlgorithmException from label31 to label32 with label39;
        catch java.security.NoSuchAlgorithmException from label33 to label34 with label39;
        catch java.security.NoSuchAlgorithmException from label35 to label36 with label39;
        catch java.security.NoSuchAlgorithmException from label37 to label38 with label39;
        catch java.security.InvalidKeyException from label28 to label29 with label55;
        catch java.security.InvalidKeyException from label31 to label32 with label55;
        catch java.security.InvalidKeyException from label33 to label34 with label55;
        catch java.security.InvalidKeyException from label35 to label36 with label55;
        catch java.security.InvalidKeyException from label37 to label38 with label55;
        catch java.lang.Exception from label28 to label29 with label81;
        catch java.lang.Exception from label31 to label32 with label81;
        catch java.lang.Exception from label33 to label38 with label81;
        catch java.io.UnsupportedEncodingException from label40 to label41 with label10;
        catch java.io.UnsupportedEncodingException from label42 to label43 with label10;
        catch java.io.UnsupportedEncodingException from label44 to label45 with label10;
        catch java.io.UnsupportedEncodingException from label46 to label47 with label10;
        catch java.io.UnsupportedEncodingException from label48 to label50 with label10;
        catch java.io.UnsupportedEncodingException from label51 to label52 with label10;
        catch java.io.UnsupportedEncodingException from label53 to label54 with label10;
        catch java.security.NoSuchAlgorithmException from label40 to label41 with label39;
        catch java.security.NoSuchAlgorithmException from label42 to label43 with label39;
        catch java.security.NoSuchAlgorithmException from label44 to label45 with label39;
        catch java.security.NoSuchAlgorithmException from label46 to label47 with label39;
        catch java.security.NoSuchAlgorithmException from label48 to label50 with label39;
        catch java.security.NoSuchAlgorithmException from label51 to label52 with label39;
        catch java.security.NoSuchAlgorithmException from label53 to label54 with label39;
        catch java.security.InvalidKeyException from label40 to label41 with label55;
        catch java.security.InvalidKeyException from label42 to label43 with label55;
        catch java.security.InvalidKeyException from label44 to label45 with label55;
        catch java.security.InvalidKeyException from label46 to label47 with label55;
        catch java.security.InvalidKeyException from label48 to label50 with label55;
        catch java.security.InvalidKeyException from label51 to label52 with label55;
        catch java.security.InvalidKeyException from label53 to label54 with label55;
        catch java.lang.Exception from label40 to label43 with label81;
        catch java.lang.Exception from label44 to label45 with label81;
        catch java.lang.Exception from label46 to label47 with label81;
        catch java.lang.Exception from label48 to label50 with label81;
        catch java.lang.Exception from label51 to label54 with label81;
        catch java.io.UnsupportedEncodingException from label57 to label58 with label10;
        catch java.io.UnsupportedEncodingException from label59 to label60 with label10;
        catch java.io.UnsupportedEncodingException from label61 to label62 with label10;
        catch java.security.NoSuchAlgorithmException from label57 to label58 with label39;
        catch java.security.NoSuchAlgorithmException from label59 to label60 with label39;
        catch java.security.NoSuchAlgorithmException from label61 to label62 with label39;
        catch java.security.InvalidKeyException from label57 to label58 with label55;
        catch java.security.InvalidKeyException from label59 to label60 with label55;
        catch java.security.InvalidKeyException from label61 to label62 with label55;
        catch java.lang.Exception from label57 to label58 with label81;
        catch java.lang.Exception from label59 to label60 with label81;
        catch java.lang.Exception from label61 to label63 with label81;
        catch java.io.UnsupportedEncodingException from label64 to label65 with label72;
        catch java.io.UnsupportedEncodingException from label66 to label67 with label72;
        catch java.io.UnsupportedEncodingException from label68 to label69 with label72;
        catch java.security.NoSuchAlgorithmException from label64 to label65 with label39;
        catch java.security.NoSuchAlgorithmException from label66 to label67 with label39;
        catch java.security.NoSuchAlgorithmException from label68 to label69 with label39;
        catch java.security.InvalidKeyException from label64 to label65 with label55;
        catch java.security.InvalidKeyException from label66 to label67 with label55;
        catch java.security.InvalidKeyException from label68 to label69 with label55;
        catch java.lang.Exception from label64 to label69 with label81;
        catch java.io.UnsupportedEncodingException from label70 to label71 with label10;
        catch java.io.UnsupportedEncodingException from label73 to label74 with label10;
        catch java.io.UnsupportedEncodingException from label75 to label76 with label10;
        catch java.io.UnsupportedEncodingException from label77 to label78 with label10;
        catch java.io.UnsupportedEncodingException from label79 to label80 with label10;
        catch java.security.NoSuchAlgorithmException from label70 to label71 with label39;
        catch java.security.NoSuchAlgorithmException from label73 to label74 with label39;
        catch java.security.NoSuchAlgorithmException from label75 to label76 with label39;
        catch java.security.NoSuchAlgorithmException from label77 to label78 with label39;
        catch java.security.NoSuchAlgorithmException from label79 to label80 with label39;
        catch java.security.InvalidKeyException from label70 to label71 with label55;
        catch java.security.InvalidKeyException from label73 to label74 with label55;
        catch java.security.InvalidKeyException from label75 to label76 with label55;
        catch java.security.InvalidKeyException from label77 to label78 with label55;
        catch java.security.InvalidKeyException from label79 to label80 with label55;
        catch java.lang.Exception from label70 to label71 with label81;
        catch java.lang.Exception from label73 to label74 with label81;
        catch java.lang.Exception from label75 to label80 with label81;
        catch java.io.UnsupportedEncodingException from label83 to label84 with label10;
        catch java.security.NoSuchAlgorithmException from label83 to label84 with label39;
        catch java.security.InvalidKeyException from label83 to label84 with label55;
        catch java.lang.Exception from label83 to label84 with label81;
    }

    static java.lang.String a(java.lang.String, java.util.Map, java.lang.String[])
    {
        java.lang.String $r0, $r4;
        java.util.Map $r1;
        java.lang.String[] $r2;
        java.util.HashMap $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        $r2 := @parameter2: java.lang.String[];

        if $r1 == null goto label1;

        if $r0 != null goto label2;

     label1:
        return "";

     label2:
        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>($r1);

        $r4 = staticinvoke <com.adcolony.sdk.co: java.lang.String a(java.util.Map,java.lang.String[])>($r3, $r2);

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String a(java.lang.String,java.lang.String)>($r4, $r0);

        return $r0;
    }

    static java.lang.String a(java.util.List)
    {
        java.util.List $r0;
        java.lang.String $r1;
        org.json.JSONArray $r2;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.util.List;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = new org.json.JSONArray;

     label2:
        specialinvoke $r2.<org.json.JSONArray: void <init>(java.util.Collection)>($r0);

        $r1 = virtualinvoke $r2.<org.json.JSONArray: java.lang.String toString()>();

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static java.lang.String a(java.util.Map)
    {
        java.util.Map $r0;
        java.lang.String $r1;
        org.json.JSONObject $r2;
        java.lang.Exception $r3;

        $r0 := @parameter0: java.util.Map;

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = new org.json.JSONObject;

     label2:
        specialinvoke $r2.<org.json.JSONObject: void <init>(java.util.Map)>($r0);

        $r1 = virtualinvoke $r2.<org.json.JSONObject: java.lang.String toString()>();

     label3:
        return $r1;

     label4:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    static java.lang.String a(java.util.Map, java.lang.String[])
    {
        java.util.Map $r0;
        java.lang.String[] $r1;
        int $i0, $i1;
        java.lang.String $r2;
        boolean $z0;
        java.util.TreeSet $r3;
        java.util.Set $r4;
        java.lang.StringBuilder $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String[];

        if $r0 != null goto label1;

        return null;

     label1:
        if $r1 == null goto label4;

        $i0 = lengthof $r1;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label4;

        $r2 = $r1[$i1];

        $z0 = interfaceinvoke $r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r2);

     label3:
        $i1 = $i1 + 1;

        goto label2;

     label4:
        $r0 = staticinvoke <com.adcolony.sdk.co: java.util.Map c(java.util.Map)>($r0);

        $r3 = new java.util.TreeSet;

        $r4 = interfaceinvoke $r0.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r3.<java.util.TreeSet: void <init>(java.util.Collection)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = interfaceinvoke $r3.<java.util.SortedSet: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (java.lang.String) $r7;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        goto label5;

     label6:
        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    static java.util.List a(java.lang.String)
    {
        java.lang.String $r0, $r5;
        org.json.JSONArray $r1;
        java.lang.Object $r2;
        java.util.List $r3;
        org.json.JSONException $r4;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.json.JSONArray;

     label1:
        specialinvoke $r1.<org.json.JSONArray: void <init>(java.lang.String)>($r0);

     label2:
        $r2 = <org.json.JSONObject: java.lang.Object NULL>;

        if $r0 == $r2 goto label6;

     label3:
        $r3 = staticinvoke <com.adcolony.sdk.co: java.util.List a(org.json.JSONArray)>($r1);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r5 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad json: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r5, $r0, 1);

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

        $r5 = virtualinvoke $r4.<org.json.JSONException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r5, $r4);

     label6:
        return null;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    static java.util.List a(org.json.JSONArray)
    {
        org.json.JSONArray $r0, $r4;
        java.util.ArrayList $r1;
        int $i0, $i1;
        java.lang.Object $r2, $r3;
        boolean $z0;
        java.util.List $r5;
        java.lang.String $r6, $r8;
        java.lang.StringBuilder $r7;
        org.json.JSONObject $r9;
        java.util.Map $r10;
        org.json.JSONException $r11;

        $r0 := @parameter0: org.json.JSONArray;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        if $r0 != null goto label01;

        return $r1;

     label01:
        $i0 = 0;

     label02:
        $i1 = virtualinvoke $r0.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label18;

     label03:
        $r2 = virtualinvoke $r0.<org.json.JSONArray: java.lang.Object get(int)>($i0);

     label04:
        $r3 = $r2;

        $z0 = $r2 instanceof org.json.JSONArray;

        if $z0 == 0 goto label12;

        $r4 = (org.json.JSONArray) $r2;

     label05:
        $r5 = staticinvoke <com.adcolony.sdk.co: java.util.List a(org.json.JSONArray)>($r4);

     label06:
        $r3 = $r5;

     label07:
        if $r3 != null goto label15;

     label08:
        $r6 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

     label09:
        $r7 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad array: ");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r6, $r8, 1);

     label11:
        return null;

     label12:
        $z0 = $r2 instanceof org.json.JSONObject;

        if $z0 == 0 goto label07;

        $r9 = (org.json.JSONObject) $r2;

     label13:
        $r10 = staticinvoke <com.adcolony.sdk.co: java.util.Map a(org.json.JSONObject)>($r9);

     label14:
        $r3 = $r10;

        goto label07;

     label15:
        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

     label16:
        $i0 = $i0 + 1;

        goto label02;

     label17:
        $r11 := @caughtexception;

        $r6 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad array:");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Exception->");

        $r8 = virtualinvoke $r11.<org.json.JSONException: java.lang.String getMessage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r6, $r8, $r11);

        return null;

     label18:
        return $r1;

        catch org.json.JSONException from label03 to label04 with label17;
        catch org.json.JSONException from label05 to label06 with label17;
        catch org.json.JSONException from label08 to label09 with label17;
        catch org.json.JSONException from label10 to label11 with label17;
        catch org.json.JSONException from label13 to label14 with label17;
        catch org.json.JSONException from label15 to label16 with label17;
    }

    static java.util.Map a(java.lang.String, android.content.Context)
    {
        java.lang.String $r0, $r4, $r9, varReplacer7054, varReplacer7055;
        android.content.Context $r1;
        java.lang.Object $r2, $r12;
        com.adcolony.sdk.bz $r3;
        java.util.Map $r5;
        java.lang.Throwable $r6;
        java.lang.Exception $r7, $r13;
        java.lang.StringBuilder $r8, r15;
        java.util.ArrayList $r10;
        int $i0, varReplacer7056;
        java.util.Iterator $r11;
        boolean $z0;
        java.util.HashMap r14;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        $r2 = null;

        entermonitor class "Lcom/adcolony/sdk/co;";

        if $r1 != null goto label02;

     label01:
        exitmonitor class "Lcom/adcolony/sdk/co;";

        $r5 = (java.util.Map) $r2;

        return $r5;

     label02:
        $r3 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r4 = virtualinvoke $r3.<com.adcolony.sdk.bz: java.lang.String g()>();

     label03:
        if $r4 == null goto label06;

     label04:
        $r3 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r4 = virtualinvoke $r3.<com.adcolony.sdk.bz: java.lang.String g()>();

        $r5 = staticinvoke <com.adcolony.sdk.co: java.util.Map b(java.lang.String,java.lang.String,android.content.Context)>($r4, $r0, $r1);

     label05:
        $r2 = $r5;

     label06:
        if $r2 != null goto label01;

     label07:
        r14 = new java.util.HashMap;

        $r2 = r14;

        specialinvoke r14.<java.util.HashMap: void <init>()>();

     label08:
        goto label01;

     label09:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/adcolony/sdk/co;";

        throw $r6;

     label10:
        $r7 := @caughtexception;

     label11:
        $r4 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        varReplacer7055 = "incorrect key";

        varReplacer7056 = 1;

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r4, varReplacer7055, varReplacer7056);

        $r4 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        varReplacer7054 = "Caught Exception->";

        $r8 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7054);

        $r9 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r4, $r9, $r7);

        $r3 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r10 = virtualinvoke $r3.<com.adcolony.sdk.bz: java.util.ArrayList h()>();

        if $r10 == null goto label06;

        $r3 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r10 = virtualinvoke $r3.<com.adcolony.sdk.bz: java.util.ArrayList h()>();

        $i0 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label06;

        $r3 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r10 = virtualinvoke $r3.<com.adcolony.sdk.bz: java.util.ArrayList h()>();

        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

        $r2 = null;

     label12:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label20;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r12;

     label13:
        $r3 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r4 = virtualinvoke $r3.<com.adcolony.sdk.bz: java.lang.String c(java.lang.String)>($r4);

        $r5 = staticinvoke <com.adcolony.sdk.co: java.util.Map b(java.lang.String,java.lang.String,android.content.Context)>($r4, $r0, $r1);

     label14:
        $r2 = $r5;

        $z0 = 0;

     label15:
        if $z0 != 0 goto label19;

     label16:
        $r5 = (java.util.Map) $r2;

        staticinvoke <com.adcolony.sdk.co: void a(java.util.Map,java.lang.String,android.content.Context)>($r5, $r0, $r1);

     label17:
        goto label06;

     label18:
        $r13 := @caughtexception;

        $z0 = 1;

        goto label15;

     label19:
        goto label12;

     label20:
        goto label06;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label13 with label09;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Throwable from label13 to label14 with label09;
        catch java.lang.Throwable from label16 to label17 with label09;
    }

    static java.util.Map a(java.lang.String, boolean)
    {
        java.lang.String $r0, $r4;
        boolean $z0, $z1;
        java.lang.Object $r1;
        com.adcolony.sdk.bz $r2;
        android.content.Context $r3;
        java.util.Map $r5;
        java.lang.Throwable $r6;
        java.util.HashMap r7;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r1 = null;

        entermonitor class "Lcom/adcolony/sdk/co;";

     label1:
        $r2 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r3 = virtualinvoke $r2.<com.adcolony.sdk.bz: android.content.Context l()>();

     label2:
        if $r3 != null goto label4;

     label3:
        exitmonitor class "Lcom/adcolony/sdk/co;";

        $r5 = (java.util.Map) $r1;

        return $r5;

     label4:
        $r2 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r3 = virtualinvoke $r2.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r4 = staticinvoke <com.adcolony.sdk.co: java.lang.String a(android.content.Context)>($r3);

        if $r4 == null goto label7;

        $r2 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r3 = virtualinvoke $r2.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r5 = staticinvoke <com.adcolony.sdk.co: java.util.Map a(java.lang.String,android.content.Context)>($r4, $r3);

        if $r5 == null goto label5;

        $z1 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

        if $z1 == 0 goto label5;

        $r1 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r0);

        $r1 = (java.util.Map) $r1;

        goto label3;

     label5:
        goto label3;

     label6:
        $r6 := @caughtexception;

        exitmonitor class "Lcom/adcolony/sdk/co;";

        throw $r6;

     label7:
        goto label3;

     label8:
        goto label3;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label6 with label6;
        catch java.lang.Throwable from label8 to label8 with label6;
    }

    static java.util.Map a(org.json.JSONObject)
    {
        org.json.JSONObject $r0, $r10;
        java.util.HashMap $r1;
        java.util.Iterator $r2;
        boolean $z0;
        java.lang.Object $r3, $r5;
        java.lang.String $r4, $r8;
        org.json.JSONArray $r6;
        java.util.List $r7;
        java.lang.StringBuilder $r9;
        java.util.Map $r11;
        org.json.JSONException $r12;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        if $r0 != null goto label01;

        return $r1;

     label01:
        $r2 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label02:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label18;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

     label03:
        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r4);

     label04:
        $r5 = $r3;

        $z0 = $r3 instanceof org.json.JSONArray;

        if $z0 == 0 goto label12;

        $r6 = (org.json.JSONArray) $r3;

     label05:
        $r7 = staticinvoke <com.adcolony.sdk.co: java.util.List a(org.json.JSONArray)>($r6);

     label06:
        $r5 = $r7;

     label07:
        if $r5 != null goto label15;

     label08:
        $r8 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

     label09:
        $r9 = new java.lang.StringBuilder;

     label10:
        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad object: key: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("object: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r8, $r4, 1);

     label11:
        return null;

     label12:
        $z0 = $r3 instanceof org.json.JSONObject;

        if $z0 == 0 goto label07;

        $r10 = (org.json.JSONObject) $r3;

     label13:
        $r11 = staticinvoke <com.adcolony.sdk.co: java.util.Map a(org.json.JSONObject)>($r10);

     label14:
        $r5 = $r11;

        goto label07;

     label15:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5);

     label16:
        goto label02;

     label17:
        $r12 := @caughtexception;

        $r8 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad object: ");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Exception->");

        $r4 = virtualinvoke $r12.<org.json.JSONException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r8, $r4, $r12);

        return null;

     label18:
        return $r1;

        catch org.json.JSONException from label03 to label04 with label17;
        catch org.json.JSONException from label05 to label06 with label17;
        catch org.json.JSONException from label08 to label09 with label17;
        catch org.json.JSONException from label10 to label11 with label17;
        catch org.json.JSONException from label13 to label14 with label17;
        catch org.json.JSONException from label15 to label16 with label17;
    }

    static void a(long)
    {
        long $l0;
        com.adcolony.sdk.bz $r0;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        virtualinvoke $r0.<com.adcolony.sdk.bz: void a(long)>($l0);

        return;
    }

    public static void a(android.webkit.WebView, java.lang.String)
    {
        android.webkit.WebView $r0;
        java.lang.String $r1;
        boolean $z0;
        android.webkit.WebSettings $r2;

        $r0 := @parameter0: android.webkit.WebView;

        $r1 := @parameter1: java.lang.String;

        if $r0 == null goto label4;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = staticinvoke <com.adcolony.sdk.co: boolean l()>();

        if $z0 != 0 goto label3;

        $r2 = virtualinvoke $r0.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r2.<android.webkit.WebSettings: void setCacheMode(int)>(1);

     label2:
        virtualinvoke $r0.<android.webkit.WebView: void loadUrl(java.lang.String)>($r1);

        return;

     label3:
        $r2 = virtualinvoke $r0.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        virtualinvoke $r2.<android.webkit.WebSettings: void setCacheMode(int)>(-1);

        goto label2;

     label4:
        return;
    }

    static void a(java.lang.String, java.util.Map)
    {
        java.lang.String $r0, $r4, $r8;
        java.util.Map $r1, $r5;
        com.adcolony.sdk.bz $r2;
        android.content.Context $r3;
        java.lang.Object $r6;
        java.lang.Exception $r7;
        java.lang.Throwable $r9;
        java.util.HashMap r10;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.util.Map;

        entermonitor class "Lcom/adcolony/sdk/co;";

     label01:
        $r2 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r3 = virtualinvoke $r2.<com.adcolony.sdk.bz: android.content.Context l()>();

        if $r3 != null goto label03;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r0, "application context is null, cannot save new entry", 1);

     label02:
        exitmonitor class "Lcom/adcolony/sdk/co;";

        return;

     label03:
        $r2 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r3 = virtualinvoke $r2.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r4 = staticinvoke <com.adcolony.sdk.co: java.lang.String a(android.content.Context)>($r3);

     label04:
        if $r4 == null goto label10;

     label05:
        $r2 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r3 = virtualinvoke $r2.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r5 = staticinvoke <com.adcolony.sdk.co: java.util.Map a(java.lang.String,android.content.Context)>($r4, $r3);

     label06:
        $r6 = $r5;

     label07:
        $r5 = (java.util.Map) $r6;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r1);

        $r2 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r3 = virtualinvoke $r2.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r1 = (java.util.Map) $r6;

        staticinvoke <com.adcolony.sdk.co: void a(java.util.Map,java.lang.String,android.content.Context)>($r1, $r4, $r3);

     label08:
        goto label02;

     label09:
        $r7 := @caughtexception;

        goto label02;

     label10:
        $r8 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r8, "filestore is null, saving new entry", 1);

     label11:
        r10 = new java.util.HashMap;

        $r6 = r10;

     label12:
        specialinvoke r10.<java.util.HashMap: void <init>()>();

     label13:
        goto label07;

     label14:
        $r9 := @caughtexception;

        exitmonitor class "Lcom/adcolony/sdk/co;";

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Exception from label10 to label11 with label09;
        catch java.lang.Exception from label12 to label13 with label09;
        catch java.lang.Throwable from label03 to label13 with label14;
    }

    static void a(java.util.Map, java.lang.String)
    {
        java.util.Map $r0;
        java.lang.String $r1, $r7;
        com.adcolony.sdk.bz $r2;
        android.content.Context $r3;
        java.io.FileOutputStream $r4;
        java.io.ObjectOutputStream $r5, r11;
        java.lang.Throwable $r6, $r9, $r10;
        java.lang.StringBuilder $r8, r12;
        java.io.FileNotFoundException r13;
        java.lang.Exception r14;
        java.io.IOException r15;

        $r0 := @parameter0: java.util.Map;

        $r1 := @parameter1: java.lang.String;

        entermonitor class "Lcom/adcolony/sdk/co;";

     label01:
        $r2 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r3 = virtualinvoke $r2.<com.adcolony.sdk.bz: android.content.Context l()>();

        if $r3 != null goto label03;

        $r1 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r1, "failed to save file due to context or filename error ", 1);

     label02:
        exitmonitor class "Lcom/adcolony/sdk/co;";

        return;

     label03:
        $r2 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r3 = virtualinvoke $r2.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>($r1, 0);

     label04:
        r11 = new java.io.ObjectOutputStream;

        $r5 = r11;

     label05:
        specialinvoke r11.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r4);

        virtualinvoke $r5.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r0);

        virtualinvoke $r5.<java.io.ObjectOutputStream: void flush()>();

        virtualinvoke $r5.<java.io.ObjectOutputStream: void close()>();

     label06:
        goto label02;

     label07:
        $r6 := @caughtexception;

     label08:
        $r7 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FILE ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NOT FOUND. Exception->");

        r13 = (java.io.FileNotFoundException) $r6;

        $r1 = virtualinvoke r13.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = (java.lang.Exception) $r6;

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r7, $r1, r14);

     label09:
        goto label02;

     label10:
        $r9 := @caughtexception;

        exitmonitor class "Lcom/adcolony/sdk/co;";

        throw $r9;

     label11:
        $r10 := @caughtexception;

     label12:
        $r1 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

        r15 = (java.io.IOException) $r10;

        $r7 = virtualinvoke r15.<java.io.IOException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = (java.lang.Exception) $r10;

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r1, $r7, r14);

     label13:
        goto label02;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.io.FileNotFoundException from label03 to label04 with label07;
        catch java.io.FileNotFoundException from label05 to label06 with label07;
        catch java.io.IOException from label03 to label04 with label11;
        catch java.io.IOException from label05 to label06 with label11;
        catch java.lang.Throwable from label03 to label06 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label12 to label13 with label10;
    }

    static void a(java.util.Map, java.lang.String, android.content.Context)
    {
        android.content.Context $r0;
        java.util.Map $r1;
        java.lang.String $r2, $r3, $r4, varReplacer7068, varReplacer7070, varReplacer7071, varReplacer7073, varReplacer7074, varReplacer7077;
        java.lang.StringBuilder $r5, r17;
        java.io.FileOutputStream $r6;
        com.adcolony.sdk.bz $r7;
        javax.crypto.SecretKey $r8;
        javax.crypto.Cipher $r9;
        javax.crypto.SealedObject $r10, r18;
        java.io.Serializable $r11;
        javax.crypto.CipherOutputStream $r12, r19;
        java.io.ObjectOutputStream $r13, r20;
        java.lang.Throwable $r14, $r15;
        java.lang.Exception $r16;
        java.io.FileNotFoundException r21;
        int varReplacer7069, varReplacer7072, varReplacer7075, varReplacer7076, varReplacer7078;

        nop;

        $r1 := @parameter0: java.util.Map;

        $r2 := @parameter1: java.lang.String;

        $r0 := @parameter2: android.content.Context;

        entermonitor class "Lcom/adcolony/sdk/co;";

        if $r2 != null goto label02;

     label01:
        $r3 = staticinvoke <com.adcolony.sdk.co: java.lang.String e()>();

        $r2 = $r3;

        $r4 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer7073 = "new fileName:";

        $r5 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7073);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer7078 = 1;

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r4, $r3, varReplacer7078);

     label02:
        $r4 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer7068 = "saveMap:";

        $r5 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7068);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer7075 = 1;

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r4, $r3, varReplacer7075);

     label03:
        varReplacer7076 = 0;

        $r6 = virtualinvoke $r0.<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>($r2, varReplacer7076);

     label04:
        $r7 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r2 = virtualinvoke $r7.<com.adcolony.sdk.bz: java.lang.String g()>();

     label05:
        if $r2 == null goto label13;

     label06:
        $r7 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r2 = virtualinvoke $r7.<com.adcolony.sdk.bz: java.lang.String g()>();

        $r8 = staticinvoke <com.adcolony.sdk.co: javax.crypto.SecretKey j(java.lang.String)>($r2);

        varReplacer7070 = "AES";

        $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7070);

        varReplacer7069 = 1;

        virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7069, $r8);

     label07:
        r18 = new javax.crypto.SealedObject;

        $r10 = r18;

     label08:
        $r11 = (java.io.Serializable) $r1;

        specialinvoke r18.<javax.crypto.SealedObject: void <init>(java.io.Serializable,javax.crypto.Cipher)>($r11, $r9);

     label09:
        r19 = new javax.crypto.CipherOutputStream;

        $r12 = r19;

     label10:
        specialinvoke r19.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r6, $r9);

     label11:
        r20 = new java.io.ObjectOutputStream;

        $r13 = r20;

     label12:
        specialinvoke r20.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r12);

        varReplacer7071 = "yvlr";

        virtualinvoke $r13.<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>(varReplacer7071);

        varReplacer7072 = 1;

        virtualinvoke $r13.<java.io.ObjectOutputStream: void writeInt(int)>(varReplacer7072);

        virtualinvoke $r13.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r10);

        virtualinvoke $r13.<java.io.ObjectOutputStream: void flush()>();

        virtualinvoke $r13.<java.io.ObjectOutputStream: void close()>();

     label13:
        exitmonitor class "Lcom/adcolony/sdk/co;";

        return;

     label14:
        $r14 := @caughtexception;

     label15:
        $r2 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer7074 = "File not found. Cannot save map. Exception->";

        $r5 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7074);

        r21 = (java.io.FileNotFoundException) $r14;

        $r4 = virtualinvoke r21.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = (java.lang.Exception) $r14;

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r2, $r4, $r16);

     label16:
        goto label13;

     label17:
        $r15 := @caughtexception;

        exitmonitor class "Lcom/adcolony/sdk/co;";

        throw $r15;

     label18:
        $r16 := @caughtexception;

     label19:
        $r2 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        varReplacer7077 = "Failed to save file. Caught Exception->";

        $r5 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7077);

        $r4 = virtualinvoke $r16.<java.lang.Exception: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r2, $r4, $r16);

     label20:
        goto label13;

        catch java.lang.Throwable from label01 to label03 with label17;
        catch java.io.FileNotFoundException from label03 to label04 with label14;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Exception from label06 to label07 with label18;
        catch java.lang.Exception from label08 to label09 with label18;
        catch java.lang.Exception from label10 to label11 with label18;
        catch java.lang.Exception from label12 to label13 with label18;
        catch java.lang.Throwable from label06 to label13 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label19 to label20 with label17;
    }

    static boolean a(java.lang.String, java.lang.String, android.content.Context) throws java.lang.Exception
    {
        java.lang.String $r0, $r1, varReplacer7081, varReplacer7082;
        android.content.Context $r2;
        javax.crypto.SecretKey $r3;
        javax.crypto.Cipher $r4;
        java.io.FileInputStream $r5;
        javax.crypto.CipherInputStream $r6;
        java.io.ObjectInputStream $r7;
        boolean $z0;
        int varReplacer7083;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.Context;

        $r3 = staticinvoke <com.adcolony.sdk.co: javax.crypto.SecretKey j(java.lang.String)>($r1);

        varReplacer7081 = "AES";

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7081);

        varReplacer7083 = 2;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7083, $r3);

        $r5 = virtualinvoke $r2.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>($r0);

        $r6 = new javax.crypto.CipherInputStream;

        specialinvoke $r6.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r4);

        $r7 = new java.io.ObjectInputStream;

        specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r6);

        $r0 = virtualinvoke $r7.<java.io.ObjectInputStream: java.lang.String readUTF()>();

        virtualinvoke $r7.<java.io.ObjectInputStream: int readInt()>();

        virtualinvoke $r7.<java.io.ObjectInputStream: void close()>();

        varReplacer7082 = "yvlr";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer7082);

        return $z0;
    }

    static int b()
    {
        com.adcolony.sdk.bz $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        java.lang.Exception $r4;
        int i0;

     label1:
        $r0 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r1 = virtualinvoke $r0.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r3.<android.util.DisplayMetrics: int heightPixels>;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.lang.String b(long)
    {
        long $l0;
        java.text.SimpleDateFormat $r0;
        java.util.TimeZone $r1;
        java.util.Date $r2;
        java.lang.String $r3;
        java.lang.Exception $r4;

        $l0 := @parameter0: long;

        $r0 = new java.text.SimpleDateFormat;

     label1:
        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r0.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r1);

     label2:
        $r2 = new java.util.Date;

     label3:
        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        $r3 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    static java.util.HashMap b(org.json.JSONObject) throws org.json.JSONException
    {
        org.json.JSONObject $r0, $r8;
        java.util.HashMap $r1, $r9;
        java.util.ArrayList $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.String $r5;
        java.io.Serializable $r6;
        org.json.JSONArray $r7;
        int $i0, $i1;

        nop;

        $r0 := @parameter0: org.json.JSONObject;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r3 = virtualinvoke $r0.<org.json.JSONObject: java.util.Iterator keys()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.String) $r4;

        $r4 = virtualinvoke $r0.<org.json.JSONObject: java.lang.Object get(java.lang.String)>($r5);

        $z0 = $r4 instanceof java.io.Serializable;

        if $z0 == 0 goto label2;

        $r6 = (java.io.Serializable) $r4;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r6);

        goto label1;

     label2:
        $z0 = $r4 instanceof org.json.JSONArray;

        if $z0 == 0 goto label5;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r7 = (org.json.JSONArray) $r4;

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r7.<org.json.JSONArray: int length()>();

        if $i0 >= $i1 goto label4;

        $r4 = virtualinvoke $r7.<org.json.JSONArray: java.lang.Object get(int)>($i0);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r2);

        goto label1;

     label5:
        $r8 = (org.json.JSONObject) $r4;

        $r9 = staticinvoke <com.adcolony.sdk.co: java.util.HashMap b(org.json.JSONObject)>($r8);

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r9);

        goto label1;

     label6:
        return $r1;
    }

    static java.util.Map b(java.lang.String)
    {
        java.lang.String $r0, $r5;
        org.json.JSONObject $r1;
        java.lang.Object $r2;
        java.util.Map $r3;
        org.json.JSONException $r4;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 = new org.json.JSONObject;

     label1:
        specialinvoke $r1.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label2:
        $r2 = <org.json.JSONObject: java.lang.Object NULL>;

        if $r0 == $r2 goto label6;

     label3:
        $r3 = staticinvoke <com.adcolony.sdk.co: java.util.Map a(org.json.JSONObject)>($r1);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r5 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad json: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r5, $r0, 1);

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

        $r5 = virtualinvoke $r4.<org.json.JSONException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r5, $r4);

     label6:
        return null;

        catch org.json.JSONException from label1 to label2 with label5;
        catch org.json.JSONException from label3 to label4 with label5;
    }

    static java.util.Map b(java.lang.String, java.lang.String, android.content.Context) throws java.lang.Exception
    {
        java.lang.String $r0, $r1, varReplacer7080;
        android.content.Context $r2;
        java.io.ObjectInputStream $r3;
        javax.crypto.SecretKey $r4;
        javax.crypto.Cipher $r5;
        java.io.FileInputStream $r6;
        javax.crypto.CipherInputStream $r7;
        java.lang.Object $r8;
        javax.crypto.SealedObject $r9;
        java.util.Map $r10;
        int varReplacer7079;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.Context;

        $r4 = staticinvoke <com.adcolony.sdk.co: javax.crypto.SecretKey j(java.lang.String)>($r0);

        varReplacer7080 = "AES";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7080);

        varReplacer7079 = 2;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7079, $r4);

        $r6 = virtualinvoke $r2.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>($r1);

        $r7 = new javax.crypto.CipherInputStream;

        specialinvoke $r7.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r5);

        $r3 = new java.io.ObjectInputStream;

        specialinvoke $r3.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r7);

        virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.String readUTF()>();

        virtualinvoke $r3.<java.io.ObjectInputStream: int readInt()>();

        $r8 = virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r9 = (javax.crypto.SealedObject) $r8;

        $r8 = virtualinvoke $r9.<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>($r5);

        $r10 = (java.util.Map) $r8;

        virtualinvoke $r3.<java.io.ObjectInputStream: void close()>();

        return $r10;
    }

    static int c()
    {
        com.adcolony.sdk.bz $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        java.lang.Exception $r4;
        int i0;

     label1:
        $r0 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r1 = virtualinvoke $r0.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r3.<android.util.DisplayMetrics: int widthPixels>;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.lang.String c(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.StringBuffer $r1;
        null_type varReplacer7118;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 != null goto label1;

        varReplacer7118 = null;

        return varReplacer7118;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>($r0);

        $r1 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer reverse()>();

        $r0 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;
    }

    static java.util.Map c(java.util.Map)
    {
        java.util.HashMap $r0, $r1, r15;
        java.lang.Object $r2;
        boolean $z0;
        java.util.Set $r3;
        java.util.Iterator $r4, $r8;
        java.util.Map$Entry $r5;
        java.lang.String $r6, $r10;
        java.util.Map $r7;
        java.lang.StringBuilder $r9, r16;
        java.lang.Exception $r11;
        java.util.ArrayList $r12;
        int $i0, $i1;
        java.lang.Boolean $r13;
        java.lang.Integer $r14;

        $r2 := @parameter0: java.util.Map;

        $r0 = new java.util.HashMap;

        $r1 = $r0;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

     label01:
        $r7 = (java.util.Map) $r2;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>();

     label02:
        if $z0 != 0 goto label47;

        r15 = new java.util.HashMap;

        $r0 = r15;

     label03:
        specialinvoke r15.<java.util.HashMap: void <init>()>();

        $r7 = (java.util.Map) $r2;

        $r3 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label05:
        if $z0 == 0 goto label46;

     label06:
        $r2 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r2;

        $r2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r6 = (java.lang.String) $r2;

        $r2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

     label07:
        $z0 = $r2 instanceof java.util.Map;

        if $z0 == 0 goto label20;

     label08:
        $r7 = (java.util.Map) $r2;

        $z0 = interfaceinvoke $r7.<java.util.Map: boolean isEmpty()>();

     label09:
        if $z0 != 0 goto label18;

     label10:
        $r3 = interfaceinvoke $r7.<java.util.Map: java.util.Set entrySet()>();

        $r8 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

     label12:
        if $z0 == 0 goto label04;

     label13:
        $r2 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r2;

     label14:
        r16 = new java.lang.StringBuilder;

        $r9 = r16;

     label15:
        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r2;

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r2);

     label16:
        goto label11;

     label17:
        $r11 := @caughtexception;

        $r6 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r6, "caught exception while flattenDictionary.", 1);

        virtualinvoke $r11.<java.lang.Exception: void printStackTrace()>();

        return $r1;

     label18:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "");

     label19:
        goto label04;

     label20:
        $z0 = $r2 instanceof java.util.ArrayList;

        if $z0 == 0 goto label29;

     label21:
        $r12 = (java.util.ArrayList) $r2;

        $z0 = virtualinvoke $r12.<java.util.ArrayList: boolean isEmpty()>();

     label22:
        if $z0 != 0 goto label27;

        $i0 = 0;

     label23:
        $i1 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

     label24:
        if $i0 >= $i1 goto label04;

        r16 = new java.lang.StringBuilder;

        $r9 = r16;

     label25:
        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r12.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r2);

     label26:
        $i0 = $i0 + 1;

        goto label23;

     label27:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "");

     label28:
        goto label04;

     label29:
        if $r2 == null goto label44;

     label30:
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

     label31:
        if $z0 == 0 goto label34;

     label32:
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r14);

     label33:
        goto label04;

     label34:
        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

     label35:
        if $z0 == 0 goto label38;

     label36:
        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r14);

     label37:
        goto label04;

     label38:
        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(null);

     label39:
        if $z0 != 0 goto label42;

     label40:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r2);

     label41:
        goto label04;

     label42:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "");

     label43:
        goto label04;

     label44:
        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, "");

     label45:
        goto label04;

     label46:
        $r2 = $r0;

        goto label01;

     label47:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label17;
        catch java.lang.Exception from label03 to label05 with label17;
        catch java.lang.Exception from label06 to label07 with label17;
        catch java.lang.Exception from label08 to label09 with label17;
        catch java.lang.Exception from label10 to label12 with label17;
        catch java.lang.Exception from label13 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Exception from label18 to label19 with label17;
        catch java.lang.Exception from label21 to label22 with label17;
        catch java.lang.Exception from label23 to label24 with label17;
        catch java.lang.Exception from label25 to label26 with label17;
        catch java.lang.Exception from label27 to label28 with label17;
        catch java.lang.Exception from label30 to label31 with label17;
        catch java.lang.Exception from label32 to label33 with label17;
        catch java.lang.Exception from label34 to label35 with label17;
        catch java.lang.Exception from label36 to label37 with label17;
        catch java.lang.Exception from label38 to label39 with label17;
        catch java.lang.Exception from label40 to label41 with label17;
        catch java.lang.Exception from label42 to label43 with label17;
        catch java.lang.Exception from label44 to label45 with label17;
    }

    static int d()
    {
        com.adcolony.sdk.bz $r0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        java.lang.Exception $r4;
        int i0;

     label1:
        $r0 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r1 = virtualinvoke $r0.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r3.<android.util.DisplayMetrics: int densityDpi>;

     label2:
        return i0;

     label3:
        $r4 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static java.lang.String d(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;
        java.lang.Exception $r2;
        null_type varReplacer7106;
        int varReplacer7107;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        varReplacer7107 = 0;

        $r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer7107);

     label2:
        $r0 = new java.lang.String;

     label3:
        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r1);

     label4:
        return $r0;

     label5:
        $r2 := @caughtexception;

        varReplacer7106 = null;

        return varReplacer7106;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    static java.lang.String d(java.util.Map)
    {
        java.util.Map $r0;
        int $i0, $i1;
        java.lang.String $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        java.lang.StringBuilder $r6;

        $r0 := @parameter0: java.util.Map;

        if $r0 == null goto label1;

        $i0 = interfaceinvoke $r0.<java.util.Map: int size()>();

        if $i0 != 0 goto label2;

     label1:
        return "";

     label2:
        $r1 = "?";

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $i1 = 0;

     label3:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $i0 = $i1 + 1;

        if $i1 <= 0 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r1 = (java.lang.String) $r4;

        $r1 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r1 = (java.lang.String) $r4;

        $r1 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = $i0;

        goto label3;

     label5:
        goto label4;

     label6:
        return $r1;
    }

    static java.lang.String e()
    {
        java.util.UUID $r0;
        java.lang.String $r1, varReplacer7092;
        java.lang.StringBuilder $r2;

        nop;

        $r0 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r1 = virtualinvoke $r0.<java.util.UUID: java.lang.String toString()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        varReplacer7092 = ".ybin";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7092);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    static java.lang.String e(java.lang.String)
    {
        java.lang.String $r0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String d(java.lang.String)>($r0);

        return $r0;
    }

    static org.json.JSONObject e(java.util.Map)
    {
        java.util.Map $r0;
        org.json.JSONObject $r1, $r2, $r10;
        java.util.Set $r3;
        java.util.Iterator $r4, $r7;
        boolean $z0;
        java.lang.Object $r5;
        java.util.Map$Entry $r6, $r8;
        java.lang.String $r9, $r13;
        org.json.JSONException $r11;
        java.lang.StringBuilder $r12;

        $r0 := @parameter0: java.util.Map;

        $r1 = new org.json.JSONObject;

        specialinvoke $r1.<org.json.JSONObject: void <init>()>();

        if $r0 != null goto label01;

        return $r1;

     label01:
        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

     label03:
        if $z0 == 0 goto label24;

     label04:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

     label05:
        $r6 = (java.util.Map$Entry) $r5;

     label06:
        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

     label07:
        $z0 = $r5 instanceof java.util.Map;

        if $z0 == 0 goto label33;

     label08:
        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

     label09:
        $r0 = (java.util.Map) $r5;

        $r2 = new org.json.JSONObject;

     label10:
        specialinvoke $r2.<org.json.JSONObject: void <init>()>();

        $r3 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

     label12:
        if $z0 == 0 goto label29;

     label13:
        $r5 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

     label14:
        $r8 = (java.util.Map$Entry) $r5;

     label15:
        $r5 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

     label16:
        $z0 = $r5 instanceof java.util.Map;

        if $z0 == 0 goto label25;

     label17:
        $r5 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

     label18:
        $r9 = (java.lang.String) $r5;

     label19:
        $r5 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

     label20:
        $r0 = (java.util.Map) $r5;

     label21:
        $r10 = staticinvoke <com.adcolony.sdk.co: org.json.JSONObject e(java.util.Map)>($r0);

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r9, $r10);

     label22:
        goto label11;

     label23:
        $r11 := @caughtexception;

        $r9 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error converting to json. Exception->");

        $r13 = virtualinvoke $r11.<org.json.JSONException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r9, $r13, $r11);

     label24:
        return $r1;

     label25:
        $r5 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

     label26:
        $r9 = (java.lang.String) $r5;

     label27:
        $r5 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r2.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r9, $r5);

     label28:
        goto label11;

     label29:
        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

     label30:
        $r9 = (java.lang.String) $r5;

     label31:
        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r9, $r2);

     label32:
        goto label02;

     label33:
        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getKey()>();

     label34:
        $r9 = (java.lang.String) $r5;

     label35:
        $r5 = interfaceinvoke $r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $r1.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>($r9, $r5);

     label36:
        goto label02;

        catch org.json.JSONException from label01 to label03 with label23;
        catch org.json.JSONException from label04 to label05 with label23;
        catch org.json.JSONException from label06 to label07 with label23;
        catch org.json.JSONException from label08 to label09 with label23;
        catch org.json.JSONException from label10 to label12 with label23;
        catch org.json.JSONException from label13 to label14 with label23;
        catch org.json.JSONException from label15 to label16 with label23;
        catch org.json.JSONException from label17 to label18 with label23;
        catch org.json.JSONException from label19 to label20 with label23;
        catch org.json.JSONException from label21 to label22 with label23;
        catch org.json.JSONException from label25 to label26 with label23;
        catch org.json.JSONException from label27 to label28 with label23;
        catch org.json.JSONException from label29 to label30 with label23;
        catch org.json.JSONException from label31 to label32 with label23;
        catch org.json.JSONException from label33 to label34 with label23;
        catch org.json.JSONException from label35 to label36 with label23;
    }

    static org.json.JSONArray f(java.util.Map)
    {
        java.util.Map $r0;
        org.json.JSONArray $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.util.Map$Entry $r5;
        org.json.JSONObject $r6;

        $r0 := @parameter0: java.util.Map;

        $r1 = new org.json.JSONArray;

        specialinvoke $r1.<org.json.JSONArray: void <init>()>();

        if $r0 == null goto label2;

        $r2 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.util.Map$Entry) $r4;

        $r4 = interfaceinvoke $r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r0 = (java.util.Map) $r4;

        $r6 = staticinvoke <com.adcolony.sdk.co: org.json.JSONObject e(java.util.Map)>($r0);

        virtualinvoke $r1.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r6);

        goto label1;

     label2:
        return $r1;
    }

    static boolean f()
    {
        java.lang.String $r0, varReplacer6602;
        int $i0, varReplacer6603, varReplacer6604;

        nop;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 14 goto label1;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        varReplacer6602 = "OS is too old. Not supported.";

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String)>($r0, varReplacer6602);

        varReplacer6604 = 0;

        return varReplacer6604;

     label1:
        varReplacer6603 = 1;

        return varReplacer6603;
    }

    static long g()
    {
        long $l0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        return $l0;
    }

    static long h()
    {
        long $l0, $l1;
        com.adcolony.sdk.bz $r0;

        $l0 = staticinvoke <com.adcolony.sdk.co: long g()>();

        $r0 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $l1 = virtualinvoke $r0.<com.adcolony.sdk.bz: long aE()>();

        $l0 = $l0 + $l1;

        return $l0;
    }

    static final java.lang.String h(java.lang.String)
    {
        java.lang.String $r0, $r6;
        int $i0, $i1, $i4;
        java.security.MessageDigest $r1;
        byte[] $r2;
        java.lang.StringBuilder $r3, $r4, r7;
        byte $b2;
        short $s3;
        java.lang.Throwable $r5;
        java.security.NoSuchAlgorithmException r8;
        java.lang.Exception r9;

        $r0 := @parameter0: java.lang.String;

     label01:
        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

     label02:
        $r4 = new java.lang.StringBuilder;

        $r3 = $r4;

     label03:
        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

     label04:
        $i0 = lengthof $r2;

        $i1 = 0;

     label05:
        if $i1 >= $i0 goto label13;

        $b2 = $r2[$i1];

        $s3 = $b2 & 255;

     label06:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

     label07:
        $i4 = virtualinvoke $r0.<java.lang.String: int length()>();

     label08:
        if $i4 >= 2 goto label11;

        r7 = new java.lang.StringBuilder;

        $r4 = r7;

     label09:
        specialinvoke r7.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        goto label07;

     label11:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

     label12:
        $i1 = $i1 + 1;

        goto label05;

     label13:
        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label14:
        return $r0;

     label15:
        $r5 := @caughtexception;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception->");

        r8 = (java.security.NoSuchAlgorithmException) $r5;

        $r6 = virtualinvoke r8.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r9 = (java.lang.Exception) $r5;

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r6, r9);

        return "";

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label15;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label15;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label15;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label15;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label15;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label15;
    }

    static java.lang.String i()
    {
        java.text.SimpleDateFormat $r0;
        java.util.TimeZone $r1;
        java.util.Calendar $r2;
        java.util.Date $r3;
        java.lang.String $r4;
        java.lang.Exception $r5;

        $r0 = new java.text.SimpleDateFormat;

     label1:
        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r0.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r1);

        $r2 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r3 = virtualinvoke $r2.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void i(java.lang.String)
    {
        java.lang.String $r0, $r3;
        com.adcolony.sdk.bz $r1;
        android.content.Context $r2;
        java.util.Map $r4;
        boolean $z0;
        java.lang.Exception $r5;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r2 = virtualinvoke $r1.<com.adcolony.sdk.bz: android.content.Context l()>();

        if $r2 != null goto label01;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r0, "cannot delete map, app context is null", 1);

        return;

     label01:
        $r1 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r2 = virtualinvoke $r1.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r3 = staticinvoke <com.adcolony.sdk.co: java.lang.String a(android.content.Context)>($r2);

     label02:
        if $r3 == null goto label10;

     label03:
        $r1 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r2 = virtualinvoke $r1.<com.adcolony.sdk.bz: android.content.Context l()>();

        $r4 = staticinvoke <com.adcolony.sdk.co: java.util.Map a(java.lang.String,android.content.Context)>($r3, $r2);

     label04:
        if $r4 == null goto label10;

     label05:
        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>($r0);

     label06:
        if $z0 == 0 goto label10;

     label07:
        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r0);

        $r1 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r2 = virtualinvoke $r1.<com.adcolony.sdk.bz: android.content.Context l()>();

        staticinvoke <com.adcolony.sdk.co: void a(java.util.Map,java.lang.String,android.content.Context)>($r4, $r3, $r2);

     label08:
        return;

     label09:
        $r5 := @caughtexception;

     label10:
        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    static java.lang.String j()
    {
        java.text.SimpleDateFormat $r0;
        long $l0;
        java.util.TimeZone $r1;
        java.util.Date $r2;
        java.lang.String $r3;
        java.lang.Exception $r4;

     label1:
        staticinvoke <com.adcolony.sdk.co: long g()>();

        $l0 = staticinvoke <com.adcolony.sdk.co: long h()>();

     label2:
        $r0 = new java.text.SimpleDateFormat;

     label3:
        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        virtualinvoke $r0.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r1);

     label4:
        $r2 = new java.util.Date;

     label5:
        specialinvoke $r2.<java.util.Date: void <init>(long)>($l0);

        $r3 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r2);

     label6:
        return $r3;

     label7:
        $r4 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    static javax.crypto.SecretKey j(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r6, varReplacer7085, varReplacer7089, varReplacer7090, varReplacer7091;
        byte[] $r1, $r2;
        int $i0, varReplacer7087, varReplacer7088;
        com.adcolony.sdk.bn$a $r3;
        java.lang.Throwable $r4;
        java.lang.StringBuilder $r5, r8;
        com.adcolony.sdk.bs r7;
        javax.crypto.spec.SecretKeySpec r9;
        java.io.UnsupportedEncodingException r10;
        java.lang.Exception r11;
        null_type varReplacer7084, varReplacer7086;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = newarray (byte)[32];

        $r2 = newarray (byte)[0];

        if $r0 != null goto label1;

        varReplacer7086 = null;

        return varReplacer7086;

     label1:
        varReplacer7090 = "ASCII";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7090);

     label2:
        $i0 = lengthof $r2;

        if $i0 <= 32 goto label4;

        r7 = new com.adcolony.sdk.bs;

        $r3 = <com.adcolony.sdk.bn$a: com.adcolony.sdk.bn$a w>;

        varReplacer7085 = "The number of bytes in the key is > 32.";

        specialinvoke r7.<com.adcolony.sdk.bs: void <init>(com.adcolony.sdk.bn$a,java.lang.String)>($r3, varReplacer7085);

        throw r7;

     label3:
        $r4 := @caughtexception;

        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        r8 = new java.lang.StringBuilder;

        specialinvoke r8.<java.lang.StringBuilder: void <init>()>();

        varReplacer7089 = "Caught Exception->";

        $r5 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7089);

        r10 = (java.io.UnsupportedEncodingException) $r4;

        $r6 = virtualinvoke r10.<java.io.UnsupportedEncodingException: java.lang.String getMessage()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r11 = (java.lang.Exception) $r4;

        staticinvoke <com.adcolony.sdk.cb: void a(java.lang.String,java.lang.String,java.lang.Exception)>($r0, $r6, r11);

        varReplacer7084 = null;

        return varReplacer7084;

     label4:
        $i0 = lengthof $r2;

        varReplacer7087 = 0;

        varReplacer7088 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer7087, $r1, varReplacer7087, $i0);

        r9 = new javax.crypto.spec.SecretKeySpec;

        varReplacer7091 = "AES";

        specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7091);

        return r9;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    static java.util.Map k(java.lang.String)
    {
        java.lang.String $r0, $r2;
        java.util.HashMap $r1;
        java.lang.String[] $r3, $r4;
        int $i0, $i1;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        if $r0 == null goto label4;

        $r2 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>("&");

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>($r2);

        $i0 = 0;

     label1:
        $i1 = lengthof $r3;

        if $i0 >= $i1 goto label4;

        $r0 = $r3[$i0];

        $r2 = staticinvoke <java.util.regex.Pattern: java.lang.String quote(java.lang.String)>("=");

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String,int)>($r2, 2);

        $i1 = lengthof $r4;

        if $i1 != 2 goto label3;

        $r0 = $r4[0];

        $r0 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r0);

        $r2 = $r4[1];

        $r2 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r2);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r2);

     label2:
        $i0 = $i0 + 1;

        goto label1;

     label3:
        $r0 = $r4[0];

        $r0 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>($r0);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, "");

        goto label2;

     label4:
        return $r1;
    }

    static java.util.Map l(java.lang.String)
    {
        java.lang.String $r0, $r8, varReplacer6765, varReplacer6766, varReplacer6767, varReplacer6770, varReplacer6771;
        com.adcolony.sdk.bz $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        java.io.File $r4;
        boolean $z0;
        java.io.FileInputStream $r5;
        java.io.ObjectInputStream $r6, r12;
        java.lang.Exception $r7, $r11;
        java.lang.StringBuilder $r9, r13;
        java.lang.Throwable $r10;
        java.util.HashMap r14;
        java.util.Map r15;
        int varReplacer6768, varReplacer6769;

        nop;

        $r0 := @parameter0: java.lang.String;

        entermonitor class "Lcom/adcolony/sdk/co;";

     label01:
        $r1 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r2 = virtualinvoke $r1.<com.adcolony.sdk.bz: android.content.Context l()>();

        if $r2 == null goto label02;

        goto label05;

     label02:
        $r0 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        varReplacer6767 = "failed to load file due to context or filename error ";

        varReplacer6768 = 1;

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r0, varReplacer6767, varReplacer6768);

     label03:
        $r3 = null;

     label04:
        exitmonitor class "Lcom/adcolony/sdk/co;";

        r15 = (java.util.Map) $r3;

        return r15;

     label05:
        $r1 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r2 = virtualinvoke $r1.<com.adcolony.sdk.bz: android.content.Context l()>();

        varReplacer6770 = "logEvent.ymf";

        $r4 = virtualinvoke $r2.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>(varReplacer6770);

        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label06:
        if $z0 == 0 goto label16;

     label07:
        $r1 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r2 = virtualinvoke $r1.<com.adcolony.sdk.bz: android.content.Context l()>();

        varReplacer6765 = "logEvent.ymf";

        $r5 = virtualinvoke $r2.<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>(varReplacer6765);

     label08:
        r12 = new java.io.ObjectInputStream;

        $r6 = r12;

     label09:
        specialinvoke r12.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r5);

        $r3 = virtualinvoke $r6.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r3 = (java.util.Map) $r3;

     label10:
        virtualinvoke $r6.<java.io.ObjectInputStream: void close()>();

     label11:
        goto label04;

     label12:
        $r7 := @caughtexception;

     label13:
        $r8 = staticinvoke <com.adcolony.sdk.co: java.lang.String m()>();

        r13 = new java.lang.StringBuilder;

        specialinvoke r13.<java.lang.StringBuilder: void <init>()>();

        varReplacer6766 = "failed to load ";

        $r9 = virtualinvoke r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6766);

        varReplacer6771 = "logEvent.ymf";

        $r9 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer6771);

        $r0 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer6769 = 1;

        staticinvoke <com.adcolony.sdk.cb: void b(java.lang.String,java.lang.String,boolean)>($r8, $r0, varReplacer6769);

     label14:
        goto label04;

     label15:
        $r10 := @caughtexception;

        exitmonitor class "Lcom/adcolony/sdk/co;";

        throw $r10;

     label16:
        r14 = new java.util.HashMap;

        $r3 = r14;

     label17:
        specialinvoke r14.<java.util.HashMap: void <init>()>();

     label18:
        goto label04;

     label19:
        $r11 := @caughtexception;

        $r3 = null;

        goto label13;

        catch java.lang.Throwable from label01 to label03 with label15;
        catch java.lang.Exception from label05 to label06 with label19;
        catch java.lang.Exception from label07 to label08 with label19;
        catch java.lang.Exception from label09 to label10 with label19;
        catch java.lang.Throwable from label05 to label10 with label15;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Throwable from label16 to label18 with label15;
    }

    public static boolean l()
    {
        com.adcolony.sdk.bz $r0;
        android.content.Context $r1;
        java.lang.Object $r2;
        android.net.ConnectivityManager $r3;
        android.net.NetworkInfo $r4;
        boolean $z0;
        java.lang.Exception $r5;
        int varReplacer6598, varReplacer6600, varReplacer6601;
        java.lang.String varReplacer6599;

     label1:
        nop;

        $r0 = staticinvoke <com.adcolony.sdk.bz: com.adcolony.sdk.bz aK()>();

        $r1 = virtualinvoke $r0.<com.adcolony.sdk.bz: android.content.Context l()>();

        varReplacer6599 = "connectivity";

        $r2 = virtualinvoke $r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer6599);

        $r3 = (android.net.ConnectivityManager) $r2;

        $r4 = virtualinvoke $r3.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

     label2:
        if $r4 == null goto label5;

     label3:
        $z0 = virtualinvoke $r4.<android.net.NetworkInfo: boolean isConnected()>();

     label4:
        if $z0 == 0 goto label5;

        varReplacer6600 = 1;

        return varReplacer6600;

     label5:
        varReplacer6601 = 0;

        return varReplacer6601;

     label6:
        $r5 := @caughtexception;

        varReplacer6598 = 0;

        return varReplacer6598;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    private static java.lang.String m()
    {
        java.lang.String $r0;
        java.lang.Class $r1;

        nop;

        $r1 = class "Lcom/adcolony/sdk/bz;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r0;
    }
}
