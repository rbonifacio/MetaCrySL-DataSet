Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2576)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 44e157a18fbccedbfe9ae4bdd03f8e6cff861c386d7dd7d7161783e58f04fb26
		Secure: false
	Object:
		Variable: varReplacer2576
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2576)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 248dab7949d7a17c8eed34d6b9119428e4e4f9f47ceefb54fef67e3c86a1a747
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bk: java.lang.String b(java.lang.String)>
		SHA-256: 7b0e9e4b4482b77d7e90603a509c41cb6b9a71b4e80cef4cb52bd8a7591abd17
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2929)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: 80e64da808a80c918add7683a934d5653653fb325acf11ca86317f7cf49583dc
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.bk: java.lang.String a(java.lang.String)>
		SHA-256: bb73c91bc1e3bbdcada382ac78affdca310f5624af49e618b853b401fa88d569
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2575)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: a3de06f73b82e0100f7eaa50bf02cab5c2e21d1fca515f2e7450fa6e1fd163c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12254)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 39009fdb6588c0b0988ce4d499dac244f64b6e53579e708449b0c41338d5871e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2928)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: bd2f051d918ec9c935eb4cf0134e552ea079f858a6c4ffcf367b1c7427c49138
		Secure: false
	Object:
		Variable: r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer12255)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 459acf9e1e422622e618512042cbc9065242ee1da3c055833f1f7f839da3baae
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 8407a152a750198a9cecc8c173b46fb5748136d260fe6f5fbe4a174451640e66
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2578)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 35a49693ae57e4997b916fc64197ad3135c1a231f455b167d2926690ac56d6e0
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.bj: java.lang.String A(android.content.Context)>
		SHA-256: 58724a361bbf5df4daf876eebe3769418ddddb0f7192ba5788d5f79f73bd4736
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2062)
		Method: <u.aly.bj: java.lang.String A(android.content.Context)>
		SHA-256: 54c16cacbd3319013f74b9027ed8f731a3f2de9a78167155c2c342ec0082e75a
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2930)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: e3d50d3d9938ff34b6344c66ac223f1cfe1cd2bc39920a83d54fd7febe2c9e8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: a3232e8688ae4e198ca0b61a1f294125840bb3e949c51352e910c17120326afc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2098)
		Method: <u.aly.bk: java.lang.String b(java.lang.String)>
		SHA-256: b7a60ea88dfd0a8a9244499d6479d79e4bd81e98eaf42f594a05ca6689d7c6f2
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2066)
		Method: <u.aly.bk: java.lang.String a(java.lang.String)>
		SHA-256: f1cb5986d71bf6f9c92c98ca278c439fab2875bca8e2f6a61bf2e90a14c172e
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.geaxgame.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c678472b4c19c53650e756c77dab364889209724da847a2f30c698a83517174f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer12342)
		Method: <com.geaxgame.billing.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: fd7e425057522652093211a1502967f9227c8ba5e9967f5969acd503b5c21cbe
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.fyber.utils.q: java.lang.String a(java.lang.String)>
		SHA-256: 256532345a701e2c92c6fc440f379e41a1481858b36eecdd69cc4c3079be8928
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer850)
		Method: <com.fyber.utils.q: java.lang.String a(java.lang.String)>
		SHA-256: 370ad81267a89833cfd437a83af26f8bfca168e7cc030e3e807d9f30a9ef6bf9
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer2931)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: bbbf0f6a543b17cdf52ec2e7313456101d3b637fc55b1522d800da120ab4ea5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1530)
		Method: <com.appflood.e.j: java.lang.String b(byte[])>
		SHA-256: aed70f64787215b8e6de8a16f24c4a398ca9738473f2cffbf2fae88bd0e88aec
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.geaxgame.pokerking.util.OpenUDID_manager: void generateOpenUDID()>
		SHA-256: 383e92c6a9159fc4f0849cfb26da514bdc062562f7df112fbf4a2f6833661549
		Secure: true
	Object:
		Variable: varReplacer12255
		Type: java.lang.String
		Statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer12255)
		Method: <com.geaxgame.casino.client.api.AES: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 134ab1ba447fc5656275c01bdbf075ad690c9d93149429dba4d326019ab98d47
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.appflood.e.j: java.lang.String b(byte[])>
		SHA-256: f0a711a704dba212a150f9b585675172a455965ee158cf4fba7f3f516f4fa21d
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.appflood.e.j$b: void <init>(java.lang.String,byte[])>
		SHA-256: 5023d1fb23f858755586a274bab9b4068723c91183e76eae89e1088436e82dd2
		Secure: false

Findings in Java Class: com.appflood.e.j$b

	 in Method: void <init>(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e3d50d3d9938ff34b6344c66ac223f1cfe1cd2bc39920a83d54fd7febe2c9e8)
			First parameter (with value "PBEWithMD5AndDES") should be any of {ARC4, AES, BLOWFISH, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2930)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer2931)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #bbbf0f6a543b17cdf52ec2e7313456101d3b637fc55b1522d800da120ab4ea5)
			Second parameter (with value 1)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, varReplacer2931)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #bd2f051d918ec9c935eb4cf0134e552ea079f858a6c4ffcf367b1c7427c49138)
			First parameter (with value "PBEWithMD5AndDES/CBC/PKCS5Padding") should be any of {ARC4, AES, BLOWFISH, DESede, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2928)


Findings in Java Class: com.fyber.utils.q

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #370ad81267a89833cfd437a83af26f8bfca168e7cc030e3e807d9f30a9ef6bf9)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer850)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2577, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2577, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2576)


Findings in Java Class: com.geaxgame.casino.client.api.AES

	 in Method: byte[] decrypt(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer12255)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12256, $r2)


Findings in Java Class: com.geaxgame.billing.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 31

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	ForbiddenMethodError: 1
	RequiredPredicateError: 9
=====================================================================