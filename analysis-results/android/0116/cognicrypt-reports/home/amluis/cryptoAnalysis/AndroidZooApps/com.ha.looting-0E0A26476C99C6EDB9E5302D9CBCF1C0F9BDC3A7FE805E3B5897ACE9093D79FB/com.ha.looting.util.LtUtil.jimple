public class com.ha.looting.util.LtUtil extends java.lang.Object
{
    private static final java.lang.String ENCRYPT_KEY;
    private static java.lang.String MARKET_VERSION;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.ha.looting.util.LtUtil $r0;

        $r0 := @this: com.ha.looting.util.LtUtil;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addBadgeCount(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $i0 = <com.ha.looting.LtApplication: int PUSH_COUNT>;

        $i0 = $i0 + 1;

        staticinvoke <com.ha.looting.util.LtUtil: void setBadgeCount(android.content.Context,int)>($r0, $i0);

        return;
    }

    public static java.util.Date addMinute(java.util.Date, int)
    {
        int $i0;
        java.util.Date $r0;
        java.util.Calendar $r1;
        long $l1;

        $r0 := @parameter0: java.util.Date;

        $i0 := @parameter1: int;

        if $r0 != null goto label1;

        return $r0;

     label1:
        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke $r1.<java.util.Calendar: void setTime(java.util.Date)>($r0);

        virtualinvoke $r1.<java.util.Calendar: void add(int,int)>(12, $i0);

        $r0 = new java.util.Date;

        $l1 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        specialinvoke $r0.<java.util.Date: void <init>(long)>($l1);

        return $r0;
    }

    public static void addOnScrollChangedListenerToScrollView(android.widget.ScrollView, android.view.ViewTreeObserver$OnScrollChangedListener)
    {
        android.widget.ScrollView $r0;
        android.view.ViewTreeObserver$OnScrollChangedListener $r1;
        com.ha.looting.util.LtUtil$4 $r2;
        android.view.ViewTreeObserver $r3;

        $r0 := @parameter0: android.widget.ScrollView;

        $r1 := @parameter1: android.view.ViewTreeObserver$OnScrollChangedListener;

        $r3 = virtualinvoke $r0.<android.widget.ScrollView: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r2 = new com.ha.looting.util.LtUtil$4;

        specialinvoke $r2.<com.ha.looting.util.LtUtil$4: void <init>(android.widget.ScrollView,android.view.ViewTreeObserver$OnScrollChangedListener)>($r0, $r1);

        virtualinvoke $r3.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>($r2);

        return;
    }

    public static java.lang.String bytesToHex(byte[])
    {
        byte[] $r0;
        short $s0;
        java.lang.StringBuilder $r1;
        int $i1, $i2;
        java.lang.String $r2;
        byte $b3;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i1 < $i2 goto label2;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;

     label2:
        $b3 = $r0[$i1];

        $s0 = $b3 & 255;

        if $s0 >= 16 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

     label3:
        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s0);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i1 = $i1 + 1;

        goto label1;
    }

    public static boolean canPostExecute(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;
        android.app.Activity $r1;
        int $i0, varReplacer1281, varReplacer1282, varReplacer1283, varReplacer1284;

        nop;

        $r0 := @parameter0: android.content.Context;

        if $r0 != null goto label1;

        varReplacer1283 = 0;

        return varReplacer1283;

     label1:
        $z0 = $r0 instanceof android.app.Activity;

        if $z0 == 0 goto label3;

        $r1 = (android.app.Activity) $r0;

        $z0 = virtualinvoke $r1.<android.app.Activity: boolean isFinishing()>();

        if $z0 == 0 goto label2;

        varReplacer1282 = 0;

        return varReplacer1282;

     label2:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label3;

        $r1 = (android.app.Activity) $r0;

        $z0 = virtualinvoke $r1.<android.app.Activity: boolean isDestroyed()>();

        if $z0 == 0 goto label3;

        varReplacer1281 = 0;

        return varReplacer1281;

     label3:
        varReplacer1284 = 1;

        return varReplacer1284;
    }

    public static boolean canPostExecute(android.view.View)
    {
        android.view.View $r0;
        android.content.Context $r1;
        boolean $z0;
        int varReplacer1794, varReplacer1795;

        nop;

        $r0 := @parameter0: android.view.View;

        if $r0 != null goto label1;

        varReplacer1795 = 0;

        return varReplacer1795;

     label1:
        $r1 = virtualinvoke $r0.<android.view.View: android.content.Context getContext()>();

        if $r1 == null goto label2;

        $z0 = staticinvoke <com.ha.looting.util.LtUtil: boolean canPostExecute(android.content.Context)>($r1);

        return $z0;

     label2:
        varReplacer1794 = 0;

        return varReplacer1794;
    }

    private static java.lang.String capitalize(java.lang.String)
    {
        char $c0;
        int $i1, $i2;
        java.lang.String $r0;
        boolean $z0, $z1;
        char[] $r1;
        java.lang.StringBuilder $r2;

        nop;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return $r0;

     label1:
        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $z0 = 1;

        $r0 = "";

        $i1 = lengthof $r1;

        $i2 = 0;

     label2:
        if $i2 < $i1 goto label3;

        return $r0;

     label3:
        $c0 = $r1[$i2];

        if $z0 == 0 goto label5;

        $z1 = staticinvoke <java.lang.Character: boolean isLetter(char)>($c0);

        if $z1 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $c0 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = 0;

     label4:
        $i2 = $i2 + 1;

        goto label2;

     label5:
        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c0);

        if $z1 == 0 goto label6;

        $z0 = 1;

     label6:
        $r2 = new java.lang.StringBuilder;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;
    }

    public static void clearAllIntentExtras(android.app.Activity)
    {
        android.app.Activity $r0;
        android.content.Intent $r1;
        android.os.Bundle $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;

        nop;

        $r0 := @parameter0: android.app.Activity;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.content.Intent getIntent()>();

        $r2 = virtualinvoke $r1.<android.content.Intent: android.os.Bundle getExtras()>();

        if $r2 == null goto label3;

        $r3 = virtualinvoke $r2.<android.os.Bundle: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        return;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r5;

        $r1 = virtualinvoke $r0.<android.app.Activity: android.content.Intent getIntent()>();

        virtualinvoke $r1.<android.content.Intent: void removeExtra(java.lang.String)>($r6);

        goto label1;

     label3:
        return;
    }

    public static void clearBadgeCount(android.content.Context)
    {
        android.content.Context $r0;
        int varReplacer2064, varReplacer2065;

        nop;

        $r0 := @parameter0: android.content.Context;

        varReplacer2064 = 0;

        <com.ha.looting.LtApplication: int PUSH_COUNT> = varReplacer2064;

        varReplacer2065 = 0;

        staticinvoke <com.ha.looting.util.LtUtil: void setBadgeCount(android.content.Context,int)>($r0, varReplacer2065);

        return;
    }

    public static void copyText(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, varReplacer985, varReplacer986, varReplacer987, varReplacer988;
        int $i0, varReplacer989;
        java.lang.Object $r2;
        android.content.ClipboardManager $r3;
        android.content.ClipData $r4;
        android.widget.Toast $r5;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label2;

        varReplacer985 = "clipboard";

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer985);

        $r3 = (android.content.ClipboardManager) $r2;

        varReplacer987 = "Copy";

        $r4 = staticinvoke <android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer987, $r1);

        virtualinvoke $r3.<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>($r4);

     label1:
        varReplacer988 = "\ubcf5\uc0ac\ub418\uc5c8\uc2b5\ub2c8\ub2e4";

        varReplacer989 = 0;

        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, varReplacer988, varReplacer989);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

        return;

     label2:
        varReplacer986 = "clipboard";

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer986);

        $r3 = (android.content.ClipboardManager) $r2;

        virtualinvoke $r3.<android.text.ClipboardManager: void setText(java.lang.CharSequence)>($r1);

        goto label1;
    }

    public static java.lang.String decrypt(java.lang.String)
    {
        java.lang.String $r0, r14;
        javax.crypto.spec.IvParameterSpec $r1, r13;
        javax.crypto.spec.SecretKeySpec $r2, r12;
        javax.crypto.Cipher $r3;
        byte[] $r4;
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.security.NoSuchAlgorithmException r15;
        javax.crypto.NoSuchPaddingException r16;
        java.io.UnsupportedEncodingException r17;
        java.security.InvalidKeyException r18;
        java.security.InvalidAlgorithmParameterException r19;
        javax.crypto.IllegalBlockSizeException r20;
        javax.crypto.BadPaddingException r21;

        $r0 := @parameter0: java.lang.String;

     label01:
        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CFB8/NoPadding");

        $r4 = staticinvoke <com.ha.looting.util.LtUtil: byte[] getKeyBytes()>();

     label02:
        r12 = new javax.crypto.spec.SecretKeySpec;

        $r2 = r12;

     label03:
        specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, "AES");

     label04:
        r13 = new javax.crypto.spec.IvParameterSpec;

        $r1 = r13;

     label05:
        specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(2, $r2, $r1);

        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, 0);

        $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

     label06:
        r14 = new java.lang.String;

     label07:
        specialinvoke r14.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8");

     label08:
        return r14;

     label09:
        $r5 := @caughtexception;

        r15 = (java.security.NoSuchAlgorithmException) $r5;

        virtualinvoke r15.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return "";

     label10:
        $r6 := @caughtexception;

        r16 = (javax.crypto.NoSuchPaddingException) $r6;

        virtualinvoke r16.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        return "";

     label11:
        $r7 := @caughtexception;

        r17 = (java.io.UnsupportedEncodingException) $r7;

        virtualinvoke r17.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        return "";

     label12:
        $r8 := @caughtexception;

        r18 = (java.security.InvalidKeyException) $r8;

        virtualinvoke r18.<java.security.InvalidKeyException: void printStackTrace()>();

        return "";

     label13:
        $r9 := @caughtexception;

        r19 = (java.security.InvalidAlgorithmParameterException) $r9;

        virtualinvoke r19.<java.security.InvalidAlgorithmParameterException: void printStackTrace()>();

        return "";

     label14:
        $r10 := @caughtexception;

        r20 = (javax.crypto.IllegalBlockSizeException) $r10;

        virtualinvoke r20.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        return "";

     label15:
        $r11 := @caughtexception;

        r21 = (javax.crypto.BadPaddingException) $r11;

        virtualinvoke r21.<javax.crypto.BadPaddingException: void printStackTrace()>();

        return "";

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label09;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label09;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label09;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label10;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label10;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label10;
        catch javax.crypto.NoSuchPaddingException from label07 to label08 with label10;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label11;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label11;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label11;
        catch java.io.UnsupportedEncodingException from label07 to label08 with label11;
        catch java.security.InvalidKeyException from label01 to label02 with label12;
        catch java.security.InvalidKeyException from label03 to label04 with label12;
        catch java.security.InvalidKeyException from label05 to label06 with label12;
        catch java.security.InvalidKeyException from label07 to label08 with label12;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label13;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label13;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label13;
        catch java.security.InvalidAlgorithmParameterException from label07 to label08 with label13;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label14;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label14;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label14;
        catch javax.crypto.IllegalBlockSizeException from label07 to label08 with label14;
        catch javax.crypto.BadPaddingException from label01 to label02 with label15;
        catch javax.crypto.BadPaddingException from label03 to label04 with label15;
        catch javax.crypto.BadPaddingException from label05 to label06 with label15;
        catch javax.crypto.BadPaddingException from label07 to label08 with label15;
    }

    public static java.lang.String encrypt(java.lang.String)
    {
        java.lang.String $r0, varReplacer4290, varReplacer4291, varReplacer4292, varReplacer4293, varReplacer4294, varReplacer4295, varReplacer4297, varReplacer4298, varReplacer4300, varReplacer4301;
        javax.crypto.spec.IvParameterSpec $r1, r13;
        javax.crypto.spec.SecretKeySpec $r2, r12;
        javax.crypto.Cipher $r3;
        byte[] $r4;
        java.lang.Throwable $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.security.NoSuchAlgorithmException r14;
        javax.crypto.NoSuchPaddingException r15;
        java.io.UnsupportedEncodingException r16;
        java.security.InvalidKeyException r17;
        java.security.InvalidAlgorithmParameterException r18;
        javax.crypto.IllegalBlockSizeException r19;
        javax.crypto.BadPaddingException r20;
        int varReplacer4296, varReplacer4299;

        nop;

        $r0 := @parameter0: java.lang.String;

     label01:
        varReplacer4294 = "AES/CFB8/NoPadding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4294);

        $r4 = staticinvoke <com.ha.looting.util.LtUtil: byte[] getKeyBytes()>();

     label02:
        r12 = new javax.crypto.spec.SecretKeySpec;

        $r2 = r12;

     label03:
        varReplacer4298 = "AES";

        specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer4298);

     label04:
        r13 = new javax.crypto.spec.IvParameterSpec;

        $r1 = r13;

     label05:
        specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        varReplacer4296 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4296, $r2, $r1);

        varReplacer4290 = "UTF-8";

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4290);

        $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        varReplacer4299 = 0;

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r4, varReplacer4299);

     label06:
        return $r0;

     label07:
        $r5 := @caughtexception;

        r14 = (java.security.NoSuchAlgorithmException) $r5;

        virtualinvoke r14.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer4297 = "";

        return varReplacer4297;

     label08:
        $r6 := @caughtexception;

        r15 = (javax.crypto.NoSuchPaddingException) $r6;

        virtualinvoke r15.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        varReplacer4291 = "";

        return varReplacer4291;

     label09:
        $r7 := @caughtexception;

        r16 = (java.io.UnsupportedEncodingException) $r7;

        virtualinvoke r16.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        varReplacer4301 = "";

        return varReplacer4301;

     label10:
        $r8 := @caughtexception;

        r17 = (java.security.InvalidKeyException) $r8;

        virtualinvoke r17.<java.security.InvalidKeyException: void printStackTrace()>();

        varReplacer4292 = "";

        return varReplacer4292;

     label11:
        $r9 := @caughtexception;

        r18 = (java.security.InvalidAlgorithmParameterException) $r9;

        virtualinvoke r18.<java.security.InvalidAlgorithmParameterException: void printStackTrace()>();

        varReplacer4300 = "";

        return varReplacer4300;

     label12:
        $r10 := @caughtexception;

        r19 = (javax.crypto.IllegalBlockSizeException) $r10;

        virtualinvoke r19.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        varReplacer4295 = "";

        return varReplacer4295;

     label13:
        $r11 := @caughtexception;

        r20 = (javax.crypto.BadPaddingException) $r11;

        virtualinvoke r20.<javax.crypto.BadPaddingException: void printStackTrace()>();

        varReplacer4293 = "";

        return varReplacer4293;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label07;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label07;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label07;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label08;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label08;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label08;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label09;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label09;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label09;
        catch java.security.InvalidKeyException from label01 to label02 with label10;
        catch java.security.InvalidKeyException from label03 to label04 with label10;
        catch java.security.InvalidKeyException from label05 to label06 with label10;
        catch java.security.InvalidAlgorithmParameterException from label01 to label02 with label11;
        catch java.security.InvalidAlgorithmParameterException from label03 to label04 with label11;
        catch java.security.InvalidAlgorithmParameterException from label05 to label06 with label11;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label12;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label12;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label12;
        catch javax.crypto.BadPaddingException from label01 to label02 with label13;
        catch javax.crypto.BadPaddingException from label03 to label04 with label13;
        catch javax.crypto.BadPaddingException from label05 to label06 with label13;
    }

    public static android.content.Context getAndroidThemeContext(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        android.view.ContextThemeWrapper $r1;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 21 goto label1;

        $r1 = new android.view.ContextThemeWrapper;

        specialinvoke $r1.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r0, 16974391);

        return $r1;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label2;

        $r1 = new android.view.ContextThemeWrapper;

        specialinvoke $r1.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r0, 16973934);

        return $r1;

     label2:
        return $r0;
    }

    public static int getAppVersion(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, varReplacer1727, varReplacer1729;
        android.content.pm.PackageInfo $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        int i0, varReplacer1728, varReplacer1730;

        nop;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1728 = 0;

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, varReplacer1728);

        i0 = $r4.<android.content.pm.PackageInfo: int versionCode>;

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        varReplacer1729 = "err NameNotFoundException -> ";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1729);

        $r3 = virtualinvoke $r1.<java.lang.Exception: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1727 = "Error";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1727, $r3);

     label4:
        varReplacer1730 = 0;

        return varReplacer1730;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getAppVersionName(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.content.pm.PackageManager $r2;
        java.lang.String $r3, varReplacer1723, varReplacer1724, varReplacer1725;
        android.content.pm.PackageInfo $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        int varReplacer1726;

        nop;

        $r0 := @parameter0: android.content.Context;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer1726 = 0;

        $r4 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, varReplacer1726);

        $r3 = $r4.<android.content.pm.PackageInfo: java.lang.String versionName>;

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        varReplacer1725 = "err NameNotFoundException -> ";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1725);

        $r3 = virtualinvoke $r1.<java.lang.Exception: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1723 = "Error";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer1723, $r3);

     label4:
        varReplacer1724 = "";

        return varReplacer1724;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getBase64encode(java.lang.String)
    {
        java.lang.String $r0, $r2;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r1, 0);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\r", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\r", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\n", "");

        $r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r2, "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\r|\\n", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\r\\n|\\r|\\n", "");

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        return $r0;
    }

    public static float getDensity(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        float f0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r2.<android.util.DisplayMetrics: float density>;

        return f0;
    }

    public static java.lang.String getDeviceName()
    {
        java.lang.String $r0, $r1, varReplacer1722;
        boolean $z0;
        java.lang.StringBuilder $r2;

        nop;

        $r0 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r1 = <android.os.Build: java.lang.String MODEL>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <com.ha.looting.util.LtUtil: java.lang.String capitalize(java.lang.String)>($r1);

        return $r1;

     label1:
        $r2 = new java.lang.StringBuilder;

        $r0 = staticinvoke <com.ha.looting.util.LtUtil: java.lang.String capitalize(java.lang.String)>($r0);

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r0);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r0);

        varReplacer1722 = " ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer1722);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;
    }

    public static int getDpi(android.content.Context)
    {
        android.content.Context $r0;
        int $i0;
        float $f0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;

        $r0 := @parameter0: android.content.Context;

        $f0 = staticinvoke <com.ha.looting.util.LtUtil: float getDensity(android.content.Context)>($r0);

        $f0 = $f0 * 160.0F;

        $i0 = (int) $f0;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("dpi : ");

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LtUtil", $r2);

     label1:
        return $i0;
    }

    public static java.lang.String getGoogleAdId(android.content.Context)
    {
        android.content.Context $r0;
        com.ha.looting.util.PreferenceUtil $r1;
        java.lang.String $r2, varReplacer3477, varReplacer3478, varReplacer3479, varReplacer3480, varReplacer3481, varReplacer3482;
        boolean $z0;
        com.google.android.gms.ads.identifier.AdvertisingIdClient$Info $r3, $r4;
        com.google.android.gms.common.GooglePlayServicesNotAvailableException $r5;
        com.google.android.gms.common.GooglePlayServicesRepairableException $r6;
        java.lang.Throwable $r7;
        java.lang.Exception $r8;
        java.io.IOException r9;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.ha.looting.util.PreferenceUtil: com.ha.looting.util.PreferenceUtil 'with'(android.content.Context)>($r0);

        varReplacer3482 = "google_ad_id";

        $r2 = virtualinvoke $r1.<com.ha.looting.util.PreferenceUtil: java.lang.String get(java.lang.String)>(varReplacer3482);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label01;

        varReplacer3479 = "getGoogleAdId";

        varReplacer3480 = "has sharedpreference";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3479, varReplacer3480);

        return $r2;

     label01:
        $r3 = null;

     label02:
        $r4 = staticinvoke <com.google.android.gms.ads.identifier.AdvertisingIdClient: com.google.android.gms.ads.identifier.AdvertisingIdClient$Info getAdvertisingIdInfo(android.content.Context)>($r0);

     label03:
        $r3 = $r4;

     label04:
        $r2 = null;

        if $r3 == null goto label11;

        $r2 = virtualinvoke $r3.<com.google.android.gms.ads.identifier.AdvertisingIdClient$Info: java.lang.String getId()>();

     label05:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label06;

        $r1 = staticinvoke <com.ha.looting.util.PreferenceUtil: com.ha.looting.util.PreferenceUtil 'with'(android.content.Context)>($r0);

        varReplacer3481 = "google_ad_id";

        virtualinvoke $r1.<com.ha.looting.util.PreferenceUtil: boolean put(java.lang.String,java.lang.String)>(varReplacer3481, $r2);

     label06:
        return $r2;

     label07:
        $r5 := @caughtexception;

        virtualinvoke $r5.<com.google.android.gms.common.GooglePlayServicesNotAvailableException: void printStackTrace()>();

        goto label04;

     label08:
        $r6 := @caughtexception;

        virtualinvoke $r6.<com.google.android.gms.common.GooglePlayServicesRepairableException: void printStackTrace()>();

        goto label04;

     label09:
        $r7 := @caughtexception;

        r9 = (java.io.IOException) $r7;

        virtualinvoke r9.<java.io.IOException: void printStackTrace()>();

        goto label04;

     label10:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        goto label04;

     label11:
        varReplacer3477 = "getGoogleAdId";

        varReplacer3478 = "idinfo null";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer3477, varReplacer3478);

        goto label05;

        catch com.google.android.gms.common.GooglePlayServicesNotAvailableException from label02 to label03 with label07;
        catch com.google.android.gms.common.GooglePlayServicesRepairableException from label02 to label03 with label08;
        catch java.io.IOException from label02 to label03 with label09;
        catch java.lang.Exception from label02 to label03 with label10;
    }

    public static java.lang.String getIMEI(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;
        java.lang.Object $r1;
        android.telephony.TelephonyManager $r2;
        java.lang.String $r3;

        $r0 := @parameter0: android.content.Context;

        $z0 = staticinvoke <com.ha.looting.util.PermissionHelper: boolean isGranted(android.content.Context,java.lang.String)>($r0, "android.permission.READ_PHONE_STATE");

        if $z0 != 0 goto label1;

        return "";

     label1:
        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r2 = (android.telephony.TelephonyManager) $r1;

        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

        return $r3;
    }

    public static android.content.Intent getIntentByUrl(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r6, varReplacer1234, varReplacer1235, varReplacer1237, varReplacer1238, varReplacer1239, varReplacer1240, varReplacer1241, varReplacer1242, varReplacer1245, varReplacer1246, varReplacer1247;
        java.lang.Exception $r2;
        android.content.Intent $r3, $r4;
        boolean $z0;
        android.content.pm.PackageManager $r5;
        java.lang.StringBuilder $r7;
        android.net.Uri $r8;
        int varReplacer1236, varReplacer1243;
        null_type varReplacer1244;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label01;

        varReplacer1237 = "LtUtil";

        varReplacer1238 = "getIntentByUrl";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1237, varReplacer1238);

     label01:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label03;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label02;

        varReplacer1234 = "LtUtil";

        varReplacer1235 = "link is null";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1234, varReplacer1235);

     label02:
        varReplacer1244 = null;

        return varReplacer1244;

     label03:
        varReplacer1246 = "intent:";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer1246);

        if $z0 == 0 goto label15;

     label04:
        varReplacer1243 = 1;

        $r4 = staticinvoke <android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>($r1, varReplacer1243);

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r6 = virtualinvoke $r4.<android.content.Intent: java.lang.String getPackage()>();

        $r3 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>($r6);

     label05:
        if $r3 != null goto label16;

     label06:
        varReplacer1245 = "browser_fallback_url";

        $r6 = virtualinvoke $r4.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>(varReplacer1245);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r6);

     label07:
        if $z0 == 0 goto label12;

        $r3 = new android.content.Intent;

     label08:
        varReplacer1241 = "android.intent.action.VIEW";

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>(varReplacer1241);

     label09:
        $r7 = new java.lang.StringBuilder;

     label10:
        varReplacer1239 = "market://details?id=";

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1239);

        $r6 = virtualinvoke $r4.<android.content.Intent: java.lang.String getPackage()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r6);

        virtualinvoke $r3.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r8);

     label11:
        return $r3;

     label12:
        $r4 = staticinvoke <com.ha.looting.util.LtUtil: android.content.Intent getIntentByUrl(android.content.Context,java.lang.String)>($r0, $r6);

     label13:
        return $r4;

     label14:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label15:
        $r4 = new android.content.Intent;

        varReplacer1247 = "android.intent.action.VIEW";

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>(varReplacer1247);

        varReplacer1240 = "android.intent.category.DEFAULT";

        virtualinvoke $r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(varReplacer1240);

        varReplacer1242 = "android.intent.category.BROWSABLE";

        virtualinvoke $r4.<android.content.Intent: android.content.Intent addCategory(java.lang.String)>(varReplacer1242);

        varReplacer1236 = 268435456;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setFlags(int)>(varReplacer1236);

        $r8 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r8);

     label16:
        return $r4;

        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Exception from label06 to label07 with label14;
        catch java.lang.Exception from label08 to label09 with label14;
        catch java.lang.Exception from label10 to label11 with label14;
        catch java.lang.Exception from label12 to label13 with label14;
    }

    private static byte[] getKeyBytes()
    {
        java.lang.Throwable $r0;
        int $i0, varReplacer4303, varReplacer4304;
        java.lang.String $r1, varReplacer4302;
        byte[] $r2, $r3;
        java.io.UnsupportedEncodingException r4;

        nop;

        $r3 = null;

        $r1 = "dlwlsgur19920725";

     label1:
        varReplacer4302 = "UTF-8";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4302);

     label2:
        $r3 = $r2;

     label3:
        if $r3 != null goto label5;

        $r3 = newarray (byte)[0];

        return $r3;

     label4:
        $r0 := @caughtexception;

        r4 = (java.io.UnsupportedEncodingException) $r0;

        virtualinvoke r4.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label3;

     label5:
        $i0 = lengthof $r3;

        $r2 = newarray (byte)[$i0];

        varReplacer4303 = 0;

        varReplacer4304 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, varReplacer4303, $r2, varReplacer4303, $i0);

        return $r2;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static java.lang.String getMACAddress(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r6;
        java.lang.Object $r3;
        android.net.wifi.WifiManager $r4;
        android.net.wifi.WifiInfo $r5;
        boolean $z0;
        java.util.Enumeration $r7;
        java.util.ArrayList $r8;
        java.util.Iterator $r9;
        java.net.NetworkInterface $r10;
        byte[] $r11;
        int $i0, $i1;
        java.lang.Object[] $r12;
        byte $b2;
        java.lang.Byte $r13;
        java.lang.Exception $r14, $r15;

        $r0 := @parameter0: android.content.Context;

        $r2 = "";

     label01:
        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("wifi");

        $r4 = (android.net.wifi.WifiManager) $r3;

        $r5 = virtualinvoke $r4.<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>();

        $r6 = virtualinvoke $r5.<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>();

     label02:
        $r2 = $r6;

     label03:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label04;

        return $r2;

     label04:
        $r7 = staticinvoke <java.net.NetworkInterface: java.util.Enumeration getNetworkInterfaces()>();

        $r8 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>($r7);

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

     label06:
        if $z0 != 0 goto label08;

     label07:
        return "";

     label08:
        $r3 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.net.NetworkInterface) $r3;

     label09:
        $r2 = virtualinvoke $r10.<java.net.NetworkInterface: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("eth0");

     label10:
        if $z0 == 0 goto label05;

     label11:
        $r11 = virtualinvoke $r10.<java.net.NetworkInterface: byte[] getHardwareAddress()>();

     label12:
        if $r11 != null goto label13;

        return "";

     label13:
        $r1 = new java.lang.StringBuilder;

     label14:
        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

     label15:
        $i0 = 0;

     label16:
        $i1 = lengthof $r11;

     label17:
        if $i0 < $i1 goto label25;

     label18:
        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

     label19:
        if $i0 <= 0 goto label23;

     label20:
        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

     label21:
        $i0 = $i0 + -1;

     label22:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder deleteCharAt(int)>($i0);

     label23:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\n", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\r", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\r", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\n", "");

        $r6 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r6, "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\r|\\n", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\r\\n|\\r|\\n", "");

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label24:
        return $r2;

     label25:
        $r12 = newarray (java.lang.Object)[1];

        $b2 = $r11[$i0];

        $r13 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        $r12[0] = $r13;

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02X:", $r12);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

     label26:
        $i0 = $i0 + 1;

        goto label16;

     label27:
        $r14 := @caughtexception;

        goto label07;

     label28:
        $r15 := @caughtexception;

        goto label03;

        catch java.lang.Exception from label01 to label02 with label28;
        catch java.lang.Exception from label04 to label06 with label27;
        catch java.lang.Exception from label08 to label09 with label27;
        catch java.lang.Exception from label09 to label10 with label27;
        catch java.lang.Exception from label11 to label12 with label27;
        catch java.lang.Exception from label14 to label15 with label27;
        catch java.lang.Exception from label16 to label17 with label27;
        catch java.lang.Exception from label18 to label19 with label27;
        catch java.lang.Exception from label20 to label21 with label27;
        catch java.lang.Exception from label22 to label24 with label27;
        catch java.lang.Exception from label25 to label26 with label27;
    }

    public static java.lang.String getMarketVersion(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        java.lang.StringBuffer $r2;
        java.io.BufferedReader $r3;
        java.net.URL $r4;
        java.lang.String $r5, $r11, varReplacer2927, varReplacer2928, varReplacer2931, varReplacer2932, varReplacer2934, varReplacer2935, varReplacer2936, varReplacer2938, varReplacer2939;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.net.URLConnection $r7;
        java.net.HttpURLConnection $r8;
        int $i0, $i1, $i2, varReplacer2926, varReplacer2929, varReplacer2933, varReplacer2940;
        java.io.InputStreamReader $r9;
        java.io.InputStream $r10;
        null_type varReplacer2930, varReplacer2937;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r5 = <com.ha.looting.util.LtUtil: java.lang.String MARKET_VERSION>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label01;

        $r5 = <com.ha.looting.util.LtUtil: java.lang.String MARKET_VERSION>;

        return $r5;

     label01:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = new java.net.URL;

        $r6 = new java.lang.StringBuilder;

     label02:
        varReplacer2934 = "https://play.google.com/store/apps/details?id=";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2934);

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r5);

        $r7 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r8 = (java.net.HttpURLConnection) $r7;

     label03:
        if $r8 != null goto label06;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label05;

     label04:
        varReplacer2938 = "market";

        varReplacer2939 = "mConnection == null";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2938, varReplacer2939);

     label05:
        varReplacer2937 = null;

        return varReplacer2937;

     label06:
        varReplacer2929 = 5000;

        virtualinvoke $r8.<java.net.HttpURLConnection: void setConnectTimeout(int)>(varReplacer2929);

        varReplacer2940 = 0;

        virtualinvoke $r8.<java.net.HttpURLConnection: void setUseCaches(boolean)>(varReplacer2940);

        varReplacer2926 = 1;

        virtualinvoke $r8.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer2926);

        $i0 = virtualinvoke $r8.<java.net.HttpURLConnection: int getResponseCode()>();

     label07:
        if $i0 != 200 goto label12;

        $r3 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

     label08:
        $r10 = virtualinvoke $r8.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r10);

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r9);

     label09:
        $r5 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

     label10:
        if $r5 != null goto label17;

     label11:
        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

     label12:
        virtualinvoke $r8.<java.net.HttpURLConnection: void disconnect()>();

     label13:
        $r5 = "softwareVersion\">";

        varReplacer2935 = "softwareVersion\">";

        $i1 = virtualinvoke $r2.<java.lang.StringBuffer: int indexOf(java.lang.String)>(varReplacer2935);

        if $i1 != -1 goto label20;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label14;

        varReplacer2927 = "market";

        varReplacer2928 = "if (index == -1) {";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2927, varReplacer2928);

     label14:
        $r5 = null;

     label15:
        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label16;

        $r6 = new java.lang.StringBuilder;

        varReplacer2931 = "market version : ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2931);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer2932 = "market";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2932, $r11);

     label16:
        <com.ha.looting.util.LtUtil: java.lang.String MARKET_VERSION> = $r5;

        return $r5;

     label17:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label18:
        goto label09;

     label19:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        varReplacer2930 = null;

        return varReplacer2930;

     label20:
        $r11 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i0 = $i0 + $i1;

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i1 = $i2 + $i1;

        $i1 = $i1 + 100;

        $r5 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        varReplacer2936 = "<";

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(java.lang.String)>(varReplacer2936);

        varReplacer2933 = 0;

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(varReplacer2933, $i0);

        $r5 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        goto label15;

        catch java.lang.Exception from label02 to label03 with label19;
        catch java.lang.Exception from label04 to label05 with label19;
        catch java.lang.Exception from label06 to label07 with label19;
        catch java.lang.Exception from label08 to label10 with label19;
        catch java.lang.Exception from label11 to label13 with label19;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    public static java.lang.String getPhoneNumber(android.content.Context)
    {
        android.content.Context $r0;
        boolean $z0;
        java.lang.Object $r1;
        android.telephony.TelephonyManager $r2;
        java.lang.String $r3, varReplacer4278, varReplacer4279, varReplacer4280, varReplacer4281, varReplacer4282, varReplacer4283;

        nop;

        $r0 := @parameter0: android.content.Context;

        varReplacer4282 = "android.permission.READ_PHONE_STATE";

        $z0 = staticinvoke <com.ha.looting.util.PermissionHelper: boolean isGranted(android.content.Context,java.lang.String)>($r0, varReplacer4282);

        if $z0 != 0 goto label1;

        varReplacer4283 = "";

        return varReplacer4283;

     label1:
        varReplacer4278 = "phone";

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer4278);

        $r2 = (android.telephony.TelephonyManager) $r1;

        $r3 = virtualinvoke $r2.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label2;

        varReplacer4281 = "+82";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>(varReplacer4281);

        if $z0 == 0 goto label2;

        varReplacer4279 = "+82";

        varReplacer4280 = "0";

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer4279, varReplacer4280);

     label2:
        return $r3;
    }

    public static int getScreenHeight(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r2.<android.util.DisplayMetrics: int heightPixels>;

        return i0;
    }

    public static int getScreenWidth(android.content.Context)
    {
        android.content.Context $r0;
        android.content.res.Resources $r1;
        android.util.DisplayMetrics $r2;
        int i0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r2.<android.util.DisplayMetrics: int widthPixels>;

        return i0;
    }

    public static byte[] getUTF8Bytes(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Exception $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        return $r2;

     label3:
        $r1 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getUniqueId(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        long $l0, $l2;
        com.ha.looting.util.PreferenceUtil $r2;
        java.lang.String $r3, $r6, varReplacer1731, varReplacer1732, varReplacer1733, varReplacer1734, varReplacer1735, varReplacer1736, varReplacer1737, varReplacer1738, varReplacer1739, varReplacer1741, varReplacer1742;
        boolean $z0;
        java.util.UUID $r4, $r11;
        android.content.ContentResolver $r5;
        byte[] $r7;
        java.lang.Throwable $r8, $r12;
        java.lang.Object $r9;
        android.telephony.TelephonyManager $r10;
        java.lang.StringBuilder $r13, r17;
        int $i1;
        java.lang.Class $r14;
        java.lang.reflect.Field $r15;
        java.lang.RuntimeException r16;
        java.io.UnsupportedEncodingException r18;
        null_type varReplacer1740;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.ha.looting.util.PreferenceUtil: com.ha.looting.util.PreferenceUtil 'with'(android.content.Context)>($r0);

        varReplacer1732 = "unique_id";

        $r3 = virtualinvoke $r2.<com.ha.looting.util.PreferenceUtil: java.lang.String get(java.lang.String)>(varReplacer1732);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label01;

        return $r3;

     label01:
        $r4 = null;

        $r5 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer1735 = "android_id";

        $r3 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r5, varReplacer1735);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label05;

        $r6 = "9774d56d682e549c";

     label02:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

     label03:
        if $z0 != 0 goto label05;

     label04:
        varReplacer1733 = "utf8";

        $r7 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1733);

        $r4 = staticinvoke <java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])>($r7);

     label05:
        if $r4 == null goto label07;

        $r3 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label07;

        $r2 = staticinvoke <com.ha.looting.util.PreferenceUtil: com.ha.looting.util.PreferenceUtil 'with'(android.content.Context)>($r0);

        $r3 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        varReplacer1737 = "unique_id";

        virtualinvoke $r2.<com.ha.looting.util.PreferenceUtil: boolean put(java.lang.String,java.lang.String)>(varReplacer1737, $r3);

        $r3 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        return $r3;

     label06:
        $r8 := @caughtexception;

        r16 = new java.lang.RuntimeException;

        specialinvoke r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r8);

        throw r16;

     label07:
        $r3 = "";

        varReplacer1731 = "android.permission.READ_PHONE_STATE";

        $z0 = staticinvoke <com.ha.looting.util.PermissionHelper: boolean isGranted(android.content.Context,java.lang.String)>($r0, varReplacer1731);

        if $z0 == 0 goto label08;

        varReplacer1734 = "phone";

        $r9 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer1734);

        $r10 = (android.telephony.TelephonyManager) $r9;

        $r3 = virtualinvoke $r10.<android.telephony.TelephonyManager: java.lang.String getDeviceId()>();

     label08:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label11;

     label09:
        varReplacer1736 = "utf8";

        $r7 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1736);

        $r11 = staticinvoke <java.util.UUID: java.util.UUID nameUUIDFromBytes(byte[])>($r7);

     label10:
        $r4 = $r11;

     label11:
        if $r4 == null goto label13;

        $r3 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label13;

        $r2 = staticinvoke <com.ha.looting.util.PreferenceUtil: com.ha.looting.util.PreferenceUtil 'with'(android.content.Context)>($r0);

        $r3 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        varReplacer1738 = "unique_id";

        virtualinvoke $r2.<com.ha.looting.util.PreferenceUtil: boolean put(java.lang.String,java.lang.String)>(varReplacer1738, $r3);

        $r3 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        return $r3;

     label12:
        $r12 := @caughtexception;

        r18 = (java.io.UnsupportedEncodingException) $r12;

        virtualinvoke r18.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label11;

     label13:
        r17 = new java.lang.StringBuilder;

        varReplacer1739 = "35";

        specialinvoke r17.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1739);

        $r3 = <android.os.Build: java.lang.String BOARD>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r13 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = <android.os.Build: java.lang.String BRAND>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = <android.os.Build: java.lang.String CPU_ABI>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = <android.os.Build: java.lang.String DEVICE>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = <android.os.Build: java.lang.String MANUFACTURER>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = <android.os.Build: java.lang.String MODEL>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = <android.os.Build: java.lang.String PRODUCT>;

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 % 10;

        $r13 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = class "Landroid/os/Build;";

     label14:
        varReplacer1742 = "SERIAL";

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>(varReplacer1742);

        varReplacer1740 = null;

        $r9 = virtualinvoke $r15.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(varReplacer1740);

        $r6 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

     label15:
        $r11 = new java.util.UUID;

        $r4 = $r11;

        $i1 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        $l2 = (long) $i1;

        $i1 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

        $l0 = (long) $i1;

        specialinvoke $r11.<java.util.UUID: void <init>(long,long)>($l2, $l0);

        $r2 = staticinvoke <com.ha.looting.util.PreferenceUtil: com.ha.looting.util.PreferenceUtil 'with'(android.content.Context)>($r0);

        $r3 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        varReplacer1741 = "unique_id";

        virtualinvoke $r2.<com.ha.looting.util.PreferenceUtil: boolean put(java.lang.String,java.lang.String)>(varReplacer1741, $r3);

        $r3 = virtualinvoke $r4.<java.util.UUID: java.lang.String toString()>();

        return $r3;

     label16:
        $r1 := @caughtexception;

        $r6 = "jhbadlyme";

        goto label15;

        catch java.io.UnsupportedEncodingException from label02 to label03 with label06;
        catch java.io.UnsupportedEncodingException from label04 to label05 with label06;
        catch java.io.UnsupportedEncodingException from label09 to label10 with label12;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    public static void hideKeypad(android.content.Context, android.view.View)
    {
        android.content.Context $r0;
        android.view.View $r1, $r3;
        boolean $z0;
        android.app.Activity $r2;
        java.lang.Object $r4;
        android.view.inputmethod.InputMethodManager $r5;
        android.os.IBinder $r6;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.view.View;

        if $r0 != null goto label1;

        return;

     label1:
        if $r1 == null goto label3;

        $z0 = $r0 instanceof android.app.Activity;

        if $z0 == 0 goto label2;

        $r2 = (android.app.Activity) $r0;

        $z0 = virtualinvoke $r2.<android.app.Activity: boolean isFinishing()>();

        if $z0 != 0 goto label3;

        $r2 = (android.app.Activity) $r0;

        $r3 = virtualinvoke $r2.<android.app.Activity: android.view.View getCurrentFocus()>();

        if $r3 == null goto label3;

     label2:
        $r4 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("input_method");

        $r5 = (android.view.inputmethod.InputMethodManager) $r4;

        $r6 = virtualinvoke $r1.<android.view.View: android.os.IBinder getWindowToken()>();

        virtualinvoke $r5.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r6, 0);

     label3:
        return;
    }

    public static void initGoogleAdIdInBackground(android.content.Context)
    {
        android.content.Context $r0;
        com.ha.looting.util.LtUtil$2 $r1;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = new com.ha.looting.util.LtUtil$2;

        specialinvoke $r1.<com.ha.looting.util.LtUtil$2: void <init>(android.content.Context)>($r0);

        virtualinvoke $r1.<com.ha.looting.util.LtUtil$2: void start()>();

        return;
    }

    public static void initStrictMode()
    {
        int $i0;
        android.os.StrictMode$ThreadPolicy$Builder $r0;
        android.os.StrictMode$ThreadPolicy $r1;

        nop;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 <= 9 goto label1;

        $r0 = new android.os.StrictMode$ThreadPolicy$Builder;

        specialinvoke $r0.<android.os.StrictMode$ThreadPolicy$Builder: void <init>()>();

        $r0 = virtualinvoke $r0.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy$Builder permitAll()>();

        $r1 = virtualinvoke $r0.<android.os.StrictMode$ThreadPolicy$Builder: android.os.StrictMode$ThreadPolicy build()>();

        staticinvoke <android.os.StrictMode: void setThreadPolicy(android.os.StrictMode$ThreadPolicy)>($r1);

     label1:
        return;
    }

    public static boolean isInstalled(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        boolean $z0;
        android.content.pm.PackageManager $r2;
        java.lang.Throwable $r3;
        java.lang.Exception $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        virtualinvoke $r2.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r1, 1);

     label2:
        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label4;

     label3:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("\ud328\ud0a4\uc9c0 \uc874\uc7ac", $r1);

     label4:
        $z0 = 1;

     label5:
        return $z0;

     label6:
        $r3 := @caughtexception;

        $z0 = 0;

        goto label5;

     label7:
        $r4 := @caughtexception;

        $z0 = 0;

        goto label5;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label6;
        catch android.content.pm.PackageManager$NameNotFoundException from label3 to label4 with label6;
        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    public static boolean isListEmpty(java.util.List)
    {
        java.util.List $r0;
        int $i0, varReplacer2195, varReplacer2196, varReplacer2197;

        nop;

        $r0 := @parameter0: java.util.List;

        if $r0 != null goto label1;

        varReplacer2195 = 1;

        return varReplacer2195;

     label1:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 < 1 goto label2;

        varReplacer2197 = 0;

        return varReplacer2197;

     label2:
        varReplacer2196 = 1;

        return varReplacer2196;
    }

    public static boolean isNetworkConnected(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.net.ConnectivityManager $r2;
        android.net.NetworkInfo $r3;
        int varReplacer3440, varReplacer3441;
        java.lang.String varReplacer3442;

        nop;

        $r0 := @parameter0: android.content.Context;

        varReplacer3442 = "connectivity";

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer3442);

        $r2 = (android.net.ConnectivityManager) $r1;

        $r3 = virtualinvoke $r2.<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>();

        if $r3 == null goto label1;

        varReplacer3440 = 1;

        return varReplacer3440;

     label1:
        varReplacer3441 = 0;

        return varReplacer3441;
    }

    public static boolean isScreenOn(android.content.Context)
    {
        android.content.Context $r0;
        android.view.Display $r1;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        android.hardware.display.DisplayManager $r3;
        boolean $z0;
        android.view.Display[] $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        android.os.PowerManager $r7;

        $r0 := @parameter0: android.content.Context;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 20 goto label4;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r3 = (android.hardware.display.DisplayManager) $r2;

        $z0 = 0;

        $r4 = virtualinvoke $r3.<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>();

        $i0 = lengthof $r4;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("sceenOn : ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("isScreenOn", $r6);

        return $z0;

     label2:
        $r1 = $r4[$i1];

        $i2 = virtualinvoke $r1.<android.view.Display: int getState()>();

        if $i2 == 1 goto label3;

        $z0 = 1;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("power");

        $r7 = (android.os.PowerManager) $r2;

        $z0 = virtualinvoke $r7.<android.os.PowerManager: boolean isScreenOn()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("sceenOn : ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("isScreenOn", $r6);

        return $z0;
    }

    public static boolean isSoftKeyAvail(android.content.Context)
    {
        boolean[] $r0;
        android.content.Context $r1;
        int $i0;
        android.app.Activity $r2;
        android.view.Window $r3;
        android.view.View $r4;
        android.view.ViewTreeObserver $r5;
        com.ha.looting.util.LtUtil$1 $r6;
        boolean $z0;

        $r1 := @parameter0: android.content.Context;

        $r0 = newarray (boolean)[1];

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 >= 11 goto label1;

        return 0;

     label1:
        $r2 = (android.app.Activity) $r1;

        $r3 = virtualinvoke $r2.<android.app.Activity: android.view.Window getWindow()>();

        $r4 = virtualinvoke $r3.<android.view.Window: android.view.View getDecorView()>();

        $r4 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(16908290);

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r6 = new com.ha.looting.util.LtUtil$1;

        specialinvoke $r6.<com.ha.looting.util.LtUtil$1: void <init>(android.view.View,boolean[])>($r4, $r0);

        virtualinvoke $r5.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>($r6);

        $z0 = $r0[0];

        return $z0;
    }

    public static boolean isStandardKeyguardState(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Object $r1;
        android.app.KeyguardManager $r2;
        int $i0;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("keyguard");

        $r2 = (android.app.KeyguardManager) $r1;

        if $r2 == null goto label2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $z0 = virtualinvoke $r2.<android.app.KeyguardManager: boolean isKeyguardSecure()>();

        return $z0;

     label1:
        $z0 = virtualinvoke $r2.<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>();

        return $z0;

     label2:
        return 0;
    }

    public static java.lang.String loadFileAsString(java.lang.String) throws java.io.IOException
    {
        java.lang.String $r0;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2;
        java.io.BufferedInputStream $r3;
        java.io.FileInputStream $r4;
        boolean $z0;
        int $i0, $i1, $i3;
        byte $b2;
        java.lang.Throwable $r5;
        java.lang.Exception $r6, $r7;

        $r0 := @parameter0: java.lang.String;

        $r3 = new java.io.BufferedInputStream;

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.lang.String)>($r0);

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>($r4, 1024);

     label01:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>(1024);

        $r2 = newarray (byte)[1024];

     label02:
        $z0 = 0;

        $i0 = 0;

     label03:
        $i1 = virtualinvoke $r3.<java.io.BufferedInputStream: int read(byte[])>($r2);

     label04:
        if $i1 != -1 goto label08;

        if $z0 == 0 goto label22;

     label05:
        $r0 = new java.lang.String;

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

     label06:
        virtualinvoke $r3.<java.io.BufferedInputStream: void close()>();

     label07:
        return $r0;

     label08:
        if $i0 != 0 goto label17;

     label09:
        $b2 = $r2[0];

     label10:
        if $b2 != -17 goto label17;

     label11:
        $b2 = $r2[1];

     label12:
        if $b2 != -69 goto label17;

     label13:
        $b2 = $r2[2];

     label14:
        if $b2 != -65 goto label17;

        $z0 = 1;

        $i3 = $i1 + -3;

     label15:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 3, $i3);

     label16:
        $i0 = $i0 + $i1;

        goto label03;

     label17:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r2, 0, $i1);

     label18:
        goto label16;

     label19:
        $r5 := @caughtexception;

     label20:
        virtualinvoke $r3.<java.io.BufferedInputStream: void close()>();

     label21:
        throw $r5;

     label22:
        $r0 = new java.lang.String;

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r2);

     label23:
        goto label06;

     label24:
        $r6 := @caughtexception;

        return $r0;

     label25:
        $r7 := @caughtexception;

        goto label21;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Exception from label06 to label07 with label24;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Exception from label20 to label21 with label25;
        catch java.lang.Throwable from label22 to label23 with label19;
    }

    public static java.lang.String logAppKeyHash(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.content.pm.Signature $r2;
        java.lang.String $r3, $r4;
        int $i0, $i1;
        android.content.pm.PackageManager $r5;
        android.content.pm.PackageInfo $r6;
        android.content.pm.Signature[] $r7;
        java.security.MessageDigest $r8;
        byte[] $r9;
        boolean $z0;

        $r0 := @parameter0: android.content.Context;

        $i0 = 0;

        $r4 = "";

     label01:
        $r5 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r3, 64);

        $r7 = $r6.<android.content.pm.PackageInfo: android.content.pm.Signature[] signatures>;

        $i1 = lengthof $r7;

     label02:
        if $i0 < $i1 goto label03;

        return $r4;

     label03:
        $r2 = $r7[$i0];

        $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA");

        $r9 = virtualinvoke $r2.<android.content.pm.Signature: byte[] toByteArray()>();

        virtualinvoke $r8.<java.security.MessageDigest: void update(byte[])>($r9);

     label04:
        $r3 = new java.lang.String;

     label05:
        $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>();

        $r9 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r9, 0);

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r9);

     label06:
        $r4 = $r3;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label08;

     label07:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Hash key", $r3);

     label08:
        $i0 = $i0 + 1;

        goto label02;

     label09:
        $r1 := @caughtexception;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label10;

        $r3 = virtualinvoke $r1.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("name not found", $r3);

     label10:
        return $r4;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0;
        byte $b0;
        java.lang.Throwable $r1;
        java.lang.StringBuffer $r2, r8;
        int $i1, $i2;
        java.security.MessageDigest $r3;
        byte[] $r4;
        java.lang.StringBuilder $r5, r9;
        java.lang.Object[] $r6;
        short $s3;
        java.lang.Integer $r7;
        java.security.NoSuchAlgorithmException r10;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

     label01:
        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.MessageDigest: void update(byte[])>($r4);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>();

     label02:
        r8 = new java.lang.StringBuffer;

        $r2 = r8;

     label03:
        specialinvoke r8.<java.lang.StringBuffer: void <init>()>();

     label04:
        $i2 = lengthof $r4;

     label05:
        if $i1 < $i2 goto label10;

        r9 = new java.lang.StringBuilder;

        $r5 = r9;

     label06:
        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("md5 : ");

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("md5", $r0);

     label07:
        r9 = new java.lang.StringBuilder;

        $r5 = r9;

     label08:
        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("md5 length  : ");

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("md5", $r0);

        $r0 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        return $r0;

     label10:
        $b0 = $r4[$i1];

        $r6 = newarray (java.lang.Object)[1];

        $s3 = $b0 & 255;

     label11:
        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($s3);

     label12:
        $r6[0] = $r7;

     label13:
        $r0 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x", $r6);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

     label14:
        $i1 = $i1 + 1;

        goto label05;

     label15:
        $r1 := @caughtexception;

        r10 = (java.security.NoSuchAlgorithmException) $r1;

        virtualinvoke r10.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return "";

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label15;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label15;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label15;
        catch java.security.NoSuchAlgorithmException from label11 to label12 with label15;
        catch java.security.NoSuchAlgorithmException from label13 to label14 with label15;
    }

    public static void openDownloadLink(android.app.Activity, java.lang.String)
    {
        android.app.Activity $r0;
        java.lang.String $r1;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        staticinvoke <com.ha.looting.util.LtUtil: void openDownloadLink(android.app.Activity,java.lang.String,java.lang.String)>($r0, $r1, null);

        return;
    }

    public static void openDownloadLink(android.app.Activity, java.lang.String, java.lang.String)
    {
        android.app.Activity $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label2;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        $r2 = "\ubc14\ub85c\uac00\uae30 \uc900\ube44 \uc911\uc785\ub2c8\ub2e4.";

     label1:
        staticinvoke <com.ha.looting.dialog.LtDialog: com.ha.looting.dialog.LtDialog show(android.app.Activity,java.lang.String)>($r0, $r2);

        return;

     label2:
        staticinvoke <com.ha.looting.util.LtUtil: void openUrl(android.content.Context,java.lang.String)>($r0, $r1);

        return;
    }

    public static void openUrl(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r4, varReplacer1222, varReplacer1223, varReplacer1224, varReplacer1225, varReplacer1226, varReplacer1228, varReplacer1230, varReplacer1231, varReplacer1232;
        java.lang.Throwable $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, r9;
        android.widget.Toast $r5;
        android.app.Activity $r6;
        com.ha.looting.library.GCMManager $r7;
        android.content.Intent $r8;
        android.content.ActivityNotFoundException r10;
        int varReplacer1227, varReplacer1229, varReplacer1233;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r9 = new java.lang.StringBuilder;

        varReplacer1222 = "openurl : ";

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1222);

        $r3 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1225 = "LtUtil";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1225, $r4);

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label3;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label2;

        varReplacer1223 = "LtUtil";

        varReplacer1224 = "link is null";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1223, varReplacer1224);

     label2:
        varReplacer1232 = "\ub9c1\ud06c\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.";

        varReplacer1233 = 0;

        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, varReplacer1232, varReplacer1233);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

        return;

     label3:
        $z0 = $r0 instanceof android.app.Activity;

        if $z0 == 0 goto label4;

        $r6 = (android.app.Activity) $r0;

        $z0 = staticinvoke <com.ha.looting.dialog.LtDialog: boolean showAtUrl(android.app.Activity,java.lang.String)>($r6, $r1);

        if $z0 != 0 goto label9;

     label4:
        $z0 = staticinvoke <com.ha.looting.util.LtUtil: boolean showToastAtUrl(android.content.Context,java.lang.String)>($r0, $r1);

        if $z0 != 0 goto label9;

        $r7 = staticinvoke <com.ha.looting.library.GCMManager: com.ha.looting.library.GCMManager 'with'(android.content.Context)>($r0);

        $z0 = virtualinvoke $r7.<com.ha.looting.library.GCMManager: boolean showNotificationAtUrl(android.content.Context,java.lang.String)>($r0, $r1);

        if $z0 != 0 goto label9;

        $r8 = staticinvoke <com.ha.looting.util.LtUtil: android.content.Intent getIntentByUrl(android.content.Context,java.lang.String)>($r0, $r1);

        if $r8 != null goto label6;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label5;

        varReplacer1230 = "LtUtil";

        varReplacer1231 = "intent == null";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1230, varReplacer1231);

     label5:
        varReplacer1228 = "\ub9c1\ud06c\ub97c \uc5ec\ub294 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud588\uc2b5\ub2c8\ub2e4.\n\uc7a0\uc2dc \ud6c4 \ub2e4\uc2dc \uc2dc\ub3c4\ud574\uc8fc\uc138\uc694.";

        varReplacer1229 = 0;

        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, varReplacer1228, varReplacer1229);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

        return;

     label6:
        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r8);

     label7:
        return;

     label8:
        $r2 := @caughtexception;

        r10 = (android.content.ActivityNotFoundException) $r2;

        virtualinvoke r10.<android.content.ActivityNotFoundException: void printStackTrace()>();

        varReplacer1226 = "\ud574\ub2f9 \ub9c1\ud06c\ub97c \uc5f4 \uc218 \uc788\ub294 \uc571\uc774 \uc124\uce58\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.";

        varReplacer1227 = 0;

        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, varReplacer1226, varReplacer1227);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

     label9:
        return;

        catch android.content.ActivityNotFoundException from label6 to label7 with label8;
    }

    public static void openUrlInLockScreen(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        android.widget.Toast $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("openUrlInLockScreen : ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LtUtil", $r3);

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label3;

        $z0 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z0 == 0 goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("LtUtil", "link is null");

     label2:
        $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, "\ub9c1\ud06c\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.", 0);

        virtualinvoke $r4.<android.widget.Toast: void show()>();

        return;

     label3:
        $z0 = staticinvoke <com.ha.looting.util.LtUtil: boolean isStandardKeyguardState(android.content.Context)>($r0);

        $z1 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z1 == 0 goto label4;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("openurl isStandardKeyGuardState : ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LtUtil", $r3);

     label4:
        $z0 = staticinvoke <com.ha.looting.receiver.UnlockService: boolean isUnlocked()>();

        $z1 = <com.ha.looting.data.LtData: boolean DEBUG>;

        if $z1 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("isUnlock : ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("LtUtil", $r3);

     label5:
        $z1 = staticinvoke <com.ha.looting.util.LtUtil: boolean isStandardKeyguardState(android.content.Context)>($r0);

        if $z1 == 0 goto label6;

        if $z0 != 0 goto label6;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("http");

        if $z0 == 0 goto label6;

        staticinvoke <com.ha.looting.receiver.UnlockService: void start(android.content.Context,java.lang.String)>($r0, $r1);

        return;

     label6:
        staticinvoke <com.ha.looting.util.LtUtil: void openUrl(android.content.Context,java.lang.String)>($r0, $r1);

        return;
    }

    public static void parallelExecuteAsyncTask(android.os.AsyncTask)
    {
        android.os.AsyncTask $r0;
        int $i0;
        java.util.concurrent.Executor $r1;
        java.lang.Object[] $r2;
        null_type varReplacer1039;

        nop;

        $r0 := @parameter0: android.os.AsyncTask;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $r1 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        varReplacer1039 = null;

        virtualinvoke $r0.<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r1, varReplacer1039);

        return;

     label1:
        $r2 = newarray (java.lang.Object)[0];

        virtualinvoke $r0.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r2);

        return;
    }

    public static java.lang.String parseToPackageName(java.lang.String)
    {
        java.lang.String $r0;
        boolean $z0;
        int $i0, $i1, $i2;

        $r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r0);

        if $z0 == 0 goto label1;

        return "";

     label1:
        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("&id=");

        $i0 = $i0 + 4;

        if $i0 >= 4 goto label2;

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>("?id=");

        $i0 = $i0 + 4;

     label2:
        if $i0 >= 4 goto label3;

        return "";

     label3:
        $i1 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String,int)>("&", $i0);

        $i2 = $i1;

        if $i1 >= 0 goto label4;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

     label4:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i0, $i2);

        return $r0;
    }

    public static void runApp(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1;
        android.content.pm.PackageManager $r2;
        android.content.Intent $r3;
        android.widget.Toast $r4;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r3 = virtualinvoke $r2.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>($r1);

        if $r3 != null goto label1;

        $r4 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, "\uc2e4\ud589\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.", 0);

        virtualinvoke $r4.<android.widget.Toast: void show()>();

        return;

     label1:
        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(268435456);

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r3);

        return;
    }

    public static void runDbResultData(android.app.Activity, java.lang.String, java.lang.Runnable)
    {
        android.app.Activity $r0;
        java.lang.String $r1;
        java.lang.Runnable $r2;

        $r0 := @parameter0: android.app.Activity;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Runnable;

        return;
    }

    public static void runInBackground(java.lang.Runnable)
    {
        java.lang.Runnable $r0;
        com.ha.looting.util.LtUtil$3 $r1;

        nop;

        $r0 := @parameter0: java.lang.Runnable;

        $r1 = new com.ha.looting.util.LtUtil$3;

        specialinvoke $r1.<com.ha.looting.util.LtUtil$3: void <init>(java.lang.Runnable)>($r0);

        staticinvoke <com.ha.looting.util.LtUtil: void parallelExecuteAsyncTask(android.os.AsyncTask)>($r1);

        return;
    }

    public static void sendMail(android.content.Context, java.lang.String, java.lang.String, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r2, $r3;
        java.lang.Throwable $r4;
        android.content.Intent $r5;
        java.lang.String[] $r6;
        android.widget.Toast $r7;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEND");

        virtualinvoke $r5.<android.content.Intent: android.content.Intent setType(java.lang.String)>("plain/text");

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = $r1;

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>("android.intent.extra.EMAIL", $r6);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.SUBJECT", $r2);

        virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TEXT", $r3);

     label1:
        $r5 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>($r5, "Send Email");

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r5);

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r7 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, "\uba54\uc77c \uc571\uc774 \uc124\uce58\ub418\uc5b4 \uc788\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.", 0);

        virtualinvoke $r7.<android.widget.Toast: void show()>();

        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    private static void setBadgeCount(android.content.Context, int)
    {
        android.content.Context $r0;
        int $i0;
        java.lang.Exception $r1;
        android.content.Intent $r2;
        java.lang.String $r3, $r4, $r7, varReplacer1343, varReplacer1344, varReplacer1345, varReplacer1346;
        android.content.pm.PackageManager $r5;
        android.content.ComponentName $r6;
        boolean $z0;

        nop;

        $r0 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $r3 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r4 = null;

     label1:
        $r5 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r2 = virtualinvoke $r5.<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>($r3);

        $r6 = virtualinvoke $r2.<android.content.Intent: android.content.ComponentName getComponent()>();

        $r7 = virtualinvoke $r6.<android.content.ComponentName: java.lang.String getClassName()>();

     label2:
        $r4 = $r7;

     label3:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label6;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label5;

        return;

     label4:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        goto label3;

     label5:
        $r2 = new android.content.Intent;

        varReplacer1344 = "android.intent.action.BADGE_COUNT_UPDATE";

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>(varReplacer1344);

        varReplacer1345 = "badge_count_package_name";

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>(varReplacer1345, $r3);

        varReplacer1346 = "badge_count_class_name";

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>(varReplacer1346, $r4);

        varReplacer1343 = "badge_count";

        virtualinvoke $r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>(varReplacer1343, $i0);

        <com.ha.looting.LtApplication: int PUSH_COUNT> = $i0;

        virtualinvoke $r0.<android.content.Context: void sendBroadcast(android.content.Intent)>($r2);

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label4;
    }

    public static void showLogAvailableMemorySize(android.content.Context)
    {
        android.content.Context $r0;
        android.app.ActivityManager$MemoryInfo $r1;
        long $l0;
        java.lang.Object $r2;
        android.app.ActivityManager $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        $r0 := @parameter0: android.content.Context;

        $r1 = new android.app.ActivityManager$MemoryInfo;

        specialinvoke $r1.<android.app.ActivityManager$MemoryInfo: void <init>()>();

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        $r3 = (android.app.ActivityManager) $r2;

        virtualinvoke $r3.<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager$MemoryInfo)>($r1);

        $l0 = $r1.<android.app.ActivityManager$MemoryInfo: long availMem>;

        $l0 = $l0 / 1048576L;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("available memory : ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("memory", $r5);

        return;
    }

    private static boolean showToastAtUrl(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r4, varReplacer1248, varReplacer1250, varReplacer1253, varReplacer1256, varReplacer1257, varReplacer1258, varReplacer1260;
        android.net.Uri $r2;
        boolean $z0;
        android.os.Bundle $r3;
        int $i0, $i1, varReplacer1249, varReplacer1251, varReplacer1252, varReplacer1254, varReplacer1255, varReplacer1259;
        byte $b2;
        android.widget.Toast $r5;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r1);

        if $r2 != null goto label1;

        varReplacer1259 = 0;

        return varReplacer1259;

     label1:
        $r1 = virtualinvoke $r2.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label8;

        varReplacer1258 = "toast";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer1258);

        if $z0 == 0 goto label8;

        $r3 = staticinvoke <com.ha.looting.util.BundleUtil: android.os.Bundle getBundleByUri(android.net.Uri)>($r2);

        if $r3 == null goto label8;

        varReplacer1260 = "msg";

        $r1 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1260);

        $r4 = $r1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label2;

        varReplacer1257 = "message";

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1257);

     label2:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label3;

        varReplacer1256 = "contents";

        $r4 = virtualinvoke $r3.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer1256);

     label3:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label8;

        varReplacer1248 = "time";

        varReplacer1249 = -1;

        $i0 = staticinvoke <com.ha.looting.util.BundleUtil: int getIntByString(android.os.Bundle,java.lang.String,int)>($r3, varReplacer1248, varReplacer1249);

        $i1 = $i0;

        if $i0 != -1 goto label4;

        varReplacer1250 = "delay";

        varReplacer1251 = -1;

        $i1 = staticinvoke <com.ha.looting.util.BundleUtil: int getIntByString(android.os.Bundle,java.lang.String,int)>($r3, varReplacer1250, varReplacer1251);

     label4:
        if $i1 != -1 goto label5;

        varReplacer1253 = "duration";

        varReplacer1254 = -1;

        $i1 = staticinvoke <com.ha.looting.util.BundleUtil: int getIntByString(android.os.Bundle,java.lang.String,int)>($r3, varReplacer1253, varReplacer1254);

     label5:
        if $i1 < 1 goto label7;

        $b2 = 1;

     label6:
        $r5 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r0, $r4, $b2);

        virtualinvoke $r5.<android.widget.Toast: void show()>();

        varReplacer1255 = 1;

        return varReplacer1255;

     label7:
        $b2 = 0;

        goto label6;

     label8:
        varReplacer1252 = 0;

        return varReplacer1252;
    }

    public static java.util.ArrayList shuffleArrayList(java.util.List)
    {
        java.util.List $r0;
        java.util.Random $r1;
        java.util.ArrayList $r2;
        long $l0;
        int $i1;
        java.lang.Object $r3;

        $r0 := @parameter0: java.util.List;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        if $r0 == null goto label3;

        $r1 = new java.util.Random;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r1.<java.util.Random: void <init>(long)>($l0);

     label1:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 > 0 goto label2;

        return $r2;

     label2:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i1 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>($i1);

        $r3 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i1);

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);

        interfaceinvoke $r0.<java.util.List: java.lang.Object remove(int)>($i1);

        goto label1;

     label3:
        return $r2;
    }

    public static void startActivity(android.content.Context, android.content.Intent)
    {
        android.content.Context $r0;
        android.content.Intent $r1;
        int varReplacer2101;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: android.content.Intent;

        varReplacer2101 = 872415232;

        virtualinvoke $r1.<android.content.Intent: android.content.Intent setFlags(int)>(varReplacer2101);

        virtualinvoke $r0.<android.content.Context: void startActivity(android.content.Intent)>($r1);

        return;
    }

    public static void startActivity(android.content.Context, java.lang.Class)
    {
        android.content.Context $r0;
        java.lang.Class $r1;
        android.content.Intent $r2;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.Class;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r0, $r1);

        staticinvoke <com.ha.looting.util.LtUtil: void startActivity(android.content.Context,android.content.Intent)>($r0, $r2);

        return;
    }

    public static void vibrate(android.content.Context, long[])
    {
        android.content.Context $r0;
        long[] $r1;
        java.lang.Object $r2;
        android.os.Vibrator $r3;
        java.lang.String varReplacer3706;
        int varReplacer3707;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: long[];

        varReplacer3706 = "vibrator";

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>(varReplacer3706);

        $r3 = (android.os.Vibrator) $r2;

        if $r3 == null goto label1;

        varReplacer3707 = -1;

        virtualinvoke $r3.<android.os.Vibrator: void vibrate(long[],int)>($r1, varReplacer3707);

     label1:
        return;
    }
}
