Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer12220)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: dca348ef9556f49e0cb0b60c14ad204467eed383c1dc0de71f52f18fb6807056
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10184)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: a8663d2bf2d5d87a0015bcd85567b21a75f5e72af1ddfdd7241db11cfd2dd705
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13353)
		Method: <org.tethys.a: byte[] a(android.content.pm.Signature[])>
		SHA-256: 40645425854e1ebbeaec7f98b097c41545f4ec69f237b566cf8fe5e0241cfd96
		Secure: false
	Object:
		Variable: varReplacer14087
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14087)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: f5d6b04c2744007fba86cedcd3275bc3b1c1da70ec6b21b84eacc0a473ab45ec
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer14088)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d3cc427f5bb1a9bb44d68e0ff0eee1d396419a8c48a9d436c8ae9fa4b9850b5f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 412bf4ed61073de9a0ffc866fcb699e1cc15ef84b8208e61e319c37dd5caa685
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,byte[])>
		SHA-256: ac15a362f2ae2f0a8380f561f2a0510521f79b4de643c8e87cc89c93203a384
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 65ca7ceaf382c21c1c08f0077dc608c5bc115ac43a0fb223afa54fb3a12c84fc
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 8957e7ab3cccd7e6f0619806ed1ae427ddffbbf870e0f8d39613a1ef40c68d4a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1052)
		Method: <com.h.a.a: byte[] a(java.io.File)>
		SHA-256: 85f0879bb2827085ff6320ef6863ca7259f9c1a62e6e41ac5ce1aad83fbc489f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1043)
		Method: <com.h.a.a: java.lang.String a(java.io.InputStream)>
		SHA-256: 3554b7728074e47204c27db0a8c8401670a6869fb2ea94dc77198795dc6e6490
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14087)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 3e494a9c377c852cd4aa98c366407aa4b7118135142fb2ee0dceab8b5d4b26cc
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10896)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: a08ffc55b7fde6bd82663cca96145a128023c7ea9358befc1d9ca006feae5851
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.tethys.a: byte[] a(android.content.pm.Signature[])>
		SHA-256: 429798205c2c83583d727c70683157d1a7176cd097489fb4eae5c3e713da1e13
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8722)
		Method: <d.u: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 6009e78ac5e316e5f5bb718e6c6f5732cfd5223c1fff543fcf10ddff7659ac6c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 8308cc419a228b856ecf812f4a1bcec969318612ae2f3894f4977a38456c2fd4
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12223)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 465e1fe5201010da4e09f2e505efb7fc77d1cb0662d8f73c3b71b52550539af5
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.apusapps.b.a.d: byte[] a(byte[])>
		SHA-256: 40994c5c62a2939a6203497716434df31caaf7367e749f9d6ff943a5690f90ea
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,java.io.InputStream)>
		SHA-256: c77dd7e3123e090a0f70bfa24715598749f909592a095168b0c423c9eca397fb
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer919)
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,java.io.InputStream)>
		SHA-256: 4b0b8163f848cae7bcc281b46bdf89ae7bbe211c0117230c79429a4321deb1e9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.h.a.a: java.lang.String a(java.io.InputStream)>
		SHA-256: 429798205c2c83583d727c70683157d1a7176cd097489fb4eae5c3e713da1e13
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1da94bc65736b5daec9fb707b121792f525ce16cac0638f4e17beabe1af97476
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 528f34eade1d2e1325de8f7f1173df3cc96b2f64f4b1332342b0ddfc30f38573
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 84f14f624f4d28cf9107055bc7a766b26e093fab380bdd1ccd7ba93d1ad0c206
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13784)
		Method: <com.apusapps.b.a.d: byte[] a(byte[])>
		SHA-256: a7134d5821ebd136aee82c6cff136a501539c9e0dc8937c52deefefde59b3f24
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10898)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 9536d5ce8007a8015f8e4fc86511712864cb75790353cf3b3ece5fbc4590ac42
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5974)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: c3eea6ba46f5223197c0dea5dcb7741be9fdf9ed329cb03c0772442d286a79
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9936)
		Method: <com.turbo.global.utils.h: byte[] a(byte[])>
		SHA-256: ffd60a4dfa546bb050e8e3e4dce688150faec2a132386563cf2d6d475b51d5ac
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer914)
		Method: <org.interlaken.common.d.k: byte[] a(java.lang.String,byte[])>
		SHA-256: ef98ac9919e95a461bcfc7554469817ec627a8cd28705b66d1befe26d33af278
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12224)
		Method: <com.rubbish.cache.d.a.a$1: byte[] a(byte[],java.lang.String)>
		SHA-256: 73c2b1455eef912c6b29ac2243de17d038061e52910d81f4d7aef60242e86f84
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 84f14f624f4d28cf9107055bc7a766b26e093fab380bdd1ccd7ba93d1ad0c206
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.enceladus.appexit.a.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 412bf4ed61073de9a0ffc866fcb699e1cc15ef84b8208e61e319c37dd5caa685
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.turbo.global.utils.h: byte[] a(byte[])>
		SHA-256: 5d9d30a8fc2b3cab3ce50f64335d69be867a3336784fba439579799587daaa12
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10181)
		Method: <org.interlaken.common.d.c: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: 65e0767404bc2184ed2e9e304f04253daa2fc918c839e7120b1b826f2dad3f9d
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.h.a.a: byte[] a(java.io.File)>
		SHA-256: 7d5e7b0c1cfa70ba4613c318162e9e61487d6805ffbb7c607cb6a8fc91f841c2
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.rubbish.cache.d.a.a$1: byte[] a(byte[],java.lang.String)>
		SHA-256: 2b7e9c1bed683db459482ba6e4bace544c2a1aebc1e1c96877e6a04a38d1d177
		Secure: false
	Object:
		Variable: varReplacer12220
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer12220)
		Method: <com.rubbish.cache.d.a.a$2: byte[] a(byte[],java.lang.String)>
		SHA-256: 55150e51203133df61481a60f2b994c4ace72d042b6f450a994f9e385d836606
		Secure: false

Findings in Java Class: org.interlaken.common.d.k

	 in Method: byte[] a(java.lang.String,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #4b0b8163f848cae7bcc281b46bdf89ae7bbe211c0117230c79429a4321deb1e9)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.h.a.a

	 in Method: java.lang.String a(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #3554b7728074e47204c27db0a8c8401670a6869fb2ea94dc77198795dc6e6490)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #85f0879bb2827085ff6320ef6863ca7259f9c1a62e6e41ac5ce1aad83fbc489f)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.interlaken.common.d.c

	 in Method: byte[] a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer10183, $r6, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #65e0767404bc2184ed2e9e304f04253daa2fc918c839e7120b1b826f2dad3f9d)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAANDTWOFISH-CBC	, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithSHAAND40BITRC4, PBEwithMD5ANDDES, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10181)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a8663d2bf2d5d87a0015bcd85567b21a75f5e72af1ddfdd7241db11cfd2dd705)
			First parameter (with value "DES") should be any of {ARC4, TDEA, AES, BLOWFISH, RC4, RSA, ARCFOUR, DESEDE}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10184)


Findings in Java Class: org.enceladus.appexit.a.c

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer10899, $r6, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9536d5ce8007a8015f8e4fc86511712864cb75790353cf3b3ece5fbc4590ac42)
			First parameter (with value "DES") should be any of {ARC4, TDEA, AES, BLOWFISH, RC4, RSA, ARCFOUR, DESEDE}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10898)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #a08ffc55b7fde6bd82663cca96145a128023c7ea9358befc1d9ca006feae5851)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAANDTWOFISH-CBC	, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithSHAAND40BITRC4, PBEwithMD5ANDDES, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer10896)


Findings in Java Class: com.rubbish.cache.d.a.a$2

	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #465e1fe5201010da4e09f2e505efb7fc77d1cb0662d8f73c3b71b52550539af5)
			First parameter (with value "DES") should be any of {ARC4, TDEA, AES, BLOWFISH, RC4, RSA, ARCFOUR, DESEDE}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12223)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer12220)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12221, $r3)


Findings in Java Class: org.tethys.a

	 in Method: byte[] a(android.content.pm.Signature[])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #40645425854e1ebbeaec7f98b097c41545f4ec69f237b566cf8fe5e0241cfd96)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.apusapps.b.a.d

	 in Method: byte[] a(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a7134d5821ebd136aee82c6cff136a501539c9e0dc8937c52deefefde59b3f24)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13784)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a7134d5821ebd136aee82c6cff136a501539c9e0dc8937c52deefefde59b3f24)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = null


Findings in Java Class: com.rubbish.cache.d.a.a$1

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12228, $r8)


Findings in Java Class: com.my.target.core.utils.h

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14087)


Findings in Java Class: d.u

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8723, r6, varReplacer8723)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8723, r6, varReplacer8723)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 38

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 4
	RequiredPredicateError: 10
	ConstraintError: 5
	IncompleteOperationError: 2
=====================================================================