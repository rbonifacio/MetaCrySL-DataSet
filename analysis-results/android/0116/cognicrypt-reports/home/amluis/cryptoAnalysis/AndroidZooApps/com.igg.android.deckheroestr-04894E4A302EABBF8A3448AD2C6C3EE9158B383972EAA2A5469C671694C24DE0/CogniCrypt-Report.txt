Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.google.payment.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7550)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: d3e902e3ac3c15cde2ea79d3869253a2d28b4f5ce46c8625b0a0a33ae8b79c58
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.tapcash.sdk.a: java.lang.String a(java.lang.String)>
		SHA-256: 8dfe2d4a8ea82401536f8e7fd817a6658b5c17cd436ae77d69ecd4c7eba0a85b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: void completeProfileRequest()>
		SHA-256: ac252b1ab4ac66a2185458f47cedcdb6230a984be7fe323f7fe5d59628922171
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4477)
		Method: <com.tapcash.sdk.a: java.lang.String a(java.lang.String)>
		SHA-256: bc9233952d1663437d1bbe227274732a74167ec9476769bcef7c20308e454ec6
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer6405)
		Method: <com.google.payment.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 84c1485fa4e47fbaf80165bf2d04c3d367c619a864c03b386584f6da4b3d8b4f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.zucks.rewardsdk.android.util.Encryption: java.lang.String toHashValue(java.lang.String)>
		SHA-256: 3a3298ca3e958ebcf7f5278c89f2a7c4c365109f64e783ee9aded60ee31d5275
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer6270)
		Method: <com.naver.android.appstore.iap.AppstoreSecurity: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: c43fb2325dbba226a454bd284f51fd2af6099eb3201cd58bbb9366ca92f150fc
		Secure: false
	Object:
		Variable: varReplacer7636
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7636)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: c3721e48e0a579be1e48cdd1840a41c1c0c730f008a65b0597fcfae7e27cffcd
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: b6a2629ca3df05cde3339bac2578ee7359d8b1fc6f6e61cdb7655abdac5e5575
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4684)
		Method: <jp.co.zucks.rewardsdk.android.util.Encryption: void <init>()>
		SHA-256: e8773d68b009a537253932f78fc9dda103563aca59185f867d03758594e0ab5c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6704)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 1402387c8dd031c2f7b235461a3abb5bd4f49d87351c3c6ed7fe3c132fc8582a
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: void <clinit>()>
		SHA-256: 81571f0f65b71822bd958d9fd94e85c4e0b32e123ab4c4b6ad790e4712eb88cf
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1520)
		Method: <com.sponsorpay.utils.SignatureTools: java.lang.String generateSHA1ForString(java.lang.String)>
		SHA-256: adce7c5c313d60aa85d49221720e321ad168c4b78d4b4d5e936a7a48b28d80b9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2933)
		Method: <com.tapjoy.TapjoyUtil: java.lang.String hashAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: 2169ddb6052306230e5b57c4bbc97adb307262a1c0d144990241748a5cbe17ff
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5040)
		Method: <com.freemycard.Utils: java.lang.String SHA1(java.lang.String)>
		SHA-256: 3a67b12d86e6b51d05b791fe5850a563d78ad4ab5ba0e196a93ab550cb558f8
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: java.lang.String MD5(java.lang.String)>
		SHA-256: 43c434ffffdabd955bdd6c52a3156d6145e75a5b7846c3144d4806615404d41f
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.naver.android.appstore.iap.AppstoreSecurity: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 250123705364be9a258f54e30da8ad33de36ccdbe9b574833e24adb69fb716f4
		Secure: false
	Object:
		Variable: varReplacer6703
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6703)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: a4914be5e40d97c7f70babeca70559e05871059490752e8bce1c879dd02cab8f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.sponsorpay.utils.SignatureTools: java.lang.String generateSHA1ForString(java.lang.String)>
		SHA-256: eb82bda4318cba217482a3b5f976afac2a8e52ea8aeeef60d07eb4a49f11ee34
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: caa67fc73d8e755b6ad922924c4525a07219f2e85b0b9f78a3a2e84f401dd2f6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tapjoy.TapjoyUtil: java.lang.String hashAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: 82ce3325174a18c8f51707f43fef3c3abf6757a9a6144e5d702eafb0a5468b05
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer7634)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 51ad0fbe6af854dcdc749680f4df1a08bf4efc93e19c65607a32fe76efd4777a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.freemycard.Utils: java.lang.String SHA1(java.lang.String)>
		SHA-256: 405358f7c769976cc7e104cfa9ba51c8cf8ec142ea1c3884545602284b264a5f
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6703)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 3c11a15d7c8f091ba11831736c37c1e25b71d763d083967e5ac120b31e3fb461
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3537)
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: java.lang.String MD5(java.lang.String)>
		SHA-256: f572e259d0f869df70020d521cde698402a314152c1c5f63865084d99cde9f12
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7636)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: a5221d13e0f76552778cdb6d6c18ccc70f55378252eff0a77ea57129fc09d3f0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7833)
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: ffbad8578507597a74b8352811848a3750f2c6715d0b30337aea2001ca7d4719
		Secure: true

Findings in Java Class: com.sponsorpay.utils.SignatureTools

	 in Method: java.lang.String generateSHA1ForString(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #adce7c5c313d60aa85d49221720e321ad168c4b78d4b4d5e936a7a48b28d80b9)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1520)


Findings in Java Class: com.mobileapptracker.MATEncryption

	 in Method: void <init>(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1402387c8dd031c2f7b235461a3abb5bd4f49d87351c3c6ed7fe3c132fc8582a)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6704)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6703)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


Findings in Java Class: com.mobileapptracker.MobileAppTracker

	 in Method: void initAll(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1402387c8dd031c2f7b235461a3abb5bd4f49d87351c3c6ed7fe3c132fc8582a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r11.<com.mobileapptracker.MATEventQueue: void <init>(android.content.Context,com.mobileapptracker.MobileAppTracker)>($r3, $r0)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7551, r5, varReplacer7551)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7551, r5, varReplacer7551)


Findings in Java Class: com.google.payment.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.naver.android.appstore.iap.AppstoreSecurity

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters

	 in Method: java.lang.String calculateSignature(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7636)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	ConstraintError: 2
	RequiredPredicateError: 7
=====================================================================