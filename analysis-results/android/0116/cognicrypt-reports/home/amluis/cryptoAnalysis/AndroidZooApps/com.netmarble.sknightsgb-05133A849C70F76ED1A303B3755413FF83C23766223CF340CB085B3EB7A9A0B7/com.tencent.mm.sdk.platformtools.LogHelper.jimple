final class com.tencent.mm.sdk.platformtools.LogHelper extends java.lang.Object
{
    private static final byte[] au;

    static void <clinit>()
    {
        byte[] $r0;

        nop;

        $r0 = newarray (byte)[8];

        $r0[0] = 4;

        $r0[1] = 0;

        $r0[2] = 0;

        $r0[3] = 0;

        $r0[4] = -1;

        $r0[5] = -1;

        $r0[6] = -1;

        $r0[7] = 0;

        <com.tencent.mm.sdk.platformtools.LogHelper: byte[] au> = $r0;

        return;
    }

    private void <init>()
    {
        com.tencent.mm.sdk.platformtools.LogHelper $r0;

        $r0 := @this: com.tencent.mm.sdk.platformtools.LogHelper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void initLogHeader(java.io.PrintStream, java.lang.String, java.lang.String, long, int)
    {
        java.io.PrintStream $r0;
        java.lang.String $r1, $r2;
        long $l0;
        int $i1;
        boolean $z0;
        byte $b2;
        java.lang.StringBuilder $r3;

        $r0 := @parameter0: java.io.PrintStream;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $l0 := @parameter3: long;

        $i1 := @parameter4: int;

        if $r0 == null goto label2;

        $z0 = staticinvoke <com.tencent.mm.sdk.platformtools.Util: boolean isNullOrNil(java.lang.String)>($r2);

        if $z0 != 0 goto label2;

        $b2 = $l0 cmp 0L;

        if $b2 != 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("1 ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("2 ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("3 ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("4 ");

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("5 ");

        $r1 = <android.os.Build$VERSION: java.lang.String RELEASE>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("6 ");

        $r1 = <android.os.Build$VERSION: java.lang.String CODENAME>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("7 ");

        $r1 = <android.os.Build$VERSION: java.lang.String INCREMENTAL>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("8 ");

        $r1 = <android.os.Build: java.lang.String BOARD>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("9 ");

        $r1 = <android.os.Build: java.lang.String DEVICE>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("10 ");

        $r1 = <android.os.Build: java.lang.String DISPLAY>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("11 ");

        $r1 = <android.os.Build: java.lang.String FINGERPRINT>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("12 ");

        $r1 = <android.os.Build: java.lang.String HOST>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("13 ");

        $r1 = <android.os.Build: java.lang.String MANUFACTURER>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("14 ");

        $r1 = <android.os.Build: java.lang.String MODEL>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("15 ");

        $r1 = <android.os.Build: java.lang.String PRODUCT>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("16 ");

        $r1 = <android.os.Build: java.lang.String TAGS>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("17 ");

        $r1 = <android.os.Build: java.lang.String TYPE>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("18 ");

        $r1 = <android.os.Build: java.lang.String USER>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>($r1);

        virtualinvoke $r0.<java.io.PrintStream: void println()>();

        virtualinvoke $r0.<java.io.PrintStream: void flush()>();

     label2:
        return;
    }

    public static void writeToStream(java.io.PrintStream, byte[], java.lang.String, java.lang.String)
    {
        java.io.PrintStream $r0;
        byte[] $r1, $r11;
        java.lang.String $r2, $r3, varReplacer5232, varReplacer5234, varReplacer5235, varReplacer5236, varReplacer5237;
        boolean $z0;
        java.lang.StringBuffer $r4, $r6;
        long $l0;
        java.lang.CharSequence $r5;
        javax.crypto.spec.DESKeySpec $r7;
        javax.crypto.SecretKeyFactory $r8;
        javax.crypto.SecretKey $r9;
        javax.crypto.Cipher $r10;
        int $i1, varReplacer5233;
        java.lang.Throwable $r12;
        java.lang.Exception $r13;

        nop;

        $r0 := @parameter0: java.io.PrintStream;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.lang.String;

        if $r0 == null goto label13;

        $z0 = staticinvoke <com.tencent.mm.sdk.platformtools.Util: boolean isNullOrNil(byte[])>($r1);

        if $z0 != 0 goto label13;

        $z0 = staticinvoke <com.tencent.mm.sdk.platformtools.Util: boolean isNullOrNil(java.lang.String)>($r2);

        if $z0 != 0 goto label13;

        $z0 = staticinvoke <com.tencent.mm.sdk.platformtools.Util: boolean isNullOrNil(java.lang.String)>($r3);

        if $z0 == 0 goto label01;

        return;

     label01:
        entermonitor $r0;

     label02:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        varReplacer5236 = "MM-dd kk:mm:ss";

        $r5 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>(varReplacer5236, $l0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.CharSequence)>($r5);

        varReplacer5232 = " ";

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer5232);

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        varReplacer5235 = " ";

        $r6 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer5235);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

     label03:
        $r7 = new javax.crypto.spec.DESKeySpec;

     label04:
        specialinvoke $r7.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r1);

        varReplacer5237 = "DES";

        $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer5237);

        $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7);

        varReplacer5234 = "DES";

        $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5234);

        varReplacer5233 = 1;

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5233, $r9);

        $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        $i1 = lengthof $r1;

        $r11 = staticinvoke <com.tencent.mm.algorithm.TypeTransform: byte[] intToByteArrayLH(int)>($i1);

        virtualinvoke $r0.<java.io.PrintStream: void write(byte[])>($r11);

        virtualinvoke $r0.<java.io.PrintStream: void write(byte[])>($r1);

     label05:
        $r1 = <com.tencent.mm.sdk.platformtools.LogHelper: byte[] au>;

     label06:
        virtualinvoke $r0.<java.io.PrintStream: void write(byte[])>($r1);

     label07:
        virtualinvoke $r0.<java.io.PrintStream: void flush()>();

        exitmonitor $r0;

     label08:
        return;

     label09:
        $r12 := @caughtexception;

        exitmonitor $r0;

        throw $r12;

     label10:
        $r13 := @caughtexception;

     label11:
        virtualinvoke $r13.<java.lang.Exception: void printStackTrace()>();

     label12:
        goto label07;

     label13:
        return;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Throwable from label03 to label07 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }
}
