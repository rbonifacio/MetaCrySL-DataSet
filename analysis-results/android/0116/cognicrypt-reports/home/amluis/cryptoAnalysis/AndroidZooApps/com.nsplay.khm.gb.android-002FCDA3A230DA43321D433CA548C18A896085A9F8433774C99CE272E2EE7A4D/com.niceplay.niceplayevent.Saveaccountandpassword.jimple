public class com.niceplay.niceplayevent.Saveaccountandpassword extends java.lang.Object
{
    private static final java.lang.String aesEncryptionAlgorithm;
    private static final java.lang.String characterEncoding;
    private static final java.lang.String cipherTransformation;
    public static boolean ok;
    private static final java.lang.String successUid;
    private static final java.lang.String successaccount;
    private static final java.lang.String successopenid;
    private static final java.lang.String successpassword;

    public void <init>()
    {
        com.niceplay.niceplayevent.Saveaccountandpassword $r0;

        $r0 := @this: com.niceplay.niceplayevent.Saveaccountandpassword;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String GetaccountString(android.app.Activity)
    {
        android.app.Activity $r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2, $r3;
        int $i0;
        android.content.ContentResolver $r4;
        java.lang.Exception $r5;

        $r0 := @parameter0: android.app.Activity;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("account", "");

        $r3 = $r2;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>("");

     label2:
        if $i0 != 0 goto label5;

     label3:
        $r4 = virtualinvoke $r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "account");

     label4:
        $r3 = $r2;

     label5:
        if $r3 != null goto label6;

        $r3 = "";

     label6:
        $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r3, "utf-8");

        $r2 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: java.lang.String decrypt(java.lang.String,java.lang.String)>($r2, "9@a8i7Az");

     label7:
        return $r2;

     label8:
        $r5 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static java.lang.String GetpasswordString(android.app.Activity)
    {
        android.app.Activity $r0;
        android.content.SharedPreferences $r1;
        java.lang.String $r2, $r3;
        int $i0;
        android.content.ContentResolver $r4;
        java.lang.Exception $r5;

        $r0 := @parameter0: android.app.Activity;

        $r1 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("password", "");

        $r3 = $r2;

     label1:
        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>("");

     label2:
        if $i0 != 0 goto label5;

     label3:
        $r4 = virtualinvoke $r0.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $r2 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r4, "password");

     label4:
        $r3 = $r2;

     label5:
        if $r3 != null goto label6;

        $r3 = "";

     label6:
        $r2 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r3, "utf-8");

        $r2 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: java.lang.String decrypt(java.lang.String,java.lang.String)>($r2, "9@a8i7Az");

     label7:
        return $r2;

     label8:
        $r5 := @caughtexception;

        return "";

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    private static java.lang.String decrypt(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r1, varReplacer3245, varReplacer3247;
        byte[] $r2, $r3;
        int varReplacer3246;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        varReplacer3246 = 0;

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer3246);

        varReplacer3245 = "9@a8i7Az";

        $r3 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: byte[] getKeyBytes(java.lang.String)>(varReplacer3245);

        $r0 = new java.lang.String;

        $r2 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: byte[] decrypt(byte[],byte[],byte[])>($r2, $r3, $r3);

        varReplacer3247 = "UTF-8";

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, varReplacer3247);

        return $r0;
    }

    public static byte[] decrypt(byte[], byte[], byte[]) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] $r0, $r1, $r4;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r5;
        java.lang.String varReplacer3248, varReplacer3250;
        int varReplacer3249;

        nop;

        $r4 := @parameter0: byte[];

        $r0 := @parameter1: byte[];

        $r1 := @parameter2: byte[];

        varReplacer3250 = "AES/CBC/PKCS5Padding";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3250);

        $r3 = new javax.crypto.spec.SecretKeySpec;

        varReplacer3248 = "AES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3248);

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        varReplacer3249 = 2;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3249, $r3, $r2);

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        return $r4;
    }

    private static java.lang.String encrypt(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, $r1;
        byte[] $r2, $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r3 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: byte[] getKeyBytes(java.lang.String)>($r1);

        $r2 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: byte[] encrypt(byte[],byte[],byte[])>($r2, $r3, $r3);

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r2, 0);

        return $r0;
    }

    public static byte[] encrypt(byte[], byte[], byte[]) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] $r0, $r1, $r4;
        javax.crypto.spec.IvParameterSpec $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r5;

        $r4 := @parameter0: byte[];

        $r0 := @parameter1: byte[];

        $r1 := @parameter2: byte[];

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/PKCS5Padding");

        $r3 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, "AES");

        $r2 = new javax.crypto.spec.IvParameterSpec;

        specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1);

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r3, $r2);

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        return $r4;
    }

    private static byte[] getKeyBytes(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String $r0, varReplacer3253;
        byte[] $r1, $r2;
        int $i0, $i1, varReplacer3251, varReplacer3252;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = newarray (byte)[16];

        varReplacer3253 = "UTF-8";

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3253);

        $i1 = lengthof $r2;

        $i0 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i0);

        varReplacer3251 = 0;

        varReplacer3252 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer3251, $r1, varReplacer3251, $i0);

        return $r1;
    }

    public static java.lang.String getUserOpenId(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3, $r4;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("OPENid", "");

        $r4 = $r3;

        if $r3 != null goto label1;

        $r4 = "0";

     label1:
        $r3 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r4, "utf-8");

        $r3 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: java.lang.String decrypt(java.lang.String,java.lang.String)>($r3, "9@a8i7Az");

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        return "0";

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String getUserUid(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.Exception $r1;
        android.content.SharedPreferences $r2;
        java.lang.String $r3, $r4, varReplacer3238, varReplacer3239, varReplacer3240, varReplacer3241, varReplacer3242, varReplacer3243, varReplacer3244;
        int $i0;
        android.content.ContentResolver $r5;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r2 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r0);

        varReplacer3239 = "UserUid";

        varReplacer3240 = "";

        $r3 = interfaceinvoke $r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer3239, varReplacer3240);

        $r4 = $r3;

     label1:
        varReplacer3244 = "";

        $i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>(varReplacer3244);

     label2:
        if $i0 != 0 goto label5;

     label3:
        $r5 = virtualinvoke $r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        varReplacer3241 = "UserUid";

        $r3 = staticinvoke <android.provider.Settings$System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r5, varReplacer3241);

     label4:
        $r4 = $r3;

     label5:
        if $r4 != null goto label6;

        $r4 = "0";

     label6:
        varReplacer3242 = "utf-8";

        $r3 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>($r4, varReplacer3242);

        varReplacer3243 = "9@a8i7Az";

        $r3 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: java.lang.String decrypt(java.lang.String,java.lang.String)>($r3, varReplacer3243);

     label7:
        return $r3;

     label8:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Exception: void printStackTrace()>();

        varReplacer3238 = "0";

        return varReplacer3238;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public static void saveUserOpenID(java.lang.String, android.content.Context)
    {
        java.lang.String $r0;
        android.content.Context $r1;
        java.lang.Exception $r2;
        boolean $z0;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("");

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("0");

        if $z0 != 0 goto label5;

        if $r0 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("OPENid", $r0);

     label2:
        $r0 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: java.lang.String encrypt(java.lang.String,java.lang.String)>($r0, "9@a8i7Az");

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "utf-8");

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("OPENid", $r0);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: boolean commit()>();

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void saveUserUid(java.lang.String, android.content.Context)
    {
        java.lang.String $r0, $r5;
        android.content.Context $r1;
        java.lang.Exception $r2;
        boolean $z0;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;
        android.content.ContentResolver $r6;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: android.content.Context;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("");

        if $z0 != 0 goto label5;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("0");

        if $z0 != 0 goto label5;

        if $r0 != null goto label1;

        return;

     label1:
        $r3 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r1);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        staticinvoke <java.lang.System: java.lang.String setProperty(java.lang.String,java.lang.String)>("UserUid", $r0);

     label2:
        $r0 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: java.lang.String encrypt(java.lang.String,java.lang.String)>($r0, "9@a8i7Az");

        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "utf-8");

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("UserUid", $r5);

        $r6 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "utf-8");

        staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r6, "UserUid", $r0);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: boolean commit()>();

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void saveaccountpassword(java.lang.String, java.lang.String, android.content.Context)
    {
        java.lang.String $r0, $r1, $r5;
        android.content.Context $r2;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;
        android.content.ContentResolver $r6;
        java.lang.Exception $r7;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.Context;

        $r3 = staticinvoke <android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>($r2);

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

     label1:
        $r0 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: java.lang.String encrypt(java.lang.String,java.lang.String)>($r0, "9@a8i7Az");

        $r1 = staticinvoke <com.niceplay.niceplayevent.Saveaccountandpassword: java.lang.String encrypt(java.lang.String,java.lang.String)>($r1, "9@a8i7Az");

        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "utf-8");

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("account", $r5);

        $r5 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("password", $r5);

        $r6 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r0, "utf-8");

        staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r6, "account", $r0);

        $r6 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r0 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "utf-8");

        staticinvoke <android.provider.Settings$System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>($r6, "password", $r0);

     label2:
        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: boolean commit()>();

        return;

     label3:
        $r7 := @caughtexception;

        goto label2;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
