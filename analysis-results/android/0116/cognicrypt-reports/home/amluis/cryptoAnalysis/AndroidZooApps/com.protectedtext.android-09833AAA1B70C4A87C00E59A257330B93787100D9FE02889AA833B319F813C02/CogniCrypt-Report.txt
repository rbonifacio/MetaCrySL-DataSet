Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer279)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String)>
		SHA-256: 962abfff9a6bdcb416025e2902f343b04e4225b5559ed99ddb4d6d008bf2040f
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 2dbc84cde1e091bcbbd0eb0103865b19b9daa0586bc47369f76a32bbb6c021fc
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer288)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: b54eecf5633aa405057cedcb50b556dba87ede158a9158d9b880dd37b6f752e2
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: 81e7553c29fcb75faa99373eb2f1f0fe117a1ed6ea013bb022a0b69f910c5743
		Secure: true
	Object:
		Variable: r20
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 66837d2130fadc330f4e8e129ebbae8317e66baa771e646885ed2a8fd457a900
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: 1f744d0b295a426fc3e6d54d6cc2e1ba2cd0b109f257aaff84048613e3a9d51b
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer295)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: 5f401a5995a7a5e1026fbd9a8ca90642c0e766eb46a1bae55a1a604922156466
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e11f3b4981ee2e57a7f52b4673a5c46f95a8ccd2c35ac7761c583c54a33ab7d6
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer222)
		Method: <com.protectedtext.android.b.a: boolean b(java.lang.String,com.protectedtext.android.b.a)>
		SHA-256: 3383e39b790b1467008ed33d0c71e81ee428fdc8d198db088160ff7812d2b21f
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: bac8e47f5416dbbbcd54d49af513608d97500b56e5183fb9cfe5baade63044fd
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 7cd7f309ef8ce620b6d4f336b3debf2bce427890a0b9ff3f1d9a26ee3d60bc74
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer283)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: 626edada5bf4466e504bd20be2bee3924e64283ee3bc85a6f3d4e23c0a66ca9
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: 6b8abeead573865dbf9e8c9ac97ac912ade11232e856af90de67e90616b061fc
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: a2a1e931366a9cc695a4982ca66bd0dd71c85fdac9c4076aea8a6281ecaf800c
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1402)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 9383789e11b2b2d85c89317d353fb78570da33e985b3831d9ca17f9ddc0967f6
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <com.protectedtext.android.b.a: boolean b(java.lang.String,com.protectedtext.android.b.a)>
		SHA-256: e41a6299988edaff7513fc09e33c64cbdf8800bd3beae139423ca1f72b623323
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: 2574c8d142cce8662ec979fd827fd6fe8d2f1ae11cf389b5951dd326506ac4d8
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1431)
		Method: <com.protectedtext.android.b.a: org.json.JSONObject b(com.protectedtext.android.a.a)>
		SHA-256: 8908e7baac5e00321c9e5412436577ac5944eeb52ef79c99d1117f6052824e6e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String)>
		SHA-256: 6d1a39c1831e5568cb7c076330221adccad2df3c11e1e633666447394a4bab1a
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ba35d927318612f877bc42ace512fed40d6391448befcbbbd9ab1ec3a4e58230
		Secure: true
	Object:
		Variable: r18
		Type: java.security.SecureRandom
		Statement: specialinvoke r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: b4e66e1ecd80281928ac668400663e56c007dfaabccca0b78a2295239ee54d6b
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1400)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ce968193a43a341ac337edc2c0bacfefde259f20a8e6218668e29912de232093
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <com.protectedtext.android.b.a: org.json.JSONObject b(com.protectedtext.android.a.a)>
		SHA-256: b44a3bec7cda07b98971d60983df3a2073d0dbd9246851b9ddd4e947f940b278
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: d5c0b2ffafb28180aefa4f464fce16ed132d5eaff8bc020d2569e2363788e561
		Secure: true
	Object:
		Variable: varReplacer1399
		Type: java.lang.String
		Statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1399)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d8c716cc57908f53f1ee902ab79bc2eff61cf1c21647e2fee1df7a2e7f41cc3c
		Secure: false
	Object:
		Variable: varReplacer288
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer288)
		Method: <com.protectedtext.android.other.g: java.lang.String b(java.lang.String,java.lang.String)>
		SHA-256: bcf72e84910f4f925bf357fdd7e30875a863b392de21687fcb298db0ed0da6da
		Secure: false
	Object:
		Variable: r19
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1399)
		Method: <com.protectedtext.android.other.g: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: d92f8d974b987d13c09f9ee1ccfdda8cfdc9892f44da3e3f6b515b01a1fe6c0e
		Secure: false

Findings in Java Class: com.protectedtext.android.other.g

	 in Method: java.lang.String b(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer288)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer294, $r7, $r8)


	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1404, $r8, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1399)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1404, $r8, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)


Findings in Java Class: com.protectedtext.android.b.a

	 in Method: boolean b(java.lang.String,com.protectedtext.android.b.a)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer215, varReplacer215, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer215, varReplacer215, $r8)


	 in Method: org.json.JSONObject b(com.protectedtext.android.a.a)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1432, varReplacer1432, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1432, varReplacer1432, $r9)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 27

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 11
=====================================================================