Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r8, varReplacer137)
		Method: <com.rapid.utils.Encryption: java.lang.String decrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: e10ec151c5b7d80c15b1a5cc43ccb3d538c97be6dee75654ceacf283fa25d93b
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer143)
		Method: <com.rapid.utils.Encryption: java.lang.String encrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: 1e15945dd2b19b62ebd09cbdae126e1c042617ee1b3d5e0169712ead75ae29e9
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8)
		Method: <com.rapid.utils.Encryption: java.lang.String decrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: 875acc19fdbe8238c093aced5cc39686fe7ff4c3be70d679590718876fc9b185
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer139)
		Method: <com.rapid.utils.Encryption: java.lang.String encrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: e8087149e481fcffea9b2cf0fd946e36b2fbc0d3c06a21a4a7788692454b86ea
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.rapid.utils.Encryption: java.lang.String encrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: 6a32c89ca814a00cef6d2ac25818ef881f1e353dc6713a541d94e9a6b5a486dd
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r8, varReplacer140)
		Method: <com.rapid.utils.Encryption: java.lang.String encrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: 26c9b115cebd2045c05676e6b4af7b3ed37ce54465b6fda9904846dfa4d565c3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer133)
		Method: <com.rapid.utils.Encryption: java.lang.String decrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: abdb974883ce6309758dce8d31742e81a9a248d9b029c4472f2d7b592f2e7412
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer136)
		Method: <com.rapid.utils.Encryption: java.lang.String decrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: c06503b228692f2780c88a5a471f911805ac5385631e766eac148f3a2ab06c69
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.rapid.utils.Encryption: java.lang.String decrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: d7d3833e0adfcb5c97ef74e62919a7fa46406ab851f65d34f8714aadc612255e
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8)
		Method: <com.rapid.utils.Encryption: java.lang.String encrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)>
		SHA-256: ac58e40777a4ebfd798a6ff0be0a7de559e3acea1798b4c0daad6b4cc0a9533b
		Secure: false

Findings in Java Class: com.rapid.utils.Encryption

	 in Method: java.lang.String decrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c06503b228692f2780c88a5a471f911805ac5385631e766eac148f3a2ab06c69)
			First parameter (with value "PBEWithMD5AndDES") should be any of {ARC4, AES, BLOWFISH, DESede, RSA}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer136)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #e10ec151c5b7d80c15b1a5cc43ccb3d538c97be6dee75654ceacf283fa25d93b)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r8, varReplacer137)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer134, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r8, varReplacer137)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


	 in Method: java.lang.String encrypt(java.lang.String,com.rapid.utils.Encryption$EncryptionProvider)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1e15945dd2b19b62ebd09cbdae126e1c042617ee1b3d5e0169712ead75ae29e9)
			First parameter (with value "PBEWithMD5AndDES") should be any of {ARC4, AES, BLOWFISH, DESede, RSA}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer143)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #26c9b115cebd2045c05676e6b4af7b3ed37ce54465b6fda9904846dfa4d565c3)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r8, varReplacer140)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer141, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r8, varReplacer140)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	RequiredPredicateError: 6
	ForbiddenMethodError: 2
=====================================================================