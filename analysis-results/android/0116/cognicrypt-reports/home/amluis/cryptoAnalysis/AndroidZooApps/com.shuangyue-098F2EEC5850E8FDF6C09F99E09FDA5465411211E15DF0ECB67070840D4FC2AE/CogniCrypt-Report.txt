Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8313)
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: bbc62f80e1973e6632f88745c526489ef3ab9cf6b215fd4064e3b64cd9026b3b
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 771d48022bf3b5cd1975d8160cfa1b1cfd84b522b7cfbf5fa22ae7e3e0ec094a
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cj: java.lang.String c(java.lang.String)>
		SHA-256: e9e746e06a263ae3298f9afd9aae2329ecf87ed3edcdb531eef74b80daf701a5
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15845)
		Method: <u.aly.cm: java.lang.String r(android.content.Context)>
		SHA-256: a590b2b863a814f920714756b0f5971f4eaf3adb3e1adfae07a5808f522de68b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8447)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 95fcf92315c3d8ace4eebe175321955d4b09bc17cd062bbce9ea2142926f9a9d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15337)
		Method: <u.aly.cj: java.lang.String c(java.lang.String)>
		SHA-256: c3c0511ff2bb74b14da2a5131ad086edb33d75136102c63e05a8d7630cac7daa
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.dianyue.shuangyue.googleplay.util.k: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 7881da5df3a1926d35307ca3d59bba8d3320568b6e7647592955d6c72c4e4e4d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15645)
		Method: <u.aly.cj: byte[] b(byte[])>
		SHA-256: a7a0ca280df3c1a9216117e51654046285fdc0ef40edcdf17a465ee18b3cca09
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore2d.df: byte[] e(java.lang.String)>
		SHA-256: 82ccb6f87a6fa0897797ba40aa5f6af77ac165443e2b91d24dc90df6348d217f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13681)
		Method: <com.iflytek.cloud.a.i.k: java.lang.String b(java.lang.String)>
		SHA-256: e9e7054af8efac2911f33c819473a70c7c9dbd24bd492b7d310dde09ce64ba94
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: f44b1d8a1562491f3628393050d3051eaaddafc0a1521f6a48f82755c4d836aa
		Secure: false
	Object:
		Variable: varReplacer14273
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer14273)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: ecddeede8596cbe05f1e5e4bb1c2c4c1853c177243e98147be9b431c5751249c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: void <clinit>()>
		SHA-256: 81571f0f65b71822bd958d9fd94e85c4e0b32e123ab4c4b6ad790e4712eb88cf
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15640)
		Method: <u.aly.cn: java.lang.String b(java.lang.String)>
		SHA-256: 12c492ffe136c92c01b975c6567b3dbe2739c0be65f4df1da19059062df83663
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <u.aly.ag: void a()>
		SHA-256: 5cc4e9b101385fa66f6ff1d11413d5762bd39a30728f5c1ea31647b0f7bd3352
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 918bebe403e50fa57eec244da90c3e43f8e3d5906186b0e4ed6a963aa2f69db3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.dianyue.shuangyue.net.http.p: java.security.KeyStore a()>
		SHA-256: 2b07ca059440c5511bd37927988fcf6efa990e1795b8235032779d20bc37799b
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: 8e4d3ce3f6a3961627a164a718666216cbb71ad4d5d8d2a6bc5f52f33a56ba40
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer14273)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: b773f2d67a2a7c0f02a4a34d467a16b441c0510bc5933cbf00672147391029fe
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: c4d4007881f660d31095047c858a7cddf0ade719a9b3b9bb76358ae5434d949b
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cn: java.lang.String b(java.lang.String)>
		SHA-256: f8d897717eab916f1850eea1d60e41b8fe1d195bf16d452b12f87adea8392a4f
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.cm: java.lang.String r(android.content.Context)>
		SHA-256: 7ddb8756d7edb79f60a99a3ecdb48c28c6b7fa89e8e56c7dffd9b3cfc4a4f96
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 4e767d3d3eba2d7ee31e03fc2e2634e29a28892a4e9da789c1bf1489d6de298c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore2d.de: byte[] a(byte[],java.security.Key)>
		SHA-256: c727289a66f61570b588ce85ca15414d2e5030eac97434fa4e1adfb6843260e8
		Secure: false
	Object:
		Variable: varReplacer8449
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8449)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: b875834b836fa045b17c6fef3ff1d972635b8d2d2576243c6c46a1e1dbff6c3f
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5282)
		Method: <okhttp3.ah: void <init>(okhttp3.ai)>
		SHA-256: f38665e3b6c73284f3ea16c897d5b14e989035963e02f6cb133fcb3af92a1445
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: 9d5518b928395bd05bce5b6b363adfca98533751c6f8b6369158fc7086bf8946
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dianyue.shuangyue.net.b: java.lang.String c(java.lang.String)>
		SHA-256: aaa2a9b912a557a05736631d9925e233d1c938a0d56293557677e121c0d6a658
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14906)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 4ad407a0ab6c3363f526a7bc8097d222e32ee69a298002d67bbb3b94d081c504
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: baf36ba0be0be9712f0773d5e6bd6ea1289e24d9f49bc21a49b2c6b599778b28
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8411)
		Method: <com.amap.api.mapcore2d.de: byte[] a(byte[],java.security.Key)>
		SHA-256: 46821b23c686666aa57e78f7c9c5b7baf990a7e92c880076af1333a50299861
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 667210ec6c57b08d5df500b485f4ccb0e5cdaf1471b1388f525ac35aeea49d65
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dianyue.shuangyue.utils.universalimageloader.a.a.b.c: byte[] a(byte[])>
		SHA-256: 2c9b15e05768c3bb41a85d6b678b8517c98e5491cef1f7980fad6a50e7446d8b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14994)
		Method: <u.aly.cn: java.lang.String a(java.lang.String)>
		SHA-256: 51a7e08ee9630cfc626642f77cabeef17571c4461db6f7c9fd7f7a9ba133148d
		Secure: true
	Object:
		Variable: varReplacer14910
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14910)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: c873e2ce293e5221628b691ddc1b53abe80052f5ca0fbcb8fa7b52c8fb0738db
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 8f959de29dd11411b269c986bbaf8c6255646eb9a772a5c5a0ee108386cc476f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8692)
		Method: <com.iflytek.sunflower.c.c: java.lang.String a(java.lang.String)>
		SHA-256: 9c35f1aedac46b483e712e4422a5b11b26f75ac7cd3c73bd5ff4bdaad9c6d4b5
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.iflytek.cloud.a.i.k: java.lang.String b(java.lang.String)>
		SHA-256: 3db1e8c7300ea6b8ceccc7f0e48d9d6ddaff89f31cf48002dd34791f4e992cb7
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: f5d4bf9ca7f7fb9000cf6a89dae134f0d93e52312b490bf6d8a3635e0c274af1
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: 49c5be17f6636d1cddfea76e5c36d1ba1f88788c784d140190c2a1684f41fbeb
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1534)
		Method: <com.dianyue.shuangyue.net.http.p: void <init>(java.security.KeyStore)>
		SHA-256: ca7f35a9638c6440e153f030de73453e6356dc418c44ac193b556bdea6f8d3cc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14909)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 18fdafcf699f6fc323dac3e8ca31de96c469148d0db0651b22c143aa2b40f2f9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: 589f10f65a2d04fe4b0bb06abf8101daf047c6762569191c753224ee717411cc
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: c0ff5c7b3a0bb15c203075d8186ded0937736db447ed4b0f9fef6c06ec241485
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cn: java.lang.String a(java.lang.String)>
		SHA-256: a99da5275203c1ac4c0963ef6103e48d5c693ec8820291a487cdbb4c564fc729
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6672)
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: 87dbedde2f0ff069cdd5632d025e3b231763226fd009ef6f98680e47b5c09274
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8449)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: cae83af064894ce2a69639e7a469478a874722f681e87f6462e7b5c74f282e2d
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer14279)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 5897af44970a2a51a1abb460bb1094c32133c25f21c2571b8085288eeee7ffac
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: bfdf7a7690f99313d7d90ffe799c08accc3face2ec5e8c2f9d6c2ccbb3a7f821
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.iflytek.sunflower.c.c: java.lang.String a(java.lang.String)>
		SHA-256: a980ab1cf206f1b2d55efecf6da410427f487cf11829045ba51026744a966f67
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1024)
		Method: <com.dianyue.shuangyue.net.b: java.lang.String c(java.lang.String)>
		SHA-256: d96709c2b7dc089a0754b3d5880bce715d1d6ff408b6814551dcecf5316016ee
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: edf8d4512ea4d685450853f37af1c60bdb4661ea96e0a8476dfe9d41f4bd92a
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8441)
		Method: <com.amap.api.mapcore2d.df: byte[] e(java.lang.String)>
		SHA-256: b025072d225369a3f77fcc72025cb01564d8dbfd84b613e5e91fedf51a7058c8
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer14125)
		Method: <com.dianyue.shuangyue.googleplay.util.k: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: d5d7d20723b3603c3300fc17cff5f777e3555a04ba17fb47431ba34708dfb16a
		Secure: false
	Object:
		Variable: varReplacer14905
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14905)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 69a2fc0aa46f026841452c89e5ea791be94bf31d5499c7db00bec156a03674d6
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8235)
		Method: <com.amap.api.mapcore2d.da: java.lang.String d(android.content.Context)>
		SHA-256: b5585873a40bd7e57237e65043233b09f021adfbd54e31025a744a10fcb70f79
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14910)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 9c8230d98f952e5f2701335a604702718af353a91ce46b310ab692c716d00867
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: e3190b6f4323befbf18670a0eb10cd2790133ea7e985cb6f92d999f647f560e9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 67f8276464ff2b603934593edfd3991f3b602712d92e93712f83733b7783915
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.pgyersdk.conf.a: void g(android.content.Context)>
		SHA-256: 1a0c3c23a5d3842fdc4a6129337c825534dd47cb3a9bfb4079f1e5fe30b0a00d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16175)
		Method: <com.dianyue.shuangyue.utils.universalimageloader.a.a.b.c: byte[] a(byte[])>
		SHA-256: 43d5954e79998e96f9ebdd752e0a5e29947361871d4315876f4932a9d13267e6
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16170)
		Method: <u.aly.al: void <init>(java.security.KeyStore)>
		SHA-256: 6bdb95d017bfff08c25a17e1edfcb240606df8e0a0a5bf4f8297d333792ea9d2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 8efbf86f5ea16d28f9b105ce3b7240b42e587f75eb726331522c698e11e36cc4
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.amap.api.mapcore2d.da: java.lang.String d(android.content.Context)>
		SHA-256: ce582d3359589e0fcc5e3efea69cc0ee28ef21a78ea71e381a925189678ced84
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10420)
		Method: <com.pgyersdk.conf.a: void g(android.content.Context)>
		SHA-256: 4e890213060a567634d1001027b0b08af7ea33f7ef522df545d2b33cd108c59
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cj: byte[] b(byte[])>
		SHA-256: 4c900ece8f5922e7875f343933ffca231d7462c481943b7e8f1b1528b82a0945
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14905)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 2b1a1bfde5e6d07fe0c390ecea15068f0b86cd16e0e2841e86f7fac951ca3618
		Secure: false

Findings in Java Class: com.amap.api.mapcore2d.da

	 in Method: java.lang.String d(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b5585873a40bd7e57237e65043233b09f021adfbd54e31025a744a10fcb70f79)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8235)


Findings in Java Class: com.amap.api.mapcore2d.dc

	 in Method: java.lang.String c(android.content.Context,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #bbc62f80e1973e6632f88745c526489ef3ab9cf6b215fd4064e3b64cd9026b3b)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8313)


Findings in Java Class: cn.jpush.android.util.g

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: u.aly.cj

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c3c0511ff2bb74b14da2a5131ad086edb33d75136102c63e05a8d7630cac7daa)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15337)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14905)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14907, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14907, $r2, $r4)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer14910)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14908, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.amap.api.mapcore2d.de

	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8412, $r1)


Findings in Java Class: com.dianyue.shuangyue.net.http.p

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1532, r5, varReplacer1532)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1532, r5, varReplacer1532)


Findings in Java Class: com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters

	 in Method: java.lang.String calculateSignature(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer14273)


Findings in Java Class: com.dianyue.shuangyue.googleplay.util.k

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: okhttp3.ah

	 in Method: void <init>(okhttp3.ai)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5279, varReplacer5279, varReplacer5279)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5279, varReplacer5279, varReplacer5279)


Findings in Java Class: u.aly.al

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16171, r7, varReplacer16171)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16171, r7, varReplacer16171)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 68

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	ConstraintError: 2
	RequiredPredicateError: 16
	IncompleteOperationError: 1
=====================================================================