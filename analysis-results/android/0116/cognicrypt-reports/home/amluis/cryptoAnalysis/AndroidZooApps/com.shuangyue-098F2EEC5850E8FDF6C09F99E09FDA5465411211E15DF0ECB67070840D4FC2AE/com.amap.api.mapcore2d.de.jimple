public class com.amap.api.mapcore2d.de extends java.lang.Object
{
    private static final char[] a;
    private static final byte[] b;

    static void <clinit>()
    {
        char[] $r0;
        byte[] $r1;
        int $i0, $i1;
        byte $b2;

        nop;

        $r0 = newarray (char)[64];

        $r0[0] = 65;

        $r0[1] = 66;

        $r0[2] = 67;

        $r0[3] = 68;

        $r0[4] = 69;

        $r0[5] = 70;

        $r0[6] = 71;

        $r0[7] = 72;

        $r0[8] = 73;

        $r0[9] = 74;

        $r0[10] = 75;

        $r0[11] = 76;

        $r0[12] = 77;

        $r0[13] = 78;

        $r0[14] = 79;

        $r0[15] = 80;

        $r0[16] = 81;

        $r0[17] = 82;

        $r0[18] = 83;

        $r0[19] = 84;

        $r0[20] = 85;

        $r0[21] = 86;

        $r0[22] = 87;

        $r0[23] = 88;

        $r0[24] = 89;

        $r0[25] = 90;

        $r0[26] = 97;

        $r0[27] = 98;

        $r0[28] = 99;

        $r0[29] = 100;

        $r0[30] = 101;

        $r0[31] = 102;

        $r0[32] = 103;

        $r0[33] = 104;

        $r0[34] = 105;

        $r0[35] = 106;

        $r0[36] = 107;

        $r0[37] = 108;

        $r0[38] = 109;

        $r0[39] = 110;

        $r0[40] = 111;

        $r0[41] = 112;

        $r0[42] = 113;

        $r0[43] = 114;

        $r0[44] = 115;

        $r0[45] = 116;

        $r0[46] = 117;

        $r0[47] = 118;

        $r0[48] = 119;

        $r0[49] = 120;

        $r0[50] = 121;

        $r0[51] = 122;

        $r0[52] = 48;

        $r0[53] = 49;

        $r0[54] = 50;

        $r0[55] = 51;

        $r0[56] = 52;

        $r0[57] = 53;

        $r0[58] = 54;

        $r0[59] = 55;

        $r0[60] = 56;

        $r0[61] = 57;

        $r0[62] = 43;

        $r0[63] = 47;

        <com.amap.api.mapcore2d.de: char[] a> = $r0;

        $r1 = newarray (byte)[128];

        <com.amap.api.mapcore2d.de: byte[] b> = $r1;

        $i0 = 0;

     label1:
        if $i0 >= 128 goto label2;

        $r1 = <com.amap.api.mapcore2d.de: byte[] b>;

        $r1[$i0] = -1;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i0 = 65;

     label3:
        if $i0 > 90 goto label4;

        $r1 = <com.amap.api.mapcore2d.de: byte[] b>;

        $i1 = $i0 + -65;

        $b2 = (byte) $i1;

        $r1[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $i0 = 97;

     label5:
        if $i0 > 122 goto label6;

        $r1 = <com.amap.api.mapcore2d.de: byte[] b>;

        $i1 = $i0 + -97;

        $i1 = $i1 + 26;

        $b2 = (byte) $i1;

        $r1[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label5;

     label6:
        $i0 = 48;

     label7:
        if $i0 > 57 goto label8;

        $r1 = <com.amap.api.mapcore2d.de: byte[] b>;

        $i1 = $i0 + -48;

        $i1 = $i1 + 52;

        $b2 = (byte) $i1;

        $r1[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label7;

     label8:
        $r1 = <com.amap.api.mapcore2d.de: byte[] b>;

        $r1[43] = 62;

        $r1 = <com.amap.api.mapcore2d.de: byte[] b>;

        $r1[47] = 63;

        return;
    }

    public void <init>()
    {
        com.amap.api.mapcore2d.de $r0;

        $r0 := @this: com.amap.api.mapcore2d.de;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String a(java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.String;

        $r2 = staticinvoke <com.amap.api.mapcore2d.de: byte[] b(java.lang.String)>($r0);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;
    }

    public static java.lang.String a(byte[])
    {
        byte[] $r0;
        java.lang.String $r1, varReplacer8391, varReplacer8392;
        java.lang.Throwable $r2;
        null_type varReplacer8393;

        nop;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <com.amap.api.mapcore2d.de: java.lang.String c(byte[])>($r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        varReplacer8391 = "Encrypt";

        varReplacer8392 = "encodeBase64";

        staticinvoke <com.amap.api.mapcore2d.ed: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r2, varReplacer8391, varReplacer8392);

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace()>();

        varReplacer8393 = null;

        return varReplacer8393;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static byte[] a(byte[], java.security.Key) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] $r0;
        java.security.Key $r1;
        javax.crypto.Cipher $r2;
        java.lang.String varReplacer8411;
        int varReplacer8412;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.security.Key;

        varReplacer8411 = "RSA/ECB/PKCS1Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8411);

        varReplacer8412 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8412, $r1);

        $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    static byte[] a(byte[], byte[])
    {
        byte[] $r0, $r1;
        java.lang.Throwable $r2, $r3, $r4, $r5, $r6, $r7;
        java.security.InvalidKeyException r8;
        java.security.NoSuchAlgorithmException r9;
        javax.crypto.NoSuchPaddingException r10;
        javax.crypto.IllegalBlockSizeException r11;
        javax.crypto.BadPaddingException r12;
        java.lang.String varReplacer8398, varReplacer8399, varReplacer8400, varReplacer8401, varReplacer8402, varReplacer8403, varReplacer8405, varReplacer8406, varReplacer8407, varReplacer8408, varReplacer8409, varReplacer8410;
        null_type varReplacer8404;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

     label1:
        $r0 = staticinvoke <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>($r0, $r1);

     label2:
        return $r0;

     label3:
        $r2 := @caughtexception;

        varReplacer8402 = "Encrypt";

        varReplacer8403 = "aesEncrypt";

        staticinvoke <com.amap.api.mapcore2d.ed: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r2, varReplacer8402, varReplacer8403);

        r8 = (java.security.InvalidKeyException) $r2;

        virtualinvoke r8.<java.security.InvalidKeyException: void printStackTrace()>();

     label4:
        varReplacer8404 = null;

        return varReplacer8404;

     label5:
        $r3 := @caughtexception;

        varReplacer8405 = "Encrypt";

        varReplacer8406 = "aesEncrypt";

        staticinvoke <com.amap.api.mapcore2d.ed: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r3, varReplacer8405, varReplacer8406);

        r9 = (java.security.NoSuchAlgorithmException) $r3;

        virtualinvoke r9.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label4;

     label6:
        $r4 := @caughtexception;

        varReplacer8409 = "Encrypt";

        varReplacer8410 = "aesEncrypt";

        staticinvoke <com.amap.api.mapcore2d.ed: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r4, varReplacer8409, varReplacer8410);

        r10 = (javax.crypto.NoSuchPaddingException) $r4;

        virtualinvoke r10.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label4;

     label7:
        $r5 := @caughtexception;

        varReplacer8400 = "Encrypt";

        varReplacer8401 = "aesEncrypt";

        staticinvoke <com.amap.api.mapcore2d.ed: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r5, varReplacer8400, varReplacer8401);

        r11 = (javax.crypto.IllegalBlockSizeException) $r5;

        virtualinvoke r11.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        goto label4;

     label8:
        $r6 := @caughtexception;

        varReplacer8407 = "Encrypt";

        varReplacer8408 = "aesEncrypt";

        staticinvoke <com.amap.api.mapcore2d.ed: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r6, varReplacer8407, varReplacer8408);

        r12 = (javax.crypto.BadPaddingException) $r6;

        virtualinvoke r12.<javax.crypto.BadPaddingException: void printStackTrace()>();

        goto label4;

     label9:
        $r7 := @caughtexception;

        varReplacer8398 = "Encrypt";

        varReplacer8399 = "aesEncrypt";

        staticinvoke <com.amap.api.mapcore2d.ed: void a(java.lang.Throwable,java.lang.String,java.lang.String)>($r7, varReplacer8398, varReplacer8399);

        virtualinvoke $r7.<java.lang.Throwable: void printStackTrace()>();

        goto label4;

        catch java.security.InvalidKeyException from label1 to label2 with label3;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label6;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label7;
        catch javax.crypto.BadPaddingException from label1 to label2 with label8;
        catch java.lang.Throwable from label1 to label2 with label9;
    }

    public static java.lang.String b(byte[])
    {
        byte[] $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        $r0 := @parameter0: byte[];

     label1:
        $r1 = staticinvoke <com.amap.api.mapcore2d.de: java.lang.String c(byte[])>($r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace()>();

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static byte[] b(java.lang.String)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        java.io.ByteArrayOutputStream $r1;
        byte[] $r2, $r3;
        byte $b3, $b4;

        $r0 := @parameter0: java.lang.String;

        $i1 = 0;

        if $r0 != null goto label01;

        $r2 = newarray (byte)[0];

        return $r2;

     label01:
        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i0 = lengthof $r2;

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

     label02:
        if $i1 >= $i0 goto label05;

     label03:
        $r3 = <com.amap.api.mapcore2d.de: byte[] b>;

        $i2 = $i1 + 1;

        $b3 = $r2[$i1];

        $b3 = $r3[$b3];

        if $i2 >= $i0 goto label04;

        if $b3 == -1 goto label17;

     label04:
        if $b3 != -1 goto label07;

     label05:
        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;

     label06:
        $i2 = $i1;

     label07:
        $r3 = <com.amap.api.mapcore2d.de: byte[] b>;

        $i1 = $i2 + 1;

        $b4 = $r2[$i2];

        $b4 = $r3[$b4];

        if $i1 >= $i0 goto label08;

        if $b4 == -1 goto label06;

     label08:
        if $b4 == -1 goto label05;

        $i2 = $b3 << 2;

        $b3 = $b4 & 48;

        $b3 = $b3 >>> 4;

        $i2 = $i2 | $b3;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i2);

     label09:
        $i2 = $i1 + 1;

        $b3 = $r2[$i1];

        if $b3 != 61 goto label10;

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;

     label10:
        $r3 = <com.amap.api.mapcore2d.de: byte[] b>;

        $b3 = $r3[$b3];

        if $i2 >= $i0 goto label11;

        if $b3 == -1 goto label16;

     label11:
        if $b3 == -1 goto label05;

        $b4 = $b4 & 15;

        $i1 = $b4 << 4;

        $b4 = $b3 & 60;

        $b4 = $b4 >>> 2;

        $i1 = $i1 | $b4;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i1);

     label12:
        $i1 = $i2 + 1;

        $b4 = $r2[$i2];

        if $b4 != 61 goto label13;

        $r2 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;

     label13:
        $r3 = <com.amap.api.mapcore2d.de: byte[] b>;

        $b4 = $r3[$b4];

        if $i1 >= $i0 goto label14;

        if $b4 == -1 goto label15;

     label14:
        if $b4 == -1 goto label05;

        $b3 = $b3 & 3;

        $i2 = $b3 << 6;

        $i2 = $b4 | $i2;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(int)>($i2);

        goto label02;

     label15:
        $i2 = $i1;

        goto label12;

     label16:
        $i1 = $i2;

        goto label09;

     label17:
        $i1 = $i2;

        goto label03;
    }

    private static byte[] b(byte[], byte[]) throws java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidKeyException, javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] $r0, $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        javax.crypto.Cipher $r3;
        java.lang.String varReplacer8447, varReplacer8449;
        int varReplacer8448;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 = new javax.crypto.spec.SecretKeySpec;

        varReplacer8449 = "AES";

        specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8449);

        varReplacer8447 = "AES/ECB/PKCS5Padding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8447);

        varReplacer8448 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8448, $r2);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        return $r0;
    }

    private static java.lang.String c(byte[])
    {
        byte[] $r0;
        java.lang.StringBuffer $r1;
        java.lang.String $r2, varReplacer8444, varReplacer8445;
        int $i0, $i1, $i2, $i7;
        byte $b3;
        short $s4, $s5, $s8, $s9;
        char[] $r3;
        char $c6;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $i2 = $i1 + 1;

        $b3 = $r0[$i1];

        $s4 = $b3 & 255;

        if $i2 != $i0 goto label3;

        $r3 = <com.amap.api.mapcore2d.de: char[] a>;

        $s5 = $s4 >>> 2;

        $c6 = $r3[$s5];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r3 = <com.amap.api.mapcore2d.de: char[] a>;

        $s5 = $s4 & 3;

        $i0 = $s5 << 4;

        $c6 = $r3[$i0];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        varReplacer8445 = "==";

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer8445);

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label3:
        $i7 = $i2 + 1;

        $b3 = $r0[$i2];

        $s5 = $b3 & 255;

        if $i7 != $i0 goto label4;

        $r3 = <com.amap.api.mapcore2d.de: char[] a>;

        $s8 = $s4 >>> 2;

        $c6 = $r3[$s8];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r3 = <com.amap.api.mapcore2d.de: char[] a>;

        $s8 = $s4 & 3;

        $i0 = $s8 << 4;

        $s8 = $s5 & 240;

        $s8 = $s8 >>> 4;

        $i0 = $i0 | $s8;

        $c6 = $r3[$i0];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r3 = <com.amap.api.mapcore2d.de: char[] a>;

        $s5 = $s5 & 15;

        $i0 = $s5 << 2;

        $c6 = $r3[$i0];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        varReplacer8444 = "=";

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer8444);

        goto label2;

     label4:
        $i1 = $i7 + 1;

        $b3 = $r0[$i7];

        $s8 = $b3 & 255;

        $r3 = <com.amap.api.mapcore2d.de: char[] a>;

        $s9 = $s4 >>> 2;

        $c6 = $r3[$s9];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r3 = <com.amap.api.mapcore2d.de: char[] a>;

        $s4 = $s4 & 3;

        $i2 = $s4 << 4;

        $s4 = $s5 & 240;

        $s4 = $s4 >>> 4;

        $i2 = $i2 | $s4;

        $c6 = $r3[$i2];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r3 = <com.amap.api.mapcore2d.de: char[] a>;

        $s5 = $s5 & 15;

        $i2 = $s5 << 2;

        $s5 = $s8 & 192;

        $s5 = $s5 >>> 6;

        $i2 = $i2 | $s5;

        $c6 = $r3[$i2];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        $r3 = <com.amap.api.mapcore2d.de: char[] a>;

        $s5 = $s8 & 63;

        $c6 = $r3[$s5];

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        goto label1;
    }
}
