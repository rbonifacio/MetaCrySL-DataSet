public class com.vestel.supertvcommunicator.WebSocketClient extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static javax.net.ssl.TrustManager[] sTrustManagers;
    private boolean mConnected;
    private java.util.List mExtraHeaders;
    private android.os.Handler mHandler;
    private android.os.HandlerThread mHandlerThread;
    private com.vestel.supertvcommunicator.WebSocketClient$Listener mListener;
    private com.vestel.supertvcommunicator.HybiParser mParser;
    private final java.lang.Object mSendLock;
    private java.net.Socket mSocket;
    private java.lang.Thread mThread;
    private java.net.URI mURI;

    public void <init>(java.net.URI, com.vestel.supertvcommunicator.WebSocketClient$Listener, java.util.List)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.net.URI $r1;
        com.vestel.supertvcommunicator.WebSocketClient$Listener $r2;
        java.util.List $r3;
        android.os.Looper $r4;
        java.lang.Object $r5;
        com.vestel.supertvcommunicator.HybiParser $r6;
        android.os.HandlerThread $r7;
        android.os.Handler $r8;
        int varReplacer4708;
        java.lang.String varReplacer4709;

        nop;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter0: java.net.URI;

        $r2 := @parameter1: com.vestel.supertvcommunicator.WebSocketClient$Listener;

        $r3 := @parameter2: java.util.List;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.lang.Object mSendLock> = $r5;

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.net.URI mURI> = $r1;

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: com.vestel.supertvcommunicator.WebSocketClient$Listener mListener> = $r2;

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.util.List mExtraHeaders> = $r3;

        varReplacer4708 = 0;

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: boolean mConnected> = varReplacer4708;

        $r6 = new com.vestel.supertvcommunicator.HybiParser;

        specialinvoke $r6.<com.vestel.supertvcommunicator.HybiParser: void <init>(com.vestel.supertvcommunicator.WebSocketClient)>($r0);

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: com.vestel.supertvcommunicator.HybiParser mParser> = $r6;

        $r7 = new android.os.HandlerThread;

        varReplacer4709 = "websocket-thread";

        specialinvoke $r7.<android.os.HandlerThread: void <init>(java.lang.String)>(varReplacer4709);

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: android.os.HandlerThread mHandlerThread> = $r7;

        $r7 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r7.<android.os.HandlerThread: void start()>();

        $r8 = new android.os.Handler;

        $r7 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: android.os.HandlerThread mHandlerThread>;

        $r4 = virtualinvoke $r7.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r8.<android.os.Handler: void <init>(android.os.Looper)>($r4);

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: android.os.Handler mHandler> = $r8;

        return;
    }

    static java.net.URI access$000(com.vestel.supertvcommunicator.WebSocketClient)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.net.URI r1;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        r1 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.net.URI mURI>;

        return r1;
    }

    static javax.net.ssl.SSLSocketFactory access$100(com.vestel.supertvcommunicator.WebSocketClient) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        javax.net.ssl.SSLSocketFactory $r1;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 = specialinvoke $r0.<com.vestel.supertvcommunicator.WebSocketClient: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()>();

        return $r1;
    }

    static com.vestel.supertvcommunicator.HybiParser access$1000(com.vestel.supertvcommunicator.WebSocketClient)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        com.vestel.supertvcommunicator.HybiParser r1;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        r1 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: com.vestel.supertvcommunicator.HybiParser mParser>;

        return r1;
    }

    static java.lang.Object access$1100(com.vestel.supertvcommunicator.WebSocketClient)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.lang.Object r1;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        r1 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.lang.Object mSendLock>;

        return r1;
    }

    static java.net.Socket access$200(com.vestel.supertvcommunicator.WebSocketClient)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.net.Socket r1;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        r1 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.net.Socket mSocket>;

        return r1;
    }

    static java.net.Socket access$202(com.vestel.supertvcommunicator.WebSocketClient, java.net.Socket)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.net.Socket $r1;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter1: java.net.Socket;

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.net.Socket mSocket> = $r1;

        return $r1;
    }

    static java.lang.String access$300(com.vestel.supertvcommunicator.WebSocketClient)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 = specialinvoke $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.lang.String createSecret()>();

        return $r1;
    }

    static java.util.List access$400(com.vestel.supertvcommunicator.WebSocketClient)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.util.List r1;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        r1 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.util.List mExtraHeaders>;

        return r1;
    }

    static java.lang.String access$500(com.vestel.supertvcommunicator.WebSocketClient, com.vestel.supertvcommunicator.HybiParser$HappyDataInputStream) throws java.io.IOException
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        com.vestel.supertvcommunicator.HybiParser$HappyDataInputStream $r1;
        java.lang.String $r2;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter1: com.vestel.supertvcommunicator.HybiParser$HappyDataInputStream;

        $r2 = specialinvoke $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.lang.String readLine(com.vestel.supertvcommunicator.HybiParser$HappyDataInputStream)>($r1);

        return $r2;
    }

    static org.apache.http.StatusLine access$600(com.vestel.supertvcommunicator.WebSocketClient, java.lang.String)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.lang.String $r1;
        org.apache.http.StatusLine $r2;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke $r0.<com.vestel.supertvcommunicator.WebSocketClient: org.apache.http.StatusLine parseStatusLine(java.lang.String)>($r1);

        return $r2;
    }

    static org.apache.http.Header access$700(com.vestel.supertvcommunicator.WebSocketClient, java.lang.String)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.lang.String $r1;
        org.apache.http.Header $r2;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter1: java.lang.String;

        $r2 = specialinvoke $r0.<com.vestel.supertvcommunicator.WebSocketClient: org.apache.http.Header parseHeader(java.lang.String)>($r1);

        return $r2;
    }

    static com.vestel.supertvcommunicator.WebSocketClient$Listener access$800(com.vestel.supertvcommunicator.WebSocketClient)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        com.vestel.supertvcommunicator.WebSocketClient$Listener r1;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        r1 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: com.vestel.supertvcommunicator.WebSocketClient$Listener mListener>;

        return r1;
    }

    static boolean access$902(com.vestel.supertvcommunicator.WebSocketClient, boolean)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        boolean $z0;

        nop;

        $r0 := @parameter0: com.vestel.supertvcommunicator.WebSocketClient;

        $z0 := @parameter1: boolean;

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: boolean mConnected> = $z0;

        return $z0;
    }

    private java.lang.String createSecret()
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        byte[] $r1;
        int $i0, $i1, varReplacer5388;
        double $d0;
        byte $b2;
        java.lang.String $r2;

        nop;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 = newarray (byte)[16];

        $i0 = 0;

     label1:
        if $i0 >= 16 goto label2;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 256.0;

        $i1 = (int) $d0;

        $b2 = (byte) $i1;

        $r1[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        varReplacer5388 = 0;

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r1, varReplacer5388);

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        return $r2;
    }

    private javax.net.ssl.SSLSocketFactory getSSLSocketFactory() throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.TrustManager[] $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        null_type varReplacer5385, varReplacer5386;
        java.lang.String varReplacer5387;

        nop;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        varReplacer5387 = "TLS";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5387);

        $r2 = <com.vestel.supertvcommunicator.WebSocketClient: javax.net.ssl.TrustManager[] sTrustManagers>;

        varReplacer5385 = null;

        varReplacer5386 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5385, $r2, varReplacer5385);

        $r3 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        return $r3;
    }

    private org.apache.http.Header parseHeader(java.lang.String)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.lang.String $r1;
        org.apache.http.Header $r2;
        org.apache.http.message.BasicLineParser $r3;

        nop;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter0: java.lang.String;

        $r3 = new org.apache.http.message.BasicLineParser;

        specialinvoke $r3.<org.apache.http.message.BasicLineParser: void <init>()>();

        $r2 = staticinvoke <org.apache.http.message.BasicLineParser: org.apache.http.Header parseHeader(java.lang.String,org.apache.http.message.LineParser)>($r1, $r3);

        return $r2;
    }

    private org.apache.http.StatusLine parseStatusLine(java.lang.String)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.lang.String $r1;
        boolean $z0;
        org.apache.http.message.BasicLineParser $r2;
        org.apache.http.StatusLine $r3;
        null_type varReplacer5389;

        nop;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 == 0 goto label1;

        varReplacer5389 = null;

        return varReplacer5389;

     label1:
        $r2 = new org.apache.http.message.BasicLineParser;

        specialinvoke $r2.<org.apache.http.message.BasicLineParser: void <init>()>();

        $r3 = staticinvoke <org.apache.http.message.BasicLineParser: org.apache.http.StatusLine parseStatusLine(java.lang.String,org.apache.http.message.LineParser)>($r1, $r2);

        return $r3;
    }

    private java.lang.String readLine(com.vestel.supertvcommunicator.HybiParser$HappyDataInputStream) throws java.io.IOException
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        com.vestel.supertvcommunicator.HybiParser$HappyDataInputStream $r1;
        java.lang.StringBuilder $r2;
        int $i0, $i1;
        char $c2;
        java.lang.String $r3, varReplacer5383;
        null_type varReplacer5382, varReplacer5384;

        nop;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter0: com.vestel.supertvcommunicator.HybiParser$HappyDataInputStream;

        $i0 = virtualinvoke $r1.<com.vestel.supertvcommunicator.HybiParser$HappyDataInputStream: int read()>();

        $i1 = $i0;

        if $i0 != -1 goto label1;

        varReplacer5382 = null;

        return varReplacer5382;

     label1:
        $r2 = new java.lang.StringBuilder;

        varReplacer5383 = "";

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5383);

     label2:
        if $i1 == 10 goto label4;

        if $i1 == 13 goto label3;

        $c2 = (char) $i1;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

     label3:
        $i0 = virtualinvoke $r1.<com.vestel.supertvcommunicator.HybiParser$HappyDataInputStream: int read()>();

        $i1 = $i0;

        if $i0 != -1 goto label2;

        varReplacer5384 = null;

        return varReplacer5384;

     label4:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static void setTrustManagers(javax.net.ssl.TrustManager[])
    {
        javax.net.ssl.TrustManager[] $r0;

        $r0 := @parameter0: javax.net.ssl.TrustManager[];

        <com.vestel.supertvcommunicator.WebSocketClient: javax.net.ssl.TrustManager[] sTrustManagers> = $r0;

        return;
    }

    public void connect()
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        com.vestel.supertvcommunicator.WebSocketClient$1 $r1;
        boolean $z0;
        java.lang.Thread $r2;

        nop;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r2 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.lang.Thread mThread>;

        if $r2 == null goto label1;

        $r2 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.lang.Thread mThread>;

        $z0 = virtualinvoke $r2.<java.lang.Thread: boolean isAlive()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.Thread;

        $r1 = new com.vestel.supertvcommunicator.WebSocketClient$1;

        specialinvoke $r1.<com.vestel.supertvcommunicator.WebSocketClient$1: void <init>(com.vestel.supertvcommunicator.WebSocketClient)>($r0);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r1);

        $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.lang.Thread mThread> = $r2;

        $r2 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.lang.Thread mThread>;

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    public void disconnect()
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        com.vestel.supertvcommunicator.WebSocketClient$2 $r1;
        java.net.Socket $r2;
        android.os.Handler $r3;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r2 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: java.net.Socket mSocket>;

        if $r2 == null goto label1;

        $r3 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: android.os.Handler mHandler>;

        $r1 = new com.vestel.supertvcommunicator.WebSocketClient$2;

        specialinvoke $r1.<com.vestel.supertvcommunicator.WebSocketClient$2: void <init>(com.vestel.supertvcommunicator.WebSocketClient)>($r0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

     label1:
        return;
    }

    public com.vestel.supertvcommunicator.WebSocketClient$Listener getListener()
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        com.vestel.supertvcommunicator.WebSocketClient$Listener r1;

        nop;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        r1 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: com.vestel.supertvcommunicator.WebSocketClient$Listener mListener>;

        return r1;
    }

    public boolean isConnected()
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        boolean z0;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        z0 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: boolean mConnected>;

        return z0;
    }

    public void send(java.lang.String)
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        java.lang.String $r1;
        byte[] $r2;
        com.vestel.supertvcommunicator.HybiParser $r3;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter0: java.lang.String;

        $r3 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: com.vestel.supertvcommunicator.HybiParser mParser>;

        $r2 = virtualinvoke $r3.<com.vestel.supertvcommunicator.HybiParser: byte[] frame(java.lang.String)>($r1);

        virtualinvoke $r0.<com.vestel.supertvcommunicator.WebSocketClient: void sendFrame(byte[])>($r2);

        return;
    }

    public void send(byte[])
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        byte[] $r1;
        com.vestel.supertvcommunicator.HybiParser $r2;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: com.vestel.supertvcommunicator.HybiParser mParser>;

        $r1 = virtualinvoke $r2.<com.vestel.supertvcommunicator.HybiParser: byte[] frame(byte[])>($r1);

        virtualinvoke $r0.<com.vestel.supertvcommunicator.WebSocketClient: void sendFrame(byte[])>($r1);

        return;
    }

    void sendFrame(byte[])
    {
        com.vestel.supertvcommunicator.WebSocketClient $r0;
        byte[] $r1;
        android.os.Handler $r2;
        com.vestel.supertvcommunicator.WebSocketClient$3 $r3;

        nop;

        $r0 := @this: com.vestel.supertvcommunicator.WebSocketClient;

        $r1 := @parameter0: byte[];

        $r2 = $r0.<com.vestel.supertvcommunicator.WebSocketClient: android.os.Handler mHandler>;

        $r3 = new com.vestel.supertvcommunicator.WebSocketClient$3;

        specialinvoke $r3.<com.vestel.supertvcommunicator.WebSocketClient$3: void <init>(com.vestel.supertvcommunicator.WebSocketClient,byte[])>($r0, $r1);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }
}
