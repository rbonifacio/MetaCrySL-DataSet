public class net.lingala.zip4j.unzip.UnzipEngine extends java.lang.Object
{
    public net.lingala.zip4j.model.ZipModel a;
    public net.lingala.zip4j.model.FileHeader b;
    public net.lingala.zip4j.model.LocalFileHeader c;
    public net.lingala.zip4j.crypto.IDecrypter d;
    public java.util.zip.CRC32 e;
    private int f;

    public void <init>(net.lingala.zip4j.model.ZipModel, net.lingala.zip4j.model.FileHeader)
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.ZipModel $r1;
        net.lingala.zip4j.model.FileHeader $r2;
        net.lingala.zip4j.exception.ZipException $r3;
        java.util.zip.CRC32 $r4;
        int varReplacer5134;
        java.lang.String varReplacer5135;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: net.lingala.zip4j.model.ZipModel;

        $r2 := @parameter1: net.lingala.zip4j.model.FileHeader;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer5134 = 0;

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: int f> = varReplacer5134;

        if $r1 == null goto label1;

        if $r2 != null goto label2;

     label1:
        $r3 = new net.lingala.zip4j.exception.ZipException;

        varReplacer5135 = "Invalid parameters passed to StoreUnzip. One or more of the parameters were null";

        specialinvoke $r3.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5135);

        throw $r3;

     label2:
        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a> = $r1;

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b> = $r2;

        $r4 = new java.util.zip.CRC32;

        specialinvoke $r4.<java.util.zip.CRC32: void <init>()>();

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.util.zip.CRC32 e> = $r4;

        return;
    }

    private java.io.FileOutputStream a(java.lang.String, java.lang.String)
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.lang.String $r1, $r2, varReplacer5159;
        boolean $z0;
        net.lingala.zip4j.exception.ZipException $r3;
        java.io.File $r4, $r5;
        java.io.FileOutputStream $r6;
        java.lang.Throwable $r7;
        null_type varReplacer5160;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean a(java.lang.String)>($r1);

        if $z0 != 0 goto label01;

        $r3 = new net.lingala.zip4j.exception.ZipException;

        varReplacer5159 = "invalid output path";

        specialinvoke $r3.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5159);

        throw $r3;

     label01:
        $r4 = new java.io.File;

     label02:
        varReplacer5160 = null;

        $r1 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.lang.String b(java.lang.String,java.lang.String)>($r1, varReplacer5160);

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>();

        $z0 = virtualinvoke $r5.<java.io.File: boolean exists()>();

     label03:
        if $z0 != 0 goto label05;

     label04:
        $r5 = virtualinvoke $r4.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r5.<java.io.File: boolean mkdirs()>();

     label05:
        $z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label06:
        if $z0 == 0 goto label08;

     label07:
        virtualinvoke $r4.<java.io.File: boolean delete()>();

     label08:
        $r6 = new java.io.FileOutputStream;

     label09:
        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>($r4);

     label10:
        return $r6;

     label11:
        $r7 := @caughtexception;

        $r3 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r3.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r7);

        throw $r3;

        catch java.io.FileNotFoundException from label02 to label03 with label11;
        catch java.io.FileNotFoundException from label04 to label06 with label11;
        catch java.io.FileNotFoundException from label07 to label08 with label11;
        catch java.io.FileNotFoundException from label09 to label10 with label11;
    }

    private java.io.RandomAccessFile a(java.lang.String)
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.lang.String $r1, $r3, varReplacer5219, varReplacer5220;
        net.lingala.zip4j.model.ZipModel $r2;
        boolean $z0;
        net.lingala.zip4j.exception.ZipException $r4;
        java.io.RandomAccessFile $r5;
        java.io.File $r6;
        java.lang.Throwable $r7;
        java.lang.Exception $r8;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        if $r2 == null goto label01;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $r3 = $r2.<net.lingala.zip4j.model.ZipModel: java.lang.String h>;

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean a(java.lang.String)>($r3);

        if $z0 != 0 goto label02;

     label01:
        $r4 = new net.lingala.zip4j.exception.ZipException;

        varReplacer5219 = "input parameter is null in getFilePointer";

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5219);

        throw $r4;

     label02:
        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $z0 = $r2.<net.lingala.zip4j.model.ZipModel: boolean f>;

     label03:
        if $z0 == 0 goto label06;

     label04:
        $r5 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.io.RandomAccessFile d()>();

     label05:
        return $r5;

     label06:
        $r5 = new java.io.RandomAccessFile;

        $r6 = new java.io.File;

     label07:
        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $r3 = $r2.<net.lingala.zip4j.model.ZipModel: java.lang.String h>;

     label08:
        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r3);

        varReplacer5220 = "r";

        specialinvoke $r5.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r6, varReplacer5220);

     label09:
        return $r5;

     label10:
        $r7 := @caughtexception;

        $r4 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r7);

        throw $r4;

     label11:
        $r8 := @caughtexception;

        $r4 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r8);

        throw $r4;

        catch java.io.FileNotFoundException from label04 to label05 with label10;
        catch java.io.FileNotFoundException from label08 to label09 with label10;
        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Exception from label04 to label05 with label11;
        catch java.lang.Exception from label07 to label09 with label11;
    }

    private static void a(java.io.InputStream, java.io.OutputStream)
    {
        java.io.InputStream $r0;
        java.io.OutputStream $r1;
        java.lang.Throwable $r2, $r5, $r6, $r7, $r8;
        java.lang.String $r3, varReplacer5142;
        boolean $z0;
        int $i0;
        net.lingala.zip4j.exception.ZipException $r4, r9;
        java.io.IOException r10;

        nop;

        $r0 := @parameter0: java.io.InputStream;

        $r1 := @parameter1: java.io.OutputStream;

        if $r0 == null goto label02;

     label01:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

     label02:
        if $r1 == null goto label22;

     label03:
        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label04:
        return;

     label05:
        $r2 := @caughtexception;

     label06:
        r10 = (java.io.IOException) $r2;

        $r3 = virtualinvoke r10.<java.io.IOException: java.lang.String getMessage()>();

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean a(java.lang.String)>($r3);

     label07:
        if $z0 == 0 goto label16;

     label08:
        r10 = (java.io.IOException) $r2;

        $r3 = virtualinvoke r10.<java.io.IOException: java.lang.String getMessage()>();

        varReplacer5142 = " - Wrong Password?";

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(varReplacer5142);

     label09:
        if $i0 < 0 goto label16;

     label10:
        r9 = new net.lingala.zip4j.exception.ZipException;

     label11:
        $r4 = r9;

     label12:
        r10 = (java.io.IOException) $r2;

        $r3 = virtualinvoke r10.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke r9.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label13:
        $r5 := @caughtexception;

        if $r1 == null goto label15;

     label14:
        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label15:
        throw $r5;

     label16:
        if $r1 == null goto label22;

     label17:
        virtualinvoke $r1.<java.io.OutputStream: void close()>();

     label18:
        return;

     label19:
        $r6 := @caughtexception;

        return;

     label20:
        $r7 := @caughtexception;

        goto label15;

     label21:
        $r8 := @caughtexception;

     label22:
        return;

        catch java.io.IOException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label21;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label12 to label13 with label13;
        catch java.io.IOException from label14 to label15 with label20;
        catch java.io.IOException from label17 to label18 with label19;
    }

    private byte[] a(java.io.RandomAccessFile)
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.io.RandomAccessFile $r1;
        byte[] $r2;
        net.lingala.zip4j.model.LocalFileHeader $r3;
        long $l0;
        java.lang.Throwable $r4;
        net.lingala.zip4j.exception.ZipException $r5;
        java.lang.Exception $r6;
        int varReplacer5225, varReplacer5226;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.io.RandomAccessFile;

     label1:
        $r2 = newarray (byte)[12];

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $l0 = $r3.<net.lingala.zip4j.model.LocalFileHeader: long m>;

     label2:
        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l0);

        varReplacer5225 = 0;

        varReplacer5226 = 12;

        virtualinvoke $r1.<java.io.RandomAccessFile: int read(byte[],int,int)>($r2, varReplacer5225, varReplacer5226);

     label3:
        return $r2;

     label4:
        $r4 := @caughtexception;

        $r5 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r5.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label5:
        $r6 := @caughtexception;

        $r5 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r5.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r6);

        throw $r5;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.lang.Exception from label1 to label3 with label5;
    }

    private java.lang.String b(java.lang.String, java.lang.String)
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.lang.String $r1, $r2, varReplacer5161;
        boolean $z0;
        net.lingala.zip4j.model.FileHeader $r3;
        java.lang.StringBuffer $r4;
        null_type varReplacer5162;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        varReplacer5162 = null;

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean a(java.lang.String)>(varReplacer5162);

        if $z0 != 0 goto label1;

        $r3 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        $r2 = $r3.<net.lingala.zip4j.model.FileHeader: java.lang.String q>;

     label1:
        $r4 = new java.lang.StringBuffer;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r1);

        varReplacer5161 = "file.separator";

        $r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(varReplacer5161);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r1;
    }

    private net.lingala.zip4j.io.ZipInputStream b()
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.FileHeader $r1;
        net.lingala.zip4j.exception.ZipException $r2, $r7;
        java.io.RandomAccessFile $r3, $r4;
        boolean $z0;
        net.lingala.zip4j.model.LocalFileHeader $r5;
        java.lang.Exception $r6, $r14;
        int $i0, $i4;
        net.lingala.zip4j.crypto.StandardDecrypter $r8;
        byte[] $r9, $r13;
        long $l1, $l2, $l3;
        net.lingala.zip4j.crypto.IDecrypter $r10;
        net.lingala.zip4j.crypto.AESDecrypter $r11;
        net.lingala.zip4j.model.AESExtraDataRecord $r12;
        java.lang.StringBuffer $r15;
        java.lang.String $r16, varReplacer5150, varReplacer5151, varReplacer5152, varReplacer5153, varReplacer5154, varReplacer5155, varReplacer5156, varReplacer5157, varReplacer5158;
        net.lingala.zip4j.io.ZipInputStream $r17;
        net.lingala.zip4j.io.PartInputStream $r18;
        net.lingala.zip4j.io.InflaterInputStream $r19;
        java.lang.Throwable $r20, $r21;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        if $r1 != null goto label01;

        $r2 = new net.lingala.zip4j.exception.ZipException;

        varReplacer5155 = "file header is null, cannot get inputstream";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5155);

        throw $r2;

     label01:
        $r3 = null;

     label02:
        varReplacer5151 = "r";

        $r4 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.io.RandomAccessFile a(java.lang.String)>(varReplacer5151);

     label03:
        $r3 = $r4;

     label04:
        $z0 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: boolean c()>();

     label05:
        if $z0 != 0 goto label10;

        $r2 = new net.lingala.zip4j.exception.ZipException;

     label06:
        varReplacer5150 = "local header and file header do not match";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5150);

        throw $r2;

     label07:
        $r2 := @caughtexception;

        if $r3 == null goto label09;

     label08:
        virtualinvoke $r3.<java.io.RandomAccessFile: void close()>();

     label09:
        throw $r2;

     label10:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

     label11:
        if $r5 != null goto label16;

        $r2 = new net.lingala.zip4j.exception.ZipException;

     label12:
        varReplacer5152 = "local file header is null, cannot initialize input stream";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5152);

        throw $r2;

     label13:
        $r6 := @caughtexception;

        if $r3 == null goto label15;

     label14:
        virtualinvoke $r3.<java.io.RandomAccessFile: void close()>();

     label15:
        $r2 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r6);

        throw $r2;

     label16:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

     label17:
        if $r5 != null goto label21;

        $r2 = new net.lingala.zip4j.exception.ZipException;

     label18:
        varReplacer5153 = "local file header is null, cannot init decrypter";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5153);

        throw $r2;

     label19:
        $r7 := @caughtexception;

     label20:
        throw $r7;

     label21:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $z0 = $r5.<net.lingala.zip4j.model.LocalFileHeader: boolean n>;

     label22:
        if $z0 == 0 goto label28;

     label23:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $i0 = $r5.<net.lingala.zip4j.model.LocalFileHeader: int o>;

     label24:
        if $i0 != 0 goto label47;

        $r8 = new net.lingala.zip4j.crypto.StandardDecrypter;

     label25:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

     label26:
        $r9 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: byte[] a(java.io.RandomAccessFile)>($r4);

        specialinvoke $r8.<net.lingala.zip4j.crypto.StandardDecrypter: void <init>(net.lingala.zip4j.model.FileHeader,byte[])>($r1, $r9);

     label27:
        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter d> = $r8;

     label28:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $l1 = $r5.<net.lingala.zip4j.model.LocalFileHeader: long h>;

        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $l2 = $r5.<net.lingala.zip4j.model.LocalFileHeader: long m>;

        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $z0 = $r5.<net.lingala.zip4j.model.LocalFileHeader: boolean n>;

     label29:
        if $z0 == 0 goto label38;

     label30:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $i0 = $r5.<net.lingala.zip4j.model.LocalFileHeader: int o>;

     label31:
        if $i0 != 99 goto label61;

     label32:
        $r10 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter d>;

     label33:
        $z0 = $r10 instanceof net.lingala.zip4j.crypto.AESDecrypter;

        if $z0 == 0 goto label57;

     label34:
        $r10 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter d>;

        $r11 = (net.lingala.zip4j.crypto.AESDecrypter) $r10;

        $i0 = $r11.<net.lingala.zip4j.crypto.AESDecrypter: int b>;

     label35:
        $i0 = $i0 + 2;

        $i0 = $i0 + 10;

        $l3 = (long) $i0;

        $l1 = $l1 - $l3;

     label36:
        $r10 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter d>;

        $r11 = (net.lingala.zip4j.crypto.AESDecrypter) $r10;

        $i0 = $r11.<net.lingala.zip4j.crypto.AESDecrypter: int b>;

     label37:
        $i0 = $i0 + 2;

        $l3 = (long) $i0;

        $l2 = $l2 + $l3;

     label38:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        $i0 = $r1.<net.lingala.zip4j.model.FileHeader: int e>;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        $i4 = $r1.<net.lingala.zip4j.model.FileHeader: int u>;

     label39:
        if $i4 != 99 goto label43;

     label40:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        $r12 = $r1.<net.lingala.zip4j.model.FileHeader: net.lingala.zip4j.model.AESExtraDataRecord y>;

     label41:
        if $r12 == null goto label63;

     label42:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        $r12 = $r1.<net.lingala.zip4j.model.FileHeader: net.lingala.zip4j.model.AESExtraDataRecord y>;

        $i0 = $r12.<net.lingala.zip4j.model.AESExtraDataRecord: int f>;

     label43:
        virtualinvoke $r4.<java.io.RandomAccessFile: void seek(long)>($l2);

     label44:
        lookupswitch($i0)
        {
            case 0: goto label67;
            case 8: goto label70;
            default: goto label45;
        };

     label45:
        $r2 = new net.lingala.zip4j.exception.ZipException;

     label46:
        varReplacer5156 = "compression type not supported";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5156);

        throw $r2;

     label47:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $i0 = $r5.<net.lingala.zip4j.model.LocalFileHeader: int o>;

     label48:
        if $i0 != 99 goto label55;

        $r11 = new net.lingala.zip4j.crypto.AESDecrypter;

     label49:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

     label50:
        $r9 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: byte[] b(java.io.RandomAccessFile)>($r4);

        $r13 = staticinvoke <net.lingala.zip4j.unzip.UnzipEngine: byte[] c(java.io.RandomAccessFile)>($r4);

        specialinvoke $r11.<net.lingala.zip4j.crypto.AESDecrypter: void <init>(net.lingala.zip4j.model.LocalFileHeader,byte[],byte[])>($r5, $r9, $r13);

     label51:
        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.crypto.IDecrypter d> = $r11;

     label52:
        goto label28;

     label53:
        $r14 := @caughtexception;

        $r2 = new net.lingala.zip4j.exception.ZipException;

     label54:
        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r14);

        throw $r2;

     label55:
        $r2 = new net.lingala.zip4j.exception.ZipException;

     label56:
        varReplacer5154 = "unsupported encryption method";

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5154);

        throw $r2;

     label57:
        $r2 = new net.lingala.zip4j.exception.ZipException;

        $r15 = new java.lang.StringBuffer;

     label58:
        varReplacer5158 = "invalid decryptor when trying to calculate compressed size for AES encrypted file: ";

        specialinvoke $r15.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer5158);

     label59:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        $r16 = $r1.<net.lingala.zip4j.model.FileHeader: java.lang.String q>;

     label60:
        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>($r16);

        throw $r2;

     label61:
        $r5 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $i0 = $r5.<net.lingala.zip4j.model.LocalFileHeader: int o>;

     label62:
        if $i0 != 0 goto label38;

        $l1 = $l1 - 12L;

        $l2 = $l2 + 12L;

        goto label38;

     label63:
        $r2 = new net.lingala.zip4j.exception.ZipException;

        $r15 = new java.lang.StringBuffer;

     label64:
        varReplacer5157 = "AESExtraDataRecord does not exist for AES encrypted file: ";

        specialinvoke $r15.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer5157);

     label65:
        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        $r16 = $r1.<net.lingala.zip4j.model.FileHeader: java.lang.String q>;

     label66:
        $r15 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>($r16);

        throw $r2;

     label67:
        $r17 = new net.lingala.zip4j.io.ZipInputStream;

        $r18 = new net.lingala.zip4j.io.PartInputStream;

     label68:
        specialinvoke $r18.<net.lingala.zip4j.io.PartInputStream: void <init>(java.io.RandomAccessFile,long,net.lingala.zip4j.unzip.UnzipEngine)>($r4, $l1, $r0);

        specialinvoke $r17.<net.lingala.zip4j.io.ZipInputStream: void <init>(net.lingala.zip4j.io.BaseInputStream)>($r18);

     label69:
        return $r17;

     label70:
        $r17 = new net.lingala.zip4j.io.ZipInputStream;

        $r19 = new net.lingala.zip4j.io.InflaterInputStream;

     label71:
        specialinvoke $r19.<net.lingala.zip4j.io.InflaterInputStream: void <init>(java.io.RandomAccessFile,long,net.lingala.zip4j.unzip.UnzipEngine)>($r4, $l1, $r0);

        specialinvoke $r17.<net.lingala.zip4j.io.ZipInputStream: void <init>(net.lingala.zip4j.io.BaseInputStream)>($r19);

     label72:
        return $r17;

     label73:
        $r20 := @caughtexception;

        goto label09;

     label74:
        $r21 := @caughtexception;

        goto label15;

        catch net.lingala.zip4j.exception.ZipException from label02 to label03 with label07;
        catch net.lingala.zip4j.exception.ZipException from label04 to label05 with label07;
        catch net.lingala.zip4j.exception.ZipException from label06 to label07 with label07;
        catch java.lang.Exception from label02 to label03 with label13;
        catch java.lang.Exception from label04 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.io.IOException from label08 to label09 with label73;
        catch net.lingala.zip4j.exception.ZipException from label12 to label13 with label07;
        catch java.lang.Exception from label10 to label11 with label13;
        catch java.lang.Exception from label12 to label13 with label13;
        catch java.io.IOException from label14 to label15 with label74;
        catch net.lingala.zip4j.exception.ZipException from label18 to label19 with label19;
        catch java.lang.Exception from label16 to label17 with label53;
        catch java.lang.Exception from label18 to label19 with label53;
        catch net.lingala.zip4j.exception.ZipException from label20 to label21 with label07;
        catch java.lang.Exception from label20 to label21 with label13;
        catch net.lingala.zip4j.exception.ZipException from label26 to label27 with label19;
        catch java.lang.Exception from label21 to label22 with label53;
        catch java.lang.Exception from label23 to label24 with label53;
        catch java.lang.Exception from label25 to label28 with label53;
        catch net.lingala.zip4j.exception.ZipException from label43 to label44 with label07;
        catch net.lingala.zip4j.exception.ZipException from label46 to label47 with label07;
        catch java.lang.Exception from label28 to label29 with label13;
        catch java.lang.Exception from label30 to label31 with label13;
        catch java.lang.Exception from label32 to label33 with label13;
        catch java.lang.Exception from label34 to label35 with label13;
        catch java.lang.Exception from label36 to label37 with label13;
        catch java.lang.Exception from label38 to label39 with label13;
        catch java.lang.Exception from label40 to label41 with label13;
        catch java.lang.Exception from label42 to label44 with label13;
        catch java.lang.Exception from label46 to label47 with label13;
        catch net.lingala.zip4j.exception.ZipException from label50 to label51 with label19;
        catch java.lang.Exception from label47 to label48 with label53;
        catch java.lang.Exception from label49 to label52 with label53;
        catch net.lingala.zip4j.exception.ZipException from label54 to label55 with label07;
        catch java.lang.Exception from label54 to label55 with label13;
        catch net.lingala.zip4j.exception.ZipException from label56 to label57 with label19;
        catch java.lang.Exception from label56 to label57 with label53;
        catch net.lingala.zip4j.exception.ZipException from label58 to label59 with label07;
        catch net.lingala.zip4j.exception.ZipException from label60 to label61 with label07;
        catch net.lingala.zip4j.exception.ZipException from label64 to label65 with label07;
        catch net.lingala.zip4j.exception.ZipException from label66 to label67 with label07;
        catch net.lingala.zip4j.exception.ZipException from label68 to label69 with label07;
        catch net.lingala.zip4j.exception.ZipException from label71 to label72 with label07;
        catch java.lang.Exception from label58 to label62 with label13;
        catch java.lang.Exception from label64 to label67 with label13;
        catch java.lang.Exception from label68 to label69 with label13;
        catch java.lang.Exception from label71 to label72 with label13;
    }

    private byte[] b(java.io.RandomAccessFile)
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.io.RandomAccessFile $r1;
        long $l0;
        net.lingala.zip4j.model.LocalFileHeader $r2;
        net.lingala.zip4j.model.AESExtraDataRecord $r3;
        net.lingala.zip4j.exception.ZipException $r4;
        java.lang.Throwable $r5;
        int $i1;
        byte $b2;
        byte[] $r6;
        java.lang.String varReplacer5227, varReplacer5229;
        null_type varReplacer5228;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: java.io.RandomAccessFile;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $r3 = $r2.<net.lingala.zip4j.model.LocalFileHeader: net.lingala.zip4j.model.AESExtraDataRecord s>;

        if $r3 != null goto label01;

        varReplacer5228 = null;

        return varReplacer5228;

     label01:
        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $r3 = $r2.<net.lingala.zip4j.model.LocalFileHeader: net.lingala.zip4j.model.AESExtraDataRecord s>;

        if $r3 != null goto label05;

        $r4 = new net.lingala.zip4j.exception.ZipException;

     label02:
        varReplacer5229 = "unable to determine salt length: AESExtraDataRecord is null";

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5229);

     label03:
        throw $r4;

     label04:
        $r5 := @caughtexception;

        $r4 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r5);

        throw $r4;

     label05:
        $i1 = $r3.<net.lingala.zip4j.model.AESExtraDataRecord: int e>;

        lookupswitch($i1)
        {
            case 1: goto label09;
            case 2: goto label13;
            case 3: goto label14;
            default: goto label06;
        };

     label06:
        $r4 = new net.lingala.zip4j.exception.ZipException;

     label07:
        varReplacer5227 = "unable to determine salt length: invalid aes key strength";

        specialinvoke $r4.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5227);

     label08:
        throw $r4;

     label09:
        $b2 = 8;

     label10:
        $r6 = newarray (byte)[$b2];

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $l0 = $r2.<net.lingala.zip4j.model.LocalFileHeader: long m>;

     label11:
        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>($l0);

        virtualinvoke $r1.<java.io.RandomAccessFile: int read(byte[])>($r6);

     label12:
        return $r6;

     label13:
        $b2 = 12;

        goto label10;

     label14:
        $b2 = 16;

        goto label10;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label07 to label08 with label04;
        catch java.io.IOException from label11 to label12 with label04;
    }

    private boolean c()
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        java.io.RandomAccessFile $r1, $r2;
        java.io.File $r3;
        net.lingala.zip4j.model.ZipModel $r4;
        java.lang.String $r5, varReplacer5221, varReplacer5223;
        net.lingala.zip4j.core.HeaderReader $r6;
        net.lingala.zip4j.model.FileHeader $r7;
        net.lingala.zip4j.model.LocalFileHeader $r8;
        net.lingala.zip4j.exception.ZipException $r9;
        java.lang.Throwable $r10, $r11, $r12, $r14, $r16;
        int $i0, $i1, varReplacer5222, varReplacer5224;
        java.lang.Exception $r13, $r15, $r17;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 = null;

     label01:
        $r2 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.io.RandomAccessFile d()>();

     label02:
        $r1 = $r2;

        if $r2 != null goto label06;

     label03:
        $r2 = new java.io.RandomAccessFile;

        $r3 = new java.io.File;

        $r4 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $r5 = $r4.<net.lingala.zip4j.model.ZipModel: java.lang.String h>;

     label04:
        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r5);

        varReplacer5221 = "r";

        specialinvoke $r2.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>($r3, varReplacer5221);

     label05:
        $r1 = $r2;

     label06:
        $r6 = new net.lingala.zip4j.core.HeaderReader;

     label07:
        specialinvoke $r6.<net.lingala.zip4j.core.HeaderReader: void <init>(java.io.RandomAccessFile)>($r1);

     label08:
        $r7 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

     label09:
        $r8 = virtualinvoke $r6.<net.lingala.zip4j.core.HeaderReader: net.lingala.zip4j.model.LocalFileHeader a(net.lingala.zip4j.model.FileHeader)>($r7);

     label10:
        $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c> = $r8;

        $r8 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

     label11:
        if $r8 != null goto label20;

     label12:
        $r9 = new net.lingala.zip4j.exception.ZipException;

     label13:
        varReplacer5223 = "error reading local file header. Is this a valid zip file?";

        specialinvoke $r9.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5223);

     label14:
        throw $r9;

     label15:
        $r10 := @caughtexception;

     label16:
        $r9 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r9.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r10);

        throw $r9;

     label17:
        $r11 := @caughtexception;

        if $r1 == null goto label19;

     label18:
        virtualinvoke $r1.<java.io.RandomAccessFile: void close()>();

     label19:
        throw $r11;

     label20:
        $r8 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.LocalFileHeader c>;

        $i0 = $r8.<net.lingala.zip4j.model.LocalFileHeader: int d>;

        $r7 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        $i1 = $r7.<net.lingala.zip4j.model.FileHeader: int e>;

     label21:
        if $i0 == $i1 goto label24;

        if $r1 == null goto label23;

     label22:
        virtualinvoke $r1.<java.io.RandomAccessFile: void close()>();

     label23:
        varReplacer5222 = 0;

        return varReplacer5222;

     label24:
        if $r1 == null goto label26;

     label25:
        virtualinvoke $r1.<java.io.RandomAccessFile: void close()>();

     label26:
        varReplacer5224 = 1;

        return varReplacer5224;

     label27:
        $r12 := @caughtexception;

        goto label23;

     label28:
        $r13 := @caughtexception;

        goto label23;

     label29:
        $r14 := @caughtexception;

        goto label26;

     label30:
        $r15 := @caughtexception;

        goto label26;

     label31:
        $r16 := @caughtexception;

        goto label19;

     label32:
        $r17 := @caughtexception;

        goto label19;

        catch java.io.FileNotFoundException from label01 to label02 with label15;
        catch java.io.FileNotFoundException from label04 to label05 with label15;
        catch java.io.FileNotFoundException from label07 to label08 with label15;
        catch java.io.FileNotFoundException from label09 to label10 with label15;
        catch java.io.FileNotFoundException from label13 to label14 with label15;
        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label03 to label05 with label17;
        catch java.lang.Throwable from label06 to label11 with label17;
        catch java.lang.Throwable from label12 to label15 with label17;
        catch java.lang.Throwable from label16 to label17 with label17;
        catch java.io.IOException from label18 to label19 with label31;
        catch java.lang.Exception from label18 to label19 with label32;
        catch java.lang.Throwable from label20 to label21 with label17;
        catch java.io.IOException from label22 to label23 with label27;
        catch java.lang.Exception from label22 to label23 with label28;
        catch java.io.IOException from label25 to label26 with label29;
        catch java.lang.Exception from label25 to label26 with label30;
    }

    private static byte[] c(java.io.RandomAccessFile)
    {
        java.io.RandomAccessFile $r0;
        net.lingala.zip4j.exception.ZipException $r1;
        byte[] $r2;
        java.lang.Throwable $r3;

        nop;

        $r0 := @parameter0: java.io.RandomAccessFile;

        $r2 = newarray (byte)[2];

     label1:
        virtualinvoke $r0.<java.io.RandomAccessFile: int read(byte[])>($r2);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r1 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r1.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r3);

        throw $r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private java.io.RandomAccessFile d()
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.ZipModel $r1;
        boolean $z0;
        net.lingala.zip4j.model.FileHeader $r2;
        int $i0, $i1, varReplacer5298, varReplacer5304;
        java.lang.String $r3, varReplacer5300, varReplacer5301, varReplacer5302, varReplacer5303, varReplacer5305, varReplacer5306;
        net.lingala.zip4j.model.EndCentralDirRecord $r4;
        java.io.RandomAccessFile $r5;
        byte[] $r6;
        long $l2;
        byte $b3;
        net.lingala.zip4j.exception.ZipException $r7;
        java.lang.Throwable $r8, $r10;
        java.lang.StringBuffer $r9;
        null_type varReplacer5299;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $z0 = $r1.<net.lingala.zip4j.model.ZipModel: boolean f>;

        if $z0 == 0 goto label12;

        $r2 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        $i0 = $r2.<net.lingala.zip4j.model.FileHeader: int m>;

        $i1 = $i0 + 1;

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: int f> = $i1;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $r3 = $r1.<net.lingala.zip4j.model.ZipModel: java.lang.String h>;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $r4 = $r1.<net.lingala.zip4j.model.ZipModel: net.lingala.zip4j.model.EndCentralDirRecord c>;

        $i1 = $r4.<net.lingala.zip4j.model.EndCentralDirRecord: int b>;

        if $i0 != $i1 goto label09;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $r3 = $r1.<net.lingala.zip4j.model.ZipModel: java.lang.String h>;

     label01:
        $r5 = new java.io.RandomAccessFile;

     label02:
        varReplacer5303 = "r";

        specialinvoke $r5.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r3, varReplacer5303);

     label03:
        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int f>;

        if $i0 != 1 goto label13;

        $r6 = newarray (byte)[4];

     label04:
        virtualinvoke $r5.<java.io.RandomAccessFile: int read(byte[])>($r6);

        $i0 = staticinvoke <net.lingala.zip4j.util.Raw: int b(byte[])>($r6);

     label05:
        $l2 = (long) $i0;

        $b3 = $l2 cmp 134695760L;

        if $b3 == 0 goto label13;

        $r7 = new net.lingala.zip4j.exception.ZipException;

     label06:
        varReplacer5305 = "invalid first part split file signature";

        specialinvoke $r7.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5305);

     label07:
        throw $r7;

     label08:
        $r8 := @caughtexception;

        $r7 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r7.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r8);

        throw $r7;

     label09:
        if $i0 < 9 goto label10;

        $r9 = new java.lang.StringBuffer;

        varReplacer5306 = ".";

        $i1 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer5306);

        varReplacer5304 = 0;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5304, $i1);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        varReplacer5302 = ".z";

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer5302);

        $i0 = $i0 + 1;

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label01;

     label10:
        $r9 = new java.lang.StringBuffer;

        varReplacer5301 = ".";

        $i1 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer5301);

        varReplacer5298 = 0;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5298, $i1);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r9.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        varReplacer5300 = ".z0";

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer5300);

        $i0 = $i0 + 1;

        $r9 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r3 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label01;

     label11:
        $r10 := @caughtexception;

        $r7 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r7.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r10);

        throw $r7;

     label12:
        varReplacer5299 = null;

        return varReplacer5299;

     label13:
        return $r5;

        catch java.io.FileNotFoundException from label02 to label03 with label08;
        catch java.io.FileNotFoundException from label04 to label05 with label08;
        catch java.io.FileNotFoundException from label06 to label07 with label08;
        catch java.io.IOException from label02 to label03 with label11;
        catch java.io.IOException from label04 to label05 with label11;
        catch java.io.IOException from label06 to label07 with label11;
    }

    public final java.io.RandomAccessFile a()
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.model.ZipModel $r1;
        java.lang.String $r2, varReplacer5328, varReplacer5329, varReplacer5332, varReplacer5333, varReplacer5334, varReplacer5335;
        int $i0, $i1, varReplacer5330, varReplacer5331;
        net.lingala.zip4j.model.EndCentralDirRecord $r3;
        boolean $z0;
        java.io.IOException $r4;
        java.lang.StringBuffer $r5;
        net.lingala.zip4j.exception.ZipException $r6;
        java.io.RandomAccessFile $r7;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $r2 = $r1.<net.lingala.zip4j.model.ZipModel: java.lang.String h>;

        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int f>;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $r3 = $r1.<net.lingala.zip4j.model.ZipModel: net.lingala.zip4j.model.EndCentralDirRecord c>;

        $i1 = $r3.<net.lingala.zip4j.model.EndCentralDirRecord: int b>;

        if $i0 != $i1 goto label7;

        $r1 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        $r2 = $r1.<net.lingala.zip4j.model.ZipModel: java.lang.String h>;

     label1:
        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int f>;

        $i0 = $i0 + 1;

        $r0.<net.lingala.zip4j.unzip.UnzipEngine: int f> = $i0;

     label2:
        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean d(java.lang.String)>($r2);

     label3:
        if $z0 != 0 goto label9;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuffer;

     label4:
        varReplacer5332 = "zip split file does not exist: ";

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer5332);

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r2);

     label5:
        throw $r4;

     label6:
        $r6 := @caughtexception;

        $r4 = new java.io.IOException;

        $r2 = virtualinvoke $r6.<net.lingala.zip4j.exception.ZipException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r2);

        throw $r4;

     label7:
        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int f>;

        if $i0 < 9 goto label8;

        $r5 = new java.lang.StringBuffer;

        varReplacer5333 = ".";

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer5333);

        varReplacer5330 = 0;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5330, $i0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        varReplacer5335 = ".z";

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer5335);

        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int f>;

        $i0 = $i0 + 1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label8:
        $r5 = new java.lang.StringBuffer;

        varReplacer5329 = ".";

        $i0 = virtualinvoke $r2.<java.lang.String: int lastIndexOf(java.lang.String)>(varReplacer5329);

        varReplacer5331 = 0;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5331, $i0);

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        varReplacer5334 = ".z0";

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(varReplacer5334);

        $i0 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: int f>;

        $i0 = $i0 + 1;

        $r5 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label1;

     label9:
        $r7 = new java.io.RandomAccessFile;

        varReplacer5328 = "r";

        specialinvoke $r7.<java.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r2, varReplacer5328);

        return $r7;

        catch net.lingala.zip4j.exception.ZipException from label2 to label3 with label6;
        catch net.lingala.zip4j.exception.ZipException from label4 to label5 with label6;
    }

    public final void a(net.lingala.zip4j.progress.ProgressMonitor, java.lang.String, java.lang.String, net.lingala.zip4j.model.UnzipParameters)
    {
        net.lingala.zip4j.unzip.UnzipEngine $r0;
        net.lingala.zip4j.progress.ProgressMonitor $r1;
        java.lang.String $r2, $r3, varReplacer5138;
        net.lingala.zip4j.model.UnzipParameters $r4;
        java.io.FileOutputStream $r5, $r12;
        net.lingala.zip4j.model.ZipModel $r6;
        net.lingala.zip4j.model.FileHeader $r7;
        boolean $z0;
        net.lingala.zip4j.exception.ZipException $r8;
        byte[] $r9;
        net.lingala.zip4j.io.ZipInputStream $r10, $r11;
        int $i0, varReplacer5136, varReplacer5137, varReplacer5140;
        java.io.File $r13;
        long $l1;
        java.lang.Throwable $r14, $r15;
        java.lang.Exception $r16;
        null_type varReplacer5139, varReplacer5141;

        nop;

        $r0 := @this: net.lingala.zip4j.unzip.UnzipEngine;

        $r1 := @parameter0: net.lingala.zip4j.progress.ProgressMonitor;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: net.lingala.zip4j.model.UnzipParameters;

        $r5 = null;

        $r6 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.ZipModel a>;

        if $r6 == null goto label01;

        $r7 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

        if $r7 == null goto label01;

        $z0 = staticinvoke <net.lingala.zip4j.util.Zip4jUtil: boolean a(java.lang.String)>($r2);

        if $z0 != 0 goto label02;

     label01:
        $r8 = new net.lingala.zip4j.exception.ZipException;

        varReplacer5138 = "Invalid parameters passed during unzipping file. One or more of the parameters were null";

        specialinvoke $r8.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.String)>(varReplacer5138);

        throw $r8;

     label02:
        $r9 = newarray (byte)[4096];

     label03:
        $r10 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.io.ZipInputStream b()>();

     label04:
        $r11 = $r10;

     label05:
        varReplacer5139 = null;

        $r12 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.io.FileOutputStream a(java.lang.String,java.lang.String)>($r2, varReplacer5139);

     label06:
        $r5 = $r12;

     label07:
        $i0 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>($r9);

     label08:
        if $i0 != -1 goto label14;

     label09:
        staticinvoke <net.lingala.zip4j.unzip.UnzipEngine: void a(java.io.InputStream,java.io.OutputStream)>($r10, $r12);

     label10:
        $r7 = $r0.<net.lingala.zip4j.unzip.UnzipEngine: net.lingala.zip4j.model.FileHeader b>;

     label11:
        $r13 = new java.io.File;

     label12:
        varReplacer5141 = null;

        $r2 = specialinvoke $r0.<net.lingala.zip4j.unzip.UnzipEngine: java.lang.String b(java.lang.String,java.lang.String)>($r2, varReplacer5141);

        specialinvoke $r13.<java.io.File: void <init>(java.lang.String)>($r2);

        staticinvoke <net.lingala.zip4j.unzip.UnzipUtil: void a(net.lingala.zip4j.model.FileHeader,java.io.File,net.lingala.zip4j.model.UnzipParameters)>($r7, $r13, $r4);

     label13:
        staticinvoke <net.lingala.zip4j.unzip.UnzipEngine: void a(java.io.InputStream,java.io.OutputStream)>($r10, $r12);

        return;

     label14:
        varReplacer5136 = 0;

        virtualinvoke $r12.<java.io.OutputStream: void write(byte[],int,int)>($r9, varReplacer5136, $i0);

     label15:
        $l1 = (long) $i0;

     label16:
        virtualinvoke $r1.<net.lingala.zip4j.progress.ProgressMonitor: void a(long)>($l1);

     label17:
        $z0 = $r1.<net.lingala.zip4j.progress.ProgressMonitor: boolean f>;

     label18:
        if $z0 == 0 goto label07;

     label19:
        varReplacer5137 = 3;

        $r1.<net.lingala.zip4j.progress.ProgressMonitor: int e> = varReplacer5137;

        varReplacer5140 = 0;

        $r1.<net.lingala.zip4j.progress.ProgressMonitor: int a> = varReplacer5140;

     label20:
        staticinvoke <net.lingala.zip4j.unzip.UnzipEngine: void a(java.io.InputStream,java.io.OutputStream)>($r10, $r12);

        return;

     label21:
        $r14 := @caughtexception;

        $r11 = null;

     label22:
        $r8 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r8.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r14);

        throw $r8;

     label23:
        $r15 := @caughtexception;

     label24:
        staticinvoke <net.lingala.zip4j.unzip.UnzipEngine: void a(java.io.InputStream,java.io.OutputStream)>($r11, $r5);

        throw $r15;

     label25:
        $r16 := @caughtexception;

        $r11 = null;

     label26:
        $r8 = new net.lingala.zip4j.exception.ZipException;

        specialinvoke $r8.<net.lingala.zip4j.exception.ZipException: void <init>(java.lang.Throwable)>($r16);

        throw $r8;

     label27:
        $r15 := @caughtexception;

        $r11 = null;

        goto label24;

     label28:
        $r16 := @caughtexception;

        goto label26;

     label29:
        $r14 := @caughtexception;

        goto label22;

        catch java.io.IOException from label03 to label04 with label21;
        catch java.lang.Exception from label02 to label04 with label25;
        catch java.lang.Throwable from label03 to label04 with label27;
        catch java.io.IOException from label05 to label06 with label29;
        catch java.io.IOException from label07 to label08 with label29;
        catch java.io.IOException from label09 to label10 with label29;
        catch java.io.IOException from label12 to label13 with label29;
        catch java.lang.Exception from label05 to label06 with label28;
        catch java.lang.Exception from label07 to label08 with label28;
        catch java.lang.Exception from label09 to label11 with label28;
        catch java.lang.Exception from label12 to label13 with label28;
        catch java.lang.Throwable from label05 to label06 with label23;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label09 to label13 with label23;
        catch java.io.IOException from label14 to label15 with label29;
        catch java.io.IOException from label16 to label17 with label29;
        catch java.lang.Exception from label14 to label15 with label28;
        catch java.lang.Exception from label16 to label18 with label28;
        catch java.lang.Exception from label19 to label20 with label28;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label16 to label18 with label23;
        catch java.lang.Throwable from label19 to label20 with label23;
        catch java.lang.Throwable from label22 to label23 with label23;
        catch java.lang.Throwable from label26 to label27 with label23;
    }
}
