Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1766)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 6a02e2a2c8c927bec4801ac1fbaffa439730c29f5442ddd0c3b539897c8f4691
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: 8407a152a750198a9cecc8c173b46fb5748136d260fe6f5fbe4a174451640e66
		Secure: true
	Object:
		Variable: varReplacer1792
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1792)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: 5fae429f93f7ed7d67492f567b6e6cdda3f2b15426e5041a905c68debd38d30
		Secure: false
	Object:
		Variable: varReplacer1764
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1764)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: f754bb86c1a4566999ed8fec5be6d4f75d5be2ebc87e5a3c7e4f3007f90114e0
		Secure: false
	Object:
		Variable: r19
		Type: java.security.SecureRandom
		Statement: specialinvoke r19.<java.security.SecureRandom: void <init>()>()
		Method: <com.bluepay.b.b.a: java.net.HttpURLConnection b(java.lang.String,java.lang.String,java.util.Map)>
		SHA-256: d37e750ed995e81a526ca08d115e399f43dc90df91fde591753311a141ec1d54
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.bluepay.b.d.u: byte[] b(byte[])>
		SHA-256: 8a76aee69f175ca458fa683054793879e3abdb28d497497fe1c795e6f94a32a7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5211)
		Method: <com.bluepay.b.b.a: java.net.HttpURLConnection b(java.lang.String,java.lang.String,java.util.Map)>
		SHA-256: 37fd49698657ccafdb133ad043108a04724eb8e362120b84e79a0a94c79d5546
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1764)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 5d642109bcf8260e5d66b4e2aebd5e8d9804f827f1fb09c13bce100ca6868b0d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3029)
		Method: <u.aly.cf: java.lang.String a(java.lang.String)>
		SHA-256: 725cfb2a6e917da2d9d394df1ac72903d2974d3578d6e9230a3debcc35cb614e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4435)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 83713ef595d277b6133c5d0a60fb6afa0c2986efc8adfaf744a6280868055a3d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4632)
		Method: <com.zhijian.domino.iap.google.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: ef66f1edc1fae1232d353e4a5ad1c367015716e087589e895ec40b25e0ee774e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: c3495ee43789b614e009b7fd05317ad1ce164e57f58786da3f37c99230b2977f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.zhijian.domino.iap.google.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mimopay.MimopayCore: java.lang.String getAPIKey(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: b1863d309f3745c44c4035e23f8b216c001bfce964f8167ac068eae5184ea81b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1791)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: 8a40f57c6f8ba55ad05cebf1ed6cadc92e008bf860ee1f73ec469ff98e7f5560
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ccfd9ec438e1b82af96977339bc8a1ccea6aa338e79f6247cffe2cd70b368ca0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4436)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 4f4e34d4158941b0a9952b1667fdb3b640cc4f827d843e5d3f5c5b31e347fd0f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4437)
		Method: <com.umeng.analytics.b: byte[] b(byte[])>
		SHA-256: f1e0a7a1e648bcd87dd026471e47d7b54d9a88a1bb90d13fe62d9177da94db97
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1792)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: 65d69eb56cfdc5e66cbf8c3505add71ec1b1b3c3af5b62d2eccb15eea90cdcc7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: 8d9ed73f76b0cc35336304903ab76cb718c59eb2a0e5d6566d27757d000fd32
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2777)
		Method: <com.mimopay.MimopayCore: java.lang.String getAPIKey(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6de73db63178c02a174659f2184ee62ec7da73d91a05549a6517aeb5326887f7
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer408)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.security.Key generateKey(java.lang.String)>
		SHA-256: c872d38b136aee09497af2bacb7c75961a523d150eb3990d7daf731b42c4f8b5
		Secure: false
	Object:
		Variable: varReplacer4436
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4436)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: c14f799933a977d041196cee3d8e0b88909391e4ac12e9bb53ac13a6070ed1cc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer391)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 446c58070efd9ad4c31d3d35b8632ec74b985cc3812bb5efaea684ff2d8f6d46
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cf: java.lang.String b(java.lang.String)>
		SHA-256: c95e3d2ff5bc4ad136578cd492bf91938b5304d45584d84a0dbba566f04f353f
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1796)
		Method: <com.bluepay.b.d.u: byte[] b(byte[])>
		SHA-256: e934426e7929b395a9dec8f73e7a5f130fcbdde2fccb09273a3965ddaa78d5ac
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4166)
		Method: <u.aly.cf: java.lang.String b(java.lang.String)>
		SHA-256: 1d63f82e1a1e931017682d413f2715508dc8373a9e5bac7557920a365c379c35
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cf: java.lang.String a(java.lang.String)>
		SHA-256: d67eb3fda9d1f60ecd8e7dbdc986625a79b79be562603bb71eb8601da82cb91f
		Secure: true
	Object:
		Variable: varReplacer408
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer408)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.security.Key generateKey(java.lang.String)>
		SHA-256: fcda6202f5340221c3c1fc7ff0df8373c5f24949f1c3b6472625ab63ee775a93
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.umeng.analytics.b: byte[] a(byte[],byte[])>
		SHA-256: ffde2c3e415be62ad6bfbfe50546823118db13763d58e44ff45979b39cbfde6c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.bluepay.b.d.u: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 595cd5d15b6766276e15896385885c120e16edd20b8cedfe13df5427a57f4810
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4956)
		Method: <com.bluepay.b.d.e: void <clinit>()>
		SHA-256: 77487bd6c1201ef4de6b4f53dfe0df7a21a9affe47e5ff78b244b06fe1ed3e3c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.bluepay.b.d.u: byte[] a(byte[],byte[])>
		SHA-256: 912e532c88e821194e6575f7276b7e0527e548749ea1fc593eeb17eacb0fed48
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1794, varReplacer1795)
		Method: <com.bluepay.b.d.u: byte[] b(byte[])>
		SHA-256: d69da5f6dcadae3feadd4624595c9814581f154b416d40509a9d086dedc9a5fb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.codapayments.sdk.gw.util.EncryptUtils: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 64399d93c679901b692ad3aff3ea463a928df7cbde3a337646a32994552d826c
		Secure: false

Findings in Java Class: com.codapayments.sdk.gw.util.EncryptUtils

	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #446c58070efd9ad4c31d3d35b8632ec74b985cc3812bb5efaea684ff2d8f6d46)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer391)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer393, $r2)


	 in Method: java.security.Key generateKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer408)


Findings in Java Class: com.bluepay.b.d.u

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1757, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer1764)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1797, $r2)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1792)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1790, $r2)


Findings in Java Class: com.bluepay.b.b.a

	 in Method: java.net.HttpURLConnection b(java.lang.String,java.lang.String,java.util.Map)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5212, r24, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5212, r24, $r6)


Findings in Java Class: com.umeng.analytics.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4434, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4434, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer4436)


Findings in Java Class: com.zhijian.domino.iap.google.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 15
	ConstraintError: 1
=====================================================================