public class org.bitcoinj.crypto.MnemonicCode extends java.lang.Object
{
    public static long BIP39_STANDARDISATION_TIME_SECS;
    public static org.bitcoinj.crypto.MnemonicCode INSTANCE;
    private static final org.slf4j.Logger log;
    private java.util.ArrayList wordList;

    static void <clinit>()
    {
        org.slf4j.Logger $r0;
        org.bitcoinj.crypto.MnemonicCode $r1;
        java.lang.Throwable $r2, $r3;
        boolean $z0;
        java.lang.String varReplacer7452, varReplacer7454;
        long varReplacer7453;

        nop;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/bitcoinj/crypto/MnemonicCode;");

        <org.bitcoinj.crypto.MnemonicCode: org.slf4j.Logger log> = $r0;

        varReplacer7453 = 1381276800L;

        <org.bitcoinj.crypto.MnemonicCode: long BIP39_STANDARDISATION_TIME_SECS> = varReplacer7453;

        $r1 = new org.bitcoinj.crypto.MnemonicCode;

     label1:
        specialinvoke $r1.<org.bitcoinj.crypto.MnemonicCode: void <init>()>();

     label2:
        <org.bitcoinj.crypto.MnemonicCode: org.bitcoinj.crypto.MnemonicCode INSTANCE> = $r1;

        return;

     label3:
        $r2 := @caughtexception;

        $z0 = staticinvoke <org.bitcoinj.core.Utils: boolean isAndroidRuntime()>();

        if $z0 != 0 goto label5;

        $r0 = <org.bitcoinj.crypto.MnemonicCode: org.slf4j.Logger log>;

        varReplacer7454 = "Could not find word list";

        interfaceinvoke $r0.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(varReplacer7454, $r2);

        return;

     label4:
        $r3 := @caughtexception;

        $r0 = <org.bitcoinj.crypto.MnemonicCode: org.slf4j.Logger log>;

        varReplacer7452 = "Failed to load word list";

        interfaceinvoke $r0.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>(varReplacer7452, $r3);

     label5:
        return;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    public void <init>() throws java.io.IOException
    {
        org.bitcoinj.crypto.MnemonicCode $r0;
        java.io.InputStream $r1;
        java.lang.String varReplacer7472;

        nop;

        $r0 := @this: org.bitcoinj.crypto.MnemonicCode;

        $r1 = staticinvoke <org.bitcoinj.crypto.MnemonicCode: java.io.InputStream openDefaultWords()>();

        varReplacer7472 = "ad90bf3beb7b0eb7e5acd74727dc0da96e0a280a258354e7293fb7e211ac03db";

        specialinvoke $r0.<org.bitcoinj.crypto.MnemonicCode: void <init>(java.io.InputStream,java.lang.String)>($r1, varReplacer7472);

        return;
    }

    public void <init>(java.io.InputStream, java.lang.String) throws java.io.IOException, java.lang.IllegalArgumentException
    {
        org.bitcoinj.crypto.MnemonicCode $r0;
        java.io.InputStream $r1;
        java.lang.String $r2, $r7, varReplacer7475, varReplacer7476, varReplacer7478;
        java.io.BufferedReader $r3;
        java.io.InputStreamReader $r4;
        java.util.ArrayList $r5;
        java.security.MessageDigest $r6;
        byte[] $r8;
        int $i0, varReplacer7477;
        java.lang.IllegalArgumentException $r9;
        com.google.common.io.BaseEncoding $r10;
        boolean $z0;

        nop;

        $r0 := @this: org.bitcoinj.crypto.MnemonicCode;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        varReplacer7478 = "UTF-8";

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r1, varReplacer7478);

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

        $r5 = new java.util.ArrayList;

        varReplacer7477 = 2048;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(varReplacer7477);

        $r0.<org.bitcoinj.crypto.MnemonicCode: java.util.ArrayList wordList> = $r5;

        $r6 = staticinvoke <org.bitcoinj.core.Sha256Hash: java.security.MessageDigest newDigest()>();

     label1:
        $r7 = virtualinvoke $r3.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r7 == null goto label2;

        $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r6.<java.security.MessageDigest: void update(byte[])>($r8);

        $r5 = $r0.<org.bitcoinj.crypto.MnemonicCode: java.util.ArrayList wordList>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        goto label1;

     label2:
        virtualinvoke $r3.<java.io.BufferedReader: void close()>();

        $r5 = $r0.<org.bitcoinj.crypto.MnemonicCode: java.util.ArrayList wordList>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i0 == 2048 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        varReplacer7475 = "input stream did not contain 2048 words";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer7475);

        throw $r9;

     label3:
        if $r2 == null goto label4;

        $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>();

        $r10 = <org.bitcoinj.core.Utils: com.google.common.io.BaseEncoding HEX>;

        $r7 = virtualinvoke $r10.<com.google.common.io.BaseEncoding: java.lang.String encode(byte[])>($r8);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        varReplacer7476 = "wordlist digest mismatch";

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer7476);

        throw $r9;

     label4:
        return;
    }

    private static boolean[] bytesToBits(byte[])
    {
        byte[] $r0;
        boolean[] $r1;
        int $i0, $i1, $i2, $i4;
        byte $b3;
        boolean $z0;

        nop;

        $r0 := @parameter0: byte[];

        $i1 = lengthof $r0;

        $i1 = $i1 * 8;

        $r1 = newarray (boolean)[$i1];

        $i1 = 0;

     label1:
        $i2 = lengthof $r0;

        if $i1 >= $i2 goto label6;

        $i2 = 0;

     label2:
        if $i2 >= 8 goto label5;

        $i0 = $i1 * 8;

        $i0 = $i0 + $i2;

        $b3 = $r0[$i1];

        $i4 = 7 - $i2;

        $i4 = 1 << $i4;

        $i4 = $b3 & $i4;

        if $i4 == 0 goto label4;

        $z0 = 1;

     label3:
        $r1[$i0] = $z0;

        $i2 = $i2 + 1;

        goto label2;

     label4:
        $z0 = 0;

        goto label3;

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        return $r1;
    }

    private static java.io.InputStream openDefaultWords() throws java.io.IOException
    {
        java.io.InputStream $r0;
        java.lang.Class $r1;
        java.io.FileNotFoundException $r2;
        java.lang.String varReplacer7473, varReplacer7474;

        nop;

        $r1 = class "Lorg/bitcoinj/crypto/MnemonicCode;";

        varReplacer7473 = "mnemonic/wordlist/english.txt";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(varReplacer7473);

        if $r0 != null goto label1;

        $r2 = new java.io.FileNotFoundException;

        varReplacer7474 = "mnemonic/wordlist/english.txt";

        specialinvoke $r2.<java.io.FileNotFoundException: void <init>(java.lang.String)>(varReplacer7474);

        throw $r2;

     label1:
        return $r0;
    }

    public static byte[] toSeed(java.util.List, java.lang.String)
    {
        java.util.List $r0;
        java.lang.String $r1, $r2, varReplacer7457, varReplacer7458;
        java.lang.StringBuilder $r3;
        com.google.common.base.Stopwatch $r4;
        byte[] $r5;
        org.slf4j.Logger $r6;
        int varReplacer7455, varReplacer7456;

        nop;

        $r0 := @parameter0: java.util.List;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.bitcoinj.core.Utils: java.lang.String join(java.lang.Iterable)>($r0);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        varReplacer7458 = "mnemonic";

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer7458);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = staticinvoke <com.google.common.base.Stopwatch: com.google.common.base.Stopwatch createStarted()>();

        varReplacer7455 = 2048;

        varReplacer7456 = 64;

        $r5 = staticinvoke <org.bitcoinj.crypto.PBKDF2SHA512: byte[] derive(java.lang.String,java.lang.String,int,int)>($r2, $r1, varReplacer7455, varReplacer7456);

        virtualinvoke $r4.<com.google.common.base.Stopwatch: com.google.common.base.Stopwatch stop()>();

        $r6 = <org.bitcoinj.crypto.MnemonicCode: org.slf4j.Logger log>;

        varReplacer7457 = "PBKDF2 took {}";

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>(varReplacer7457, $r4);

        return $r5;
    }

    public java.util.List toMnemonic(byte[]) throws org.bitcoinj.crypto.MnemonicException$MnemonicLengthException
    {
        org.bitcoinj.crypto.MnemonicCode $r0;
        byte[] $r1, $r5;
        int $i0, $i1, $i2, $i3, $i4, varReplacer7546, varReplacer7547, varReplacer7548;
        boolean[] $r2, $r6, $r7;
        java.util.ArrayList $r3, $r8;
        org.bitcoinj.crypto.MnemonicException$MnemonicLengthException $r4;
        boolean $z0;
        java.lang.Object $r9;
        java.lang.String varReplacer7544, varReplacer7545;

        nop;

        $r0 := @this: org.bitcoinj.crypto.MnemonicCode;

        $r1 := @parameter0: byte[];

        $i0 = lengthof $r1;

        $i0 = $i0 % 4;

        if $i0 <= 0 goto label1;

        $r4 = new org.bitcoinj.crypto.MnemonicException$MnemonicLengthException;

        varReplacer7544 = "Entropy length not multiple of 32 bits.";

        specialinvoke $r4.<org.bitcoinj.crypto.MnemonicException$MnemonicLengthException: void <init>(java.lang.String)>(varReplacer7544);

        throw $r4;

     label1:
        $i0 = lengthof $r1;

        if $i0 != 0 goto label2;

        $r4 = new org.bitcoinj.crypto.MnemonicException$MnemonicLengthException;

        varReplacer7545 = "Entropy is empty.";

        specialinvoke $r4.<org.bitcoinj.crypto.MnemonicException$MnemonicLengthException: void <init>(java.lang.String)>(varReplacer7545);

        throw $r4;

     label2:
        $r5 = staticinvoke <org.bitcoinj.core.Sha256Hash: byte[] hash(byte[])>($r1);

        $r6 = staticinvoke <org.bitcoinj.crypto.MnemonicCode: boolean[] bytesToBits(byte[])>($r5);

        $r7 = staticinvoke <org.bitcoinj.crypto.MnemonicCode: boolean[] bytesToBits(byte[])>($r1);

        $i0 = lengthof $r7;

        $i0 = $i0 / 32;

        $i1 = lengthof $r7;

        $i1 = $i1 + $i0;

        $r2 = newarray (boolean)[$i1];

        $i1 = lengthof $r7;

        varReplacer7546 = 0;

        varReplacer7547 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, varReplacer7546, $r2, varReplacer7546, $i1);

        $i1 = lengthof $r7;

        varReplacer7548 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, varReplacer7548, $r2, $i1, $i0);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $i0 = lengthof $r2;

        $i0 = $i0 / 11;

        $i1 = 0;

     label3:
        if $i1 >= $i0 goto label7;

        $i2 = 0;

        $i3 = 0;

     label4:
        if $i3 >= 11 goto label6;

        $i2 = $i2 << 1;

        $i4 = $i1 * 11;

        $i4 = $i4 + $i3;

        $z0 = $r2[$i4];

        if $z0 == 0 goto label5;

        $i2 = $i2 | 1;

     label5:
        $i3 = $i3 + 1;

        goto label4;

     label6:
        $r8 = $r0.<org.bitcoinj.crypto.MnemonicCode: java.util.ArrayList wordList>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r9);

        $i1 = $i1 + 1;

        goto label3;

     label7:
        return $r3;
    }
}
