public final class com.paypal.android.sdk.aZ extends org.apache.http.conn.ssl.SSLSocketFactory
{
    private final javax.net.ssl.SSLSocketFactory a;

    public void <init>()
    {
        com.paypal.android.sdk.aZ $r0;
        com.paypal.android.sdk.bb $r1;
        javax.net.ssl.SSLContext $r2;
        java.lang.Object[] $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        com.paypal.android.sdk.ba r5;
        javax.net.ssl.TrustManager[] r6;
        null_type varReplacer20452, varReplacer20454, varReplacer20455;
        java.lang.String varReplacer20453;

        nop;

        $r0 := @this: com.paypal.android.sdk.aZ;

        varReplacer20452 = null;

        specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>(varReplacer20452);

        $r1 = staticinvoke <com.paypal.android.sdk.bb: com.paypal.android.sdk.bb a()>();

        varReplacer20453 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer20453);

        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        r5 = new com.paypal.android.sdk.ba;

        specialinvoke r5.<com.paypal.android.sdk.ba: void <init>(com.paypal.android.sdk.bb)>($r1);

        $r3[0] = r5;

        r6 = (javax.net.ssl.TrustManager[]) $r3;

        varReplacer20454 = null;

        varReplacer20455 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer20454, r6, varReplacer20454);

        $r4 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r0.<com.paypal.android.sdk.aZ: javax.net.ssl.SSLSocketFactory a> = $r4;

        return;
    }

    public final java.net.Socket connectSocket(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)
    {
        com.paypal.android.sdk.aZ $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0, $i1, $i2;
        java.net.InetAddress $r3;
        org.apache.http.params.HttpParams $r4;
        java.net.InetSocketAddress $r5;
        javax.net.ssl.SSLSocket $r6;
        org.apache.http.conn.ssl.X509HostnameVerifier $r7;
        java.lang.Throwable $r8;
        java.lang.Exception $r9;

        $r0 := @this: com.paypal.android.sdk.aZ;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.net.InetAddress;

        $i1 := @parameter4: int;

        $r4 := @parameter5: org.apache.http.params.HttpParams;

        if $r1 == null goto label07;

     label01:
        $r6 = (javax.net.ssl.SSLSocket) $r1;

        if $r3 != null goto label02;

        if $i1 <= 0 goto label04;

     label02:
        if $i1 >= 0 goto label03;

        $i1 = 0;

     label03:
        $r5 = new java.net.InetSocketAddress;

        specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r3, $i1);

        virtualinvoke $r6.<javax.net.ssl.SSLSocket: void bind(java.net.SocketAddress)>($r5);

     label04:
        $i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>($r4);

        $i2 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>($r4);

        $r5 = new java.net.InetSocketAddress;

        specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r2, $i0);

        virtualinvoke $r6.<javax.net.ssl.SSLSocket: void connect(java.net.SocketAddress,int)>($r5, $i1);

        virtualinvoke $r6.<javax.net.ssl.SSLSocket: void setSoTimeout(int)>($i2);

        $r7 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER>;

     label05:
        interfaceinvoke $r7.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>($r2, $r6);

     label06:
        return $r6;

     label07:
        $r1 = virtualinvoke $r0.<com.paypal.android.sdk.aZ: java.net.Socket createSocket()>();

        goto label01;

     label08:
        $r8 := @caughtexception;

     label09:
        virtualinvoke $r6.<javax.net.ssl.SSLSocket: void close()>();

     label10:
        throw $r8;

     label11:
        $r9 := @caughtexception;

        goto label10;

        catch java.io.IOException from label05 to label06 with label08;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    public final java.net.Socket createSocket()
    {
        com.paypal.android.sdk.aZ $r0;
        java.net.Socket $r1;
        javax.net.ssl.SSLSocketFactory $r2;

        $r0 := @this: com.paypal.android.sdk.aZ;

        $r2 = $r0.<com.paypal.android.sdk.aZ: javax.net.ssl.SSLSocketFactory a>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r1;
    }

    public final java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean)
    {
        com.paypal.android.sdk.aZ $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        boolean $z0;
        org.apache.http.conn.ssl.X509HostnameVerifier $r3;
        int $i0;
        javax.net.ssl.SSLSocketFactory $r4;
        javax.net.ssl.SSLSocket $r5;

        $r0 := @this: com.paypal.android.sdk.aZ;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $i0 != -1 goto label1;

        $i0 = 443;

     label1:
        $r4 = $r0.<com.paypal.android.sdk.aZ: javax.net.ssl.SSLSocketFactory a>;

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        $r5 = (javax.net.ssl.SSLSocket) $r1;

        $r3 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER>;

        interfaceinvoke $r3.<org.apache.http.conn.ssl.X509HostnameVerifier: void verify(java.lang.String,javax.net.ssl.SSLSocket)>($r2, $r5);

        return $r5;
    }

    public final org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier()
    {
        com.paypal.android.sdk.aZ $r0;
        org.apache.http.conn.ssl.X509HostnameVerifier r1;

        $r0 := @this: com.paypal.android.sdk.aZ;

        r1 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier STRICT_HOSTNAME_VERIFIER>;

        return r1;
    }

    public final void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)
    {
        com.paypal.android.sdk.aZ $r0;
        org.apache.http.conn.ssl.X509HostnameVerifier $r1;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: com.paypal.android.sdk.aZ;

        $r1 := @parameter0: org.apache.http.conn.ssl.X509HostnameVerifier;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only strict hostname verification is supported!");

        throw $r2;
    }
}
