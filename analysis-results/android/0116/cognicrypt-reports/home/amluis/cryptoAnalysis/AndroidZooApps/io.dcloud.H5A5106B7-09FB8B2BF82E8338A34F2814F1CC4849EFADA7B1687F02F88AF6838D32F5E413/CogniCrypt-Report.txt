Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer780)
		Method: <io.dcloud.common.adapter.util.DCloudTrustManager: java.security.SecureRandom createSecureRandom()>
		SHA-256: 7701f177283b38cdbc8e10dd28cdffeedf8f68822effedd8552f696d4dfc2824
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: fc421115d3a426497bc3603cff7013166449bad8a60b3da1eb36aafbfef9ad78
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.dcloud.common.util.Md5Utils: java.lang.String md5LowerCase(java.lang.String)>
		SHA-256: f28e735e365ee1293be19d7157c364fc9511c5b352d50406deb248f8799a5000
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: eb8d65f83999bdcf65378e7722b4d34834f48479554ef576b3cdb8a506884074
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3881)
		Method: <io.dcloud.common.util.Md5Utils: java.lang.String md5LowerCase(java.lang.String)>
		SHA-256: 583c3e9534f761e7449fba6350925023ca74e5d9d96e944ac823ce67d2cc5e54
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer479)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 50aabbd2ab61ee89d1751f101b16243610457960c1b4849887dfd8f8a96f4dd2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3889)
		Method: <io.dcloud.common.util.HashUtils: java.lang.String getHash(java.lang.String)>
		SHA-256: 5d7d681ad62b07e0260835168b226e4ca8bec23e14302b932a58e3d46a4282e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 40cc8c3a68d9234209250460ce9b0386093dea54f2699629f5ca1a61d0ffea1
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer775)
		Method: <io.dcloud.common.util.NetTool: java.net.HttpURLConnection createConnection(java.net.URL,java.lang.String)>
		SHA-256: 1642db192ffcbc7d354ca29654601bbd9a87d4533569f0898e7b8223156aae29
		Secure: false
	Object:
		Variable: varReplacer479
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer479)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 4a1ee8dbe68380b0f68073b9e7f696046a87b929ed943c46322a958ea3cec6f9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.dcloud.common.util.HashUtils: java.lang.String getHash(java.lang.String)>
		SHA-256: d9e556c4c36f19c697f3a4ba366a215437c1d25d11336e1c0f83a8ab41e15bfa
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer478)
		Method: <io.dcloud.common.util.AESUtil: byte[] encrypt(byte[],byte[],java.lang.String,byte[])>
		SHA-256: 1c6ea4f34c3bf1e60e1eaa53d2da1af581cfca9f009f477dd227fa85b10fc88
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer781, varReplacer782)
		Method: <io.dcloud.common.adapter.util.DCloudTrustManager: java.security.SecureRandom createSecureRandom()>
		SHA-256: f325d897329cd9ae53348f4db6f03eda72d843cbba55a326b8cef3a8517fd574
		Secure: true

Findings in Java Class: io.dcloud.common.util.AESUtil

	 in Method: byte[] encrypt(byte[],byte[],java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer480, $r5, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer479)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer480, $r5, $r3)


Findings in Java Class: io.dcloud.common.util.NetTool

	 in Method: java.net.HttpURLConnection createConnection(java.net.URL,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer776, r14, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer776, r14, $r7)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
=====================================================================