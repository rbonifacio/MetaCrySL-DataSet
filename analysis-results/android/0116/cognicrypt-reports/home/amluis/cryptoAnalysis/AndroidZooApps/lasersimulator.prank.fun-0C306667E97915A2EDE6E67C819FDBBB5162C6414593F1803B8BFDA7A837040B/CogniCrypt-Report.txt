Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer490)
		Method: <com.google.android.gms.d.jp: byte[] a(byte[],java.lang.String)>
		SHA-256: 484c445fbb26c6413c7c7ac342cb93d6826d5d2c1f543157866e091ac104e003
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKey
		Statement: $r10 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r9)
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: 3c07b4fda62ac4ae5419cee267e058ffe7805fdd5463e368a2a01a5353012701
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r1)
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: 3b9259e27266bfd57978aa8f5952704c3d7e8545a49d90d93fb05fd9ff2b8a23
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKeyFactory
		Statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1)
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: 607666296f4d3a09def761dd3c2f489228da400cfda709662204c8ad29039feb
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <lasersimulator.prank.fun.a: lasersimulator.prank.fun.a a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 75fb87f19d9e38d83878cdc31d28f415905be1bf23c67730ab6ee43c694af3e4
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: $r4 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r0)
		Method: <lasersimulator.prank.fun.a: lasersimulator.prank.fun.a a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 7c3e526aa9c534e6ebdb82f2a3a5d90f807a4974bf810ebf009aeb917d757f1c
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r6, $i0, $i1)
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: e4a971e3451d1eac651344eaf5d4e76572b4ffe085da9b95a426266bc5b3f949
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.d.gk: java.lang.String d()>
		SHA-256: 9c689e0b4a23ef17eaf4b059d112a889e69b65b4d3dcb3c05a88d69c0b445947
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: d1837a08c9d8cbd8bc67802bf151492ffcef1243832fc18cc95857a0aa945ed
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r6, $i0, $i1)
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: 43758801b7679aaff9b71eb1a108256fa0e05f513a282c8efa92e60782869c8d
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer492)
		Method: <com.google.android.gms.d.jp: byte[] a(byte[],java.lang.String)>
		SHA-256: 9fcb09cc0808a08d5bd7c46ed188427015e980b5b372cc56ed97ea0b49b915c0
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.d.gs: java.lang.String a(java.lang.String)>
		SHA-256: 236c4e4b302a290c3dc1c4ffaf7f7e711552d7a442d0489cb0951ddfc0f092f
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.d.jp: byte[] a(byte[],java.lang.String)>
		SHA-256: 11273866cdd55114adc2d0447545f2fb8a3e0d4570d766cc4cbc22769b3ab4e6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.d.jp: byte[] a(byte[],java.lang.String)>
		SHA-256: fe8398832451c95304ec77242278d5228e6e6fddd8d4904120d79d5d4592543d
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: 3d56854bddcd0aaa84d7f385bec93c15a900acb357165b426fa4d3fafea6cc58
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: 66569f1df5e58d8943a31559a1ac5e135002c4ecb0f614e1d0d85da886dfdf43
		Secure: false
	Object:
		Variable: varReplacer492
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer492)
		Method: <com.google.android.gms.d.jp: byte[] a(byte[],java.lang.String)>
		SHA-256: f2008de2dd1cdd62d3fed6ededdfdd972a2408f5fc9de39bdc735685056458ce
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.d.jp: byte[] a(byte[],java.lang.String)>
		SHA-256: dea09f0f1063c2f24555fdc610d2855396e17055feebfb27242606659fd18d99
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r1)
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: 7b2b74cf883124ce1e69660a09d691b9d0fbd103792e1054b7b5fc50ac270938
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <lasersimulator.prank.fun.a: java.lang.String a(java.lang.String)>
		SHA-256: 5fe0a95c9d19eacf1b76e30cc1e76afb16241997783eb4590487be9db7165671
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer640)
		Method: <com.google.android.gms.d.gs: java.lang.String a(java.lang.String)>
		SHA-256: ffca64fc54070872defc3600dd2fc49f2159d0e8bbd91bf652a0d69409d41d62
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer679)
		Method: <com.google.android.gms.d.gk: java.lang.String d()>
		SHA-256: 9d3795fbf11be15f65695dcd51105356d030194020093ff8a25ba8631858a21e
		Secure: true

Findings in Java Class: lasersimulator.prank.fun.a

	 in Method: java.lang.String a(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e4a971e3451d1eac651344eaf5d4e76572b4ffe085da9b95a426266bc5b3f949)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r10 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r10 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer1203, $r11, $r13, $r14)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #66569f1df5e58d8943a31559a1ac5e135002c4ecb0f614e1d0d85da886dfdf43)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Fourth parameter was not properly generated as randomized
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer1203, $r11, $r13, $r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r6, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e4a971e3451d1eac651344eaf5d4e76572b4ffe085da9b95a426266bc5b3f949)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r6, $i0, $i1)


Findings in Java Class: com.google.android.gms.d.jp

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer491, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer492)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 22

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	RequiredPredicateError: 8
	ConstraintError: 1
	NeverTypeOfError: 1
=====================================================================