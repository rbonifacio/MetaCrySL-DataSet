public class mkisly.utility.Encryption extends java.lang.Object
{
    private java.lang.String algorithm;
    private int base64Mode;
    private java.lang.String charsetName;

    public void <init>()
    {
        mkisly.utility.Encryption $r0;
        int varReplacer3842;
        java.lang.String varReplacer3843, varReplacer3844;

        nop;

        $r0 := @this: mkisly.utility.Encryption;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer3844 = "UTF8";

        $r0.<mkisly.utility.Encryption: java.lang.String charsetName> = varReplacer3844;

        varReplacer3843 = "DES";

        $r0.<mkisly.utility.Encryption: java.lang.String algorithm> = varReplacer3843;

        varReplacer3842 = 0;

        $r0.<mkisly.utility.Encryption: int base64Mode> = varReplacer3842;

        return;
    }

    public java.lang.String decrypt(java.lang.String, java.lang.String)
    {
        mkisly.utility.Encryption $r0;
        java.lang.String $r1, $r2;
        javax.crypto.spec.DESKeySpec $r3;
        java.lang.Exception $r4;
        int $i0, varReplacer3847;
        byte[] $r5, $r6;
        javax.crypto.SecretKeyFactory $r7;
        javax.crypto.SecretKey $r8;
        javax.crypto.Cipher $r9;
        null_type varReplacer3845, varReplacer3846;

        nop;

        $r0 := @this: mkisly.utility.Encryption;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 != null goto label1;

        varReplacer3845 = null;

        return varReplacer3845;

     label1:
        $i0 = $r0.<mkisly.utility.Encryption: int base64Mode>;

        $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, $i0);

     label2:
        $r3 = new javax.crypto.spec.DESKeySpec;

     label3:
        $r2 = $r0.<mkisly.utility.Encryption: java.lang.String charsetName>;

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r2);

        specialinvoke $r3.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r6);

        $r1 = $r0.<mkisly.utility.Encryption: java.lang.String algorithm>;

        $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

        $r1 = $r0.<mkisly.utility.Encryption: java.lang.String algorithm>;

        $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

        varReplacer3847 = 2;

        virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3847, $r8);

        $r5 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label4:
        $r1 = new java.lang.String;

     label5:
        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r5);

     label6:
        return $r1;

     label7:
        $r4 := @caughtexception;

        varReplacer3846 = null;

        return varReplacer3846;

        catch java.lang.Exception from label1 to label2 with label7;
        catch java.lang.Exception from label3 to label4 with label7;
        catch java.lang.Exception from label5 to label6 with label7;
    }

    public java.lang.String encrypt(java.lang.String, java.lang.String)
    {
        mkisly.utility.Encryption $r0;
        java.lang.String $r1, $r2, $r5;
        javax.crypto.spec.DESKeySpec $r3;
        java.lang.Exception $r4;
        int $i0, varReplacer4062;
        byte[] $r6;
        javax.crypto.SecretKeyFactory $r7;
        javax.crypto.SecretKey $r8;
        javax.crypto.Cipher $r9;
        null_type varReplacer4063, varReplacer4064;

        nop;

        $r0 := @this: mkisly.utility.Encryption;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        if $r2 != null goto label1;

        varReplacer4064 = null;

        return varReplacer4064;

     label1:
        $r3 = new javax.crypto.spec.DESKeySpec;

     label2:
        $r5 = $r0.<mkisly.utility.Encryption: java.lang.String charsetName>;

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r5);

        specialinvoke $r3.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r6);

        $r1 = $r0.<mkisly.utility.Encryption: java.lang.String algorithm>;

        $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r1);

        $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

        $r1 = $r0.<mkisly.utility.Encryption: java.lang.String charsetName>;

        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r1);

        $r1 = $r0.<mkisly.utility.Encryption: java.lang.String algorithm>;

        $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

        varReplacer4062 = 1;

        virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4062, $r8);

        $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $i0 = $r0.<mkisly.utility.Encryption: int base64Mode>;

        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r6, $i0);

     label3:
        return $r1;

     label4:
        $r4 := @caughtexception;

        varReplacer4063 = null;

        return varReplacer4063;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.lang.String getAlgorithm()
    {
        mkisly.utility.Encryption $r0;
        java.lang.String r1;

        $r0 := @this: mkisly.utility.Encryption;

        r1 = $r0.<mkisly.utility.Encryption: java.lang.String algorithm>;

        return r1;
    }

    public int getBase64Mode()
    {
        mkisly.utility.Encryption $r0;
        int i0;

        $r0 := @this: mkisly.utility.Encryption;

        i0 = $r0.<mkisly.utility.Encryption: int base64Mode>;

        return i0;
    }

    public java.lang.String getCharsetName()
    {
        mkisly.utility.Encryption $r0;
        java.lang.String r1;

        $r0 := @this: mkisly.utility.Encryption;

        r1 = $r0.<mkisly.utility.Encryption: java.lang.String charsetName>;

        return r1;
    }

    public void setAlgorithm(java.lang.String)
    {
        mkisly.utility.Encryption $r0;
        java.lang.String $r1;

        $r0 := @this: mkisly.utility.Encryption;

        $r1 := @parameter0: java.lang.String;

        $r0.<mkisly.utility.Encryption: java.lang.String algorithm> = $r1;

        return;
    }

    public void setBase64Mode(int)
    {
        mkisly.utility.Encryption $r0;
        int $i0;

        $r0 := @this: mkisly.utility.Encryption;

        $i0 := @parameter0: int;

        $r0.<mkisly.utility.Encryption: int base64Mode> = $i0;

        return;
    }

    public void setCharsetName(java.lang.String)
    {
        mkisly.utility.Encryption $r0;
        java.lang.String $r1;

        $r0 := @this: mkisly.utility.Encryption;

        $r1 := @parameter0: java.lang.String;

        $r0.<mkisly.utility.Encryption: java.lang.String charsetName> = $r1;

        return;
    }
}
