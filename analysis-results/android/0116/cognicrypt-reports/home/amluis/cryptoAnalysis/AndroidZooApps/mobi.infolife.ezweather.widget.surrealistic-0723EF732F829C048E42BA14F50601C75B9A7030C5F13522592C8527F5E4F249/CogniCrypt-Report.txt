Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4210)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: a438ad2e3692ff9a94c0fdf61a8a76fb63a70f642bad398f106e7110d9073c20
		Secure: false
	Object:
		Variable: varReplacer6713
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6713)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: e0e20a46f924ee521b528f449f1465b2329176e8321add8dc495998957d45528
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7191)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcu(java.lang.String)>
		SHA-256: 3c4cc7186112153a4ee6fe27827a04808f56c0e2004f20eacabc442a66f42e70
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 150bd5b7f4fa98bd7d19b4334335a3f364b812a82990b17162c6a447c071634b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer14959)
		Method: <com.cmcm.orion.utils.b: java.security.Key aT(java.lang.String)>
		SHA-256: 36629c436ff105ee8f45715b9a64c0ceba5996981b56cd770d48c1f949206d03
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 2125805d03a1e43489bdecc5db182c9da3fb7141e4e8c4afb45e18805c8edeaa
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer10650)
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: 950b0874b5be553463a21d00343335595dec0ffc4d68a3064a155aad606b5ee
		Secure: false
	Object:
		Variable: varReplacer15483
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer15483)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: 6cebfd736d4ceab6292f2d42bb342fc33ad97333eef4fb67facb8a52a2eeed68
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.orion.utils.b: byte[] b(byte[],byte[])>
		SHA-256: 9e818bdf7747d2779b8077c0fedf7399b8f6636c8064145231f0d6338e1ab2ff
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16293)
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 41a253475fae99b49bd89d2cdca38eea9188c3de4854908db9ff3f295a934c0d
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcu(java.lang.String)>
		SHA-256: a107f0a15b16b8e021c95c077590c48b5b253ddc4b8bda38bce253162a9875cd
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2723)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: df0b0b2a541afd25bd699ccd6c730335b345f6917a0b5b45a3ee73ce63dde974
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18476)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 88e0a4ff945ce6c172575016d14f8fc5e1daebfc013236985f2acf00aec56649
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: d0f6f4706546c156ee289b202709825e5df53f7e4f36e0982c154eb3536bcb6c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10665)
		Method: <com.cmcm.adsdk.report.a: byte[] a(byte[])>
		SHA-256: d8987ed7c3bc9b0369541c4ec7a289f094a7b4612aaa7e817f5420ab2acee23b
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.duapps.ad.stats.ToolStatsCore: boolean a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6dccddc85db8a0420413b2cdd7c4e79ecfe1ab461275a4708c7dffcf2c681e11
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: 1dfb89f37c9374b0f8797bb983909bd30950d34d01d7bf720df31e0857648cba
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15308)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String generateSigStr(java.lang.String)>
		SHA-256: 28f4eec88f598beff7fca63eb04a88573af11672ac1c9ef722e8f4cfba5e0fc9
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String generateSigStr(java.lang.String)>
		SHA-256: e2d69856c9b744dac1dc3c7ac29a90ff33ee68c91c73e371d93120163d7d21bc
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15087)
		Method: <com.cmcm.orion.utils.b: byte[] a(byte[],byte[])>
		SHA-256: ffa0d2a3a7fd725ad22c61e4fefbd984b3b95b7c359b163d0f800f218b401fa0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14923)
		Method: <com.cmcm.orion.utils.b: byte[] b(byte[],byte[])>
		SHA-256: 51b5831a00491924d5a6be62b20f5edbdc56cc08408646be3c6a3f16b011edc5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer15483)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: 3f5e8cdd626330459f8175cd9e2e98db0d1e2d2065338b361c456a2267e77ffd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amberweather.sdk.amberinterstitialad.Utils.AmberUtils: java.lang.String md5(byte[])>
		SHA-256: 5e72dd85de168c9c08028f18f055cd4e856ede41e4bf6951409bcc5da8efb484
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4637)
		Method: <com.amberweather.sdk.amberinterstitialad.Utils.AmberUtils: java.lang.String md5(byte[])>
		SHA-256: 5419b9aee0f1363de376cea5181697783bbeddc4d54baf1cde13334d34331b31
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6715)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: fc914ad89bbf97a068bf2b9a40220e1ad236bf1b150541408be03a7d51b0ee9
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: 628e38a52ee52d69ccf402b0e70352e497db2ee6841c308f8d94d82ec6baa482
		Secure: true
	Object:
		Variable: varReplacer10650
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer10650)
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: def486448ed8ad6b5e32bd77ef34a5501d6f3132cfcae05f668fe685713fa331
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.orion.utils.b: byte[] a(byte[],byte[])>
		SHA-256: 3e407fecc05e78999e7d43d66f4d16e5d6e6c29547848cbaac2765b54d6dc50
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10172)
		Method: <com.cmcm.orion.picks.impl.a$1$1: java.lang.String b(java.lang.String)>
		SHA-256: dc01f8b70e13b8e2cbf2411571f01f83ecdae84bfc2ccc028e54232aff211fc8
		Secure: true
	Object:
		Variable: r6
		Type: java.security.SecureRandom
		Statement: specialinvoke r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: 326c892eafee669a652e905d60ef67edde44b849328880dfa09f355c60ebf2cc
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15481)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: f21a5d2fae43de67c614b2eb47a9594788924d574beca564d80c764286aae554
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.cmcm.orion.picks.impl.a$1$1: java.lang.String b(java.lang.String)>
		SHA-256: 9e8b4c9c3a385d14ce83ed1234f17837ebff5ae4987490d6a5c211cb9f1ff774
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.orion.utils.b: byte[] a(byte[],byte[])>
		SHA-256: 92f0b5153c0953cefafd845bfbe12a45b3d4c2ed122d0ddcdbc14928ed421169
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <com.cmcm.orion.utils.b: java.security.Key aT(java.lang.String)>
		SHA-256: 95eb8a582489815d545653f28b85ce5b62df1e31bf21bf17a4f540ca5fc46078
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.android.volley.InternalUtils: java.lang.String sha1Hash(java.lang.String)>
		SHA-256: 51d771176588bd9b377838ae77608f0ca53802f65bd7d4d703667e5fef52b40b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.amberweather.ist_library.userId.AndroidDeviceID: java.lang.String getSha1Hash(java.lang.String)>
		SHA-256: efcceff32b0ed962e35edf6e1d0cb2f1e781104f871b1bff7df26cccd8f108d0
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6713)
		Method: <com.duapps.ad.base.a: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 8bd5948b451fdc606b2e502bebf63d25824305ba66c02c17a8e70a6900a967f0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17590)
		Method: <com.amberweather.ist_library.userId.AndroidDeviceID: java.lang.String getSha1Hash(java.lang.String)>
		SHA-256: 737bbc21d030cb7f9b8fefeb26e924a999679315a331c1f8c0b7579b8c720512
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.adsdk.report.a: byte[] a(byte[])>
		SHA-256: 46f7ffd9ba9f0fbdeecda0158b98e79c077833560688195f3166bc3a80c52ead
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.cmcm.orion.utils.b: byte[] b(byte[],byte[])>
		SHA-256: a69ba1c0681ad75d9b9a76b3f7012b423dc5a434090353d3cd3b1ebb8a1701dc
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.cmcm.adsdk.config.RequestUFS: java.lang.String decryptResult(byte[])>
		SHA-256: ee20511c101e9f3462677ac977fd480495a47c1faa8556b4d8f041bb73a163a6
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17091)
		Method: <com.amazonaws.http.UrlHttpClient: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)>
		SHA-256: 4d779eef439ee363b10eb65a11f333b3f0dbd592a7b0242af2d12d06780a625
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6579)
		Method: <com.duapps.ad.stats.ToolStatsCore: boolean a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: ed09ba3bde2619f0e4a851628367fe84de7588e812e66bae38c773ade90c723e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke r6.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.cmcm.adsdk.report.a: void <init>()>
		SHA-256: 8b8fc2b325f11b2dcff641fc3d17e8bd17c6aaf9108f0ce3b797711d632ffdb8
		Secure: true

Findings in Java Class: com.cmcm.orion.utils.b

	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer14922, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #51b5831a00491924d5a6be62b20f5edbdc56cc08408646be3c6a3f16b011edc5)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {ARC4, AES, BLOWFISH, DESede, RSA}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14923)


	 in Method: java.security.Key aT(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #36629c436ff105ee8f45715b9a64c0ceba5996981b56cd770d48c1f949206d03)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAANDTWOFISH-CBC	, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithSHAAND40BITRC4, PBEwithMD5ANDDES, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer14959)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15086, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ffa0d2a3a7fd725ad22c61e4fefbd984b3b95b7c359b163d0f800f218b401fa0)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {ARC4, AES, BLOWFISH, DESede, RSA}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15087)


Findings in Java Class: com.cmcm.adsdk.config.RequestUFS

	 in Method: java.lang.String decryptResult(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f21a5d2fae43de67c614b2eb47a9594788924d574beca564d80c764286aae554)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15481)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer15483)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer15480, $r3, $r6)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4207, varReplacer4207, varReplacer4207)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4207, varReplacer4207, varReplacer4207)


Findings in Java Class: com.duapps.ad.base.a

	 in Method: byte[] a(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6714, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer6713)


Findings in Java Class: com.cmcm.adsdk.report.a

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer10650)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10664, $r2, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10664, $r2, $r3)


Findings in Java Class: com.amazonaws.http.UrlHttpClient

	 in Method: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17089, $r2, varReplacer17089)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17089, $r2, varReplacer17089)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 45

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 16
	ConstraintError: 4
=====================================================================