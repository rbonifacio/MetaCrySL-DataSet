public class elixier.mobile.wub.de.apothekeelixier.persistence.Zipper extends java.lang.Object
{
    private static final java.lang.String DIGEST_ALGORITHM;
    private static final int DIGEST_SIZE_BYTE;
    private final int BUFFER_SIZE;
    private final java.security.MessageDigest mDigest;

    public void <init>()
    {
        elixier.mobile.wub.de.apothekeelixier.persistence.Zipper $r0;
        java.lang.Throwable $r1;
        java.security.MessageDigest $r2;
        java.lang.Error $r3;
        java.lang.String varReplacer2588, varReplacer2590;
        int varReplacer2589;

        nop;

        $r0 := @this: elixier.mobile.wub.de.apothekeelixier.persistence.Zipper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer2589 = 1024;

        $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: int BUFFER_SIZE> = varReplacer2589;

     label1:
        varReplacer2590 = "SHA1";

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2590);

     label2:
        $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: java.security.MessageDigest mDigest> = $r2;

        return;

     label3:
        $r1 := @caughtexception;

        $r3 = new java.lang.Error;

        varReplacer2588 = "Device does not support required digest algorithm";

        specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer2588, $r1);

        throw $r3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private byte[] calculateDigest(java.io.File) throws java.io.IOException
    {
        elixier.mobile.wub.de.apothekeelixier.persistence.Zipper $r0;
        java.io.File $r1;
        byte[] $r2;
        java.io.BufferedInputStream $r3, $r5;
        java.security.MessageDigest $r4;
        java.io.FileInputStream $r6;
        int $i0;
        java.lang.Throwable $r7;

        $r0 := @this: elixier.mobile.wub.de.apothekeelixier.persistence.Zipper;

        $r1 := @parameter0: java.io.File;

        $r4 = $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: java.security.MessageDigest mDigest>;

        virtualinvoke $r4.<java.security.MessageDigest: void reset()>();

        $r2 = newarray (byte)[1024];

        $r5 = null;

     label1:
        $r3 = new java.io.BufferedInputStream;

        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6);

     label2:
        $i0 = lengthof $r2;

        $i0 = virtualinvoke $r3.<java.io.BufferedInputStream: int read(byte[],int,int)>($r2, 0, $i0);

     label3:
        if $i0 == -1 goto label8;

        if $i0 == 0 goto label2;

     label4:
        $r4 = $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: java.security.MessageDigest mDigest>;

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i0);

     label5:
        goto label2;

     label6:
        $r7 := @caughtexception;

        $r5 = $r3;

     label7:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r5);

        throw $r7;

     label8:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r3);

        $r4 = $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: java.security.MessageDigest mDigest>;

        $r2 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        return $r2;

     label9:
        $r7 := @caughtexception;

        goto label7;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private void makeDirIfMissing(java.io.File)
    {
        elixier.mobile.wub.de.apothekeelixier.persistence.Zipper $r0;
        java.io.File $r1;
        boolean $z0;

        $r0 := @this: elixier.mobile.wub.de.apothekeelixier.persistence.Zipper;

        $r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r1.<java.io.File: boolean mkdir()>();

     label1:
        return;
    }

    public boolean checkDigest(java.io.File) throws java.io.IOException
    {
        elixier.mobile.wub.de.apothekeelixier.persistence.Zipper $r0;
        java.io.File $r1;
        byte[] $r2, $r7;
        long $l0, $l1, $l3;
        java.io.BufferedInputStream $r3, $r5;
        java.security.MessageDigest $r4;
        java.io.FileInputStream $r6;
        int $i2;
        byte $b4;
        boolean $z0;
        java.lang.Throwable $r8;

        $r0 := @this: elixier.mobile.wub.de.apothekeelixier.persistence.Zipper;

        $r1 := @parameter0: java.io.File;

        $l1 = virtualinvoke $r1.<java.io.File: long length()>();

        $l0 = $l1 - 20L;

        $r4 = $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: java.security.MessageDigest mDigest>;

        virtualinvoke $r4.<java.security.MessageDigest: void reset()>();

        $r2 = newarray (byte)[1024];

        $r5 = null;

        $l1 = $l0;

     label01:
        $r3 = new java.io.BufferedInputStream;

        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6);

     label02:
        $i2 = lengthof $r2;

     label03:
        $l3 = (long) $i2;

     label04:
        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l3);

     label05:
        $i2 = (int) $l0;

     label06:
        $b4 = $l1 cmp 0L;

        if $b4 <= 0 goto label13;

     label07:
        $i2 = virtualinvoke $r3.<java.io.BufferedInputStream: int read(byte[],int,int)>($r2, 0, $i2);

     label08:
        if $i2 == -1 goto label13;

        $l0 = (long) $i2;

        $l1 = $l1 - $l0;

     label09:
        $r4 = $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: java.security.MessageDigest mDigest>;

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r2, 0, $i2);

        $i2 = lengthof $r2;

     label10:
        $l0 = (long) $i2;

     label11:
        $l0 = staticinvoke <java.lang.Math: long min(long,long)>($l1, $l0);

     label12:
        $i2 = (int) $l0;

        goto label06;

     label13:
        $r4 = $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: java.security.MessageDigest mDigest>;

        $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        $r2 = newarray (byte)[20];

        staticinvoke <org.apache.commons.io.IOUtils: int read(java.io.InputStream,byte[])>($r3, $r2);

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r7, $r2);

     label14:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r3);

        return $z0;

     label15:
        $r8 := @caughtexception;

     label16:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r5);

        throw $r8;

     label17:
        $r8 := @caughtexception;

        $r5 = $r3;

        goto label16;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label04 to label05 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
    }

    public transient void compress(java.io.File, java.io.File[]) throws java.io.IOException
    {
        elixier.mobile.wub.de.apothekeelixier.persistence.Zipper $r0;
        java.io.File $r1, $r5;
        java.io.File[] $r2;
        java.io.BufferedOutputStream $r3, $r8;
        java.util.zip.ZipOutputStream $r4, $r7;
        int $i0, $i1, $i2;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;
        java.io.BufferedInputStream $r9, $r11;
        java.io.FileOutputStream $r10;
        java.io.FileInputStream $r12;
        java.util.zip.ZipEntry $r13;
        java.lang.String $r14;
        byte[] $r15;
        java.lang.Throwable $r16;

        $r0 := @this: elixier.mobile.wub.de.apothekeelixier.persistence.Zipper;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File[];

        $i0 = 0;

        $i1 = lengthof $r2;

        $i2 = 0;

     label01:
        if $i2 >= $i1 goto label03;

        $r5 = $r2[$i2];

        $z0 = virtualinvoke $r5.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label02;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Incorrect file or directory");

        throw $r6;

     label02:
        $i2 = $i2 + 1;

        goto label01;

     label03:
        $r7 = null;

        $r8 = null;

        $r9 = null;

     label04:
        $r3 = new java.io.BufferedOutputStream;

        $r10 = new java.io.FileOutputStream;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r10);

     label05:
        $r4 = new java.util.zip.ZipOutputStream;

        specialinvoke $r4.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r3);

     label06:
        $i1 = lengthof $r2;

     label07:
        $r11 = null;

     label08:
        if $i0 >= $i1 goto label12;

     label09:
        $r5 = $r2[$i0];

        $r9 = new java.io.BufferedInputStream;

        $r12 = new java.io.FileInputStream;

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.File)>($r5);

        specialinvoke $r9.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r12);

     label10:
        $r13 = new java.util.zip.ZipEntry;

        $r14 = virtualinvoke $r5.<java.io.File: java.lang.String getName()>();

        specialinvoke $r13.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r14);

        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r13);

        staticinvoke <org.apache.commons.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r9, $r4);

        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void closeEntry()>();

     label11:
        $i0 = $i0 + 1;

        $r11 = $r9;

        goto label08;

     label12:
        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void finish()>();

        virtualinvoke $r4.<java.util.zip.ZipOutputStream: void flush()>();

        $r15 = specialinvoke $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: byte[] calculateDigest(java.io.File)>($r1);

        virtualinvoke $r3.<java.io.BufferedOutputStream: void write(byte[])>($r15);

     label13:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r4);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r3);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r11);

        return;

     label14:
        $r16 := @caughtexception;

     label15:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r7);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r8);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r9);

        throw $r16;

     label16:
        $r16 := @caughtexception;

        $r8 = $r3;

        goto label15;

     label17:
        $r16 := @caughtexception;

        $r8 = $r3;

        $r7 = $r4;

        goto label15;

     label18:
        $r16 := @caughtexception;

        $r9 = $r11;

        $r8 = $r3;

        $r7 = $r4;

        goto label15;

        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label06 to label07 with label17;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label10 to label11 with label17;
        catch java.lang.Throwable from label12 to label13 with label18;
    }

    public java.util.List extract(java.io.File, java.io.File) throws java.io.IOException
    {
        elixier.mobile.wub.de.apothekeelixier.persistence.Zipper $r0;
        java.io.File $r1, $r2, $r13;
        java.util.ArrayList $r3;
        java.util.zip.ZipInputStream $r4, $r6;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;
        java.io.BufferedOutputStream $r7, $r10;
        java.io.BufferedInputStream $r8;
        java.io.FileInputStream $r9;
        java.util.zip.ZipEntry $r11;
        java.lang.String $r12;
        java.io.FileOutputStream $r14;
        java.lang.Throwable $r15;

        $r0 := @this: elixier.mobile.wub.de.apothekeelixier.persistence.Zipper;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label01;

        $z0 = virtualinvoke $r2.<java.io.File: boolean isDirectory()>();

        if $z0 != 0 goto label02;

     label01:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Incorrect file or directory");

        throw $r5;

     label02:
        $r6 = null;

        $r7 = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label03:
        $r4 = new java.util.zip.ZipInputStream;

        $r8 = new java.io.BufferedInputStream;

        $r9 = new java.io.FileInputStream;

        specialinvoke $r9.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r9);

        specialinvoke $r4.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>($r8);

     label04:
        $r10 = null;

     label05:
        $r11 = virtualinvoke $r4.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

     label06:
        if $r11 == null goto label17;

     label07:
        $r1 = new java.io.File;

        $r12 = virtualinvoke $r11.<java.util.zip.ZipEntry: java.lang.String getName()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r12);

        $z0 = virtualinvoke $r11.<java.util.zip.ZipEntry: boolean isDirectory()>();

     label08:
        if $z0 == 0 goto label12;

     label09:
        virtualinvoke $r1.<java.io.File: boolean mkdirs()>();

     label10:
        $r7 = $r10;

     label11:
        $r10 = $r7;

        goto label05;

     label12:
        $r13 = virtualinvoke $r1.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $r0.<elixier.mobile.wub.de.apothekeelixier.persistence.Zipper: void makeDirIfMissing(java.io.File)>($r13);

        $r7 = new java.io.BufferedOutputStream;

        $r14 = new java.io.FileOutputStream;

        specialinvoke $r14.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r7.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r14);

     label13:
        staticinvoke <org.apache.commons.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r4, $r7);

        virtualinvoke $r7.<java.io.OutputStream: void close()>();

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

     label14:
        goto label11;

     label15:
        $r15 := @caughtexception;

        $r6 = $r4;

     label16:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r6);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r7);

        throw $r15;

     label17:
        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.InputStream)>($r4);

        staticinvoke <org.apache.commons.io.IOUtils: void closeQuietly(java.io.OutputStream)>($r10);

        return $r3;

     label18:
        $r15 := @caughtexception;

        goto label16;

     label19:
        $r15 := @caughtexception;

        $r7 = $r10;

        $r6 = $r4;

        goto label16;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label13 to label14 with label15;
    }
}
