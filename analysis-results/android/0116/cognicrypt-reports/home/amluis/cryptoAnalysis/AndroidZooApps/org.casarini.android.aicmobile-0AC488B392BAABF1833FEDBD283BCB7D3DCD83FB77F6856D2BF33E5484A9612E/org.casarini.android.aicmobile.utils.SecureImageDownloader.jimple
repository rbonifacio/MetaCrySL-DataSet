public class org.casarini.android.aicmobile.utils.SecureImageDownloader extends com.nostra13.universalimageloader.core.download.BaseImageDownloader
{
    public static final int DEFAULT_HTTP_CONNECT_TIMEOUT;
    public static final int DEFAULT_HTTP_READ_TIMEOUT;
    private javax.net.ssl.SSLSocketFactory sf;

    public void <init>(android.content.Context)
    {
        org.casarini.android.aicmobile.utils.SecureImageDownloader $r0;
        android.content.Context $r1;
        int varReplacer5235, varReplacer5236;

        nop;

        $r0 := @this: org.casarini.android.aicmobile.utils.SecureImageDownloader;

        $r1 := @parameter0: android.content.Context;

        varReplacer5235 = 5000;

        varReplacer5236 = 20000;

        specialinvoke $r0.<org.casarini.android.aicmobile.utils.SecureImageDownloader: void <init>(android.content.Context,int,int)>($r1, varReplacer5235, varReplacer5236);

        return;
    }

    public void <init>(android.content.Context, int, int)
    {
        org.casarini.android.aicmobile.utils.SecureImageDownloader $r0;
        android.content.Context $r1;
        int $i0, $i1, varReplacer5237, varReplacer5238;

        nop;

        $r0 := @this: org.casarini.android.aicmobile.utils.SecureImageDownloader;

        $r1 := @parameter0: android.content.Context;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        varReplacer5237 = 5000;

        varReplacer5238 = 20000;

        specialinvoke $r0.<com.nostra13.universalimageloader.core.download.BaseImageDownloader: void <init>(android.content.Context,int,int)>($r1, varReplacer5237, varReplacer5238);

        specialinvoke $r0.<org.casarini.android.aicmobile.utils.SecureImageDownloader: void initSSLSocketFactory()>();

        return;
    }

    private void initSSLSocketFactory()
    {
        org.casarini.android.aicmobile.utils.SecureImageDownloader $r0;
        java.lang.Object[] $r1;
        javax.net.ssl.SSLContext $r2;
        java.security.SecureRandom $r3, r8;
        javax.net.ssl.SSLSocketFactory $r4;
        java.lang.Throwable $r5, $r6;
        org.casarini.android.aicmobile.utils.SecureImageDownloader$1 r7;
        javax.net.ssl.TrustManager[] r9;
        java.security.KeyManagementException r10;
        java.security.NoSuchAlgorithmException r11;
        java.lang.String varReplacer5241;
        null_type varReplacer5242;

        nop;

        $r0 := @this: org.casarini.android.aicmobile.utils.SecureImageDownloader;

        $r1 = newarray (javax.net.ssl.TrustManager)[1];

        r7 = new org.casarini.android.aicmobile.utils.SecureImageDownloader$1;

        specialinvoke r7.<org.casarini.android.aicmobile.utils.SecureImageDownloader$1: void <init>(org.casarini.android.aicmobile.utils.SecureImageDownloader)>($r0);

        $r1[0] = r7;

     label1:
        varReplacer5241 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5241);

     label2:
        r8 = new java.security.SecureRandom;

        $r3 = r8;

     label3:
        specialinvoke r8.<java.security.SecureRandom: void <init>()>();

     label4:
        r9 = (javax.net.ssl.TrustManager[]) $r1;

     label5:
        varReplacer5242 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5242, r9, $r3);

        $r4 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label6:
        $r0.<org.casarini.android.aicmobile.utils.SecureImageDownloader: javax.net.ssl.SSLSocketFactory sf> = $r4;

        return;

     label7:
        $r5 := @caughtexception;

        r10 = (java.security.KeyManagementException) $r5;

        virtualinvoke r10.<java.security.KeyManagementException: void printStackTrace()>();

        return;

     label8:
        $r6 := @caughtexception;

        r11 = (java.security.NoSuchAlgorithmException) $r6;

        virtualinvoke r11.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return;

        catch java.security.KeyManagementException from label1 to label2 with label7;
        catch java.security.KeyManagementException from label3 to label4 with label7;
        catch java.security.KeyManagementException from label5 to label6 with label7;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label8;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label8;
        catch java.security.NoSuchAlgorithmException from label5 to label6 with label8;
    }

    protected java.net.HttpURLConnection createConnection(java.lang.String, java.lang.Object) throws java.io.IOException
    {
        org.casarini.android.aicmobile.utils.SecureImageDownloader $r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.URL $r4;
        java.net.URLConnection $r5;
        java.net.HttpURLConnection $r6;
        int $i0;
        boolean $z0;
        javax.net.ssl.HttpsURLConnection $r7;

        $r0 := @this: org.casarini.android.aicmobile.utils.SecureImageDownloader;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r1 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>($r1, "@#&=*+-_.,:!?()/~\'%");

        $r4 = new java.net.URL;

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.net.URL: java.net.URLConnection openConnection()>();

        $r6 = (java.net.HttpURLConnection) $r5;

        $i0 = $r0.<org.casarini.android.aicmobile.utils.SecureImageDownloader: int connectTimeout>;

        virtualinvoke $r6.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        $i0 = $r0.<org.casarini.android.aicmobile.utils.SecureImageDownloader: int readTimeout>;

        virtualinvoke $r6.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        $z0 = $r6 instanceof javax.net.ssl.HttpsURLConnection;

        if $z0 == 0 goto label1;

        $r7 = (javax.net.ssl.HttpsURLConnection) $r6;

        $r3 = $r0.<org.casarini.android.aicmobile.utils.SecureImageDownloader: javax.net.ssl.SSLSocketFactory sf>;

        virtualinvoke $r7.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r3);

     label1:
        return $r6;
    }
}
