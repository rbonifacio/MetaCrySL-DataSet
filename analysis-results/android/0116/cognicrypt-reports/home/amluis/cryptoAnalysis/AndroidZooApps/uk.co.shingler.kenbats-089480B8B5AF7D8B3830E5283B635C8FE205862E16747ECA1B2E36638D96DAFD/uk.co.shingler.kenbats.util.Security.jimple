public class uk.co.shingler.kenbats.util.Security extends java.lang.Object
{
    private static final java.lang.String KEY_FACTORY_ALGORITHM;
    private static final java.lang.String SIGNATURE_ALGORITHM;
    private static final java.lang.String TAG;

    public void <init>()
    {
        uk.co.shingler.kenbats.util.Security $r0;

        $r0 := @this: uk.co.shingler.kenbats.util.Security;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.PublicKey generatePublicKey(java.lang.String)
    {
        java.lang.String $r0, varReplacer472, varReplacer473, varReplacer474, varReplacer475, varReplacer476;
        byte[] $r1;
        java.security.KeyFactory $r2;
        java.security.spec.X509EncodedKeySpec $r3;
        java.security.PublicKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r8;
        uk.co.shingler.kenbats.util.Base64DecoderException $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <uk.co.shingler.kenbats.util.Base64: byte[] decode(java.lang.String)>($r0);

        varReplacer472 = "RSA";

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer472);

     label2:
        $r3 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer475 = "IABUtil/Security";

        varReplacer476 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer475, varReplacer476);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label7:
        $r9 := @caughtexception;

        varReplacer473 = "IABUtil/Security";

        varReplacer474 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer473, varReplacer474);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
        catch uk.co.shingler.kenbats.util.Base64DecoderException from label1 to label2 with label7;
        catch uk.co.shingler.kenbats.util.Base64DecoderException from label3 to label4 with label7;
    }

    public static boolean verify(java.security.PublicKey, java.lang.String, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, $r2, varReplacer455, varReplacer456, varReplacer457, varReplacer458, varReplacer459, varReplacer460, varReplacer462, varReplacer463, varReplacer468, varReplacer469, varReplacer470;
        java.security.Signature $r3;
        byte[] $r4;
        boolean $z0;
        java.lang.Throwable $r5, $r6, $r7;
        uk.co.shingler.kenbats.util.Base64DecoderException $r8;
        int varReplacer461, varReplacer464, varReplacer465, varReplacer466, varReplacer467, varReplacer471;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        varReplacer468 = "SHA1withRSA";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer468);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r4);

        $r4 = staticinvoke <uk.co.shingler.kenbats.util.Base64: byte[] decode(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4);

     label2:
        if $z0 != 0 goto label5;

     label3:
        varReplacer469 = "IABUtil/Security";

        varReplacer470 = "Signature verification failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer469, varReplacer470);

     label4:
        varReplacer465 = 0;

        return varReplacer465;

     label5:
        varReplacer471 = 1;

        return varReplacer471;

     label6:
        $r5 := @caughtexception;

        varReplacer457 = "IABUtil/Security";

        varReplacer458 = "NoSuchAlgorithmException.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer457, varReplacer458);

        varReplacer466 = 0;

        return varReplacer466;

     label7:
        $r6 := @caughtexception;

        varReplacer455 = "IABUtil/Security";

        varReplacer456 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer455, varReplacer456);

        varReplacer467 = 0;

        return varReplacer467;

     label8:
        $r7 := @caughtexception;

        varReplacer459 = "IABUtil/Security";

        varReplacer460 = "Signature exception.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer459, varReplacer460);

        varReplacer461 = 0;

        return varReplacer461;

     label9:
        $r8 := @caughtexception;

        varReplacer462 = "IABUtil/Security";

        varReplacer463 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer462, varReplacer463);

        varReplacer464 = 0;

        return varReplacer464;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.SignatureException from label1 to label2 with label8;
        catch java.security.SignatureException from label3 to label4 with label8;
        catch uk.co.shingler.kenbats.util.Base64DecoderException from label1 to label2 with label9;
        catch uk.co.shingler.kenbats.util.Base64DecoderException from label3 to label4 with label9;
    }

    public static boolean verifyPurchase(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, varReplacer450, varReplacer451, varReplacer452, varReplacer453;
        boolean $z0;
        java.security.PublicKey $r3;
        int varReplacer448, varReplacer449, varReplacer454;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        if $r1 != null goto label1;

        varReplacer452 = "IABUtil/Security";

        varReplacer453 = "data is null";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer452, varReplacer453);

        varReplacer448 = 0;

        return varReplacer448;

     label1:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label2;

        $r3 = staticinvoke <uk.co.shingler.kenbats.util.Security: java.security.PublicKey generatePublicKey(java.lang.String)>($r0);

        $z0 = staticinvoke <uk.co.shingler.kenbats.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>($r3, $r1, $r2);

        if $z0 != 0 goto label2;

        varReplacer450 = "IABUtil/Security";

        varReplacer451 = "signature does not match data.";

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>(varReplacer450, varReplacer451);

        varReplacer454 = 0;

        return varReplacer454;

     label2:
        varReplacer449 = 1;

        return varReplacer449;
    }
}
