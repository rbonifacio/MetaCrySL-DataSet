Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/air.com.viber.worldpoker-025C913E70ACCCE3A9DF0E7DB4F6C77366F66F8CEBD99947833EF66DE5DB1680.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer4790
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer4790)
		Method: <com.helpshift.support.HSApiClient: java.lang.String getSignature(java.lang.String,java.lang.String)>
		SHA-256: 88e3732283e4bd9f227837ab01ec896aa3bcb8c01b981803d2fd25126a23d3f0
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.immersion.hapticmediasdk.utils.FileManager: java.lang.String getUniqueFileName(java.lang.String)>
		SHA-256: 60094877678a6cfe02028ceaff580697009c76d513bd885f3bb0e4545bbe8212
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer4790)
		Method: <com.helpshift.support.HSApiClient: java.lang.String getSignature(java.lang.String,java.lang.String)>
		SHA-256: e970d21adce0a5ef534c5b938a5a2bed449e153da3a92333e833e5acfa72ef79
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1462)
		Method: <com.vk.sdk.util.VKUtil: java.lang.String md5(java.lang.String)>
		SHA-256: ec148cf56ab4ca6615b18fb10314e9ac29ec6941e1c0b1ddd0fc6c36ffee8e1d
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4791)
		Method: <com.helpshift.support.HSApiClient: java.lang.String getSignature(java.lang.String,java.lang.String)>
		SHA-256: b8278297c3ac21693b0508c4de4ce4fe886a899476f39a03dfefe3f2eaaa3a48
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <com.helpshift.support.HSApiClient: java.lang.String getSignature(java.lang.String,java.lang.String)>
		SHA-256: 7ce6f01b3e8950a491644e247611cfb2f61ddbe5ef8f6fca0432db2aa1fb8dd0
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.vk.sdk.util.VKUtil: java.lang.String md5(java.lang.String)>
		SHA-256: 106d1660ecb7ad325f9df499c94fcedc5cfb2d42ea397a24616785afe0c1744d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4511)
		Method: <com.immersion.hapticmediasdk.utils.FileManager: java.lang.String getUniqueFileName(java.lang.String)>
		SHA-256: 165c5c150f7ad48ad84531f5bae6f646691d6d225154ca6c80ab394fba40699a
		Secure: true

Findings in Java Class: com.helpshift.support.HSApiClient

	 in Method: java.lang.String getSignature(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer4790)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 1
=====================================================================
