Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.charlotteobserver.android-0C9D116B3E2ED5B72F09BB28BDAB0CFC987806371165B44726972DF7EA346E7F.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
13:57:39.239 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:39.285 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:39.351 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:57:39.352 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:57:39.754 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:57:39.755 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:57:40.542 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:40.603 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:40.966 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:40.966 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:40.966 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:41.056 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:41.056 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:41.056 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:41.058 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:41.058 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:41.070 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:57:41.070 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:57:41.070 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:57:41.070 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:57:41.800 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:57:41.831 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:57:41.831 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:57:41.834 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:57:41.837 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:58:14.593 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <com.urbanairship.util.DataManager: void close()> for class com.urbanairship.UrbanAirshipProvider$DatabaseModel
14:00:41.208 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <com.urbanairship.util.DataManager: void close()> for class com.urbanairship.UrbanAirshipProvider$DatabaseModel
Alive 198800  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.a.d: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 5b660fa7b6fa4d8a3cf07b4461206e23759ea3b41758246f43a440ec094b9619
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: 5a548ff0d8e7fcb654b0cdf7a677215974f829e5892f6b91aef0db23262ae0f5
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.adobe.mobile.StaticMethods: java.lang.String generateAID()>
		SHA-256: ea360b1b9ce6107091c0e5bf602385ba3876d2f680d102c3b122f256893d67f6
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzc: void zza(android.os.Bundle,java.security.KeyPair,java.lang.String)>
		SHA-256: c48f27d182cdd8384a7267bbbe741b6968b26af067f72b9c4b40a124ea07e8fe
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.google.android.a.d: java.lang.String a(byte[],java.lang.String)>
		SHA-256: c609b86a9d74f06408b9389aff10a462344d70fba277be7ce0854c1c7c76184
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PrivateKey
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 6adb857c9c5aa3d70a96ff0750d1e4661180a6bbd2b29000a6c71896fd5a94e
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzeP(java.lang.String)>
		SHA-256: a53a10fcbcfb3290d3008d5842f3a3c3487fccb65b6ab868a632b08b7a6f832f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10227)
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: 6106beee560865d65a331de3fbf9e8264cd7dfd796f18b9f135c988c82ca42ab
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: de23b6b43bf61a151236ba121fe635998ae5701838c416d3d6732f9c02675d0b
		Secure: true
	Object:
		Variable: $r8
		Type: javax.net.ssl.KeyManager[]
		Statement: $r8 = virtualinvoke $r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.mcclatchyinteractive.miapp.network.Volley: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
		SHA-256: 6ecc1e4f7897a108f1991d3c718e9e790ac1e8fb297a18cdca988867747a071d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3856)
		Method: <com.mcclatchyinteractive.miapp.network.Volley: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
		SHA-256: d1dc554c7f521114bf0644c91a84d423e7491b9fc28b5b1127cc29d4eadbceef
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer5561)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: b732ba649c9b99ebf79458ca1d749dc6f2292065f4c2ed4288d472530f301dc5
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.logentries.misc.Utils: java.lang.String computeTraceID()>
		SHA-256: 5b4665c6672a152abf8c56945a55ecfb285964a6ebffe287c0c9371002ff24fb
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2852)
		Method: <com.adobe.mobile.RemoteDownload: java.lang.String md5hash(java.lang.String)>
		SHA-256: 39f138927c24a2da521aaee1ebf1174f4240fbe7b414b2410f11a3f2f421b06a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: 381b6c0b08f9bb41c80aaf8352e36b19a0cccefef9ea8096ab27a9d8b595777b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.adobe.mobile.RemoteDownload: java.lang.String md5hash(java.lang.String)>
		SHA-256: b400871c51be3079f17109b43e3f8ff50d0b7741ad987cb73c0d4089463be8a9
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.adobe.mobile.AnalyticsWorker: void <clinit>()>
		SHA-256: 2de2cf26ad51d5ef519d606a7af872a50cb4cb40c6bfbe18ad44b5d767efc275
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: 92352f365af81b6cd93aec5685485ef79e11ee652b7e2f3af45cc5e33bb8d7b9
		Secure: true
	Object:
		Variable: varReplacer5366
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5366)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: 4ff75ce04f43947b6ce3228b496262e9cbe26af3f75fad2fce76838a463f7579
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5367)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: bff60cc60f559cfc03c31a915ed9296948c0922b61a8627fc44d785773cf3486
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10314)
		Method: <com.google.android.a.d: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 9c21b6ea1fd5e004a30ee218db288abc81b243560684c4e2bc5ad3b35b3c60bd
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r12.<java.security.Signature: byte[] sign()>()
		Method: <com.pressplus.android.util.SignatureHelper: java.lang.String createSignature(java.util.ArrayList,java.lang.String,java.lang.String)>
		SHA-256: cdeea7601e3f48d2bcdd20c9541df0407a34e63c6148526ea0fadf7061e75243
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.mcclatchyinteractive.miapp.utils.Helpers: java.lang.String generateMD5(java.lang.String)>
		SHA-256: 110ed53defffb11f19c40528bcd5d9eb3ca4998f4ec69026fe0baf2325334827
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2562)
		Method: <com.logentries.misc.Utils: java.lang.String computeTraceID()>
		SHA-256: a810874420dfade61404c4ef13b5feb171319f3e315e8573b4b65aaa296e402c
		Secure: true
	Object:
		Variable: $r22
		Type: javax.net.ssl.SSLContext
		Statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6879)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: dea06b13330e0aeb0785b6ad027fd9013af64799f1c3b88c7442ca09b9bb1277
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2654)
		Method: <com.logentries.net.LogentriesClient: javax.net.ssl.SSLContext CreateAndInitSSLContext(java.lang.String)>
		SHA-256: 4001d828cd6373e58f84165cf75c6046593e91bb675805b8f647ab8be88770ef
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.Signature
		Statement: $r12 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer587)
		Method: <com.pressplus.android.util.SignatureHelper: java.lang.String createSignature(java.util.ArrayList,java.lang.String,java.lang.String)>
		SHA-256: d5e0bac47453cadcfef920a8b9932243868e810105a0a8bbb3a68baf1685cce9
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: 6e9cd9cf43705a69b8e41411c1e53bb9c2cf16ce8ca5091edda0bb3c71a11f68
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8403)
		Method: <com.mcclatchyinteractive.miapp.utils.Helpers: java.lang.String generateMD5(java.lang.String)>
		SHA-256: 3cfc6cc9d70748a51c7942e0dfad07e5f4704bbfb77625513acb79f742d5963d
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer3858)
		Method: <com.mcclatchyinteractive.miapp.network.Volley: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
		SHA-256: 7ed63a4ed6afbed1aad35c159f7735b110ed936632bcd840ad079975b17df72e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: 45c767ea96312812f59bb8e2ef20e2f02c69406384f892ab3dc1ac39d34a38b5
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5493)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 4ee635282cfa98558acd613b4b60b2406e5ffee0c6d7855fde37b93c34595570
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.a.d: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 36130282a9769b3e8d8e5aeb1f6791c633024fbb45a099798936b62d4e58155a
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5366)
		Method: <com.google.android.a.k: byte[] a(byte[],java.lang.String)>
		SHA-256: b0581320e84c8e7ca823f8d487dd3384eccd998cd5ceb98bd53f17f0598f89a1
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3857)
		Method: <com.mcclatchyinteractive.miapp.network.Volley: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>
		SHA-256: 1edf3f9141b5f15149286ecc95f8fd2ced9b91445da4f78d5bae2f7b4cf49633
		Secure: false

Findings in Java Class: com.mcclatchyinteractive.miapp.network.Volley

	 in Method: javax.net.ssl.SSLSocketFactory getSslSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r8, varReplacer3861, varReplacer3861)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #7ed63a4ed6afbed1aad35c159f7735b110ed936632bcd840ad079975b17df72e)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer3858)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r8, varReplacer3861, varReplacer3861)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, DSS, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4ee635282cfa98558acd613b4b60b2406e5ffee0c6d7855fde37b93c34595570)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5493)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6876, varReplacer6876, varReplacer6876)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6876, varReplacer6876, varReplacer6876)


Findings in Java Class: com.logentries.net.LogentriesClient

	 in Method: javax.net.ssl.SSLContext CreateAndInitSSLContext(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2655, r5, varReplacer2655)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2655, r5, varReplacer2655)


Findings in Java Class: com.pressplus.android.util.SignatureHelper

	 in Method: java.lang.String createSignature(java.util.ArrayList,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r12.<java.security.Signature: void initSign(java.security.PrivateKey)>($r13)


Findings in Java Class: com.google.android.a.k

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer5366)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5368, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 40

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 10
=====================================================================
