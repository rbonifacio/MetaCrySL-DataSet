Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.djigzo.android.application-0EB6E3DDC2FA6C71A568B3DA340730BD0A2944E1A99937ACBD202C424D0B2CEB.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.spec.PBEParameterSpec.PBEParameterSpec( salt iterationCount paramSpec);
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
20:50:17.255 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.cryptocastle.asn1.LimitedInputStream: void setParentEofDetect(boolean)> for class java.io.ByteArrayInputStream
Alive 159166  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r14
		Type: java.security.Key
		Statement: $r6 = interfaceinvoke $r14.<java.security.Key: byte[] getEncoded()>()
		Method: <org.cryptocastle.openssl.MiscPEMGenerator: org.cryptocastle.util.io.pem.PemObject createPemObject(java.lang.Object)>
		SHA-256: 3cdd9bfdeaf3967c8fbdd44ad3922a692ce5c4022dfada561d5220c5d90c7297
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r1, $r3)
		Method: <mitm.common.security.bouncycastle.SecurityFactoryBouncyCastle: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: b907c4bac7e7ece0bfe7add28fb756736017bd98e7be68fdbece8bec1d82137
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.djigzo.android.common.security.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: 87337823ba78b3cd832175897f47461de564d31a83b3ee130b2fa70551711f04
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = interfaceinvoke $r14.<java.security.Key: byte[] getEncoded()>()
		Method: <org.cryptocastle.openssl.MiscPEMGenerator: org.cryptocastle.util.io.pem.PemObject createPemObject(java.lang.Object)>
		SHA-256: c97f8b54a49058fde5655a6dd2250e892ce2fe010e05dff1d895e9af3c23a15
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <org.cryptocastle.openssl.PEMUtilities: byte[] crypt(boolean,java.security.Provider,byte[],char[],java.lang.String,byte[])>
		SHA-256: 2e195856d6c0b5e0a53be659f3e4806503b6c34df9a707fbf3c0e6cc6c9fe76a
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r3, $r0)
		Method: <org.cryptocastle.openssl.PEMUtilities: byte[] crypt(boolean,java.security.Provider,byte[],char[],java.lang.String,byte[])>
		SHA-256: bd8b33537f144d26a25bef22423a446ce5a647d82d628ef02945a5752c4b826c
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <org.cryptocastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[],boolean)>
		SHA-256: b9735cd85965b82e024a16da7d47e4d956060d7f00d343c6bf07052f0eab15bf
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.cryptocastle.openssl.PEMUtilities: byte[] crypt(boolean,java.security.Provider,byte[],char[],java.lang.String,byte[])>
		SHA-256: 7aa23c59e36ea8d7ad95cb4a68d7a67236317356c45a3a89aaee3c9de954840
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <org.cryptocastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[],boolean)>
		SHA-256: f5639335d873c7c4eab11d920ef5d8f584ec6a35303053dd6acf94b8f926cfbb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3917)
		Method: <com.djigzo.android.common.security.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: a4eb99c5b9d0f0a06d7ef93819d45ddd115d2ae36ac4625b012fe2496ed27790
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <mitm.common.security.digest.Digests: byte[] digest(byte[],mitm.common.security.digest.Digest)>
		SHA-256: 8effff0f9cc568aaac066a78dff37051889cac4013c1597b0c5c94a8b062233
		Secure: true

Findings in Java Class: org.cryptocastle.openssl.PEMUtilities

	 in Method: byte[] crypt(boolean,java.security.Provider,byte[],char[],java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($b1, $r9, r20)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key)>($b1, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($b1, $r9, r20)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($b1, $r9, r20)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
=====================================================================
