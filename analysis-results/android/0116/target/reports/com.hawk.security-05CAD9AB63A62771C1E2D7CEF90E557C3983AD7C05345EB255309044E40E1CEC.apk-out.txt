Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.hawk.security-05CAD9AB63A62771C1E2D7CEF90E557C3983AD7C05345EB255309044E40E1CEC.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.tcl.applock.utils.o: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 9b998f2c475f2649e82c0f266a64fa3b35b283ec2806674da72cf484dc93f510
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.utils.d: java.lang.String a(java.lang.String)>
		SHA-256: 1f141351ead3174951128ebad7cdfafdaddaa3673cf12872ec662858de8eacc1
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3011)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: void b(android.content.Context)>
		SHA-256: e5e90afac29a4dae2167e7ce91d9bb6ab790373b25573f66b88d03e5e19d82ce
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3275)
		Method: <com.tcl.security.d.c: com.tcl.security.d.c$a a(android.content.Context,java.lang.String)>
		SHA-256: e6c3898b01c5e3915e09e3c6bfc47bc7d06c9810d86e8f732874dc31661e9412
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2688)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 6428904510e2aeaf45052e0989b01288adb3cc3b5f0d4056b7b13adfffff976b
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11996)
		Method: <com.tcl.security.virusengine.e.c: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: 1a2b3a638534deb80a8e7bd47d4e136de9ae3bc5c20b98783bb23ee94bd90e9d
		Secure: false
	Object:
		Variable: r6
		Type: java.security.SecureRandom
		Statement: specialinvoke r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.applock.module.setting.activity.a.a: void a()>
		SHA-256: d37d3acea74cc3037699fbe8d63677ee3c12a81ea2fcf8482a70f00e58fe121a
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11970)
		Method: <com.tcl.security.utils.d: java.lang.String a(java.lang.String)>
		SHA-256: 7507917ff906f3d9f6130721aa85ecb8cfe2b296fa7d919a450c3fb546847287
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.d.c: com.tcl.security.d.c$a a(android.content.Context,java.lang.String)>
		SHA-256: feba822e34ffde93c220acdcc7c9c9c499dd6b8f86c2e4db851379defff145b6
		Secure: true
	Object:
		Variable: r18
		Type: java.security.SecureRandom
		Statement: specialinvoke r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: 76c60bc2370e144a83dbded7e68cd043b31c086120f0e50891fa41e274e7349c
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.tcl.security.d.b: java.security.KeyStore j()>
		SHA-256: 5d509c4a113f28f7c5b9e82f7e4733bf58d6d851a57c3a6b0da31d3776bc5a52
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.intel.security.vsm.sdk.internal.ac: int[] a()>
		SHA-256: e0d4d980dc58ff92b1449131eb9d61e68fd05581868071d85a2ddf75668387c
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tcl.security.d.l: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 458cce50e50f32d25fbfe7766cd51571598bc303dd1d3b3d42a0d496059e082c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4317)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: 80308d06d49c52fdfc332599cda91f647523514682044d3e3ae96756f9a904d7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11322)
		Method: <com.facebook.a.c: java.lang.String b(java.lang.String)>
		SHA-256: 6576499445a2f1784c5c710a6fd13bdcf5190be9035a10c7c577e6b915fc87c0
		Secure: true
	Object:
		Variable: r18
		Type: java.security.SecureRandom
		Statement: specialinvoke r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: 76c60bc2370e144a83dbded7e68cd043b31c086120f0e50891fa41e274e7349c
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2351)
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: e174e0a55fd337e247903ea09829111b6e8767a010d6551377dfb8a9b50821cb
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: b1346c7cabbe065566ea3a40a9e0c034ff2bc49e4be3b3b07efccc9bbdd9ac5a
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3015)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: void b(android.content.Context)>
		SHA-256: 6ca73f75489a7d7fc04d119b64df4096fbaa709bd71d01ec83df3dc84366420d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7162)
		Method: <com.tcl.applock.module.setting.activity.a.a: void a()>
		SHA-256: 212832591ab64ab7aecebd14406c36d6516918e24e7051cf98a56337e5eef78f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.a.c: java.lang.String b(java.lang.String)>
		SHA-256: 34ba3c9bb7fa93036505409e6f624148d580a4ef39cd6b74abdee3d1e3232629
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.virusengine.e.c: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 1f31181288dcc94b76a37db6a803183f23f027fe92e81955c765afc4e55efbb4
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2715)
		Method: <com.tcl.security.d.h: void <init>(java.security.KeyStore)>
		SHA-256: ada309f91d04bddacaa58e71a0a374e42420a1cd023a65386b034a30966a9631
		Secure: false
	Object:
		Variable: varReplacer4317
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4317)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: a532fc50a8a9c171e432073978fea69fd1ffbfd18120a4e2b907eaec6f8c3441
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tcl.applock.utils.o: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 3a8d0430ef12b42d7541a2e96ee97a209c9ac2cdcfacc835013fceae78da6fa6
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11993)
		Method: <com.tcl.security.virusengine.e.c: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 115133c7146dd881bd95f990cf9ff785e6283c7a2917076f3ad155bc8213cfce
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.KeyGenerator
		Statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3012, varReplacer3013)
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: void b(android.content.Context)>
		SHA-256: 160675f5d32d2268e1258ee4615915ec638ef0ba4ca1da61cbc948158861e7d0
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.intel.security.vsm.sdk.internal.ac: int[] a()>
		SHA-256: 7419207d01a9aceba94f7f712a85550e4222470fd321a50aac3913bcefaaadb2
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2346)
		Method: <com.tcl.security.d.b: void m()>
		SHA-256: a121956e1fec3d197635f087401fc75dbd553e494efa1d26d6d01a8f56ad20a0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.tcl.security.d.l: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 909836b55b17ca5e3de1dec96e69167ea46c29e160f8f76f281c718083694ac1
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3344)
		Method: <com.tcl.security.d.l: java.security.MessageDigest b(java.io.InputStream,java.lang.String,boolean)>
		SHA-256: eac27bcf91c7c3ebb9d36e8b5f0e27ab9218f4df762d41280d5bc930159c2dbe
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tcl.applockpubliclibrary.library.module.fingerprint.b: javax.crypto.SecretKey g()>
		SHA-256: e9c003c00db1956aa85ba2e154cfc5bb86a1557866316db5deda2ee211f5f9c6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tcl.security.d.l: java.lang.String a(java.io.InputStream,java.lang.String,boolean)>
		SHA-256: ce625f85b73310b128d3cacb0190c94fd664f806216dc7889d93011394798ec7
		Secure: true

Findings in Java Class: com.tcl.security.d.b

	 in Method: void m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2348, r22, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2347, r22, $r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ada309f91d04bddacaa58e71a0a374e42420a1cd023a65386b034a30966a9631)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r17.<com.tcl.security.d.h: void <init>(java.security.KeyStore)>(varReplacer2345)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ada309f91d04bddacaa58e71a0a374e42420a1cd023a65386b034a30966a9631)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r17.<com.tcl.security.d.h: void <init>(java.security.KeyStore)>($r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2348, r22, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2347, r22, $r10)


	 in Method: java.security.KeyStore j()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5d509c4a113f28f7c5b9e82f7e4733bf58d6d851a57c3a6b0da31d3776bc5a52)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r1, $r9)


Findings in Java Class: com.tcl.applockpubliclibrary.library.module.fingerprint.b

	 in Method: void b(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #e5e90afac29a4dae2167e7ce91d9bb6ab790373b25573f66b88d03e5e19d82ce)
			First parameter (with value "AndroidKeyStore") should be any of {BKS, PKCS12-DEF, BCPKCS12, PKCS12, BouncyCastle, AndroidCAStore}
			at statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3011)


	 in Method: javax.crypto.SecretKey g()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4317)


Findings in Java Class: com.tcl.security.d.l

	 in Method: java.lang.String a(java.io.InputStream,java.lang.String,boolean)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #eac27bcf91c7c3ebb9d36e8b5f0e27ab9218f4df762d41280d5bc930159c2dbe)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #eac27bcf91c7c3ebb9d36e8b5f0e27ab9218f4df762d41280d5bc930159c2dbe)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = staticinvoke <com.tcl.security.d.l: java.security.MessageDigest b(java.io.InputStream,java.lang.String,boolean)>($r0, varReplacer3326, varReplacer3327)


Findings in Java Class: com.tcl.security.utils.d

	 in Method: java.lang.String a(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #7507917ff906f3d9f6130721aa85ecb8cfe2b296fa7d919a450c3fb546847287)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.tcl.security.virusengine.e.c

	 in Method: java.lang.String a(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1a2b3a638534deb80a8e7bd47d4e136de9ae3bc5c20b98783bb23ee94bd90e9d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte[]), java.security.MessageDigest: void update(byte)
			at statement: virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r8)


Findings in Java Class: com.tcl.applock.utils.o

	 in Method: byte[] a(byte[],java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7180, $r1)


Findings in Java Class: com.tcl.applock.module.setting.activity.a.a

	 in Method: void a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7163, r7, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7163, r7, $r0)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2686, r7, varReplacer2686)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2686, r7, varReplacer2686)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 33

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 1
	ConstraintError: 1
	TypestateError: 2
	RequiredPredicateError: 10
	IncompleteOperationError: 4
=====================================================================
