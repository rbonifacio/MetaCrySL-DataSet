Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.mobidia.android.mdm-0F802C11D3D540575F931B441AB6AC458946DBB261E035E3FABEF5CB02CA4BC0.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKeyFactory
		Statement: $r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2122)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 83d46c7168978a06793153c4296a4c4905ba1ece3f4777e5635b2d6a4ebeef43
		Secure: false
	Object:
		Variable: r9
		Type: java.security.DigestInputStream
		Statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)
		Method: <com.leanplum.FileManager: com.leanplum.j a(java.io.InputStream)>
		SHA-256: 133c6271dfef209c4fe0ca5ec7a66d4f3f6886c0cfadc93cb686d64267a2b169
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.PublicKey
		Statement: $r16 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.d: android.content.Intent a(android.os.Bundle,java.security.KeyPair)>
		SHA-256: c32cf731cc86df07e8311a82df7c055c94014a59b236207d9560fbb6c00d13c7
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 71f25f831938e9eb967e3a3705806f64ed3334ce52b0e926a6edc04a1a175ed
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2118)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 594b63b65878f843c70c04f5f28ac43b4fc196becddba59ae75970cb0d3436b3
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.d: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: f69c5cf6979a6cf50e38f27dd1d1cc1741192cf076a6eaaf9073009bc2a9107e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4780)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String c(java.lang.String)>
		SHA-256: 2e0599cb7fc6064fdb9e008d9960ca0af97d9cbf7f2797941e4860d5bb15349e
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.leanplum.Util: com.leanplum.Util$DeviceIdInfo a(com.leanplum.Leanplum$DeviceIdMode)>
		SHA-256: 73c00de4aabbd1e30b803e43a1424eb449559342e2c534257b933ddf6f8d3d54
		Secure: true
	Object:
		Variable: varReplacer2124
		Type: java.lang.String
		Statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2124)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: e610ee551fbf04a4fce1e2c67dbb4069d0a7a211911eccf1785c1449f30505ef
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4770)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String b(java.lang.String)>
		SHA-256: b5444d01651253183b12e29b57915e2ce98acfe66c366068d5dedb50c3a69a7a
		Secure: true
	Object:
		Variable: varReplacer1756
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer1755, varReplacer1756)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: dfd756e3fc91468d7c36c550ce753aa02e650e9c57f0fbf2b497f672647b9d02
		Secure: false
	Object:
		Variable: varReplacer2120
		Type: int
		Statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2119, varReplacer2120)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: e05984c3e200be77badcced604e0934a9dcda20db41be7ed82052f478a30b9ee
		Secure: false
	Object:
		Variable: r21
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2124)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 2cf77471b217b77b5450e1ca01c164dc6691fe21eac1e031ffe8aeb77d791f08
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: a3d08211d3ba404e6ba4646686ff2b51d3fd8d0e847ca8bb2960c48a82e64856
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PrivateKey
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.d: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: cf2b6911999dfc1b13649759f15d29c7c9209f057091e536b4e744c484308ea5
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1728)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: d93084342fca28316eba7801abb8e7db92d2367f596b63beb526d71ee4fc3ca3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8806)
		Method: <com.b.a.a.j: void <init>(java.security.KeyStore)>
		SHA-256: 2a02949a2be6d8d98bf32b5cdae8a49ae65704747159450d8fd728856e1b9b06
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: db8072afebe4b7e5cf036ef9f5e83e17ea8cf5ec2bda667e613b5015e947f54f
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8795)
		Method: <b.a.a.a.e.d.e: javax.net.ssl.SSLContext a()>
		SHA-256: ba1d1cce9d07f0f65f3880f585d67165c18b4b534d1170692146437241ba0b8f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: a4e4ecffbfa24945c7b9252e6e971a5919b9c0bad5744e4045419497644909c7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer1755, varReplacer1756)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: b082ef4caa8165318c2b2a6fa5ae845acf9bb3b30fba893db923c068a0e49857
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.e: java.security.KeyPair d(java.lang.String)>
		SHA-256: ba8c3bff7867b8051e37c6245c69ff5ac3d84c87fad6658b6d446b5948932f99
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1703)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String d(java.lang.String)>
		SHA-256: 2f6efb85ed5c80b14810770a563a781bfc5d93b45c3e6a4acf68d2b841c1aae5
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.e: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: 1ce24e3d8f0119e534d3b54ae438fc33290bdd425784e6d29169a069644e0c7b
		Secure: true
	Object:
		Variable: r20
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2119, varReplacer2120)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: c1da6e67c8c3be759a89569bb3108d90b6ec279aaecb6979b257dfb26d8b1db0
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1953)
		Method: <com.leanplum.Util: com.leanplum.Util$DeviceIdInfo a(com.leanplum.Leanplum$DeviceIdMode)>
		SHA-256: b8dbced2c8b246c9c2f46f86d7ad4aec32f04ca6bdbed56d79aa02c4f1b2c26d
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String c(java.lang.String)>
		SHA-256: c35d0f8e06dc7b03e9338a2ac24d309418ee41bd8b012583eb87a8f286e6cbe8
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14832)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: e4dca9b374a0572ac00375cbdd590e6c8f592c33e72a33c2da4a69b5d1390c9d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.b.a.a.j: java.security.KeyStore d()>
		SHA-256: a4780aba4306a23ed55bbfc3bf21f50f6e1e2a18c2604c23b61a0cedbbf2f6ca
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.d: java.lang.String a(java.security.KeyPair,java.lang.String[])>
		SHA-256: 241276ba7fbe554c9c7e1038bdc11fbabee2cb00feeec2afeb6ea18d38d3178
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 370c144343593a2f250efa941f352a4014e247d247772ee8513fb5ea08368c0d
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String b(java.lang.String)>
		SHA-256: bb04aa38e54b764a200792b2e223d4054826ef6bf167dcd0c2fab6e0e00bf6a6
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14791)
		Method: <com.leanplum.aU: javax.net.ssl.SSLSocketFactory b(com.leanplum.aU)>
		SHA-256: 3fd42e89a2c22a413bc14bd0286c59a90a19896553b2b2a019506a8c9a7ca022
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1739)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 1fa93911d5f5bacd21b449b4111ce5e3a79fd3b6aed67bb590f63d770019df5a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.a: java.lang.String a(java.security.KeyPair)>
		SHA-256: 6eb9c4882a2bc73af9a673aebf6f5afae49ea2ada522213b217877fced577ed9
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3695)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 7ec9ec17df748acf5d387c9eb810a67355973e72b71d2077fe8e508fcae3d968
		Secure: false
	Object:
		Variable: varReplacer1728
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1728)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 43d4ec1f1d541bcafe966ab278d04e146b28eafb97a2250d732510f6e1c33b36
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.e: java.security.KeyPair a(java.lang.String,long)>
		SHA-256: e3937725b54efa2cdca665505748f1fac90b93798750264f705130372206db70
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <b.a.a.a.e.d.g: void <init>(java.security.KeyStore)>
		SHA-256: eb053316d2b8d7ceb242e95aa16f22b095c017b4428bad20c0adae5d1cac41cf
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer14853)
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: bc857bd08149df4dc7e2e0ccadd40122890dab1e1129971e832710d251f23f06
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1757)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 19740e15f57589393ea867429b7381257ce2e908fd93fe08d8162a9a7dd504a0
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.mobidia.android.mdm.client.common.utils.j: byte[] a(java.lang.String,byte[])>
		SHA-256: 9ecaa33e86e33ff9831c13444b6f49d916db391d3317455582d3c37ae0d36a9c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.mobidia.android.mdm.common.c.y: java.lang.String d(java.lang.String)>
		SHA-256: a47d7bbddfc030a5506065a1b4bf461bc4eb178d9f8603cb0c33f5de55c0cc2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2198)
		Method: <com.leanplum.FileManager: com.leanplum.j a(java.io.InputStream)>
		SHA-256: 9b7998c3557dd7f0e1121192f8e7170cbf5da2a36d56491dae796666a15de165
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9711)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 1b18110367c617b54a01ec90fc42f94b14f6724d29b90a8d5dc70772c1d0c944
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.b: java.security.KeyPair a()>
		SHA-256: 7783709ffb59212b53ecfaa3646ac9e01977d69d48097298577a30772a4d8880
		Secure: true
	Object:
		Variable: r22
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.leanplum.a: byte[] a(int,java.lang.String,byte[])>
		SHA-256: 9de94fb3b8b644281a93e70f5ced5a864e7605e93cd7ead74732dcaed3d32d5f
		Secure: false

Findings in Java Class: com.mobidia.android.mdm.client.common.utils.j

	 in Method: byte[] a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1728)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b082ef4caa8165318c2b2a6fa5ae845acf9bb3b30fba893db923c068a0e49857)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer1755, varReplacer1756)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b082ef4caa8165318c2b2a6fa5ae845acf9bb3b30fba893db923c068a0e49857)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer1755, varReplacer1756)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b082ef4caa8165318c2b2a6fa5ae845acf9bb3b30fba893db923c068a0e49857)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer1755, varReplacer1756)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1740, $r6, $r9)


Findings in Java Class: com.leanplum.a

	 in Method: byte[] a(int,java.lang.String,byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #c1da6e67c8c3be759a89569bb3108d90b6ec279aaecb6979b257dfb26d8b1db0)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2119, varReplacer2120)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #c1da6e67c8c3be759a89569bb3108d90b6ec279aaecb6979b257dfb26d8b1db0)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2119, varReplacer2120)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2124)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2119, varReplacer2120)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r9, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #c1da6e67c8c3be759a89569bb3108d90b6ec279aaecb6979b257dfb26d8b1db0)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke r20.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r3, varReplacer2119, varReplacer2120)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.leanplum.FileManager

	 in Method: com.leanplum.j a(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #9b7998c3557dd7f0e1121192f8e7170cbf5da2a36d56491dae796666a15de165)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #133c6271dfef209c4fe0ca5ec7a66d4f3f6886c0cfadc93cb686d64267a2b169)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: specialinvoke r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r12, $r1)


Findings in Java Class: com.google.android.gms.iid.d

	 in Method: java.lang.String a(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #f69c5cf6979a6cf50e38f27dd1d1cc1741192cf076a6eaaf9073009bc2a9107e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, DSS, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.b.a.a.j

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8807, r5, varReplacer8807)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8807, r5, varReplacer8807)


Findings in Java Class: b.a.a.a.e.d.e

	 in Method: javax.net.ssl.SSLContext a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8796, varReplacer8796, varReplacer8796)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8796, varReplacer8796, varReplacer8796)


Findings in Java Class: com.leanplum.aU

	 in Method: javax.net.ssl.SSLSocketFactory b(com.leanplum.aU)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14792, varReplacer14792, varReplacer14792)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14792, varReplacer14792, varReplacer14792)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3696, varReplacer3696, varReplacer3696)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3696, varReplacer3696, varReplacer3696)


Findings in Java Class: b.a.a.a.e.d.g

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r9, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r9, $r10)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 48

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 3
	ConstraintError: 3
	NeverTypeOfError: 2
	TypestateError: 1
	RequiredPredicateError: 20
=====================================================================
