Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/com.qihoo.batterysaverplus-01CA9664A7D3CEFB9D3A886437D9E23C17BDEFB242F5AF570F12B08A5DF35CC4.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(byte[])>
		SHA-256: 7ceffe7e0ebee737e05d4dfa906544227243b0af7631483252a0e81a978e83f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2791)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 678f105e6bfd9892f327549f19f6d6073561fd845e0203c84c472871700b6bae
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11823)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: 3688a35db51db28638850e1e28c0205150653317b7841444e993f052c8035096
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1615)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[])>
		SHA-256: 4e0c38c2676734709d67b0c51ded123ff148e9974fa8989c8ef1d21f2effdaeb
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13125)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 4257a9fd44b5a2e94d0849d8fdc3dc356eff9e58a7c2449a3f67cae92fad799a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 19eff7b194043eafc9ebfc4e805f6473d9e820d5718eb3a8e65b28ab6d9076f6
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13123)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 48cfdcad0cf8ac6970e4f7bc9e56dc386cdaf3125b5b8212ee56fc3d56001be8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4847)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: b6d92c289c9452aa618af193f69f4e1fa18f13c00927039a6fb5bb8432c4b968
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: ad19a603e89360657fd031ecd3a9b509e8b25fed8dc69952eef89a447965eed4
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: 6a82edd009dbef89565a62019fdff9802d1a7891520c5664e3c386e964bd3f6a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: 412bf4ed61073de9a0ffc866fcb699e1cc15ef84b8208e61e319c37dd5caa685
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4849)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: 5d224a6e4e1e8c1972ff76d3cd36b41c4bbb0beefa7f42a2ce4db55a3a07f533
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 96b0a650ef43bded912c68964b86200055fcfccb9046288b0f21ec0e69f08a5d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4857)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: cbf4ea539243770aaa2d276c125b7a284ea4f59eba15e6e6a62a5b934882bdaa
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11826)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: 91a838539711fd7f3eb1fe596e3bcfcec0a1fed9261cf2331e2863c815840fa1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7778)
		Method: <com.facebook.ads.internal.util.u: java.lang.String a(java.lang.String)>
		SHA-256: a360efeae28ec05e1ababf6795e17555acf9514de62b382148cc5bcc1b623338
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11828)
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(byte[])>
		SHA-256: 2bbd19be1e03d7cb1ad9750905d5465d23a6a72be3d7302971f1100f9cbb21a1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: e116332ddaea05e611e5483f42ad792ce6620b7fe82169f4a41b79d95d0b9ac7
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4856)
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: 4d02414c4894c408ea164d4091529d0db9b41abeb3292245748e2da57bfe6ee3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_encrypt(java.lang.String,java.lang.String)>
		SHA-256: 15d150e79c5e7661dbb05a65575bbd7ee200f49ab8c8aa54c98825dff5f98f83
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7884)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: adc3cb4ddfb63ecd33b3cc7070fc9b793caed31ecfc4a42a4460c501357afdf2
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(java.io.File)>
		SHA-256: db3e17543f0789a228b2676213a3199c7a5a1129dd70696cbea660ff60f88de8
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[],byte[])>
		SHA-256: f553b48a635029790275912b97d0aacc6da60ddbca420931ab14baf838d2e16c
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcv(java.lang.String)>
		SHA-256: 635d2d0bad81cfe7a34ecffc927df94b3302c4a29f5c25cffef87aeb06b2d36c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: f605ba6ccea829a846cc3cf5825300efbe6a39adf07ce6c8c48264a265559476
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 8308cc419a228b856ecf812f4a1bcec969318612ae2f3894f4977a38456c2fd4
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16048)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: 17d737c5751458b5fc3e45d270a7590372159d033967e1be2c84ee3b514dce8a
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: f4d66bad6a363c501179b1552749fa14392ef460d7363b0cacd66e5e6f9938f6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16291)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcv(java.lang.String)>
		SHA-256: 838f345c202a61e6bd1a93816ccfc6da562fb44fc0e299c49d1824a9342a5d13
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: 8880a047bf40bc5dec0b3df722fd05892da6ae419d327eaa3640e62fa041fb71
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobimagic.adv.f.b.c: byte[] b(byte[])>
		SHA-256: 8481fe3b5e6de86da061cf99a70d8814be7085ee5a243c155a2413aaa4fc3dba
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5883)
		Method: <com.qihoo360.common.utils.SecurityUtil: byte[] MD5(java.io.File)>
		SHA-256: 92759274eff72b7dafdec050537c69af33a0ede0a22c49d12adb74c7c6046186
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: 94ebb5ffe8464dbb08b442cf756593c1e52a3ad4b9217926b8950cc1b0f05547
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.mobimagic.adv.f.b.c: byte[] a(byte[],byte[])>
		SHA-256: fd9ba5f66eab81a4f810b7f77ee34936e2a6caa5b54e1ab6cdfcff24284ab1d4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.qihoo360.common.utils.SecurityUtil: java.lang.String DES_decrypt(java.lang.String,java.lang.String)>
		SHA-256: bb65d23197ce4f3d2dadabc31a685fffd222ed3b28775800a42f22cd2e296f56
		Secure: false

Findings in Java Class: com.mobimagic.adv.f.b.c

	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5d224a6e4e1e8c1972ff76d3cd36b41c4bbb0beefa7f42a2ce4db55a3a07f533)
			First parameter (with value "DES") should be any of {ARC4, TDEA, AES, BLOWFISH, RC4, RSA, ARCFOUR, DESEDE}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4849)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #b6d92c289c9452aa618af193f69f4e1fa18f13c00927039a6fb5bb8432c4b968)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAANDTWOFISH-CBC	, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithSHAAND40BITRC4, PBEwithMD5ANDDES, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4847)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer4848, $r5, $r2)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer4858, $r5, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4d02414c4894c408ea164d4091529d0db9b41abeb3292245748e2da57bfe6ee3)
			First parameter (with value "DES") should be any of {ARC4, TDEA, AES, BLOWFISH, RC4, RSA, ARCFOUR, DESEDE}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4856)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #cbf4ea539243770aaa2d276c125b7a284ea4f59eba15e6e6a62a5b934882bdaa)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAANDTWOFISH-CBC	, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithSHAAND40BITRC4, PBEwithMD5ANDDES, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4857)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


Findings in Java Class: com.qihoo360.common.utils.SecurityUtil

	 in Method: byte[] MD5(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #92759274eff72b7dafdec050537c69af33a0ede0a22c49d12adb74c7c6046186)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.lang.String DES_decrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #91a838539711fd7f3eb1fe596e3bcfcec0a1fed9261cf2331e2863c815840fa1)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAANDTWOFISH-CBC	, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithSHAAND40BITRC4, PBEwithMD5ANDDES, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11826)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3688a35db51db28638850e1e28c0205150653317b7841444e993f052c8035096)
			First parameter (with value "DES") should be any of {ARC4, TDEA, AES, BLOWFISH, RC4, RSA, ARCFOUR, DESEDE}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11823)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer11824, $r6, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


	 in Method: byte[] MD5(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2bbd19be1e03d7cb1ad9750905d5465d23a6a72be3d7302971f1100f9cbb21a1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2bbd19be1e03d7cb1ad9750905d5465d23a6a72be3d7302971f1100f9cbb21a1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11828)


	 in Method: java.lang.String DES_encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #48cfdcad0cf8ac6970e4f7bc9e56dc386cdaf3125b5b8212ee56fc3d56001be8)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithSHAANDTWOFISH-CBC	, PBEwithSHAAND192BITAES-CBC-BC, DESede, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithSHAAND40BITRC4, PBEwithMD5ANDDES, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, PBEwithMD5ANDRC2, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer13123)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4257a9fd44b5a2e94d0849d8fdc3dc356eff9e58a7c2449a3f67cae92fad799a)
			First parameter (with value "DES") should be any of {ARC4, TDEA, AES, BLOWFISH, RC4, RSA, ARCFOUR, DESEDE}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13125)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer13126, $r6, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 37

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	IncompleteOperationError: 2
	RequiredPredicateError: 8
	ConstraintError: 8
=====================================================================
