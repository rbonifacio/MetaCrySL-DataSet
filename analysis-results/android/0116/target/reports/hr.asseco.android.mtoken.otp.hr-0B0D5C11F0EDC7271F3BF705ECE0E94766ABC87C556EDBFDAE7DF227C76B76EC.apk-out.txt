Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/hr.asseco.android.mtoken.otp.hr-0B0D5C11F0EDC7271F3BF705ECE0E94766ABC87C556EDBFDAE7DF227C76B76EC.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer842)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 535a5486ae104e4c6ec211e09b7c86fc3e16101da9b6b57521a056da014d1ca4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer843)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 9621b9eafeac95d9f75383f1dca4a8662b2e02145bb4e5326aef429dc97e24e4
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.SecureRandom
		Statement: specialinvoke $r12.<java.security.SecureRandom: void <init>()>()
		Method: <hr.asseco.android.widget.VirtualKeypad: void a(android.content.Context,android.util.AttributeSet)>
		SHA-256: c9dbcb02a9ec05e322e3bb614bf2579eb318ab0c5dc545b6b89d942164fd66d6
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer764)
		Method: <hr.asseco.android.b.a: byte[] a(java.lang.String)>
		SHA-256: cd5cba441672d283c6456c0d652a52926ebd612a77b3345890163cca63b289e2
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer929)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: 51b72d3627faa7f542e7a9b502f8cb4ad59207b89e2e79e129eb133d89de6121
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.Mac
		Statement: $r15 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer793)
		Method: <hr.asseco.android.b.e: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)>
		SHA-256: 7da012cd536da8347f7c94f00c2911b2ab0be2e86cbde6068ceaee78e008762f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer928)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: 23f29d9610573a850e5b6af89ac1f6286df2b555ef99c868011560ac89e190e3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <hr.asseco.android.b.a: byte[] a(java.lang.String)>
		SHA-256: 429798205c2c83583d727c70683157d1a7176cd097489fb4eae5c3e713da1e13
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 5bdbdb75baa4a128c22a5bacd7160c61bbe95aa2bd156eea54c222926388fba8
		Secure: false
	Object:
		Variable: varReplacer831
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer831)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 95027fbdbe88bfa2c6b51bbef4b34c92648b913f4e1ba748d1113b7870a4ba2d
		Secure: false
	Object:
		Variable: varReplacer790
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer790)
		Method: <hr.asseco.android.b.e: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)>
		SHA-256: ea719ede2072c2d2a9e93a5563f3fdac69851ae4604983a0c39e7e7caaea15a0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 1fdf7781dc03f3f5a575c7b28ca01f300b447dd9d76d61579b5d755379552e8b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 12698abc5636dc09553223a5d415a46844cc1e3c646dde0e598d0706b893c241
		Secure: false
	Object:
		Variable: varReplacer843
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer843)
		Method: <hr.asseco.android.b.a: byte[] a(byte[],byte[],boolean)>
		SHA-256: 76d2603b4d10935842c61dcf4d5df5f719e0b25a8c74c5a190c23e317bf57bdd
		Secure: false
	Object:
		Variable: varReplacer928
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer928)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: 97cdd9a105609ddb5db34f3ee900f1eed3cc4f1302b3dc839cd4c490a34018bb
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: a0918651345c7d9dbf15c518fc4924bb7186af610327daff3ad01e18bb9f1db5
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer831)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: eaed45f93a10e5461015c02a0984d7a956ed40e0b0d61768c95a8f445dd298f1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <hr.asseco.android.f.a.a: byte[] a(java.lang.String,byte[],byte[])>
		SHA-256: 8495826414f22a1542ef7715924f9205effd2953ef2da58beab0c21efe9c6fe3
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer772)
		Method: <hr.asseco.android.b.a: void <clinit>()>
		SHA-256: cf6805334183692564861f36f4f568a5c5901394d30da1b2ecd9837a91847036
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r3, varReplacer802)
		Method: <hr.asseco.android.b.d: void a(javax.crypto.Mac,byte[],int,byte[],int)>
		SHA-256: d3cb42d61785b8ac4c702c009e5fa58ad4106c93b56ac4c5666d0c9740788bd5
		Secure: true
	Object:
		Variable: r2
		Type: java.security.SecureRandom
		Statement: specialinvoke r2.<java.security.SecureRandom: void <init>()>()
		Method: <hr.asseco.android.b.a: void <clinit>()>
		SHA-256: a37e557d26f41a4216c88dc939bc6e152fefd3fd18e7f8e44deec71319de936c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer790)
		Method: <hr.asseco.android.b.e: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)>
		SHA-256: eea2bff5a267e8981a07428ed872a1f000767bb792a1621180e1ece4d9e6ab1f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer832)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 1dac80923326f79420b39137dff7918d8fac3413eef43bbcf1dc1caa9ebaff70
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <hr.asseco.android.b.a: byte[] b(byte[],byte[],boolean)>
		SHA-256: 5dc4340a2d1f046ff68210161494585e9dc00657d085bf63f64e27638a8df59a
		Secure: false

Findings in Java Class: hr.asseco.android.b.d

	 in Method: void a(javax.crypto.Mac,byte[],int,byte[],int)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #7da012cd536da8347f7c94f00c2911b2ab0be2e86cbde6068ceaee78e008762f)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #7da012cd536da8347f7c94f00c2911b2ab0be2e86cbde6068ceaee78e008762f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i3 = virtualinvoke $r0.<javax.crypto.Mac: int getMacLength()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #7da012cd536da8347f7c94f00c2911b2ab0be2e86cbde6068ceaee78e008762f)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>($r3)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Mac
			Constraint length(output1) + 0 > outOffset + 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>($r3, varReplacer803)


Findings in Java Class: hr.asseco.android.b.e

	 in Method: byte[] a(hr.asseco.android.utils.d,java.lang.String,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #7da012cd536da8347f7c94f00c2911b2ab0be2e86cbde6068ceaee78e008762f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: staticinvoke <hr.asseco.android.b.d: void a(javax.crypto.Mac,byte[],int,byte[],int)>($r15, $r13, $i1, $r16, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer790)


Findings in Java Class: hr.asseco.android.b.a

	 in Method: byte[] a(byte[],byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer844, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer843)


	 in Method: byte[] b(byte[],byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer831)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer833, $r3)


Findings in Java Class: hr.asseco.android.f.a.a

	 in Method: byte[] a(java.lang.String,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer928)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 24

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 6
	TypestateError: 2
	ImpreciseValueExtractionError: 1
=====================================================================
