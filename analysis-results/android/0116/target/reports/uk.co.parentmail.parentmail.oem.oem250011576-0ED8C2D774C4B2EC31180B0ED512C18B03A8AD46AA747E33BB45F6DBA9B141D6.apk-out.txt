Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/uk.co.parentmail.parentmail.oem.oem250011576-0ED8C2D774C4B2EC31180B0ED512C18B03A8AD46AA747E33BB45F6DBA9B141D6.apk
Warning: Couldn't find any method for CryptSLMethod: java.security.SecureRandom.getInstanceStrong();
Warning: Couldn't find any method for CryptSLMethod: javax.crypto.SecretKey.destroy();
13:41:33.568 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:33.631 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:33.657 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:33.714 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:33.718 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:33.803 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:33.804 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:33.804 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:33.833 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:33.836 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:34.089 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:34.182 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:34.324 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:34.385 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl
13:41:34.547 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:41:34.548 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:41:34.549 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:41:34.835 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:41:34.873 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl
13:41:35.991 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:41:36.007 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:41:36.007 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:41:36.009 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:41:36.650 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
13:41:36.652 [main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.gson.internal.$Gson$Types$WildcardTypeImpl
Alive 20107  5000
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3396)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: 31376810cab3e1059a3175f2a4fe7b2cc94b817ddf8178d32e48bec7764e5a47
		Secure: false
	Object:
		Variable: varReplacer3395
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer3395)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: df91148f439c99f6c9aa933f4c78ee39e43ce128110a34c4e68ab5a3190a3b1d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3420)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$PrngFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: 7c0447d377f980c29d3e6c2d3026896380555fa11ca3707c25a21e301e65d817
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzyy()>
		SHA-256: 747cd7a5f455355ff0fe5f8014ce696ade9b9ee6cb3a69db753af9edf316dde6
		Secure: true
	Object:
		Variable: varReplacer3398
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r1, varReplacer3397, varReplacer3398)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: 81f260fa24fc3882694559e5f52f31d93b076e3c19f4bba67c29e91301390ada
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3394)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: 6087dbfda0538d3a133c9e61e04f50f8ca50c76bf09193e0e19db6cc45e13942
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3393)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: byte[] decrypt(uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$CipherTextIvMac,uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys)>
		SHA-256: 6061a971f6e4dcd873127239323dbc72df38c2e4db91bd76088b22a4cb01c133
		Secure: false
	Object:
		Variable: varReplacer3394
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3394)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: 4cd3ef8bbe9312b75de565e7f26d3e209314ddf1d1114c2ec5fdc610cc68ba01
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: byte[] decrypt(uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$CipherTextIvMac,uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys)>
		SHA-256: 197fe427bb47c7000549fc2bae1257af55f252f1907d92d197d440873bb7d19d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4422)
		Method: <uk.co.parentmail.parentmail.data.realtime.fayeclient.WebSocketClient: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()>
		SHA-256: a9a6e386cb56a92e84273649422fc685efc44ce28fb9c680aaa87f8952deee33
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: byte[] generateMac(byte[],javax.crypto.SecretKey)>
		SHA-256: c6dc4131ca13a700f69eebff9cf4d4cbd1f442867ec8377fecf98f1bef3306a4
		Secure: true
	Object:
		Variable: varReplacer1026
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1026)
		Method: <uk.co.parentmail.parentmail.utils.SharedPrefUtils: javax.crypto.SecretKey getSecretKey()>
		SHA-256: cf13e5e4a740d28f490fd7d8f6431237e191c0cfc1b0c37973ead12eb5c7ce5d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <uk.co.parentmail.parentmail.utils.SharedPrefUtils: java.lang.String getEncryptedStringv2(java.lang.String)>
		SHA-256: 89ecb0040c3b0de99802b96a34a48cb231994ee1e8b76213e700428ae6daffb7
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 9b8a78d9edc971be91147cb909e582cf4e5d47ad532216cffc3f02042f047f00
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r1, varReplacer3397, varReplacer3398)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: d6bef2a8d7f9053369dca660930c30afb02054ee677258690b524cc360826a4e
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzd(java.lang.String,long)>
		SHA-256: 2abb37024bd464fc0c2ccf69b2ceddf0aedb43bffcb4711b7b94cf28f4b552ea
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzeg(java.lang.String)>
		SHA-256: ed4e9ddb7251b0e54551b6573d9e727c02047817b95d6673a730facf000f7796
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: 42a74b6a74bc1c37db7c1b9ab31919ca7b3a5f564f4d1bce3cde98113f1cf4bb
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3373)
		Method: <uk.co.parentmail.parentmail.utils.SharedPrefUtils: java.lang.String getEncryptedStringv2(java.lang.String)>
		SHA-256: f54380d4d6680c943949f23d82fab6dd81085363a905abc03c825114d6b49108
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4427)
		Method: <uk.co.parentmail.parentmail.data.realtime.fayeclient.WebSocketClient: java.lang.String expectedKey(java.lang.String)>
		SHA-256: bc21024bfc0f1c08676da0ee973ec43f3674b0c4b4956ca37459e032c6dcdcf2
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: byte[] decrypt(uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$CipherTextIvMac,uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys)>
		SHA-256: 36da9e361da26f0f9650bfcbd38588efc7fa4e7a5a1d92c4a966ccf918fc9e45
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer3395)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])>
		SHA-256: f8bcabc2f07de8174159259be8c5d4a994eb874a45daa5136e2786467c97a012
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3406)
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity: byte[] generateMac(byte[],javax.crypto.SecretKey)>
		SHA-256: 928f07cb5beec3bc590b2b6f15ea9a7473a91e2d5ca19bcb90430254e6fda0e
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8)
		Method: <uk.co.parentmail.parentmail.utils.SharedPrefUtils: void putEncryptedStringv2(android.content.SharedPreferences$Editor,java.lang.String,java.lang.String)>
		SHA-256: f76720784ca4e27ba109cbed2fa2bf33d7d65c50303fa4e33bab3bff8bf539da
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer267)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 546122106b12e611f0961390e0a61ad3b1be0511a595f96f587282cd23eab43e
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1026)
		Method: <uk.co.parentmail.parentmail.utils.SharedPrefUtils: javax.crypto.SecretKey getSecretKey()>
		SHA-256: b09d523e992abb782ba7156ac646078d34f8efeb53118d9809231b5be886029a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1021)
		Method: <uk.co.parentmail.parentmail.utils.SharedPrefUtils: void putEncryptedStringv2(android.content.SharedPreferences$Editor,java.lang.String,java.lang.String)>
		SHA-256: a107fd6372df4a6fc97dfb343f01580f0dc3cfd0584e8b8d7415fe213fe10e0c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$PrngFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: df95c04ed76fe7565b426c50cde38eab25e76095c32672d02ac4cc89c29ba677
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <uk.co.parentmail.parentmail.data.realtime.fayeclient.WebSocketClient: java.lang.String expectedKey(java.lang.String)>
		SHA-256: b4a878c08656410c691600f0f114148b0bdf40545f9779a2aed1a8f55dc7ede1
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer332)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzyy()>
		SHA-256: 9fec886b721387d092368cb8b20ea9ee9592d77fa2ad1515fd166228441eb10c
		Secure: true

Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA256withDSA, NONEwithDSA, SHA256withRSA, DSA, SHA512withRSA, SHA384withRSA, MD5withRSA/ISO9796-2, SHA1withRSA, DSS, MD4withRSA, MD5withRSA, DSAwithSHA1}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #546122106b12e611f0961390e0a61ad3b1be0511a595f96f587282cd23eab43e)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer267)


Findings in Java Class: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity

	 in Method: uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys generateKeyFromPassword(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r1, varReplacer3397, varReplacer3398)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #d6bef2a8d7f9053369dca660930c30afb02054ee677258690b524cc360826a4e)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r1, varReplacer3397, varReplacer3398)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer3395)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer3394)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #d6bef2a8d7f9053369dca660930c30afb02054ee677258690b524cc360826a4e)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)


	 in Method: byte[] decrypt(uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$CipherTextIvMac,uk.co.parentmail.parentmail.utils.AesCbcWithIntegrity$SecretKeys)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3391, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


Findings in Java Class: uk.co.parentmail.parentmail.utils.SharedPrefUtils

	 in Method: java.lang.String getEncryptedStringv2(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3372, $r5)


	 in Method: javax.crypto.SecretKey getSecretKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1026)


	 in Method: void putEncryptedStringv2(android.content.SharedPreferences$Editor,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1020, $r7)


Findings in Java Class: uk.co.parentmail.parentmail.data.realtime.fayeclient.WebSocketClient

	 in Method: javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4423, $r2, varReplacer4423)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4423, $r2, varReplacer4423)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 33

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 1
	RequiredPredicateError: 12
	ConstraintError: 2
	IncompleteOperationError: 1
=====================================================================
