Analyzing /home/amluis/cryptoAnalysis/AndroidZooApps/zl.puzzle.riveriq-131589709924DEDFC0229F41FFB08AF78ABA864267FCBF40BCAD1B5751C4531E.apk
Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1075)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: 7b12ba7e0c185c97d6ae0b7535045734e505849cacb45edb77290ba4c72965a9
		Secure: false
	Object:
		Variable: varReplacer1076
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1076)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: ced3ffa95dcfe06905c2ff915337e23435dfbf69db1466e54abd65376b8bcf91
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: 30b33fd86b0c6401f0b47d87bc31866d28cf4bf59650064c4c74b86b18f06a0a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer1078, varReplacer1079)
		Method: <com.sdkbox.plugin.NoOne: byte[] getRawKey(byte[])>
		SHA-256: e4e9113a1ddce597782bee978e713f3ad880c082ed485390462bc961019cce6
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: fde6df88f7ba87919954e76cdbba3daa48cae17f38ddf0d5a7eaf93ce84f86d5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.sdkbox.plugin.NoOne: byte[] getRawKey(byte[])>
		SHA-256: c64343a3d3281b07f736d4084bab6a136191e9aa1c5b26ebd6d7234bebefca61
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1076)
		Method: <com.sdkbox.plugin.NoOne: byte[] decrypt(byte[],byte[])>
		SHA-256: 3cdf5189e4723045d569ce712141eea9a5ec2499283d01de07aca3b8a69f8564
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1080)
		Method: <com.sdkbox.plugin.NoOne: byte[] getRawKey(byte[])>
		SHA-256: cf83fd2bae103f10029513d78943c358c11a68be98c0afe8d999bbdbffc70695
		Secure: false

Findings in Java Class: com.sdkbox.plugin.NoOne

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1076)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7b12ba7e0c185c97d6ae0b7535045734e505849cacb45edb77290ba4c72965a9)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1075)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1074, $r2)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer1081, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 3
=====================================================================
