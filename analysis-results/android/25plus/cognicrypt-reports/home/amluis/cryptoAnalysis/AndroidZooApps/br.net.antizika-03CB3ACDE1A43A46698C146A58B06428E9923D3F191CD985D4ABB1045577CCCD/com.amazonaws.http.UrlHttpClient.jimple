public class com.amazonaws.http.UrlHttpClient extends java.lang.Object implements com.amazonaws.http.HttpClient
{
    private static final java.lang.String TAG;
    private static final org.apache.commons.logging.Log log;
    private final com.amazonaws.ClientConfiguration config;
    private javax.net.ssl.SSLContext sc;

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        nop;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lcom/amazonaws/http/UrlHttpClient;");

        <com.amazonaws.http.UrlHttpClient: org.apache.commons.logging.Log log> = $r0;

        return;
    }

    public void <init>(com.amazonaws.ClientConfiguration)
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.ClientConfiguration $r1;
        null_type varReplacer1461;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.ClientConfiguration;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer1461 = null;

        $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc> = varReplacer1461;

        $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config> = $r1;

        return;
    }

    private void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)
    {
        com.amazonaws.http.UrlHttpClient $r0;
        javax.net.ssl.HttpsURLConnection $r1;
        javax.net.ssl.TrustManager[] $r2;
        java.lang.Throwable $r3;
        javax.net.ssl.SSLContext $r4;
        com.amazonaws.ClientConfiguration $r5;
        javax.net.ssl.TrustManager $r6;
        javax.net.ssl.SSLSocketFactory $r7;
        java.lang.RuntimeException $r8;
        null_type varReplacer3113, varReplacer3114;
        java.lang.String varReplacer3115;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: javax.net.ssl.HttpsURLConnection;

        $r4 = $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc>;

        if $r4 != null goto label4;

        $r2 = newarray (javax.net.ssl.TrustManager)[1];

        $r5 = $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config>;

        $r6 = virtualinvoke $r5.<com.amazonaws.ClientConfiguration: javax.net.ssl.TrustManager getTrustManager()>();

        $r2[0] = $r6;

     label1:
        varReplacer3115 = "TLS";

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3115);

     label2:
        $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc> = $r4;

        $r4 = $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc>;

     label3:
        varReplacer3113 = null;

        varReplacer3114 = null;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3113, $r2, varReplacer3113);

     label4:
        $r4 = $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc>;

        $r7 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r7);

        return;

     label5:
        $r3 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r8;

        catch java.security.GeneralSecurityException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label5;
    }

    private void write(java.io.InputStream, java.io.OutputStream, com.amazonaws.http.UrlHttpClient$CurlBuilder, java.nio.ByteBuffer) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;
        com.amazonaws.http.UrlHttpClient$CurlBuilder $r3;
        java.nio.ByteBuffer $r4;
        byte[] $r5;
        java.lang.Throwable $r6;
        int $i0, varReplacer3110, varReplacer3111, varReplacer3112;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 := @parameter2: com.amazonaws.http.UrlHttpClient$CurlBuilder;

        $r4 := @parameter3: java.nio.ByteBuffer;

        $r5 = newarray (byte)[8192];

     label1:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r5);

        if $i0 == -1 goto label5;

        if $r4 == null goto label3;

     label2:
        varReplacer3112 = 0;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r5, varReplacer3112, $i0);

     label3:
        varReplacer3110 = 0;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r5, varReplacer3110, $i0);

        goto label1;

     label4:
        $r6 := @caughtexception;

        varReplacer3111 = 1;

        virtualinvoke $r3.<com.amazonaws.http.UrlHttpClient$CurlBuilder: com.amazonaws.http.UrlHttpClient$CurlBuilder setContentOverflow(boolean)>(varReplacer3111);

        goto label3;

     label5:
        return;

        catch java.nio.BufferOverflowException from label2 to label3 with label4;
    }

    java.net.HttpURLConnection applyHeadersAndMethod(com.amazonaws.http.HttpRequest, java.net.HttpURLConnection) throws java.net.ProtocolException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.HttpURLConnection $r2;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 := @parameter1: java.net.HttpURLConnection;

        $r2 = virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: java.net.HttpURLConnection applyHeadersAndMethod(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection,com.amazonaws.http.UrlHttpClient$CurlBuilder)>($r1, $r2, null);

        return $r2;
    }

    java.net.HttpURLConnection applyHeadersAndMethod(com.amazonaws.http.HttpRequest, java.net.HttpURLConnection, com.amazonaws.http.UrlHttpClient$CurlBuilder) throws java.net.ProtocolException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.HttpURLConnection $r2;
        com.amazonaws.http.UrlHttpClient$CurlBuilder $r3;
        java.util.Map $r4;
        boolean $z0;
        java.util.Set $r5;
        java.util.Iterator $r6;
        java.lang.Object $r7;
        java.util.Map$Entry $r8;
        java.lang.String $r9, $r10, varReplacer3099, varReplacer3100, varReplacer3101;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 := @parameter1: java.net.HttpURLConnection;

        $r3 := @parameter2: com.amazonaws.http.UrlHttpClient$CurlBuilder;

        $r4 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.util.Map getHeaders()>();

        if $r4 == null goto label4;

        $r4 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.util.Map getHeaders()>();

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.util.Map getHeaders()>();

        virtualinvoke $r3.<com.amazonaws.http.UrlHttpClient$CurlBuilder: com.amazonaws.http.UrlHttpClient$CurlBuilder setHeaders(java.util.Map)>($r4);

     label1:
        $r4 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.util.Map getHeaders()>();

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r7;

        varReplacer3101 = "Content-Length";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3101);

        if $z0 != 0 goto label2;

        varReplacer3099 = "Host";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3099);

        if $z0 != 0 goto label2;

        varReplacer3100 = "Expect";

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3100);

        if $z0 == 0 goto label3;

     label3:
        $r7 = interfaceinvoke $r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r7;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r9, $r10);

        goto label2;

     label4:
        $r9 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.lang.String getMethod()>();

        virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r9);

        if $r3 == null goto label5;

        virtualinvoke $r3.<com.amazonaws.http.UrlHttpClient$CurlBuilder: com.amazonaws.http.UrlHttpClient$CurlBuilder setMethod(java.lang.String)>($r9);

     label5:
        return $r2;
    }

    void configureConnection(com.amazonaws.http.HttpRequest, java.net.HttpURLConnection)
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.HttpURLConnection $r2;
        com.amazonaws.ClientConfiguration $r3;
        int $i0, varReplacer3096, varReplacer3097, varReplacer3098;
        boolean $z0;
        javax.net.ssl.HttpsURLConnection $r4;
        javax.net.ssl.TrustManager $r5;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 := @parameter1: java.net.HttpURLConnection;

        $r3 = $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config>;

        $i0 = virtualinvoke $r3.<com.amazonaws.ClientConfiguration: int getConnectionTimeout()>();

        virtualinvoke $r2.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        $r3 = $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config>;

        $i0 = virtualinvoke $r3.<com.amazonaws.ClientConfiguration: int getSocketTimeout()>();

        virtualinvoke $r2.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        varReplacer3098 = 0;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(varReplacer3098);

        varReplacer3096 = 0;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setUseCaches(boolean)>(varReplacer3096);

        $z0 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: boolean isStreaming()>();

        if $z0 == 0 goto label1;

        varReplacer3097 = 0;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(varReplacer3097);

     label1:
        $z0 = $r2 instanceof javax.net.ssl.HttpsURLConnection;

        if $z0 == 0 goto label2;

        $r4 = (javax.net.ssl.HttpsURLConnection) $r2;

        $r3 = $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config>;

        $r5 = virtualinvoke $r3.<com.amazonaws.ClientConfiguration: javax.net.ssl.TrustManager getTrustManager()>();

        if $r5 == null goto label2;

        specialinvoke $r0.<com.amazonaws.http.UrlHttpClient: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)>($r4);

     label2:
        return;
    }

    com.amazonaws.http.HttpResponse createHttpResponse(com.amazonaws.http.HttpRequest, java.net.HttpURLConnection) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.HttpURLConnection $r2;
        java.lang.String $r3, $r6, varReplacer3106;
        int $i0, varReplacer3105;
        java.io.InputStream $r4, $r5;
        boolean $z0;
        com.amazonaws.http.HttpResponse$Builder $r7;
        java.util.Map $r8;
        java.util.Set $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        java.util.Map$Entry $r12;
        java.util.List $r13;
        com.amazonaws.http.HttpResponse $r14;
        java.lang.Throwable $r15;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 := @parameter1: java.net.HttpURLConnection;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>();

        $r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r5 = $r4;

        if $r4 != null goto label3;

        $r6 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.lang.String getMethod()>();

        varReplacer3106 = "HEAD";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer3106);

        if $z0 != 0 goto label3;

     label1:
        $r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label2:
        $r5 = $r4;

     label3:
        $r7 = staticinvoke <com.amazonaws.http.HttpResponse: com.amazonaws.http.HttpResponse$Builder builder()>();

        $r7 = virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse$Builder statusCode(int)>($i0);

        $r7 = virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse$Builder statusText(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse$Builder content(java.io.InputStream)>($r5);

        $r8 = virtualinvoke $r2.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r11;

        $r11 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r11 == null goto label4;

        $r11 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r11;

        $r11 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.util.List) $r11;

        varReplacer3105 = 0;

        $r11 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(varReplacer3105);

        $r6 = (java.lang.String) $r11;

        virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse$Builder header(java.lang.String,java.lang.String)>($r3, $r6);

        goto label4;

     label5:
        $r14 = virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse build()>();

        return $r14;

     label6:
        $r15 := @caughtexception;

        goto label3;

        catch java.io.IOException from label1 to label2 with label6;
    }

    public com.amazonaws.http.HttpResponse execute(com.amazonaws.http.HttpRequest) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.URI $r2;
        java.net.URL $r3;
        java.net.URLConnection $r4;
        java.net.HttpURLConnection $r5;
        com.amazonaws.ClientConfiguration $r6;
        boolean $z0;
        com.amazonaws.http.UrlHttpClient$CurlBuilder $r7;
        java.lang.String $r8, varReplacer3080;
        com.amazonaws.http.HttpResponse $r9;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.net.URI getUri()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.net.URL toURL()>();

        $r4 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r5 = (java.net.HttpURLConnection) $r4;

        $r6 = $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config>;

        $z0 = virtualinvoke $r6.<com.amazonaws.ClientConfiguration: boolean isCurlLogging()>();

        if $z0 == 0 goto label3;

        $r7 = new com.amazonaws.http.UrlHttpClient$CurlBuilder;

        $r2 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.net.URI getUri()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.net.URL toURL()>();

        specialinvoke $r7.<com.amazonaws.http.UrlHttpClient$CurlBuilder: void <init>(com.amazonaws.http.UrlHttpClient,java.net.URL)>($r0, $r3);

     label1:
        virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: void configureConnection(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection)>($r1, $r5);

        virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: java.net.HttpURLConnection applyHeadersAndMethod(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection,com.amazonaws.http.UrlHttpClient$CurlBuilder)>($r1, $r5, $r7);

        virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: void writeContentToConnection(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection,com.amazonaws.http.UrlHttpClient$CurlBuilder)>($r1, $r5, $r7);

        if $r7 == null goto label2;

        $z0 = virtualinvoke $r7.<com.amazonaws.http.UrlHttpClient$CurlBuilder: boolean isValid()>();

        if $z0 == 0 goto label4;

        $r8 = virtualinvoke $r7.<com.amazonaws.http.UrlHttpClient$CurlBuilder: java.lang.String build()>();

        virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: void printToLog(java.lang.String)>($r8);

     label2:
        $r9 = virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.http.HttpResponse createHttpResponse(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection)>($r1, $r5);

        return $r9;

     label3:
        $r7 = null;

        goto label1;

     label4:
        varReplacer3080 = "Failed to create curl, content too long";

        virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: void printToLog(java.lang.String)>(varReplacer3080);

        goto label2;
    }

    protected java.net.HttpURLConnection getUrlConnection(java.net.URL) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        java.net.URL $r1;
        java.net.URLConnection $r2;
        java.net.HttpURLConnection $r3;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = (java.net.HttpURLConnection) $r2;

        return $r3;
    }

    protected void printToLog(java.lang.String)
    {
        com.amazonaws.http.UrlHttpClient $r0;
        java.lang.String $r1;
        org.apache.commons.logging.Log $r2;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: java.lang.String;

        $r2 = <com.amazonaws.http.UrlHttpClient: org.apache.commons.logging.Log log>;

        interfaceinvoke $r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r1);

        return;
    }

    public void shutdown()
    {
        com.amazonaws.http.UrlHttpClient $r0;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        return;
    }

    void writeContentToConnection(com.amazonaws.http.HttpRequest, java.net.HttpURLConnection) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.HttpURLConnection $r2;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 := @parameter1: java.net.HttpURLConnection;

        virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: void writeContentToConnection(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection,com.amazonaws.http.UrlHttpClient$CurlBuilder)>($r1, $r2, null);

        return;
    }

    void writeContentToConnection(com.amazonaws.http.HttpRequest, java.net.HttpURLConnection, com.amazonaws.http.UrlHttpClient$CurlBuilder) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.HttpURLConnection $r2;
        com.amazonaws.http.UrlHttpClient$CurlBuilder $r3;
        java.io.InputStream $r4;
        long $l0;
        byte $b1;
        boolean $z0;
        int $i2, varReplacer3103, varReplacer3104;
        java.io.OutputStream $r5;
        java.nio.ByteBuffer $r6;
        java.lang.String $r7, varReplacer3102;
        byte[] $r8;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 := @parameter1: java.net.HttpURLConnection;

        $r3 := @parameter2: com.amazonaws.http.UrlHttpClient$CurlBuilder;

        $r4 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.io.InputStream getContent()>();

        if $r4 == null goto label5;

        $l0 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: long getContentLength()>();

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label5;

        varReplacer3103 = 1;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer3103);

        $z0 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: boolean isStreaming()>();

        if $z0 != 0 goto label1;

        $l0 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: long getContentLength()>();

        $i2 = (int) $l0;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i2);

     label1:
        $r5 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r6 = null;

        if $r3 == null goto label2;

        $l0 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: long getContentLength()>();

        $b1 = $l0 cmp 2147483647L;

        if $b1 >= 0 goto label4;

        $l0 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: long getContentLength()>();

        $i2 = (int) $l0;

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i2);

     label2:
        $r4 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.io.InputStream getContent()>();

        specialinvoke $r0.<com.amazonaws.http.UrlHttpClient: void write(java.io.InputStream,java.io.OutputStream,com.amazonaws.http.UrlHttpClient$CurlBuilder,java.nio.ByteBuffer)>($r4, $r5, $r3, $r6);

        if $r3 == null goto label3;

        if $r6 == null goto label3;

        $i2 = virtualinvoke $r6.<java.nio.ByteBuffer: int position()>();

        if $i2 == 0 goto label3;

        $r7 = new java.lang.String;

        $r8 = virtualinvoke $r6.<java.nio.ByteBuffer: byte[] array()>();

        varReplacer3102 = "UTF-8";

        specialinvoke $r7.<java.lang.String: void <init>(byte[],java.lang.String)>($r8, varReplacer3102);

        virtualinvoke $r3.<com.amazonaws.http.UrlHttpClient$CurlBuilder: com.amazonaws.http.UrlHttpClient$CurlBuilder setContent(java.lang.String)>($r7);

     label3:
        virtualinvoke $r5.<java.io.OutputStream: void flush()>();

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

        return;

     label4:
        varReplacer3104 = 1;

        virtualinvoke $r3.<com.amazonaws.http.UrlHttpClient$CurlBuilder: com.amazonaws.http.UrlHttpClient$CurlBuilder setContentOverflow(boolean)>(varReplacer3104);

        goto label2;

     label5:
        return;
    }
}
