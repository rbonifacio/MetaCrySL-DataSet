Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzeP(java.lang.String)>
		SHA-256: a53a10fcbcfb3290d3008d5842f3a3c3487fccb65b6ab868a632b08b7a6f832f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8798)
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: 6bfdfbeaacd045fff140b2beff73c90e4b6dab3181f886bbb5afb0f7da50373
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzpx: java.lang.String zzbb(java.lang.String)>
		SHA-256: 45c767ea96312812f59bb8e2ef20e2f02c69406384f892ab3dc1ac39d34a38b5
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4263)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 5046ba55642567e3af70df132de8426e303281634284803e110e301f89deb8ce
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String getCachedFileName(java.lang.String)>
		SHA-256: deab0d2126451d723a70f2997710c93d743ab1d42871f463e8e724779aa980de
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer4328)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: e209cd615bb379d368e0db0131964385a4c267d50eebf1743d592f9576725985
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String getUniqueId(android.content.Context)>
		SHA-256: c5cfced02d8de3245e250ffb5b9e4e11b4ec02a7e52ffcce1f71f09ae3e4dda7
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer8274)
		Method: <com.veam.inappbilling.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 3405883afaf7e20024d337bb9ee9e510afb13ecbf35474a2d20f28467552ffa5
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String sha1(java.lang.String)>
		SHA-256: 127a25abe84b15e5268841fb99ac2d769598c036582a3c6e76e7589272fc87e8
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer3743, varReplacer3744)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 28bf85ff0eeaf8dfb94df38f12b0e1171e6c0254f3d45d5150e17275f918c11d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzGs()>
		SHA-256: 92352f365af81b6cd93aec5685485ef79e11ee652b7e2f3af45cc5e33bb8d7b9
		Secure: true
	Object:
		Variable: varReplacer3749
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3749)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 31e3ca9079f24ed6c0213cac94979254e49d09a530c40a66825dbb9fd96a8ac2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer875)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String getCachedFileName(java.lang.String)>
		SHA-256: 8a4bfa85c772b71c482c5ccfd3b073331c8ca383fde0a0f1e2d5a0275840043f
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer437)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String getUniqueId(android.content.Context)>
		SHA-256: f4ec7c7f66041b67958681cd92db33b38edf6f01ff391945fc7b339fcb44dde6
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer3743, varReplacer3744)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 2359ecfeb0e91f5d7472b551305ed3016f82ada5a1bdcdf7e00fc8c69b9e80a8
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer3750)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: de5b41a05cf69dbe4188dd358416d047876adc6b59e16d759c01507edd9771cd
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.veam.inappbilling.util.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3749)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 5b7d01079c1aec87ffd963b43179e56ae740f0836a88515224db2f01bd72117d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer433)
		Method: <co.veam.veam31036204.VeamUtil: java.lang.String sha1(java.lang.String)>
		SHA-256: 5cf02f77f204f23c0d262b50e116d0277e443c07c283cca5deefdbf6c7f3c09a
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: b06ea93113caf1c0a34502b70367c98fc8260fbfa0ac30bcb23e381db0de6b00
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3745)
		Method: <co.veam.veam31036204.SimpleCrypto: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 58577b9dbc208554b75464c5b82fb1d5b6957577e7893f65f8ed24d39bfa385
		Secure: false

Findings in Java Class: co.veam.veam31036204.SimpleCrypto

	 in Method: byte[] decrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3749)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared Alg
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer3748, $r3, $r5)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer3743, varReplacer3744)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #58577b9dbc208554b75464c5b82fb1d5b6957577e7893f65f8ed24d39bfa385)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3745)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer3748, $r3, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #58577b9dbc208554b75464c5b82fb1d5b6957577e7893f65f8ed24d39bfa385)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3745)


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5046ba55642567e3af70df132de8426e303281634284803e110e301f89deb8ce)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4263)


Findings in Java Class: com.veam.inappbilling.util.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 27

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	ImpreciseValueExtractionError: 1
	RequiredPredicateError: 5
=====================================================================