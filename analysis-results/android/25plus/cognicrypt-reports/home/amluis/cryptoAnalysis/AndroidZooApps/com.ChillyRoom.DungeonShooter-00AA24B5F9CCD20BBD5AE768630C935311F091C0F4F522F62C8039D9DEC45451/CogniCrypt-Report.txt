Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: 70bb74f097e2dd84d4a0de962ef47d7c63b680bdcfc7c4bd45c5570de7bb2dcb
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.unity3d.player.UnityPlayer: java.lang.String a(java.lang.String)>
		SHA-256: 5a54f705314d6605f4cf61ba388d3b495336c885c3ea98cfb7cec081c65981da
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int)>
		SHA-256: 1e82180797dda95c714f77d5d4aeeaafb4e3f1f39751fff892dae964e08421c3
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2243)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 75d27bc3b51854615f948e411828309bb34062c31ce7978342bddca5c8fabcfa
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11661)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: 6faea1b676ff1ea598496dffa09d230d51d1fd8c3a4252bd8757197290bf10e0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: c795e7eda222ee706bf8dc74e0cf109d78009ea2b33faaf3544ad11303c922be
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: ffa5b23ed28a4dd5b25bdec8ca4356de9f8907c516e4448937636427a5eb19cb
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8758)
		Method: <com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: 4d96822f997055453beaa39c8b051462ccc8b70ac29920955cf119ed54ec1e34
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: 8880a047bf40bc5dec0b3df722fd05892da6ae419d327eaa3640e62fa041fb71
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: 138bd9695ae6e5ad998913ce43b78feb5de1c8ab14a8f0e82d0d68f897dca60e
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: abf43253ed8f3e54a83714aeb42badc0858fe988b88931ba5975809bedeadfd6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7852)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getUPMD5(java.lang.String)>
		SHA-256: 5b21c5d32b446e6d445f1beecdaef274d7e1b3f1bb74ada8bf601c5c2f9ca2d6
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: 2a1b19b8a4fb51f1ce0783dc45674c8f884b7e5dca53391fc2ae5f4bdc6e733f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11400)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: a69446adb9807619866e34934d49aaeccdfe3d6a746a6bf2abdb2cad8fa6ccc5
		Secure: false
	Object:
		Variable: varReplacer11665
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer11665)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: 8e3f1917f5d2b6994746876af02940faea6811f3987576aa2fec9b73a5d1e36a
		Secure: false
	Object:
		Variable: r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer11399)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 3d56f17c5ee0337e2847e54ef038cbd41ae37ee296980b954347daf075dd94e9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: acacc80fe3be42692c6986b1af176a60dcbd6a974f08f68ad842508b7a47d851
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: d167e5bf2718063187c7d8644bd9acef166b7e44d330f8eb4af9b809ddf441c9
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12056)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] b(int,byte[],byte[])>
		SHA-256: d3b5cc28096e8eaa62f1abd5d84b4303d56b3262f9cba15b09c5becd13b240c7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2273)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: 2eaed87be85e61ccb1dea2f7b1ef23bc9a6419e96e1468a6438ac7c7a58c27ac
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer12059)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: 8f3fe7f9ad114a4ad8149171bfe0a7eb7863d99587b1353fec32b0e07f95e6cd
		Secure: false
	Object:
		Variable: r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2269)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: 7cf53030b9bd47587e7dac134e768be6e4f4ecd321c13e0d0f037bdf3b1b66c5
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: f9108569a36941589d5b81deb435a01e8fad54b250c1edd01b58d79475c0dd6d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] b(int,byte[],byte[])>
		SHA-256: 2ae8bb311bea381fffc5fd2fe6fc54d49023d2aff1383453a7010af68f724d3e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4455)
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: e0c550e9857356e2f0dff264528d2f1e06b01a2e943e81ef26daf5ae0e5ba9a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer11665)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: cdd55cf2b3edb0c341a99711bcfa2d2726f27cff64b0f19b7847d3ece99dbc0b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12060)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: 3c1bd8f3f7d96b68c44a18d0863bc0eab8a4d253ad774c587cc3f6a5cea85da7
		Secure: false
	Object:
		Variable: varReplacer12059
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer12059)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: 5e6c6aec1301378819b4de93c9c93b520905e07a67d898cfa77d88f3c00527c9
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: e66b103769fe8300f57e7a97b484ed722c6c04ee2cb8cb66cdbf936f81665e6b
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8751)
		Method: <com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: b9962aebd88978cab4e33fdff94435cec7fa9a22473e2b5e31b4e984c294f228
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2284)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String MD5(java.lang.String)>
		SHA-256: d92627fb99e799f686df764b8ae3ce1a89215f4b3461038a7e88de0555f4ce7b
		Secure: true
	Object:
		Variable: r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 6e40f2a2ecc146f06e6f4afd32212e581424da55f9b18c8ebb33a748593bf95c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.msdk.base.utils.CommonMD5: java.lang.String getMD5(java.lang.String)>
		SHA-256: 8308cc419a228b856ecf812f4a1bcec969318612ae2f3894f4977a38456c2fd4
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8213)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: df98056bbf98bd7968c991fa17af6988ccbd2a71e4a7f85846453bff0e4086aa
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.KeyGenerator
		Statement: $r6 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8829)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int)>
		SHA-256: 87a6b0eedd447a2608d944ed9d100aace238df7d48c4f44ca8d931dd525a2b91
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: 7a2af8506b1c8ab09c2f6520b590104ce1b84343d84cbc7d5cd8248768f734c7
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: 6f212fd969e9171ce08bf4d1e289877af8000f513b92c4a566d112ac1f4890b9
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: a083f16754a111eeaca1e2fd5172487fbf6e4f736a06f763225f8aaf5b81958e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = interfaceinvoke $r8.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int)>
		SHA-256: 6f2dc5e0d7912e78f7b9ec02267eaf88238bc9b3172e73c49d0474840efac0f0
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8201)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: c0a54269afb32e6ec2e1f78eda77112dc97cd030a29e9ac6f291fa9ab3677812
		Secure: false
	Object:
		Variable: varReplacer2269
		Type: java.lang.String
		Statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2269)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String encrypt(java.lang.String,java.lang.String)>
		SHA-256: afea1fa5383c08a609048bb6c29ebaaf9bc58909807c7acde3ad686b22b9d35f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String MD5(java.lang.String)>
		SHA-256: 551d4ad04ac0130ea70867dd327d7c0b9b54423955760a6406ecd8a8c79bcbae
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo: java.lang.String a(byte[])>
		SHA-256: 28315aa9f4666cf63c694727245200ebf64e1465c3ed2c81d73d75cd6b3b76d7
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.mobvista.msdk.base.b.b.i: void <init>(com.mobvista.msdk.base.b.b.i$a,int,com.mobvista.msdk.base.b.b.j)>
		SHA-256: 904974ba4cb6065649466c8090c20e8f6c18ff337ab5e9f4cbda85a1a8b9602f
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8212)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: 6a34266cf787cc7804908aeb31778ec1e1073deaee0a17cdea9524d6b2cd02f3
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>($i1, $r1)
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int,byte[],byte[])>
		SHA-256: 6a21c1bb7ec44ebfbe45801f9b90a053cf32c237dd3de30f02e70b1ecf7b16d
		Secure: false
	Object:
		Variable: varReplacer11399
		Type: java.lang.String
		Statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer11399)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 5df693e7b45261debd5d6be1c2f4724202974ce482aacc0740689484b0a30d97
		Secure: false
	Object:
		Variable: varReplacer8212
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8212)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] b(byte[])>
		SHA-256: 9c92c6514791f28d77dc92c9649bb724b17fb2f1142488f5b3a838d83646e2a6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8203)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: 3fee6843b5bda42a15d92eebe6f1b16c7cd666da0b467db6cf095c712180717e
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)
		Method: <com.soulgame.sgsdk.tgsdklib.TGSDKUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 4c2d4ef8458a720cb11f0216a0ea951d5a56350fe081f595b501de8eb9ec750e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11656)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: 64d8ec777c05f70eaa55b87e3f7af7a81c8a5a440a4b716600a3b4d8287d8784
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] b(byte[])>
		SHA-256: 61ae4a4b3828c08c89e8e818a6f3d13d73db9dad6cd747430adc462c6596fe34
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11664)
		Method: <com.tencent.bugly.tgsdk.proguard.ae: byte[] a(byte[])>
		SHA-256: a20f3f303d2e9eee356d69e111c8884bc9bc521aae40f043ea688b8e5295f3f0
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tencent.bugly.tgsdk.proguard.af: byte[] a(byte[])>
		SHA-256: 5e5bf379b7bd5b97f81dadc39946b76c3f7d76f05526f9082cced7a7c9e48966
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1514)
		Method: <com.unity3d.player.UnityPlayer: java.lang.String a(java.lang.String)>
		SHA-256: e660b5eea24a2c0930e03a4b5032ddf682c51af3b9ea339e13c772a8a318f4ba
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.tencent.bugly.tgsdk.proguard.z: byte[] a(int)>
		SHA-256: c4b27919efc0504936189337d74489b888cbe444a9ca2cc9882885b7ce1121ee
		Secure: true

Findings in Java Class: com.unity3d.player.UnityPlayer

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e660b5eea24a2c0930e03a4b5032ddf682c51af3b9ea339e13c772a8a318f4ba)
			Third parameter (with value 0)Variable pre_lenmust be  greater than pre_off
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r1, varReplacer1513, $i3)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e660b5eea24a2c0930e03a4b5032ddf682c51af3b9ea339e13c772a8a318f4ba)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.soulgame.sgsdk.tgsdklib.TGSDKUtil

	 in Method: java.lang.String encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2eaed87be85e61ccb1dea2f7b1ef23bc9a6419e96e1468a6438ac7c7a58c27ac)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2273)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2269)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2eaed87be85e61ccb1dea2f7b1ef23bc9a6419e96e1468a6438ac7c7a58c27ac)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2273)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2270, $r6, $r8)


	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a69446adb9807619866e34934d49aaeccdfe3d6a746a6bf2abdb2cad8fa6ccc5)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11400)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a69446adb9807619866e34934d49aaeccdfe3d6a746a6bf2abdb2cad8fa6ccc5)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11400)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer11399)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11398, $r6, $r8)


Findings in Java Class: com.tencent.bugly.tgsdk.proguard.af

	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8206, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3fee6843b5bda42a15d92eebe6f1b16c7cd666da0b467db6cf095c712180717e)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8203)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #c0a54269afb32e6ec2e1f78eda77112dc97cd030a29e9ac6f291fa9ab3677812)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithHmacSHA224AndAES_256, PBEwithHmacSHA1AndAES_256, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithMD5ANDDES, PBKDF2withHmacSHA1And8BIT, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, HmacSHA224, PBEwithMD5ANDRC2, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBEwithSHAANDTWOFISH-CBC	, PBKDF2withHmacSHA512, HmacSHA1, PBKDF2withHmacSHA224, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, DESede, PBEwithHmacSHA256AndAES_128, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithHmacSHA512AndAES_256, PBEwithSHAAND40BITRC4, PBEwithHmacSHA1AndAES_128, HmacSHA512, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer8201)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8206, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11659, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6faea1b676ff1ea598496dffa09d230d51d1fd8c3a4252bd8757197290bf10e0)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11661)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #64d8ec777c05f70eaa55b87e3f7af7a81c8a5a440a4b716600a3b4d8287d8784)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithHmacSHA224AndAES_256, PBEwithHmacSHA1AndAES_256, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithMD5ANDDES, PBKDF2withHmacSHA1And8BIT, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, HmacSHA224, PBEwithMD5ANDRC2, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBEwithSHAANDTWOFISH-CBC	, PBKDF2withHmacSHA512, HmacSHA1, PBKDF2withHmacSHA224, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, DESede, PBEwithHmacSHA256AndAES_128, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithHmacSHA512AndAES_256, PBEwithSHAAND40BITRC4, PBEwithHmacSHA1AndAES_128, HmacSHA512, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer11656)


Findings in Java Class: com.tencent.bugly.tgsdk.crashreport.common.info.AppInfo

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b9962aebd88978cab4e33fdff94435cec7fa9a22473e2b5e31b4e984c294f228)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8751)


Findings in Java Class: com.tencent.bugly.tgsdk.proguard.ae

	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8214, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8214, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8212)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer11665)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11662, $r5, $r8)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2241, r7, varReplacer2241)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2241, r7, varReplacer2241)


Findings in Java Class: com.tencent.bugly.tgsdk.proguard.z

	 in Method: byte[] a(int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer12059)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>($i1, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r5)


	 in Method: byte[] b(int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12055, $r4)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 56

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 10
	TypestateError: 1
	RequiredPredicateError: 30
=====================================================================