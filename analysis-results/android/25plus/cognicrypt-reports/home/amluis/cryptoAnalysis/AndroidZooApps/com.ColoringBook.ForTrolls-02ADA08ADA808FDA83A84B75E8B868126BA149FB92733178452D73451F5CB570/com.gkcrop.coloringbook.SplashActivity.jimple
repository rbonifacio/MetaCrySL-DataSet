public class com.gkcrop.coloringbook.SplashActivity extends com.actionbarsherlock.app.SherlockActivity
{
    private static final java.lang.String TAG;
    private static java.lang.String cryptoPass;
    java.lang.String PACKAGE_NAME;
    public android.content.Intent ipcIntent;
    public android.content.Intent ipcResultIntent;

    static void <clinit>()
    {
        null_type varReplacer41;
        java.lang.String varReplacer42;

        nop;

        varReplacer41 = null;

        <com.gkcrop.coloringbook.SplashActivity: java.lang.String TAG> = varReplacer41;

        varReplacer42 = "sup3rS3xy";

        <com.gkcrop.coloringbook.SplashActivity: java.lang.String cryptoPass> = varReplacer42;

        return;
    }

    public void <init>()
    {
        com.gkcrop.coloringbook.SplashActivity $r0;

        nop;

        $r0 := @this: com.gkcrop.coloringbook.SplashActivity;

        specialinvoke $r0.<com.actionbarsherlock.app.SherlockActivity: void <init>()>();

        return;
    }

    public static java.lang.String decryptIt(java.lang.String)
    {
        java.lang.String $r0, $r2, $r7, $r9, varReplacer46, varReplacer48, varReplacer49, varReplacer50, varReplacer51, varReplacer53, varReplacer54, varReplacer55;
        javax.crypto.spec.DESKeySpec $r1, r17;
        byte[] $r3;
        javax.crypto.SecretKeyFactory $r4;
        javax.crypto.SecretKey $r5;
        javax.crypto.Cipher $r6;
        java.lang.StringBuilder $r8, r18;
        java.lang.Throwable $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        java.security.InvalidKeyException r19;
        java.io.UnsupportedEncodingException r20;
        java.security.spec.InvalidKeySpecException r21;
        java.security.NoSuchAlgorithmException r22;
        javax.crypto.BadPaddingException r23;
        javax.crypto.NoSuchPaddingException r24;
        javax.crypto.IllegalBlockSizeException r25;
        int varReplacer47, varReplacer52;

        nop;

        $r0 := @parameter0: java.lang.String;

        r17 = new javax.crypto.spec.DESKeySpec;

        $r1 = r17;

        $r2 = <com.gkcrop.coloringbook.SplashActivity: java.lang.String cryptoPass>;

     label01:
        varReplacer49 = "UTF8";

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer49);

        specialinvoke r17.<javax.crypto.spec.DESKeySpec: void <init>(byte[])>($r3);

        varReplacer50 = "DES";

        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer50);

        $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1);

        varReplacer46 = "q40qyYujXg+UrKJB1q6WVi2ZAe9cODv94xyskWy3C6E=";

        varReplacer47 = 0;

        $r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(varReplacer46, varReplacer47);

        varReplacer54 = "DES";

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54);

        varReplacer52 = 2;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer52, $r5);

        $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

     label02:
        $r7 = new java.lang.String;

        $r2 = $r7;

     label03:
        specialinvoke $r7.<java.lang.String: void <init>(byte[])>($r3);

     label04:
        $r7 = <com.gkcrop.coloringbook.SplashActivity: java.lang.String TAG>;

        r18 = new java.lang.StringBuilder;

        $r8 = r18;

     label05:
        varReplacer53 = "Decrypted: ";

        specialinvoke r18.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer53);

        varReplacer51 = "q40qyYujXg+UrKJB1q6WVi2ZAe9cODv94xyskWy3C6E=";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer51);

        varReplacer48 = " -> ";

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer48);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r7, $r9);

     label06:
        return $r2;

     label07:
        $r10 := @caughtexception;

        r19 = (java.security.InvalidKeyException) $r10;

        virtualinvoke r19.<java.security.InvalidKeyException: void printStackTrace()>();

     label08:
        varReplacer55 = "q40qyYujXg+UrKJB1q6WVi2ZAe9cODv94xyskWy3C6E=";

        return varReplacer55;

     label09:
        $r11 := @caughtexception;

        r20 = (java.io.UnsupportedEncodingException) $r11;

        virtualinvoke r20.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label08;

     label10:
        $r12 := @caughtexception;

        r21 = (java.security.spec.InvalidKeySpecException) $r12;

        virtualinvoke r21.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        goto label08;

     label11:
        $r13 := @caughtexception;

        r22 = (java.security.NoSuchAlgorithmException) $r13;

        virtualinvoke r22.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label08;

     label12:
        $r14 := @caughtexception;

        r23 = (javax.crypto.BadPaddingException) $r14;

        virtualinvoke r23.<javax.crypto.BadPaddingException: void printStackTrace()>();

        goto label08;

     label13:
        $r15 := @caughtexception;

        r24 = (javax.crypto.NoSuchPaddingException) $r15;

        virtualinvoke r24.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label08;

     label14:
        $r16 := @caughtexception;

        r25 = (javax.crypto.IllegalBlockSizeException) $r16;

        virtualinvoke r25.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        goto label08;

        catch java.security.InvalidKeyException from label01 to label02 with label07;
        catch java.security.InvalidKeyException from label03 to label04 with label07;
        catch java.security.InvalidKeyException from label05 to label06 with label07;
        catch java.io.UnsupportedEncodingException from label01 to label02 with label09;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label09;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label09;
        catch java.security.spec.InvalidKeySpecException from label01 to label02 with label10;
        catch java.security.spec.InvalidKeySpecException from label03 to label04 with label10;
        catch java.security.spec.InvalidKeySpecException from label05 to label06 with label10;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label11;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label11;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label11;
        catch javax.crypto.BadPaddingException from label01 to label02 with label12;
        catch javax.crypto.BadPaddingException from label03 to label04 with label12;
        catch javax.crypto.BadPaddingException from label05 to label06 with label12;
        catch javax.crypto.NoSuchPaddingException from label01 to label02 with label13;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label13;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label13;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label14;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label14;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label14;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.gkcrop.coloringbook.SplashActivity $r0;
        android.os.Bundle $r1;
        com.gkcrop.coloringbook.SplashActivity$1 $r2;
        android.content.Context $r3;
        java.lang.String $r4, $r5, varReplacer44;
        boolean $z0;
        int varReplacer43, varReplacer45;

        nop;

        $r0 := @this: com.gkcrop.coloringbook.SplashActivity;

        $r1 := @parameter0: android.os.Bundle;

        specialinvoke $r0.<com.actionbarsherlock.app.SherlockActivity: void onCreate(android.os.Bundle)>($r1);

        varReplacer43 = 2130903073;

        virtualinvoke $r0.<com.gkcrop.coloringbook.SplashActivity: void setContentView(int)>(varReplacer43);

        $r3 = virtualinvoke $r0.<com.gkcrop.coloringbook.SplashActivity: android.content.Context getApplicationContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getPackageName()>();

        $r0.<com.gkcrop.coloringbook.SplashActivity: java.lang.String PACKAGE_NAME> = $r4;

        $r4 = $r0.<com.gkcrop.coloringbook.SplashActivity: java.lang.String PACKAGE_NAME>;

        varReplacer44 = "q40qyYujXg+UrKJB1q6WVi2ZAe9cODv94xyskWy3C6E=";

        $r5 = staticinvoke <com.gkcrop.coloringbook.SplashActivity: java.lang.String decryptIt(java.lang.String)>(varReplacer44);

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r2 = new com.gkcrop.coloringbook.SplashActivity$1;

        specialinvoke $r2.<com.gkcrop.coloringbook.SplashActivity$1: void <init>(com.gkcrop.coloringbook.SplashActivity)>($r0);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;

     label1:
        varReplacer45 = 0;

        staticinvoke <java.lang.System: void exit(int)>(varReplacer45);

        return;
    }

    public android.content.Intent getIntent()
    {
        com.gkcrop.coloringbook.SplashActivity this;
        android.content.Intent $r0;

        this := @this: com.gkcrop.coloringbook.SplashActivity;

        $r0 = this.<com.gkcrop.coloringbook.SplashActivity: android.content.Intent ipcIntent>;

        return $r0;
    }

    public void setIntent(android.content.Intent)
    {
        com.gkcrop.coloringbook.SplashActivity this;
        android.content.Intent parameter0;

        this := @this: com.gkcrop.coloringbook.SplashActivity;

        parameter0 := @parameter0: android.content.Intent;

        this.<com.gkcrop.coloringbook.SplashActivity: android.content.Intent ipcIntent> = parameter0;

        return;
    }

    public void setResult(int, android.content.Intent)
    {
        com.gkcrop.coloringbook.SplashActivity this;
        int parameter0;
        android.content.Intent parameter1;

        this := @this: com.gkcrop.coloringbook.SplashActivity;

        parameter0 := @parameter0: int;

        parameter1 := @parameter1: android.content.Intent;

        this.<com.gkcrop.coloringbook.SplashActivity: android.content.Intent ipcResultIntent> = parameter1;

        return;
    }
}
