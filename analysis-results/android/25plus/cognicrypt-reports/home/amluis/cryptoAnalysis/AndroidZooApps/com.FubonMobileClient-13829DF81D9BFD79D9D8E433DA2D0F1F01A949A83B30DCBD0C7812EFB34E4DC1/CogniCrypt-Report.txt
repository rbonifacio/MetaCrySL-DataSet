Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer943
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer943)
		Method: <com.worklight.utils.SecurityUtils: java.io.InputStream decryptData(java.io.InputStream,byte[])>
		SHA-256: a00537db9d4553498217c4c3e2310140db60e714b8c87f22cc5640b18615d8e6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer541)
		Method: <com.worklight.location.internal.deviceContextPiggybacker.DeviceContextPiggybacker: void <init>(com.worklight.location.internal.DeviceContextImpl)>
		SHA-256: ea4915f1957e8311c64692adcd15a2c10badb1f0246708e58782d2ebca21a6cd
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r0, $r4)
		Method: <com.worklight.utils.SecurityUtils: java.io.InputStream decryptData(java.io.InputStream,byte[])>
		SHA-256: 1a00442bc8a659def77cd20b039e8ea8fd7fbf8cecea2dc767c1ad62a4eeeba6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.worklight.common.security.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: 87337823ba78b3cd832175897f47461de564d31a83b3ee130b2fa70551711f04
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer461)
		Method: <com.worklight.common.security.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: 7e6cce20ed395266c22bdbd69700fe06d2f4a8b68735b6b2f4fa7c61f0b885ce
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer885)
		Method: <com.worklight.utils.SecurityUtils: byte[] hashData(byte[],java.lang.String)>
		SHA-256: 9d41a6519b5606e67a7e4b1476a4445ba72c449802177c0b02ad798d32699dbf
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer943)
		Method: <com.worklight.utils.SecurityUtils: java.io.InputStream decryptData(java.io.InputStream,byte[])>
		SHA-256: d84c772875ac1c412932da52fd3cae6f41e773b5f824140bf2a485c53837d34e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.worklight.utils.SecurityUtils: byte[] hashData(byte[],java.lang.String)>
		SHA-256: 7551a12373def99c8271488553584812d0524c4c619dba815df5f556f0220be6
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer944)
		Method: <com.worklight.utils.SecurityUtils: java.io.InputStream decryptData(java.io.InputStream,byte[])>
		SHA-256: c08018bf5d517fe71ec44820877e965be37c006634d87fe9bef8c81e1f1a51b
		Secure: false

Findings in Java Class: com.worklight.utils.SecurityUtils

	 in Method: java.io.InputStream decryptData(java.io.InputStream,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c08018bf5d517fe71ec44820877e965be37c006634d87fe9bef8c81e1f1a51b)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer944)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer943)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c08018bf5d517fe71ec44820877e965be37c006634d87fe9bef8c81e1f1a51b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r0, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c08018bf5d517fe71ec44820877e965be37c006634d87fe9bef8c81e1f1a51b)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer944)


Findings in Java Class: com.worklight.androidgap.PrepackagedAssetsManager

	 in Method: boolean unzipAssetsToLocalCopy()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #1a00442bc8a659def77cd20b039e8ea8fd7fbf8cecea2dc767c1ad62a4eeeba6)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <com.worklight.nativeandroid.common.WLUtils: void unpack(java.io.InputStream,java.io.File)>($r9, $r11)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 9

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 1
	ConstraintError: 2
=====================================================================