Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: com.amazonaws.internal.SdkDigestInputStream
		Statement: specialinvoke $r0.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r1, $r2)
		Method: <com.amazonaws.internal.SdkDigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>
		SHA-256: 37ec91b9c70498deee384abb3d8453db61af27abf0e3a615ecac43b672eaab8d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r4)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: 77966c28bb48a02d141df0c99d6ff9f2f8d31f484a3a9f4cf25db8e26d11810f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: 56a4f4fa93606b897e217b859954768af88a4abbac6d1900d86a162bb4801b4b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6907)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] hash(java.io.InputStream)>
		SHA-256: 9a7c289a1d96b7d46fd0e6dd79041f101756d43fb7f083b3cbabf9f06285b18d
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] hash(java.lang.String)>
		SHA-256: b1d3e197bc36238608128f004365ebc71f558b2c73b3dd278433acff043059ad
		Secure: true
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r4)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: e9169f946c47dd8b499a3c19f8e41f29b0dfdf665965c8197c5a7cc57cd84568
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7031)
		Method: <com.amazonaws.http.UrlHttpClient: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)>
		SHA-256: 51b42f840a5c72f23d48711913951cc7e7514d965b73140f796c7c65fa4e6ad2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6886)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] hash(java.lang.String)>
		SHA-256: ec7cd6f054d8c73fba6035d93176bf7e9edc331a445ae80a5b761b5b24344c40
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r4)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: 25cd7c7b27f4485df7c0c2c5cecfd96bdd1802995246e8efd307682ea24e1fd6
		Secure: true

Findings in Java Class: com.amazonaws.auth.AbstractAWSSigner

	 in Method: byte[] hash(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #37ec91b9c70498deee384abb3d8453db61af27abf0e3a615ecac43b672eaab8d)
			Operation on object of type com.amazonaws.internal.SdkDigestInputStream object not completed. Expected call to read
			at statement: $r2 = virtualinvoke $r3.<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>()


	 in Method: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r4)


Findings in Java Class: com.amazonaws.http.UrlHttpClient

	 in Method: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7029, $r3, varReplacer7029)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7029, $r3, varReplacer7029)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 9

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
	IncompleteOperationError: 1
=====================================================================