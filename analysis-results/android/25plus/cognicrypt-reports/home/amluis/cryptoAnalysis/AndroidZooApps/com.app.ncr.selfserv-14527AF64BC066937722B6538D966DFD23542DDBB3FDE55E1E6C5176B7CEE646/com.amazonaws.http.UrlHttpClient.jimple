public class com.amazonaws.http.UrlHttpClient extends java.lang.Object implements com.amazonaws.http.HttpClient
{
    private final com.amazonaws.ClientConfiguration config;
    private javax.net.ssl.SSLContext sc;

    public void <init>(com.amazonaws.ClientConfiguration)
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.ClientConfiguration $r1;
        null_type varReplacer481;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.ClientConfiguration;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer481 = null;

        $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc> = varReplacer481;

        $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config> = $r1;

        return;
    }

    private void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)
    {
        com.amazonaws.http.UrlHttpClient $r0;
        javax.net.ssl.HttpsURLConnection $r1;
        javax.net.ssl.SSLContext $r2;
        javax.net.ssl.TrustManager[] $r3;
        com.amazonaws.ClientConfiguration $r4;
        javax.net.ssl.TrustManager $r5;
        javax.net.ssl.SSLSocketFactory $r6;
        java.lang.Throwable $r7;
        java.lang.RuntimeException $r8;
        null_type varReplacer4920, varReplacer4921;
        java.lang.String varReplacer4922;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: javax.net.ssl.HttpsURLConnection;

        $r2 = $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc>;

        if $r2 != null goto label4;

        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        $r4 = $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config>;

        $r5 = virtualinvoke $r4.<com.amazonaws.ClientConfiguration: javax.net.ssl.TrustManager getTrustManager()>();

        $r3[0] = $r5;

     label1:
        varReplacer4922 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4922);

     label2:
        $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc> = $r2;

        $r2 = $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc>;

     label3:
        varReplacer4920 = null;

        varReplacer4921 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4920, $r3, varReplacer4920);

     label4:
        $r2 = $r0.<com.amazonaws.http.UrlHttpClient: javax.net.ssl.SSLContext sc>;

        $r6 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        virtualinvoke $r1.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r6);

        return;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.security.GeneralSecurityException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label5;
    }

    private void write(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        java.io.InputStream $r1;
        java.io.OutputStream $r2;
        int $i0, varReplacer4919;
        byte[] $r3;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: java.io.OutputStream;

        $r3 = newarray (byte)[8192];

     label1:
        $i0 = virtualinvoke $r1.<java.io.InputStream: int read(byte[])>($r3);

        if $i0 == -1 goto label2;

        varReplacer4919 = 0;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>($r3, varReplacer4919, $i0);

        goto label1;

     label2:
        return;
    }

    java.net.HttpURLConnection applyHeadersAndMethod(com.amazonaws.http.HttpRequest, java.net.HttpURLConnection) throws java.net.ProtocolException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.HttpURLConnection $r2;
        java.util.Map $r3;
        boolean $z0;
        java.util.Set $r4;
        java.util.Iterator $r5;
        java.lang.Object $r6;
        java.util.Map$Entry $r7;
        java.lang.String $r8, $r9, varReplacer4912, varReplacer4913, varReplacer4914;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 := @parameter1: java.net.HttpURLConnection;

        $r3 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.util.Map getHeaders()>();

        if $r3 == null goto label3;

        $r3 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.util.Map getHeaders()>();

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r3 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.util.Map getHeaders()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.util.Map$Entry) $r6;

        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r6;

        varReplacer4912 = "Content-Length";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer4912);

        if $z0 != 0 goto label1;

        varReplacer4913 = "Host";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer4913);

        if $z0 != 0 goto label1;

        varReplacer4914 = "Expect";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer4914);

        if $z0 == 0 goto label2;

     label2:
        $r6 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r6;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>($r8, $r9);

        goto label1;

     label3:
        $r8 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.lang.String getMethod()>();

        virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r8);

        return $r2;
    }

    void configureConnection(java.net.HttpURLConnection)
    {
        com.amazonaws.http.UrlHttpClient $r0;
        java.net.HttpURLConnection $r1;
        com.amazonaws.ClientConfiguration $r2;
        int $i0, varReplacer4910, varReplacer4911;
        boolean $z0;
        javax.net.ssl.HttpsURLConnection $r3;
        javax.net.ssl.TrustManager $r4;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: java.net.HttpURLConnection;

        $r2 = $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config>;

        $i0 = virtualinvoke $r2.<com.amazonaws.ClientConfiguration: int getConnectionTimeout()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        $r2 = $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config>;

        $i0 = virtualinvoke $r2.<com.amazonaws.ClientConfiguration: int getSocketTimeout()>();

        virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>($i0);

        varReplacer4911 = 0;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(varReplacer4911);

        varReplacer4910 = 0;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>(varReplacer4910);

        $z0 = $r1 instanceof javax.net.ssl.HttpsURLConnection;

        if $z0 == 0 goto label1;

        $r3 = (javax.net.ssl.HttpsURLConnection) $r1;

        $r2 = $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.ClientConfiguration config>;

        $r4 = virtualinvoke $r2.<com.amazonaws.ClientConfiguration: javax.net.ssl.TrustManager getTrustManager()>();

        if $r4 == null goto label1;

        specialinvoke $r0.<com.amazonaws.http.UrlHttpClient: void enableCustomTrustManager(javax.net.ssl.HttpsURLConnection)>($r3);

     label1:
        return;
    }

    com.amazonaws.http.HttpResponse createHttpResponse(com.amazonaws.http.HttpRequest, java.net.HttpURLConnection) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.HttpURLConnection $r2;
        java.lang.String $r3, $r6, varReplacer4916;
        int $i0, varReplacer4917;
        java.io.InputStream $r4, $r5;
        boolean $z0;
        com.amazonaws.http.HttpResponse$Builder $r7;
        java.util.Map $r8;
        java.util.Set $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        java.util.Map$Entry $r12;
        java.util.List $r13;
        com.amazonaws.http.HttpResponse $r14;
        java.lang.Throwable $r15;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 := @parameter1: java.net.HttpURLConnection;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        $i0 = virtualinvoke $r2.<java.net.HttpURLConnection: int getResponseCode()>();

        $r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r5 = $r4;

        if $r4 != null goto label3;

        $r6 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.lang.String getMethod()>();

        varReplacer4916 = "HEAD";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(varReplacer4916);

        if $z0 != 0 goto label3;

     label1:
        $r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label2:
        $r5 = $r4;

     label3:
        $r7 = staticinvoke <com.amazonaws.http.HttpResponse: com.amazonaws.http.HttpResponse$Builder builder()>();

        $r7 = virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse$Builder statusCode(int)>($i0);

        $r7 = virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse$Builder statusText(java.lang.String)>($r3);

        $r7 = virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse$Builder content(java.io.InputStream)>($r5);

        $r8 = virtualinvoke $r2.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Set entrySet()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (java.util.Map$Entry) $r11;

        $r11 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r11 == null goto label4;

        $r11 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r3 = (java.lang.String) $r11;

        $r11 = interfaceinvoke $r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.util.List) $r11;

        varReplacer4917 = 0;

        $r11 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(varReplacer4917);

        $r6 = (java.lang.String) $r11;

        virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse$Builder header(java.lang.String,java.lang.String)>($r3, $r6);

        goto label4;

     label5:
        $r14 = virtualinvoke $r7.<com.amazonaws.http.HttpResponse$Builder: com.amazonaws.http.HttpResponse build()>();

        return $r14;

     label6:
        $r15 := @caughtexception;

        goto label3;

        catch java.io.IOException from label1 to label2 with label6;
    }

    public com.amazonaws.http.HttpResponse execute(com.amazonaws.http.HttpRequest) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.URI $r2;
        java.net.URL $r3;
        java.net.URLConnection $r4;
        java.net.HttpURLConnection $r5;
        com.amazonaws.http.HttpResponse $r6;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.net.URI getUri()>();

        $r3 = virtualinvoke $r2.<java.net.URI: java.net.URL toURL()>();

        $r4 = virtualinvoke $r3.<java.net.URL: java.net.URLConnection openConnection()>();

        $r5 = (java.net.HttpURLConnection) $r4;

        virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: void configureConnection(java.net.HttpURLConnection)>($r5);

        virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: java.net.HttpURLConnection applyHeadersAndMethod(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection)>($r1, $r5);

        virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: void writeContentToConnection(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection)>($r1, $r5);

        $r6 = virtualinvoke $r0.<com.amazonaws.http.UrlHttpClient: com.amazonaws.http.HttpResponse createHttpResponse(com.amazonaws.http.HttpRequest,java.net.HttpURLConnection)>($r1, $r5);

        return $r6;
    }

    public void shutdown()
    {
        com.amazonaws.http.UrlHttpClient $r0;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        return;
    }

    void writeContentToConnection(com.amazonaws.http.HttpRequest, java.net.HttpURLConnection) throws java.io.IOException
    {
        com.amazonaws.http.UrlHttpClient $r0;
        com.amazonaws.http.HttpRequest $r1;
        java.net.HttpURLConnection $r2;
        java.io.InputStream $r3;
        long $l0;
        byte $b1;
        int $i2, varReplacer4915;
        java.io.OutputStream $r4;

        nop;

        $r0 := @this: com.amazonaws.http.UrlHttpClient;

        $r1 := @parameter0: com.amazonaws.http.HttpRequest;

        $r2 := @parameter1: java.net.HttpURLConnection;

        $r3 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.io.InputStream getContent()>();

        if $r3 == null goto label1;

        $l0 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: long getContentLength()>();

        $b1 = $l0 cmp 0L;

        if $b1 < 0 goto label1;

        varReplacer4915 = 1;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setDoOutput(boolean)>(varReplacer4915);

        $l0 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: long getContentLength()>();

        $i2 = (int) $l0;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>($i2);

        $r4 = virtualinvoke $r2.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        $r3 = virtualinvoke $r1.<com.amazonaws.http.HttpRequest: java.io.InputStream getContent()>();

        specialinvoke $r0.<com.amazonaws.http.UrlHttpClient: void write(java.io.InputStream,java.io.OutputStream)>($r3, $r4);

        virtualinvoke $r4.<java.io.OutputStream: void flush()>();

        virtualinvoke $r4.<java.io.OutputStream: void close()>();

     label1:
        return;
    }
}
