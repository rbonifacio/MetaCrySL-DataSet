public class com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore extends com.backflipstudios.bf_core.data.BFSSecureDataStore
{
    private static final java.lang.String[] COLUMNS;
    private static final int DATABASE_VERSION;
    private static final java.lang.String SQL_CREATE_TABLE;
    private static final java.lang.String SQL_DROP_TABLE;
    private static final java.lang.String STRING_ENCODING;
    private static final java.lang.String TABLE_NAME;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.lang.Object[] $r1;
        java.lang.String $r2, varReplacer513, varReplacer514;

        nop;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "key";

        $r0[1] = "data";

        <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS> = $r0;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = "properties";

        $r0 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r2 = $r0[0];

        $r1[1] = $r2;

        $r0 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r2 = $r0[1];

        $r1[2] = $r2;

        varReplacer514 = "CREATE TABLE %s (%s TEXT, %s BLOB)";

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer514, $r1);

        <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String SQL_CREATE_TABLE> = $r2;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = "properties";

        varReplacer513 = "DROP TABLE IF EXISTS %s";

        $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer513, $r1);

        <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String SQL_DROP_TABLE> = $r2;

        return;
    }

    public void <init>(android.content.Context, java.lang.String)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        android.content.Context $r1;
        java.lang.String $r2;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: java.lang.String;

        specialinvoke $r0.<com.backflipstudios.bf_core.data.BFSSecureDataStore: void <init>(android.content.Context,java.lang.String)>($r1, $r2);

        return;
    }

    private byte[] readBytes(java.lang.String)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1, $r8, varReplacer543, varReplacer548, varReplacer550;
        java.lang.String[] $r2, $r7;
        byte[] $r3;
        android.database.Cursor $r4, $r9;
        android.database.sqlite.SQLiteDatabase $r5;
        java.lang.Object[] $r6;
        boolean $z0;
        java.lang.IllegalStateException $r10;
        java.lang.Throwable $r11;
        null_type varReplacer544, varReplacer545, varReplacer546, varReplacer547;
        int varReplacer549;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r3 = null;

        $r4 = null;

     label01:
        $r5 = $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: android.database.sqlite.SQLiteDatabase mDb>;

        $r2 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r8 = $r7[0];

        $r6[0] = $r8;

        varReplacer548 = "%s = ?";

        $r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer548, $r6);

        $r7 = newarray (java.lang.String)[1];

        $r7[0] = $r1;

        varReplacer543 = "properties";

        varReplacer544 = null;

        varReplacer545 = null;

        varReplacer546 = null;

        varReplacer547 = null;

        $r9 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(varReplacer543, $r2, $r8, $r7, varReplacer544, varReplacer544, varReplacer544, varReplacer544);

     label02:
        $r4 = $r9;

        if $r9 == null goto label06;

     label03:
        $z0 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToNext()>();

     label04:
        if $z0 == 0 goto label06;

     label05:
        varReplacer549 = 1;

        $r3 = interfaceinvoke $r9.<android.database.Cursor: byte[] getBlob(int)>(varReplacer549);

     label06:
        $z0 = interfaceinvoke $r9.<android.database.Cursor: boolean moveToNext()>();

     label07:
        if $z0 == 0 goto label11;

     label08:
        $r10 = new java.lang.IllegalStateException;

        varReplacer550 = "There shouldn\'t ever be more than one result returned.";

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>(varReplacer550);

        throw $r10;

     label09:
        $r11 := @caughtexception;

        if $r4 == null goto label10;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label10:
        throw $r11;

     label11:
        if $r9 == null goto label12;

        interfaceinvoke $r9.<android.database.Cursor: void close()>();

     label12:
        return $r3;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label06 to label07 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
    }

    private void writeBytes(java.lang.String, byte[])
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1, $r5, varReplacer552, varReplacer553, varReplacer555, varReplacer556, varReplacer558;
        byte[] $r2;
        android.content.ContentValues $r3;
        java.lang.String[] $r4;
        android.database.sqlite.SQLiteDatabase $r6;
        java.lang.Object[] $r7;
        int $i0, varReplacer554;
        null_type varReplacer557;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        if $r2 == null goto label2;

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        $r4 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r5 = $r4[1];

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,byte[])>($r5, $r2);

        $r6 = $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: android.database.sqlite.SQLiteDatabase mDb>;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r5 = $r4[0];

        $r7[0] = $r5;

        varReplacer552 = "%s = ?";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer552, $r7);

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = $r1;

        varReplacer555 = "properties";

        $i0 = virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>(varReplacer555, $r3, $r5, $r4);

        if $i0 > 0 goto label1;

        $r4 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r5 = $r4[0];

        virtualinvoke $r3.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>($r5, $r1);

        $r6 = $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: android.database.sqlite.SQLiteDatabase mDb>;

        varReplacer556 = "properties";

        varReplacer557 = null;

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>(varReplacer556, varReplacer557, $r3);

     label1:
        varReplacer554 = 1;

        $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: boolean m_dirty> = varReplacer554;

        return;

     label2:
        $r6 = $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: android.database.sqlite.SQLiteDatabase mDb>;

        $r7 = newarray (java.lang.Object)[1];

        $r4 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r5 = $r4[0];

        $r7[0] = $r5;

        varReplacer558 = "%s = ?";

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer558, $r7);

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = $r1;

        varReplacer553 = "properties";

        virtualinvoke $r6.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>(varReplacer553, $r5, $r4);

        goto label1;
    }

    protected void createTables(android.database.sqlite.SQLiteDatabase)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String SQL_CREATE_TABLE>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        return;
    }

    protected byte[] generateHash()
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String[] $r1, $r6;
        java.lang.Throwable $r2, $r10;
        android.database.Cursor $r3, $r8;
        java.security.MessageDigest $r4;
        android.database.sqlite.SQLiteDatabase $r5;
        java.lang.String $r7, varReplacer525, varReplacer530, varReplacer531;
        boolean $z0;
        byte[] $r9;
        int $i0, varReplacer526, varReplacer528;
        null_type varReplacer527, varReplacer529, varReplacer532, varReplacer533, varReplacer534, varReplacer535, varReplacer536;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r3 = null;

     label01:
        varReplacer525 = "SHA-1";

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer525);

     label02:
        $r5 = $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: android.database.sqlite.SQLiteDatabase mDb>;

        $r1 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r6 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String[] COLUMNS>;

        $r7 = $r6[0];

     label03:
        varReplacer531 = "properties";

        varReplacer532 = null;

        varReplacer533 = null;

        varReplacer534 = null;

        varReplacer535 = null;

        varReplacer536 = null;

        $r8 = virtualinvoke $r5.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(varReplacer531, $r1, varReplacer532, varReplacer532, varReplacer532, varReplacer532, $r7, varReplacer532);

     label04:
        $r3 = $r8;

        if $r8 == null goto label14;

     label05:
        $z0 = interfaceinvoke $r8.<android.database.Cursor: boolean moveToNext()>();

     label06:
        if $z0 == 0 goto label14;

     label07:
        varReplacer526 = 1;

        $r9 = interfaceinvoke $r8.<android.database.Cursor: byte[] getBlob(int)>(varReplacer526);

     label08:
        $i0 = lengthof $r9;

     label09:
        varReplacer528 = 0;

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[],int,int)>($r9, varReplacer528, $i0);

     label10:
        goto label05;

     label11:
        $r2 := @caughtexception;

     label12:
        varReplacer530 = "BFSSecureDataStore.updateHash()";

        staticinvoke <com.backflipstudios.bf_core.debug.BFSDebug: void e(java.lang.String)>(varReplacer530);

     label13:
        if $r3 == null goto label18;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

        varReplacer529 = null;

        return varReplacer529;

     label14:
        $r9 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

     label15:
        if $r8 == null goto label19;

        interfaceinvoke $r8.<android.database.Cursor: void close()>();

        return $r9;

     label16:
        $r10 := @caughtexception;

        if $r3 == null goto label17;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label17:
        throw $r10;

     label18:
        varReplacer527 = null;

        return varReplacer527;

     label19:
        return $r9;

        catch java.security.NoSuchAlgorithmException from label01 to label02 with label11;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label11;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label11;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label11;
        catch java.security.NoSuchAlgorithmException from label09 to label10 with label11;
        catch java.lang.Throwable from label01 to label04 with label16;
        catch java.lang.Throwable from label05 to label06 with label16;
        catch java.lang.Throwable from label07 to label10 with label16;
        catch java.lang.Throwable from label12 to label13 with label16;
        catch java.security.NoSuchAlgorithmException from label14 to label15 with label11;
        catch java.lang.Throwable from label14 to label15 with label16;
    }

    protected int getDatabaseVersion()
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        int varReplacer604;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        varReplacer604 = 1;

        return varReplacer604;
    }

    public byte[] readData(java.lang.String)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1;
        byte[] $r2;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: byte[] readBytes(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.Float readFloat(java.lang.String)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1;
        byte[] $r2;
        java.nio.ByteBuffer $r3;
        java.lang.Float $r4;
        float $f0;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: byte[] readBytes(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r2);

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r4 = new java.lang.Float;

        $f0 = virtualinvoke $r3.<java.nio.ByteBuffer: float getFloat()>();

        specialinvoke $r4.<java.lang.Float: void <init>(float)>($f0);

        return $r4;

     label1:
        return null;
    }

    public java.lang.Integer readInt(java.lang.String)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1;
        byte[] $r2;
        java.nio.ByteBuffer $r3;
        java.lang.Integer $r4;
        int $i0;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: byte[] readBytes(java.lang.String)>($r1);

        if $r2 == null goto label1;

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r2);

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r4 = new java.lang.Integer;

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int getInt()>();

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>($i0);

        return $r4;

     label1:
        return null;
    }

    public java.lang.Object readObject(java.lang.String)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1, varReplacer521;
        java.io.ByteArrayInputStream $r2, $r6;
        java.io.ObjectInputStream $r3, $r5;
        java.lang.Object $r4;
        byte[] $r7;
        java.lang.Exception $r8, $r9, $r11, $r12, $r13, $r14, $r15;
        java.lang.Throwable $r10;
        null_type varReplacer519, varReplacer520, varReplacer522;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r4 = null;

        $r5 = null;

        $r6 = null;

     label01:
        $r7 = virtualinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: byte[] readData(java.lang.String)>($r1);

     label02:
        if $r7 == null goto label09;

     label03:
        $r2 = new java.io.ByteArrayInputStream;

     label04:
        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r7);

     label05:
        $r3 = new java.io.ObjectInputStream;

     label06:
        specialinvoke $r3.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r2);

     label07:
        $r4 = virtualinvoke $r3.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label08:
        $r6 = $r2;

        $r5 = $r3;

     label09:
        if $r5 == null goto label11;

     label10:
        virtualinvoke $r5.<java.io.ObjectInputStream: void close()>();

     label11:
        if $r6 == null goto label37;

     label12:
        virtualinvoke $r6.<java.io.ByteArrayInputStream: void close()>();

     label13:
        return $r4;

     label14:
        $r8 := @caughtexception;

     label15:
        varReplacer521 = "BFSSimpleSecureDataStore.readObject()";

        staticinvoke <com.backflipstudios.bf_core.debug.BFSDebug: void e(java.lang.String,java.lang.Throwable)>(varReplacer521, $r8);

     label16:
        if $r5 == null goto label18;

     label17:
        virtualinvoke $r5.<java.io.ObjectInputStream: void close()>();

     label18:
        if $r6 == null goto label38;

     label19:
        virtualinvoke $r6.<java.io.ByteArrayInputStream: void close()>();

     label20:
        varReplacer522 = null;

        return varReplacer522;

     label21:
        $r9 := @caughtexception;

        varReplacer519 = null;

        return varReplacer519;

     label22:
        $r10 := @caughtexception;

     label23:
        if $r5 == null goto label25;

     label24:
        virtualinvoke $r5.<java.io.ObjectInputStream: void close()>();

     label25:
        if $r6 == null goto label27;

     label26:
        virtualinvoke $r6.<java.io.ByteArrayInputStream: void close()>();

     label27:
        throw $r10;

     label28:
        $r11 := @caughtexception;

        goto label11;

     label29:
        $r12 := @caughtexception;

        return $r4;

     label30:
        $r13 := @caughtexception;

        goto label18;

     label31:
        $r14 := @caughtexception;

        goto label25;

     label32:
        $r15 := @caughtexception;

        goto label27;

     label33:
        $r10 := @caughtexception;

        $r6 = $r2;

        goto label23;

     label34:
        $r10 := @caughtexception;

        $r6 = $r2;

        $r5 = $r3;

        goto label23;

     label35:
        $r8 := @caughtexception;

        $r6 = $r2;

        goto label15;

     label36:
        $r8 := @caughtexception;

        $r6 = $r2;

        $r5 = $r3;

        goto label15;

     label37:
        return $r4;

     label38:
        varReplacer520 = null;

        return varReplacer520;

        catch java.lang.Exception from label01 to label02 with label14;
        catch java.lang.Exception from label04 to label05 with label14;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label03 to label05 with label22;
        catch java.lang.Exception from label06 to label07 with label35;
        catch java.lang.Throwable from label05 to label07 with label33;
        catch java.lang.Exception from label07 to label08 with label36;
        catch java.lang.Throwable from label07 to label08 with label34;
        catch java.lang.Exception from label10 to label11 with label28;
        catch java.lang.Exception from label12 to label13 with label29;
        catch java.lang.Throwable from label15 to label16 with label22;
        catch java.lang.Exception from label17 to label18 with label30;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Exception from label24 to label25 with label31;
        catch java.lang.Exception from label26 to label27 with label32;
    }

    public java.lang.String readString(java.lang.String)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1;
        byte[] $r2;
        java.lang.Throwable $r3;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: byte[] readBytes(java.lang.String)>($r1);

        if $r2 == null goto label4;

        $r1 = new java.lang.String;

     label1:
        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "UTF-8");

     label2:
        return $r1;

     label3:
        $r3 := @caughtexception;

     label4:
        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    protected void resetData(android.database.sqlite.SQLiteDatabase)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        java.lang.String $r2;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $r2 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String SQL_DROP_TABLE>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        $r2 = <com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: java.lang.String SQL_CREATE_TABLE>;

        virtualinvoke $r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>($r2);

        return;
    }

    protected void upgradeDatabase(android.database.sqlite.SQLiteDatabase, int)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        android.database.sqlite.SQLiteDatabase $r1;
        int $i0;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        $i0 := @parameter1: int;

        return;
    }

    public void writeData(java.lang.String, byte[])
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1;
        byte[] $r2;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: byte[];

        specialinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: void writeBytes(java.lang.String,byte[])>($r1, $r2);

        return;
    }

    public void writeFloat(java.lang.String, java.lang.Float)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1;
        java.lang.Float $r2;
        byte[] $r3;
        java.nio.ByteBuffer $r4;
        float $f0;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Float;

        $r3 = null;

        if $r2 == null goto label1;

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);

        $f0 = virtualinvoke $r2.<java.lang.Float: float floatValue()>();

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer putFloat(float)>($f0);

        $r3 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

     label1:
        specialinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: void writeBytes(java.lang.String,byte[])>($r1, $r3);

        return;
    }

    public void writeInt(java.lang.String, java.lang.Integer)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1;
        java.lang.Integer $r2;
        byte[] $r3;
        java.nio.ByteBuffer $r4;
        int $i0;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Integer;

        $r3 = null;

        if $r2 == null goto label1;

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i0);

        $r3 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

     label1:
        specialinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: void writeBytes(java.lang.String,byte[])>($r1, $r3);

        return;
    }

    public void writeObject(java.lang.String, java.lang.Object)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1, varReplacer551;
        java.lang.Object $r2;
        java.io.ByteArrayOutputStream $r3, $r8;
        java.io.ObjectOutputStream $r4, $r7;
        byte[] $r5, $r6;
        java.lang.Exception $r9, $r10, $r12, $r13, $r14, $r15, $r16;
        java.lang.Throwable $r11;

        nop;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r6 = null;

        if $r2 == null goto label10;

        $r7 = null;

        $r8 = null;

     label01:
        $r3 = new java.io.ByteArrayOutputStream;

     label02:
        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

     label03:
        $r4 = new java.io.ObjectOutputStream;

     label04:
        specialinvoke $r4.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r3);

     label05:
        virtualinvoke $r4.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r2);

        virtualinvoke $r4.<java.io.ObjectOutputStream: void flush()>();

        $r5 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label06:
        $r6 = $r5;

        if $r4 == null goto label08;

     label07:
        virtualinvoke $r4.<java.io.ObjectOutputStream: void close()>();

     label08:
        if $r3 == null goto label10;

     label09:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void close()>();

     label10:
        virtualinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: void writeData(java.lang.String,byte[])>($r1, $r6);

        return;

     label11:
        $r9 := @caughtexception;

     label12:
        varReplacer551 = "BFSSimpleSecureDataStore.writeObject()";

        staticinvoke <com.backflipstudios.bf_core.debug.BFSDebug: void e(java.lang.String,java.lang.Throwable)>(varReplacer551, $r9);

     label13:
        if $r7 == null goto label15;

     label14:
        virtualinvoke $r7.<java.io.ObjectOutputStream: void close()>();

     label15:
        if $r8 == null goto label10;

     label16:
        virtualinvoke $r8.<java.io.ByteArrayOutputStream: void close()>();

     label17:
        goto label10;

     label18:
        $r10 := @caughtexception;

        goto label10;

     label19:
        $r11 := @caughtexception;

     label20:
        if $r7 == null goto label22;

     label21:
        virtualinvoke $r7.<java.io.ObjectOutputStream: void close()>();

     label22:
        if $r8 == null goto label24;

     label23:
        virtualinvoke $r8.<java.io.ByteArrayOutputStream: void close()>();

     label24:
        throw $r11;

     label25:
        $r12 := @caughtexception;

        goto label08;

     label26:
        $r13 := @caughtexception;

        goto label10;

     label27:
        $r14 := @caughtexception;

        goto label15;

     label28:
        $r15 := @caughtexception;

        goto label22;

     label29:
        $r16 := @caughtexception;

        goto label24;

     label30:
        $r11 := @caughtexception;

        $r8 = $r3;

        goto label20;

     label31:
        $r11 := @caughtexception;

        $r8 = $r3;

        $r7 = $r4;

        goto label20;

     label32:
        $r9 := @caughtexception;

        $r8 = $r3;

        goto label12;

     label33:
        $r9 := @caughtexception;

        $r8 = $r3;

        $r7 = $r4;

        goto label12;

        catch java.lang.Exception from label02 to label03 with label11;
        catch java.lang.Throwable from label01 to label03 with label19;
        catch java.lang.Exception from label04 to label05 with label32;
        catch java.lang.Throwable from label03 to label05 with label30;
        catch java.lang.Exception from label05 to label06 with label33;
        catch java.lang.Throwable from label05 to label06 with label31;
        catch java.lang.Exception from label07 to label08 with label25;
        catch java.lang.Exception from label09 to label10 with label26;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Exception from label14 to label15 with label27;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label21 to label22 with label28;
        catch java.lang.Exception from label23 to label24 with label29;
    }

    public void writeString(java.lang.String, java.lang.String)
    {
        com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore $r0;
        java.lang.String $r1, $r2;
        byte[] $r3, $r4;
        java.lang.Throwable $r5;

        $r0 := @this: com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r4 = null;

        if $r2 == null goto label3;

     label1:
        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        $r4 = $r3;

     label3:
        specialinvoke $r0.<com.backflipstudios.bf_core.data.BFSSimpleSecureDataStore: void writeBytes(java.lang.String,byte[])>($r1, $r4);

        return;

     label4:
        $r5 := @caughtexception;

        goto label3;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }
}
