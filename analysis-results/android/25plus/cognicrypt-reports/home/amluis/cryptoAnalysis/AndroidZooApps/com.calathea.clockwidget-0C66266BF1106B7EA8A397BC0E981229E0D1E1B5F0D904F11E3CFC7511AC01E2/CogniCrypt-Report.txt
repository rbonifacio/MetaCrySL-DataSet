Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2513)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 2011a10a3403256c3c955c9f565074ddc631a4f46d48cf81ec66771fa67891ec
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.calathea.clockwidget.utils.Utils: java.lang.String getSHA1(java.lang.String)>
		SHA-256: a08359b613d2fb83e028321ac84e4f559f4b853d299d032d5f914f5c31ff79b2
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2575)
		Method: <com.calathea.clockwidget.net.RemoteAgent: okhttp3.OkHttpClient getUnsafeOkHttpClient()>
		SHA-256: 2116c285019a5c3074f07c367e5f998ebb1ba1deb3a718c9367f7bd7c686a3f7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5843)
		Method: <com.calathea.clockwidget.utils.Utils: java.lang.String getSHA1(java.lang.String)>
		SHA-256: b930950538680d2d203c3d91daa6711f38880b791a347c809f00845faa0c8932
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.calathea.clockwidget.utils.Utils: java.lang.String getSha256(java.lang.String)>
		SHA-256: 61445fe378c4ea7fb0f47896e24b2b9380951c6fecb2d5607a919b56722b7858
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5377)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: f7382846f156752b3f07fa59d4f5c22fba3c9138dac2f299829dd0c1064d3ebb
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5918)
		Method: <com.calathea.clockwidget.utils.Utils: java.lang.String getSha256(java.lang.String)>
		SHA-256: f304b32315081b34687b22779da62ea5db4de82e0f1a0bbc9f2a4508fdd05242
		Secure: true
	Object:
		Variable: r11
		Type: java.security.SecureRandom
		Statement: specialinvoke r11.<java.security.SecureRandom: void <init>()>()
		Method: <com.calathea.clockwidget.net.RemoteAgent: okhttp3.OkHttpClient getUnsafeOkHttpClient()>
		SHA-256: e546ed694bae1b13888eed129a0042f74069d873d354bff6f4749fe5804328a9
		Secure: true

Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2514, varReplacer2514, varReplacer2514)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2514, varReplacer2514, varReplacer2514)


Findings in Java Class: com.calathea.clockwidget.net.RemoteAgent

	 in Method: okhttp3.OkHttpClient getUnsafeOkHttpClient()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2574, r15, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2574, r15, $r6)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 9

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
=====================================================================