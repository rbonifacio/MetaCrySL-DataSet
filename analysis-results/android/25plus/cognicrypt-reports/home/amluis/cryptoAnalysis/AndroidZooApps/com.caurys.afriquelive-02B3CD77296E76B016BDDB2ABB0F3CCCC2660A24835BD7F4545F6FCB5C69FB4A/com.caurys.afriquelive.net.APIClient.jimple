public class com.caurys.afriquelive.net.APIClient extends java.lang.Object
{

    public void <init>()
    {
        com.caurys.afriquelive.net.APIClient $r0;

        $r0 := @this: com.caurys.afriquelive.net.APIClient;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static okhttp3.OkHttpClient getUnsafeOkHttpClient()
    {
        java.lang.Exception $r0;
        java.lang.Throwable $r1;
        java.lang.Object[] $r2;
        com.caurys.afriquelive.net.APIClient$2 $r3, r12;
        com.caurys.afriquelive.net.APIClient$1 $r4, r10;
        javax.net.ssl.SSLContext $r5;
        java.security.SecureRandom $r6, r11;
        javax.net.ssl.SSLSocketFactory $r7;
        okhttp3.OkHttpClient$Builder $r8, r13;
        okhttp3.OkHttpClient $r9;
        java.lang.RuntimeException r14;
        javax.net.ssl.TrustManager[] r15;
        java.lang.String varReplacer2498, varReplacer2500;
        null_type varReplacer2499;

     label01:
        nop;

        $r2 = newarray (javax.net.ssl.TrustManager)[1];

     label02:
        r10 = new com.caurys.afriquelive.net.APIClient$1;

        $r4 = r10;

     label03:
        specialinvoke r10.<com.caurys.afriquelive.net.APIClient$1: void <init>()>();

        $r2[0] = $r4;

     label04:
        varReplacer2500 = "SSL";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2500);

     label05:
        r11 = new java.security.SecureRandom;

        $r6 = r11;

     label06:
        specialinvoke r11.<java.security.SecureRandom: void <init>()>();

        r15 = (javax.net.ssl.TrustManager[]) $r2;

        varReplacer2499 = null;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2499, r15, $r6);

        $r7 = virtualinvoke $r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label07:
        r12 = new com.caurys.afriquelive.net.APIClient$2;

        $r3 = r12;

     label08:
        specialinvoke r12.<com.caurys.afriquelive.net.APIClient$2: void <init>()>();

     label09:
        r13 = new okhttp3.OkHttpClient$Builder;

        $r8 = r13;

     label10:
        specialinvoke r13.<okhttp3.OkHttpClient$Builder: void <init>()>();

        $r8 = virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)>($r7);

        $r8 = virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)>($r3);

        $r9 = virtualinvoke $r8.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>();

     label11:
        return $r9;

     label12:
        $r1 := @caughtexception;

     label13:
        varReplacer2498 = "TLS";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2498);

     label14:
        goto label05;

     label15:
        $r0 := @caughtexception;

        r14 = new java.lang.RuntimeException;

        specialinvoke r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r0);

        throw r14;

        catch java.lang.Exception from label01 to label02 with label15;
        catch java.lang.Exception from label03 to label04 with label15;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label12;
        catch java.lang.Exception from label04 to label05 with label15;
        catch java.lang.Exception from label06 to label07 with label15;
        catch java.lang.Exception from label08 to label09 with label15;
        catch java.lang.Exception from label10 to label11 with label15;
        catch java.lang.Exception from label13 to label14 with label15;
    }
}
