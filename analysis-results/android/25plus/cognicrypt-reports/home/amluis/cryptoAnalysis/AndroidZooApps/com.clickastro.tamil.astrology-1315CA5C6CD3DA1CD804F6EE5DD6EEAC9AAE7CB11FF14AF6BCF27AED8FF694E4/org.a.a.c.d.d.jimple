public final class org.a.a.c.d.d extends java.lang.Object implements org.a.a.c.c.b, org.a.a.c.c.d
{
    public static final org.a.a.c.d.f a;
    public static final org.a.a.c.d.f b;
    public static final org.a.a.c.d.f c;
    private final javax.net.ssl.SSLSocketFactory d;
    private final org.a.a.c.c.a e;
    private volatile org.a.a.c.d.f f;

    static void <clinit>()
    {
        org.a.a.c.d.b $r0;
        org.a.a.c.d.c $r1;
        org.a.a.c.d.e $r2;

        nop;

        $r0 = new org.a.a.c.d.b;

        specialinvoke $r0.<org.a.a.c.d.b: void <init>()>();

        <org.a.a.c.d.d: org.a.a.c.d.f a> = $r0;

        $r1 = new org.a.a.c.d.c;

        specialinvoke $r1.<org.a.a.c.d.c: void <init>()>();

        <org.a.a.c.d.d: org.a.a.c.d.f b> = $r1;

        $r2 = new org.a.a.c.d.e;

        specialinvoke $r2.<org.a.a.c.d.e: void <init>()>();

        <org.a.a.c.d.d: org.a.a.c.d.f c> = $r2;

        return;
    }

    private void <init>()
    {
        org.a.a.c.d.d $r0;
        javax.net.ssl.SSLContext $r1;

        nop;

        $r0 := @this: org.a.a.c.d.d;

        $r1 = staticinvoke <org.a.a.c.d.d: javax.net.ssl.SSLContext d()>();

        specialinvoke $r0.<org.a.a.c.d.d: void <init>(javax.net.ssl.SSLContext)>($r1);

        return;
    }

    private void <init>(javax.net.ssl.SSLContext)
    {
        org.a.a.c.d.d $r0;
        javax.net.ssl.SSLContext $r1;
        org.a.a.c.d.f $r2;

        nop;

        $r0 := @this: org.a.a.c.d.d;

        $r1 := @parameter0: javax.net.ssl.SSLContext;

        $r2 = <org.a.a.c.d.d: org.a.a.c.d.f b>;

        specialinvoke $r0.<org.a.a.c.d.d: void <init>(javax.net.ssl.SSLContext,org.a.a.c.d.f)>($r1, $r2);

        return;
    }

    private void <init>(javax.net.ssl.SSLContext, org.a.a.c.d.f)
    {
        org.a.a.c.d.d $r0;
        javax.net.ssl.SSLContext $r1;
        org.a.a.c.d.f $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        null_type varReplacer14731;

        nop;

        $r0 := @this: org.a.a.c.d.d;

        $r1 := @parameter0: javax.net.ssl.SSLContext;

        $r2 := @parameter1: org.a.a.c.d.f;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r0.<org.a.a.c.d.d: javax.net.ssl.SSLSocketFactory d> = $r3;

        $r0.<org.a.a.c.d.d: org.a.a.c.d.f f> = $r2;

        varReplacer14731 = null;

        $r0.<org.a.a.c.d.d: org.a.a.c.c.a e> = varReplacer14731;

        return;
    }

    public static org.a.a.c.d.d c()
    {
        org.a.a.c.d.d $r0;

        nop;

        $r0 = new org.a.a.c.d.d;

        specialinvoke $r0.<org.a.a.c.d.d: void <init>()>();

        return $r0;
    }

    private static javax.net.ssl.SSLContext d()
    {
        java.lang.String $r0, varReplacer14727, varReplacer14728;
        javax.net.ssl.KeyManagerFactory $r1;
        javax.net.ssl.KeyManager[] $r2;
        javax.net.ssl.TrustManagerFactory $r3;
        javax.net.ssl.TrustManager[] $r4;
        javax.net.ssl.SSLContext $r5;
        java.lang.Exception $r6;
        java.lang.IllegalStateException $r7;
        null_type varReplacer14725, varReplacer14726, varReplacer14729, varReplacer14730;

     label1:
        nop;

        $r0 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r1 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r0);

        varReplacer14729 = null;

        varReplacer14730 = null;

        virtualinvoke $r1.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(varReplacer14729, varReplacer14729);

        $r2 = virtualinvoke $r1.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();

        $r0 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0);

        varReplacer14725 = null;

        virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer14725);

        $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        varReplacer14727 = "TLS";

        $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14727);

        varReplacer14726 = null;

        virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r2, $r4, varReplacer14726);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalStateException;

        varReplacer14728 = "Failure initializing default SSL context";

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(varReplacer14728, $r6);

        throw $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public final java.net.Socket a()
    {
        org.a.a.c.d.d $r0;
        java.net.Socket $r1;
        javax.net.ssl.SSLSocketFactory $r2;

        $r0 := @this: org.a.a.c.d.d;

        $r2 = $r0.<org.a.a.c.d.d: javax.net.ssl.SSLSocketFactory d>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r1;
    }

    public final java.net.Socket a(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.a.a.i.d)
    {
        org.a.a.c.d.d $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0, $i1;
        java.net.InetAddress $r3;
        org.a.a.i.d $r4;
        java.net.InetSocketAddress $r5, $r6;
        org.a.a.c.c.a $r7;

        $r0 := @this: org.a.a.c.d.d;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $r3 := @parameter3: java.net.InetAddress;

        $i1 := @parameter4: int;

        $r4 := @parameter5: org.a.a.i.d;

        $r6 = null;

        if $r3 != null goto label1;

        if $i1 <= 0 goto label3;

     label1:
        if $i1 >= 0 goto label2;

        $i1 = 0;

     label2:
        $r6 = new java.net.InetSocketAddress;

        specialinvoke $r6.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r3, $i1);

     label3:
        $r7 = $r0.<org.a.a.c.d.d: org.a.a.c.c.a e>;

        if $r7 == null goto label5;

        $r7 = $r0.<org.a.a.c.d.d: org.a.a.c.c.a e>;

        $r3 = interfaceinvoke $r7.<org.a.a.c.c.a: java.net.InetAddress a()>();

     label4:
        $r5 = new java.net.InetSocketAddress;

        specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r3, $i0);

        $r1 = virtualinvoke $r0.<org.a.a.c.d.d: java.net.Socket a(java.net.Socket,java.net.InetSocketAddress,java.net.InetSocketAddress,org.a.a.i.d)>($r1, $r5, $r6, $r4);

        return $r1;

     label5:
        $r3 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r2);

        goto label4;
    }

    public final java.net.Socket a(java.net.Socket, java.lang.String, int, boolean)
    {
        org.a.a.c.d.d $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;

        $r0 := @this: org.a.a.c.d.d;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r1 = virtualinvoke $r0.<org.a.a.c.d.d: java.net.Socket b(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        return $r1;
    }

    public final java.net.Socket a(java.net.Socket, java.net.InetSocketAddress, java.net.InetSocketAddress, org.a.a.i.d)
    {
        org.a.a.c.d.d $r0;
        java.net.Socket $r1;
        java.net.InetSocketAddress $r2, $r3;
        org.a.a.i.d $r4;
        java.lang.IllegalArgumentException $r5;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r7, $r9;
        java.lang.StringBuilder $r8;
        javax.net.ssl.SSLSocket $r10;
        org.a.a.c.d.f $r11;
        java.lang.Throwable $r12, $r15;
        org.a.a.c.f $r13;
        javax.net.ssl.SSLSocketFactory $r14;
        java.lang.Exception $r16;

        $r0 := @this: org.a.a.c.d.d;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.net.InetSocketAddress;

        $r3 := @parameter2: java.net.InetSocketAddress;

        $r4 := @parameter3: org.a.a.i.d;

        if $r4 != null goto label01;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r5;

     label01:
        if $r1 == null goto label10;

     label02:
        if $r3 == null goto label03;

        $z0 = staticinvoke <org.a.a.i.c: boolean b(org.a.a.i.d)>($r4);

        virtualinvoke $r1.<java.net.Socket: void setReuseAddress(boolean)>($z0);

        virtualinvoke $r1.<java.net.Socket: void bind(java.net.SocketAddress)>($r3);

     label03:
        $i0 = staticinvoke <org.a.a.i.c: int d(org.a.a.i.d)>($r4);

        $i1 = staticinvoke <org.a.a.i.c: int a(org.a.a.i.d)>($r4);

     label04:
        virtualinvoke $r1.<java.net.Socket: void setSoTimeout(int)>($i1);

        virtualinvoke $r1.<java.net.Socket: void connect(java.net.SocketAddress,int)>($r2, $i0);

     label05:
        $r6 = virtualinvoke $r2.<java.net.InetSocketAddress: java.lang.String toString()>();

        $r7 = $r6;

        $i0 = virtualinvoke $r2.<java.net.InetSocketAddress: int getPort()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>(":");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean endsWith(java.lang.String)>($r9);

        if $z0 == 0 goto label06;

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i1 = $i1 - $i2;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label06:
        $z0 = $r1 instanceof javax.net.ssl.SSLSocket;

        if $z0 == 0 goto label12;

        $r10 = (javax.net.ssl.SSLSocket) $r1;

     label07:
        $r11 = $r0.<org.a.a.c.d.d: org.a.a.c.d.f f>;

        if $r11 == null goto label17;

        $r11 = $r0.<org.a.a.c.d.d: org.a.a.c.d.f f>;

     label08:
        interfaceinvoke $r11.<org.a.a.c.d.f: void a(java.lang.String,javax.net.ssl.SSLSocket)>($r7, $r10);

     label09:
        return $r10;

     label10:
        $r1 = new java.net.Socket;

        specialinvoke $r1.<java.net.Socket: void <init>()>();

        goto label02;

     label11:
        $r12 := @caughtexception;

        $r13 = new org.a.a.c.f;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>(java.lang.String)>("Connect to ");

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timed out");

        $r6 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.a.a.c.f: void <init>(java.lang.String)>($r6);

        throw $r13;

     label12:
        $r14 = $r0.<org.a.a.c.d.d: javax.net.ssl.SSLSocketFactory d>;

        $r1 = virtualinvoke $r14.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r7, $i0, 1);

        $r10 = (javax.net.ssl.SSLSocket) $r1;

        goto label07;

     label13:
        $r15 := @caughtexception;

     label14:
        virtualinvoke $r10.<javax.net.ssl.SSLSocket: void close()>();

     label15:
        throw $r15;

     label16:
        $r16 := @caughtexception;

        goto label15;

     label17:
        return $r10;

        catch java.net.SocketTimeoutException from label04 to label05 with label11;
        catch java.io.IOException from label08 to label09 with label13;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    public final boolean a(java.net.Socket)
    {
        org.a.a.c.d.d $r0;
        java.net.Socket $r1;
        boolean $z0;
        java.lang.IllegalArgumentException $r2;

        $r0 := @this: org.a.a.c.d.d;

        $r1 := @parameter0: java.net.Socket;

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket may not be null");

        throw $r2;

     label1:
        $z0 = $r1 instanceof javax.net.ssl.SSLSocket;

        if $z0 != 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket not created by this factory");

        throw $r2;

     label2:
        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isClosed()>();

        if $z0 == 0 goto label3;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket is closed");

        throw $r2;

     label3:
        return 1;
    }

    public final java.net.Socket b()
    {
        org.a.a.c.d.d $r0;
        java.net.Socket $r1;
        javax.net.ssl.SSLSocketFactory $r2;

        $r0 := @this: org.a.a.c.d.d;

        $r2 = $r0.<org.a.a.c.d.d: javax.net.ssl.SSLSocketFactory d>;

        $r1 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r1;
    }

    public final java.net.Socket b(java.net.Socket, java.lang.String, int, boolean)
    {
        org.a.a.c.d.d $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLSocketFactory $r3;
        javax.net.ssl.SSLSocket $r4;
        org.a.a.c.d.f $r5;

        $r0 := @this: org.a.a.c.d.d;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<org.a.a.c.d.d: javax.net.ssl.SSLSocketFactory d>;

        $r1 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        $r4 = (javax.net.ssl.SSLSocket) $r1;

        $r5 = $r0.<org.a.a.c.d.d: org.a.a.c.d.f f>;

        if $r5 == null goto label1;

        $r5 = $r0.<org.a.a.c.d.d: org.a.a.c.d.f f>;

        interfaceinvoke $r5.<org.a.a.c.d.f: void a(java.lang.String,javax.net.ssl.SSLSocket)>($r2, $r4);

     label1:
        return $r4;
    }
}
