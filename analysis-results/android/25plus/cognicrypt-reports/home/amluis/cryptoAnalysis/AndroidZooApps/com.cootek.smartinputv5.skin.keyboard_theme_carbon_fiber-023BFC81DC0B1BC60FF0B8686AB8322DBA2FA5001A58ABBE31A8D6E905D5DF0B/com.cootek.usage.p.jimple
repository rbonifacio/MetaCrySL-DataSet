final class com.cootek.usage.p extends java.lang.Object
{
    private static final java.lang.String a;
    private static final char b;
    private static final java.lang.String c;
    private static final java.lang.String d;
    private static final java.lang.String e;
    private static final java.lang.String f;
    private static final java.lang.String g;
    private static final java.lang.String h;
    private static final java.lang.String i;
    private static final java.lang.String j;
    private static final java.lang.String k;
    private static final java.lang.String l;
    private static final java.lang.String m;
    private static final java.lang.String n;
    private static final int o;
    private static final int p;
    private static final int q;
    private static final int r;
    private static final int s;
    private static final int t;
    private static final int u;
    private final com.cootek.usage.AbsUsageAssist v;
    private final boolean w;
    private final java.lang.String x;
    private final java.util.ArrayList y;
    private final boolean z;

    void <init>(com.cootek.usage.AbsUsageAssist, boolean, java.lang.String, java.util.ArrayList, boolean)
    {
        com.cootek.usage.p $r0;
        com.cootek.usage.AbsUsageAssist $r1;
        boolean $z0, $z1;
        java.lang.String $r2, varReplacer5734;
        java.util.ArrayList $r3;
        int varReplacer5732, varReplacer5733;

        nop;

        $r0 := @this: com.cootek.usage.p;

        $r1 := @parameter0: com.cootek.usage.AbsUsageAssist;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: java.lang.String;

        $r3 := @parameter3: java.util.ArrayList;

        $z1 := @parameter4: boolean;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v> = $r1;

        varReplacer5732 = 1;

        $r0.<com.cootek.usage.p: boolean w> = varReplacer5732;

        varReplacer5734 = "noah_info";

        $r0.<com.cootek.usage.p: java.lang.String x> = varReplacer5734;

        $r0.<com.cootek.usage.p: java.util.ArrayList y> = $r3;

        varReplacer5733 = 1;

        $r0.<com.cootek.usage.p: boolean z> = varReplacer5733;

        return;
    }

    private org.apache.http.impl.client.DefaultHttpClient a(int)
    {
        com.cootek.usage.p $r0;
        int $i0, $i1;
        org.apache.http.params.BasicHttpParams $r1;
        org.apache.http.HttpVersion $r2;
        org.apache.http.conn.scheme.SchemeRegistry $r3;
        org.apache.http.conn.scheme.Scheme $r4;
        org.apache.http.conn.scheme.PlainSocketFactory $r5;
        com.cootek.usage.AbsUsageAssist $r6;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r7;
        org.apache.http.impl.client.DefaultHttpClient $r8;

        $r0 := @this: com.cootek.usage.p;

        $i0 := @parameter0: int;

        $r1 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r1.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r2 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>($r1, $r2);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>($r1, "UTF-8");

        $i1 = $i0 * 1000;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r1, $i1);

        $i0 = $i0 * 1000;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r1, $i0);

        $r3 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        $r4 = new org.apache.http.conn.scheme.Scheme;

        $r5 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        $r6 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $i0 = virtualinvoke $r6.<com.cootek.usage.AbsUsageAssist: int getHttpPort()>();

        specialinvoke $r4.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r5, $i0);

        virtualinvoke $r3.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>($r4);

        $r7 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        specialinvoke $r7.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r1, $r3);

        $r8 = new org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke $r8.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>($r7, $r1);

        return $r8;
    }

    private boolean a(org.apache.http.HttpResponse)
    {
        com.cootek.usage.p $r0;
        org.apache.http.HttpResponse $r1;
        org.apache.http.StatusLine $r2;
        int $i0, varReplacer5783, varReplacer5786, varReplacer5788, varReplacer5789, varReplacer5793, varReplacer5799, varReplacer5800, varReplacer5802;
        boolean $z0;
        java.lang.StringBuilder $r3, r40;
        java.lang.String $r4, $r13, varReplacer5784, varReplacer5785, varReplacer5787, varReplacer5790, varReplacer5791, varReplacer5792, varReplacer5794, varReplacer5795, varReplacer5796, varReplacer5797, varReplacer5798, varReplacer5801;
        org.apache.http.HttpEntity $r5;
        org.apache.http.Header $r6;
        java.io.InputStream $r7, $r8, r44;
        java.util.zip.GZIPInputStream $r9, r41;
        java.lang.Object $r10;
        java.io.ByteArrayOutputStream $r11, r42;
        byte[] $r12;
        org.json.JSONObject $r14, r43;
        java.lang.Throwable $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r37, $r38, $r39;
        com.cootek.usage.AbsUsageAssist $r32;
        org.json.JSONException $r33;
        java.lang.IllegalStateException r45;
        java.io.IOException r46;

        nop;

        $r0 := @this: com.cootek.usage.p;

        $r1 := @parameter0: org.apache.http.HttpResponse;

        if $r1 == null goto label01;

        $r2 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r2.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 == 200 goto label04;

     label01:
        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

        if $z0 == 0 goto label93;

        if $r1 != null goto label02;

        varReplacer5784 = "Usage/NetProcessor";

        varReplacer5785 = "Response is null";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5784, varReplacer5785);

        varReplacer5800 = 0;

        return varReplacer5800;

     label02:
        $r2 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        if $r2 != null goto label03;

        varReplacer5790 = "Usage/NetProcessor";

        varReplacer5791 = "StatusLine is null";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5790, varReplacer5791);

        varReplacer5788 = 0;

        return varReplacer5788;

     label03:
        r40 = new java.lang.StringBuilder;

        varReplacer5787 = "StatusCode: ";

        specialinvoke r40.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5787);

        $r2 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r2.<org.apache.http.StatusLine: int getStatusCode()>();

        $r3 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5792 = "Usage/NetProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5792, $r4);

        varReplacer5802 = 0;

        return varReplacer5802;

     label04:
        $r5 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        varReplacer5798 = "Content-Encoding";

        $r6 = interfaceinvoke $r1.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>(varReplacer5798);

        if $r6 == null goto label92;

        $r4 = interfaceinvoke $r6.<org.apache.http.Header: java.lang.String getValue()>();

        varReplacer5797 = "gzip";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(varReplacer5797);

        if $z0 == 0 goto label92;

        $z0 = 1;

     label05:
        $r7 = interfaceinvoke $r5.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

     label06:
        $r8 = $r7;

        if $z0 == 0 goto label91;

     label07:
        r41 = new java.util.zip.GZIPInputStream;

     label08:
        $r9 = r41;

     label09:
        specialinvoke r41.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r7);

     label10:
        $r10 = $r9;

     label11:
        r42 = new java.io.ByteArrayOutputStream;

     label12:
        $r11 = r42;

     label13:
        specialinvoke r42.<java.io.ByteArrayOutputStream: void <init>()>();

     label14:
        $r12 = newarray (byte)[4096];

     label15:
        r44 = (java.io.InputStream) $r10;

     label16:
        $i0 = virtualinvoke r44.<java.io.InputStream: int read(byte[])>($r12);

     label17:
        if $i0 > 0 goto label36;

     label18:
        virtualinvoke $r11.<java.io.ByteArrayOutputStream: void flush()>();

        $r12 = virtualinvoke $r11.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label19:
        $r13 = new java.lang.String;

     label20:
        $r4 = $r13;

     label21:
        varReplacer5796 = "UTF-8";

        specialinvoke $r13.<java.lang.String: void <init>(byte[],java.lang.String)>($r12, varReplacer5796);

     label22:
        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

     label23:
        if $z0 == 0 goto label27;

     label24:
        r40 = new java.lang.StringBuilder;

     label25:
        $r3 = r40;

     label26:
        varReplacer5795 = "response body: ";

        specialinvoke r40.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5795);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5794 = "Usage/NetProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5794, $r13);

     label27:
        virtualinvoke $r11.<java.io.ByteArrayOutputStream: void close()>();

     label28:
        if $r9 == null goto label30;

     label29:
        virtualinvoke $r9.<java.util.zip.GZIPInputStream: void close()>();

     label30:
        if $r7 == null goto label32;

     label31:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

     label32:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label93;

        r43 = new org.json.JSONObject;

        $r14 = r43;

     label33:
        specialinvoke r43.<org.json.JSONObject: void <init>(java.lang.String)>($r4);

        varReplacer5801 = "error_code";

        $i0 = virtualinvoke $r14.<org.json.JSONObject: int getInt(java.lang.String)>(varReplacer5801);

     label34:
        if $i0 == 0 goto label35;

        if $i0 != 1000 goto label76;

     label35:
        varReplacer5786 = 1;

        return varReplacer5786;

     label36:
        varReplacer5793 = 0;

        virtualinvoke $r11.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r12, varReplacer5793, $i0);

     label37:
        goto label15;

     label38:
        $r15 := @caughtexception;

        $r4 = null;

        $r16 = $r15;

     label39:
        r45 = (java.lang.IllegalStateException) $r16;

        virtualinvoke r45.<java.lang.IllegalStateException: void printStackTrace()>();

     label40:
        if $r11 == null goto label42;

     label41:
        virtualinvoke $r11.<java.io.ByteArrayOutputStream: void close()>();

     label42:
        if $r9 == null goto label44;

     label43:
        virtualinvoke $r9.<java.util.zip.GZIPInputStream: void close()>();

     label44:
        if $r8 == null goto label32;

     label45:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label46:
        goto label32;

     label47:
        $r17 := @caughtexception;

        r46 = (java.io.IOException) $r17;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label32;

     label48:
        $r18 := @caughtexception;

        r46 = (java.io.IOException) $r18;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label42;

     label49:
        $r19 := @caughtexception;

        r46 = (java.io.IOException) $r19;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label44;

     label50:
        $r20 := @caughtexception;

        $r9 = null;

        $r11 = null;

        $r8 = null;

        $r21 = $r20;

        $r4 = null;

     label51:
        r46 = (java.io.IOException) $r21;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

     label52:
        if $r11 == null goto label54;

     label53:
        virtualinvoke $r11.<java.io.ByteArrayOutputStream: void close()>();

     label54:
        if $r9 == null goto label56;

     label55:
        virtualinvoke $r9.<java.util.zip.GZIPInputStream: void close()>();

     label56:
        if $r8 == null goto label32;

     label57:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label58:
        goto label32;

     label59:
        $r22 := @caughtexception;

        r46 = (java.io.IOException) $r22;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label32;

     label60:
        $r23 := @caughtexception;

        r46 = (java.io.IOException) $r23;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label54;

     label61:
        $r24 := @caughtexception;

        r46 = (java.io.IOException) $r24;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label56;

     label62:
        $r25 := @caughtexception;

        $r9 = null;

        $r11 = null;

        $r8 = null;

     label63:
        if $r11 == null goto label65;

     label64:
        virtualinvoke $r11.<java.io.ByteArrayOutputStream: void close()>();

     label65:
        if $r9 == null goto label67;

     label66:
        virtualinvoke $r9.<java.util.zip.GZIPInputStream: void close()>();

     label67:
        if $r8 == null goto label69;

     label68:
        virtualinvoke $r8.<java.io.InputStream: void close()>();

     label69:
        throw $r25;

     label70:
        $r26 := @caughtexception;

        r46 = (java.io.IOException) $r26;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label65;

     label71:
        $r27 := @caughtexception;

        r46 = (java.io.IOException) $r27;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label67;

     label72:
        $r28 := @caughtexception;

        r46 = (java.io.IOException) $r28;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label69;

     label73:
        $r29 := @caughtexception;

        r46 = (java.io.IOException) $r29;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label28;

     label74:
        $r30 := @caughtexception;

        r46 = (java.io.IOException) $r30;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label30;

     label75:
        $r31 := @caughtexception;

        r46 = (java.io.IOException) $r31;

        virtualinvoke r46.<java.io.IOException: void printStackTrace()>();

        goto label32;

     label76:
        if $i0 != 1001 goto label93;

        $r32 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label77:
        virtualinvoke $r32.<com.cootek.usage.AbsUsageAssist: void onTokenInvalid()>();

     label78:
        varReplacer5789 = 0;

        return varReplacer5789;

     label79:
        $r33 := @caughtexception;

        virtualinvoke $r33.<org.json.JSONException: void printStackTrace()>();

        varReplacer5783 = 0;

        return varReplacer5783;

     label80:
        $r25 := @caughtexception;

        $r9 = null;

        $r11 = null;

        goto label63;

     label81:
        $r25 := @caughtexception;

        $r11 = null;

        goto label63;

     label82:
        $r25 := @caughtexception;

        goto label63;

     label83:
        $r34 := @caughtexception;

        $r9 = null;

        $r11 = null;

        $r4 = null;

        $r21 = $r34;

        goto label51;

     label84:
        $r35 := @caughtexception;

        $r11 = null;

        $r4 = null;

        $r21 = $r35;

        goto label51;

     label85:
        $r36 := @caughtexception;

        $r4 = null;

        $r21 = $r36;

        goto label51;

     label86:
        $r21 := @caughtexception;

        goto label51;

     label87:
        $r37 := @caughtexception;

        $r9 = null;

        $r11 = null;

        $r8 = null;

        $r16 = $r37;

        $r4 = null;

        goto label39;

     label88:
        $r38 := @caughtexception;

        $r9 = null;

        $r11 = null;

        $r4 = null;

        $r16 = $r38;

        goto label39;

     label89:
        $r39 := @caughtexception;

        $r11 = null;

        $r4 = null;

        $r16 = $r39;

        goto label39;

     label90:
        $r16 := @caughtexception;

        goto label39;

     label91:
        $r9 = null;

        $r10 = $r7;

        goto label11;

     label92:
        $z0 = 0;

        goto label05;

     label93:
        varReplacer5799 = 0;

        return varReplacer5799;

        catch java.lang.IllegalStateException from label05 to label06 with label87;
        catch java.io.IOException from label05 to label06 with label50;
        catch java.lang.Throwable from label05 to label06 with label62;
        catch java.lang.IllegalStateException from label09 to label10 with label88;
        catch java.io.IOException from label09 to label10 with label83;
        catch java.lang.Throwable from label07 to label08 with label80;
        catch java.lang.Throwable from label09 to label10 with label80;
        catch java.lang.IllegalStateException from label13 to label14 with label89;
        catch java.io.IOException from label13 to label14 with label84;
        catch java.lang.Throwable from label11 to label12 with label81;
        catch java.lang.Throwable from label13 to label14 with label81;
        catch java.lang.IllegalStateException from label16 to label17 with label38;
        catch java.lang.IllegalStateException from label18 to label19 with label38;
        catch java.lang.IllegalStateException from label21 to label22 with label38;
        catch java.io.IOException from label16 to label17 with label85;
        catch java.io.IOException from label18 to label19 with label85;
        catch java.io.IOException from label21 to label22 with label85;
        catch java.lang.Throwable from label14 to label17 with label82;
        catch java.lang.Throwable from label18 to label20 with label82;
        catch java.lang.Throwable from label21 to label22 with label82;
        catch java.lang.IllegalStateException from label22 to label23 with label90;
        catch java.lang.IllegalStateException from label26 to label27 with label90;
        catch java.io.IOException from label22 to label23 with label86;
        catch java.io.IOException from label26 to label27 with label86;
        catch java.lang.Throwable from label22 to label23 with label82;
        catch java.lang.Throwable from label24 to label25 with label82;
        catch java.lang.Throwable from label26 to label27 with label82;
        catch java.io.IOException from label27 to label28 with label73;
        catch java.io.IOException from label29 to label30 with label74;
        catch java.io.IOException from label31 to label32 with label75;
        catch org.json.JSONException from label33 to label34 with label79;
        catch java.lang.IllegalStateException from label36 to label37 with label38;
        catch java.io.IOException from label36 to label37 with label85;
        catch java.lang.Throwable from label36 to label37 with label82;
        catch java.lang.Throwable from label39 to label40 with label82;
        catch java.io.IOException from label41 to label42 with label48;
        catch java.io.IOException from label43 to label44 with label49;
        catch java.io.IOException from label45 to label46 with label47;
        catch java.lang.Throwable from label51 to label52 with label82;
        catch java.io.IOException from label53 to label54 with label60;
        catch java.io.IOException from label55 to label56 with label61;
        catch java.io.IOException from label57 to label58 with label59;
        catch java.io.IOException from label64 to label65 with label70;
        catch java.io.IOException from label66 to label67 with label71;
        catch java.io.IOException from label68 to label69 with label72;
        catch org.json.JSONException from label77 to label78 with label79;
    }

    private java.net.URI b()
    {
        com.cootek.usage.p $r0;
        java.lang.StringBuilder $r1, $r4;
        com.cootek.usage.AbsUsageAssist $r2;
        java.lang.String $r3, $r6;
        int $i0, $i2;
        long $l1;
        boolean $z0;
        java.net.URI $r5;

        $r0 := @this: com.cootek.usage.p;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://");

        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getServerAddress()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(47);

        if $i0 != -1 goto label3;

        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getServerAddress()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $i0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getHttpPort()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

     label1:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/statistic/usage?type=");

        $r3 = $r0.<com.cootek.usage.p: java.lang.String x>;

        $r3 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&send_time=");

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

        if $z0 == 0 goto label2;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>("request uri: ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Usage/NetProcessor", $r3);

     label2:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r3);

        return $r5;

     label3:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getServerAddress()>();

        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $r6 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getServerAddress()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(47);

        $r6 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $i2 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getHttpPort()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label1;
    }

    private org.apache.http.client.methods.HttpPost c()
    {
        com.cootek.usage.p $r0;
        org.apache.http.client.methods.HttpPost $r1, r50;
        java.util.zip.GZIPOutputStream $r2, $r35, r56;
        java.lang.String $r3, $r5, varReplacer5755, varReplacer5756, varReplacer5758, varReplacer5759, varReplacer5760, varReplacer5761, varReplacer5762, varReplacer5763, varReplacer5764, varReplacer5765, varReplacer5767, varReplacer5769, varReplacer5770, varReplacer5772, varReplacer5773, varReplacer5774, varReplacer5775, varReplacer5776, varReplacer5777, varReplacer5778, varReplacer5779, varReplacer5780, varReplacer5781, varReplacer5782;
        com.cootek.usage.AbsUsageAssist $r4;
        java.lang.Object[] $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, r51;
        org.json.JSONObject $r8, $r22, r54;
        org.json.JSONArray $r9, r52;
        java.util.ArrayList $r10;
        java.util.Iterator $r11;
        java.util.UUID $r12;
        java.security.MessageDigest $r13;
        byte[] $r14, $r16;
        java.security.spec.X509EncodedKeySpec $r15, r53;
        java.security.KeyFactory $r17;
        java.security.PublicKey $r18;
        javax.crypto.Cipher $r19;
        java.lang.Object $r20;
        com.cootek.usage.UsageData $r21;
        org.json.JSONException $r23, $r24, $r25;
        java.lang.Throwable $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49;
        java.lang.Error $r33;
        java.io.ByteArrayOutputStream $r34, r55;
        int $i0, varReplacer5757, varReplacer5766, varReplacer5771;
        org.apache.http.entity.ByteArrayEntity $r36, r57;
        org.apache.http.entity.StringEntity $r37, r58;
        java.security.InvalidKeyException r59;
        java.security.NoSuchAlgorithmException r60;
        java.security.spec.InvalidKeySpecException r61;
        javax.crypto.NoSuchPaddingException r62;
        javax.crypto.IllegalBlockSizeException r63;
        javax.crypto.BadPaddingException r64;
        java.io.IOException r65;
        java.io.UnsupportedEncodingException r66;
        null_type varReplacer5768;

        nop;

        $r0 := @this: com.cootek.usage.p;

        $r2 = null;

        r50 = new org.apache.http.client.methods.HttpPost;

        $r1 = r50;

        specialinvoke r50.<org.apache.http.client.methods.HttpPost: void <init>()>();

        $r3 = "";

        $r4 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $r5 = virtualinvoke $r4.<com.cootek.usage.AbsUsageAssist: java.lang.String getToken()>();

        if $r5 == null goto label001;

        $r6 = newarray (java.lang.Object)[1];

        $r4 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $r3 = virtualinvoke $r4.<com.cootek.usage.AbsUsageAssist: java.lang.String getToken()>();

        $r6[0] = $r3;

        varReplacer5767 = "auth_token=\"%s\"";

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(varReplacer5767, $r6);

     label001:
        varReplacer5761 = "Cookie";

        virtualinvoke $r1.<org.apache.http.client.methods.HttpPost: void setHeader(java.lang.String,java.lang.String)>(varReplacer5761, $r3);

        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

        if $z0 == 0 goto label002;

        r51 = new java.lang.StringBuilder;

        varReplacer5779 = "request cookie: ";

        specialinvoke r51.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5779);

        $r7 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5780 = "Usage/NetProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5780, $r3);

     label002:
        $r22 = new org.json.JSONObject;

        $r8 = $r22;

     label003:
        specialinvoke $r22.<org.json.JSONObject: void <init>()>();

     label004:
        r52 = new org.json.JSONArray;

        $r9 = r52;

     label005:
        specialinvoke r52.<org.json.JSONArray: void <init>()>();

     label006:
        $r10 = $r0.<com.cootek.usage.p: java.util.ArrayList y>;

     label007:
        $r11 = virtualinvoke $r10.<java.util.ArrayList: java.util.Iterator iterator()>();

     label008:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

     label009:
        if $z0 != 0 goto label024;

        $z0 = $r0.<com.cootek.usage.p: boolean z>;

        if $z0 == 0 goto label061;

     label010:
        $r12 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r3 = virtualinvoke $r12.<java.util.UUID: java.lang.String toString()>();

        varReplacer5764 = "SHA-256";

        $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5764);

        $r14 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r13.<java.security.MessageDigest: void update(byte[])>($r14);

        $r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw5()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw6()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw7()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw8()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw9()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw10()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw11()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw1()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw12()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw13()>();

        staticinvoke <FLOWDROID_EXCEPTIONS: void throw3()>();

        $r3 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA20-Yife_IVl-wfWptGEKOzAekD1OWM5rbF8WdDohHznBZPgrXS0mCnSA7Lg1Qs_R470y8IYeFtql6gU2HPi1aBDxDdbYGeJj8qA5VQD9KIsLijY1qmAXnhJKna88Eqoy9AJF8cC7qocTcZ5pyz64x3QFl8QNGbrjEKrjJR05i4lm5eECzGgqaQ_z2hEbGEChFR_dJtOXV2sSue8x-ZFi-UHCuCoHd2_4SOytSBipavSyB1Pt9a0RBOaz2627uuKSQrSpUXa8DFZDNUKIeiXoKYoGwaICVSRcexKoBLPUjcXRQHVKjTYo7GSmQsSNORq2taoLiN4o3ee9MkPpnLUWuwIDAQAB";

     label011:
        r53 = new java.security.spec.X509EncodedKeySpec;

     label012:
        $r15 = r53;

     label013:
        varReplacer5756 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA20-Yife_IVl-wfWptGEKOzAekD1OWM5rbF8WdDohHznBZPgrXS0mCnSA7Lg1Qs_R470y8IYeFtql6gU2HPi1aBDxDdbYGeJj8qA5VQD9KIsLijY1qmAXnhJKna88Eqoy9AJF8cC7qocTcZ5pyz64x3QFl8QNGbrjEKrjJR05i4lm5eECzGgqaQ_z2hEbGEChFR_dJtOXV2sSue8x-ZFi-UHCuCoHd2_4SOytSBipavSyB1Pt9a0RBOaz2627uuKSQrSpUXa8DFZDNUKIeiXoKYoGwaICVSRcexKoBLPUjcXRQHVKjTYo7GSmQsSNORq2taoLiN4o3ee9MkPpnLUWuwIDAQAB";

        varReplacer5757 = 8;

        $r16 = staticinvoke <com.cootek.usage.a: byte[] a(java.lang.String,int)>(varReplacer5756, varReplacer5757);

        specialinvoke r53.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r16);

        varReplacer5781 = "RSA";

        $r17 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer5781);

        $r18 = virtualinvoke $r17.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r15);

        varReplacer5762 = "RSA/ECB/PKCS1PADDING";

        $r19 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5762);

        varReplacer5771 = 1;

        virtualinvoke $r19.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer5771, $r18);

        $r16 = virtualinvoke $r19.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14);

        varReplacer5766 = 8;

        $r3 = staticinvoke <com.cootek.usage.a: java.lang.String a(byte[],int)>($r16, varReplacer5766);

        varReplacer5778 = "data_key";

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer5778, $r3);

        $r3 = virtualinvoke $r9.<org.json.JSONArray: java.lang.String toString()>();

        $r3 = staticinvoke <com.cootek.usage.e: java.lang.String a(java.lang.String,byte[])>($r3, $r14);

        varReplacer5774 = "data_encode";

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer5774, $r3);

     label014:
        $z0 = 0;

     label015:
        if $z0 == 0 goto label019;

        $r22 = new org.json.JSONObject;

        $r8 = $r22;

     label016:
        specialinvoke $r22.<org.json.JSONObject: void <init>()>();

     label017:
        r52 = new org.json.JSONArray;

        $r9 = r52;

     label018:
        specialinvoke r52.<org.json.JSONArray: void <init>()>();

        varReplacer5782 = "data";

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer5782, $r9);

     label019:
        $r3 = virtualinvoke $r8.<org.json.JSONObject: java.lang.String toString()>();

     label020:
        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

     label021:
        if $z0 == 0 goto label023;

        r51 = new java.lang.StringBuilder;

        $r7 = r51;

     label022:
        varReplacer5755 = "request body: ";

        specialinvoke r51.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5755);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5772 = "Usage/NetProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5772, $r5);

     label023:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label063;

        varReplacer5768 = null;

        return varReplacer5768;

     label024:
        $r20 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

     label025:
        $r21 = (com.cootek.usage.UsageData) $r20;

        r54 = new org.json.JSONObject;

        $r22 = r54;

     label026:
        specialinvoke r54.<org.json.JSONObject: void <init>()>();

     label027:
        $r3 = $r21.<com.cootek.usage.UsageData: java.lang.String path>;

     label028:
        varReplacer5769 = "path";

        virtualinvoke $r22.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer5769, $r3);

     label029:
        $r3 = $r21.<com.cootek.usage.UsageData: java.lang.String value>;

     label030:
        varReplacer5763 = "value";

        virtualinvoke $r22.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer5763, $r3);

        virtualinvoke $r9.<org.json.JSONArray: org.json.JSONArray put(java.lang.Object)>($r22);

     label031:
        goto label008;

     label032:
        $r23 := @caughtexception;

        $r24 = $r23;

        $r3 = null;

     label033:
        virtualinvoke $r24.<org.json.JSONException: void printStackTrace()>();

        goto label023;

     label034:
        $r25 := @caughtexception;

     label035:
        virtualinvoke $r25.<org.json.JSONException: void printStackTrace()>();

     label036:
        $z0 = 1;

        goto label015;

     label037:
        $r26 := @caughtexception;

        r59 = (java.security.InvalidKeyException) $r26;

     label038:
        virtualinvoke r59.<java.security.InvalidKeyException: void printStackTrace()>();

     label039:
        $z0 = 1;

        goto label015;

     label040:
        $r27 := @caughtexception;

        r60 = (java.security.NoSuchAlgorithmException) $r27;

     label041:
        virtualinvoke r60.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

     label042:
        $z0 = 1;

        goto label015;

     label043:
        $r28 := @caughtexception;

        r61 = (java.security.spec.InvalidKeySpecException) $r28;

     label044:
        virtualinvoke r61.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

     label045:
        $z0 = 1;

        goto label015;

     label046:
        $r29 := @caughtexception;

        r62 = (javax.crypto.NoSuchPaddingException) $r29;

     label047:
        virtualinvoke r62.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

     label048:
        $z0 = 1;

        goto label015;

     label049:
        $r30 := @caughtexception;

        r63 = (javax.crypto.IllegalBlockSizeException) $r30;

     label050:
        virtualinvoke r63.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

     label051:
        $z0 = 1;

        goto label015;

     label052:
        $r31 := @caughtexception;

        r64 = (javax.crypto.BadPaddingException) $r31;

     label053:
        virtualinvoke r64.<javax.crypto.BadPaddingException: void printStackTrace()>();

     label054:
        $z0 = 1;

        goto label015;

     label055:
        $r32 := @caughtexception;

        r65 = (java.io.IOException) $r32;

     label056:
        virtualinvoke r65.<java.io.IOException: void printStackTrace()>();

     label057:
        $z0 = 1;

        goto label015;

     label058:
        $r33 := @caughtexception;

     label059:
        virtualinvoke $r33.<java.lang.Error: void printStackTrace()>();

     label060:
        $z0 = 1;

        goto label015;

     label061:
        varReplacer5770 = "data";

        virtualinvoke $r8.<org.json.JSONObject: org.json.JSONObject put(java.lang.String,java.lang.Object)>(varReplacer5770, $r9);

     label062:
        goto label019;

     label063:
        varReplacer5775 = "UTF-8";

        $r14 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer5775);

     label064:
        r55 = new java.io.ByteArrayOutputStream;

     label065:
        $r34 = r55;

     label066:
        specialinvoke r55.<java.io.ByteArrayOutputStream: void <init>()>();

     label067:
        r56 = new java.util.zip.GZIPOutputStream;

     label068:
        $r35 = r56;

     label069:
        specialinvoke r56.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r34);

     label070:
        virtualinvoke $r35.<java.util.zip.GZIPOutputStream: void write(byte[])>($r14);

        virtualinvoke $r35.<java.util.zip.GZIPOutputStream: void finish()>();

        virtualinvoke $r34.<java.io.ByteArrayOutputStream: void flush()>();

     label071:
        $r2 = $r35;

     label072:
        if $r34 == null goto label117;

     label073:
        $i0 = virtualinvoke $r34.<java.io.ByteArrayOutputStream: int size()>();

     label074:
        if $i0 <= 0 goto label117;

     label075:
        r57 = new org.apache.http.entity.ByteArrayEntity;

     label076:
        $r36 = r57;

     label077:
        $r14 = virtualinvoke $r34.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke r57.<org.apache.http.entity.ByteArrayEntity: void <init>(byte[])>($r14);

        virtualinvoke $r1.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r36);

        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

     label078:
        if $z0 == 0 goto label082;

     label079:
        r51 = new java.lang.StringBuilder;

     label080:
        $r7 = r51;

     label081:
        varReplacer5765 = "GZip size: ";

        specialinvoke r51.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5765);

        $i0 = virtualinvoke $r34.<java.io.ByteArrayOutputStream: int size()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer5759 = "bytes";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5759);

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5773 = "Usage/NetProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5773, $r5);

     label082:
        varReplacer5760 = "Content-Encoding";

        $z0 = virtualinvoke $r1.<org.apache.http.client.methods.HttpPost: boolean containsHeader(java.lang.String)>(varReplacer5760);

     label083:
        if $z0 != 0 goto label085;

     label084:
        varReplacer5776 = "Content-Encoding";

        varReplacer5777 = "gzip";

        virtualinvoke $r1.<org.apache.http.client.methods.HttpPost: void addHeader(java.lang.String,java.lang.String)>(varReplacer5776, varReplacer5777);

     label085:
        $z0 = 1;

     label086:
        if $r2 == null goto label088;

     label087:
        virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void close()>();

     label088:
        if $r34 == null goto label090;

     label089:
        virtualinvoke $r34.<java.io.ByteArrayOutputStream: void close()>();

     label090:
        if $z0 != 0 goto label092;

        r58 = new org.apache.http.entity.StringEntity;

        $r37 = r58;

     label091:
        varReplacer5758 = "UTF-8";

        specialinvoke r58.<org.apache.http.entity.StringEntity: void <init>(java.lang.String,java.lang.String)>($r3, varReplacer5758);

        virtualinvoke $r1.<org.apache.http.client.methods.HttpPost: void setEntity(org.apache.http.HttpEntity)>($r37);

     label092:
        return $r1;

     label093:
        $r38 := @caughtexception;

        $r34 = null;

        $r39 = $r38;

        $r35 = null;

     label094:
        r66 = (java.io.UnsupportedEncodingException) $r39;

        virtualinvoke r66.<java.io.UnsupportedEncodingException: void printStackTrace()>();

     label095:
        $r2 = $r35;

        goto label072;

     label096:
        $r40 := @caughtexception;

        $r34 = null;

        $r41 = $r40;

        $r35 = null;

     label097:
        r65 = (java.io.IOException) $r41;

        virtualinvoke r65.<java.io.IOException: void printStackTrace()>();

     label098:
        $r2 = $r35;

        goto label072;

     label099:
        $r42 := @caughtexception;

        $r34 = null;

     label100:
        if $r2 == null goto label102;

     label101:
        virtualinvoke $r2.<java.util.zip.GZIPOutputStream: void close()>();

     label102:
        if $r34 == null goto label104;

     label103:
        virtualinvoke $r34.<java.io.ByteArrayOutputStream: void close()>();

     label104:
        throw $r42;

     label105:
        $r43 := @caughtexception;

        r65 = (java.io.IOException) $r43;

        virtualinvoke r65.<java.io.IOException: void printStackTrace()>();

        goto label102;

     label106:
        $r44 := @caughtexception;

        r65 = (java.io.IOException) $r44;

        virtualinvoke r65.<java.io.IOException: void printStackTrace()>();

        goto label104;

     label107:
        $r45 := @caughtexception;

        r65 = (java.io.IOException) $r45;

        virtualinvoke r65.<java.io.IOException: void printStackTrace()>();

        goto label088;

     label108:
        $r46 := @caughtexception;

        r65 = (java.io.IOException) $r46;

        virtualinvoke r65.<java.io.IOException: void printStackTrace()>();

        goto label090;

     label109:
        $r47 := @caughtexception;

        r66 = (java.io.UnsupportedEncodingException) $r47;

        virtualinvoke r66.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label092;

     label110:
        $r42 := @caughtexception;

        goto label100;

     label111:
        $r42 := @caughtexception;

        $r2 = $r35;

        goto label100;

     label112:
        $r48 := @caughtexception;

        $r35 = null;

        $r41 = $r48;

        goto label097;

     label113:
        $r41 := @caughtexception;

        goto label097;

     label114:
        $r49 := @caughtexception;

        $r35 = null;

        $r39 = $r49;

        goto label094;

     label115:
        $r39 := @caughtexception;

        goto label094;

     label116:
        $r24 := @caughtexception;

        goto label033;

     label117:
        $z0 = 0;

        goto label086;

        catch org.json.JSONException from label003 to label004 with label032;
        catch org.json.JSONException from label005 to label006 with label032;
        catch org.json.JSONException from label007 to label009 with label032;
        catch org.json.JSONException from label010 to label011 with label034;
        catch org.json.JSONException from label013 to label014 with label034;
        catch java.security.InvalidKeyException from label010 to label011 with label037;
        catch java.security.InvalidKeyException from label013 to label014 with label037;
        catch java.security.NoSuchAlgorithmException from label010 to label011 with label040;
        catch java.security.NoSuchAlgorithmException from label013 to label014 with label040;
        catch java.security.spec.InvalidKeySpecException from label010 to label011 with label043;
        catch java.security.spec.InvalidKeySpecException from label013 to label014 with label043;
        catch javax.crypto.NoSuchPaddingException from label010 to label011 with label046;
        catch javax.crypto.NoSuchPaddingException from label013 to label014 with label046;
        catch javax.crypto.IllegalBlockSizeException from label010 to label011 with label049;
        catch javax.crypto.IllegalBlockSizeException from label013 to label014 with label049;
        catch javax.crypto.BadPaddingException from label010 to label011 with label052;
        catch javax.crypto.BadPaddingException from label013 to label014 with label052;
        catch java.io.IOException from label010 to label011 with label055;
        catch java.io.IOException from label013 to label014 with label055;
        catch java.lang.Error from label010 to label012 with label058;
        catch java.lang.Error from label013 to label014 with label058;
        catch org.json.JSONException from label016 to label017 with label032;
        catch org.json.JSONException from label018 to label019 with label032;
        catch org.json.JSONException from label019 to label020 with label032;
        catch org.json.JSONException from label020 to label021 with label116;
        catch org.json.JSONException from label022 to label023 with label116;
        catch org.json.JSONException from label024 to label025 with label032;
        catch org.json.JSONException from label026 to label027 with label032;
        catch org.json.JSONException from label028 to label029 with label032;
        catch org.json.JSONException from label030 to label031 with label032;
        catch org.json.JSONException from label035 to label036 with label032;
        catch org.json.JSONException from label038 to label039 with label032;
        catch org.json.JSONException from label041 to label042 with label032;
        catch org.json.JSONException from label044 to label045 with label032;
        catch org.json.JSONException from label047 to label048 with label032;
        catch org.json.JSONException from label050 to label051 with label032;
        catch org.json.JSONException from label053 to label054 with label032;
        catch org.json.JSONException from label056 to label057 with label032;
        catch org.json.JSONException from label059 to label060 with label032;
        catch org.json.JSONException from label061 to label062 with label032;
        catch java.io.UnsupportedEncodingException from label063 to label064 with label093;
        catch java.io.UnsupportedEncodingException from label066 to label067 with label093;
        catch java.io.IOException from label063 to label064 with label096;
        catch java.io.IOException from label066 to label067 with label096;
        catch java.lang.Throwable from label063 to label065 with label099;
        catch java.lang.Throwable from label066 to label067 with label099;
        catch java.io.UnsupportedEncodingException from label069 to label070 with label114;
        catch java.io.IOException from label069 to label070 with label112;
        catch java.lang.Throwable from label067 to label068 with label110;
        catch java.lang.Throwable from label069 to label070 with label110;
        catch java.io.UnsupportedEncodingException from label070 to label071 with label115;
        catch java.io.IOException from label070 to label071 with label113;
        catch java.lang.Throwable from label070 to label071 with label111;
        catch java.lang.Throwable from label073 to label074 with label110;
        catch java.lang.Throwable from label075 to label076 with label110;
        catch java.lang.Throwable from label077 to label078 with label110;
        catch java.lang.Throwable from label079 to label080 with label110;
        catch java.lang.Throwable from label081 to label083 with label110;
        catch java.lang.Throwable from label084 to label085 with label110;
        catch java.io.IOException from label087 to label088 with label107;
        catch java.io.IOException from label089 to label090 with label108;
        catch java.io.UnsupportedEncodingException from label091 to label092 with label109;
        catch java.lang.Throwable from label094 to label095 with label111;
        catch java.lang.Throwable from label097 to label098 with label111;
        catch java.io.IOException from label101 to label102 with label105;
        catch java.io.IOException from label103 to label104 with label106;
    }

    final boolean a()
    {
        com.cootek.usage.p $r0;
        java.util.ArrayList $r1;
        boolean $z0;
        com.cootek.usage.AbsUsageAssist $r2;
        java.lang.String $r3, $r16, varReplacer5735, varReplacer5736, varReplacer5737, varReplacer5738, varReplacer5741, varReplacer5742, varReplacer5744, varReplacer5745, varReplacer5746, varReplacer5750, varReplacer5751, varReplacer5753;
        int $i0, $i1, $i2, varReplacer5739, varReplacer5740, varReplacer5743, varReplacer5747, varReplacer5748, varReplacer5749, varReplacer5752;
        org.apache.http.params.BasicHttpParams $r4, r30;
        org.apache.http.HttpVersion $r5;
        org.apache.http.conn.scheme.SchemeRegistry $r6, r31;
        org.apache.http.conn.scheme.PlainSocketFactory $r7;
        org.apache.http.impl.client.DefaultHttpClient $r8, r34;
        org.apache.http.client.methods.HttpPost $r9;
        org.apache.http.HttpResponse $r10, $r23;
        java.util.List $r11, $r12;
        android.content.Context $r13;
        java.lang.Object $r14;
        java.lang.String[] $r15;
        java.lang.Integer $r17;
        org.apache.http.HttpHost $r18, r35;
        org.apache.http.params.HttpParams $r19;
        java.lang.StringBuilder $r20, $r21, r36;
        long $l3;
        java.net.URI $r22;
        org.apache.http.StatusLine $r24;
        java.lang.Throwable $r25, $r26, $r27;
        java.lang.Exception $r28;
        java.lang.Error $r29;
        org.apache.http.conn.scheme.Scheme r32;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r33;
        org.apache.http.client.ClientProtocolException r37;
        java.io.IOException r38;
        java.lang.SecurityException r39;

        nop;

        $r0 := @this: com.cootek.usage.p;

        $r1 = $r0.<com.cootek.usage.p: java.util.ArrayList y>;

        $z0 = virtualinvoke $r1.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label01;

        varReplacer5748 = 1;

        return varReplacer5748;

     label01:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getToken()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 == 0 goto label02;

        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: void onTokenInvalid()>();

        varReplacer5752 = 0;

        return varReplacer5752;

     label02:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $i0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getHttpTimeout()>();

        r30 = new org.apache.http.params.BasicHttpParams;

        $r4 = r30;

        specialinvoke r30.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r5 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>($r4, $r5);

        varReplacer5741 = "UTF-8";

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>($r4, varReplacer5741);

        $i1 = $i0 * 1000;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setConnectionTimeout(org.apache.http.params.HttpParams,int)>($r4, $i1);

        $i0 = $i0 * 1000;

        staticinvoke <org.apache.http.params.HttpConnectionParams: void setSoTimeout(org.apache.http.params.HttpParams,int)>($r4, $i0);

        r31 = new org.apache.http.conn.scheme.SchemeRegistry;

        $r6 = r31;

        specialinvoke r31.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        r32 = new org.apache.http.conn.scheme.Scheme;

        $r7 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $i0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getHttpPort()>();

        varReplacer5753 = "http";

        specialinvoke r32.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>(varReplacer5753, $r7, $i0);

        virtualinvoke $r6.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>(r32);

        r33 = new org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        specialinvoke r33.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r4, $r6);

        r34 = new org.apache.http.impl.client.DefaultHttpClient;

        $r8 = r34;

        specialinvoke r34.<org.apache.http.impl.client.DefaultHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(r33, $r4);

        $r9 = specialinvoke $r0.<com.cootek.usage.p: org.apache.http.client.methods.HttpPost c()>();

        $r10 = null;

        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $r11 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.util.List getProxyAddress()>();

        staticinvoke <java.util.Collections: void shuffle(java.util.List)>($r11);

        $i0 = 0;

     label03:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $i1 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getRetryTimes()>();

        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $r12 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.util.List getProxyAddress()>();

        $i2 = interfaceinvoke $r12.<java.util.List: int size()>();

        $i1 = $i1 + $i2;

        if $i0 < $i1 goto label05;

     label04:
        $z0 = specialinvoke $r0.<com.cootek.usage.p: boolean a(org.apache.http.HttpResponse)>($r10);

        return $z0;

     label05:
        $z0 = $r0.<com.cootek.usage.p: boolean w>;

     label06:
        if $z0 == 0 goto label12;

     label07:
        $z0 = $r0.<com.cootek.usage.p: boolean w>;

     label08:
        if $z0 == 0 goto label64;

     label09:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label10:
        $r13 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: android.content.Context getContext()>();

        $z0 = staticinvoke <com.cootek.usage.g: boolean a(android.content.Context)>($r13);

     label11:
        if $z0 == 0 goto label64;

     label12:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label13:
        $i1 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getRetryTimes()>();

     label14:
        if $i0 < $i1 goto label28;

     label15:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label16:
        $i1 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getRetryTimes()>();

     label17:
        $i1 = $i0 - $i1;

     label18:
        $r14 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i1);

     label19:
        $r3 = (java.lang.String) $r14;

     label20:
        varReplacer5744 = ":";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean contains(java.lang.CharSequence)>(varReplacer5744);

     label21:
        if $z0 == 0 goto label63;

     label22:
        varReplacer5745 = ":";

        $r15 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer5745);

     label23:
        $r3 = $r15[0];

        $r16 = $r15[1];

     label24:
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r16);

        $i1 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

     label25:
        r35 = new org.apache.http.HttpHost;

     label26:
        $r18 = r35;

     label27:
        specialinvoke r35.<org.apache.http.HttpHost: void <init>(java.lang.String,int)>($r3, $i1);

        $r19 = interfaceinvoke $r8.<org.apache.http.client.HttpClient: org.apache.http.params.HttpParams getParams()>();

        varReplacer5746 = "http.route.default-proxy";

        interfaceinvoke $r19.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>(varReplacer5746, $r18);

     label28:
        $r21 = new java.lang.StringBuilder;

     label29:
        $r20 = $r21;

     label30:
        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        varReplacer5738 = "http://";

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5738);

     label31:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label32:
        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getServerAddress()>();

        varReplacer5739 = 47;

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(varReplacer5739);

     label33:
        if $i1 != -1 goto label51;

     label34:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label35:
        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getServerAddress()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer5749 = 58;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer5749);

     label36:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label37:
        $i1 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getHttpPort()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label38:
        varReplacer5742 = "/statistic/usage?type=";

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5742);

     label39:
        $r3 = $r0.<com.cootek.usage.p: java.lang.String x>;

     label40:
        $r3 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r3);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        varReplacer5751 = "&send_time=";

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer5751);

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $z0 = staticinvoke <com.cootek.usage.UsageRecorder: boolean b()>();

     label41:
        if $z0 == 0 goto label45;

     label42:
        r36 = new java.lang.StringBuilder;

     label43:
        $r21 = r36;

     label44:
        varReplacer5736 = "request uri: ";

        specialinvoke r36.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5736);

        $r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5750 = "Usage/NetProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5750, $r3);

     label45:
        $r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r3);

        virtualinvoke $r9.<org.apache.http.client.methods.HttpRequestBase: void setURI(java.net.URI)>($r22);

        $r23 = interfaceinvoke $r8.<org.apache.http.client.HttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>($r9);

     label46:
        $r10 = $r23;

     label47:
        $r24 = interfaceinvoke $r23.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r24.<org.apache.http.StatusLine: int getStatusCode()>();

     label48:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

        $z0 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: boolean isDebugMode()>();

        if $z0 == 0 goto label49;

        $r21 = new java.lang.StringBuilder;

        varReplacer5735 = "ret code: ";

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer5735);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer5737 = "Usage/NetProcessor";

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(varReplacer5737, $r3);

     label49:
        if $i1 == 200 goto label04;

        if $i1 == 400 goto label04;

        if $i1 < 500 goto label50;

        if $i1 <= 599 goto label04;

     label50:
        $i0 = $i0 + 1;

        goto label03;

     label51:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label52:
        $r3 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getServerAddress()>();

     label53:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label54:
        $r16 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: java.lang.String getServerAddress()>();

        varReplacer5740 = 47;

        $i1 = virtualinvoke $r16.<java.lang.String: int indexOf(int)>(varReplacer5740);

        varReplacer5743 = 0;

        $r16 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer5743, $i1);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        varReplacer5747 = 58;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(varReplacer5747);

     label55:
        $r2 = $r0.<com.cootek.usage.p: com.cootek.usage.AbsUsageAssist v>;

     label56:
        $i2 = virtualinvoke $r2.<com.cootek.usage.AbsUsageAssist: int getHttpPort()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label57:
        goto label38;

     label58:
        $r25 := @caughtexception;

        r37 = (org.apache.http.client.ClientProtocolException) $r25;

        virtualinvoke r37.<org.apache.http.client.ClientProtocolException: void printStackTrace()>();

        $i1 = 0;

        goto label48;

     label59:
        $r26 := @caughtexception;

        r38 = (java.io.IOException) $r26;

        virtualinvoke r38.<java.io.IOException: void printStackTrace()>();

        $i1 = 0;

        goto label48;

     label60:
        $r27 := @caughtexception;

        r39 = (java.lang.SecurityException) $r27;

        virtualinvoke r39.<java.lang.SecurityException: void printStackTrace()>();

        $i1 = 0;

        goto label48;

     label61:
        $r28 := @caughtexception;

        virtualinvoke $r28.<java.lang.Exception: void printStackTrace()>();

        $i1 = 0;

        goto label48;

     label62:
        $r29 := @caughtexception;

        virtualinvoke $r29.<java.lang.Error: void printStackTrace()>();

        $i1 = 0;

        goto label48;

     label63:
        $i1 = 3128;

        goto label25;

     label64:
        $i1 = 0;

        goto label48;

        catch org.apache.http.client.ClientProtocolException from label10 to label11 with label58;
        catch org.apache.http.client.ClientProtocolException from label13 to label14 with label58;
        catch org.apache.http.client.ClientProtocolException from label16 to label17 with label58;
        catch org.apache.http.client.ClientProtocolException from label18 to label19 with label58;
        catch org.apache.http.client.ClientProtocolException from label20 to label21 with label58;
        catch org.apache.http.client.ClientProtocolException from label22 to label23 with label58;
        catch org.apache.http.client.ClientProtocolException from label24 to label25 with label58;
        catch org.apache.http.client.ClientProtocolException from label27 to label28 with label58;
        catch org.apache.http.client.ClientProtocolException from label30 to label31 with label58;
        catch org.apache.http.client.ClientProtocolException from label32 to label33 with label58;
        catch org.apache.http.client.ClientProtocolException from label35 to label36 with label58;
        catch org.apache.http.client.ClientProtocolException from label37 to label39 with label58;
        catch org.apache.http.client.ClientProtocolException from label40 to label41 with label58;
        catch org.apache.http.client.ClientProtocolException from label44 to label46 with label58;
        catch org.apache.http.client.ClientProtocolException from label47 to label48 with label58;
        catch java.io.IOException from label10 to label11 with label59;
        catch java.io.IOException from label13 to label14 with label59;
        catch java.io.IOException from label16 to label17 with label59;
        catch java.io.IOException from label18 to label19 with label59;
        catch java.io.IOException from label20 to label21 with label59;
        catch java.io.IOException from label22 to label23 with label59;
        catch java.io.IOException from label24 to label25 with label59;
        catch java.io.IOException from label27 to label28 with label59;
        catch java.io.IOException from label30 to label31 with label59;
        catch java.io.IOException from label32 to label33 with label59;
        catch java.io.IOException from label35 to label36 with label59;
        catch java.io.IOException from label37 to label39 with label59;
        catch java.io.IOException from label40 to label41 with label59;
        catch java.io.IOException from label44 to label46 with label59;
        catch java.io.IOException from label47 to label48 with label59;
        catch java.lang.SecurityException from label10 to label11 with label60;
        catch java.lang.SecurityException from label13 to label14 with label60;
        catch java.lang.SecurityException from label16 to label17 with label60;
        catch java.lang.SecurityException from label18 to label19 with label60;
        catch java.lang.SecurityException from label20 to label21 with label60;
        catch java.lang.SecurityException from label22 to label23 with label60;
        catch java.lang.SecurityException from label24 to label25 with label60;
        catch java.lang.SecurityException from label27 to label28 with label60;
        catch java.lang.SecurityException from label30 to label31 with label60;
        catch java.lang.SecurityException from label32 to label33 with label60;
        catch java.lang.SecurityException from label35 to label36 with label60;
        catch java.lang.SecurityException from label37 to label39 with label60;
        catch java.lang.SecurityException from label40 to label41 with label60;
        catch java.lang.SecurityException from label44 to label46 with label60;
        catch java.lang.SecurityException from label47 to label48 with label60;
        catch java.lang.Exception from label05 to label06 with label61;
        catch java.lang.Exception from label07 to label08 with label61;
        catch java.lang.Exception from label09 to label11 with label61;
        catch java.lang.Exception from label12 to label14 with label61;
        catch java.lang.Exception from label15 to label17 with label61;
        catch java.lang.Exception from label18 to label21 with label61;
        catch java.lang.Exception from label22 to label25 with label61;
        catch java.lang.Exception from label27 to label28 with label61;
        catch java.lang.Exception from label30 to label33 with label61;
        catch java.lang.Exception from label34 to label41 with label61;
        catch java.lang.Exception from label44 to label46 with label61;
        catch java.lang.Exception from label47 to label48 with label61;
        catch java.lang.Error from label05 to label06 with label62;
        catch java.lang.Error from label07 to label08 with label62;
        catch java.lang.Error from label09 to label11 with label62;
        catch java.lang.Error from label12 to label14 with label62;
        catch java.lang.Error from label15 to label17 with label62;
        catch java.lang.Error from label18 to label21 with label62;
        catch java.lang.Error from label22 to label23 with label62;
        catch java.lang.Error from label24 to label25 with label62;
        catch java.lang.Error from label25 to label26 with label62;
        catch java.lang.Error from label27 to label29 with label62;
        catch java.lang.Error from label30 to label33 with label62;
        catch java.lang.Error from label34 to label41 with label62;
        catch java.lang.Error from label42 to label43 with label62;
        catch java.lang.Error from label44 to label46 with label62;
        catch java.lang.Error from label47 to label48 with label62;
        catch org.apache.http.client.ClientProtocolException from label52 to label53 with label58;
        catch org.apache.http.client.ClientProtocolException from label54 to label55 with label58;
        catch org.apache.http.client.ClientProtocolException from label56 to label57 with label58;
        catch java.io.IOException from label52 to label53 with label59;
        catch java.io.IOException from label54 to label55 with label59;
        catch java.io.IOException from label56 to label57 with label59;
        catch java.lang.SecurityException from label52 to label53 with label60;
        catch java.lang.SecurityException from label54 to label55 with label60;
        catch java.lang.SecurityException from label56 to label57 with label60;
        catch java.lang.Exception from label51 to label57 with label61;
        catch java.lang.Error from label51 to label57 with label62;
    }
}
