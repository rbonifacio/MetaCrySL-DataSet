final class com.cootek.usage.e extends java.lang.Object
{
    private static int a;
    private static int b;

    void <init>()
    {
        com.cootek.usage.e $r0;

        $r0 := @this: com.cootek.usage.e;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String a(java.lang.String, byte[])
    {
        java.lang.String $r0, varReplacer7222, varReplacer7223, varReplacer7225;
        byte[] $r1;
        javax.crypto.Cipher $r2;
        java.io.ByteArrayOutputStream $r3, r9;
        java.util.zip.GZIPOutputStream $r4, r10;
        java.lang.Throwable $r5, $r6, $r7;
        javax.crypto.spec.SecretKeySpec r8;
        java.io.IOException r11;
        int varReplacer7224, varReplacer7226;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        r8 = new javax.crypto.spec.SecretKeySpec;

        varReplacer7223 = "AES";

        specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7223);

        varReplacer7225 = "AES/ECB/PKCS5Padding";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7225);

        varReplacer7226 = 1;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7226, r8);

        virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

     label01:
        varReplacer7222 = "UTF-8";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer7222);

        r9 = new java.io.ByteArrayOutputStream;

     label02:
        $r3 = r9;

     label03:
        specialinvoke r9.<java.io.ByteArrayOutputStream: void <init>()>();

     label04:
        r10 = new java.util.zip.GZIPOutputStream;

     label05:
        $r4 = r10;

     label06:
        specialinvoke r10.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r3);

        virtualinvoke $r4.<java.util.zip.GZIPOutputStream: void write(byte[])>($r1);

        virtualinvoke $r4.<java.util.zip.GZIPOutputStream: void finish()>();

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void flush()>();

        $r1 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label07:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void close()>();

     label08:
        $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

        varReplacer7224 = 8;

        $r0 = staticinvoke <com.cootek.usage.a: java.lang.String a(byte[],int)>($r1, varReplacer7224);

        return $r0;

     label09:
        $r5 := @caughtexception;

        $r3 = null;

     label10:
        if $r3 == null goto label12;

     label11:
        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void close()>();

     label12:
        throw $r5;

     label13:
        $r6 := @caughtexception;

        r11 = (java.io.IOException) $r6;

        virtualinvoke r11.<java.io.IOException: void printStackTrace()>();

        goto label12;

     label14:
        $r7 := @caughtexception;

        r11 = (java.io.IOException) $r7;

        virtualinvoke r11.<java.io.IOException: void printStackTrace()>();

        goto label08;

     label15:
        $r5 := @caughtexception;

        goto label10;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.io.IOException from label07 to label08 with label14;
        catch java.io.IOException from label11 to label12 with label13;
    }

    static java.lang.String a(byte[], java.lang.String)
    {
        byte[] $r0, $r3;
        java.lang.String $r1;
        java.security.spec.X509EncodedKeySpec $r2;
        java.security.KeyFactory $r4;
        java.security.PublicKey $r5;
        javax.crypto.Cipher $r6;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.security.spec.X509EncodedKeySpec;

        $r3 = staticinvoke <com.cootek.usage.a: byte[] a(java.lang.String,int)>($r1, 8);

        specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3);

        $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>("RSA");

        $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2);

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("RSA/ECB/PKCS1PADDING");

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r5);

        $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        $r1 = staticinvoke <com.cootek.usage.a: java.lang.String a(byte[],int)>($r0, 8);

        return $r1;
    }

    static javax.crypto.Cipher a(java.lang.String, int)
    {
        java.lang.String $r0, varReplacer7086, varReplacer7087, varReplacer7088;
        int $i0, varReplacer7085;
        java.security.MessageDigest $r1;
        byte[] $r2;
        javax.crypto.spec.SecretKeySpec $r3;
        javax.crypto.Cipher $r4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        varReplacer7086 = "SHA-256";

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7086);

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        $r3 = new javax.crypto.spec.SecretKeySpec;

        varReplacer7088 = "AES";

        specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer7088);

        varReplacer7087 = "AES/ECB/PKCS5Padding";

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7087);

        varReplacer7085 = 1;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7085, $r3);

        return $r4;
    }

    static byte[] a()
    {
        java.util.UUID $r0;
        java.lang.String $r1;
        java.security.MessageDigest $r2;
        byte[] $r3;

        $r0 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r1 = virtualinvoke $r0.<java.util.UUID: java.lang.String toString()>();

        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.MessageDigest: void update(byte[])>($r3);

        $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>();

        return $r3;
    }

    private static byte[] a(java.lang.String)
    {
        java.lang.String $r0;
        java.security.MessageDigest $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r2);

        $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        return $r2;
    }
}
