Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.mexens.android.navizon.f: org.apache.http.impl.client.DefaultHttpClient a()>
		SHA-256: 2e789f274b6517ebc571ea5de2c9f8824ec35db6b7f9beb82283c8bf221ffad9
		Secure: true
	Object:
		Variable: varReplacer8866
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8866)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 4f500e5749051156767cb5c493c435ec9a7c4ba70a456ce2e0e39d90452988ed
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5998)
		Method: <com.mexens.android.navizon.j: java.lang.String f()>
		SHA-256: f332d70e8c2c1abc37e7e6c2ac353905dbdd60ad10c304821009ce428b9de009
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <com.mexens.android.navizon.j: java.lang.String f()>
		SHA-256: 79873c05f56b6df0a2f438a4b9f3d67a94dbc12d12da878e4362f4d48b03287e
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.mexens.android.navizon.d: java.lang.String a(org.altbeacon.beacon.Beacon)>
		SHA-256: 5a3762f5dbb3bbd4efdee910599c4e616b58a81c221e7d667724e3f24f1da786
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer8867)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 64242f218c2d96988547909e5127545c84b87861e028e0072c3d8ff6f38bd8db
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7564)
		Method: <com.rtpl.create.app.v2.SplashActivity: void getHashKey()>
		SHA-256: 22f5e79263fd000c1ed5c3e0721f8b390a45a58bb05b7f73d6c4a6e2ba5d3208
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.rtpl.create.app.v2.SplashActivity: void getHashKey()>
		SHA-256: 6fcad62b98c0d31c9778fe0e52b1e728ab7528a06694355f951851ca893f9289
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.SSLContext
		Statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5074)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 723c0239d041f7bf0572ef80412fe325aebf3ba5be2366f12c493a1098f2a475
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8866)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 1566847f2de7f56d1e1843e3262dab0d374ca7e04a4b862ccfd94216ab68537e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6071)
		Method: <com.mexens.android.navizon.f$a: void <init>(com.mexens.android.navizon.f,java.security.KeyStore)>
		SHA-256: be83a72fc77cc0a9ff4bfd7359624f07524965dbb4a861a143fe97e3bee8073a
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 60029a1b2e5ee22a3931915434a5fa44cf27db5eb408040851f105ce7e16415b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6439)
		Method: <com.handlerexploit.prime.utils.ApacheUtils$DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: 5905bf6ca08f8e575452df0c75607e67523723a1f3ad81dd18a00b89c48bb8c9
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9270)
		Method: <com.mexens.android.navizon.d: java.lang.String a(org.altbeacon.beacon.Beacon)>
		SHA-256: 6bf415c539d5c95eeec4086dc2a290712ecd0bb7186f24be22c5d38a30b50277
		Secure: true

Findings in Java Class: com.rtpl.create.app.v2.SplashActivity

	 in Method: void getHashKey()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #22f5e79263fd000c1ed5c3e0721f8b390a45a58bb05b7f73d6c4a6e2ba5d3208)
			First parameter (with value "SHA") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7564)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5077, varReplacer5077, varReplacer5077)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5077, varReplacer5077, varReplacer5077)


Findings in Java Class: oauth.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer8866)


Findings in Java Class: com.mexens.android.navizon.f$a

	 in Method: void <init>(com.mexens.android.navizon.f,java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6073, $r6, varReplacer6073)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6073, $r6, varReplacer6073)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 5
=====================================================================