Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>($r3, varReplacer2031)
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: java.security.KeyPair createKeyPair(java.lang.String)>
		SHA-256: 9d2318caadc1f4b3166c992c7e703686ecd657514dd45f605659f251adef6140
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer2044, varReplacer2045)
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: java.security.PrivateKey getPrivateKey(java.lang.String)>
		SHA-256: b3993b9d36372be68132809cdaa347d7db813a7aed845ea333ee8c343f7f5fef
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.desjardins.mobile.commun.utilitaire.PackageManagerUtils: java.lang.String getCurrentSignature(java.lang.String,android.content.Context)>
		SHA-256: e24a92e66cc017059b2b999c2de384cf89b5ce2808565100ae74ca993421545e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6534)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 75a06dbf023b85bf5fb3ad7164220146faa981e8430bc95a202b24f4b88f0f8e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2046)
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: java.security.PrivateKey getPrivateKey(java.lang.String)>
		SHA-256: 9a41acdc1f4cca29f02774240bda5a59291e01c8ac8b05662a2a39fa8da15ac1
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2435)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: 69a05d98d187f559a782eaf66aa4b0b6c4a766ef3b5e5887de9c3de2bed2f572
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: $r9 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: java.security.KeyPair createKeyPair(java.lang.String)>
		SHA-256: c7114e453f492a3fdd720ca2e7e010170c2010f45294558b27f9e3d053320d51
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2039)
		Method: <com.desjardins.mobile.fingerprint.vault.Vault: boolean deleteKeyPair(java.lang.String)>
		SHA-256: 9f0af62f863ce6180d64ad00e3c3eba53a0f1db61671b096869f49cd9daf79cb
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 35b0119aad99960d8bec3a1c0a0d18ad4ede33706412ee7d9291554433d85f77
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.wearable.PutDataRequest: void <clinit>()>
		SHA-256: 7c7914a5dbc342a0b07872e6ba9b92f3ce42103379b2a3186bbd078fe9a61ec
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.Signature
		Statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2026)
		Method: <com.desjardins.mobile.fingerprint.Fingerprint: boolean hasValidFingerprints()>
		SHA-256: 6d56654dbd08f00a274030fa29dedd82288171710cbe19f614f85d8ba5679c3e
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2718)
		Method: <com.desjardins.mobile.commun.utilitaire.PackageManagerUtils: java.lang.String getCurrentSignature(java.lang.String,android.content.Context)>
		SHA-256: 7b60cac88a5f6f061f763e024b5562ac4139c5c1f9034f9ed4d5241984cc6b17
		Secure: false

Findings in Java Class: com.desjardins.mobile.fingerprint.Fingerprint

	 in Method: boolean hasValidFingerprints()
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #6d56654dbd08f00a274030fa29dedd82288171710cbe19f614f85d8ba5679c3e)
			Operation on object of type java.security.Signature object not completed. Expected call to java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom), update, java.security.Signature: void initSign(java.security.PrivateKey)
			at statement: virtualinvoke $r0.<java.security.Signature: void initSign(java.security.PrivateKey)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #6d56654dbd08f00a274030fa29dedd82288171710cbe19f614f85d8ba5679c3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2026)


Findings in Java Class: com.desjardins.mobile.commun.utilitaire.PackageManagerUtils

	 in Method: java.lang.String getCurrentSignature(java.lang.String,android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7b60cac88a5f6f061f763e024b5562ac4139c5c1f9034f9ed4d5241984cc6b17)
			First parameter (with value "SHA256") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2718)


Findings in Java Class: com.desjardins.mobile.fingerprint.vault.Vault

	 in Method: java.security.KeyPair createKeyPair(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared E C
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared D S A
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared D H
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r8)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2432, varReplacer2432, varReplacer2432)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2432, varReplacer2432, varReplacer2432)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 6
	IncompleteOperationError: 1
=====================================================================