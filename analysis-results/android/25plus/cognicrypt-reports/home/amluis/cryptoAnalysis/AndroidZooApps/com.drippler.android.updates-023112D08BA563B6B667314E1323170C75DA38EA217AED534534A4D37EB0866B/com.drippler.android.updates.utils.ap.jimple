public class com.drippler.android.updates.utils.ap extends java.lang.Object
{
    private static final byte[] a;
    private javax.crypto.Cipher b;
    private javax.crypto.Cipher c;
    private java.lang.String d;

    static void <clinit>()
    {
        byte[] $r0;

        nop;

        $r0 = newarray (byte)[16];

        $r0[0] = 16;

        $r0[1] = 74;

        $r0[2] = 71;

        $r0[3] = -80;

        $r0[4] = 32;

        $r0[5] = 101;

        $r0[6] = -47;

        $r0[7] = 72;

        $r0[8] = 117;

        $r0[9] = -14;

        $r0[10] = 0;

        $r0[11] = -29;

        $r0[12] = 70;

        $r0[13] = 65;

        $r0[14] = -12;

        $r0[15] = 74;

        <com.drippler.android.updates.utils.ap: byte[] a> = $r0;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.drippler.android.updates.utils.ap $r0;
        java.lang.String $r1, varReplacer4767, varReplacer4769, varReplacer4775, varReplacer4776, varReplacer4777;
        javax.crypto.SecretKeyFactory $r2;
        javax.crypto.spec.PBEKeySpec $r3;
        char[] $r4;
        byte[] $r5;
        javax.crypto.SecretKey $r6;
        javax.crypto.spec.SecretKeySpec $r7;
        javax.crypto.Cipher $r8;
        javax.crypto.spec.IvParameterSpec $r9;
        java.lang.Throwable $r10;
        int varReplacer4768, varReplacer4770, varReplacer4771, varReplacer4772, varReplacer4773, varReplacer4774;

        nop;

        $r0 := @this: com.drippler.android.updates.utils.ap;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.drippler.android.updates.utils.ap: java.lang.String d> = $r1;

     label01:
        varReplacer4767 = "PBEWITHSHAAND256BITAES-CBC-BC";

        $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4767);

     label02:
        $r3 = new javax.crypto.spec.PBEKeySpec;

        $r1 = "ThisIsNotAPasswordPassword";

     label03:
        $r4 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

     label04:
        $r1 = "ThisIsNotAPasswordPassword";

     label05:
        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer4770 = 1024;

        varReplacer4771 = 256;

        specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4770, varReplacer4771);

     label06:
        $r3 = new javax.crypto.spec.PBEKeySpec;

        $r1 = "avokado";

     label07:
        $r4 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

     label08:
        $r1 = "matbuha";

     label09:
        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        varReplacer4773 = 1024;

        varReplacer4774 = 256;

        specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer4773, varReplacer4774);

        $r6 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3);

     label10:
        $r7 = new javax.crypto.spec.SecretKeySpec;

     label11:
        $r5 = interfaceinvoke $r6.<javax.crypto.SecretKey: byte[] getEncoded()>();

        varReplacer4777 = "AES";

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer4777);

        varReplacer4776 = "AES/CBC/PKCS5Padding";

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4776);

     label12:
        $r0.<com.drippler.android.updates.utils.ap: javax.crypto.Cipher b> = $r8;

        $r8 = $r0.<com.drippler.android.updates.utils.ap: javax.crypto.Cipher b>;

        $r9 = new javax.crypto.spec.IvParameterSpec;

        $r5 = <com.drippler.android.updates.utils.ap: byte[] a>;

     label13:
        specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        varReplacer4768 = 1;

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4768, $r7, $r9);

        varReplacer4775 = "AES/CBC/PKCS5Padding";

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4775);

     label14:
        $r0.<com.drippler.android.updates.utils.ap: javax.crypto.Cipher c> = $r8;

        $r8 = $r0.<com.drippler.android.updates.utils.ap: javax.crypto.Cipher c>;

        $r9 = new javax.crypto.spec.IvParameterSpec;

        $r5 = <com.drippler.android.updates.utils.ap: byte[] a>;

     label15:
        specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        varReplacer4772 = 2;

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4772, $r7, $r9);

     label16:
        return;

     label17:
        $r10 := @caughtexception;

        varReplacer4769 = "ThisIsNotAPasswordPassword";

        staticinvoke <ah: void a(java.lang.String,java.lang.Throwable)>(varReplacer4769, $r10);

        return;

        catch java.security.GeneralSecurityException from label01 to label02 with label17;
        catch java.security.GeneralSecurityException from label03 to label04 with label17;
        catch java.security.GeneralSecurityException from label05 to label06 with label17;
        catch java.security.GeneralSecurityException from label07 to label08 with label17;
        catch java.security.GeneralSecurityException from label09 to label10 with label17;
        catch java.security.GeneralSecurityException from label11 to label12 with label17;
        catch java.security.GeneralSecurityException from label13 to label14 with label17;
        catch java.security.GeneralSecurityException from label15 to label16 with label17;
    }

    public java.lang.String a()
    {
        com.drippler.android.updates.utils.ap $r0;
        javax.crypto.Cipher $r1;
        java.lang.String $r2, varReplacer4778, varReplacer4780, varReplacer4781;
        byte[] $r3;
        java.lang.Exception $r4;
        int varReplacer4779;

        nop;

        $r0 := @this: com.drippler.android.updates.utils.ap;

     label1:
        $r1 = $r0.<com.drippler.android.updates.utils.ap: javax.crypto.Cipher b>;

        $r2 = $r0.<com.drippler.android.updates.utils.ap: java.lang.String d>;

        varReplacer4778 = "UTF-8";

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer4778);

        $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        varReplacer4779 = 0;

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, varReplacer4779);

     label2:
        return $r2;

     label3:
        $r4 := @caughtexception;

        varReplacer4781 = "ThisIsNotAPasswordPassword";

        staticinvoke <ah: void a(java.lang.String,java.lang.Throwable)>(varReplacer4781, $r4);

        varReplacer4780 = "ERROR";

        return varReplacer4780;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String b()
    {
        com.drippler.android.updates.utils.ap $r0;
        java.lang.String $r1, $r3;
        javax.crypto.Cipher $r2;
        byte[] $r4;
        java.lang.Exception $r5;

        $r0 := @this: com.drippler.android.updates.utils.ap;

        $r1 = new java.lang.String;

     label1:
        $r2 = $r0.<com.drippler.android.updates.utils.ap: javax.crypto.Cipher c>;

        $r3 = $r0.<com.drippler.android.updates.utils.ap: java.lang.String d>;

        $r4 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r3, 0);

        $r4 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8");

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        staticinvoke <ah: void a(java.lang.String,java.lang.Throwable)>("ThisIsNotAPasswordPassword", $r5);

        return "ERROR";

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
