Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r9 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer2599)
		Method: <com.expressvpn.vpn.xvca.XvcaClient: void init()>
		SHA-256: 54a46463e0b676c810308851ed15b632e32c1519761e914b2dbb225b90b84dd8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3633)
		Method: <com.expressvpn.vpn.config.service.XVPNHttpClient: org.apache.http.conn.ssl.SSLSocketFactory newSslSocketFactory(com.expressvpn.vpn.EvpnContext)>
		SHA-256: 7f3c95f5b6c521f5708204af0f1581d184a66ca8143f542a33f804e6fce8c7b9
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.SSLContext
		Statement: $r11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2596)
		Method: <com.expressvpn.vpn.xvca.XvcaClient: void init()>
		SHA-256: 3e42d60fda2254f7c8e47f2786a8782c9d4bf7bdae3d45294d96440b4a84bbde
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2295)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void generateKey()>
		SHA-256: 40f4fd31349b2aca60d280501c1e7c946092ce0c05e401a66c60e5cfa701609d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2602)
		Method: <com.expressvpn.vpn.xvca.XvcaClient: void init()>
		SHA-256: 433b04df00da752117ba538117154ae07a155c4cc980d1b307bbbcc95dceb23
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2277)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void loadKeyStore()>
		SHA-256: f77a9a6f347ea12660895ec2a0bdcd6fa8645616eeacf4a7c165985f6743e9e4
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1288)
		Method: <com.expressvpn.vpn.tracking.TrackingUtils: java.lang.String md5(java.lang.String)>
		SHA-256: 1f91394506fc909a050da2a0b21b35c450e71e135894089ee85f2c6030cd3a1
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5980)
		Method: <com.expressvpn.vpn.util.SHA256Hash: java.lang.String computeHash(java.lang.String)>
		SHA-256: c584c3a82f50047e82697c1f3cfaf8c3b93c4fc9a6be30b8b7613d0d28d8f761
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r1, varReplacer2285, $i0)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: byte[] decrypt(byte[])>
		SHA-256: cf39da62e57e7a3b2f8275655223647ef1296e04fb2508804398653f27c61d0e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r1 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer2273, varReplacer2274)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: boolean keyAvailable()>
		SHA-256: 55e58383899f17fbd70dc900e7b1e6d5115bdd4eca7f09866c31f85989a4f354
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2286, varReplacer2287)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: byte[] decrypt(byte[])>
		SHA-256: 5574eb2b62752a67255e36bca84217e3d245ce25a3387a9a2ecd058f4e8b8eae
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void generateKey()>
		SHA-256: c01e7b69c038f216e68a94669a08d70851400131614ea0e03c9f531ef7ba4df6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.expressvpn.vpn.util.SHA256Hash: java.lang.String computeHash(java.lang.String)>
		SHA-256: 86d993b568b1794e2fea0ee015fc06420b165f2d4a80dabbfc963ba0b406f584
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5586)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 487f7643520ca81e23400bfaff9db93f29a4c062d0fb034122ae62dcb6551599
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void generateKey()>
		SHA-256: 502ad7d0e5ef9cdebbfcb036c0f02dd38a5f4e996f960da920557375444cbe4e
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.expressvpn.vpn.tracking.TrackingUtils: java.lang.String md5(java.lang.String)>
		SHA-256: 1ce4a4cc6d5400beb3ee493079524a43c50539a61cfbefabe257e22700f7503d
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: byte[] decrypt(byte[])>
		SHA-256: 77b62d744ea7f6d73527fd973b9c409f44fda837acac96d681fe9cb3d8366a1f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r1 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer2291, varReplacer2292)
		Method: <com.expressvpn.vpn.config.crypter.PiiCrypter: void loadKey()>
		SHA-256: 3dd6c614e4b02e3fe675f3024cdbd2d497c9ca66c1ba9eb230577a2aa84f3e09
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManager[]
		Statement: $r10 = virtualinvoke $r9.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.expressvpn.vpn.xvca.XvcaClient: void init()>
		SHA-256: b07f1959370dc1c02a702a2aee4a7c05c41056bb4bac5ad971a8c07004aceb35
		Secure: false

Findings in Java Class: com.expressvpn.vpn.config.crypter.PiiCrypter

	 in Method: void loadKeyStore()
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #f77a9a6f347ea12660895ec2a0bdcd6fa8645616eeacf4a7c165985f6743e9e4)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(varReplacer2279)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #f77a9a6f347ea12660895ec2a0bdcd6fa8645616eeacf4a7c165985f6743e9e4)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, varReplacer2276)


	 in Method: void saveKeyStore()
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #f77a9a6f347ea12660895ec2a0bdcd6fa8645616eeacf4a7c165985f6743e9e4)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r4.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r5, varReplacer2281)


	 in Method: byte[] decrypt(byte[])
		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(plainText) + 0 < plain_off - len could not be evaluted due to insufficient information.
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r1, varReplacer2285, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2284, $r4, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2284, $r4, $r5)


Findings in Java Class: com.expressvpn.vpn.xvca.XvcaClient

	 in Method: void init()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #433b04df00da752117ba538117154ae07a155c4cc980d1b307bbbcc95dceb23)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r8)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #54a46463e0b676c810308851ed15b632e32c1519761e914b2dbb225b90b84dd8)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r9.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke $r9.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, varReplacer2597, varReplacer2597)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, varReplacer2597, varReplacer2597)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #54a46463e0b676c810308851ed15b632e32c1519761e914b2dbb225b90b84dd8)
			First parameter (with value "X509") should be any of {PKIX}
			at statement: $r9 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer2599)


Findings in Java Class: com.expressvpn.vpn.config.service.XVPNHttpClient

	 in Method: org.apache.http.conn.ssl.SSLSocketFactory newSslSocketFactory(com.expressvpn.vpn.EvpnContext)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #7f3c95f5b6c521f5708204af0f1581d184a66ca8143f542a33f804e6fce8c7b9)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r2, $r5)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5587, r7, varReplacer5587)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5587, r7, varReplacer5587)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	ImpreciseValueExtractionError: 1
	TypestateError: 3
	NeverTypeOfError: 3
	RequiredPredicateError: 8
=====================================================================