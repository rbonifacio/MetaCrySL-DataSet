Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer1072)
		Method: <com.appodeal.ads.utils.o: java.lang.String a(android.content.Context)>
		SHA-256: bef78d49805afcf6307b265699681e91066f477e8aa11ffe2e299e69d9c85f54
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: specialinvoke $r14.<java.security.SecureRandom: void <init>()>()
		Method: <com.appodeal.ads.utils.o: java.lang.String a(android.content.Context)>
		SHA-256: f2423df0058dea740e1175bcea53243ef69e53596f042c34a0b02ed588cf3511
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)
		Method: <com.appodeal.ads.utils.o: java.lang.String a(android.content.Context)>
		SHA-256: 615ff417c211a7561c7d567855e84243d2219c917e88b8dde8619ae99d9ae0ff
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5423)
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: 705322c8b10de114a84cd55941ae8a7491470e592594efbba6206cef844efc51
		Secure: true
	Object:
		Variable: $r13
		Type: byte[]
		Statement: virtualinvoke $r14.<java.security.SecureRandom: void nextBytes(byte[])>($r13)
		Method: <com.appodeal.ads.utils.o: java.lang.String a(android.content.Context)>
		SHA-256: 6a77b53a8ffd011855b3864dbd709a637e6f622e4ff457b23d09968818aa7698
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5632)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 4072fb6cf3442b7667153430d67f0af1e0b9b8fa3b5f5ab6c92db2f17b44d5d
		Secure: true
	Object:
		Variable: varReplacer8398
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8398)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ba41b4363840d19613215cae1c9f2aa5631c6c7c341a948275a9481175deb820
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: 7a74e8fbde4cb7f3c5f100dc4c6bc0d46ff7409fd74d931edb087eb017f74545
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8398)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 4a5661ba244063f379745c30e85ce61cf1f9b230227f2be90b407534f5cf514
		Secure: false
	Object:
		Variable: varReplacer1072
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer1072)
		Method: <com.appodeal.ads.utils.o: java.lang.String a(android.content.Context)>
		SHA-256: 1cef78f72ddfc620d773c709b53eb245ed1ce079e90efdebaebe0ca268759d5d
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $i0 = virtualinvoke $r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r11, varReplacer1069, $i0, $r17, varReplacer1069)
		Method: <com.appodeal.ads.utils.o: java.lang.String a(android.content.Context)>
		SHA-256: 7db1f62dee2026cfaa88ebf5cc62f845620e7639bd252fd8a4dd8b54a0c171d9
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r48
		Type: javax.net.ssl.SSLContext
		Statement: $r48 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer974)
		Method: <com.appodeal.ads.r$b: org.json.JSONObject a(java.lang.Void[])>
		SHA-256: 9bd8ab166e0083bd5db3378266f4c7bc0e5d6302df1799968abd5c8feae468de
		Secure: false
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $i0 = virtualinvoke $r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r11, varReplacer1069, $i0, $r17, varReplacer1069)
		Method: <com.appodeal.ads.utils.o: java.lang.String a(android.content.Context)>
		SHA-256: 4045c87a9cd4543da2ff5bf4323eb3b1b2bef72dd03fd05b2667937b0b3ecce7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer8397)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 30a1a1ffa6b76b5f0412e997b708acf81ea322ef1236a6e84dbf17f4e04b714a
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.Cipher
		Statement: $r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1061)
		Method: <com.appodeal.ads.utils.o: java.lang.String a(android.content.Context)>
		SHA-256: cc5a6bec0ea083d22785647785ad09af04890d68ad9090d28ce0d0168d2fc3b8
		Secure: false
	Object:
		Variable: $r17
		Type: byte[]
		Statement: virtualinvoke $r16.<javax.crypto.Cipher: int doFinal(byte[],int)>($r17, $i0)
		Method: <com.appodeal.ads.utils.o: java.lang.String a(android.content.Context)>
		SHA-256: 435887da7ba3f8ff0cb84f45bfb486c7a6b76d9c7ee7a3ecfd6ef828ef7ad078
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.my.target.core.utils.h: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1da94bc65736b5daec9fb707b121792f525ce16cac0638f4e17beabe1af97476
		Secure: true

Findings in Java Class: com.appodeal.ads.utils.o

	 in Method: java.lang.String a(android.content.Context)
		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(cipherText) + 0 < ciphertext_off + 0 could not be evaluted due to insufficient information.
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: int doFinal(byte[],int)>($r17, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1068, $r12, $r15)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.Cipher
			Constraint length(pre_ciphertext) + 0 < pre_ciphertext_off + 0 could not be evaluted due to insufficient information.
			at statement: $i0 = virtualinvoke $r16.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r11, varReplacer1069, $i0, $r17, varReplacer1069)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer1072)


Findings in Java Class: com.my.target.core.utils.h

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer8398)


Findings in Java Class: com.appodeal.ads.r$b

	 in Method: org.json.JSONObject a(java.lang.Void[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r48.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer975, r91, varReplacer975)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r48.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer975, r91, varReplacer975)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ImpreciseValueExtractionError: 2
=====================================================================