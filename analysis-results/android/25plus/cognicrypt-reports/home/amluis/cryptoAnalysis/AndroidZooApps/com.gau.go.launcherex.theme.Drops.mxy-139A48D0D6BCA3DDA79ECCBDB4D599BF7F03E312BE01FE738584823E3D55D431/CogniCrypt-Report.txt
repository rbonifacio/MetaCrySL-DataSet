Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1824)
		Method: <com.facebook.ads.internal.util.t: java.lang.String a(java.lang.String)>
		SHA-256: d2a67f5e17ee067f6533c32ec9aadf7b462e649429abde6e5b4a8f38007a44ed
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: c912c10fbdf9c59ad4f89e99034f2098742bd04a6912e7829063391bc286c150
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzip: java.lang.String zzha()>
		SHA-256: 20add7c3d4e7c11c391545d8ff692a916f933084b53b79ebc8c4ae85a58aa523
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8433)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: a3428c68047bbba0e8c18950c6fe4c04e3540614e1d86ae65678f7ce8b4f676c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mobvista.sdk.m.a.f.c: java.lang.String b(java.lang.String)>
		SHA-256: 34ba3c9bb7fa93036505409e6f624148d580a4ef39cd6b74abdee3d1e3232629
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12426)
		Method: <com.google.android.gms.internal.zzbm: java.security.MessageDigest zzcG()>
		SHA-256: d37591be9f5c8c98c54fd518a5339b45bc2f8fa27bd6865004329b350d441c95
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7187)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 2f6bd2eddca4ef6b3ee420ceb4244420155ade565aeefc24f9abfd8244540894
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8756)
		Method: <com.mobvista.sdk.m.a.f.c: java.lang.String b(java.lang.String)>
		SHA-256: e3256b06832608f8225b1655a99a7311de7c0e31a47753339419a677992ed6dd
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 13b7df8e4159afd3c95e773a0a2fb89a181151c51e2fcbe7400da8a0d51bf426
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10466)
		Method: <com.google.android.gms.internal.zzip: java.lang.String zzha()>
		SHA-256: 1474abf01671a809c19040ea5c6932d2b4da8a9c94fbbba88c1398e7b6c054dc
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 5a4ce487d3da3934d330909e15f4b82460918db06fc9ea79826feeef29fe6fe3
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11073)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 7964b85ca8b876da91ea1e94d3641c8c6f898c738fb66b6ba44cb16e6ffd2e3c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: bdc7512ec38c2cc09adba71da2f9eeaa86d77e6218983960216f0ede83a261e7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: a0fb3191ce4c347e6dc4d2c93a2b28d5d01589a91341d353d9d79172a555d6fa
		Secure: false
	Object:
		Variable: varReplacer7204
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7204)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 94bdcb9e8cb378f44a3144406300ba3c2b41a51f62b37f55126d49cfde97c0c9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7185)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 5df46aef80dddddca090acdd92657197befc479b73ddc3b7432fae55c0f221e0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer7191, varReplacer7192)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: a6fbb06376dff1d2afb7843a971fd0e218c77bbe01cec362cd78a1f8eeb0811
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzaE(java.lang.String)>
		SHA-256: 4d0d73ed509b99931dd07e65ab72bb4c38bc5cabf8058c750064f3607fcd6b2
		Secure: true
	Object:
		Variable: varReplacer11074
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11074)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: f8333115dc6d9873d288658ff6e446d86877ae5943c5c7f7f52ef3052fd0028d
		Secure: false
	Object:
		Variable: varReplacer7185
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7185)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 55a6ed43fc70aafb13be063912bc6854fd964a27b18a1395be21f56d524ab22e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4132)
		Method: <com.jiubang.business.advert.util.SSLSocketFactoryEx: void <init>(java.security.KeyStore)>
		SHA-256: 94ab8553e42ba59a07a1812a5f305d5dd46f2d31226889d4e05c796b7127d0d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5430)
		Method: <com.facebook.ads.internal.i.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 3d5c1dd256293615f15e97e031b562e6b4f5d0fcdd532419ad144ad446bde533
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.jiubang.business.advert.util.ConnectionManager: org.apache.http.client.HttpClient getNewHttpClient(org.apache.http.params.HttpParams)>
		SHA-256: 39430a73f0e1dd22ceef384447c8b7f78a6bc07c7f36c9d753b88de424704c9
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7203)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 89ed4d3315aa1335cd27983ca3c1a8fe36f54e61c6b8c3c525371ce2d5bbb956
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 6e6f3a156274bccb5009c67a602212222822b175df2e03889ca0ead18734c307
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 57b34ea97dd082ce3816307185da5f3c24486a235eadb14d113287b38117a418
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer7193)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: 1faec2bd0625124bfdb6af0bf843dfe4485505fa995e47d790e50a1a3f164bb4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7204)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 4ef55ff5af097e4065f1574263a6a559cbfcf5d74b447f36953ad93fd268363b
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11074)
		Method: <com.google.android.gms.internal.zzar: byte[] zzc(byte[],java.lang.String)>
		SHA-256: 9e7491c65dd7ebd6710d39f471239a1275a2d9463377cf6fe34de36be2037840
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.zzbp: byte[] zzz(java.lang.String)>
		SHA-256: b0c1270d8a7c1ba60118aeb2618aeac235345c871438a18cbf79b117c582490a
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 4c3ef24d9dcbe9c3c805a70b30efd3900d8efcc8b976bdf307a218612149c602
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer7189)
		Method: <com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt: byte[] getRawKey(byte[])>
		SHA-256: c48d73fb0b89056d629ab177e2a50b9496dc3ed7400c7ecfb73be093432c57d0
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.t: java.lang.String a(java.lang.String)>
		SHA-256: 4e89201f4bdcd77c27e858ba625da59031a7db9be7b66975f2c164af9219b50c
		Secure: true

Findings in Java Class: com.jiubang.commerce.chargelocker.util.common.utils.AESCrypt

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7186, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7185)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2f6bd2eddca4ef6b3ee420ceb4244420155ade565aeefc24f9abfd8244540894)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7187)


	 in Method: byte[] encrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #89ed4d3315aa1335cd27983ca3c1a8fe36f54e61c6b8c3c525371ce2d5bbb956)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7203)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7204)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7202, $r2)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer7190, $r2)


Findings in Java Class: com.google.android.gms.internal.zzbn

	 in Method: java.lang.String zzB(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d37591be9f5c8c98c54fd518a5339b45bc2f8fa27bd6865004329b350d441c95)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.zzbm: byte[] zzz(java.lang.String)>($r1)


	 in Method: java.lang.String zzA(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d37591be9f5c8c98c54fd518a5339b45bc2f8fa27bd6865004329b350d441c95)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<com.google.android.gms.internal.zzbm: byte[] zzz(java.lang.String)>($r1)


Findings in Java Class: com.google.android.gms.internal.zzar

	 in Method: byte[] zzc(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11074)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11075, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)


Findings in Java Class: com.jiubang.business.advert.util.SSLSocketFactoryEx

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4130, r5, varReplacer4130)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4130, r5, varReplacer4130)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 10
	ConstraintError: 2
	IncompleteOperationError: 2
=====================================================================