public class com.getjar.sdk.utilities.h extends java.lang.Object
{
    private static final java.security.SecureRandom a;
    private static long b;

    static void <clinit>()
    {
        java.security.SecureRandom $r0;

        nop;

        $r0 = new java.security.SecureRandom;

        specialinvoke $r0.<java.security.SecureRandom: void <init>()>();

        <com.getjar.sdk.utilities.h: java.security.SecureRandom a> = $r0;

        return;
    }

    public static long a()
    {
        long $l0;
        java.security.SecureRandom $r0;

        nop;

        $r0 = <com.getjar.sdk.utilities.h: java.security.SecureRandom a>;

        $l0 = virtualinvoke $r0.<java.security.SecureRandom: long nextLong()>();

        <com.getjar.sdk.utilities.h: long b> = $l0;

        $l0 = <com.getjar.sdk.utilities.h: long b>;

        return $l0;
    }

    public static java.lang.String a(java.security.PublicKey, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, varReplacer12993, varReplacer12994;
        com.getjar.sdk.exceptions.SigningException $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        byte[] $r4;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label1;

        $r2 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12994 = "publicKey cannot be null. Please provide a public key while creating the GetJarContext";

        specialinvoke $r2.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12994);

        throw $r2;

     label1:
        $z0 = staticinvoke <com.getjar.sdk.utilities.j: boolean a(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        varReplacer12993 = "data cannot be null";

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12993);

        throw $r3;

     label2:
        $r4 = staticinvoke <com.getjar.sdk.utilities.h: byte[] b(java.security.PublicKey,java.lang.String)>($r0, $r1);

        $r1 = staticinvoke <com.getjar.sdk.utilities.b: java.lang.String a(byte[])>($r4);

        return $r1;
    }

    public static java.security.PublicKey a(byte[])
    {
        byte[] $r0;
        java.security.KeyFactory $r1;
        java.security.spec.X509EncodedKeySpec $r2;
        java.security.PublicKey $r3;
        java.lang.Throwable $r4, $r6;
        java.lang.RuntimeException $r5;
        java.lang.String $r7, varReplacer4475, varReplacer4476;
        java.lang.IllegalArgumentException $r8;

        nop;

        $r0 := @parameter0: byte[];

     label1:
        varReplacer4476 = "RSA";

        $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4476);

     label2:
        $r2 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r0);

        $r3 = virtualinvoke $r1.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label6:
        $r6 := @caughtexception;

        $r7 = <com.getjar.sdk.utilities.Constants: java.lang.String a>;

        varReplacer4475 = "Invalid key specification.";

        staticinvoke <com.getjar.sdk.utilities.Logger: void e(java.lang.String,java.lang.String)>($r7, varReplacer4475);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r6);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
    }

    public static java.util.ArrayList a(java.lang.String, java.lang.String, android.content.Context)
    {
        java.lang.String $r0, $r1, $r6, $r9, $r12, $r13, varReplacer12842, varReplacer12844, varReplacer12845, varReplacer12846, varReplacer12848, varReplacer12849, varReplacer12850, varReplacer12851, varReplacer12852, varReplacer12853, varReplacer12854, varReplacer12855;
        android.content.Context $r2;
        java.util.ArrayList $r3;
        java.lang.IllegalArgumentException $r4;
        org.json.JSONObject $r5;
        java.util.Locale $r7;
        java.lang.Object[] $r8;
        org.json.JSONArray $r10;
        int $i0, $i1, $i2;
        com.getjar.sdk.utilities.Constants$PurchaseState $r11, $r14;
        boolean $z0;
        org.json.JSONException $r15, $r17;
        com.getjar.sdk.data.GooglePurchaseResponse $r16;
        short $s3;
        null_type varReplacer12841, varReplacer12843, varReplacer12847, varReplacer12856;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: android.content.Context;

        if $r0 != null goto label01;

        $r0 = <com.getjar.sdk.utilities.Constants: java.lang.String a>;

        varReplacer12850 = "data is null";

        staticinvoke <com.getjar.sdk.utilities.Logger: void e(java.lang.String,java.lang.String)>($r0, varReplacer12850);

        varReplacer12847 = null;

        return varReplacer12847;

     label01:
        if $r2 != null goto label02;

        $r4 = new java.lang.IllegalArgumentException;

        varReplacer12854 = "context cannot be null";

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12854);

        throw $r4;

     label02:
        $r5 = new org.json.JSONObject;

     label03:
        specialinvoke $r5.<org.json.JSONObject: void <init>(java.lang.String)>($r0);

     label04:
        $r6 = <com.getjar.sdk.utilities.Constants: java.lang.String a>;

        $r7 = <java.util.Locale: java.util.Locale US>;

        $r8 = newarray (java.lang.Object)[1];

     label05:
        $r9 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String toString()>();

     label06:
        $r8[0] = $r9;

     label07:
        varReplacer12855 = "JSONData: %1$s";

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r7, varReplacer12855, $r8);

        staticinvoke <com.getjar.sdk.utilities.Logger: void d(java.lang.String,java.lang.String)>($r6, $r9);

        varReplacer12851 = "orders";

        $r10 = virtualinvoke $r5.<org.json.JSONObject: org.json.JSONArray optJSONArray(java.lang.String)>(varReplacer12851);

     label08:
        if $r10 == null goto label27;

     label09:
        $i0 = virtualinvoke $r10.<org.json.JSONArray: int length()>();

     label10:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $i1 = 0;

     label11:
        if $i1 >= $i0 goto label25;

     label12:
        $r5 = virtualinvoke $r10.<org.json.JSONArray: org.json.JSONObject getJSONObject(int)>($i1);

        varReplacer12844 = "purchaseState";

        $i2 = virtualinvoke $r5.<org.json.JSONObject: int getInt(java.lang.String)>(varReplacer12844);

        $r11 = staticinvoke <com.getjar.sdk.utilities.Constants$PurchaseState: com.getjar.sdk.utilities.Constants$PurchaseState valueOf(int)>($i2);

        varReplacer12848 = "productId";

        $r6 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer12848);

        varReplacer12852 = "orderId";

        varReplacer12853 = "";

        $r9 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer12852, varReplacer12853);

        varReplacer12845 = "notificationId";

        $z0 = virtualinvoke $r5.<org.json.JSONObject: boolean has(java.lang.String)>(varReplacer12845);

     label13:
        if $z0 == 0 goto label26;

     label14:
        varReplacer12846 = "notificationId";

        $r12 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String getString(java.lang.String)>(varReplacer12846);

     label15:
        varReplacer12842 = "developerPayload";

        varReplacer12843 = null;

        $r13 = virtualinvoke $r5.<org.json.JSONObject: java.lang.String optString(java.lang.String,java.lang.String)>(varReplacer12842, varReplacer12843);

     label16:
        $r14 = <com.getjar.sdk.utilities.Constants$PurchaseState: com.getjar.sdk.utilities.Constants$PurchaseState PURCHASED>;

        if $r11 == $r14 goto label19;

     label17:
        $i1 = $i1 + 1;

        goto label11;

     label18:
        $r15 := @caughtexception;

        varReplacer12841 = null;

        return varReplacer12841;

     label19:
        $r16 = new com.getjar.sdk.data.GooglePurchaseResponse;

     label20:
        $i2 = virtualinvoke $r11.<com.getjar.sdk.utilities.Constants$PurchaseState: int ordinal()>();

     label21:
        $s3 = (short) $i2;

     label22:
        specialinvoke $r16.<com.getjar.sdk.data.GooglePurchaseResponse: void <init>(java.lang.String,java.lang.String,java.lang.String,short,java.lang.String,java.lang.String,java.lang.String)>($r12, $r9, $r6, $s3, $r13, $r0, $r1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

     label23:
        goto label17;

     label24:
        $r17 := @caughtexception;

        $r0 = <com.getjar.sdk.utilities.Constants: java.lang.String a>;

        varReplacer12849 = "JSON exception: ";

        staticinvoke <com.getjar.sdk.utilities.Logger: void c(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, varReplacer12849, $r17);

        varReplacer12856 = null;

        return varReplacer12856;

     label25:
        return $r3;

     label26:
        $r12 = null;

        goto label15;

     label27:
        $i0 = 0;

        goto label10;

        catch org.json.JSONException from label03 to label04 with label18;
        catch org.json.JSONException from label05 to label06 with label18;
        catch org.json.JSONException from label07 to label08 with label18;
        catch org.json.JSONException from label09 to label10 with label18;
        catch org.json.JSONException from label12 to label13 with label24;
        catch org.json.JSONException from label14 to label15 with label24;
        catch org.json.JSONException from label15 to label16 with label24;
        catch org.json.JSONException from label20 to label21 with label24;
        catch org.json.JSONException from label22 to label23 with label24;
    }

    public static boolean a(java.security.PublicKey, java.lang.String, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, $r2, varReplacer12931, varReplacer12932, varReplacer12934, varReplacer12935, varReplacer12936, varReplacer12937, varReplacer12938, varReplacer12939, varReplacer12941, varReplacer12942, varReplacer12943, varReplacer12944, varReplacer12945, varReplacer12946;
        byte $b0, $b3;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        java.security.MessageDigest $r4;
        byte[] $r5, $r7;
        javax.crypto.Cipher $r6;
        com.getjar.sdk.exceptions.SigningException $r8;
        java.lang.Throwable $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        int $i1, $i2, varReplacer12933, varReplacer12940;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $z0 = 0;

        if $r0 != null goto label01;

        $r3 = new java.lang.IllegalArgumentException;

        varReplacer12944 = "publicKey cannot be null";

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12944);

        throw $r3;

     label01:
        $z1 = staticinvoke <com.getjar.sdk.utilities.j: boolean a(java.lang.String)>($r1);

        if $z1 == 0 goto label02;

        $r3 = new java.lang.IllegalArgumentException;

        varReplacer12937 = "signedData cannot be null";

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12937);

        throw $r3;

     label02:
        $z1 = staticinvoke <com.getjar.sdk.utilities.j: boolean a(java.lang.String)>($r2);

        if $z1 == 0 goto label03;

        $r3 = new java.lang.IllegalArgumentException;

        varReplacer12935 = "signature cannot be null";

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12935);

        throw $r3;

     label03:
        varReplacer12938 = "SHA1";

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12938);

        varReplacer12932 = "UTF-8";

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer12932);

        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5);

        varReplacer12946 = "RSA/ECB/PKCS1Padding";

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12946);

        varReplacer12933 = 2;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12933, $r0);

        $r7 = staticinvoke <com.getjar.sdk.utilities.b: byte[] a(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7);

     label04:
        if $r7 != null goto label08;

        $r8 = new com.getjar.sdk.exceptions.SigningException;

     label05:
        varReplacer12942 = "Unable to do Licensing. Signing failed";

        specialinvoke $r8.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12942);

     label06:
        throw $r8;

     label07:
        $r9 := @caughtexception;

        $r8 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12945 = "The RSA algorithm is unavailable, failed to do licensing";

        specialinvoke $r8.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12945);

        throw $r8;

     label08:
        $i1 = lengthof $r5;

        $i2 = lengthof $r7;

        if $i1 != $i2 goto label18;

        $i1 = 0;

     label09:
        $i2 = lengthof $r5;

        if $i1 >= $i2 goto label19;

        $b3 = $r5[$i1];

        $b0 = $r7[$i1];

        if $b3 == $b0 goto label10;

        return $z0;

     label10:
        $i2 = lengthof $r5;

        $i2 = $i2 + -1;

        if $i1 != $i2 goto label11;

        $z0 = 1;

     label11:
        $i1 = $i1 + 1;

        goto label09;

     label12:
        $r10 := @caughtexception;

        $r8 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12941 = "The RSA algorithm is unavailable, failed to do licensing.";

        specialinvoke $r8.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12941);

        throw $r8;

     label13:
        $r11 := @caughtexception;

        $r8 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12931 = "The public key was invalid, failed to do licensing.";

        specialinvoke $r8.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12931);

        throw $r8;

     label14:
        $r12 := @caughtexception;

        $r8 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12939 = "The public key was invalid, failed to do licensing.";

        specialinvoke $r8.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12939);

        throw $r8;

     label15:
        $r13 := @caughtexception;

        $r8 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12943 = "The public key was invalid, failed to do licensing.";

        specialinvoke $r8.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12943);

        throw $r8;

     label16:
        $r14 := @caughtexception;

        $r8 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12936 = "The UTF-8 encoding is unavailable, failed to do licensing.";

        specialinvoke $r8.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12936);

        throw $r8;

     label17:
        $r15 := @caughtexception;

        $r8 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12934 = "Signing failed. Unable to do licensing";

        specialinvoke $r8.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12934);

        throw $r8;

     label18:
        varReplacer12940 = 0;

        return varReplacer12940;

     label19:
        return $z0;

        catch java.security.NoSuchAlgorithmException from label03 to label04 with label07;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label07;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label12;
        catch javax.crypto.NoSuchPaddingException from label05 to label06 with label12;
        catch java.security.InvalidKeyException from label03 to label04 with label13;
        catch java.security.InvalidKeyException from label05 to label06 with label13;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label14;
        catch javax.crypto.IllegalBlockSizeException from label05 to label06 with label14;
        catch javax.crypto.BadPaddingException from label03 to label04 with label15;
        catch javax.crypto.BadPaddingException from label05 to label06 with label15;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label16;
        catch java.io.UnsupportedEncodingException from label05 to label06 with label16;
        catch java.io.IOException from label03 to label04 with label17;
        catch java.io.IOException from label05 to label06 with label17;
    }

    private static byte[] b(java.security.PublicKey, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, varReplacer12997, varReplacer12998, varReplacer12999, varReplacer13000, varReplacer13001, varReplacer13002, varReplacer13003, varReplacer13004, varReplacer13005, varReplacer13007, varReplacer13008;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        java.security.MessageDigest $r3;
        byte[] $r4;
        javax.crypto.Cipher $r5;
        java.lang.Throwable $r6, $r8, $r9, $r10, $r11, $r12;
        com.getjar.sdk.exceptions.SigningException $r7;
        null_type varReplacer13006;
        int varReplacer13009;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        if $r0 != null goto label01;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer13000 = "publicKey cannot be null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer13000);

        throw $r2;

     label01:
        $z0 = staticinvoke <com.getjar.sdk.utilities.j: boolean a(java.lang.String)>($r1);

        if $z0 == 0 goto label02;

        $r2 = new java.lang.IllegalArgumentException;

        varReplacer12999 = "data cannot be null";

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(varReplacer12999);

        throw $r2;

     label02:
        if $r1 == null goto label11;

     label03:
        varReplacer13003 = "SHA1";

        $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13003);

        varReplacer13004 = "UTF-8";

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer13004);

        $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4);

        varReplacer13001 = "RSA/ECB/PKCS1Padding";

        $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13001);

        varReplacer13009 = 1;

        virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer13009, $r0);

        $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

     label04:
        return $r4;

     label05:
        $r6 := @caughtexception;

        $r7 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer13008 = "The RSA algorithm is unavailable, failed to do licensing";

        specialinvoke $r7.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer13008);

        throw $r7;

     label06:
        $r8 := @caughtexception;

        $r7 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer13007 = "The RSA algorithm is unavailable, failed to do licensing.";

        specialinvoke $r7.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer13007);

        throw $r7;

     label07:
        $r9 := @caughtexception;

        $r7 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer13005 = "The private key was invalid, failed to do licensing.";

        specialinvoke $r7.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer13005);

        throw $r7;

     label08:
        $r10 := @caughtexception;

        $r7 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12998 = "Unable to create the signature, failed to do licensing.";

        specialinvoke $r7.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12998);

        throw $r7;

     label09:
        $r11 := @caughtexception;

        $r7 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer13002 = "Unable to create the signature, failed to do licensing.";

        specialinvoke $r7.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer13002);

        throw $r7;

     label10:
        $r12 := @caughtexception;

        $r7 = new com.getjar.sdk.exceptions.SigningException;

        varReplacer12997 = "Unable to create the signature, failed to do licensing.";

        specialinvoke $r7.<com.getjar.sdk.exceptions.SigningException: void <init>(java.lang.String)>(varReplacer12997);

        throw $r7;

     label11:
        varReplacer13006 = null;

        return varReplacer13006;

        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label06;
        catch java.security.InvalidKeyException from label03 to label04 with label07;
        catch javax.crypto.IllegalBlockSizeException from label03 to label04 with label08;
        catch javax.crypto.BadPaddingException from label03 to label04 with label09;
        catch java.io.UnsupportedEncodingException from label03 to label04 with label10;
    }
}
