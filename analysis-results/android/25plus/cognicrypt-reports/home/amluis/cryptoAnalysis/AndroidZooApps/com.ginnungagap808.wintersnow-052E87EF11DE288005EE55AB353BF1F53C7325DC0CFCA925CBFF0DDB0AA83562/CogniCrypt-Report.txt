Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer76)
		Method: <com.ginnungagap808.wintersnow.Ncdr: java.lang.String decryptName(java.lang.String)>
		SHA-256: 55267687f86b5a4133947ddde450074b77d30d76b3e6cff58c16c0615404b3b5
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer78)
		Method: <com.ginnungagap808.wintersnow.Ncdr: java.lang.String decryptName(java.lang.String)>
		SHA-256: 877342fdede8874c4eb1911597aa66247e2052b5f2829b1308145943ca03ad50
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcu(java.lang.String)>
		SHA-256: a107f0a15b16b8e021c95c077590c48b5b253ddc4b8bda38bce253162a9875cd
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <com.ginnungagap808.wintersnow.Ncdr: byte[] decodeFile(java.io.InputStream)>
		SHA-256: 4fd6c94dbb5673db8db2a1d7433d69a283739e46f0497559818d060800ea6f8
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <com.ginnungagap808.wintersnow.Ncdr: java.lang.String decryptName(java.lang.String)>
		SHA-256: f5cc7f8e41b4eeb2a683319c80f193040be742a2089477e492defe065d093172
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer306)
		Method: <com.ginnungagap808.wintersnow.Ncdr: byte[] decodeFile(java.io.InputStream)>
		SHA-256: b1b9ffef851ba17fabd4a0728fc7f114f709672f7c08bec592f9fd11183b7b5d
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.ginnungagap808.wintersnow.Ncdr: java.lang.String decryptName(java.lang.String)>
		SHA-256: 131d36e842de25524391e72b7b6bcb3a383e42f0f83daff56187a71d45b7422b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKeyFactory
		Statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer305)
		Method: <com.ginnungagap808.wintersnow.Ncdr: byte[] decodeFile(java.io.InputStream)>
		SHA-256: 826153f094321dc45e9752f17cd4c9f4df05b3adb45ec648bfb7258623854656
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer658)
		Method: <com.google.android.gms.ads.internal.util.client.zza: java.lang.String zzcu(java.lang.String)>
		SHA-256: c4f05570c2a83dcc942e7f10f63c174052c1a2542d0b51ee966a2900e5049540
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r11.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r0, $r10)
		Method: <com.ginnungagap808.wintersnow.Ncdr: byte[] decodeFile(java.io.InputStream)>
		SHA-256: f62a818173783d12003363df9d017885a7de845e46aa9a55a2359ef295648b92
		Secure: true

Findings in Java Class: com.ginnungagap808.wintersnow.Ncdr

	 in Method: java.lang.String decryptName(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #877342fdede8874c4eb1911597aa66247e2052b5f2829b1308145943ca03ad50)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithHmacSHA224AndAES_256, PBEwithHmacSHA1AndAES_256, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithMD5ANDDES, PBKDF2withHmacSHA1And8BIT, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, HmacSHA224, PBEwithMD5ANDRC2, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBEwithSHAANDTWOFISH-CBC	, PBKDF2withHmacSHA512, HmacSHA1, PBKDF2withHmacSHA224, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, DESede, PBEwithHmacSHA256AndAES_128, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithHmacSHA512AndAES_256, PBEwithSHAAND40BITRC4, PBEwithHmacSHA1AndAES_128, HmacSHA512, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer78)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #55267687f86b5a4133947ddde450074b77d30d76b3e6cff58c16c0615404b3b5)
			First parameter (with value "DES") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer76)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer80, $r7)


	 in Method: byte[] decodeFile(java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r9 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #826153f094321dc45e9752f17cd4c9f4df05b3adb45ec648bfb7258623854656)
			First parameter (with value "DES") should be any of {PBEwithSHA1ANDRC2, PBEwithHmacSHA1, PBEwithHmacSHA224AndAES_256, PBEwithHmacSHA1AndAES_256, HmacSHA384, PBEwithHmacSHA512AndAES_128, PBEwithMD5ANDDES, PBKDF2withHmacSHA1And8BIT, PBEwithSHA256AND256BITAES-CBC-BC, PBEwithSHAAND2-KEYTRIPLEDES-CBC, PBKDF2withHmacSHA384, PBEwithSHAAND40BITRC2-CBC, PBEwithSHAAND3-KEYTRIPLEDES-CBC, PBEwithMD5AND192BITAES-CBC-OPENSSL, PBEwithSHAAND256BITAES-CBC-BC, PBEwithSHA256AND192BITAES-CBC-BC, PBEwithMD5AND256BITAES-CBC-OPENSSL, HmacSHA224, PBEwithMD5ANDRC2, PBEwithHmacSHA384AndAES_128, PBEwithHmacSHA256AndAES_256, HmacSHA256, PBEwithSHAANDTWOFISH-CBC	, PBKDF2withHmacSHA512, HmacSHA1, PBKDF2withHmacSHA224, PBEwithHmacSHA384AndAES_256, PBKDF2withHmacSHA256, AES, PBEwithSHAAND192BITAES-CBC-BC, PBKDF2withHmacSHA1, PBEwithSHAAND128BITRC4, PBEwithSHA1ANDDES, PBEwithSHA256AND128BITAES-CBC-BC, PBEwithHmacSHA224AndAES_128, DESede, PBEwithHmacSHA256AndAES_128, PBEwithMD5AND128BITAES-CBC-OPENSSL, PBEwithHmacSHA512AndAES_256, PBEwithSHAAND40BITRC4, PBEwithHmacSHA1AndAES_128, HmacSHA512, PBEwithSHAAND128BITRC2-CBC, PBEwithSHAAND128BITAES-CBC-BC}
			at statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer305)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b1b9ffef851ba17fabd4a0728fc7f114f709672f7c08bec592f9fd11183b7b5d)
			First parameter (with value "DES") should be any of {AES_128, ARC4, AES, BLOWFISH, DESede, AES_256, ChaCha20, RSA}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer306)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b1b9ffef851ba17fabd4a0728fc7f114f709672f7c08bec592f9fd11183b7b5d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r11.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r0, $r10)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	ConstraintError: 4
	RequiredPredicateError: 3
=====================================================================