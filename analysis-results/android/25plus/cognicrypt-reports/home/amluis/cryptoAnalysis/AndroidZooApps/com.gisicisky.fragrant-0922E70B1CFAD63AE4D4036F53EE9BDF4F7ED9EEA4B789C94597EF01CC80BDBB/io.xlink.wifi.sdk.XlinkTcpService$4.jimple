class io.xlink.wifi.sdk.XlinkTcpService$4 extends java.lang.Thread
{
    final io.xlink.wifi.sdk.XlinkTcpService a;

    void <init>(io.xlink.wifi.sdk.XlinkTcpService)
    {
        io.xlink.wifi.sdk.XlinkTcpService$4 $r0;
        io.xlink.wifi.sdk.XlinkTcpService $r1;

        nop;

        $r0 := @this: io.xlink.wifi.sdk.XlinkTcpService$4;

        $r1 := @parameter0: io.xlink.wifi.sdk.XlinkTcpService;

        $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a> = $r1;

        specialinvoke $r0.<java.lang.Thread: void <init>()>();

        return;
    }

    public void run()
    {
        io.xlink.wifi.sdk.XlinkTcpService$4 $r0;
        boolean $z0;
        io.xlink.wifi.sdk.XlinkTcpService $r1, $r16;
        java.net.InetAddress $r2;
        java.lang.String $r3, varReplacer6029, varReplacer6032, varReplacer6033, varReplacer6036, varReplacer6038, varReplacer6039, varReplacer6046, varReplacer6048, varReplacer6051, varReplacer6052;
        javax.net.ssl.SSLContext $r4;
        java.security.KeyStore $r5, $r9;
        android.content.res.Resources $r6;
        android.content.res.AssetManager $r7;
        java.io.InputStream $r8;
        char[] $r10;
        javax.net.ssl.KeyManagerFactory $r11;
        javax.net.ssl.TrustManagerFactory $r12;
        javax.net.ssl.KeyManager[] $r13;
        javax.net.ssl.TrustManager[] $r14;
        javax.net.ssl.SSLSocketFactory $r15;
        int $i0, varReplacer6030, varReplacer6031, varReplacer6034, varReplacer6035, varReplacer6037, varReplacer6040, varReplacer6041, varReplacer6042, varReplacer6043, varReplacer6044, varReplacer6045, varReplacer6047, varReplacer6049, varReplacer6050;
        java.net.Socket $r17;
        javax.net.ssl.SSLSocket $r18;
        java.lang.Throwable $r19, $r20, $r22;
        java.lang.Exception $r21;
        java.io.IOException r23;
        null_type varReplacer6028;

        nop;

        $r0 := @this: io.xlink.wifi.sdk.XlinkTcpService$4;

        specialinvoke $r0.<java.lang.Thread: void run()>();

        $z0 = staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: boolean c()>();

        if $z0 == 0 goto label01;

        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

        varReplacer6052 = "isConnected is true  --return connectInSSL()";

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: void a(io.xlink.wifi.sdk.XlinkTcpService,java.lang.String)>($r1, varReplacer6052);

        return;

     label01:
        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

     label02:
        $r2 = staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: java.net.InetAddress c(io.xlink.wifi.sdk.XlinkTcpService)>($r1);

     label03:
        if $r2 != null goto label07;

     label04:
        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

     label05:
        $r3 = <io.xlink.wifi.sdk.e.a: java.lang.String a>;

     label06:
        $r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r3);

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: java.net.InetAddress a(io.xlink.wifi.sdk.XlinkTcpService,java.net.InetAddress)>($r1, $r2);

     label07:
        varReplacer6051 = "SSL";

        $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6051);

        varReplacer6038 = "BKS";

        $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer6038);

     label08:
        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

     label09:
        $r6 = virtualinvoke $r1.<io.xlink.wifi.sdk.XlinkTcpService: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.content.res.AssetManager getAssets()>();

        $r3 = staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: java.lang.String g()>();

        $r8 = virtualinvoke $r7.<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>($r3);

        varReplacer6039 = "BKS";

        $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer6039);

        $r3 = staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: java.lang.String h()>();

        $r10 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r8, $r10);

        varReplacer6029 = "X509";

        $r11 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer6029);

        $r3 = staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: java.lang.String h()>();

        $r10 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r10);

        varReplacer6032 = "X509";

        $r12 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer6032);

        virtualinvoke $r12.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r9);

        $r13 = virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();

        $r14 = virtualinvoke $r12.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        varReplacer6028 = null;

        virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r14, varReplacer6028);

     label10:
        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

     label11:
        varReplacer6048 = "SSLContext initialize succeed";

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: void a(io.xlink.wifi.sdk.XlinkTcpService,java.lang.String)>($r1, varReplacer6048);

        $r15 = virtualinvoke $r4.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label12:
        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

        $r16 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

     label13:
        $r2 = staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: java.net.InetAddress c(io.xlink.wifi.sdk.XlinkTcpService)>($r16);

     label14:
        $i0 = <io.xlink.wifi.sdk.e.a: int b>;

     label15:
        $r17 = virtualinvoke $r15.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>($r2, $i0);

     label16:
        $r18 = (javax.net.ssl.SSLSocket) $r17;

     label17:
        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: java.net.Socket a(io.xlink.wifi.sdk.XlinkTcpService,java.net.Socket)>($r1, $r18);

     label18:
        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

        $r16 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

     label19:
        $r17 = staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: java.net.Socket d(io.xlink.wifi.sdk.XlinkTcpService)>($r16);

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: void b(io.xlink.wifi.sdk.XlinkTcpService,java.net.Socket)>($r1, $r17);

     label20:
        varReplacer6037 = 0;

        <io.xlink.wifi.sdk.XlinkTcpService: boolean d> = varReplacer6037;

        return;

     label21:
        $r19 := @caughtexception;

     label22:
        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: void e(io.xlink.wifi.sdk.XlinkTcpService)>($r1);

        varReplacer6045 = 0;

        <io.xlink.wifi.sdk.XlinkTcpService: boolean d> = varReplacer6045;

        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

        varReplacer6033 = "UnknownHostException connect SSL tcp error...";

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: void a(io.xlink.wifi.sdk.XlinkTcpService,java.lang.String)>($r1, varReplacer6033);

        varReplacer6030 = 5;

        varReplacer6031 = -1;

        staticinvoke <io.xlink.wifi.sdk.d.c: void a(int,int)>(varReplacer6030, varReplacer6031);

     label23:
        varReplacer6040 = 0;

        <io.xlink.wifi.sdk.XlinkTcpService: boolean d> = varReplacer6040;

        return;

     label24:
        $r20 := @caughtexception;

     label25:
        r23 = (java.io.IOException) $r20;

        virtualinvoke r23.<java.io.IOException: void printStackTrace()>();

        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: void e(io.xlink.wifi.sdk.XlinkTcpService)>($r1);

        varReplacer6042 = 0;

        <io.xlink.wifi.sdk.XlinkTcpService: boolean d> = varReplacer6042;

        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

        varReplacer6046 = "connect SSL tcp IOException...";

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: void a(io.xlink.wifi.sdk.XlinkTcpService,java.lang.String)>($r1, varReplacer6046);

        varReplacer6043 = 5;

        varReplacer6044 = -1;

        staticinvoke <io.xlink.wifi.sdk.d.c: void a(int,int)>(varReplacer6043, varReplacer6044);

     label26:
        varReplacer6041 = 0;

        <io.xlink.wifi.sdk.XlinkTcpService: boolean d> = varReplacer6041;

        return;

     label27:
        $r21 := @caughtexception;

     label28:
        virtualinvoke $r21.<java.lang.Exception: void printStackTrace()>();

        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: void e(io.xlink.wifi.sdk.XlinkTcpService)>($r1);

        varReplacer6034 = 0;

        <io.xlink.wifi.sdk.XlinkTcpService: boolean d> = varReplacer6034;

        $r1 = $r0.<io.xlink.wifi.sdk.XlinkTcpService$4: io.xlink.wifi.sdk.XlinkTcpService a>;

        varReplacer6036 = "connect SSL tcp Exception...";

        staticinvoke <io.xlink.wifi.sdk.XlinkTcpService: void a(io.xlink.wifi.sdk.XlinkTcpService,java.lang.String)>($r1, varReplacer6036);

        varReplacer6049 = 5;

        varReplacer6050 = -1;

        staticinvoke <io.xlink.wifi.sdk.d.c: void a(int,int)>(varReplacer6049, varReplacer6050);

     label29:
        varReplacer6035 = 0;

        <io.xlink.wifi.sdk.XlinkTcpService: boolean d> = varReplacer6035;

        return;

     label30:
        $r22 := @caughtexception;

        varReplacer6047 = 0;

        <io.xlink.wifi.sdk.XlinkTcpService: boolean d> = varReplacer6047;

        throw $r22;

        catch java.net.UnknownHostException from label02 to label03 with label21;
        catch java.net.UnknownHostException from label06 to label08 with label21;
        catch java.net.UnknownHostException from label09 to label10 with label21;
        catch java.net.UnknownHostException from label11 to label12 with label21;
        catch java.net.UnknownHostException from label13 to label14 with label21;
        catch java.net.UnknownHostException from label15 to label16 with label21;
        catch java.net.UnknownHostException from label17 to label18 with label21;
        catch java.net.UnknownHostException from label19 to label20 with label21;
        catch java.io.IOException from label02 to label03 with label24;
        catch java.io.IOException from label06 to label08 with label24;
        catch java.io.IOException from label09 to label10 with label24;
        catch java.io.IOException from label11 to label12 with label24;
        catch java.io.IOException from label13 to label14 with label24;
        catch java.io.IOException from label15 to label16 with label24;
        catch java.io.IOException from label17 to label18 with label24;
        catch java.io.IOException from label19 to label20 with label24;
        catch java.lang.Exception from label01 to label03 with label27;
        catch java.lang.Exception from label04 to label05 with label27;
        catch java.lang.Exception from label06 to label14 with label27;
        catch java.lang.Exception from label15 to label20 with label27;
        catch java.lang.Throwable from label01 to label03 with label30;
        catch java.lang.Throwable from label04 to label20 with label30;
        catch java.lang.Throwable from label22 to label23 with label30;
        catch java.lang.Throwable from label25 to label26 with label30;
        catch java.lang.Throwable from label28 to label29 with label30;
    }
}
