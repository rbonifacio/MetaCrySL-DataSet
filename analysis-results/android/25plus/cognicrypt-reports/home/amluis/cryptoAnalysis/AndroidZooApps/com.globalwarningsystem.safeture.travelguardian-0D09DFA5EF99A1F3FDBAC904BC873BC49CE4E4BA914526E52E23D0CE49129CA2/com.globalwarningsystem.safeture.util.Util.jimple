public class com.globalwarningsystem.safeture.util.Util extends java.lang.Object
{
    public static final long FIVE_MINUTES;
    public static final long ONE_DAY;
    public static final long ONE_HOUR;
    public static final long ONE_MINUTE;
    private static final java.lang.String TAG;

    public void <init>()
    {
        com.globalwarningsystem.safeture.util.Util $r0;

        $r0 := @this: com.globalwarningsystem.safeture.util.Util;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static javax.crypto.SecretKey aesKey(java.lang.String, byte[])
    {
        java.lang.String $r0, varReplacer1736, varReplacer1737;
        byte[] $r1;
        javax.crypto.spec.PBEKeySpec $r2, r8;
        char[] $r3;
        javax.crypto.SecretKeyFactory $r4;
        javax.crypto.SecretKey $r5;
        java.lang.Throwable $r6, $r7;
        javax.crypto.spec.SecretKeySpec r9;
        java.security.NoSuchAlgorithmException r10;
        java.security.spec.InvalidKeySpecException r11;
        null_type varReplacer1734, varReplacer1735;
        int varReplacer1738, varReplacer1739;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        r8 = new javax.crypto.spec.PBEKeySpec;

        $r2 = r8;

     label1:
        $r3 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        varReplacer1738 = 10000;

        varReplacer1739 = 128;

        specialinvoke r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer1738, varReplacer1739);

        varReplacer1737 = "PBKDF2WithHmacSHA1";

        $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1737);

        $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2);

        $r1 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>();

     label2:
        r9 = new javax.crypto.spec.SecretKeySpec;

     label3:
        varReplacer1736 = "AES";

        specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1736);

     label4:
        return r9;

     label5:
        $r6 := @caughtexception;

        r10 = (java.security.NoSuchAlgorithmException) $r6;

        virtualinvoke r10.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer1734 = null;

        return varReplacer1734;

     label6:
        $r7 := @caughtexception;

        r11 = (java.security.spec.InvalidKeySpecException) $r7;

        virtualinvoke r11.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        varReplacer1735 = null;

        return varReplacer1735;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
    }

    public static int[] convertIntegers(java.util.List)
    {
        java.util.List $r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.Object $r2;
        java.lang.Integer $r3;

        nop;

        $r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        $r1 = newarray (int)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

        return $r1;

     label2:
        $r2 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r1[$i0] = $i1;

        $i0 = $i0 + 1;

        goto label1;
    }

    public static com.google.code.microlog4android.Logger createLogger(android.content.Context)
    {
        android.content.Context $r0;
        com.google.code.microlog4android.Logger $r1;
        java.lang.String varReplacer2713, varReplacer2714;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.google.code.microlog4android.LoggerFactory: com.google.code.microlog4android.Logger getLogger()>();

        goto label1;

     label1:
        varReplacer2713 = "Util";

        varReplacer2714 = "No DEBUG";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer2713, varReplacer2714);

        staticinvoke <com.globalwarningsystem.safeture.util.Util: void disableFileLogging(android.content.Context,com.google.code.microlog4android.Logger)>($r0, $r1);

        return $r1;
    }

    public static java.lang.String createPassword(android.content.Context)
    {
        android.content.Context $r0;
        com.globalwarningsystem.safeture.model.Receiver $r1;
        java.lang.String $r2, $r3, varReplacer1858;
        java.security.MessageDigest $r4;
        java.lang.StringBuilder $r5, r9;
        byte[] $r6;
        java.lang.Throwable $r7;
        java.lang.Exception $r8;
        java.security.NoSuchAlgorithmException r10;
        null_type varReplacer1857, varReplacer1859;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.globalwarningsystem.safeture.util.PrefsUtil: com.globalwarningsystem.safeture.model.Receiver getReceiver(android.content.Context)>($r0);

        $r2 = virtualinvoke $r1.<com.globalwarningsystem.safeture.model.Receiver: java.lang.String getPasswordHashSeed()>();

        $r3 = staticinvoke <com.globalwarningsystem.safeture.util.PhoneStatusUtil: java.lang.String getDeviceId(android.content.Context)>($r0);

     label1:
        varReplacer1858 = "SHA-1";

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1858);

     label2:
        r9 = new java.lang.StringBuilder;

        $r5 = r9;

     label3:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r6);

        $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        $r3 = staticinvoke <com.globalwarningsystem.safeture.util.Util: java.lang.String getHexString(byte[])>($r6);

     label4:
        return $r3;

     label5:
        $r7 := @caughtexception;

        r10 = (java.security.NoSuchAlgorithmException) $r7;

        virtualinvoke r10.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer1857 = null;

        return varReplacer1857;

     label6:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        varReplacer1859 = null;

        return varReplacer1859;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public static java.lang.String createPurchaseId(android.content.Context)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3, $r4;
        java.lang.StringBuilder $r2, r9;
        java.security.MessageDigest $r5;
        byte[] $r6;
        java.lang.Throwable $r7;
        java.lang.Exception $r8;
        java.security.NoSuchAlgorithmException r10;

        $r0 := @parameter0: android.content.Context;

        $r1 = staticinvoke <com.globalwarningsystem.safeture.util.PrefsUtil: java.lang.String getSubscriptionId(android.content.Context)>($r0);

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("purchaseTag = ");

        $r2 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Util", $r3);

        $r3 = staticinvoke <com.globalwarningsystem.safeture.util.PhoneStatusUtil: java.lang.String getDeviceId(android.content.Context)>($r0);

        r9 = new java.lang.StringBuilder;

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("deviceId = ");

        $r2 = virtualinvoke r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Util", $r4);

     label1:
        $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

     label2:
        r9 = new java.lang.StringBuilder;

        $r2 = r9;

     label3:
        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke r9.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r5.<java.security.MessageDigest: void update(byte[])>($r6);

        $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>();

        $r1 = staticinvoke <com.globalwarningsystem.safeture.util.Util: java.lang.String getHexString(byte[])>($r6);

     label4:
        return $r1;

     label5:
        $r7 := @caughtexception;

        r10 = (java.security.NoSuchAlgorithmException) $r7;

        virtualinvoke r10.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        return null;

     label6:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label6;
    }

    public static void disableFileLogging(android.content.Context, com.google.code.microlog4android.Logger)
    {
        android.content.Context $r0;
        com.google.code.microlog4android.Logger $r1;
        java.lang.String $r2;
        int $i0;
        com.google.code.microlog4android.Level $r3;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.google.code.microlog4android.Logger;

        $i0 = <com.globalwarningsystem.safeture.R$string: int log_file>;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>($i0);

        staticinvoke <com.globalwarningsystem.safeture.util.Util: void removeLogFile(android.content.Context,java.lang.String)>($r0, $r2);

        $r3 = <com.google.code.microlog4android.Level: com.google.code.microlog4android.Level ERROR>;

        virtualinvoke $r1.<com.google.code.microlog4android.Logger: void setLevel(com.google.code.microlog4android.Level)>($r3);

        virtualinvoke $r1.<com.google.code.microlog4android.Logger: void removeAllAppenders()>();

        return;
    }

    public static boolean doRemoveLogFile(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.io.File $r2;
        boolean $z0;
        int varReplacer2739, varReplacer2740;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r0, $r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label1;

        varReplacer2739 = 1;

        return varReplacer2739;

     label1:
        varReplacer2740 = 0;

        return varReplacer2740;
    }

    public static void enableFileLogging(android.content.Context, com.google.code.microlog4android.Logger)
    {
        android.content.Context $r0;
        com.google.code.microlog4android.Logger $r1;
        com.google.code.microlog4android.appender.FileAppender $r2;
        com.google.code.microlog4android.format.PatternFormatter $r3;
        com.google.code.microlog4android.Level $r4;
        int $i0, $i2;
        java.lang.String $r5, $r6;
        long $l1;
        boolean $z0;
        com.google.code.microlog4android.appender.LogCatAppender $r7;
        com.google.code.microlog4android.appender.Appender $r8;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: com.google.code.microlog4android.Logger;

        virtualinvoke $r1.<com.google.code.microlog4android.Logger: void resetLogger()>();

        $r4 = <com.google.code.microlog4android.Level: com.google.code.microlog4android.Level DEBUG>;

        virtualinvoke $r1.<com.google.code.microlog4android.Logger: void setLevel(com.google.code.microlog4android.Level)>($r4);

        $i0 = <com.globalwarningsystem.safeture.R$string: int log_file>;

        $r5 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>($i0);

        $i0 = <com.globalwarningsystem.safeture.R$string: int log_file_size_in_bytes>;

        $r6 = virtualinvoke $r0.<android.content.Context: java.lang.String getString(int)>($i0);

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        $r2 = new com.google.code.microlog4android.appender.FileAppender;

        specialinvoke $r2.<com.google.code.microlog4android.appender.FileAppender: void <init>()>();

        virtualinvoke $r2.<com.google.code.microlog4android.appender.FileAppender: void setFileName(java.lang.String)>($r5);

        $z0 = staticinvoke <com.globalwarningsystem.safeture.util.Util: boolean isFileTooLarge(java.lang.String,long)>($r5, $l1);

        if $z0 == 0 goto label3;

        virtualinvoke $r2.<com.google.code.microlog4android.appender.FileAppender: void setAppend(boolean)>(0);

     label1:
        virtualinvoke $r1.<com.google.code.microlog4android.Logger: void addAppender(com.google.code.microlog4android.appender.Appender)>($r2);

        $r7 = new com.google.code.microlog4android.appender.LogCatAppender;

        specialinvoke $r7.<com.google.code.microlog4android.appender.LogCatAppender: void <init>()>();

        virtualinvoke $r1.<com.google.code.microlog4android.Logger: void addAppender(com.google.code.microlog4android.appender.Appender)>($r7);

        $r3 = new com.google.code.microlog4android.format.PatternFormatter;

        specialinvoke $r3.<com.google.code.microlog4android.format.PatternFormatter: void <init>()>();

        virtualinvoke $r3.<com.google.code.microlog4android.format.PatternFormatter: void setPattern(java.lang.String)>("%d{ISO8601} %P %c - %m %T");

        $i0 = virtualinvoke $r1.<com.google.code.microlog4android.Logger: int getNumberOfAppenders()>();

        $i2 = 0;

     label2:
        if $i2 < $i0 goto label4;

        return;

     label3:
        virtualinvoke $r2.<com.google.code.microlog4android.appender.FileAppender: void setAppend(boolean)>(1);

        goto label1;

     label4:
        $r8 = virtualinvoke $r1.<com.google.code.microlog4android.Logger: com.google.code.microlog4android.appender.Appender getAppender(int)>($i2);

        interfaceinvoke $r8.<com.google.code.microlog4android.appender.Appender: void setFormatter(com.google.code.microlog4android.format.Formatter)>($r3);

        $i2 = $i2 + 1;

        goto label2;
    }

    private static byte[] encryptData(java.lang.String, byte[], byte[], byte[])
    {
        java.lang.String $r0, varReplacer1727;
        byte[] $r1, $r2, $r3;
        javax.crypto.spec.IvParameterSpec $r4, r13;
        javax.crypto.SecretKey $r5;
        javax.crypto.Cipher $r6;
        java.lang.Throwable $r7, $r8, $r9, $r10, $r11, $r12;
        java.security.NoSuchAlgorithmException r14;
        javax.crypto.NoSuchPaddingException r15;
        java.security.InvalidKeyException r16;
        java.security.InvalidAlgorithmParameterException r17;
        javax.crypto.IllegalBlockSizeException r18;
        javax.crypto.BadPaddingException r19;
        null_type varReplacer1721, varReplacer1722, varReplacer1723, varReplacer1725, varReplacer1726, varReplacer1728;
        int varReplacer1724;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $r3 := @parameter3: byte[];

        r13 = new javax.crypto.spec.IvParameterSpec;

        $r4 = r13;

        specialinvoke r13.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2);

        $r5 = staticinvoke <com.globalwarningsystem.safeture.util.Util: javax.crypto.SecretKey aesKey(java.lang.String,byte[])>($r0, $r3);

     label1:
        varReplacer1727 = "AES/CBC/PKCS5Padding";

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1727);

        varReplacer1724 = 1;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1724, $r5, $r4);

        $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1);

     label2:
        return $r1;

     label3:
        $r7 := @caughtexception;

        r14 = (java.security.NoSuchAlgorithmException) $r7;

        virtualinvoke r14.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer1725 = null;

        return varReplacer1725;

     label4:
        $r8 := @caughtexception;

        r15 = (javax.crypto.NoSuchPaddingException) $r8;

        virtualinvoke r15.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        varReplacer1726 = null;

        return varReplacer1726;

     label5:
        $r9 := @caughtexception;

        r16 = (java.security.InvalidKeyException) $r9;

        virtualinvoke r16.<java.security.InvalidKeyException: void printStackTrace()>();

        varReplacer1728 = null;

        return varReplacer1728;

     label6:
        $r10 := @caughtexception;

        r17 = (java.security.InvalidAlgorithmParameterException) $r10;

        virtualinvoke r17.<java.security.InvalidAlgorithmParameterException: void printStackTrace()>();

        varReplacer1721 = null;

        return varReplacer1721;

     label7:
        $r11 := @caughtexception;

        r18 = (javax.crypto.IllegalBlockSizeException) $r11;

        virtualinvoke r18.<javax.crypto.IllegalBlockSizeException: void printStackTrace()>();

        varReplacer1722 = null;

        return varReplacer1722;

     label8:
        $r12 := @caughtexception;

        r19 = (javax.crypto.BadPaddingException) $r12;

        virtualinvoke r19.<javax.crypto.BadPaddingException: void printStackTrace()>();

        varReplacer1723 = null;

        return varReplacer1723;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch javax.crypto.NoSuchPaddingException from label1 to label2 with label4;
        catch java.security.InvalidKeyException from label1 to label2 with label5;
        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label6;
        catch javax.crypto.IllegalBlockSizeException from label1 to label2 with label7;
        catch javax.crypto.BadPaddingException from label1 to label2 with label8;
    }

    public static java.lang.String encryptDataForSms(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r2, varReplacer1689, varReplacer1690, varReplacer1691, varReplacer1693;
        int $i0, $i2, $i3, $i6, varReplacer1692, varReplacer1694, varReplacer1695, varReplacer1696;
        byte $b1, $b5, $b7, $b8;
        byte[] $r1, $r3, $r4, $r6;
        java.util.Locale $r5;
        java.lang.StringBuilder $r7, r12;
        java.io.ByteArrayOutputStream $r8, r13;
        java.io.DataOutputStream $r9, r14;
        char $c4;
        java.lang.Throwable $r10, $r11;
        java.io.IOException r15;

        nop;

        $r2 := @parameter0: java.lang.String;

        $r0 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        varReplacer1692 = 16;

        $r3 = staticinvoke <com.globalwarningsystem.safeture.util.Util: byte[] generateDataOfLength(int,int)>(varReplacer1692, $i0);

        varReplacer1695 = 8;

        $r4 = staticinvoke <com.globalwarningsystem.safeture.util.Util: byte[] generateDataOfLength(int,int)>(varReplacer1695, $i0);

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r5);

        $r6 = newarray (byte)[32];

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r1 = newarray (byte)[$i2];

        $i2 = 0;

     label01:
        $i3 = lengthof $r1;

        if $i2 < $i3 goto label15;

        r12 = new java.lang.StringBuilder;

        varReplacer1693 = "input size ";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1693);

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r7 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1689 = "Util";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1689, $r2);

        r13 = new java.io.ByteArrayOutputStream;

        $r8 = r13;

     label02:
        specialinvoke r13.<java.io.ByteArrayOutputStream: void <init>()>();

     label03:
        r14 = new java.io.DataOutputStream;

        $r9 = r14;

     label04:
        specialinvoke r14.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r8);

     label05:
        $i2 = 0;

     label06:
        $i3 = lengthof $r1;

        if $i2 < $i3 goto label18;

     label07:
        virtualinvoke $r9.<java.io.DataOutputStream: void flush()>();

        $r1 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label08:
        $r6 = $r1;

     label09:
        r12 = new java.lang.StringBuilder;

        varReplacer1691 = "packedBuffer size ";

        specialinvoke r12.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1691);

        $i2 = lengthof $r6;

        $r7 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1690 = "Util";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1690, $r2);

        $r4 = staticinvoke <com.globalwarningsystem.safeture.util.Util: byte[] encryptData(java.lang.String,byte[],byte[],byte[])>($r0, $r6, $r3, $r4);

        $r3 = null;

        r13 = new java.io.ByteArrayOutputStream;

        $r8 = r13;

     label10:
        specialinvoke r13.<java.io.ByteArrayOutputStream: void <init>()>();

     label11:
        r14 = new java.io.DataOutputStream;

        $r9 = r14;

     label12:
        specialinvoke r14.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r8);

        varReplacer1696 = 1;

        virtualinvoke $r9.<java.io.DataOutputStream: void writeByte(int)>(varReplacer1696);

        virtualinvoke $r9.<java.io.DataOutputStream: void writeInt(int)>($i0);

        virtualinvoke $r9.<java.io.DataOutputStream: void write(byte[])>($r4);

        virtualinvoke $r9.<java.io.DataOutputStream: void flush()>();

        $r4 = virtualinvoke $r8.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label13:
        $r3 = $r4;

     label14:
        varReplacer1694 = 2;

        $r2 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, varReplacer1694);

        return $r2;

     label15:
        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        $b5 = (byte) $c4;

        if $b5 <= 63 goto label16;

        $i3 = $b5 + -64;

        $b5 = (byte) $i3;

     label16:
        if $b5 >= 0 goto label17;

        $b5 = 0;

     label17:
        $r1[$i2] = $b5;

        $i2 = $i2 + 1;

        goto label01;

     label18:
        $b1 = $r1[$i2];

        $i3 = $i2 + 1;

        $i6 = lengthof $r1;

        if $i3 >= $i6 goto label28;

        $i3 = $i2 + 1;

        $b7 = $r1[$i3];

     label19:
        $i3 = $i2 + 2;

        $i6 = lengthof $r1;

        if $i3 >= $i6 goto label29;

        $i3 = $i2 + 2;

        $b5 = $r1[$i3];

     label20:
        $i3 = $i2 + 3;

        $i6 = lengthof $r1;

        if $i3 >= $i6 goto label30;

        $i3 = $i2 + 3;

        $b8 = $r1[$i3];

     label21:
        $i3 = $b1 << 2;

        $i3 = $i3 & 252;

        $b1 = $b7 >> 4;

        $b1 = $b1 & 3;

        $i3 = $i3 | $b1;

     label22:
        virtualinvoke $r9.<java.io.DataOutputStream: void writeByte(int)>($i3);

     label23:
        $i3 = $b7 << 4;

        $i3 = $i3 & 240;

        $b7 = $b5 >> 2;

        $b7 = $b7 & 15;

        $i3 = $i3 | $b7;

     label24:
        virtualinvoke $r9.<java.io.DataOutputStream: void writeByte(int)>($i3);

     label25:
        $i3 = $b5 << 6;

        $i3 = $i3 & 192;

        $b5 = $b8 & 63;

        $i3 = $i3 | $b5;

     label26:
        virtualinvoke $r9.<java.io.DataOutputStream: void writeByte(int)>($i3);

     label27:
        $i2 = $i2 + 4;

        goto label06;

     label28:
        $b7 = 0;

        goto label19;

     label29:
        $b5 = 0;

        goto label20;

     label30:
        $b8 = 0;

        goto label21;

     label31:
        $r10 := @caughtexception;

        r15 = (java.io.IOException) $r10;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        goto label09;

     label32:
        $r11 := @caughtexception;

        r15 = (java.io.IOException) $r11;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

        goto label14;

        catch java.io.IOException from label02 to label03 with label31;
        catch java.io.IOException from label04 to label05 with label31;
        catch java.io.IOException from label07 to label08 with label31;
        catch java.io.IOException from label10 to label11 with label32;
        catch java.io.IOException from label12 to label13 with label32;
        catch java.io.IOException from label22 to label23 with label31;
        catch java.io.IOException from label24 to label25 with label31;
        catch java.io.IOException from label26 to label27 with label31;
    }

    public static java.lang.String encryptText(java.lang.String, java.lang.String, int)
    {
        java.lang.String $r0, $r1, varReplacer3046;
        int $i0, varReplacer3045, varReplacer3047, varReplacer3048, varReplacer3049;
        java.lang.Throwable $r2, $r3;
        java.io.ByteArrayOutputStream $r4, r10;
        java.io.DataOutputStream $r5, r11;
        byte[] $r6, $r7, $r8, $r9;
        java.io.UnsupportedEncodingException r12;
        java.io.IOException r13;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        varReplacer3048 = 16;

        $r6 = staticinvoke <com.globalwarningsystem.safeture.util.Util: byte[] randomDataOfLength(int)>(varReplacer3048);

        varReplacer3049 = 8;

        $r7 = staticinvoke <com.globalwarningsystem.safeture.util.Util: byte[] randomDataOfLength(int)>(varReplacer3049);

        $r8 = null;

     label01:
        varReplacer3046 = "UTF-8";

        $r9 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3046);

     label02:
        $r8 = $r9;

     label03:
        $r9 = staticinvoke <com.globalwarningsystem.safeture.util.Util: byte[] encryptData(java.lang.String,byte[],byte[],byte[])>($r0, $r8, $r6, $r7);

        $r8 = null;

        r10 = new java.io.ByteArrayOutputStream;

        $r4 = r10;

     label04:
        specialinvoke r10.<java.io.ByteArrayOutputStream: void <init>()>();

     label05:
        r11 = new java.io.DataOutputStream;

        $r5 = r11;

     label06:
        specialinvoke r11.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r4);

        varReplacer3047 = 1;

        virtualinvoke $r5.<java.io.DataOutputStream: void writeByte(int)>(varReplacer3047);

        virtualinvoke $r5.<java.io.DataOutputStream: void writeInt(int)>($i0);

     label07:
        $i0 = lengthof $r6;

     label08:
        virtualinvoke $r5.<java.io.DataOutputStream: void writeByte(int)>($i0);

        virtualinvoke $r5.<java.io.DataOutputStream: void write(byte[])>($r6);

     label09:
        $i0 = lengthof $r7;

     label10:
        virtualinvoke $r5.<java.io.DataOutputStream: void writeByte(int)>($i0);

        virtualinvoke $r5.<java.io.DataOutputStream: void write(byte[])>($r7);

        virtualinvoke $r5.<java.io.DataOutputStream: void write(byte[])>($r9);

        virtualinvoke $r5.<java.io.DataOutputStream: void flush()>();

        $r6 = virtualinvoke $r4.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label11:
        $r8 = $r6;

     label12:
        varReplacer3045 = 2;

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r8, varReplacer3045);

        return $r0;

     label13:
        $r3 := @caughtexception;

        r12 = (java.io.UnsupportedEncodingException) $r3;

        virtualinvoke r12.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label03;

     label14:
        $r2 := @caughtexception;

        r13 = (java.io.IOException) $r2;

        virtualinvoke r13.<java.io.IOException: void printStackTrace()>();

        goto label12;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label13;
        catch java.io.IOException from label04 to label05 with label14;
        catch java.io.IOException from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label14;
        catch java.io.IOException from label10 to label11 with label14;
    }

    private static byte[] generateDataOfLength(int, int)
    {
        int $i0, $i1, $i2, varReplacer1733;
        java.lang.Throwable $r0;
        java.lang.StringBuffer $r1, r6;
        byte[] $r2, $r4;
        java.lang.String $r3, r8, varReplacer1729, varReplacer1730, varReplacer1731, varReplacer1732;
        java.lang.StringBuilder $r5, r7;
        java.io.UnsupportedEncodingException r9;

        nop;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r2 = null;

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $i1 = 0;

        r6 = new java.lang.StringBuffer;

        $r1 = r6;

        varReplacer1732 = "";

        specialinvoke r6.<java.lang.StringBuffer: void <init>(java.lang.String)>(varReplacer1732);

     label1:
        if $i1 < $i0 goto label5;

     label2:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        varReplacer1733 = 0;

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1733, $i0);

        varReplacer1729 = "UTF-8";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1729);

     label3:
        $r2 = $r4;

     label4:
        r7 = new java.lang.StringBuilder;

        varReplacer1731 = "generateDataOfLength:";

        specialinvoke r7.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer1731);

        r8 = new java.lang.String;

        specialinvoke r8.<java.lang.String: void <init>(byte[])>($r2);

        $r5 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        varReplacer1730 = "Util";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1730, $r3);

        return $r2;

     label5:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = $i1 + $i2;

        goto label1;

     label6:
        $r0 := @caughtexception;

        r9 = (java.io.UnsupportedEncodingException) $r0;

        virtualinvoke r9.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        goto label4;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label6;
    }

    public static java.lang.String getBase36String(java.lang.String)
    {
        java.lang.String $r0, varReplacer1709, varReplacer1710, varReplacer1712;
        java.lang.Throwable $r1;
        java.math.BigInteger $r2;
        int varReplacer1711;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label4;

        $r2 = new java.math.BigInteger;

     label1:
        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String)>($r0);

        varReplacer1711 = 36;

        $r0 = virtualinvoke $r2.<java.math.BigInteger: java.lang.String toString(int)>(varReplacer1711);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        varReplacer1709 = "Util";

        varReplacer1710 = "getBase36String - NumberFormatException - Use empty string";

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(varReplacer1709, varReplacer1710);

     label4:
        varReplacer1712 = "";

        return varReplacer1712;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.String getCurrentTime()
    {
        java.util.Date $r0;
        java.lang.CharSequence $r1;
        java.lang.String $r2, varReplacer2656;

        nop;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>()>();

        varReplacer2656 = "MMM dd, k:mm";

        $r1 = staticinvoke <android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>(varReplacer2656, $r0);

        $r2 = (java.lang.String) $r1;

        return $r2;
    }

    public static java.lang.String getHexString(byte[])
    {
        byte[] $r0;
        java.lang.String $r1, varReplacer1756;
        int $i0, $i1, varReplacer1755, varReplacer1757;
        java.lang.StringBuilder $r2;
        byte $b2;
        short $s3;

        nop;

        $r0 := @parameter0: byte[];

        $r1 = "";

        if $r0 == null goto label3;

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label2;

        return $r1;

     label2:
        $r2 = new java.lang.StringBuilder;

        $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $i1 = $s3 + 256;

        varReplacer1757 = 16;

        $r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, varReplacer1757);

        varReplacer1755 = 1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(varReplacer1755);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $i0 = $i0 + 1;

        goto label1;

     label3:
        varReplacer1756 = "";

        return varReplacer1756;
    }

    private static long getLogFileSize(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1, $r2;
        long $l0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, $r0);

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }

    public static boolean hasSwitchedSimCard(android.content.Context)
    {
        android.content.Context $r0, $r1;
        com.globalwarningsystem.safeture.app.ApplicationGws $r2;
        com.google.code.microlog4android.Logger $r3;
        java.lang.String $r4, $r5, $r7, varReplacer2461, varReplacer2462;
        java.lang.StringBuilder $r6;
        boolean $z0;
        int varReplacer2463, varReplacer2464, varReplacer2465;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke $r0.<android.content.Context: android.content.Context getApplicationContext()>();

        $r2 = (com.globalwarningsystem.safeture.app.ApplicationGws) $r1;

        $r3 = virtualinvoke $r2.<com.globalwarningsystem.safeture.app.ApplicationGws: com.google.code.microlog4android.Logger getLogger()>();

        $r4 = staticinvoke <com.globalwarningsystem.safeture.util.PrefsUtil: java.lang.String getSimCard(android.content.Context)>($r0);

        $r5 = staticinvoke <com.globalwarningsystem.safeture.util.PhoneStatusUtil: java.lang.String getSimSerialNumber(android.content.Context)>($r0);

        $r6 = new java.lang.StringBuilder;

        varReplacer2462 = "Util - hasSwitchedSimCard - old = ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2462);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.code.microlog4android.Logger: void debug(java.lang.Object)>($r7);

        $r6 = new java.lang.StringBuilder;

        varReplacer2461 = "Util - hasSwitchedSimCard - new = ";

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer2461);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<com.google.code.microlog4android.Logger: void debug(java.lang.Object)>($r7);

        if $r5 == null goto label2;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        varReplacer2463 = 0;

        return varReplacer2463;

     label1:
        varReplacer2465 = 1;

        return varReplacer2465;

     label2:
        varReplacer2464 = 0;

        return varReplacer2464;
    }

    private static boolean isFileTooLarge(java.lang.String, long)
    {
        java.lang.String $r0;
        long $l0, $l1;
        byte $b2;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        $l1 = staticinvoke <com.globalwarningsystem.safeture.util.Util: long getLogFileSize(java.lang.String)>($r0);

        $b2 = $l1 cmp $l0;

        if $b2 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public static void logException(com.google.code.microlog4android.Logger, java.lang.Throwable)
    {
        com.google.code.microlog4android.Logger $r0;
        java.lang.Throwable $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, varReplacer210, varReplacer211, varReplacer212;
        java.lang.StackTraceElement[] $r4;
        int $i0, $i1;
        java.lang.StackTraceElement $r5;

        nop;

        $r0 := @parameter0: com.google.code.microlog4android.Logger;

        $r1 := @parameter1: java.lang.Throwable;

        $r2 = new java.lang.StringBuilder;

        varReplacer211 = "Exception message = ";

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer211);

        $r3 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getMessage()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<com.google.code.microlog4android.Logger: void debug(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r1.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        $i0 = 0;

     label1:
        $i1 = lengthof $r4;

        if $i0 < $i1 goto label2;

        return;

     label2:
        $r2 = new java.lang.StringBuilder;

        varReplacer212 = "StackTrace(";

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer212);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        varReplacer210 = ") - ";

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer210);

        $r5 = $r4[$i0];

        $r3 = virtualinvoke $r5.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<com.google.code.microlog4android.Logger: void debug(java.lang.Object)>($r3);

        $i0 = $i0 + 1;

        goto label1;
    }

    private static byte[] randomDataOfLength(int)
    {
        int $i0;
        byte[] $r0;
        java.security.SecureRandom $r1;

        nop;

        $i0 := @parameter0: int;

        $r0 = newarray (byte)[$i0];

        $r1 = new java.security.SecureRandom;

        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0);

        return $r0;
    }

    public static void removeLogFile(android.content.Context, java.lang.String)
    {
        android.content.Context $r0;
        java.lang.String $r1, $r3, varReplacer2736;
        java.io.File $r2;
        boolean $z0;
        java.lang.Integer $r4;
        int $i0;
        java.lang.Class $r5;
        java.lang.Class[] $r6;
        java.lang.reflect.Method $r7;
        java.lang.Object[] $r8;
        java.lang.Object $r9;
        java.lang.Throwable $r10;

        nop;

        $r0 := @parameter0: android.content.Context;

        $r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <android.os.Environment: java.io.File getExternalStorageDirectory()>();

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        $z0 = staticinvoke <com.globalwarningsystem.safeture.util.Util: boolean doRemoveLogFile(java.lang.String,java.lang.String)>($r3, $r1);

        if $z0 != 0 goto label8;

        $r3 = <android.os.Build$VERSION: java.lang.String SDK>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r3);

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        if $i0 < 8 goto label8;

        $r5 = class "Landroid/content/Context;";

     label1:
        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "Ljava/lang/String;";

        varReplacer2736 = "getExternalFilesDir";

        $r7 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(varReplacer2736, $r6);

        $r8 = newarray (java.lang.Object)[1];

        $r9 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r0, $r8);

        $r2 = (java.io.File) $r9;

     label2:
        if $r2 == null goto label8;

     label3:
        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

     label4:
        if $z0 == 0 goto label8;

     label5:
        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <com.globalwarningsystem.safeture.util.Util: boolean doRemoveLogFile(java.lang.String,java.lang.String)>($r3, $r1);

     label6:
        return;

     label7:
        $r10 := @caughtexception;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static java.lang.String truncTo5Decimals(java.lang.String)
    {
        java.lang.String $r0, varReplacer1714, varReplacer1716;
        int $i0, varReplacer1715;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer1716 = ".";

        $i0 = virtualinvoke $r0.<java.lang.String: int indexOf(java.lang.String)>(varReplacer1716);

        if $i0 != -1 goto label1;

        varReplacer1714 = "";

        return varReplacer1714;

     label1:
        $i0 = $i0 + 6;

        varReplacer1715 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1715, $i0);

        return $r0;
    }

    public static java.lang.String truncateToMaxLength(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1, varReplacer1708;

        nop;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $r0 == null goto label1;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 <= $i0 goto label1;

        varReplacer1708 = 0;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1708, $i0);

     label1:
        return $r0;
    }
}
