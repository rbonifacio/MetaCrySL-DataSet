public class com.paytm.pgsdk.PaytmSSLSocketFactory extends javax.net.ssl.SSLSocketFactory
{
    private volatile javax.net.ssl.SSLContext mSSLContext;

    protected void <init>(android.content.Context, com.paytm.pgsdk.PaytmClientCertificate)
    {
        com.paytm.pgsdk.PaytmSSLSocketFactory $r0;
        android.content.Context $r1;
        com.paytm.pgsdk.PaytmClientCertificate $r2;
        com.paytm.pgsdk.PaytmSSLSocketFactory$1 $r3, r21;
        java.lang.Exception $r4, $r5;
        java.lang.String $r6, $r11, varReplacer579, varReplacer580, varReplacer581, varReplacer582, varReplacer583, varReplacer586, varReplacer587, varReplacer589, varReplacer590, varReplacer591, varReplacer592, varReplacer593, varReplacer594, varReplacer595, varReplacer596, varReplacer597;
        java.lang.StringBuilder $r7, r22;
        java.security.KeyStore $r8;
        android.content.res.Resources $r9, $r10;
        int $i0;
        java.io.InputStream $r12;
        char[] $r13;
        java.util.Enumeration $r14;
        boolean $z0;
        java.lang.Object $r15;
        java.security.cert.Certificate $r16;
        javax.net.ssl.SSLContext $r17;
        java.lang.Object[] $r18;
        javax.net.ssl.KeyManagerFactory $r19;
        javax.net.ssl.KeyManager[] $r20;
        javax.net.ssl.TrustManager[] r23;
        null_type varReplacer577, varReplacer578, varReplacer584, varReplacer585, varReplacer588;

        nop;

        $r0 := @this: com.paytm.pgsdk.PaytmSSLSocketFactory;

        $r1 := @parameter0: android.content.Context;

        $r2 := @parameter1: com.paytm.pgsdk.PaytmClientCertificate;

        specialinvoke $r0.<javax.net.ssl.SSLSocketFactory: void <init>()>();

        r21 = new com.paytm.pgsdk.PaytmSSLSocketFactory$1;

        $r3 = r21;

        specialinvoke r21.<com.paytm.pgsdk.PaytmSSLSocketFactory$1: void <init>(com.paytm.pgsdk.PaytmSSLSocketFactory)>($r0);

        if $r2 == null goto label13;

     label01:
        $r6 = $r2.<com.paytm.pgsdk.PaytmClientCertificate: java.lang.String mFileName>;

     label02:
        if $r6 == null goto label13;

        r22 = new java.lang.StringBuilder;

        $r7 = r22;

     label03:
        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        varReplacer580 = "Reading the certificate ";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer580);

        $r6 = $r2.<com.paytm.pgsdk.PaytmClientCertificate: java.lang.String mFileName>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        varReplacer586 = ".p12";

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(varReplacer586);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>($r6);

        varReplacer589 = "pkcs12";

        $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer589);

        $r9 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = $r2.<com.paytm.pgsdk.PaytmClientCertificate: java.lang.String mFileName>;

        $r11 = virtualinvoke $r1.<android.content.Context: java.lang.String getPackageName()>();

        varReplacer587 = "raw";

        $i0 = virtualinvoke $r10.<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>($r6, varReplacer587, $r11);

        $r12 = virtualinvoke $r9.<android.content.res.Resources: java.io.InputStream openRawResource(int)>($i0);

        $r6 = $r2.<com.paytm.pgsdk.PaytmClientCertificate: java.lang.String mPassword>;

        $r13 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r8.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r13);

        $r14 = virtualinvoke $r8.<java.security.KeyStore: java.util.Enumeration aliases()>();

     label04:
        $z0 = interfaceinvoke $r14.<java.util.Enumeration: boolean hasMoreElements()>();

     label05:
        if $z0 == 0 goto label11;

     label06:
        $r15 = interfaceinvoke $r14.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r6 = (java.lang.String) $r15;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String toString()>();

        $r16 = virtualinvoke $r8.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r6);

        $r6 = virtualinvoke $r16.<java.security.cert.Certificate: java.lang.String toString()>();

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>($r6);

     label07:
        goto label04;

     label08:
        $r4 := @caughtexception;

        varReplacer595 = "Exception while attaching Client certificate.";

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>(varReplacer595);

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void printStackTrace(java.lang.Exception)>($r4);

     label09:
        varReplacer593 = "so, setting only the trust manager";

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>(varReplacer593);

        varReplacer597 = "TLS";

        $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer597);

        $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext> = $r17;

        $r17 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        $r18 = newarray (javax.net.ssl.TrustManager)[1];

        $r18[0] = $r3;

        r23 = (javax.net.ssl.TrustManager[]) $r18;

        varReplacer577 = null;

        varReplacer578 = null;

        virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer577, r23, varReplacer577);

        varReplacer590 = "set trust manager";

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>(varReplacer590);

     label10:
        return;

     label11:
        varReplacer581 = "X509";

        $r19 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer581);

        $r6 = $r2.<com.paytm.pgsdk.PaytmClientCertificate: java.lang.String mPassword>;

        $r13 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        virtualinvoke $r19.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r8, $r13);

        varReplacer582 = "TLS";

        $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer582);

        $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext> = $r17;

        $r17 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        $r20 = virtualinvoke $r19.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();

        $r18 = newarray (javax.net.ssl.TrustManager)[1];

        $r18[0] = $r3;

        r23 = (javax.net.ssl.TrustManager[]) $r18;

        varReplacer588 = null;

        virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r20, r23, varReplacer588);

        varReplacer596 = "Client certificate attached.";

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>(varReplacer596);

     label12:
        return;

     label13:
        varReplacer592 = "Client certificate is not found";

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>(varReplacer592);

        varReplacer591 = "so, setting only the trust manager";

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>(varReplacer591);

        varReplacer594 = "TLS";

        $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer594);

        $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext> = $r17;

        $r17 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        $r18 = newarray (javax.net.ssl.TrustManager)[1];

        $r18[0] = $r3;

        r23 = (javax.net.ssl.TrustManager[]) $r18;

        varReplacer584 = null;

        varReplacer585 = null;

        virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer584, r23, varReplacer584);

        varReplacer579 = "set trust manager";

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>(varReplacer579);

     label14:
        return;

     label15:
        $r5 := @caughtexception;

        varReplacer583 = "Exception while setting the trust manager";

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void debugLog(java.lang.String)>(varReplacer583);

        staticinvoke <com.paytm.pgsdk.PaytmUtility: void printStackTrace(java.lang.Exception)>($r5);

        return;

        catch java.lang.Exception from label01 to label02 with label08;
        catch java.lang.Exception from label03 to label05 with label08;
        catch java.lang.Exception from label06 to label07 with label08;
        catch java.lang.Exception from label09 to label10 with label15;
        catch java.lang.Exception from label11 to label12 with label08;
        catch java.lang.Exception from label13 to label14 with label08;
    }

    public java.net.Socket createSocket(java.lang.String, int) throws java.io.IOException, java.net.UnknownHostException
    {
        com.paytm.pgsdk.PaytmSSLSocketFactory $r0;
        java.lang.String $r1;
        int $i0;
        javax.net.ssl.SSLContext $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Socket $r4;
        javax.net.SocketFactory $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.paytm.pgsdk.PaytmSSLSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        if $r2 == null goto label3;

        $r2 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r1, $i0);

     label2:
        exitmonitor $r0;

        return $r4;

     label3:
        $r5 = staticinvoke <com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.SocketFactory getDefault()>();

        $r4 = virtualinvoke $r5.<javax.net.SocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r1, $i0);

     label4:
        goto label2;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) throws java.io.IOException, java.net.UnknownHostException
    {
        com.paytm.pgsdk.PaytmSSLSocketFactory $r0;
        java.lang.String $r1;
        int $i0, $i1;
        java.net.InetAddress $r2;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        java.net.Socket $r5;
        javax.net.SocketFactory $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.paytm.pgsdk.PaytmSSLSocketFactory;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        if $r3 == null goto label3;

        $r3 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

     label2:
        exitmonitor $r0;

        return $r5;

     label3:
        $r6 = staticinvoke <com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.SocketFactory getDefault()>();

        $r5 = virtualinvoke $r6.<javax.net.SocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r1, $i0);

     label4:
        goto label2;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int) throws java.io.IOException
    {
        com.paytm.pgsdk.PaytmSSLSocketFactory $r0;
        java.net.InetAddress $r1;
        int $i0;
        javax.net.ssl.SSLContext $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.net.Socket $r4;
        javax.net.SocketFactory $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.paytm.pgsdk.PaytmSSLSocketFactory;

        $r1 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        entermonitor $r0;

     label1:
        $r2 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        if $r2 == null goto label3;

        $r2 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>($r1, $i0);

     label2:
        exitmonitor $r0;

        return $r4;

     label3:
        $r5 = staticinvoke <com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.SocketFactory getDefault()>();

        $r4 = virtualinvoke $r5.<javax.net.SocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>($r1, $i0);

     label4:
        goto label2;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int) throws java.io.IOException
    {
        com.paytm.pgsdk.PaytmSSLSocketFactory $r0;
        java.net.InetAddress $r1, $r2;
        int $i0, $i1;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        java.net.Socket $r5;
        javax.net.SocketFactory $r6;
        java.lang.Throwable $r7;

        $r0 := @this: com.paytm.pgsdk.PaytmSSLSocketFactory;

        $r1 := @parameter0: java.net.InetAddress;

        $i0 := @parameter1: int;

        $r2 := @parameter2: java.net.InetAddress;

        $i1 := @parameter3: int;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        if $r3 == null goto label3;

        $r3 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r5 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

     label2:
        exitmonitor $r0;

        return $r5;

     label3:
        $r6 = staticinvoke <com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.SocketFactory getDefault()>();

        $r5 = virtualinvoke $r6.<javax.net.SocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>($r1, $i0, $r2, $i1);

     label4:
        goto label2;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException
    {
        com.paytm.pgsdk.PaytmSSLSocketFactory $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;
        javax.net.SocketFactory $r5;
        java.lang.Throwable $r6;

        $r0 := @this: com.paytm.pgsdk.PaytmSSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        entermonitor $r0;

     label1:
        $r3 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        if $r3 == null goto label3;

        $r3 = $r0.<com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.ssl.SSLContext mSSLContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

     label2:
        exitmonitor $r0;

        return $r1;

     label3:
        $r5 = staticinvoke <com.paytm.pgsdk.PaytmSSLSocketFactory: javax.net.SocketFactory getDefault()>();

        $r1 = virtualinvoke $r5.<javax.net.SocketFactory: java.net.Socket createSocket(java.lang.String,int)>($r2, $i0);

     label4:
        goto label2;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r0;

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.String[] getDefaultCipherSuites()
    {
        com.paytm.pgsdk.PaytmSSLSocketFactory $r0;

        $r0 := @this: com.paytm.pgsdk.PaytmSSLSocketFactory;

        entermonitor $r0;

        exitmonitor $r0;

        return null;
    }

    public java.lang.String[] getSupportedCipherSuites()
    {
        com.paytm.pgsdk.PaytmSSLSocketFactory $r0;

        $r0 := @this: com.paytm.pgsdk.PaytmSSLSocketFactory;

        entermonitor $r0;

        exitmonitor $r0;

        return null;
    }
}
