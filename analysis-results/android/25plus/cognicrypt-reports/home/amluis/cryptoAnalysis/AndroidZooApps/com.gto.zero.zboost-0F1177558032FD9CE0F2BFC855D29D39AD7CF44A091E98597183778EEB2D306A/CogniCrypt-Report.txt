Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: varReplacer9765
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9765)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 5c9a874ef274d5b851d7ab4416cb5c388f16603cef462839872fc37df7e40d31
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9763)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 1861f1fda64184f903fdcaabcc362f27a91164aa51c312b6e2682f40dcecf649
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer9029)
		Method: <com.gto.zero.zboost.database.i: void <init>(android.content.Context)>
		SHA-256: 7ec30595d051a0a7bc25027ac3bb9549a5d5be1d915ca849fe6ba5dec6518f4b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer9055)
		Method: <com.gto.zero.zboost.database.c: void <init>(android.content.Context)>
		SHA-256: e9862c6feaa923a241abc480f0ea0a7a8e6d021abbe52592b5138e2e5539880d
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 28067c78f6b9f9cc96644426aa22057da0e09f52dc078ebb6ca1a3c4ac756fac
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 81a1924c783053f9b8ba0874b4281d48641e9f5fc0008f3e93a1ee9a3e36d975
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 8f2267b288a6974230c49ee6f5c7186b65aa65c38b87b7ea205d114674adb6d1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9059)
		Method: <com.gto.zero.zboost.database.c: void <init>(android.content.Context)>
		SHA-256: a20f09de97b518e9001a6a65f82afb164209bcd4cac32ab20acd388de39ef7b2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9765)
		Method: <com.gto.zero.zboost.database.i: byte[] a(byte[],byte[])>
		SHA-256: 21480c81a2011cc7e7d28d14b5ab6e9a927731bfc051a8cded4ab4a04dddfecf
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9032)
		Method: <com.gto.zero.zboost.database.i: void <init>(android.content.Context)>
		SHA-256: 824f2542bc641311af55338b5653e30c0ea0379c751532bf7df66e05da5e1265
		Secure: false

Findings in Java Class: com.gto.zero.zboost.database.i

	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1861f1fda64184f903fdcaabcc362f27a91164aa51c312b6e2682f40dcecf649)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9763)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9764, $r2, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1861f1fda64184f903fdcaabcc362f27a91164aa51c312b6e2682f40dcecf649)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9763)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9765)


	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer9031, $r2)


Findings in Java Class: com.gto.zero.zboost.database.c

	 in Method: void <init>(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer9057, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 5
=====================================================================