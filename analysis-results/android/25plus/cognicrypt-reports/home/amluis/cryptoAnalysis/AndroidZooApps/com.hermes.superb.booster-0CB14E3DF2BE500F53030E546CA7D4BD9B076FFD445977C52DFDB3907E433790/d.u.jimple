public class d.u extends java.lang.Object implements java.lang.Cloneable
{
    private static final java.util.List A;
    private static final java.util.List z;
    final d.n a;
    public final java.net.Proxy b;
    public final java.util.List c;
    public final java.util.List d;
    final java.util.List e;
    final java.util.List f;
    public final java.net.ProxySelector g;
    public final d.m h;
    final d.c i;
    final d.a.a.e j;
    public final javax.net.SocketFactory k;
    public final javax.net.ssl.SSLSocketFactory l;
    final d.a.g.b m;
    public final javax.net.ssl.HostnameVerifier n;
    public final d.g o;
    public final d.b p;
    public final d.b q;
    public final d.j r;
    public final d.o s;
    public final boolean t;
    public final boolean u;
    public final boolean v;
    public final int w;
    public final int x;
    public final int y;

    static void <clinit>()
    {
        d.v[] $r0;
        d.v $r1;
        java.util.List $r2;
        d.k[] $r3;
        d.k $r4;
        d.u$1 $r5;

        nop;

        $r0 = newarray (d.v)[3];

        $r1 = <d.v: d.v d>;

        $r0[0] = $r1;

        $r1 = <d.v: d.v c>;

        $r0[1] = $r1;

        $r1 = <d.v: d.v b>;

        $r0[2] = $r1;

        $r2 = staticinvoke <d.a.c: java.util.List a(java.lang.Object[])>($r0);

        <d.u: java.util.List z> = $r2;

        $r3 = newarray (d.k)[3];

        $r4 = <d.k: d.k a>;

        $r3[0] = $r4;

        $r4 = <d.k: d.k b>;

        $r3[1] = $r4;

        $r4 = <d.k: d.k c>;

        $r3[2] = $r4;

        $r2 = staticinvoke <d.a.c: java.util.List a(java.lang.Object[])>($r3);

        <d.u: java.util.List A> = $r2;

        $r5 = new d.u$1;

        specialinvoke $r5.<d.u$1: void <init>()>();

        <d.a.a: d.a.a a> = $r5;

        return;
    }

    public void <init>()
    {
        d.u $r0;
        d.u$a $r1;

        $r0 := @this: d.u;

        $r1 = new d.u$a;

        specialinvoke $r1.<d.u$a: void <init>()>();

        specialinvoke $r0.<d.u: void <init>(d.u$a)>($r1);

        return;
    }

    private void <init>(d.u$a)
    {
        d.u $r0;
        d.u$a $r1;
        d.n $r2;
        java.net.Proxy $r3;
        java.util.List $r4;
        java.net.ProxySelector $r5;
        d.m $r6;
        d.c $r7;
        d.a.a.e $r8;
        javax.net.SocketFactory $r9;
        java.util.Iterator $r10;
        boolean $z0, $z1;
        java.lang.Object $r11;
        d.k $r12;
        javax.net.ssl.SSLSocketFactory $r13;
        d.a.g.b $r14, $r17;
        javax.net.ssl.HostnameVerifier $r15;
        d.g $r16, $r18;
        d.b $r19;
        d.j $r20;
        d.o $r21;
        int $i0;
        javax.net.ssl.X509TrustManager $r22;
        d.a.f.e $r23;

        nop;

        $r0 := @this: d.u;

        $r1 := @parameter0: d.u$a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r2 = $r1.<d.u$a: d.n a>;

        $r0.<d.u: d.n a> = $r2;

        $r3 = $r1.<d.u$a: java.net.Proxy b>;

        $r0.<d.u: java.net.Proxy b> = $r3;

        $r4 = $r1.<d.u$a: java.util.List c>;

        $r0.<d.u: java.util.List c> = $r4;

        $r4 = $r1.<d.u$a: java.util.List d>;

        $r0.<d.u: java.util.List d> = $r4;

        $r4 = $r1.<d.u$a: java.util.List e>;

        $r4 = staticinvoke <d.a.c: java.util.List a(java.util.List)>($r4);

        $r0.<d.u: java.util.List e> = $r4;

        $r4 = $r1.<d.u$a: java.util.List f>;

        $r4 = staticinvoke <d.a.c: java.util.List a(java.util.List)>($r4);

        $r0.<d.u: java.util.List f> = $r4;

        $r5 = $r1.<d.u$a: java.net.ProxySelector g>;

        $r0.<d.u: java.net.ProxySelector g> = $r5;

        $r6 = $r1.<d.u$a: d.m h>;

        $r0.<d.u: d.m h> = $r6;

        $r7 = $r1.<d.u$a: d.c i>;

        $r0.<d.u: d.c i> = $r7;

        $r8 = $r1.<d.u$a: d.a.a.e j>;

        $r0.<d.u: d.a.a.e j> = $r8;

        $r9 = $r1.<d.u$a: javax.net.SocketFactory k>;

        $r0.<d.u: javax.net.SocketFactory k> = $r9;

        $r4 = $r0.<d.u: java.util.List d>;

        $r10 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        $z0 = 0;

     label01:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        $r12 = (d.k) $r11;

        if $z0 != 0 goto label02;

        $z0 = $r12.<d.k: boolean d>;

        if $z0 == 0 goto label04;

     label02:
        $z0 = 1;

     label03:
        goto label01;

     label04:
        $z0 = 0;

        goto label03;

     label05:
        $r13 = $r1.<d.u$a: javax.net.ssl.SSLSocketFactory l>;

        if $r13 != null goto label06;

        if $z0 != 0 goto label09;

     label06:
        $r13 = $r1.<d.u$a: javax.net.ssl.SSLSocketFactory l>;

        $r0.<d.u: javax.net.ssl.SSLSocketFactory l> = $r13;

        $r14 = $r1.<d.u$a: d.a.g.b m>;

        $r0.<d.u: d.a.g.b m> = $r14;

     label07:
        $r15 = $r1.<d.u$a: javax.net.ssl.HostnameVerifier n>;

        $r0.<d.u: javax.net.ssl.HostnameVerifier n> = $r15;

        $r16 = $r1.<d.u$a: d.g o>;

        $r14 = $r0.<d.u: d.a.g.b m>;

        $r17 = $r16.<d.g: d.a.g.b c>;

        if $r17 == $r14 goto label10;

        $r18 = new d.g;

        $r4 = $r16.<d.g: java.util.List b>;

        specialinvoke $r18.<d.g: void <init>(java.util.List,d.a.g.b)>($r4, $r14);

     label08:
        $r0.<d.u: d.g o> = $r18;

        $r19 = $r1.<d.u$a: d.b p>;

        $r0.<d.u: d.b p> = $r19;

        $r19 = $r1.<d.u$a: d.b q>;

        $r0.<d.u: d.b q> = $r19;

        $r20 = $r1.<d.u$a: d.j r>;

        $r0.<d.u: d.j r> = $r20;

        $r21 = $r1.<d.u$a: d.o s>;

        $r0.<d.u: d.o s> = $r21;

        $z0 = $r1.<d.u$a: boolean t>;

        $r0.<d.u: boolean t> = $z0;

        $z0 = $r1.<d.u$a: boolean u>;

        $r0.<d.u: boolean u> = $z0;

        $z0 = $r1.<d.u$a: boolean v>;

        $r0.<d.u: boolean v> = $z0;

        $i0 = $r1.<d.u$a: int w>;

        $r0.<d.u: int w> = $i0;

        $i0 = $r1.<d.u$a: int x>;

        $r0.<d.u: int x> = $i0;

        $i0 = $r1.<d.u$a: int y>;

        $r0.<d.u: int y> = $i0;

        return;

     label09:
        $r22 = staticinvoke <d.u: javax.net.ssl.X509TrustManager c()>();

        $r13 = staticinvoke <d.u: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>($r22);

        $r0.<d.u: javax.net.ssl.SSLSocketFactory l> = $r13;

        $r23 = staticinvoke <d.a.f.e: d.a.f.e b()>();

        $r14 = virtualinvoke $r23.<d.a.f.e: d.a.g.b a(javax.net.ssl.X509TrustManager)>($r22);

        $r0.<d.u: d.a.g.b m> = $r14;

        goto label07;

     label10:
        $r18 = $r16;

        goto label08;
    }

    void <init>(d.u$a, byte)
    {
        d.u $r0;
        d.u$a $r1;
        byte $b0;

        nop;

        $r0 := @this: d.u;

        $r1 := @parameter0: d.u$a;

        $b0 := @parameter1: byte;

        specialinvoke $r0.<d.u: void <init>(d.u$a)>($r1);

        return;
    }

    static java.util.List a()
    {
        java.util.List r0;

        nop;

        r0 = <d.u: java.util.List z>;

        return r0;
    }

    private static javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
    {
        javax.net.ssl.X509TrustManager $r0;
        javax.net.ssl.SSLContext $r1;
        java.lang.Object[] $r2;
        javax.net.ssl.SSLSocketFactory $r3;
        java.lang.Throwable $r4;
        java.lang.AssertionError r5;
        javax.net.ssl.TrustManager[] r6;
        null_type varReplacer11791, varReplacer11792;
        java.lang.String varReplacer11793;

        nop;

        $r0 := @parameter0: javax.net.ssl.X509TrustManager;

     label1:
        varReplacer11793 = "TLS";

        $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11793);

     label2:
        $r2 = newarray (javax.net.ssl.TrustManager)[1];

        $r2[0] = $r0;

        r6 = (javax.net.ssl.TrustManager[]) $r2;

     label3:
        varReplacer11791 = null;

        varReplacer11792 = null;

        virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11791, r6, varReplacer11791);

        $r3 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        r5 = new java.lang.AssertionError;

        specialinvoke r5.<java.lang.AssertionError: void <init>()>();

        throw r5;

        catch java.security.GeneralSecurityException from label1 to label2 with label5;
        catch java.security.GeneralSecurityException from label3 to label4 with label5;
    }

    static java.util.List b()
    {
        java.util.List r0;

        nop;

        r0 = <d.u: java.util.List A>;

        return r0;
    }

    private static javax.net.ssl.X509TrustManager c()
    {
        java.lang.String $r0, varReplacer11795;
        javax.net.ssl.TrustManagerFactory $r1;
        javax.net.ssl.TrustManager[] $r2;
        int $i0;
        javax.net.ssl.TrustManager $r3;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.Throwable $r6;
        java.lang.AssertionError $r7;
        javax.net.ssl.X509TrustManager $r8;
        null_type varReplacer11794;

     label1:
        nop;

        $r0 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0);

        varReplacer11794 = null;

        virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer11794);

        $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

     label2:
        $i0 = lengthof $r2;

        if $i0 != 1 goto label3;

        $r3 = $r2[0];

        $z0 = $r3 instanceof javax.net.ssl.X509TrustManager;

        if $z0 != 0 goto label7;

     label3:
        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

     label4:
        varReplacer11795 = "Unexpected default trust managers:";

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer11795);

        $r0 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r0 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r0);

     label5:
        throw $r4;

     label6:
        $r6 := @caughtexception;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label7:
        $r3 = $r2[0];

        $r8 = (javax.net.ssl.X509TrustManager) $r3;

        return $r8;

        catch java.security.GeneralSecurityException from label1 to label2 with label6;
        catch java.security.GeneralSecurityException from label4 to label5 with label6;
    }

    public final d.e a(d.x)
    {
        d.u $r0;
        d.x $r1;
        d.w $r2;

        nop;

        $r0 := @this: d.u;

        $r1 := @parameter0: d.x;

        $r2 = new d.w;

        specialinvoke $r2.<d.w: void <init>(d.u,d.x)>($r0, $r1);

        return $r2;
    }
}
