Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4807)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 41238874388beef59079ab043c9b3985ae26f1acf65a7c45ef193cb984376547
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: f56cf4215caaa8a733e8378cfb647f3970ece59a5a48558b3b04727eae1cba49
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Mac
		Statement: $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5255)
		Method: <com.iLivery.Util.GoogleBusiness: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: ef1f8b8815de947e34b375351bbcf6418e5f654359b313fe7f457978b38fa6f8
		Secure: true
	Object:
		Variable: varReplacer5241
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer5241)
		Method: <com.iLivery.Util.GoogleBusiness: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: db10e8bc801d1d98d2ae13a9d6544f041e31fbd2889ec12123e062d6e79add38
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: c855e860d190c3c96709c64c21c46d56003b48608589e00af4627258a61f004f
		Secure: false
	Object:
		Variable: varReplacer4912
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4912)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 567440f7229e650ddb4bdb1a77c820f0a3b8b285e6949926ed2ac49adb4d3ce1
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer5241)
		Method: <com.iLivery.Util.GoogleBusiness: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: cd7aa3e0caa88c34b60dbe6e6734184e84f1b42691e9d4b161963caefe11f191
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 16f63cda3a667d542b6c04fa51f5f9b22890450b5480107fbaab9a1fcf2d302b
		Secure: false
	Object:
		Variable: varReplacer5056
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5056)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: d570433e79fda1e8764bc7b5a2ce73c8a97c0da980268fc09e8aedda7766596f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5056)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: ad0bbbcb106b8df666a5e62e6721ef7e60f0e74c3a4cd2e13b99b2b7116e17e4
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4914)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 7410bc40deb881d9ae53f2a1adc376fec5613f6caa53287b92a0eade89ef17cb
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5055)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: afb789369b65874caab60b81000181f770b395c9dad09a06da6ef9b01a235ecf
		Secure: false
	Object:
		Variable: varReplacer4807
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4807)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: f739e99b3f6596227df86ebf0f717cdcff5f65d15826dbc3538590afcda96cb3
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: ed3435075df032789f764538e6e2d4e802f8098fdde66379e1f107e649af4337
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4912)
		Method: <com.iLivery.Util.NOTE: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: ab1c2d7eb64420b8bfd20c2d935bb3dd276579f8c9c48464a69bc4fd7ada360d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.iLivery.Util.VODconnect: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 35c33007a6895c54639168661bff33d7d86570b459407958088af4ff83d513fa
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4809)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: fe6ba7adf5dbec59e28d82ef5c4983e606a978a23720856d1873d79a3f2b589b
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r9.<javax.crypto.Mac: byte[] doFinal(byte[])>($r8)
		Method: <com.iLivery.Util.GoogleBusiness: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 5e64bf3ac448eee130e8176aa64cba5323ba3d4c46ca22674c01ffe67741a06b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.iLivery.Util.NOTE: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: ee565529610981d86b653cccf5908c7d009e57fe813ec7deae3a5b95716ad156
		Secure: false

Findings in Java Class: com.iLivery.Util.NOTE

	 in Method: byte[] encrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4808, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4807)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4808, $r3, $r2)


	 in Method: byte[] decrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer4912)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4913, $r3, $r2)


Findings in Java Class: com.iLivery.Util.VODconnect

	 in Method: byte[] encrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5057, $r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5056)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5057, $r3, $r2)


Findings in Java Class: com.iLivery.Util.GoogleBusiness

	 in Method: java.lang.String returnURL(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer5241)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 12
=====================================================================