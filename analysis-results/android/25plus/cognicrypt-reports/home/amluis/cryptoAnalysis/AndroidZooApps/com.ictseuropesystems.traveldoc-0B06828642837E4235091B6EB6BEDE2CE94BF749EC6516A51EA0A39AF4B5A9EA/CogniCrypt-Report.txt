Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r4.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: 86e2bdadbd28e98546428b1483a8dc60295ed3ff3fbffbfe742a1ac49316a3e4
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: f8754fc2203cd5fbea0f66218d67e9377b5324bb12cf41ee69706e9a99ebcfda
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1404)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: a11c5e03e02c41511c2a662ee809c3a01b1d59c813193ed1a39c8c8e5e060bac
		Secure: false
	Object:
		Variable: varReplacer1312
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1312)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 2d3393c231bbf41f16c5f4d697ca33eb0b144cb51ef4d5258e7bd6e916d2684a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1402)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 5b8462c0d682e100ccaab975bef95f9e407a3e4f374a4b4ad731fa653eb8e3b9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer303)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: f73108fcd2993f8abd4dd637c29cfa8a6a462ae01a9065d2e05ec98b61f64a0a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1313)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 215312b0a3c316d5570afb4b1dd61093f4c945b59881ee5324107f2ed5de46bf
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1312)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 8b933fffe19613ee79fc3a36bf2c0481a91f0c871b711f123299045dfc0e9ace
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer306)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: f6febd3d9aef059c1d5feb651c10db35814e6aedd711378054ab89a56a9a5aa4
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: ba017190752a4f013238b836f951e1d6b709e7cc1395f76453db08895c174f44
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: d84c88669cc7d1f67b33fd2bd5cdbcb9200d691aba2d0997506a1a0c2c583d7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] encrypt(byte[],byte[])>
		SHA-256: 52f378e153e52c182217d592c1009e7e48c577514baed8800096b4bab8909038
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] getRawKey()>
		SHA-256: 2a5e7a70979d8aecc40526927c78ccb1c007d8bb8babcb9fdf9227494bf3adf9
		Secure: true
	Object:
		Variable: varReplacer1402
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1402)
		Method: <com.ictseuropesystems.traveldoc.security.Crypt: byte[] decrypt(byte[],byte[])>
		SHA-256: 3446fc43c882fe0f9ae8e4258a78b5a0f7fbee7535926fd0d1fcec97138198ad
		Secure: false

Findings in Java Class: com.ictseuropesystems.traveldoc.security.Crypt

	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1311, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #215312b0a3c316d5570afb4b1dd61093f4c945b59881ee5324107f2ed5de46bf)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1313)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #215312b0a3c316d5570afb4b1dd61093f4c945b59881ee5324107f2ed5de46bf)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1313)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1312)


	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1402)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1403, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a11c5e03e02c41511c2a662ee809c3a01b1d59c813193ed1a39c8c8e5e060bac)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1404)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a11c5e03e02c41511c2a662ee809c3a01b1d59c813193ed1a39c8c8e5e060bac)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1404)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	RequiredPredicateError: 4
=====================================================================