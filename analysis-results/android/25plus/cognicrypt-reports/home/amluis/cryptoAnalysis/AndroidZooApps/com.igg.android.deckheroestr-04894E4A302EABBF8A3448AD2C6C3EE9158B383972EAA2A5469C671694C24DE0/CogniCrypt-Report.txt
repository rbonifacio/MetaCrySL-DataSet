Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1374)
		Method: <com.tapcash.sdk.a: java.lang.String a(java.lang.String)>
		SHA-256: 46f18bef92e905f13769e2bc6881cf6ac3cfc9b5aa8bd68bca54354162cad5a2
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7549)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 1bf77c400b249ca932cd47aa1cbf690c6dc2521c8dac83531ac8e1c38c350e4c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: void <clinit>()>
		SHA-256: 81571f0f65b71822bd958d9fd94e85c4e0b32e123ab4c4b6ad790e4712eb88cf
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: void completeProfileRequest()>
		SHA-256: ac252b1ab4ac66a2185458f47cedcdb6230a984be7fe323f7fe5d59628922171
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6266)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 80c2317262296846d3e11555330c30cc96981a821873825cf4927c94c009fa80
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7950)
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: 30577e6932ed46f3ea09c1c22ac61d02720bf062586fe5182f62c6a8c32aa809
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.sponsorpay.utils.SignatureTools: java.lang.String generateSHA1ForString(java.lang.String)>
		SHA-256: eb82bda4318cba217482a3b5f976afac2a8e52ea8aeeef60d07eb4a49f11ee34
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2605)
		Method: <com.tapjoy.TapjoyUtil: java.lang.String hashAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: 4bfa20c34c2a9ffae8c12c7b944a995a3f9883c1793432062adfa195e43f9353
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: caa67fc73d8e755b6ad922924c4525a07219f2e85b0b9f78a3a2e84f401dd2f6
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6267)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 7e2776b410251c3878071582911d5b10e738c844c307c234f3a866d098a14d15
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1702)
		Method: <com.sponsorpay.utils.SignatureTools: java.lang.String generateSHA1ForString(java.lang.String)>
		SHA-256: 7d6ee4f0013fb15d87d5a03e34ca6ffdd2f19cfa748f5c31481849adfe24ca9b
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer7736)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 1a95abae88a2bf7a2236ad90788a482666ea97fb30687dda81b0f934f4326320
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.zucks.rewardsdk.android.util.Encryption: java.lang.String toHashValue(java.lang.String)>
		SHA-256: 3a3298ca3e958ebcf7f5278c89f2a7c4c365109f64e783ee9aded60ee31d5275
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4607)
		Method: <com.freemycard.Utils: java.lang.String SHA1(java.lang.String)>
		SHA-256: ee74bf1eb9674277fddbf7b9c545c2ceb10eb203bf4a1fa0647cfc9c924883b7
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.naver.android.appstore.iap.AppstoreSecurity: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 250123705364be9a258f54e30da8ad33de36ccdbe9b574833e24adb69fb716f4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7732)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: fb4a232e9ee719b3aba379b5cf8934879e12367db106375b9e7fa9e66bab4ea9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.tapcash.sdk.a: java.lang.String a(java.lang.String)>
		SHA-256: 8dfe2d4a8ea82401536f8e7fd817a6658b5c17cd436ae77d69ecd4c7eba0a85b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4258)
		Method: <jp.co.zucks.rewardsdk.android.util.Encryption: void <init>()>
		SHA-256: a960f994c2ddb1da790364404eaa3c63a7ee0eeec6b4871473a16586bb07acb
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.freemycard.Utils: java.lang.String SHA1(java.lang.String)>
		SHA-256: 405358f7c769976cc7e104cfa9ba51c8cf8ec142ea1c3884545602284b264a5f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer5977)
		Method: <com.google.payment.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 536c40c42e58bf21935f81a86cadaf371b31a606d33b3f6edd17d09459604b88
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: java.lang.String MD5(java.lang.String)>
		SHA-256: 43c434ffffdabd955bdd6c52a3156d6145e75a5b7846c3144d4806615404d41f
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: b6a2629ca3df05cde3339bac2578ee7359d8b1fc6f6e61cdb7655abdac5e5575
		Secure: true
	Object:
		Variable: varReplacer6266
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6266)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 89a6aabd348e8916e97e45a74b10ca87486463bac00b6d16d13961b379bb2a59
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer5843)
		Method: <com.naver.android.appstore.iap.AppstoreSecurity: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 24ada9e7e6722fd270fca96c081feedecfb3fc1b2d9fc3a21ca0a92ef0461fcd
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tapjoy.TapjoyUtil: java.lang.String hashAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: 82ce3325174a18c8f51707f43fef3c3abf6757a9a6144e5d702eafb0a5468b05
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3207)
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: java.lang.String MD5(java.lang.String)>
		SHA-256: b34977b37a3b84f57e66fde9ff11032e8a1ad0b136aff99b5bdaa14af3d95fe3
		Secure: true
	Object:
		Variable: varReplacer7732
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7732)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: acfaf6aa1338b629d8bf392378f29e57c2f3dd54e44185527b6a8e7843e4a674
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.google.payment.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false

Findings in Java Class: com.sponsorpay.utils.SignatureTools

	 in Method: java.lang.String generateSHA1ForString(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7d6ee4f0013fb15d87d5a03e34ca6ffdd2f19cfa748f5c31481849adfe24ca9b)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1702)


Findings in Java Class: com.mobileapptracker.MATEncryption

	 in Method: void <init>(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7e2776b410251c3878071582911d5b10e738c844c307c234f3a866d098a14d15)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6267)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7e2776b410251c3878071582911d5b10e738c844c307c234f3a866d098a14d15)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6267)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6266)


Findings in Java Class: com.mobileapptracker.MobileAppTracker

	 in Method: void initAll(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #7e2776b410251c3878071582911d5b10e738c844c307c234f3a866d098a14d15)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r11.<com.mobileapptracker.MATEventQueue: void <init>(android.content.Context,com.mobileapptracker.MobileAppTracker)>($r3, $r0)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7547, r5, varReplacer7547)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7547, r5, varReplacer7547)


Findings in Java Class: com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters

	 in Method: java.lang.String calculateSignature(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7732)


Findings in Java Class: com.google.payment.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.naver.android.appstore.iap.AppstoreSecurity

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 7
	ConstraintError: 3
	IncompleteOperationError: 1
=====================================================================