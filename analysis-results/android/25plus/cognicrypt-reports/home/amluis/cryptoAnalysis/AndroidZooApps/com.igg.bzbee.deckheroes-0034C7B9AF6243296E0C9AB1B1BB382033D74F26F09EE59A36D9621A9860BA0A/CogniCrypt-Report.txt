Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5265)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 2d4c52c98ac0f00b9da6ee7ca9f2127ad1448b5d01658026a54b0add2200847a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3221)
		Method: <jp.co.zucks.rewardsdk.android.util.Encryption: void <init>()>
		SHA-256: 6a9221d78a9aa91e21b10452199d584bff97aed8807fcbb108e99f9bead6917c
		Secure: true
	Object:
		Variable: varReplacer5264
		Type: java.lang.String
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer5264)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: d49ff40ec30c23257d49ea2ea16135383ad9b0585d722513db10dcd59831a38
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer8694)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 1862f505dfec9d760a247d35508bab8a8cb3fa4e28114777eb08b5b83d0a12b6
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tapjoy.TapjoyUtil: java.lang.String hashAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: 82ce3325174a18c8f51707f43fef3c3abf6757a9a6144e5d702eafb0a5468b05
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2862)
		Method: <com.tapcash.sdk.a: java.lang.String a(java.lang.String)>
		SHA-256: 492d321334a236408eaeaaa82e1eacdee9b20f2478cb0197c2320cf849f28a6e
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: void completeProfileRequest()>
		SHA-256: ac252b1ab4ac66a2185458f47cedcdb6230a984be7fe323f7fe5d59628922171
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3587)
		Method: <com.freemycard.Utils: java.lang.String SHA1(java.lang.String)>
		SHA-256: 4e317af61a09bae95fe80ab2a0bf4c6036580f3d8636c94787f9ff97e0c9c13b
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: b6a2629ca3df05cde3339bac2578ee7359d8b1fc6f6e61cdb7655abdac5e5575
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.naver.android.appstore.iap.AppstoreSecurity: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 250123705364be9a258f54e30da8ad33de36ccdbe9b574833e24adb69fb716f4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7161)
		Method: <com.sponsorpay.utils.SignatureTools: java.lang.String generateSHA1ForString(java.lang.String)>
		SHA-256: 532d6f20a19ae0b2a76fd01d07f6656ab2d448376f980d4abfff80b4022dad1e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer8695)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 1ba67938d48182162523a2a799a43069a0a4256c1334daa059c33da657239533
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.tapcash.sdk.a: java.lang.String a(java.lang.String)>
		SHA-256: 8dfe2d4a8ea82401536f8e7fd817a6658b5c17cd436ae77d69ecd4c7eba0a85b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: d011df71b400b4926b84dec0cad6ffb90a5bd3d26c43a5974bec9e614ef5edf5
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: caa67fc73d8e755b6ad922924c4525a07219f2e85b0b9f78a3a2e84f401dd2f6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9086)
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: 99af6fedb4441faf0585725e8dbc442ad1f7749678f9d83356d3ecb19e7fda5d
		Secure: true
	Object:
		Variable: varReplacer8694
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer8694)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 3260399b375565ba52db6f3e2d5be588892a5c67a45ea60410876398754f89b3
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: java.lang.String MD5(java.lang.String)>
		SHA-256: 43c434ffffdabd955bdd6c52a3156d6145e75a5b7846c3144d4806615404d41f
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <jp.co.zucks.rewardsdk.android.util.Encryption: java.lang.String toHashValue(java.lang.String)>
		SHA-256: 3a3298ca3e958ebcf7f5278c89f2a7c4c365109f64e783ee9aded60ee31d5275
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8892)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 27083f3ec0ceb6a47b035d24c087b9f46fbc47b712ebafdd222d4c501b2dbc4
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: void <clinit>()>
		SHA-256: 81571f0f65b71822bd958d9fd94e85c4e0b32e123ab4c4b6ad790e4712eb88cf
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer5264)
		Method: <com.mobileapptracker.MATEncryption: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 9fbe8c10ffe7f4b59f0c0a6a7c5a0166d62917839a9ff9fbd3745346b6d89a0d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.chartboost.sdk.Libraries.b: byte[] a(byte[])>
		SHA-256: c0cb1f3950d1c303a878b272d33cc6b233c283f11853d4c605a6892d1b773e17
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.sponsorpay.utils.SignatureTools: java.lang.String generateSHA1ForString(java.lang.String)>
		SHA-256: eb82bda4318cba217482a3b5f976afac2a8e52ea8aeeef60d07eb4a49f11ee34
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1892)
		Method: <com.threatmetrix.TrustDefenderMobile.TrustDefenderMobile: java.lang.String MD5(java.lang.String)>
		SHA-256: f69d2e015238d009c178d5b4351895261b4d609bf085f806a645eea9a6d001b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4964)
		Method: <com.google.payment.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 437f9d21dcc62030599a84d8e87e32394d8df112c38a7c84ee015be9ba482742
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.google.payment.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1233)
		Method: <com.tapjoy.TapjoyUtil: java.lang.String hashAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: a9c4d781ea6f141bbe93d4de89a3107ce021b9058c0c71e5f82fac8cb8087a41
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.freemycard.Utils: java.lang.String SHA1(java.lang.String)>
		SHA-256: 405358f7c769976cc7e104cfa9ba51c8cf8ec142ea1c3884545602284b264a5f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4844)
		Method: <com.naver.android.appstore.iap.AppstoreSecurity: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: ce7a69f089b73f73320fff2ef5c64db1fa032f6a68d8288bb3a3e7c1c09391f7
		Secure: false

Findings in Java Class: com.mobileapptracker.MATEncryption

	 in Method: void <init>(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer5264)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2d4c52c98ac0f00b9da6ee7ca9f2127ad1448b5d01658026a54b0add2200847a)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5265)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2d4c52c98ac0f00b9da6ee7ca9f2127ad1448b5d01658026a54b0add2200847a)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, PKCS7Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5265)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


Findings in Java Class: com.mobileapptracker.MobileAppTracker

	 in Method: void initAll(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2d4c52c98ac0f00b9da6ee7ca9f2127ad1448b5d01658026a54b0add2200847a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r11.<com.mobileapptracker.MATEventQueue: void <init>(android.content.Context,com.mobileapptracker.MobileAppTracker)>($r3, $r0)


Findings in Java Class: com.sponsorpay.utils.SignatureTools

	 in Method: java.lang.String generateSHA1ForString(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #532d6f20a19ae0b2a76fd01d07f6656ab2d448376f980d4abfff80b4022dad1e)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7161)


Findings in Java Class: com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters

	 in Method: java.lang.String calculateSignature(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer8694)


Findings in Java Class: com.google.payment.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8893, r5, varReplacer8893)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8893, r5, varReplacer8893)


Findings in Java Class: com.naver.android.appstore.iap.AppstoreSecurity

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	IncompleteOperationError: 1
	RequiredPredicateError: 7
=====================================================================