public class com.inditex.itxinwalletframework.manager.impl.CryptoManager extends java.lang.Object implements com.inditex.itxinwalletframework.manager.ICryptoManager
{

    public void <init>()
    {
        com.inditex.itxinwalletframework.manager.impl.CryptoManager $r0;

        nop;

        $r0 := @this: com.inditex.itxinwalletframework.manager.impl.CryptoManager;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public byte[] generateDatabaseKey()
    {
        com.inditex.itxinwalletframework.manager.impl.CryptoManager $r0;
        byte[] $r1;
        java.security.SecureRandom $r2;

        nop;

        $r0 := @this: com.inditex.itxinwalletframework.manager.impl.CryptoManager;

        $r1 = newarray (byte)[64];

        $r2 = new java.security.SecureRandom;

        specialinvoke $r2.<java.security.SecureRandom: void <init>()>();

        virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1);

        return $r1;
    }

    public java.security.KeyPair generateKeyPairKeys()
    {
        com.inditex.itxinwalletframework.manager.impl.CryptoManager $r0;
        java.lang.Throwable $r1;
        java.security.KeyPairGenerator $r2;
        java.security.KeyPair $r3;
        int varReplacer9750;
        java.lang.String varReplacer9751, varReplacer9752, varReplacer9754;
        null_type varReplacer9753;

        nop;

        $r0 := @this: com.inditex.itxinwalletframework.manager.impl.CryptoManager;

     label1:
        varReplacer9754 = "RSA";

        $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer9754);

        varReplacer9750 = 1024;

        virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer9750);

        $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>();

     label2:
        return $r3;

     label3:
        $r1 := @caughtexception;

        varReplacer9751 = "CryptoManager";

        varReplacer9752 = "Error generating KeyPairKeys";

        staticinvoke <com.inditex.itxinwalletframework.utils.Log: void e(java.lang.String,java.lang.String)>(varReplacer9751, varReplacer9752);

        varReplacer9753 = null;

        return varReplacer9753;

        catch java.security.GeneralSecurityException from label1 to label2 with label3;
    }

    public byte[] getPrivateKeyAsByteArray(java.security.KeyPair)
    {
        com.inditex.itxinwalletframework.manager.impl.CryptoManager $r0;
        java.security.KeyPair $r1;
        java.security.PrivateKey $r2;
        byte[] $r3;

        nop;

        $r0 := @this: com.inditex.itxinwalletframework.manager.impl.CryptoManager;

        $r1 := @parameter0: java.security.KeyPair;

        $r2 = virtualinvoke $r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>();

        $r3 = interfaceinvoke $r2.<java.security.PrivateKey: byte[] getEncoded()>();

        return $r3;
    }

    public java.security.PrivateKey getPrivateKeyFromByteArray(byte[])
    {
        com.inditex.itxinwalletframework.manager.impl.CryptoManager $r0;
        byte[] $r1;
        java.security.spec.PKCS8EncodedKeySpec $r2, r7;
        java.security.KeyFactory $r3;
        java.security.PrivateKey $r4;
        java.lang.Throwable $r5, $r6;
        java.security.spec.InvalidKeySpecException r8;
        java.security.NoSuchAlgorithmException r9;
        null_type varReplacer12317, varReplacer12319;
        java.lang.String varReplacer12318;

        nop;

        $r0 := @this: com.inditex.itxinwalletframework.manager.impl.CryptoManager;

        $r1 := @parameter0: byte[];

     label1:
        varReplacer12318 = "RSA";

        $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer12318);

     label2:
        r7 = new java.security.spec.PKCS8EncodedKeySpec;

        $r2 = r7;

     label3:
        specialinvoke r7.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r2);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        r8 = (java.security.spec.InvalidKeySpecException) $r5;

        virtualinvoke r8.<java.security.spec.InvalidKeySpecException: void printStackTrace()>();

        varReplacer12317 = null;

        return varReplacer12317;

     label6:
        $r6 := @caughtexception;

        r9 = (java.security.NoSuchAlgorithmException) $r6;

        virtualinvoke r9.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer12319 = null;

        return varReplacer12319;

        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label5;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label5;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label6;
    }

    public java.lang.String getPublicKeyAsBase64(java.security.KeyPair)
    {
        com.inditex.itxinwalletframework.manager.impl.CryptoManager $r0;
        java.security.KeyPair $r1;
        java.security.PublicKey $r2;
        byte[] $r3;
        java.lang.String $r4;
        int varReplacer9755;

        nop;

        $r0 := @this: com.inditex.itxinwalletframework.manager.impl.CryptoManager;

        $r1 := @parameter0: java.security.KeyPair;

        $r2 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>();

        $r3 = interfaceinvoke $r2.<java.security.PublicKey: byte[] getEncoded()>();

        varReplacer9755 = 2;

        $r4 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, varReplacer9755);

        return $r4;
    }

    public byte[] signData(byte[], java.security.PrivateKey)
    {
        com.inditex.itxinwalletframework.manager.impl.CryptoManager $r0;
        byte[] $r1, $r3;
        java.security.PrivateKey $r2;
        java.security.Signature $r4;
        java.lang.Throwable $r5, $r6, $r7;
        java.lang.String varReplacer12320, varReplacer12321, varReplacer12322, varReplacer12323, varReplacer12324, varReplacer12325, varReplacer12326;

        nop;

        $r0 := @this: com.inditex.itxinwalletframework.manager.impl.CryptoManager;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: java.security.PrivateKey;

        $r3 = newarray (byte)[0];

     label1:
        varReplacer12320 = "SHA256withRSA";

        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer12320);

        virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r2);

        virtualinvoke $r4.<java.security.Signature: void update(byte[])>($r1);

        $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>();

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        varReplacer12323 = "CryptoManager";

        varReplacer12324 = "Error signing data";

        staticinvoke <com.inditex.itxinwalletframework.utils.Log: void e(java.lang.String,java.lang.String)>(varReplacer12323, varReplacer12324);

        return $r3;

     label4:
        $r6 := @caughtexception;

        varReplacer12321 = "CryptoManager";

        varReplacer12322 = "Error signing data";

        staticinvoke <com.inditex.itxinwalletframework.utils.Log: void e(java.lang.String,java.lang.String)>(varReplacer12321, varReplacer12322);

        return $r3;

     label5:
        $r7 := @caughtexception;

        varReplacer12325 = "CryptoManager";

        varReplacer12326 = "Error signing data";

        staticinvoke <com.inditex.itxinwalletframework.utils.Log: void e(java.lang.String,java.lang.String)>(varReplacer12325, varReplacer12326);

        return $r3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.InvalidKeyException from label1 to label2 with label4;
        catch java.security.SignatureException from label1 to label2 with label5;
    }

    public boolean verifyData(byte[], byte[], java.security.PublicKey)
    {
        com.inditex.itxinwalletframework.manager.impl.CryptoManager $r0;
        byte[] $r1, $r2;
        java.security.PublicKey $r3;
        java.security.Signature $r4;
        boolean $z0;
        java.lang.Throwable $r5, $r6, $r7;

        $r0 := @this: com.inditex.itxinwalletframework.manager.impl.CryptoManager;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 := @parameter2: java.security.PublicKey;

     label1:
        $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>("SHA256withRSA");

        virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r3);

        virtualinvoke $r4.<java.security.Signature: void update(byte[])>($r1);

        $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        staticinvoke <com.inditex.itxinwalletframework.utils.Log: void e(java.lang.String,java.lang.String)>("CryptoManager", "Error verifyng signed data");

        return 0;

     label4:
        $r6 := @caughtexception;

        staticinvoke <com.inditex.itxinwalletframework.utils.Log: void e(java.lang.String,java.lang.String)>("CryptoManager", "Error verifyng signed data");

        return 0;

     label5:
        $r7 := @caughtexception;

        staticinvoke <com.inditex.itxinwalletframework.utils.Log: void e(java.lang.String,java.lang.String)>("CryptoManager", "Error verifyng signed data");

        return 0;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.security.SignatureException from label1 to label2 with label4;
        catch java.security.InvalidKeyException from label1 to label2 with label5;
    }
}
