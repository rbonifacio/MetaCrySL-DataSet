Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: 3a8761ab0099e5ae6032fa84068902074888e5426aff28421086bd0d70427952
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer2261, varReplacer2262)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] getRawKey(byte[])>
		SHA-256: 2274821765de6b0eced87d55633ac96ea440e09f3815381cf97ffb6aa4c51868
		Secure: true
	Object:
		Variable: varReplacer2257
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2257)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: d91805e254f28eca4a1717c7af1ed4a45ba6cd52cc04707ac051d594119060ae
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2258)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: 48a38576d5a7a70867bc96c6dbca7331a70b1e3788e6b2264c0fc0d73a3422f5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2264)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] getRawKey(byte[])>
		SHA-256: be1c50b1ac4170831dec3befca4e8299649b97125fe07caebb5a32d9ea5509c2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] getRawKey(byte[])>
		SHA-256: d59d90228bfa9731fcd9433ed05f28d715423429c92da36fedd1f70435ba57ca
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: a1c807a857f151f5c4d7a31d6d39110784702f7ee5dc410c8a8471904cbf09d2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2257)
		Method: <com.kizoom.jp.utils.PasswordEncryption: byte[] decrypt(byte[],byte[])>
		SHA-256: 64f8308d71a13713404af45383047925871e38d8ac3d4be803ea198a4b5e2bc2
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.apps.analytics.PersistentEventStore: void startNewVisit()>
		SHA-256: 16e2093d83c7039b49d21a048d17818591ae5ea22f20400c902dded8894eac28
		Secure: true

Findings in Java Class: com.kizoom.jp.utils.PasswordEncryption

	 in Method: byte[] decrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #48a38576d5a7a70867bc96c6dbca7331a70b1e3788e6b2264c0fc0d73a3422f5)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2258)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2259, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #48a38576d5a7a70867bc96c6dbca7331a70b1e3788e6b2264c0fc0d73a3422f5)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2258)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2257)


	 in Method: byte[] getRawKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer2263, $r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 9

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 3
=====================================================================