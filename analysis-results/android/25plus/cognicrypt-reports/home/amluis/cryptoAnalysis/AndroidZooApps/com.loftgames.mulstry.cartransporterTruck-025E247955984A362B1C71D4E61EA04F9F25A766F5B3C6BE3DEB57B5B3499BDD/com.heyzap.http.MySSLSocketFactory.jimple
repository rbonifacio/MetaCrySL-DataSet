public class com.heyzap.http.MySSLSocketFactory extends org.apache.http.conn.ssl.SSLSocketFactory
{
    javax.net.ssl.SSLContext sslContext;

    public void <init>(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException
    {
        com.heyzap.http.MySSLSocketFactory $r0;
        java.security.KeyStore $r1;
        javax.net.ssl.SSLContext $r2;
        java.lang.Object[] $r3;
        com.heyzap.http.MySSLSocketFactory$1 r4;
        javax.net.ssl.TrustManager[] r5;
        java.lang.String varReplacer2540;
        null_type varReplacer2541, varReplacer2542;

        nop;

        $r0 := @this: com.heyzap.http.MySSLSocketFactory;

        $r1 := @parameter0: java.security.KeyStore;

        specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.security.KeyStore)>($r1);

        varReplacer2540 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2540);

        $r0.<com.heyzap.http.MySSLSocketFactory: javax.net.ssl.SSLContext sslContext> = $r2;

        r4 = new com.heyzap.http.MySSLSocketFactory$1;

        specialinvoke r4.<com.heyzap.http.MySSLSocketFactory$1: void <init>(com.heyzap.http.MySSLSocketFactory)>($r0);

        $r2 = $r0.<com.heyzap.http.MySSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        $r3[0] = r4;

        r5 = (javax.net.ssl.TrustManager[]) $r3;

        varReplacer2541 = null;

        varReplacer2542 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2541, r5, varReplacer2541);

        return;
    }

    public static org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory()
    {
        java.lang.Throwable $r0;
        com.heyzap.http.MySSLSocketFactory $r1;
        java.security.KeyStore $r2;
        org.apache.http.conn.ssl.X509HostnameVerifier $r3;
        org.apache.http.conn.ssl.SSLSocketFactory $r4;

     label1:
        nop;

        $r1 = new com.heyzap.http.MySSLSocketFactory;

        $r2 = staticinvoke <com.heyzap.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>();

        specialinvoke $r1.<com.heyzap.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>($r2);

        $r3 = <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.X509HostnameVerifier ALLOW_ALL_HOSTNAME_VERIFIER>;

        virtualinvoke $r1.<org.apache.http.conn.ssl.SSLSocketFactory: void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)>($r3);

     label2:
        return $r1;

     label3:
        $r0 := @caughtexception;

        staticinvoke <com.heyzap.internal.Logger: void trace(java.lang.Throwable)>($r0);

        $r4 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>();

        return $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static java.security.KeyStore getKeystore()
    {
        java.lang.Throwable $r0;
        java.security.KeyStore $r1, $r3;
        java.lang.String $r2;
        null_type varReplacer2538, varReplacer2539;

        nop;

        $r1 = null;

     label1:
        $r2 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2);

     label2:
        $r1 = $r3;

     label3:
        varReplacer2538 = null;

        varReplacer2539 = null;

        virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer2538, varReplacer2538);

     label4:
        return $r3;

     label5:
        $r0 := @caughtexception;

        staticinvoke <com.heyzap.internal.Logger: void trace(java.lang.Throwable)>($r0);

        return $r1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.net.Socket createSocket() throws java.io.IOException
    {
        com.heyzap.http.MySSLSocketFactory $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;

        $r0 := @this: com.heyzap.http.MySSLSocketFactory;

        $r1 = $r0.<com.heyzap.http.MySSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r3;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException
    {
        com.heyzap.http.MySSLSocketFactory $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;

        $r0 := @this: com.heyzap.http.MySSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<com.heyzap.http.MySSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        return $r1;
    }
}
