public final class fr.maxcom.libmedia.a extends java.lang.Object
{
    public static android.content.Context a;

    public static void a()
    {
        android.content.Context $r0;
        java.lang.SecurityException $r1;
        java.lang.String $r2, $r7, varReplacer4251, varReplacer4252, varReplacer4254, varReplacer4255, varReplacer4256;
        android.content.pm.PackageManager $r3;
        android.content.pm.ApplicationInfo $r4;
        android.os.Bundle $r5;
        java.lang.Throwable $r6;
        boolean $z0;
        int varReplacer4253;

        nop;

        $r0 = <fr.maxcom.libmedia.a: android.content.Context a>;

        if $r0 != null goto label1;

        $r1 = new java.lang.SecurityException;

        varReplacer4255 = "Licensing.allow() has to be called first";

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>(varReplacer4255);

        throw $r1;

     label1:
        $r0 = <fr.maxcom.libmedia.a: android.content.Context a>;

        $r2 = virtualinvoke $r0.<android.content.Context: java.lang.String getPackageName()>();

        $r0 = <fr.maxcom.libmedia.a: android.content.Context a>;

     label2:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        varReplacer4253 = 128;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>($r2, varReplacer4253);

     label3:
        $r5 = $r4.<android.content.pm.ApplicationInfo: android.os.Bundle metaData>;

        if $r5 != null goto label5;

        $r1 = new java.lang.SecurityException;

        varReplacer4251 = "Missing <meta-data> element in the manifest file";

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>(varReplacer4251);

        throw $r1;

     label4:
        $r6 := @caughtexception;

        $r1 = new java.lang.SecurityException;

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.Throwable)>($r6);

        throw $r1;

     label5:
        varReplacer4254 = "fr.maxcom.libmedia.apiKey";

        $r7 = virtualinvoke $r5.<android.os.Bundle: java.lang.String getString(java.lang.String)>(varReplacer4254);

        if $r7 != null goto label6;

        $r1 = new java.lang.SecurityException;

        varReplacer4252 = "Missing API Key";

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>(varReplacer4252);

        throw $r1;

     label6:
        $z0 = staticinvoke <fr.maxcom.libmedia.a: boolean a(java.lang.String,java.lang.String)>($r7, $r2);

        if $z0 != 0 goto label7;

        $r1 = new java.lang.SecurityException;

        varReplacer4256 = "Invalid or expired API Key";

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>(varReplacer4256);

        throw $r1;

     label7:
        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label2 to label3 with label4;
    }

    private static boolean a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2, $r3;
        int $i0, $i1, $i2, varReplacer4263, varReplacer4264, varReplacer4265, varReplacer4266, varReplacer4267, varReplacer4268, varReplacer4269;
        boolean $z0;
        java.nio.ByteBuffer $r4;
        java.nio.Buffer $r5;
        byte $b3, $b4;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        varReplacer4263 = 0;

        $r2 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer4263);

        varReplacer4267 = 64;

        $r3 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r2, varReplacer4267);

        $i0 = lengthof $r2;

        varReplacer4269 = 64;

        $r2 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>($r2, varReplacer4269, $i0);

        $z0 = staticinvoke <fr.maxcom.libmedia.a: boolean a(byte[],byte[])>($r2, $r3);

        if $z0 != 0 goto label1;

        varReplacer4264 = 0;

        return varReplacer4264;

     label1:
        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        varReplacer4265 = 4;

        $r5 = virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(varReplacer4265);

        $r4 = (java.nio.ByteBuffer) $r5;

        $i0 = virtualinvoke $r4.<java.nio.ByteBuffer: int getInt()>();

        $i1 = virtualinvoke $r4.<java.nio.ByteBuffer: int remaining()>();

        $r3 = newarray (byte)[$i1];

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>($r3);

        $i1 = 0;

     label2:
        $i2 = lengthof $r3;

        if $i1 < $i2 goto label4;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r3);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 == 0 goto label5;

        if $i0 == 0 goto label3;

        $i1 = staticinvoke <fr.maxcom.libmedia.a: int b()>();

        if $i0 < $i1 goto label5;

     label3:
        varReplacer4266 = 1;

        return varReplacer4266;

     label4:
        $b3 = $r3[$i1];

        $i2 = $i1 + 2;

        $i2 = $i2 % 4;

        $b4 = $r2[$i2];

        $b3 = $b3 ^ $b4;

        $r3[$i1] = $b3;

        $i1 = $i1 + 1;

        goto label2;

     label5:
        varReplacer4268 = 0;

        return varReplacer4268;
    }

    public static boolean a(byte[], byte[])
    {
        byte[] $r0, $r1;
        java.security.PublicKey $r2;
        java.security.Signature $r3;
        boolean $z0;
        java.lang.Throwable $r4, $r6, $r7;
        java.lang.RuntimeException $r5;
        java.lang.String varReplacer4270, varReplacer4273;
        int varReplacer4271, varReplacer4272;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        varReplacer4273 = "MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANv26fqtWrP2Fea+EMJKe1C4mjIojuN5+2m9duBwP9r3os4zMuRTnicLGSKm+r2AXNfdccRKh60NkMh6vXLARQECAwEAAQ==";

        $r2 = staticinvoke <fr.maxcom.libmedia.a: java.security.PublicKey b(java.lang.String)>(varReplacer4273);

     label1:
        varReplacer4270 = "SHA1withRSA";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4270);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2);

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r0);

        $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1);

     label2:
        if $z0 != 0 goto label3;

        varReplacer4271 = 0;

        return varReplacer4271;

     label3:
        varReplacer4272 = 1;

        return varReplacer4272;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label5:
        $r6 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r6);

        throw $r5;

     label6:
        $r7 := @caughtexception;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r7);

        throw $r5;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label4;
        catch java.security.InvalidKeyException from label1 to label2 with label5;
        catch java.security.SignatureException from label1 to label2 with label6;
    }

    public static byte[] a(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;
        int varReplacer6639;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer6639 = 0;

        $r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer6639);

        return $r1;
    }

    public static int b()
    {
        java.util.Calendar $r0;
        long $l0;
        int $i1;

        nop;

        $r0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $l0 = virtualinvoke $r0.<java.util.Calendar: long getTimeInMillis()>();

        $l0 = $l0 / 1000L;

        $i1 = (int) $l0;

        return $i1;
    }

    private static java.security.PublicKey b(java.lang.String)
    {
        java.lang.String $r0, varReplacer4274, varReplacer4275, varReplacer4276, varReplacer4277;
        byte[] $r1;
        java.security.KeyFactory $r2;
        java.security.spec.X509EncodedKeySpec $r3;
        java.security.PublicKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r8;
        int varReplacer4278;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer4277 = "MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANv26fqtWrP2Fea+EMJKe1C4mjIojuN5+2m9duBwP9r3os4zMuRTnicLGSKm+r2AXNfdccRKh60NkMh6vXLARQECAwEAAQ==";

        varReplacer4278 = 0;

        $r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>(varReplacer4277, varReplacer4278);

     label1:
        varReplacer4276 = "RSA";

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4276);

     label2:
        $r3 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer4274 = "LicenseChecker";

        varReplacer4275 = "Invalid key specification.";

        staticinvoke <fr.maxcom.util.Log: int b(java.lang.String,java.lang.String)>(varReplacer4274, varReplacer4275);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
    }

    public static int c()
    {
        double $d0;
        int $i0;

        nop;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 10.0;

        $d0 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $i0 = (int) $d0;

        return $i0;
    }
}
