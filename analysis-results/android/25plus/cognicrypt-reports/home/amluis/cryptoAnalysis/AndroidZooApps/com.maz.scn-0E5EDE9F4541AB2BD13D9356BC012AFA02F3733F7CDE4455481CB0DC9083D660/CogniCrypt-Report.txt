Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer814)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: cddb905ffa28e2d72355c5fbe99615eeee9e09746dedda2be6403a688db02efd
		Secure: false
	Object:
		Variable: varReplacer814
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer814)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: 90d13913e2e05b44bb2109468d54b389babb4c3d5e52ed0745ed7fb37859f105
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: f944777d9d8e89e0f8adf0af9c3ccd064733a31fa3f1e06304f27dc756cb592b
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r16.<javax.crypto.Mac: byte[] doFinal(byte[])>($r10)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: a1c5710c24dc81a6f9480b1893d8dc24a8f8395b7ec03734ba415bd3b41464e0
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: 909c9be208b5de558dd460505e071fd5538daa1dad981e4386470d779b744154
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 620c3090ee39f9e0f53b404a831eb8d63671b99583b54bc50694556834220d96
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zze(java.lang.String,long)>
		SHA-256: 4c7add4d41f06fa92bd57618e77b2df1a78eb8d44e5f363952002486d67608cc
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer807)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: byte[] computeMD5Hash(byte[])>
		SHA-256: 646b2c2c55ca21338a0432a2c30b09b5b5f2a5b482bfd1b10e3e3e55401624ae
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.iid.zzc: java.lang.String zza(java.security.KeyPair,java.lang.String[])>
		SHA-256: 3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r1)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: ba800de4ee400f0d8212c55c8fba85bbea2ad894911c956996d81af351be7fa0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzboo()>
		SHA-256: 6e12a7bb2b24475bd6745f5821ada3db111ba63ce3858525cd47bbf531156fea
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer8368)
		Method: <com.google.android.gms.iid.zza: java.security.KeyPair zzboo()>
		SHA-256: b42325b5345bfd576c7681b247ac1231678927b872994620c119c19b405d51b1
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r7, $r9)
		Method: <com.google.android.gms.iid.zzd: java.security.KeyPair zzkv(java.lang.String)>
		SHA-256: 4b0a8f6cb5756ba3a33be755f09732973db48f869275eade9d6df208f3cd420f
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.Mac
		Statement: $r16 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer786)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: ff74ae68f908d086c9187bf9d6835506c6e8bde4781f203803acf52fdb08f27d
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer813)
		Method: <com.mazdigital.mazsdk.StreamUtils: java.lang.String decrypt(byte[],byte[])>
		SHA-256: ccf6c2bf59ba77a38e1f79a6b0b1b1c68c3b96c842bbc10d8f2d49e8cce5b81
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7869)
		Method: <com.evernote.clients.EvernoteUtil: byte[] hash(java.io.InputStream)>
		SHA-256: 1eb3fcec73ac4d39a324ecbad12b0515476a739ab44f59ccd8b2a87a57234c39
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r1)
		Method: <com.mazdigital.mazsdk.AmazonClientManager: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)>
		SHA-256: 488b88b3f688420287b7604652189a59811a12f76fd341846335258d549bee3a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8328)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 782079e902b5d7aa6dbea11c917ba6404dcfe76815fed5872cfc458174be9077
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.conversiontracking.a: java.lang.String a(android.content.Context)>
		SHA-256: c36bb727b93167ba33a5616ba8c2cf5f8ef3fbc98a505a392777572adbfc4b7a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.gms.iid.InstanceID: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d877fb4dd7f0d0a4e150d0fd992249ddc9a19f0582b52e1ac77d90be8042bdc0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mazdigital.mazsdk.AmazonClientManager: byte[] computeMD5Hash(byte[])>
		SHA-256: 43829a0fc3e7338e4941be56260949effabc0b3394c8bd03f47692d0dbcf9bd8
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.evernote.clients.EvernoteUtil: byte[] hash(java.io.InputStream)>
		SHA-256: 73bad905107deef6819846fb401ca5d727a999f684d1052700d42b337ef13b37
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4409)
		Method: <com.google.ads.conversiontracking.a: java.lang.String a(android.content.Context)>
		SHA-256: ced830f2d7bbfa38019a7cfcb05f072bc10ae479f5520cc60b93933694311431
		Secure: true

Findings in Java Class: com.mazdigital.mazsdk.StreamUtils

	 in Method: java.lang.String decrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ccf6c2bf59ba77a38e1f79a6b0b1b1c68c3b96c842bbc10d8f2d49e8cce5b81)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer813)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer814)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer811, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ccf6c2bf59ba77a38e1f79a6b0b1b1c68c3b96c842bbc10d8f2d49e8cce5b81)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer813)


Findings in Java Class: com.evernote.clients.EvernoteUtil

	 in Method: byte[] hash(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1eb3fcec73ac4d39a324ecbad12b0515476a739ab44f59ccd8b2a87a57234c39)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.iid.zzc

	 in Method: java.lang.String zza(java.security.KeyPair,java.lang.String[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #3d513363b6c375f87a40f665c5ec4fa58169cb093ce4df37102581b14944da3e)
			First parameter (with value "SHA256withECDSA") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.google.android.gms.iid.InstanceID

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #782079e902b5d7aa6dbea11c917ba6404dcfe76815fed5872cfc458174be9077)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8328)


Findings in Java Class: com.mazdigital.mazsdk.AmazonClientManager

	 in Method: boolean putObject(java.lang.String,java.lang.String,java.lang.String,java.io.File)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 23

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 1
	RequiredPredicateError: 4
	ConstraintError: 4
=====================================================================