public class m.client.android.library.core.utils.a extends java.lang.Object
{
    static javax.crypto.Cipher a;
    private java.lang.String b;
    private m.client.android.library.core.common.b c;
    private java.lang.String d;

    static void <clinit>()
    {
        null_type varReplacer1454;

        nop;

        varReplacer1454 = null;

        <m.client.android.library.core.utils.a: javax.crypto.Cipher a> = varReplacer1454;

        return;
    }

    public void <init>()
    {
        m.client.android.library.core.utils.a $r0;
        m.client.android.library.core.common.b $r1;
        java.lang.String varReplacer1466;
        null_type varReplacer1467;

        nop;

        $r0 := @this: m.client.android.library.core.utils.a;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        varReplacer1466 = "AES/ECB/PKCS5Padding";

        $r0.<m.client.android.library.core.utils.a: java.lang.String b> = varReplacer1466;

        $r1 = staticinvoke <m.client.android.library.core.common.b: m.client.android.library.core.common.b getInstance()>();

        $r0.<m.client.android.library.core.utils.a: m.client.android.library.core.common.b c> = $r1;

        varReplacer1467 = null;

        $r0.<m.client.android.library.core.utils.a: java.lang.String d> = varReplacer1467;

        specialinvoke $r0.<m.client.android.library.core.utils.a: void a()>();

        return;
    }

    public void <init>(android.content.Context)
    {
        m.client.android.library.core.utils.a $r0;
        android.content.Context $r1;
        java.lang.String $r2, $r4;
        m.client.android.library.core.common.b $r3;
        boolean $z0;
        int $i0, $i1;
        java.lang.String[] $r5;
        m.client.android.library.core.common.e $r6;
        java.lang.Object $r7;
        byte[] $r8;
        java.lang.Exception $r9;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: android.content.Context;

        $r2 = null;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<m.client.android.library.core.utils.a: java.lang.String b> = "AES/ECB/PKCS5Padding";

        $r3 = staticinvoke <m.client.android.library.core.common.b: m.client.android.library.core.common.b getInstance()>();

        $r0.<m.client.android.library.core.utils.a: m.client.android.library.core.common.b c> = $r3;

        $r0.<m.client.android.library.core.utils.a: java.lang.String d> = null;

        $r3 = $r0.<m.client.android.library.core.utils.a: m.client.android.library.core.common.b c>;

        $r4 = $r3.<m.client.android.library.core.common.b: java.lang.String g_strDummyN>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 == 0 goto label05;

        $i0 = 0;

     label01:
        $r5 = <m.client.android.library.core.common.d$b: java.lang.String[] APP_LICENSE_PATH>;

     label02:
        $i1 = lengthof $r5;

     label03:
        if $i0 < $i1 goto label06;

     label04:
        $r6 = staticinvoke <m.client.android.library.core.utils.k: m.client.android.library.core.common.e readFileByLineFromAsset(android.content.Context,java.lang.String)>($r1, $r2);

        $r3 = $r0.<m.client.android.library.core.utils.a: m.client.android.library.core.common.b c>;

        $r7 = virtualinvoke $r6.<m.client.android.library.core.common.e: java.lang.Object getParam(java.lang.String)>("sn");

        $r2 = (java.lang.String) $r7;

        $r3.<m.client.android.library.core.common.b: java.lang.String g_strDummyN> = $r2;

     label05:
        specialinvoke $r0.<m.client.android.library.core.utils.a: void a()>();

        return;

     label06:
        $r5 = <m.client.android.library.core.common.d$b: java.lang.String[] APP_LICENSE_PATH>;

     label07:
        $r4 = $r5[$i0];

        $r8 = staticinvoke <m.client.android.library.core.utils.l: byte[] getBytesFromAsset(android.content.Context,java.lang.String)>($r1, $r4);

     label08:
        if $r8 == null goto label11;

        $r5 = <m.client.android.library.core.common.d$b: java.lang.String[] APP_LICENSE_PATH>;

     label09:
        $r2 = $r5[$i0];

     label10:
        goto label04;

     label11:
        $i0 = $i0 + 1;

        goto label01;

     label12:
        $r9 := @caughtexception;

        staticinvoke <m.client.android.library.core.utils.r: void d(java.lang.String,java.lang.String)>("AESUtil", "strLicenseFilePath error.");

        goto label05;

        catch java.lang.Exception from label02 to label03 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Exception from label09 to label10 with label12;
    }

    private java.lang.String a(int, java.io.File)
    {
        m.client.android.library.core.utils.a $r0;
        int $i0;
        java.io.File $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        javax.crypto.Cipher $r4;
        java.security.Key $r5;
        java.io.BufferedInputStream $r6;
        java.io.FileInputStream $r7;
        byte[] $r8, $r9;
        java.lang.Throwable $r10, $r11, $r12;

        $r0 := @this: m.client.android.library.core.utils.a;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.io.File;

        $r3 = $r0.<m.client.android.library.core.utils.a: java.lang.String b>;

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r3, "BC");

        $r5 = specialinvoke $r0.<m.client.android.library.core.utils.a: java.security.Key b()>();

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r5);

     label01:
        $r6 = new java.io.BufferedInputStream;

        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r7);

     label02:
        $r8 = newarray (byte)[8192];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

     label03:
        $i0 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>($r8);

     label04:
        if $i0 != -1 goto label10;

     label05:
        $r8 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal()>();

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label06:
        goto label07;

     label07:
        if $r6 == null goto label09;

     label08:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

     label09:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label10:
        $r9 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r8, 0, $i0);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[])>($r9);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label11:
        goto label03;

     label12:
        $r10 := @caughtexception;

     label13:
        goto label14;

     label14:
        if $r6 == null goto label16;

     label15:
        virtualinvoke $r6.<java.io.InputStream: void close()>();

     label16:
        throw $r10;

     label17:
        $r11 := @caughtexception;

        goto label16;

     label18:
        $r12 := @caughtexception;

        goto label09;

     label19:
        $r10 := @caughtexception;

        $r6 = null;

        goto label13;

        catch java.lang.Throwable from label01 to label02 with label19;
        catch java.lang.Throwable from label02 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.io.IOException from label08 to label09 with label18;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.io.IOException from label15 to label16 with label17;
    }

    private void a()
    {
        m.client.android.library.core.utils.a $r0;
        java.lang.StringBuffer $r1;
        m.client.android.library.core.common.b $r2;
        java.lang.String $r3, varReplacer1468, varReplacer1469, varReplacer1470, varReplacer1471, varReplacer1472, varReplacer1473, varReplacer1474;
        java.lang.String[] $r4, $r5;
        int $i0, $i1;
        boolean $z0;
        java.lang.StringBuilder $r6;

        nop;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r2 = $r0.<m.client.android.library.core.utils.a: m.client.android.library.core.common.b c>;

        $r3 = $r2.<m.client.android.library.core.common.b: java.lang.String g_strDummyN>;

        varReplacer1471 = "";

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1471);

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = $r0.<m.client.android.library.core.utils.a: m.client.android.library.core.common.b c>;

        $r3 = $r2.<m.client.android.library.core.common.b: java.lang.String g_arrDummy>;

        varReplacer1468 = "[";

        varReplacer1469 = "";

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1468, varReplacer1469);

        varReplacer1473 = "]";

        varReplacer1474 = "";

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer1473, varReplacer1474);

        varReplacer1470 = ",";

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(varReplacer1470);

        $i0 = 0;

     label1:
        $i1 = lengthof $r5;

        if $i0 < $i1 goto label2;

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        $r0.<m.client.android.library.core.utils.a: java.lang.String d> = $r3;

        $r3 = $r0.<m.client.android.library.core.utils.a: java.lang.String d>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label3;

        $r3 = $r0.<m.client.android.library.core.utils.a: java.lang.String d>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 32 goto label3;

        varReplacer1472 = "AES/ECB/PKCS5Padding";

        $r0.<m.client.android.library.core.utils.a: java.lang.String b> = varReplacer1472;

        return;

     label2:
        $r6 = new java.lang.StringBuilder;

        $r3 = $r5[$i0];

        $r3 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        $i1 = $i1 + 1;

        $r3 = $r4[$i1];

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r3 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void a(int, java.io.File, java.io.File)
    {
        m.client.android.library.core.utils.a $r0;
        int $i0;
        java.io.File $r1, $r2;
        java.io.BufferedInputStream $r3, $r4;
        java.lang.String $r5;
        javax.crypto.Cipher $r6;
        java.security.Key $r7;
        java.io.FileInputStream $r8;
        java.io.BufferedOutputStream $r9;
        java.io.FileOutputStream $r10;
        byte[] $r11, $r12;
        java.lang.Throwable $r13, $r14, $r15, $r16, $r17;

        $r0 := @this: m.client.android.library.core.utils.a;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.io.File;

        $r2 := @parameter2: java.io.File;

        $r4 = null;

        $r5 = $r0.<m.client.android.library.core.utils.a: java.lang.String b>;

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r5, "BC");

        $r7 = specialinvoke $r0.<m.client.android.library.core.utils.a: java.security.Key b()>();

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r7);

     label01:
        $r3 = new java.io.BufferedInputStream;

        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r3.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r8);

     label02:
        $r9 = new java.io.BufferedOutputStream;

        $r10 = new java.io.FileOutputStream;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

        specialinvoke $r9.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r10);

     label03:
        $r11 = newarray (byte)[1024];

     label04:
        $i0 = virtualinvoke $r3.<java.io.InputStream: int read(byte[])>($r11);

     label05:
        if $i0 != -1 goto label12;

     label06:
        $r11 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal()>();

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r11);

     label07:
        if $r9 == null goto label09;

     label08:
        virtualinvoke $r9.<java.io.OutputStream: void close()>();

     label09:
        if $r3 == null goto label26;

     label10:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label11:
        return;

     label12:
        $r12 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r11, 0, $i0);

        virtualinvoke $r9.<java.io.OutputStream: void write(byte[])>($r12);

     label13:
        goto label04;

     label14:
        $r13 := @caughtexception;

        $r4 = $r3;

     label15:
        if $r9 == null goto label17;

     label16:
        virtualinvoke $r9.<java.io.OutputStream: void close()>();

     label17:
        if $r4 == null goto label19;

     label18:
        virtualinvoke $r4.<java.io.InputStream: void close()>();

     label19:
        throw $r13;

     label20:
        $r14 := @caughtexception;

        goto label17;

     label21:
        $r15 := @caughtexception;

        goto label19;

     label22:
        $r16 := @caughtexception;

        goto label09;

     label23:
        $r17 := @caughtexception;

        return;

     label24:
        $r13 := @caughtexception;

        $r9 = null;

        goto label15;

     label25:
        $r13 := @caughtexception;

        $r9 = null;

        $r4 = $r3;

        goto label15;

     label26:
        return;

        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label03 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.io.IOException from label08 to label09 with label22;
        catch java.io.IOException from label10 to label11 with label23;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.io.IOException from label16 to label17 with label20;
        catch java.io.IOException from label18 to label19 with label21;
    }

    private byte[] a(int, java.io.InputStream)
    {
        m.client.android.library.core.utils.a $r0;
        int $i0, varReplacer1459, varReplacer1461, varReplacer1462, varReplacer1463;
        java.io.InputStream $r1;
        java.lang.String $r2, varReplacer1460;
        javax.crypto.Cipher $r3;
        java.security.Key $r4;
        java.io.ByteArrayOutputStream $r5;
        java.io.BufferedInputStream $r6;
        byte[] $r7, $r8;

        nop;

        $r0 := @this: m.client.android.library.core.utils.a;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.io.InputStream;

        $r2 = $r0.<m.client.android.library.core.utils.a: java.lang.String b>;

        varReplacer1460 = "BC";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, varReplacer1460);

        $r4 = specialinvoke $r0.<m.client.android.library.core.utils.a: java.security.Key b()>();

        varReplacer1463 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1463, $r4);

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        $r6 = new java.io.BufferedInputStream;

        specialinvoke $r6.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r1);

        $r7 = newarray (byte)[16384];

     label1:
        $i0 = virtualinvoke $r6.<java.io.InputStream: int read(byte[])>($r7);

        if $i0 != -1 goto label2;

        $r7 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal()>();

        $i0 = lengthof $r7;

        varReplacer1461 = 0;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r7, varReplacer1461, $i0);

        $r7 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r7;

     label2:
        varReplacer1459 = 0;

        $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r7, varReplacer1459, $i0);

        $i0 = lengthof $r8;

        varReplacer1462 = 0;

        virtualinvoke $r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r8, varReplacer1462, $i0);

        goto label1;
    }

    private java.security.Key b()
    {
        m.client.android.library.core.utils.a $r0;
        javax.crypto.spec.SecretKeySpec $r1;
        byte[] $r2;
        java.lang.String $r3, varReplacer1464, varReplacer1465;

        nop;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 = new javax.crypto.spec.SecretKeySpec;

        $r3 = $r0.<m.client.android.library.core.utils.a: java.lang.String d>;

        varReplacer1465 = "utf-8";

        $r2 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer1465);

        varReplacer1464 = "AES";

        specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1464);

        return $r1;
    }

    private byte[] b(int, java.io.File)
    {
        m.client.android.library.core.utils.a $r0;
        int $i0;
        java.io.File $r1;
        java.lang.String $r2;
        javax.crypto.Cipher $r3;
        java.security.Key $r4;
        java.io.BufferedInputStream $r5;
        java.io.FileInputStream $r6;
        java.io.ByteArrayOutputStream $r7;
        long $l1;
        byte[] $r8, $r9;

        $r0 := @this: m.client.android.library.core.utils.a;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.io.File;

        $r2 = $r0.<m.client.android.library.core.utils.a: java.lang.String b>;

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, "BC");

        $r4 = specialinvoke $r0.<m.client.android.library.core.utils.a: java.security.Key b()>();

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r4);

        $r5 = new java.io.BufferedInputStream;

        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6);

        $r7 = new java.io.ByteArrayOutputStream;

        $l1 = virtualinvoke $r1.<java.io.File: long length()>();

        $i0 = (int) $l1;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>(int)>($i0);

        $r8 = newarray (byte)[8192];

     label1:
        $i0 = virtualinvoke $r5.<java.io.InputStream: int read(byte[])>($r8);

        if $i0 != -1 goto label2;

        $r8 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal()>();

        $i0 = lengthof $r8;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r8, 0, $i0);

        $r8 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void close()>();

        if $r5 == null goto label3;

        virtualinvoke $r5.<java.io.InputStream: void close()>();

        return $r8;

     label2:
        $r9 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r8, 0, $i0);

        $i0 = lengthof $r9;

        virtualinvoke $r7.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r9, 0, $i0);

        goto label1;

     label3:
        return $r8;
    }

    public static java.lang.String byteArrayToHex(byte[])
    {
        byte[] $r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1;
        java.lang.String $r2, varReplacer3313;
        java.lang.StringBuilder $r3;
        byte $b2;
        short $s3;
        null_type varReplacer3312;

        nop;

        $r0 := @parameter0: byte[];

        if $r0 == null goto label1;

        $i0 = lengthof $r0;

        if $i0 != 0 goto label2;

     label1:
        varReplacer3312 = null;

        return varReplacer3312;

     label2:
        $r1 = new java.lang.StringBuffer;

        $i0 = lengthof $r0;

        $i0 = $i0 * 2;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i0);

        $i0 = 0;

     label3:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label4;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;

     label4:
        $r3 = new java.lang.StringBuilder;

        varReplacer3313 = "0";

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(varReplacer3313);

        $b2 = $r0[$i0];

        $s3 = $b2 & 255;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i1 = $i1 + -2;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $i0 = $i0 + 1;

        goto label3;
    }

    public static byte[] hexToByteArray(java.lang.String)
    {
        java.lang.String $r0, $r2;
        byte[] $r1;
        int $i0, $i1, $i2, varReplacer3315;
        byte $b3;
        null_type varReplacer3314;

        nop;

        $r0 := @parameter0: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        varReplacer3314 = null;

        return varReplacer3314;

     label2:
        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i0 = 0;

     label3:
        $i1 = lengthof $r1;

        if $i0 < $i1 goto label4;

        return $r1;

     label4:
        $i1 = $i0 * 2;

        $i2 = $i0 * 2;

        $i2 = $i2 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i1, $i2);

        varReplacer3315 = 16;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r2, varReplacer3315);

        $b3 = (byte) $i1;

        $r1[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label3;
    }

    public static byte[] toBytes(java.lang.String)
    {
        java.lang.String $r0, $r2;
        int $i0, $i1, $i2, $i3;
        byte[] $r1;
        java.lang.Integer $r3;
        byte $b4;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        $i0 = $i0 / 2;

        $r1 = newarray (byte)[$i0];

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return $r1;

     label2:
        $i2 = $i1 * 2;

        $i3 = $i1 * 2;

        $i3 = $i3 + 2;

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i2, $i3);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String,int)>($r2, 16);

        $b4 = virtualinvoke $r3.<java.lang.Integer: byte byteValue()>();

        $r1[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label1;
    }

    byte[] a(byte[], byte[])
    {
        m.client.android.library.core.utils.a $r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1, varReplacer3317, varReplacer3318, varReplacer3319;

        nop;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $i0 = lengthof $r1;

        $i1 = lengthof $r2;

        $i0 = $i0 + $i1;

        $r3 = newarray (byte)[$i0];

        $i0 = lengthof $r1;

        varReplacer3318 = 0;

        varReplacer3319 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, varReplacer3318, $r3, varReplacer3318, $i0);

        $i1 = lengthof $r1;

        $i0 = lengthof $r2;

        varReplacer3317 = 0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, varReplacer3317, $r3, $i1, $i0);

        return $r3;
    }

    public java.lang.String decrypt(java.io.File)
    {
        m.client.android.library.core.utils.a $r0;
        java.io.File $r1;
        java.lang.String $r2;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.io.File;

        $r2 = specialinvoke $r0.<m.client.android.library.core.utils.a: java.lang.String a(int,java.io.File)>(2, $r1);

        return $r2;
    }

    public java.lang.String decrypt(java.lang.String)
    {
        m.client.android.library.core.utils.a $r0;
        java.lang.String $r1, $r2, $r6, varReplacer3296, varReplacer3300, varReplacer3301, varReplacer3302, varReplacer3303, varReplacer3304, varReplacer3306, varReplacer3307, varReplacer3308, varReplacer3309;
        byte[] $r3;
        boolean $z0;
        javax.crypto.Cipher $r4;
        javax.crypto.spec.SecretKeySpec $r5;
        int varReplacer3297, varReplacer3298, varReplacer3299, varReplacer3305, varReplacer3310, varReplacer3311;

        nop;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = "AES256PD";

        varReplacer3304 = "utf-8";

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3304);

        $r2 = staticinvoke <m.client.android.library.core.utils.a: java.lang.String byteArrayToHex(byte[])>($r3);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        varReplacer3301 = "AES/ECB/PKCS5Padding";

        varReplacer3302 = "BC";

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer3301, varReplacer3302);

        $r5 = new javax.crypto.spec.SecretKeySpec;

        $r6 = $r0.<m.client.android.library.core.utils.a: java.lang.String d>;

        varReplacer3298 = 0;

        varReplacer3299 = 32;

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3298, varReplacer3299);

        varReplacer3306 = "utf-8";

        $r3 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3306);

        varReplacer3307 = "AES";

        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3307);

        varReplacer3305 = 2;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3305, $r5);

        varReplacer3296 = "";

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>($r2, varReplacer3296);

        $r3 = staticinvoke <m.client.android.library.core.utils.a: byte[] hexToByteArray(java.lang.String)>($r1);

        $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r3);

        return $r1;

     label1:
        varReplacer3308 = "AES/ECB/PKCS5Padding";

        varReplacer3309 = "BC";

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer3308, varReplacer3309);

        $r5 = new javax.crypto.spec.SecretKeySpec;

        $r2 = $r0.<m.client.android.library.core.utils.a: java.lang.String d>;

        varReplacer3310 = 0;

        varReplacer3311 = 16;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(varReplacer3310, varReplacer3311);

        varReplacer3300 = "utf-8";

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3300);

        varReplacer3303 = "AES";

        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3303);

        varReplacer3297 = 2;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3297, $r5);

        $r3 = staticinvoke <m.client.android.library.core.utils.a: byte[] hexToByteArray(java.lang.String)>($r1);

        $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r3);

        return $r1;
    }

    public java.lang.String decrypt(java.lang.String, java.lang.String, java.lang.String)
    {
        m.client.android.library.core.utils.a $r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        int $i0;
        javax.crypto.Cipher $r4;
        java.security.Key $r5;
        byte[] $r6;
        javax.crypto.spec.SecretKeySpec $r7;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AES-128");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 < 16 goto label2;

     label1:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AES-256");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= 32 goto label3;

     label2:
        staticinvoke <m.client.android.library.core.utils.r: void d(java.lang.String,java.lang.String)>("AESUtil", "Decrypt key mismatch.");

        return null;

     label3:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AUTO");

        if $z0 == 0 goto label5;

     label4:
        $r2 = $r0.<m.client.android.library.core.utils.a: java.lang.String b>;

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, "BC");

        $r5 = specialinvoke $r0.<m.client.android.library.core.utils.a: java.security.Key b()>();

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r5);

        $r6 = staticinvoke <m.client.android.library.core.utils.a: byte[] hexToByteArray(java.lang.String)>($r1);

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r6);

        return $r1;

     label5:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AES-128");

        if $z0 == 0 goto label6;

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>("AES/ECB/PKCS5Padding", "BC");

        $r7 = new javax.crypto.spec.SecretKeySpec;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 16);

        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, "AES");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r7);

        $r6 = staticinvoke <m.client.android.library.core.utils.a: byte[] hexToByteArray(java.lang.String)>($r1);

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r6);

        return $r1;

     label6:
        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>("AES/ECB/PKCS5Padding", "BC");

        $r7 = new javax.crypto.spec.SecretKeySpec;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 32);

        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, "AES");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r7);

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("AES256PD", "");

        $r6 = staticinvoke <m.client.android.library.core.utils.a: byte[] hexToByteArray(java.lang.String)>($r1);

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r6);

        return $r1;
    }

    public void decrypt(java.io.File, java.io.File)
    {
        m.client.android.library.core.utils.a $r0;
        java.io.File $r1, $r2;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        specialinvoke $r0.<m.client.android.library.core.utils.a: void a(int,java.io.File,java.io.File)>(2, $r1, $r2);

        return;
    }

    public byte[] decryptToBytes(java.io.File)
    {
        m.client.android.library.core.utils.a $r0;
        java.io.File $r1;
        byte[] $r2;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.io.File;

        $r2 = specialinvoke $r0.<m.client.android.library.core.utils.a: byte[] b(int,java.io.File)>(2, $r1);

        return $r2;
    }

    public byte[] decryptToBytes(java.io.InputStream)
    {
        m.client.android.library.core.utils.a $r0;
        java.io.InputStream $r1;
        byte[] $r2;
        int varReplacer1458;

        nop;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.io.InputStream;

        varReplacer1458 = 2;

        $r2 = specialinvoke $r0.<m.client.android.library.core.utils.a: byte[] a(int,java.io.InputStream)>(varReplacer1458, $r1);

        return $r2;
    }

    public java.lang.String encrypt(java.lang.String)
    {
        m.client.android.library.core.utils.a $r0;
        java.lang.String $r1, $r2, varReplacer3291, varReplacer3292, varReplacer3293, varReplacer3295;
        javax.crypto.Cipher $r3;
        java.security.Key $r4;
        boolean $z0;
        int $i0, varReplacer3294;
        byte[] $r5, $r6;

        nop;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<m.client.android.library.core.utils.a: java.lang.String b>;

        varReplacer3291 = "BC";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, varReplacer3291);

        $r4 = specialinvoke $r0.<m.client.android.library.core.utils.a: java.security.Key b()>();

        varReplacer3294 = 1;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3294, $r4);

        $r2 = $r0.<m.client.android.library.core.utils.a: java.lang.String d>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label1;

        $r2 = $r0.<m.client.android.library.core.utils.a: java.lang.String d>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 32 goto label1;

        varReplacer3293 = "utf-8";

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3293);

        $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        $r1 = "AES256PD";

        varReplacer3292 = "utf-8";

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3292);

        $r5 = virtualinvoke $r0.<m.client.android.library.core.utils.a: byte[] a(byte[],byte[])>($r6, $r5);

        $r1 = staticinvoke <m.client.android.library.core.utils.a: java.lang.String byteArrayToHex(byte[])>($r5);

        return $r1;

     label1:
        varReplacer3295 = "utf-8";

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(varReplacer3295);

        $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

        $r1 = staticinvoke <m.client.android.library.core.utils.a: java.lang.String byteArrayToHex(byte[])>($r5);

        return $r1;
    }

    public java.lang.String encrypt(java.lang.String, java.lang.String, java.lang.String)
    {
        m.client.android.library.core.utils.a $r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        int $i0;
        javax.crypto.Cipher $r4;
        java.security.Key $r5;
        byte[] $r6, $r8;
        javax.crypto.spec.SecretKeySpec $r7;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AES-128");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 < 16 goto label2;

     label1:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AES-256");

        if $z0 == 0 goto label3;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 >= 32 goto label3;

     label2:
        staticinvoke <m.client.android.library.core.utils.r: void d(java.lang.String,java.lang.String)>("AESUtil", "Encrypt key mismatch.");

        return null;

     label3:
        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label4;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AUTO");

        if $z0 == 0 goto label5;

     label4:
        $r2 = $r0.<m.client.android.library.core.utils.a: java.lang.String b>;

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, "BC");

        $r5 = specialinvoke $r0.<m.client.android.library.core.utils.a: java.security.Key b()>();

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r5);

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $r1 = staticinvoke <m.client.android.library.core.utils.a: java.lang.String byteArrayToHex(byte[])>($r6);

        return $r1;

     label5:
        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("AES-128");

        if $z0 == 0 goto label6;

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>("AES/ECB/PKCS5Padding", "BC");

        $r7 = new javax.crypto.spec.SecretKeySpec;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 16);

        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, "AES");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r7);

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $r1 = staticinvoke <m.client.android.library.core.utils.a: java.lang.String byteArrayToHex(byte[])>($r6);

        return $r1;

     label6:
        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>("AES/ECB/PKCS5Padding", "BC");

        $r7 = new javax.crypto.spec.SecretKeySpec;

        $r2 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(0, 32);

        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, "AES");

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r7);

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $r1 = "AES256PD";

        $r8 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8");

        $r6 = virtualinvoke $r0.<m.client.android.library.core.utils.a: byte[] a(byte[],byte[])>($r8, $r6);

        $r1 = staticinvoke <m.client.android.library.core.utils.a: java.lang.String byteArrayToHex(byte[])>($r6);

        return $r1;
    }

    public void encrypt(java.io.File, java.io.File)
    {
        m.client.android.library.core.utils.a $r0;
        java.io.File $r1, $r2;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.io.File;

        specialinvoke $r0.<m.client.android.library.core.utils.a: void a(int,java.io.File,java.io.File)>(1, $r1, $r2);

        return;
    }

    public javax.crypto.Cipher getDecryptCipher()
    {
        m.client.android.library.core.utils.a $r0;
        javax.crypto.Cipher $r1;
        java.lang.String $r2;
        java.security.Key $r3;
        java.lang.Throwable $r4, $r5, $r6, $r7;
        java.lang.Exception $r8;
        java.security.NoSuchAlgorithmException r9;
        java.security.NoSuchProviderException r10;
        javax.crypto.NoSuchPaddingException r11;
        java.security.InvalidKeyException r12;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 = <m.client.android.library.core.utils.a: javax.crypto.Cipher a>;

        if $r1 == null goto label01;

        $r1 = <m.client.android.library.core.utils.a: javax.crypto.Cipher a>;

        return $r1;

     label01:
        $r2 = $r0.<m.client.android.library.core.utils.a: java.lang.String b>;

     label02:
        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r2, "BC");

     label03:
        <m.client.android.library.core.utils.a: javax.crypto.Cipher a> = $r1;

        $r1 = <m.client.android.library.core.utils.a: javax.crypto.Cipher a>;

     label04:
        $r3 = specialinvoke $r0.<m.client.android.library.core.utils.a: java.security.Key b()>();

        virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r3);

     label05:
        $r1 = <m.client.android.library.core.utils.a: javax.crypto.Cipher a>;

        return $r1;

     label06:
        $r4 := @caughtexception;

        r9 = (java.security.NoSuchAlgorithmException) $r4;

        virtualinvoke r9.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        goto label05;

     label07:
        $r5 := @caughtexception;

        r10 = (java.security.NoSuchProviderException) $r5;

        virtualinvoke r10.<java.security.NoSuchProviderException: void printStackTrace()>();

        goto label05;

     label08:
        $r6 := @caughtexception;

        r11 = (javax.crypto.NoSuchPaddingException) $r6;

        virtualinvoke r11.<javax.crypto.NoSuchPaddingException: void printStackTrace()>();

        goto label05;

     label09:
        $r7 := @caughtexception;

        r12 = (java.security.InvalidKeyException) $r7;

        virtualinvoke r12.<java.security.InvalidKeyException: void printStackTrace()>();

        goto label05;

     label10:
        $r8 := @caughtexception;

        virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>();

        goto label05;

        catch java.security.NoSuchAlgorithmException from label02 to label03 with label06;
        catch java.security.NoSuchAlgorithmException from label04 to label05 with label06;
        catch java.security.NoSuchProviderException from label02 to label03 with label07;
        catch java.security.NoSuchProviderException from label04 to label05 with label07;
        catch javax.crypto.NoSuchPaddingException from label02 to label03 with label08;
        catch javax.crypto.NoSuchPaddingException from label04 to label05 with label08;
        catch java.security.InvalidKeyException from label02 to label03 with label09;
        catch java.security.InvalidKeyException from label04 to label05 with label09;
        catch java.lang.Exception from label01 to label03 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
    }

    public void setKey(java.lang.String)
    {
        m.client.android.library.core.utils.a $r0;
        java.lang.String $r1;

        $r0 := @this: m.client.android.library.core.utils.a;

        $r1 := @parameter0: java.lang.String;

        $r0.<m.client.android.library.core.utils.a: java.lang.String d> = $r1;

        return;
    }
}
