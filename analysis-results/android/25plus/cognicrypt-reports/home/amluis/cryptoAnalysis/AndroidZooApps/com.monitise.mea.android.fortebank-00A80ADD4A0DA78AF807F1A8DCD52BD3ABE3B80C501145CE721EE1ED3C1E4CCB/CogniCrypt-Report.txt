Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer4010)
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: f6890d9a053d075771755d86a7b4493a27b71266e083134b4a0a965cfbb801b0
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5558)
		Method: <dma: void <init>(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 9af2f3991386fb48c7dfacd8a5a70686f4bfa58966e167c0dad2ba3cd4a819c1
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 1f31580920da22d100f3b9cef3e133c521a496cf62e80f4549eef22de5b1121e
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: b72db40b68a9b6afef97b3af64d64c426e3ea36307107ee4a3ddab23b771981e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: ce63b0eb57c5924f1ea668bf881e59bc358571b8e793c42cbaec361fced1670e
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 4eca516dc04a7ed2480676f09198d61a3fe719ea8d12579aeb90711e46c517bf
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1654)
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: efc20548079c6bad432c60b4cc0f41a985fda2e6122c66824fbb4d897f68e50c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1683)
		Method: <dou: javax.crypto.SecretKey b(android.content.Context,java.lang.String)>
		SHA-256: fcbf7a15a723090f45fd54000509ea1dd65c8aa6aa9f1c38d10d1baa568fbd0a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 5ec7a47afe1ae562d4d7cdd8eeb5c1da1ec966e36f2da6ce6d5e32fc9471f9ac
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <dqc: eba a(eba)>
		SHA-256: 800b138653cd56c4db3b847d79fdc9123f9c0fdcff762aac97bf66d5b115044a
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3932)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: e44b1bde0d718b9d5bc08a1c69b2000420c318ea35bca8a9557548c01e1a5d78
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4029)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 8c271f85b347b8c57b07ff83d0316ccca8eb9dd4ab1ccff0c54eda6c404f5a23
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 3d3773e338a654191a74de599eb2819d59784a2d15c025cf6fe97e29ab369e8a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 9e47b02dfb9c74f4866b9ad191499bf3082889c11a77e7a84cbb518717bbb724
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <dou: byte[] b(javax.crypto.SecretKey,byte[])>
		SHA-256: 782f4e675b92efede98451fc8ebd6de41ac730c9a36441054aa76b8a166d5b9e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5553)
		Method: <cjr: void <init>(javax.net.ssl.X509TrustManager)>
		SHA-256: f350f33a8206096f5f2ee6cdbf934dc8d6913d2d10add949033cb5db0a4aead
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3940)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: b19bcc243c7ecb01b56894bad55139af9069a16d4ee2fad98ff73737e5cfff00
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: 9e47b02dfb9c74f4866b9ad191499bf3082889c11a77e7a84cbb518717bbb724
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1656)
		Method: <dou: void a(android.content.Context,java.lang.String)>
		SHA-256: 255ba5520f9754423ec3a2d25ded672a950dac3927a448e2b3a343c59657b7c5
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 4eca516dc04a7ed2480676f09198d61a3fe719ea8d12579aeb90711e46c517bf
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3938)
		Method: <djx: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: aada615ccdc900bf26f4010e744d730c14a0f197151835ee6cee49f0991bb4d0
		Secure: true
	Object:
		Variable: $r11
		Type: javax.net.ssl.SSLContext
		Statement: $r11 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4637)
		Method: <cjp: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 8f62ada1cd79e0edacfe3657b93065db50ed2b6dd36a991afcee1224a53641f8
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7191)
		Method: <com.squareup.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()>
		SHA-256: dce7e24d84cb3e62cdbfadad5c18609021d4c48ff103572f8b88f4d019f5b972
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1681)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 4d316b0c29172fec18a9ae3dc8faf4b4e6b15bc96ed4324fb141b77c98ae7a87
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer4005, varReplacer4006)
		Method: <djx: java.lang.String d(android.content.Context)>
		SHA-256: d943210f1251b0ccf84f2a37ec5ad3296579799d1399f98109656108f463d805
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 4c016cfc9356af9e0e52bb7c385984e2d0d9792c594b9ed26282b859a7f1d31c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <dou: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 47049074634b680d5aecb4d23434c3ac695c34d9853a0c465f98359cd6ec2c2d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7784)
		Method: <dqc: eba a(eba)>
		SHA-256: c3372fa8122f91ea955cab2fea2fd567b6cfe2344ea5dad8e2c58bdee0dc27be
		Secure: true

Findings in Java Class: dou

	 in Method: void a(android.content.Context,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #255ba5520f9754423ec3a2d25ded672a950dac3927a448e2b3a343c59657b7c5)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer1655, $r6)


	 in Method: javax.crypto.SecretKey b(android.content.Context,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #fcbf7a15a723090f45fd54000509ea1dd65c8aa6aa9f1c38d10d1baa568fbd0a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #fcbf7a15a723090f45fd54000509ea1dd65c8aa6aa9f1c38d10d1baa568fbd0a)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r10 = virtualinvoke $r5.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer1682, $r9)


	 in Method: byte[] b(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4028, $r0, $r5)


	 in Method: byte[] a(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1680, $r0, $r4)


Findings in Java Class: djx

	 in Method: java.lang.String b(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initSign(java.security.PrivateKey)>($r10)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initSign(java.security.PrivateKey)>($r10)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #e44b1bde0d718b9d5bc08a1c69b2000420c318ea35bca8a9557548c01e1a5d78)
			First parameter (with value "SHA512WithRSAEncryption") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3932)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #aada615ccdc900bf26f4010e744d730c14a0f197151835ee6cee49f0991bb4d0)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r13 = virtualinvoke $r12.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer3943, varReplacer3944)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #b19bcc243c7ecb01b56894bad55139af9069a16d4ee2fad98ff73737e5cfff00)
			First parameter (with value "SHA512WithRSAEncryption") should be any of {SHA1withRSA/ISO9796-2, RSASSA-PSS, SHA1withDSA, SHA224withECDSA, SHA256withDSA, SHA512withRSA/PSS, SHA512withRSA, SHA384withRSA/PSS, SHA384withRSA, SHA1withRSA, NONEwithRSA, MD4withRSA, MD5withRSA, DSAwithSHA1, NONEwithDSA, SHA256withRSA/PSS, SHA224withRSA/PSS, SHA256withRSA, SHA224withRSA, DSA, SHA1withRSA/PSS, MD5withRSA/ISO9796-2, DSS, SHA224withDSA}
			at statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3940)


	 in Method: java.lang.String d(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #f6890d9a053d075771755d86a7b4493a27b71266e083134b4a0a965cfbb801b0)
			First parameter (with value 1024) should be any of {2048, 4096}
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer3999)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared R S A
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>(r17)


Findings in Java Class: dma

	 in Method: void <init>(android.content.Context,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #9af2f3991386fb48c7dfacd8a5a70686f4bfa58966e167c0dad2ba3cd4a819c1)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r8)


Findings in Java Class: cjr

	 in Method: void <init>(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5551, $r2, varReplacer5551)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5551, $r2, varReplacer5551)


Findings in Java Class: cjp

	 in Method: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4643, r23, varReplacer4643)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4643, r23, varReplacer4643)


Findings in Java Class: com.squareup.okhttp.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7192, varReplacer7192, varReplacer7192)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7192, varReplacer7192, varReplacer7192)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 28

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	NeverTypeOfError: 3
	RequiredPredicateError: 12
	IncompleteOperationError: 2
=====================================================================