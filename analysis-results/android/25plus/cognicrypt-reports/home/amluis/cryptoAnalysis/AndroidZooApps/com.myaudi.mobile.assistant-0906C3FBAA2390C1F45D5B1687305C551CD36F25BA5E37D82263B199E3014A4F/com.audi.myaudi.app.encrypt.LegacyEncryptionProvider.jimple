public class com.audi.myaudi.app.encrypt.LegacyEncryptionProvider extends java.lang.Object implements com.audi.myaudi.app.encrypt.IEncryptionProvider
{
    private static final java.lang.String SHARED_PREFERENCES_KEY_ENCRYPTED_FLAG;
    private static final java.lang.String SHARED_PREFERENCES_KEY_ENCRYPTION_KEY;
    private static final java.lang.String SHARED_PREFERENCES_KEY_STORE_FILENAME;
    private static final java.lang.String TAG;
    private static com.audi.myaudi.app.encrypt.LegacyEncryptionProvider instance;
    private javax.crypto.Cipher aesCipher;
    private java.security.Key aesKey;
    private java.lang.String alias;
    private final android.content.Context context;
    private java.security.KeyStore keyStore;
    private javax.crypto.Cipher rsaCipher;

    private void <init>()
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        android.app.Application $r1;
        android.content.Context $r2;
        java.lang.String $r3, varReplacer16113, varReplacer16114, varReplacer16115;
        java.security.KeyStore $r4;
        java.lang.Throwable $r5;
        null_type varReplacer16112;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.audi.androidutils.AudiApplication: android.app.Application getInstance()>();

        $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: android.content.Context context> = $r1;

        $r2 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: android.content.Context context>;

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.String getPackageName()>();

        $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.lang.String alias> = $r3;

     label1:
        varReplacer16113 = "AndroidKeyStore";

        $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer16113);

     label2:
        $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.KeyStore keyStore> = $r4;

        $r4 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.KeyStore keyStore>;

     label3:
        varReplacer16112 = null;

        virtualinvoke $r4.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(varReplacer16112);

     label4:
        return;

     label5:
        $r5 := @caughtexception;

     label6:
        varReplacer16114 = "LegacyEncryptionProvide";

        varReplacer16115 = "Could not get Instance of AndroidKeyStore.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer16114, varReplacer16115, $r5);

        return;

     label7:
        $r5 := @caughtexception;

        goto label6;

     label8:
        $r5 := @caughtexception;

        goto label6;

     label9:
        $r5 := @caughtexception;

        goto label6;

        catch java.security.KeyStoreException from label1 to label2 with label5;
        catch java.security.KeyStoreException from label3 to label4 with label5;
        catch java.io.IOException from label1 to label2 with label9;
        catch java.io.IOException from label3 to label4 with label9;
        catch java.security.NoSuchAlgorithmException from label1 to label2 with label7;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label7;
        catch java.security.cert.CertificateException from label1 to label2 with label8;
        catch java.security.cert.CertificateException from label3 to label4 with label8;
    }

    private byte[] decryptKey(byte[])
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        byte[] $r1;
        javax.crypto.CipherInputStream $r2;
        java.lang.Exception $r3;
        java.util.ArrayList $r4;
        java.security.KeyStore $r5;
        java.lang.String $r6, varReplacer16103, varReplacer16106, varReplacer16107;
        java.security.KeyStore$Entry $r7;
        java.security.KeyStore$PrivateKeyEntry $r8;
        java.security.PrivateKey $r9;
        java.security.interfaces.RSAPrivateKey $r10;
        javax.crypto.Cipher $r11;
        java.io.ByteArrayInputStream $r12;
        int $i0, $i2, varReplacer16104;
        byte $b1;
        java.lang.Byte $r13;
        java.lang.Object $r14;
        null_type varReplacer16105, varReplacer16108;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 := @parameter0: byte[];

     label01:
        $r5 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.KeyStore keyStore>;

        $r6 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.lang.String alias>;

        varReplacer16105 = null;

        $r7 = virtualinvoke $r5.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r6, varReplacer16105);

        $r8 = (java.security.KeyStore$PrivateKeyEntry) $r7;

        $r9 = virtualinvoke $r8.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey getPrivateKey()>();

        $r10 = (java.security.interfaces.RSAPrivateKey) $r9;

        $r11 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: javax.crypto.Cipher rsaCipher>;

     label02:
        if $r11 != null goto label04;

     label03:
        varReplacer16103 = "RSA/ECB/PKCS1Padding";

        $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16103);

        $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: javax.crypto.Cipher rsaCipher> = $r11;

     label04:
        $r11 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: javax.crypto.Cipher rsaCipher>;

        varReplacer16104 = 2;

        virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer16104, $r10);

     label05:
        $r2 = new javax.crypto.CipherInputStream;

        $r12 = new java.io.ByteArrayInputStream;

     label06:
        specialinvoke $r12.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        $r11 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: javax.crypto.Cipher rsaCipher>;

        specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r12, $r11);

     label07:
        $r4 = new java.util.ArrayList;

     label08:
        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

     label09:
        $i0 = virtualinvoke $r2.<javax.crypto.CipherInputStream: int read()>();

     label10:
        if $i0 == -1 goto label14;

        $b1 = (byte) $i0;

     label11:
        $r13 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r13);

     label12:
        goto label09;

     label13:
        $r3 := @caughtexception;

        varReplacer16106 = "LegacyEncryptionProvide";

        varReplacer16107 = "The key could not be decrypted!";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer16106, varReplacer16107, $r3);

        varReplacer16108 = null;

        return varReplacer16108;

     label14:
        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $r1 = newarray (byte)[$i0];

     label15:
        $i0 = 0;

     label16:
        $i2 = lengthof $r1;

     label17:
        if $i0 >= $i2 goto label20;

     label18:
        $r14 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r13 = (java.lang.Byte) $r14;

        $b1 = virtualinvoke $r13.<java.lang.Byte: byte byteValue()>();

        $r1[$i0] = $b1;

     label19:
        $i0 = $i0 + 1;

        goto label16;

     label20:
        return $r1;

        catch java.lang.Exception from label01 to label02 with label13;
        catch java.lang.Exception from label03 to label05 with label13;
        catch java.lang.Exception from label06 to label07 with label13;
        catch java.lang.Exception from label08 to label10 with label13;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Exception from label14 to label15 with label13;
        catch java.lang.Exception from label16 to label17 with label13;
        catch java.lang.Exception from label18 to label19 with label13;
    }

    private void deleteAESKey()
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        null_type varReplacer16093;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        varReplacer16093 = null;

        $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.Key aesKey> = varReplacer16093;

        return;
    }

    private void deleteLegacyEncryptionInformations()
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        android.content.SharedPreferences $r1;
        android.content.SharedPreferences$Editor $r2;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 = staticinvoke <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: android.content.SharedPreferences getKeyStoreSharedPreferences()>();

        $r2 = interfaceinvoke $r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor clear()>();

        interfaceinvoke $r2.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    private void deletePrivateKey(java.lang.String)
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        java.lang.String $r1, varReplacer16091, varReplacer16092;
        java.lang.Exception $r2;
        java.security.KeyStore $r3;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r3 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.KeyStore keyStore>;

        virtualinvoke $r3.<java.security.KeyStore: void deleteEntry(java.lang.String)>($r1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        varReplacer16091 = "LegacyEncryptionProvide";

        varReplacer16092 = "The key could not be removed from key store!";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer16091, varReplacer16092, $r2);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected static com.audi.myaudi.app.encrypt.IEncryptionProvider getInstance()
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;

        nop;

        $r0 = <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider instance>;

        if $r0 != null goto label1;

        $r0 = new com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        specialinvoke $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: void <init>()>();

        <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider instance> = $r0;

     label1:
        $r0 = <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider instance>;

        return $r0;
    }

    private static android.content.SharedPreferences getKeyStoreSharedPreferences()
    {
        android.app.Application $r0;
        android.content.SharedPreferences $r1;
        java.lang.String varReplacer16083;
        int varReplacer16084;

        nop;

        $r0 = staticinvoke <com.audi.androidutils.AudiApplication: android.app.Application getInstance()>();

        varReplacer16083 = "key_store_prefs";

        varReplacer16084 = 0;

        $r1 = virtualinvoke $r0.<android.app.Application: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>(varReplacer16083, varReplacer16084);

        return $r1;
    }

    private java.security.Key getSecretKey()
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        java.security.Key $r1;
        java.lang.String $r2, varReplacer16097, varReplacer16099;
        boolean $z0;
        byte[] $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        null_type varReplacer16096, varReplacer16098;
        int varReplacer16100;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.Key aesKey>;

        if $r1 != null goto label1;

        varReplacer16097 = "encrypted_key";

        varReplacer16098 = null;

        $r2 = specialinvoke $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer16097, varReplacer16098);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 != 0 goto label2;

        varReplacer16100 = 0;

        $r3 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r2, varReplacer16100);

        $r3 = specialinvoke $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: byte[] decryptKey(byte[])>($r3);

        if $r3 == null goto label2;

        $r4 = new javax.crypto.spec.SecretKeySpec;

        varReplacer16099 = "AES";

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer16099);

        $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.Key aesKey> = $r4;

        $r1 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.Key aesKey>;

        return $r1;

     label1:
        $r1 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.Key aesKey>;

        return $r1;

     label2:
        varReplacer16096 = null;

        return varReplacer16096;
    }

    private java.lang.String getString(java.lang.String, java.lang.String)
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        java.lang.String $r1, $r2, varReplacer16101;
        android.content.SharedPreferences $r3;
        null_type varReplacer16102;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: android.content.SharedPreferences getKeyStoreSharedPreferences()>();

        varReplacer16101 = "encrypted_key";

        varReplacer16102 = null;

        $r1 = interfaceinvoke $r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer16101, varReplacer16102);

        return $r1;
    }

    static boolean isLegacyEncryptionKeyAvailable()
    {
        android.content.SharedPreferences $r0;
        java.lang.String $r1, varReplacer16079;
        null_type varReplacer16080;
        int varReplacer16081, varReplacer16082;

        nop;

        $r0 = staticinvoke <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: android.content.SharedPreferences getKeyStoreSharedPreferences()>();

        varReplacer16079 = "encrypted_key";

        varReplacer16080 = null;

        $r1 = interfaceinvoke $r0.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(varReplacer16079, varReplacer16080);

        if $r1 == null goto label1;

        varReplacer16081 = 1;

        return varReplacer16081;

     label1:
        varReplacer16082 = 0;

        return varReplacer16082;
    }

    private void setString(java.lang.String, java.lang.String)
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        java.lang.String $r1, $r2;
        android.content.SharedPreferences $r3;
        android.content.SharedPreferences$Editor $r4;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: android.content.SharedPreferences getKeyStoreSharedPreferences()>();

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>($r1, $r2);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public void clearKey()
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.lang.String alias>;

        specialinvoke $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: void deletePrivateKey(java.lang.String)>($r1);

        specialinvoke $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: void deleteAESKey()>();

        specialinvoke $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: void deleteLegacyEncryptionInformations()>();

        return;
    }

    public java.lang.String decryptString(java.lang.String)
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        java.lang.String $r1, $r2, varReplacer16085, varReplacer16086, varReplacer16088, varReplacer16089;
        java.lang.Exception $r3;
        boolean $z0;
        javax.crypto.Cipher $r4;
        java.security.Key $r5;
        byte[] $r6;
        int varReplacer16087, varReplacer16090;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: boolean isInitialized()>();

        if $z0 == 0 goto label9;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label9;

     label1:
        $r4 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: javax.crypto.Cipher aesCipher>;

     label2:
        if $r4 != null goto label4;

     label3:
        varReplacer16085 = "AES/ECB/PKCS7Padding";

        varReplacer16086 = "BC";

        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer16085, varReplacer16086);

        $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: javax.crypto.Cipher aesCipher> = $r4;

     label4:
        $r4 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: javax.crypto.Cipher aesCipher>;

        $r5 = specialinvoke $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: java.security.Key getSecretKey()>();

        varReplacer16087 = 2;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer16087, $r5);

        varReplacer16090 = 0;

        $r6 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, varReplacer16090);

        $r4 = $r0.<com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: javax.crypto.Cipher aesCipher>;

        $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

     label5:
        $r2 = new java.lang.String;

     label6:
        specialinvoke $r2.<java.lang.String: void <init>(byte[])>($r6);

     label7:
        return $r2;

     label8:
        $r3 := @caughtexception;

        varReplacer16088 = "LegacyEncryptionProvide";

        varReplacer16089 = "Could not decrypt string!";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>(varReplacer16088, varReplacer16089, $r3);

     label9:
        return $r1;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Exception from label3 to label5 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
    }

    public java.lang.String encryptString(java.lang.String)
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        java.lang.String $r1, varReplacer16109, varReplacer16110;
        null_type varReplacer16111;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 := @parameter0: java.lang.String;

        varReplacer16109 = "LegacyEncryptionProvide";

        varReplacer16110 = "encryptString with LegacyEncryptionProvider MUST NOT be used!";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer16109, varReplacer16110);

        varReplacer16111 = null;

        return varReplacer16111;
    }

    boolean isInitialized()
    {
        com.audi.myaudi.app.encrypt.LegacyEncryptionProvider $r0;
        android.content.SharedPreferences $r1;
        boolean $z0;
        java.lang.String varReplacer16094;
        int varReplacer16095;

        nop;

        $r0 := @this: com.audi.myaudi.app.encrypt.LegacyEncryptionProvider;

        $r1 = staticinvoke <com.audi.myaudi.app.encrypt.LegacyEncryptionProvider: android.content.SharedPreferences getKeyStoreSharedPreferences()>();

        varReplacer16094 = "prefs_encrypted";

        varReplacer16095 = 0;

        $z0 = interfaceinvoke $r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>(varReplacer16094, varReplacer16095);

        return $z0;
    }
}
