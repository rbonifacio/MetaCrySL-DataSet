Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11561)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: 99f3e383e45d9a49e1cc1be76c20943670a6da990c2b5d6578b549ff51af70ad
		Secure: false
	Object:
		Variable: r5
		Type: java.security.SecureRandom
		Statement: specialinvoke r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.barz.droid.rest.CustomSSLSocketFactory: void init()>
		SHA-256: 34e647a139c10d0886409dd997d02a381363f8f4d950c603ad43ec93171f8cba
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11559)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: eb6fc969d8a84d79714fd541e1df38040110ab07ca35a0d4bf3c4cc8b7f4ff3
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: 65b0a9095458471d7c89eb229a61141a8a5dd0f47b3c706e999c54229c9f49a0
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: e8039a7883431fbff36702cdd2faabcb129dba4b0077b7631b87bea941101cc3
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r8.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r11, $r10)
		Method: <com.flurry.sdk.cc: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,long)>
		SHA-256: edccaad4fca6b1fc5ebc921b996a09a8b4f1fde8e59be24a82b707fbe56c4825
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: 5b74d0bdb582a2655f5f6be9acb361934e5cf022b7983781611800354766847b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1235)
		Method: <com.flurry.sdk.fh: byte[] d(java.lang.String)>
		SHA-256: 3233b969d4234fdf3908c7847ff2939fe92cffaaba66bc839c6a734e1c0f14f7
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.ar: byte[] l(java.lang.String)>
		SHA-256: 65375f71f044cfa9b98cf47b69b3a1c5ed5f8b8182d135998bcc810863cb31a6
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.flurry.sdk.fh: byte[] d(java.lang.String)>
		SHA-256: bdf1bd7d2798466c205c3d96aa7542716f106fff18aaf9304bba8907c09bf51d
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.gq: java.lang.String R(java.lang.String)>
		SHA-256: 91230472a810a6537cde066a03eb07b7f8f6455077f2b2b8d424cd5d843a953e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14131)
		Method: <com.google.android.gms.internal.ao: java.security.MessageDigest bf()>
		SHA-256: c62219b579d383f3152f2d6e9a3eab967c05e546b01bb4cd8469670b4cf6d0c4
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11637)
		Method: <com.google.android.gms.internal.gi: java.lang.String dx()>
		SHA-256: 2900ed28ab8b3b10a71b5f9e0b0f55784584c6b2d320f8f3ee466bba9c70ff6b
		Secure: true
	Object:
		Variable: varReplacer11559
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11559)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: e348c1a3522b7ba5921a3ee27ad5c9ec68a2f81237c55722d602de604cbc950b
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.gi: java.lang.String dx()>
		SHA-256: 62518920d91eab995bb992b2b92bd487551cf48b726bfe1122d63ca616eecec3
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2382)
		Method: <com.google.android.gms.internal.gq: java.lang.String R(java.lang.String)>
		SHA-256: 74002e831ff62c4c0b7094d119f1e3538da42d88bfbd26424d453928f2244a8a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10836)
		Method: <com.androidquery.util.AQUtility: byte[] getMD5(byte[])>
		SHA-256: d61c6d9a388ae62221b78186562337660244f0c5c3e93103d58624466b7ac768
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.barz.droid.rest.RestMethod: org.apache.http.impl.client.DefaultHttpClient getThreadSafeClient()>
		SHA-256: 952521e3a36f97d142459704078deb01b0edd316e2f354fdd8b78eb7e7414c8b
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1444)
		Method: <com.barz.droid.rest.CustomSSLSocketFactory: void init()>
		SHA-256: 3de525f88a21df8e6a9a8ff5982878a93119f6274233ee0ae06f44258874bc5a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.google.android.gms.internal.o: byte[] c(byte[],java.lang.String)>
		SHA-256: 348a206a763971a79027e4561c32db494c8071b53884c024cbacfa8ac98a9d5c
		Secure: false

Findings in Java Class: com.flurry.sdk.cc

	 in Method: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,long)
		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #edccaad4fca6b1fc5ebc921b996a09a8b4f1fde8e59be24a82b707fbe56c4825)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: virtualinvoke $r8.<java.security.DigestOutputStream: void on(boolean)>(varReplacer1257)

		ForbiddenMethodError violating CrySL rule for java.security.DigestOutputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestOutputStream
			at statement: virtualinvoke $r8.<java.security.DigestOutputStream: void on(boolean)>(varReplacer1257)


Findings in Java Class: com.google.android.gms.internal.o

	 in Method: byte[] c(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11562, $r10, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer11559)


Findings in Java Class: com.barz.droid.rest.CustomSSLSocketFactory

	 in Method: void init()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1445, r6, r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1445, r6, r5)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 20

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	ForbiddenMethodError: 1
	RequiredPredicateError: 5
=====================================================================