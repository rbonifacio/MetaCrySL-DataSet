Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.flurry.sdk.fb: byte[] d(java.lang.String)>
		SHA-256: 1a1cc63830a47172efe6cbfe44438f7887878e3b6548376813c2dd25011ed742
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2684)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 936882a3048fddfcdd19095efc4f30c093d94728ad5b8009c6a0434c474c5ec8
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r9.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r8, $r11)
		Method: <com.flurry.sdk.cz: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)>
		SHA-256: 16b4ee685194b5150c9ab5dffdc62fc66837468af57f451a43130dfeca2e1f48
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2686)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 2538352411bf062cc2dd5c0923faa99b5af776235fcdc907a22b825eba762d22
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 8587a6b4a3889c8369399b8eeb96b169923a65cf7cc1c21ddd8e41ba84d9f9f2
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer2682, varReplacer2683)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: b6d04e63bf61d8fdd63b34e34812145dc885214e2f08451e955fb44621edfd18
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: fa977e069dc0ac398df10afb498000c56cee071c981025dcb8bde7b6f89d767d
		Secure: true
	Object:
		Variable: varReplacer2684
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2684)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 10ae409c7290bce4eae2aadc865202183041e858233c193613540bf16f5bb91d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 3a6681e13e99ce1167f2e123de6b187a07d2651df36cf9186221a2e800757161
		Secure: false
	Object:
		Variable: varReplacer2683
		Type: int
		Statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer2682, varReplacer2683)
		Method: <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>
		SHA-256: 9f1ae4e389f6324d7a7500fa6460247eba1e1f0c39374d47405cc2926128949
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer449)
		Method: <com.flurry.sdk.fb: byte[] d(java.lang.String)>
		SHA-256: d6bd16fb0a0edff724255f1928eeac6eab173282ea0eda00533d2d67db054a89
		Secure: true

Findings in Java Class: com.flurry.sdk.cz

	 in Method: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)
		ForbiddenMethodError violating CrySL rule for java.security.DigestOutputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestOutputStream
			at statement: virtualinvoke $r9.<java.security.DigestOutputStream: void on(boolean)>(varReplacer3838)

		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #16b4ee685194b5150c9ab5dffdc62fc66837468af57f451a43130dfeca2e1f48)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: virtualinvoke $r9.<java.security.DigestOutputStream: void on(boolean)>(varReplacer3838)


Findings in Java Class: com.pmx.pmx_client.utils.io.EncryptionHelper

	 in Method: java.lang.String generateSecretKey()
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b6d04e63bf61d8fdd63b34e34812145dc885214e2f08451e955fb44621edfd18)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer2682, varReplacer2683)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b6d04e63bf61d8fdd63b34e34812145dc885214e2f08451e955fb44621edfd18)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2684)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b6d04e63bf61d8fdd63b34e34812145dc885214e2f08451e955fb44621edfd18)
			Third parameter (with value 1000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer2682, varReplacer2683)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	ConstraintError: 1
	RequiredPredicateError: 2
	ForbiddenMethodError: 1
	NeverTypeOfError: 1
=====================================================================