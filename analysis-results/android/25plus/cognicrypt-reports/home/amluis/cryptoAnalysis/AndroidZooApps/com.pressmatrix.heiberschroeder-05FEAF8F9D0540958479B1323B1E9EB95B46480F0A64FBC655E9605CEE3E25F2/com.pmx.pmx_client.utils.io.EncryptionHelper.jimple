public class com.pmx.pmx_client.utils.io.EncryptionHelper extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static byte[] mEncryptionKey;
    private static java.util.List mReEncryptingEditionIds;

    static void <clinit>()
    {
        java.lang.String $r0;
        java.lang.Class $r1;
        java.util.ArrayList $r2;

        nop;

        $r1 = class "Lcom/pmx/pmx_client/utils/io/EncryptionHelper;";

        $r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String LOG_TAG> = $r0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        <com.pmx.pmx_client.utils.io.EncryptionHelper: java.util.List mReEncryptingEditionIds> = $r2;

        return;
    }

    public void <init>()
    {
        com.pmx.pmx_client.utils.io.EncryptionHelper $r0;

        $r0 := @this: com.pmx.pmx_client.utils.io.EncryptionHelper;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decryptBytes(byte[]) throws java.lang.Exception
    {
        byte[] $r0;
        javax.crypto.Cipher $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: javax.crypto.Cipher getCipher(int)>(2);

        $r0 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    public static byte[] decryptFile(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.pmx.pmx_client.utils.io.FileHelper: byte[] getBytesOfFile(java.lang.String)>($r0);

        $r1 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: byte[] decryptBytes(byte[])>($r1);

        return $r1;
    }

    public static byte[] encryptBytes(byte[]) throws java.lang.Exception
    {
        byte[] $r0;
        javax.crypto.Cipher $r1;

        $r0 := @parameter0: byte[];

        $r1 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: javax.crypto.Cipher getCipher(int)>(1);

        $r0 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        return $r0;
    }

    public static byte[] encryptBytesSimple(byte[])
    {
        byte[] $r0;
        int $i0, $i1;
        byte $b2;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label2;

        $b2 = $r0[$i1];

        $b2 = $b2 ^ -1;

        $r0[$i1] = $b2;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static byte[] encryptFile(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        byte[] $r1;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.pmx.pmx_client.utils.io.FileHelper: byte[] getBytesOfFile(java.lang.String)>($r0);

        $r1 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: byte[] encryptBytes(byte[])>($r1);

        return $r1;
    }

    public static java.lang.String generateEncryptionKey()
    {
        java.lang.Exception $r0;
        java.lang.String $r1;

     label1:
        nop;

        $r1 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSecretKey()>();

     label2:
        return $r1;

     label3:
        $r0 := @caughtexception;

        $r1 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String generateSimpleKey()>();

        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.String generateSecretKey() throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException
    {
        javax.crypto.spec.PBEKeySpec $r0;
        java.security.SecureRandom $r1;
        byte[] $r2;
        java.lang.String $r3, varReplacer2684, varReplacer2686;
        char[] $r4;
        javax.crypto.SecretKeyFactory $r5;
        javax.crypto.SecretKey $r6;
        javax.crypto.spec.SecretKeySpec $r7;
        int varReplacer2682, varReplacer2683, varReplacer2685;

        nop;

        $r1 = new java.security.SecureRandom;

        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();

        $r2 = newarray (byte)[32];

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2);

        $r0 = new javax.crypto.spec.PBEKeySpec;

        $r3 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String getRandomString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        varReplacer2682 = 1000;

        varReplacer2683 = 256;

        specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer2682, varReplacer2683);

        varReplacer2686 = "PBKDF2WithHmacSHA1";

        $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2686);

        $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0);

        $r2 = interfaceinvoke $r6.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r7 = new javax.crypto.spec.SecretKeySpec;

        varReplacer2684 = "AES";

        specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2684);

        $r2 = virtualinvoke $r7.<javax.crypto.spec.SecretKeySpec: byte[] getEncoded()>();

        varReplacer2685 = 0;

        $r3 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r2, varReplacer2685);

        return $r3;
    }

    private static java.lang.String generateSimpleKey()
    {
        java.lang.String $r0;
        byte[] $r1;
        int varReplacer2680, varReplacer2681;

        nop;

        $r0 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String getRandomString()>();

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        varReplacer2681 = 32;

        $r1 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>($r1, varReplacer2681);

        varReplacer2680 = 0;

        $r0 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r1, varReplacer2680);

        return $r0;
    }

    private static javax.crypto.Cipher getCipher(int) throws java.lang.Exception
    {
        int $i0;
        javax.crypto.spec.SecretKeySpec $r0;
        javax.crypto.Cipher $r1;
        byte[] $r2;

        $i0 := @parameter0: int;

        $r0 = new javax.crypto.spec.SecretKeySpec;

        $r2 = <com.pmx.pmx_client.utils.io.EncryptionHelper: byte[] mEncryptionKey>;

        specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, "AES");

        $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/ECB/PKCS5Padding");

        virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r0);

        return $r1;
    }

    public static javax.crypto.CipherInputStream getCipherInputStream(java.io.InputStream) throws java.lang.Exception
    {
        java.io.InputStream $r0;
        javax.crypto.CipherInputStream $r1;
        javax.crypto.Cipher $r2;

        $r0 := @parameter0: java.io.InputStream;

        $r1 = new javax.crypto.CipherInputStream;

        $r2 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: javax.crypto.Cipher getCipher(int)>(2);

        specialinvoke $r1.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r0, $r2);

        return $r1;
    }

    public static javax.crypto.CipherOutputStream getCipherOutputStream(java.io.OutputStream) throws java.lang.Exception
    {
        java.io.OutputStream $r0;
        javax.crypto.CipherOutputStream $r1;
        javax.crypto.Cipher $r2;

        $r0 := @parameter0: java.io.OutputStream;

        $r1 = new javax.crypto.CipherOutputStream;

        $r2 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: javax.crypto.Cipher getCipher(int)>(1);

        specialinvoke $r1.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r0, $r2);

        return $r1;
    }

    private static java.lang.String getRandomString()
    {
        java.lang.StringBuilder $r0;
        java.util.UUID $r1;
        java.lang.String $r2;
        long $l0;

        nop;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r2 = virtualinvoke $r1.<java.util.UUID: java.lang.String toString()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static void invokePageReEncrypted(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        com.pmx.pmx_client.utils.ottoevents.PageFileReEncryptedEvent $r2;
        long $l0;
        com.squareup.otto.Bus $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>($r1, "");

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        $r3 = staticinvoke <com.pmx.pmx_client.utils.EventBusProvider: com.squareup.otto.Bus getInstance()>();

        $r2 = new com.pmx.pmx_client.utils.ottoevents.PageFileReEncryptedEvent;

        specialinvoke $r2.<com.pmx.pmx_client.utils.ottoevents.PageFileReEncryptedEvent: void <init>(long)>($l0);

        virtualinvoke $r3.<com.squareup.otto.Bus: void post(java.lang.Object)>($r2);

        return;
    }

    private static void reEncryptEditionIfNeeded(long)
    {
        long $l0;
        java.util.List $r0;
        java.lang.Long $r1;
        boolean $z0;

        $l0 := @parameter0: long;

        $r0 = <com.pmx.pmx_client.utils.io.EncryptionHelper: java.util.List mReEncryptingEditionIds>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $z0 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r0 = <com.pmx.pmx_client.utils.io.EncryptionHelper: java.util.List mReEncryptingEditionIds>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void reEncryptPagesIfNeeded(long)>($l0);

        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void reEncryptImageWidgetsIfNeeded(long)>($l0);

        $r0 = <com.pmx.pmx_client.utils.io.EncryptionHelper: java.util.List mReEncryptingEditionIds>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        interfaceinvoke $r0.<java.util.List: boolean remove(java.lang.Object)>($r1);

     label1:
        return;
    }

    private static void reEncryptImageWidgets(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;
        int $i0, $i1;
        java.io.File[] $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r2[$i1];

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label2;

        $r0 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>(".jpg");

        if $z0 == 0 goto label2;

        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void tryReEncryptFile(java.io.File,boolean)>($r1, 0);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    private static void reEncryptImageWidgetsIfNeeded(long)
    {
        long $l0;
        java.lang.String $r0;
        java.io.File $r1;
        boolean $z0;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <com.pmx.pmx_client.utils.io.FileHelper: java.lang.String getWidgetsFolderPath(long)>($l0);

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void reEncryptImageWidgets(java.lang.String)>($r0);

     label1:
        return;
    }

    private static void reEncryptPages(java.lang.String)
    {
        java.lang.String $r0;
        java.io.File $r1;
        int $i0, $i1;
        java.io.File[] $r2;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r2;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r1 = $r2[$i1];

        $z0 = virtualinvoke $r1.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label2;

        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void tryReEncryptFile(java.io.File,boolean)>($r1, 1);

        $r0 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>();

        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void tryInvokePageReEncrypted(java.lang.String)>($r0);

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return;
    }

    private static void reEncryptPagesIfNeeded(long)
    {
        long $l0;
        java.lang.String $r0;
        java.io.File $r1;
        boolean $z0;

        $l0 := @parameter0: long;

        $r0 = staticinvoke <com.pmx.pmx_client.utils.io.FileHelper: java.lang.String getPagesFolderPath(long)>($l0);

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r0);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void reEncryptPages(java.lang.String)>($r0);

     label1:
        return;
    }

    public static void setEncryptionKey(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;
        int varReplacer2573;

        nop;

        $r0 := @parameter0: java.lang.String;

        varReplacer2573 = 0;

        $r1 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r0, varReplacer2573);

        <com.pmx.pmx_client.utils.io.EncryptionHelper: byte[] mEncryptionKey> = $r1;

        return;
    }

    private static void tryInvokePageReEncrypted(java.lang.String)
    {
        java.lang.String $r0, $r1;
        boolean $z0;

        $r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean endsWith(java.lang.String)>(".jpg");

        if $z0 == 0 goto label2;

        $r1 = ".jpg";

     label1:
        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void tryInvokePageReEncrypted(java.lang.String,java.lang.String)>($r0, $r1);

        return;

     label2:
        $r1 = ".pdf";

        goto label1;
    }

    private static void tryInvokePageReEncrypted(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        java.lang.Exception $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

     label1:
        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void invokePageReEncrypted(java.lang.String,java.lang.String)>($r0, $r1);

     label2:
        return;

     label3:
        $r2 := @caughtexception;

        $r0 = <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r0, " :: tryInvokePageReEncrypted :: ", $r2);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void tryReEncryptEditionIfNeeded(long)
    {
        long $l0;
        java.lang.Exception $r0;
        java.lang.String $r1;

        $l0 := @parameter0: long;

     label1:
        staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: void reEncryptEditionIfNeeded(long)>($l0);

     label2:
        return;

     label3:
        $r0 := @caughtexception;

        $r1 = <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r1, " :: tryReEncryptEditionIfNeeded :: ", $r0);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static void tryReEncryptFile(java.io.File, boolean)
    {
        java.io.File $r0, $r11, r17;
        boolean $z0;
        byte[] $r1;
        java.lang.Exception $r2;
        long $l0;
        int $i1;
        java.lang.String $r3, $r9;
        java.lang.Object $r4;
        javax.crypto.CipherOutputStream $r5, $r10;
        java.io.FileInputStream $r6, r13;
        java.io.FileOutputStream $r7, r16;
        java.lang.StringBuilder $r8, r15;
        java.lang.Throwable $r12;
        com.pmx.pmx_client.utils.io.SimpleDecryptionInputStream r14;
        java.io.InputStream r18;

        $r0 := @parameter0: java.io.File;

        $z0 := @parameter1: boolean;

        $l0 = virtualinvoke $r0.<java.io.File: long length()>();

        $i1 = (int) $l0;

        $r1 = newarray (byte)[$i1];

        $r3 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r4 = null;

        $r5 = null;

        if $z0 == 0 goto label20;

     label01:
        r14 = new com.pmx.pmx_client.utils.io.SimpleDecryptionInputStream;

     label02:
        r13 = new java.io.FileInputStream;

     label03:
        $r6 = r13;

     label04:
        specialinvoke r13.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke r14.<com.pmx.pmx_client.utils.io.SimpleDecryptionInputStream: void <init>(java.io.InputStream)>($r6);

     label05:
        $r4 = r14;

     label06:
        r16 = new java.io.FileOutputStream;

     label07:
        $r7 = r16;

     label08:
        r15 = new java.lang.StringBuilder;

     label09:
        $r8 = r15;

     label10:
        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_crpt");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.io.FileOutputStream: void <init>(java.lang.String)>($r9);

        $r10 = staticinvoke <com.pmx.pmx_client.utils.io.EncryptionHelper: javax.crypto.CipherOutputStream getCipherOutputStream(java.io.OutputStream)>($r7);

     label11:
        $r5 = $r10;

     label12:
        $i1 = lengthof $r1;

     label13:
        r18 = (java.io.InputStream) $r4;

        $i1 = virtualinvoke r18.<java.io.InputStream: int read(byte[],int,int)>($r1, 0, $i1);

     label14:
        if $i1 <= 0 goto label23;

     label15:
        virtualinvoke $r10.<java.io.OutputStream: void write(byte[],int,int)>($r1, 0, $i1);

     label16:
        goto label12;

     label17:
        $r2 := @caughtexception;

     label18:
        $r3 = <com.pmx.pmx_client.utils.io.EncryptionHelper: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, " :: tryReEncryptFile :: ", $r2);

     label19:
        r18 = (java.io.InputStream) $r4;

        staticinvoke <com.pmx.server.communication.tools.IOUtils: void closeInputStream(java.io.InputStream)>(r18);

        staticinvoke <com.pmx.server.communication.tools.IOUtils: void closeOutputStream(java.io.OutputStream)>($r5);

        return;

     label20:
        r13 = new java.io.FileInputStream;

     label21:
        specialinvoke r13.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

     label22:
        $r4 = r13;

        goto label06;

     label23:
        $r11 = new java.io.File;

     label24:
        $r0 = $r11;

     label25:
        r15 = new java.lang.StringBuilder;

     label26:
        $r8 = r15;

     label27:
        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r8 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_crpt");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.File: void <init>(java.lang.String)>($r9);

     label28:
        r17 = new java.io.File;

     label29:
        $r11 = r17;

     label30:
        specialinvoke r17.<java.io.File: void <init>(java.lang.String)>($r3);

        virtualinvoke $r0.<java.io.File: boolean renameTo(java.io.File)>($r11);

     label31:
        r18 = (java.io.InputStream) $r4;

        staticinvoke <com.pmx.server.communication.tools.IOUtils: void closeInputStream(java.io.InputStream)>(r18);

        staticinvoke <com.pmx.server.communication.tools.IOUtils: void closeOutputStream(java.io.OutputStream)>($r10);

        return;

     label32:
        $r12 := @caughtexception;

        r18 = (java.io.InputStream) $r4;

        staticinvoke <com.pmx.server.communication.tools.IOUtils: void closeInputStream(java.io.InputStream)>(r18);

        staticinvoke <com.pmx.server.communication.tools.IOUtils: void closeOutputStream(java.io.OutputStream)>($r5);

        throw $r12;

        catch java.lang.Exception from label04 to label05 with label17;
        catch java.lang.Exception from label10 to label11 with label17;
        catch java.lang.Exception from label12 to label14 with label17;
        catch java.lang.Exception from label15 to label16 with label17;
        catch java.lang.Throwable from label01 to label02 with label32;
        catch java.lang.Throwable from label02 to label03 with label32;
        catch java.lang.Throwable from label04 to label05 with label32;
        catch java.lang.Throwable from label06 to label07 with label32;
        catch java.lang.Throwable from label08 to label09 with label32;
        catch java.lang.Throwable from label10 to label11 with label32;
        catch java.lang.Throwable from label13 to label14 with label32;
        catch java.lang.Throwable from label15 to label16 with label32;
        catch java.lang.Throwable from label18 to label19 with label32;
        catch java.lang.Exception from label21 to label22 with label17;
        catch java.lang.Exception from label27 to label28 with label17;
        catch java.lang.Exception from label30 to label31 with label17;
        catch java.lang.Throwable from label20 to label21 with label32;
        catch java.lang.Throwable from label21 to label22 with label32;
        catch java.lang.Throwable from label23 to label24 with label32;
        catch java.lang.Throwable from label25 to label26 with label32;
        catch java.lang.Throwable from label27 to label29 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
    }
}
