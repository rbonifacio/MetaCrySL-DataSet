public class com.qranio.util.Security extends java.lang.Object
{

    public static java.lang.String decrypt(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0, varReplacer10769, varReplacer10770, varReplacer10771;
        java.security.Key $r1;
        javax.crypto.Cipher $r2;
        byte[] $r3;
        int varReplacer10772;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.qranio.util.Security: java.security.Key generateKey()>();

        varReplacer10771 = "AES";

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer10771);

        varReplacer10772 = 2;

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10772, $r1);

        $r3 = staticinvoke <com.qranio.util.Base64: byte[] decode(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[])>($r3);

        varReplacer10769 = "7q4il0fUuu83iT4I7ybW7";

        varReplacer10770 = "";

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(varReplacer10769, varReplacer10770);

        return $r0;
    }

    public static java.lang.String encodePassword(java.lang.String)
    {
        java.lang.String $r0;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r0 = staticinvoke <com.qranio.util.Security: java.lang.String md5(java.lang.String)>($r0);

        $r0 = staticinvoke <com.qranio.util.Security: java.lang.String sha256(java.lang.String)>($r0);

        return $r0;
    }

    public static java.lang.String encrypt(java.lang.String) throws java.lang.Exception
    {
        java.lang.String $r0;
        java.security.Key $r1;
        javax.crypto.Cipher $r2;
        java.lang.StringBuilder $r3;
        byte[] $r4;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.qranio.util.Security: java.security.Key generateKey()>();

        $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("7q4il0fUuu83iT4I7ybW7");

        $r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8");

        $r4 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4);

        $r0 = staticinvoke <com.qranio.util.Base64: java.lang.String encodeBytes(byte[])>($r4);

        return $r0;
    }

    private static java.security.Key generateKey() throws java.lang.Exception
    {
        javax.crypto.spec.SecretKeySpec $r0;
        byte[] $r1;
        java.lang.String $r2, varReplacer10774;

        nop;

        $r0 = new javax.crypto.spec.SecretKeySpec;

        $r2 = "FBEC17FA2CEADZJED24874C9C1D272DC";

        $r1 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        varReplacer10774 = "AES";

        specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer10774);

        return $r0;
    }

    public static java.lang.String md5(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jarjar.apache.commons.codec.digest.DigestUtils: byte[] md5(java.lang.String)>($r0);

        $r0 = staticinvoke <org.jarjar.apache.commons.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r0;
    }

    public static java.lang.String sha256(java.lang.String)
    {
        java.lang.String $r0;
        byte[] $r1;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.jarjar.apache.commons.codec.digest.DigestUtils: byte[] sha256(java.lang.String)>($r0);

        $r0 = staticinvoke <org.jarjar.apache.commons.codec.binary.Hex: java.lang.String encodeHexString(byte[])>($r1);

        return $r0;
    }
}
