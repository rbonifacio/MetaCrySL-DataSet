Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r13
		Type: byte[]
		Statement: virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r13)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: b5ab2245a188792f7b550e6182ac388ed5e10fe00f3a3a4aa1f6384f07e41d7e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5811)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 869a8b5068947b0e126d20f4e1d90aaca9be7c6ae312e4987f0ff9f5b49c9b7e
		Secure: true
	Object:
		Variable: varReplacer2570
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2570)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: ebbaec0e7cf5bc7544aeead8ac6c3e7d6bcbe8a743eb6ea82cdd9d88bb644669
		Secure: false
	Object:
		Variable: varReplacer2424
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2424)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: e9d0dd340769a53ceed47c762d0a644c198f90ffb19ac2b03e9b0534ee545a53
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11379)
		Method: <com.nielsen.app.nuid.AppNuid: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d4d40fff95bb0753a81f5074aa73f3a1b4d0aa2b036ccc6b652d8b2044b4f2c0
		Secure: true
	Object:
		Variable: r62
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer9855)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 94ba4ab5906785f1700e0078d3a800b49487db0a5e98f15af4310146aba028e7
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nielsen.app.nuid.AppNuid: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9e96d6ab2dcbad8864c460e02a4f4b1fb403d49331e63c421caad4a32b5b90b2
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2593)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: b560e806c7286f8e7c3dc30ce06104d891d2a88267231b2763dd9ceeb8de2213
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2425)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: d21345f44fc5701227a0bb7fe61fbd2ed140003945ebb92179c3ca87ce67892b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: a305d6e410284860ef5a0feaf85b69ddb063ba2e1d58f03639330c6977b4d3f9
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.Key
		Statement: $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: c48f8e476b7b2837d2bf724f233951604a7661f55ab3a3713661f09d99e4bc9f
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 745c88399e386cb4988bd7e8ee31fd18372b0c0c3cb0d12c9e68f4688c0fa5d6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3858)
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: d00336e08cb2f21c306695b388a8fbe8c33e653195089615beaae7ca6f175f13
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.KeyGenerator
		Statement: $r10 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2427)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 618b2f5468fa56d1f7d2b7106910742596242cda726951fa87ecbd1d2677570a
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKey
		Statement: $r10 = virtualinvoke $r17.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 8836fe1dc9cf09609882e676a853d2fc914a942529160e2899ca9733b81fe07
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = interfaceinvoke $r10.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 7394cd3202e1c43fc7fffb4516ad6ee015a1df5079f4af5bf3c4b682405e31de
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.nielsen.app.nuid.a: byte[] a(byte[])>
		SHA-256: edd35fe21122b4541370323d173b2a7e2437d0855232428acdac2e1e0de9bb85
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nielsen.app.sdk.k: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e26b74913e8b4fea91a9c66dcd6a0102a88d2fd644bec0e6a2ca11257bdb70b9
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 3b1433a56fc2a601eab847c9e0a83d51ac703a70d2cc28f41e56abe456875171
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: $r11 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2421)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: a2425bb0becf9bb73621042ae5a4aa52f7e330c69c386e7629be94333cec93bf
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.Cipher
		Statement: $r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9899)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: a4d33a0ed37dffbc100584ee2ed3d88751b5f9bbb1a18b981cf9f037caf06104
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: df665f084f1e770e2fb4717185530b11b34b780a49e13fb3ca461d98a46808a5
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2433, $i0, varReplacer2434)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: b7bd428681b59395f815a79d2d1a079ec1c6b87b455d138ba3f54f95fdba0e8d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.nielsen.app.nuid.a: byte[] b(byte[])>
		SHA-256: 522dbd852b293968723a8615f4b9a9f50bb328a5e9083d111911ac8910caf16b
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2570)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 73f7669bec514a38a20885482b47e0b3d8079491ed1b03d14f94956b3797fcfc
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 8f38c9bd4e17e89b7d9d1628eac13e332b81502b2a05a4e7126ad5a702e80bad
		Secure: true
	Object:
		Variable: varReplacer9898
		Type: java.lang.String
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer9897, $i1, varReplacer9898)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 39312d203c29ab5346008779317dbe98f6072bc1de3d9c12c1b532e430f76561
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: e87af06d8fb6c7e96dcb23128dca6a747933186aad4e69028d6372068e638d35
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.h.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 8b3145b340a6eb159a4d880bda44d3cff594af2332e72af75d6e28d17186dbf7
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2424)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: a902234209ba8afe307e331f4facc5d8609916e320448c8e9edc0bb73c0f706a
		Secure: true
	Object:
		Variable: r62
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer9897, $i1, varReplacer9898)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 63e92fe541d4284abc0c801a6ce10bf96e36c2331297171dafa32f0b11b191a
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.Key
		Statement: $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 7192eaa6ac83c3174ad0d20284f0a98299e475b2ee2215a978009d1ef37545cb
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: 2feca76bc0b1f633b0e7445d33ac9d4f4a9606eb32af76fd1505f1fb038c4fdc
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.SecureRandom
		Statement: $r18 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer9924)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 8d5dd864a47201a1a45e7d106e6eda508345db7345ffa457d6b7482e98e08a0e
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2581, $i0, varReplacer2582)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 5d98b4939afb36ec9659081405ea896fe784c2f98a9d949e9728d3619ce2d1e0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6226)
		Method: <com.facebook.ads.internal.h.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 4f2b9340a8c6b6c3768fecc0cb20ace57f2c8367bb045d83f9e61d093029d1c8
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.Key
		Statement: $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: c48f8e476b7b2837d2bf724f233951604a7661f55ab3a3713661f09d99e4bc9f
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: $r11 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2566)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 57c41dbe70852293df54164ad6ca9047c7e29b698ee0fc3ba08e74249d61ec8
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: a305d6e410284860ef5a0feaf85b69ddb063ba2e1d58f03639330c6977b4d3f9
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.Key
		Statement: $r9 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer9909, $r8)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 86ced8a1ca7b6c4e2a4d2862553db5ce42eb3ebbd4a852762b704d7471b0f8e3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 6b9b525b007c7fb5fa18f190271a394669ab7f53f62abdcf4d4a6da8910369fc
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.Key
		Statement: $r19 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, $r15)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 7192eaa6ac83c3174ad0d20284f0a98299e475b2ee2215a978009d1ef37545cb
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4651)
		Method: <com.localytics.android.DatapointHelper: java.lang.String getSha256_buggy(java.lang.String)>
		SHA-256: e17050f347b63c2580f613c11e623ee18455ce04714e24dd600ff8561431a3ea
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <com.localytics.android.AnalyticsHandler: void _updateHeaderForTestModeAttribution(java.lang.String,org.json.JSONObject,com.localytics.android.DatapointHelper$AdvertisingInfo,boolean)>
		SHA-256: c01b882ce9f8e5ef324c3b8d9131b55c7fa50a59a239ef9df76a0b4774ff7d4c
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: e87af06d8fb6c7e96dcb23128dca6a747933186aad4e69028d6372068e638d35
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: d46c95533590153b624a6e80bdf1220eedd0892cc8e665b5ffdc7b6ab899f0a9
		Secure: true
	Object:
		Variable: varReplacer2434
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2433, $i0, varReplacer2434)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 79e8bc9934a32c4363edc42c030d38c95a2c6a3fbc07c56898dfb33d3bbd69b0
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: ac7398f1264eb13e0b3c8ab4f9ac9a7bd15568cf473aef7fb9e22e1163b0cbc9
		Secure: true
	Object:
		Variable: r61
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 4c82dce21c60bd48931284d8f86f0209c37debc663aefe6acccbb48c3b685af0
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r11)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 1c0020d3fb70c2baa6e9d6e8f23073be9899449952a2944613639bc6b6104ae4
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 6b9b525b007c7fb5fa18f190271a394669ab7f53f62abdcf4d4a6da8910369fc
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r12)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: 3b1433a56fc2a601eab847c9e0a83d51ac703a70d2cc28f41e56abe456875171
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.nielsen.app.nuid.a: boolean a()>
		SHA-256: 223ae1f4b6474cfcf28fce1bbcb594159b124d1cfd6f0f99aa382524a8b2d388
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: f35dc12c56d152e6c31ac584b3069d4a668fd44bb0ebc9c820d266f938d614d1
		Secure: false
	Object:
		Variable: varReplacer2582
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2581, $i0, varReplacer2582)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: e71bebc1aab86b2315696eb7f3b1633377a099aeab22cde71f712f41fa229b73
		Secure: false
	Object:
		Variable: $r17
		Type: javax.crypto.KeyGenerator
		Statement: $r17 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9867)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 29d2968f4d6d36141192bd38909848ef98263291f3a4488dc5ecf04753fdaabe
		Secure: true
	Object:
		Variable: varReplacer9855
		Type: java.lang.String
		Statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer9855)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 6a8124c37ef9c7c666a803af30624b2848dec7a61d4475bdca9eaeadbded576f
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.Key
		Statement: $r9 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer9853, $r8)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 8185e736d1cbcb956b627f364346aa98af4758ee8bcd4b6d056cc536c59de716
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2087)
		Method: <com.nielsen.app.sdk.k: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: a2df00b34bcd30979260e19495f4364a2fd7ec44eab85b132c4e7ef0ba4bd8b0
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.util.s: java.lang.String a(java.lang.String)>
		SHA-256: 2125805d03a1e43489bdecc5db182c9da3fb7141e4e8c4afb45e18805c8edeaa
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mopub.common.util.Utils: java.lang.String sha1(java.lang.String)>
		SHA-256: b1475ecb277cf44c18e504f1be84657ccb3a6b602605d56eb56e04862a5c2552
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.KeyGenerator
		Statement: $r10 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2576)
		Method: <com.nielsen.app.sdk.c: boolean a()>
		SHA-256: c3bff0399cc4eccd562de95860e0dcaa0dbf9620a312747cd0094b6f8c84b9ac
		Secure: true
	Object:
		Variable: r61
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)
		Method: <com.nielsen.app.sdk.AppLaunchMeasurementManager: byte[] a(byte[],int)>
		SHA-256: 4c82dce21c60bd48931284d8f86f0209c37debc663aefe6acccbb48c3b685af0
		Secure: false

Findings in Java Class: com.nielsen.app.nuid.a

	 in Method: boolean a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2433, $i0, varReplacer2434)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r18, $r15)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2433, $i0, varReplacer2434)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r6.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r17, $r15)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #7324dfc8acaf022f6a28d64af170a9d1c5ddc3332e03dadf1ebd11b3a9e34337)
			Unexpected call to method getInstance on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)


Findings in Java Class: com.nielsen.app.nuid.AppNuid

	 in Method: void run()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d21345f44fc5701227a0bb7fe61fbd2ed140003945ebb92179c3ca87ce67892b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r6.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer11345, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d21345f44fc5701227a0bb7fe61fbd2ed140003945ebb92179c3ca87ce67892b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r6 = $r0.<com.nielsen.app.nuid.AppNuid: com.nielsen.app.nuid.b p>


	 in Method: void startQuery(boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d21345f44fc5701227a0bb7fe61fbd2ed140003945ebb92179c3ca87ce67892b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer11338, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d21345f44fc5701227a0bb7fe61fbd2ed140003945ebb92179c3ca87ce67892b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer11326, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d21345f44fc5701227a0bb7fe61fbd2ed140003945ebb92179c3ca87ce67892b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer11330, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d21345f44fc5701227a0bb7fe61fbd2ed140003945ebb92179c3ca87ce67892b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r5.<com.nielsen.app.nuid.b: boolean a(java.lang.String,java.lang.String)>(varReplacer11315, $r3)


Findings in Java Class: com.nielsen.app.sdk.c

	 in Method: boolean a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2581, $i0, varReplacer2582)

		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r12, varReplacer2581, $i0, varReplacer2582)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2570)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #745c88399e386cb4988bd7e8ee31fd18372b0c0c3cb0d12c9e68f4688c0fa5d6)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer2588, $r15)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #745c88399e386cb4988bd7e8ee31fd18372b0c0c3cb0d12c9e68f4688c0fa5d6)
			Unexpected call to method getInstance on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #745c88399e386cb4988bd7e8ee31fd18372b0c0c3cb0d12c9e68f4688c0fa5d6)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r6.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r17, $r15)


	 in Method: byte[] a(byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #b560e806c7286f8e7c3dc30ce06104d891d2a88267231b2763dd9ceeb8de2213)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] b(byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #b560e806c7286f8e7c3dc30ce06104d891d2a88267231b2763dd9ceeb8de2213)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


Findings in Java Class: com.nielsen.app.sdk.AppPreferencesManager$1

	 in Method: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b560e806c7286f8e7c3dc30ce06104d891d2a88267231b2763dd9ceeb8de2213)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r3.<com.nielsen.app.sdk.AppPreferencesManager: void a(java.lang.String)>($r2)


Findings in Java Class: com.nielsen.app.sdk.a

	 in Method: boolean a(android.content.Context,java.lang.String,com.nielsen.app.sdk.i,com.nielsen.app.sdk.IAppNotifier)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b560e806c7286f8e7c3dc30ce06104d891d2a88267231b2763dd9ceeb8de2213)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r19.<com.nielsen.app.sdk.e: void <init>(android.content.Context,com.nielsen.app.sdk.a)>($r1, $r0)


Findings in Java Class: com.nielsen.app.sdk.AppLaunchMeasurementManager

	 in Method: byte[] a(byte[],int)
		ImpreciseValueExtractionError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			Constraint length(keyMaterial) + 0 >= off - len could not be evaluted due to insufficient information.
			at statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer9897, $i1, varReplacer9898)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9969, $r15, $r12)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #df665f084f1e770e2fb4717185530b11b34b780a49e13fb3ca461d98a46808a5)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer9883, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r61.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer9969, $r15, $r12)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #df665f084f1e770e2fb4717185530b11b34b780a49e13fb3ca461d98a46808a5)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r3.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r20, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r62.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r13, varReplacer9897, $i1, varReplacer9898)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 64

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 9
	NeverTypeOfError: 3
	ImpreciseValueExtractionError: 3
	IncompleteOperationError: 8
	TypestateError: 7
=====================================================================