public final class com.securifi.almondplus.f.c extends java.lang.Object
{
    static final char[] a;
    java.lang.String b;
    javax.crypto.spec.SecretKeySpec c;

    static void <clinit>()
    {
        char[] $r0;

        nop;

        $r0 = newarray (char)[16];

        $r0[0] = 110;

        $r0[1] = 204;

        $r0[2] = 148;

        $r0[3] = 237;

        $r0[4] = 106;

        $r0[5] = 144;

        $r0[6] = 1;

        $r0[7] = 61;

        $r0[8] = 48;

        $r0[9] = 175;

        $r0[10] = 82;

        $r0[11] = 13;

        $r0[12] = 24;

        $r0[13] = 119;

        $r0[14] = 68;

        $r0[15] = 47;

        <com.securifi.almondplus.f.c: char[] a> = $r0;

        return;
    }

    public void <init>()
    {
        com.securifi.almondplus.f.c $r0;

        $r0 := @this: com.securifi.almondplus.f.c;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.securifi.almondplus.f.c: java.lang.String b> = "EncryptDecrypt";

        $r0.<com.securifi.almondplus.f.c: javax.crypto.spec.SecretKeySpec c> = null;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.securifi.almondplus.f.c $r0;
        java.lang.String $r1;
        java.security.SecureRandom $r2;
        byte[] $r3;
        javax.crypto.KeyGenerator $r4;
        javax.crypto.spec.SecretKeySpec $r5;
        javax.crypto.SecretKey $r6;
        java.lang.Exception $r7;

        $r0 := @this: com.securifi.almondplus.f.c;

        $r1 := @parameter0: java.lang.String;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.securifi.almondplus.f.c: java.lang.String b> = "EncryptDecrypt";

        $r0.<com.securifi.almondplus.f.c: javax.crypto.spec.SecretKeySpec c> = null;

     label1:
        $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>("SHA1PRNG", "Crypto");

        $r3 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r2.<java.security.SecureRandom: void setSeed(byte[])>($r3);

        $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>("AES");

        virtualinvoke $r4.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(128, $r2);

     label2:
        $r5 = new javax.crypto.spec.SecretKeySpec;

     label3:
        $r6 = virtualinvoke $r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>();

        $r3 = interfaceinvoke $r6.<javax.crypto.SecretKey: byte[] getEncoded()>();

        specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, "AES");

        $r0.<com.securifi.almondplus.f.c: javax.crypto.spec.SecretKeySpec c> = $r5;

     label4:
        return;

     label5:
        $r7 := @caughtexception;

        $r1 = $r0.<com.securifi.almondplus.f.c: java.lang.String b>;

        staticinvoke <com.securifi.almondplus.util.d: void d(java.lang.String,java.lang.String)>($r1, "AES secret key spec error");

        return;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static java.lang.String a(byte[], java.lang.String, java.lang.String)
    {
        byte[] $r0, $r5;
        java.lang.String $r1, $r2, varReplacer1775, varReplacer1776, varReplacer1777;
        javax.crypto.Cipher $r3;
        char[] $r4;
        int $i0, $i1, varReplacer1774, varReplacer1778;
        char $c2;
        byte $b3;
        javax.crypto.spec.SecretKeySpec $r6;
        javax.crypto.spec.IvParameterSpec $r7;

        nop;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        varReplacer1775 = "AES/CBC/NoPadding";

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1775);

        $r4 = <com.securifi.almondplus.f.c: char[] a>;

        $i0 = lengthof $r4;

        $r5 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $r4 = <com.securifi.almondplus.f.c: char[] a>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label2;

        $r4 = <com.securifi.almondplus.f.c: char[] a>;

        $c2 = $r4[$i0];

        $b3 = (byte) $c2;

        $r5[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r6 = new javax.crypto.spec.SecretKeySpec;

        varReplacer1776 = "AES";

        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1776);

        $r7 = new javax.crypto.spec.IvParameterSpec;

        $r5 = staticinvoke <com.securifi.almondplus.f.c: byte[] a(java.lang.String,java.lang.String)>($r1, $r2);

        specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        varReplacer1778 = 2;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1778, $r6, $r7);

        $r1 = new java.lang.String;

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        varReplacer1777 = "UTF-8";

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, varReplacer1777);

        $i0 = 0;

     label3:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label5;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        if $c2 != 0 goto label4;

        varReplacer1774 = 0;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(varReplacer1774, $i0);

        return $r1;

     label4:
        $i0 = $i0 + 1;

        goto label3;

     label5:
        return $r1;
    }

    private static byte[] a(java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1;
        char[] $r2, $r4;
        byte[] $r3;
        int $i0, $i1, $i2;
        char $c3, $c4;
        byte $b5;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $i0 = 0;

        $r2 = newarray (char)[50];

        $r3 = newarray (byte)[16];

        $r4 = newarray (char)[50];

        $i1 = 0;

     label1:
        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label2;

        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $r2[$i1] = $c3;

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

     label3:
        if $i1 >= 50 goto label4;

        $r2[$i1] = 0;

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $i1 = 0;

     label5:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label6;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $r4[$i1] = $c3;

        $i1 = $i1 + 1;

        goto label5;

     label6:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

     label7:
        if $i1 >= 50 goto label8;

        $r4[$i1] = 0;

        $i1 = $i1 + 1;

        goto label7;

     label8:
        if $i0 >= 16 goto label9;

        $c3 = $r2[$i0];

        $c4 = $r4[$i0];

        $i1 = $c3 + $c4;

        $i1 = $i1 % 94;

        $i1 = $i1 + 33;

        $b5 = (byte) $i1;

        $r3[$i0] = $b5;

        $i0 = $i0 + 1;

        goto label8;

     label9:
        return $r3;
    }

    public static java.lang.String b(byte[], java.lang.String, java.lang.String)
    {
        byte[] $r0, $r5;
        java.lang.String $r1, $r2;
        javax.crypto.Cipher $r3;
        char[] $r4;
        int $i0, $i1;
        char $c2;
        byte $b3;
        javax.crypto.spec.SecretKeySpec $r6;
        javax.crypto.spec.IvParameterSpec $r7;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES/CBC/NoPadding");

        $r4 = <com.securifi.almondplus.f.c: char[] a>;

        $i0 = lengthof $r4;

        $r5 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $r4 = <com.securifi.almondplus.f.c: char[] a>;

        $i1 = lengthof $r4;

        if $i0 >= $i1 goto label2;

        $r4 = <com.securifi.almondplus.f.c: char[] a>;

        $c2 = $r4[$i0];

        $b3 = (byte) $c2;

        $r5[$i0] = $b3;

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r6 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, "AES");

        $r7 = new javax.crypto.spec.IvParameterSpec;

        $r5 = staticinvoke <com.securifi.almondplus.f.c: byte[] a(java.lang.String,java.lang.String)>($r1, $r2);

        specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5);

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(1, $r6, $r7);

        $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0);

        $r1 = new java.lang.String;

        $r0 = staticinvoke <android.util.Base64: byte[] encode(byte[],int)>($r0, 0);

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "UTF-8");

        return $r1;
    }

    public final java.lang.String a(java.lang.String)
    {
        com.securifi.almondplus.f.c $r0;
        java.lang.String $r1, $r8;
        byte[] $r2, $r5;
        javax.crypto.Cipher $r3;
        javax.crypto.spec.SecretKeySpec $r4;
        java.lang.Exception $r6;
        java.lang.StringBuilder $r7;

        $r0 := @this: com.securifi.almondplus.f.c;

        $r1 := @parameter0: java.lang.String;

        $r2 = null;

     label1:
        $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        $r4 = $r0.<com.securifi.almondplus.f.c: javax.crypto.spec.SecretKeySpec c>;

        virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(2, $r4);

        $r5 = staticinvoke <android.util.Base64: byte[] decode(java.lang.String,int)>($r1, 0);

        $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label2:
        $r2 = $r5;

        if $r5 != null goto label4;

     label3:
        $r1 = $r0.<com.securifi.almondplus.f.c: java.lang.String b>;

        staticinvoke <com.securifi.almondplus.util.d: void d(java.lang.String,java.lang.String)>($r1, "Yes its null");

     label4:
        if $r2 != null goto label6;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>("");

        return $r1;

     label5:
        $r6 := @caughtexception;

        $r1 = $r0.<com.securifi.almondplus.f.c: java.lang.String b>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("AES decryption error");

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.securifi.almondplus.util.d: void d(java.lang.String,java.lang.String)>($r1, $r8);

        goto label4;

     label6:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;

        catch java.lang.Exception from label1 to label2 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    public final java.lang.String b(java.lang.String)
    {
        com.securifi.almondplus.f.c $r0;
        java.lang.String $r1;
        javax.crypto.spec.SecretKeySpec $r2;
        byte[] $r3, $r5;
        javax.crypto.Cipher $r4;
        java.lang.Exception $r6;

        $r0 := @this: com.securifi.almondplus.f.c;

        $r1 := @parameter0: java.lang.String;

        $r3 = null;

     label1:
        $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("AES");

        $r2 = $r0.<com.securifi.almondplus.f.c: javax.crypto.spec.SecretKeySpec c>;

        virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r2);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5);

     label2:
        $r3 = $r5;

     label3:
        $r1 = staticinvoke <android.util.Base64: java.lang.String encodeToString(byte[],int)>($r3, 0);

        return $r1;

     label4:
        $r6 := @caughtexception;

        $r1 = $r0.<com.securifi.almondplus.f.c: java.lang.String b>;

        staticinvoke <com.securifi.almondplus.util.d: void d(java.lang.String,java.lang.String)>($r1, "AES encryption error");

        goto label3;

        catch java.lang.Exception from label1 to label2 with label4;
    }
}
