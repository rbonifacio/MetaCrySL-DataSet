Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2006)
		Method: <com.billdesk.utils.i: java.lang.String b(java.lang.String)>
		SHA-256: 2ec728e3c0a23c91a47b10a6e09fcb0736e30fec65bec958d0cd44d1ac1e4bed
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.billdesk.utils.i: java.lang.String c()>
		SHA-256: 8915e8a7a9f45066ff433121a330c832374a1ad8c62e9b1e69b9bd88ae959fd0
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2012, varReplacer2013)
		Method: <com.billdesk.utils.i: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 7afb01590fbef4be1e2e1acc69d55d13e4073ece83c472142f0a182c9f2f4e56
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.billdesk.utils.i: java.lang.String b(java.lang.String)>
		SHA-256: 3ba4f9d8833a61622516b01b123659930e70c73ad41466558773627d91ebe68b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12003)
		Method: <com.google.ads.conversiontracking.g: java.lang.String e(android.content.Context)>
		SHA-256: 96aaca2d4c12804d407f0653b898eab9e26b83d1541cb540fe66207f4b4ad8d
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.billdesk.utils.i: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 48e8241ececcbc09bb24457f6f13063ede59203b8b541943bcb20fa8ebbd8c92
		Secure: false
	Object:
		Variable: varReplacer2006
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2006)
		Method: <com.billdesk.utils.i: java.lang.String b(java.lang.String)>
		SHA-256: 2712ad19a0f47703732a4d06df9f6a11b9d80cc5f441154af2e003bbd8aa0f11
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.ads.conversiontracking.g: java.lang.String e(android.content.Context)>
		SHA-256: a79e94387df141fe9dcb34d2ae3fc05c5097b22bbdc3a1b0291ebb4f6436ceb4
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.billdesk.utils.i: java.lang.String c()>
		SHA-256: 89c71c6af85eae707bb03315b27841c63530b0436efc49d08352ca58198461cf
		Secure: true
	Object:
		Variable: varReplacer2013
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2012, varReplacer2013)
		Method: <com.billdesk.utils.i: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: e45b9adc1e82da765ac44d3e5a92f43cf78dd40bca238cefc58ae06375a289d8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>($r2, varReplacer2011)
		Method: <com.billdesk.utils.i: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)>
		SHA-256: 5c56408cb21c1ae2b20b4a7c36d4107a2223f19a64af2a6b6b6da1ff3ee59250
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1997)
		Method: <com.billdesk.utils.i: java.lang.String c(java.lang.String)>
		SHA-256: 1fd91a00be76e162c698b90d977498c2128e1ee92738a4c2a4c012e46406efae
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1998, varReplacer1999)
		Method: <com.billdesk.utils.i: java.lang.String c(java.lang.String)>
		SHA-256: 5533861c5e3f3763c4750d52f881dac7e94724a6d13ced50b23c1eda57b8784c
		Secure: false
	Object:
		Variable: varReplacer1997
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1997)
		Method: <com.billdesk.utils.i: java.lang.String c(java.lang.String)>
		SHA-256: 7b6e01f8a45cdd5594a7a6ba639277163607ee8bd979ba825be0592227a5a547
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7127)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 4b0823b1a719b7890283d180769fe9522e74e0262ab62a9ae0ad5adc1c97050f
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.billdesk.utils.i: java.lang.String c()>
		SHA-256: e4309269a15074f14955cb99ad05460046b1dc571b640d17d7a74f6b50960cde
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 712110b6d50d4a42f86c9165e8b14514ae6cccf973f8d32cdf255cac7d8b2aad
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1987)
		Method: <com.billdesk.utils.i: java.lang.String c()>
		SHA-256: 95c23e1355635ee157fc96a0f7c271ceab5e373e19f318e41c91304563e6565b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.billdesk.utils.i: java.lang.String c(java.lang.String)>
		SHA-256: 85fe52a81d947e582324491a19b8b6704137eaf31bc85d69e61b2cd05e8a4bfc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2004, varReplacer2005)
		Method: <com.billdesk.utils.i: java.lang.String b(java.lang.String)>
		SHA-256: c3793bbfc0b4edd2a540b1dab8201e6c83e36c889af37bb79518ee9138aebc82
		Secure: false

Findings in Java Class: com.billdesk.utils.i

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5533861c5e3f3763c4750d52f881dac7e94724a6d13ced50b23c1eda57b8784c)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer1998, varReplacer1999)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1997)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2003, $r3)


	 in Method: java.lang.String b(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2007, $r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c3793bbfc0b4edd2a540b1dab8201e6c83e36c889af37bb79518ee9138aebc82)
			First parameter (with value "AES") should be any of AES/{OFB, GCM, CTS, CTR, CFB, ECB, CBC}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2004, varReplacer2005)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2006)


	 in Method: javax.crypto.SecretKey a(char[],byte[],java.lang.String,int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2012, varReplacer2013)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7afb01590fbef4be1e2e1acc69d55d13e4073ece83c472142f0a182c9f2f4e56)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7afb01590fbef4be1e2e1acc69d55d13e4073ece83c472142f0a182c9f2f4e56)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2012, varReplacer2013)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7afb01590fbef4be1e2e1acc69d55d13e4073ece83c472142f0a182c9f2f4e56)
			Third parameter (with value 2000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r1, varReplacer2012, varReplacer2013)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 20

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	NeverTypeOfError: 1
	IncompleteOperationError: 1
	ConstraintError: 3
=====================================================================