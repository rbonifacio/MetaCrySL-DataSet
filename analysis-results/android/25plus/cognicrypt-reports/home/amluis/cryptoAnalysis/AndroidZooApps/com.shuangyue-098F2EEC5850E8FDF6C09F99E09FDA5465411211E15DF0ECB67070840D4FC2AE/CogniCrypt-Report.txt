Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: baf36ba0be0be9712f0773d5e6bd6ea1289e24d9f49bc21a49b2c6b599778b28
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1969)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: afc0ab09ca03afc394ab9cd818004483301095cc8cbd60ab16c31cd44a771da5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14732)
		Method: <com.iflytek.cloud.a.i.k: java.lang.String b(java.lang.String)>
		SHA-256: e2946575ed5b58f5ca46ec6dafe415478763b3e1fc4a8b3b3b25e4e0e9cf266a
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9566)
		Method: <com.iflytek.sunflower.c.c: java.lang.String a(java.lang.String)>
		SHA-256: c09645643c7c04e832d26afe778590da44b838c35068fc1ebc237ccca80d0e21
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: 9d5518b928395bd05bce5b6b363adfca98533751c6f8b6369158fc7086bf8946
		Secure: true
	Object:
		Variable: varReplacer15585
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer15585)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 74799e7f2d58ab05543ed9386125e13f65f8efbda389407b2e4509edac6e7f9a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore2d.df: byte[] e(java.lang.String)>
		SHA-256: 82ccb6f87a6fa0897797ba40aa5f6af77ac165443e2b91d24dc90df6348d217f
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 8f959de29dd11411b269c986bbaf8c6255646eb9a772a5c5a0ee108386cc476f
		Secure: true
	Object:
		Variable: varReplacer1973
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1973)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: fd0c69064ed5f134fd9c5b8da058cf381ab4369b2cfcd6a87f04d7a4ce1e56f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13888)
		Method: <com.pgyersdk.conf.a: void g(android.content.Context)>
		SHA-256: 36f6569a7e9366e15fb90c1498ea7b13be595eb06b2ddf9fdb0bcd7e349984d5
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer15585)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: 97e267b97fb018822067b70123ccb5c74f6d80237e0c86d7ce4325cd8d030d0f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1972)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 44e33007ea4bfccdeffb6bd7ed4bf3265a474b5b4c4787309631f286573f6a35
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9274)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 4503d4d56c76405ee699598360c4c19c5d9021aede9662f7c5ef716d9067bc1d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: 589f10f65a2d04fe4b0bb06abf8101daf047c6762569191c753224ee717411cc
		Secure: true
	Object:
		Variable: varReplacer9275
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9275)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 74bcaeaad70546d6376096bfd715095df3d14ad261204ca7196e2daa9d7dc5bb
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: c0ff5c7b3a0bb15c203075d8186ded0937736db447ed4b0f9fef6c06ec241485
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4757)
		Method: <okhttp3.ah: void <init>(okhttp3.ai)>
		SHA-256: bd3fc2f3cd0f997f06f848c1e1f4db757314812945a54ead7ced663fe2bbc9ab
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: 49c5be17f6636d1cddfea76e5c36d1ba1f88788c784d140190c2a1684f41fbeb
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9045)
		Method: <com.amap.api.mapcore2d.da: java.lang.String d(android.content.Context)>
		SHA-256: e5133fc4a7225b12bc760515ff02633fe123948fec21e09ec0551167be090635
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.pgyersdk.conf.a: void g(android.content.Context)>
		SHA-256: 1a0c3c23a5d3842fdc4a6129337c825534dd47cb3a9bfb4079f1e5fe30b0a00d
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer15584)
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: java.lang.String calculateSignature(java.lang.String)>
		SHA-256: fb4e8210d508661245de5d9e497e4cc2eba28866c5cdd6e7bbf395cab39d3cea
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.util.ai: java.lang.String b(java.lang.String)>
		SHA-256: e3190b6f4323befbf18670a0eb10cd2790133ea7e985cb6f92d999f647f560e9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10755)
		Method: <com.tencent.mm.a.b: java.lang.String a(byte[])>
		SHA-256: 291e147abe8e846c5c7b604c26fdf06b21dc6caa7c03150830e18853be6b1a4d
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.dianyue.shuangyue.googleplay.util.k: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 7881da5df3a1926d35307ca3d59bba8d3320568b6e7647592955d6c72c4e4e4d
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: bfdf7a7690f99313d7d90ffe799c08accc3face2ec5e8c2f9d6c2ccbb3a7f821
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2737)
		Method: <u.aly.cm: java.lang.String r(android.content.Context)>
		SHA-256: e8cbd66d86223586cf0a24922ca6fb374f613dd0fbde30d1a9055b99a395a778
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cn: java.lang.String a(java.lang.String)>
		SHA-256: a99da5275203c1ac4c0963ef6103e48d5c693ec8820291a487cdbb4c564fc729
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cj: byte[] b(byte[])>
		SHA-256: 4c900ece8f5922e7875f343933ffca231d7462c481943b7e8f1b1528b82a0945
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2061)
		Method: <u.aly.cn: java.lang.String a(java.lang.String)>
		SHA-256: 2b503eb2ba9e1bd9e055ef827186ed7a64b0acba7f77a664b8746823f1399646
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15953)
		Method: <u.aly.al: void <init>(java.security.KeyStore)>
		SHA-256: 41f6e6e334df67bcfa6ad8aecba4cc883f9099f30e4c32ed7849613561fad4cb
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.iflytek.sunflower.c.c: java.lang.String a(java.lang.String)>
		SHA-256: a980ab1cf206f1b2d55efecf6da410427f487cf11829045ba51026744a966f67
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1565)
		Method: <com.dianyue.shuangyue.net.b: java.lang.String c(java.lang.String)>
		SHA-256: 17f053315392eeb4c6e534f84255dda88d1e368ffe94fd3d98cf28d4259532a3
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.amap.api.mapcore2d.da: java.lang.String d(android.content.Context)>
		SHA-256: ce582d3359589e0fcc5e3efea69cc0ee28ef21a78ea71e381a925189678ced84
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: f5d4bf9ca7f7fb9000cf6a89dae134f0d93e52312b490bf6d8a3635e0c274af1
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dianyue.shuangyue.net.b: java.lang.String c(java.lang.String)>
		SHA-256: aaa2a9b912a557a05736631d9925e233d1c938a0d56293557677e121c0d6a658
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.dianyue.shuangyue.utils.universalimageloader.a.a.b.c: byte[] a(byte[])>
		SHA-256: 2c9b15e05768c3bb41a85d6b678b8517c98e5491cef1f7980fad6a50e7446d8b
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer15375)
		Method: <com.dianyue.shuangyue.googleplay.util.k: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: a747c7e7661b9fa16e73659ccb676df58f55d1792ca6329f6f5004d510fbfe6f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <cn.jpush.android.util.g: byte[] a(java.io.File)>
		SHA-256: c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <u.aly.cm: java.lang.String r(android.content.Context)>
		SHA-256: 7ddb8756d7edb79f60a99a3ecdb48c28c6b7fa89e8e56c7dffd9b3cfc4a4f96
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1973)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 579f3b00a529be84f516a399cc8aa75a02f1422f9b29aabf5d0593b2f6530c1e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer9275)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: c6bda463eb795631c6a6d4f2e60d4dcdf64bb08b6bedf1151834167ff494818d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2224)
		Method: <u.aly.cj: java.lang.String c(java.lang.String)>
		SHA-256: 8bde6dc43640a1223db356f33f0bee71864c59f1b67bd121847ae17e65699c0d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cn: java.lang.String b(java.lang.String)>
		SHA-256: f8d897717eab916f1850eea1d60e41b8fe1d195bf16d452b12f87adea8392a4f
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1613)
		Method: <com.dianyue.shuangyue.net.http.p: void <init>(java.security.KeyStore)>
		SHA-256: 263766a5293250f6f70f2d0f77f15cdee16fe0512116cad0546c92a61a0b2499
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <u.aly.ag: void a()>
		SHA-256: 5cc4e9b101385fa66f6ff1d11413d5762bd39a30728f5c1ea31647b0f7bd3352
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16297)
		Method: <com.dianyue.shuangyue.utils.universalimageloader.a.a.b.c: byte[] a(byte[])>
		SHA-256: b2f1575a6732e48dac4e380ad6c7755138c7bba116c42e808ae68c4032025eb7
		Secure: true
	Object:
		Variable: varReplacer1971
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1971)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 8177d90c052cebc3c95b96cc5ab94b26ba32f1441334014685b00ad4d8bc4997
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.jpush.android.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 67f8276464ff2b603934593edfd3991f3b602712d92e93712f83733b7783915
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 8efbf86f5ea16d28f9b105ce3b7240b42e587f75eb726331522c698e11e36cc4
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9230)
		Method: <com.amap.api.mapcore2d.de: byte[] a(byte[],java.security.Key)>
		SHA-256: f859220b4a96169d5f41bd7d5e341344eedc41282bdd935622de62869394b01d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: edf8d4512ea4d685450853f37af1c60bdb4661ea96e0a8476dfe9d41f4bd92a
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore2d.de: byte[] a(byte[],java.security.Key)>
		SHA-256: c727289a66f61570b588ce85ca15414d2e5030eac97434fa4e1adfb6843260e8
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jpush.android.util.a: java.lang.String b(java.lang.String)>
		SHA-256: 8e4d3ce3f6a3961627a164a718666216cbb71ad4d5d8d2a6bc5f52f33a56ba40
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: f44b1d8a1562491f3628393050d3051eaaddafc0a1521f6a48f82755c4d836aa
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jpush.android.util.a: java.lang.String a(byte[])>
		SHA-256: c4d4007881f660d31095047c858a7cddf0ade719a9b3b9bb76358ae5434d949b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 4e767d3d3eba2d7ee31e03fc2e2634e29a28892a4e9da789c1bf1489d6de298c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.dianyue.shuangyue.net.http.p: java.security.KeyStore a()>
		SHA-256: 2b07ca059440c5511bd37927988fcf6efa990e1795b8235032779d20bc37799b
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <u.aly.cj: java.lang.String c(java.lang.String)>
		SHA-256: e9e746e06a263ae3298f9afd9aae2329ecf87ed3edcdb531eef74b80daf701a5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9266)
		Method: <com.amap.api.mapcore2d.df: byte[] e(java.lang.String)>
		SHA-256: 37c329bc41647ae044bd19854a75cbbbe2a8c3c4e954abed5de5f240badba575
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <u.aly.cj: byte[] b(byte[],byte[])>
		SHA-256: 918bebe403e50fa57eec244da90c3e43f8e3d5906186b0e4ed6a963aa2f69db3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9133)
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 2bf2c51721840bf4b751507d4e1e3accb0b71b95da3772434ac955dd0ee29192
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2532)
		Method: <u.aly.cj: byte[] b(byte[])>
		SHA-256: e8a99ec86a98e9cfaa5fe3ddba452fa59f503886a3041518ac40ecde0ed40536
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.mapcore2d.dc: java.lang.String c(android.content.Context,byte[])>
		SHA-256: 771d48022bf3b5cd1975d8160cfa1b1cfd84b522b7cfbf5fa22ae7e3e0ec094a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1971)
		Method: <u.aly.cj: byte[] a(byte[],byte[])>
		SHA-256: 70f0b6b5cbc067d068b33f7fc8bb654ae24e89e722a3dd8d30285fb627772d47
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore2d.de: byte[] b(byte[],byte[])>
		SHA-256: 667210ec6c57b08d5df500b485f4ccb0e5cdaf1471b1388f525ac35aeea49d65
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.iflytek.cloud.a.i.k: java.lang.String b(java.lang.String)>
		SHA-256: 3db1e8c7300ea6b8ceccc7f0e48d9d6ddaff89f31cf48002dd34791f4e992cb7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2530)
		Method: <u.aly.cn: java.lang.String b(java.lang.String)>
		SHA-256: 91c04f23352ef139d411df6baf27aaee050f6b8e2de25b6850c79a338021e2e9
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters: void <clinit>()>
		SHA-256: 81571f0f65b71822bd958d9fd94e85c4e0b32e123ab4c4b6ad790e4712eb88cf
		Secure: true

Findings in Java Class: u.aly.cj

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8bde6dc43640a1223db356f33f0bee71864c59f1b67bd121847ae17e65699c0d)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2224)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1974, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1973)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1970, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1971)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1970, $r2, $r4)


Findings in Java Class: cn.jpush.android.util.g

	 in Method: byte[] a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c674f616d8a4149c10b3f91dfa9584390dcb6804f11b69608665967bac43ce50)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.amap.api.mapcore2d.da

	 in Method: java.lang.String d(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e5133fc4a7225b12bc760515ff02633fe123948fec21e09ec0551167be090635)
			First parameter (with value "SHA1") should be any of {SHA-224, SHA-256, SHA-1, SHA-384, SHA-512, MD5}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9045)


Findings in Java Class: com.amap.api.mapcore2d.dc

	 in Method: java.lang.String c(android.content.Context,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #2bf2c51721840bf4b751507d4e1e3accb0b71b95da3772434ac955dd0ee29192)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer9133)


Findings in Java Class: com.dianyue.shuangyue.net.http.p

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1611, r5, varReplacer1611)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1611, r5, varReplacer1611)


Findings in Java Class: com.amap.api.mapcore2d.de

	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9229, $r1)


Findings in Java Class: com.twitter.sdk.android.core.internal.oauth.OAuth1aParameters

	 in Method: java.lang.String calculateSignature(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer15585)


Findings in Java Class: okhttp3.ah

	 in Method: void <init>(okhttp3.ai)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4753, varReplacer4753, varReplacer4753)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4753, varReplacer4753, varReplacer4753)


Findings in Java Class: u.aly.al

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15951, r7, varReplacer15951)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15951, r7, varReplacer15951)


Findings in Java Class: com.dianyue.shuangyue.googleplay.util.k

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 68

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	RequiredPredicateError: 16
	TypestateError: 1
	ConstraintError: 2
=====================================================================