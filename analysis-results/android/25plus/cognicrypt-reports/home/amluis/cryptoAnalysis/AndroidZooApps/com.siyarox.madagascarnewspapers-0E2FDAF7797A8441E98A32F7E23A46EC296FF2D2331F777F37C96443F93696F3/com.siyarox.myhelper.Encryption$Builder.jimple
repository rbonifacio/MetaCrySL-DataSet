public class com.siyarox.myhelper.Encryption$Builder extends java.lang.Object
{
    private java.lang.String mAlgorithm;
    private int mBase64Mode;
    private java.lang.String mCharsetName;
    private java.lang.String mDigestAlgorithm;
    private int mIterationCount;
    private byte[] mIv;
    private javax.crypto.spec.IvParameterSpec mIvParameterSpec;
    private java.lang.String mKey;
    private java.lang.String mKeyAlgorithm;
    private int mKeyLength;
    private java.lang.String mSalt;
    private java.lang.String mSecretKeyType;
    private java.security.SecureRandom mSecureRandom;
    private java.lang.String mSecureRandomAlgorithm;

    public void <init>()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String access$000(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String getKey()>();

        return $r1;
    }

    static java.lang.String access$100(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String getCharsetName()>();

        return $r1;
    }

    static java.lang.String access$1000(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String getKeyAlgorithm()>();

        return $r1;
    }

    static java.lang.String access$1100(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String getDigestAlgorithm()>();

        return $r1;
    }

    static java.lang.String access$200(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String getAlgorithm()>();

        return $r1;
    }

    static javax.crypto.spec.IvParameterSpec access$300(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        javax.crypto.spec.IvParameterSpec $r1;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: javax.crypto.spec.IvParameterSpec getIvParameterSpec()>();

        return $r1;
    }

    static java.security.SecureRandom access$400(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.security.SecureRandom $r1;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: java.security.SecureRandom getSecureRandom()>();

        return $r1;
    }

    static int access$500(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        int $i0;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $i0 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: int getBase64Mode()>();

        return $i0;
    }

    static java.lang.String access$600(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String getSecretKeyType()>();

        return $r1;
    }

    static java.lang.String access$700(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String getSalt()>();

        return $r1;
    }

    static int access$800(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        int $i0;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $i0 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: int getIterationCount()>();

        return $i0;
    }

    static int access$900(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        int $i0;

        nop;

        $r0 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $i0 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: int getKeyLength()>();

        return $i0;
    }

    private java.lang.String getAlgorithm()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mAlgorithm>;

        return r1;
    }

    private int getBase64Mode()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        int i0;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        i0 = $r0.<com.siyarox.myhelper.Encryption$Builder: int mBase64Mode>;

        return i0;
    }

    private java.lang.String getCharsetName()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mCharsetName>;

        return r1;
    }

    public static com.siyarox.myhelper.Encryption$Builder getDefaultBuilder(java.lang.String, java.lang.String, byte[])
    {
        java.lang.String $r0, $r1, varReplacer1555, varReplacer1556, varReplacer1557, varReplacer1559, varReplacer1561, varReplacer1563, varReplacer1564;
        byte[] $r2;
        com.siyarox.myhelper.Encryption$Builder $r3;
        int varReplacer1558, varReplacer1560, varReplacer1562;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: byte[];

        $r3 = new com.siyarox.myhelper.Encryption$Builder;

        specialinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: void <init>()>();

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setIv(byte[])>($r2);

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setKey(java.lang.String)>($r0);

        varReplacer1555 = "bk17Ij3M7FSFRSAG8MKwpYyjVKlfZiQK";

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setSalt(java.lang.String)>(varReplacer1555);

        varReplacer1562 = 128;

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setKeyLength(int)>(varReplacer1562);

        varReplacer1563 = "AES";

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setKeyAlgorithm(java.lang.String)>(varReplacer1563);

        varReplacer1564 = "UTF8";

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setCharsetName(java.lang.String)>(varReplacer1564);

        varReplacer1558 = 1;

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setIterationCount(int)>(varReplacer1558);

        varReplacer1559 = "SHA1";

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setDigestAlgorithm(java.lang.String)>(varReplacer1559);

        varReplacer1560 = 0;

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setBase64Mode(int)>(varReplacer1560);

        varReplacer1561 = "AES/CBC/PKCS5Padding";

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setAlgorithm(java.lang.String)>(varReplacer1561);

        varReplacer1556 = "SHA1PRNG";

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setSecureRandomAlgorithm(java.lang.String)>(varReplacer1556);

        varReplacer1557 = "PBKDF2WithHmacSHA1";

        $r3 = virtualinvoke $r3.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setSecretKeyType(java.lang.String)>(varReplacer1557);

        return $r3;
    }

    private java.lang.String getDigestAlgorithm()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mDigestAlgorithm>;

        return r1;
    }

    private int getIterationCount()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        int i0;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        i0 = $r0.<com.siyarox.myhelper.Encryption$Builder: int mIterationCount>;

        return i0;
    }

    private byte[] getIv()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        byte[] r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: byte[] mIv>;

        return r1;
    }

    private javax.crypto.spec.IvParameterSpec getIvParameterSpec()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        javax.crypto.spec.IvParameterSpec r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: javax.crypto.spec.IvParameterSpec mIvParameterSpec>;

        return r1;
    }

    private java.lang.String getKey()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mKey>;

        return r1;
    }

    private java.lang.String getKeyAlgorithm()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mKeyAlgorithm>;

        return r1;
    }

    private int getKeyLength()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        int i0;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        i0 = $r0.<com.siyarox.myhelper.Encryption$Builder: int mKeyLength>;

        return i0;
    }

    private java.lang.String getSalt()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mSalt>;

        return r1;
    }

    private java.lang.String getSecretKeyType()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mSecretKeyType>;

        return r1;
    }

    private java.security.SecureRandom getSecureRandom()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.security.SecureRandom r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: java.security.SecureRandom mSecureRandom>;

        return r1;
    }

    private java.lang.String getSecureRandomAlgorithm()
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        r1 = $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mSecureRandomAlgorithm>;

        return r1;
    }

    public com.siyarox.myhelper.Encryption build() throws java.security.NoSuchAlgorithmException
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1;
        java.security.SecureRandom $r2;
        javax.crypto.spec.IvParameterSpec $r3;
        byte[] $r4;
        com.siyarox.myhelper.Encryption $r5;
        null_type varReplacer1565;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String getSecureRandomAlgorithm()>();

        $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r1);

        virtualinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setSecureRandom(java.security.SecureRandom)>($r2);

        $r3 = new javax.crypto.spec.IvParameterSpec;

        $r4 = specialinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: byte[] getIv()>();

        specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4);

        virtualinvoke $r0.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder setIvParameterSpec(javax.crypto.spec.IvParameterSpec)>($r3);

        $r5 = new com.siyarox.myhelper.Encryption;

        varReplacer1565 = null;

        specialinvoke $r5.<com.siyarox.myhelper.Encryption: void <init>(com.siyarox.myhelper.Encryption$Builder,com.siyarox.myhelper.Encryption$1)>($r0, varReplacer1565);

        return $r5;
    }

    public com.siyarox.myhelper.Encryption$Builder setAlgorithm(java.lang.String)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1, varReplacer1573;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: java.lang.String;

        varReplacer1573 = "AES/CBC/PKCS5Padding";

        $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mAlgorithm> = varReplacer1573;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setBase64Mode(int)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        int $i0, varReplacer1572;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $i0 := @parameter0: int;

        varReplacer1572 = 0;

        $r0.<com.siyarox.myhelper.Encryption$Builder: int mBase64Mode> = varReplacer1572;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setCharsetName(java.lang.String)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1, varReplacer1569;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: java.lang.String;

        varReplacer1569 = "UTF8";

        $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mCharsetName> = varReplacer1569;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setDigestAlgorithm(java.lang.String)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1, varReplacer1571;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: java.lang.String;

        varReplacer1571 = "SHA1";

        $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mDigestAlgorithm> = varReplacer1571;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setIterationCount(int)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        int $i0, varReplacer1570;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $i0 := @parameter0: int;

        varReplacer1570 = 1;

        $r0.<com.siyarox.myhelper.Encryption$Builder: int mIterationCount> = varReplacer1570;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setIv(byte[])
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        byte[] $r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: byte[];

        $r0.<com.siyarox.myhelper.Encryption$Builder: byte[] mIv> = $r1;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setIvParameterSpec(javax.crypto.spec.IvParameterSpec)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        javax.crypto.spec.IvParameterSpec $r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: javax.crypto.spec.IvParameterSpec;

        $r0.<com.siyarox.myhelper.Encryption$Builder: javax.crypto.spec.IvParameterSpec mIvParameterSpec> = $r1;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setKey(java.lang.String)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: java.lang.String;

        $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mKey> = $r1;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setKeyAlgorithm(java.lang.String)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1, varReplacer1568;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: java.lang.String;

        varReplacer1568 = "AES";

        $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mKeyAlgorithm> = varReplacer1568;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setKeyLength(int)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        int $i0, varReplacer1567;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $i0 := @parameter0: int;

        varReplacer1567 = 128;

        $r0.<com.siyarox.myhelper.Encryption$Builder: int mKeyLength> = varReplacer1567;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setSalt(java.lang.String)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1, varReplacer1566;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: java.lang.String;

        varReplacer1566 = "bk17Ij3M7FSFRSAG8MKwpYyjVKlfZiQK";

        $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mSalt> = varReplacer1566;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setSecretKeyType(java.lang.String)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1, varReplacer1575;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: java.lang.String;

        varReplacer1575 = "PBKDF2WithHmacSHA1";

        $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mSecretKeyType> = varReplacer1575;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setSecureRandom(java.security.SecureRandom)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.security.SecureRandom $r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: java.security.SecureRandom;

        $r0.<com.siyarox.myhelper.Encryption$Builder: java.security.SecureRandom mSecureRandom> = $r1;

        return $r0;
    }

    public com.siyarox.myhelper.Encryption$Builder setSecureRandomAlgorithm(java.lang.String)
    {
        com.siyarox.myhelper.Encryption$Builder $r0;
        java.lang.String $r1, varReplacer1574;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption$Builder;

        $r1 := @parameter0: java.lang.String;

        varReplacer1574 = "SHA1PRNG";

        $r0.<com.siyarox.myhelper.Encryption$Builder: java.lang.String mSecureRandomAlgorithm> = varReplacer1574;

        return $r0;
    }
}
