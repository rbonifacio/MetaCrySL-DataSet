public class com.siyarox.myhelper.Encryption extends java.lang.Object
{
    private final com.siyarox.myhelper.Encryption$Builder mBuilder;

    private void <init>(com.siyarox.myhelper.Encryption$Builder)
    {
        com.siyarox.myhelper.Encryption $r0;
        com.siyarox.myhelper.Encryption$Builder $r1;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder> = $r1;

        return;
    }

    void <init>(com.siyarox.myhelper.Encryption$Builder, com.siyarox.myhelper.Encryption$1)
    {
        com.siyarox.myhelper.Encryption $r0;
        com.siyarox.myhelper.Encryption$Builder $r1;
        com.siyarox.myhelper.Encryption$1 $r2;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: com.siyarox.myhelper.Encryption$Builder;

        $r2 := @parameter1: com.siyarox.myhelper.Encryption$1;

        specialinvoke $r0.<com.siyarox.myhelper.Encryption: void <init>(com.siyarox.myhelper.Encryption$Builder)>($r1);

        return;
    }

    public static com.siyarox.myhelper.Encryption getDefault(java.lang.String, java.lang.String, byte[])
    {
        java.lang.String $r0, $r1, varReplacer1553;
        byte[] $r2;
        java.lang.Throwable $r3;
        com.siyarox.myhelper.Encryption$Builder $r4;
        com.siyarox.myhelper.Encryption $r5;
        java.security.NoSuchAlgorithmException r6;
        null_type varReplacer1554;

        nop;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: byte[];

     label1:
        varReplacer1553 = "bk17Ij3M7FSFRSAG8MKwpYyjVKlfZiQK";

        $r4 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption$Builder getDefaultBuilder(java.lang.String,java.lang.String,byte[])>($r0, varReplacer1553, $r2);

        $r5 = virtualinvoke $r4.<com.siyarox.myhelper.Encryption$Builder: com.siyarox.myhelper.Encryption build()>();

     label2:
        return $r5;

     label3:
        $r3 := @caughtexception;

        r6 = (java.security.NoSuchAlgorithmException) $r3;

        virtualinvoke r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        varReplacer1554 = null;

        return varReplacer1554;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private javax.crypto.SecretKey getSecretKey(char[]) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException, java.security.spec.InvalidKeySpecException
    {
        com.siyarox.myhelper.Encryption $r0;
        char[] $r1;
        javax.crypto.spec.PBEKeySpec $r2;
        com.siyarox.myhelper.Encryption$Builder $r3;
        java.lang.String $r4, $r6;
        javax.crypto.SecretKeyFactory $r5;
        byte[] $r7;
        int $i0, $i1;
        javax.crypto.SecretKey $r8;
        javax.crypto.spec.SecretKeySpec $r9;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: char[];

        $r3 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r4 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$600(com.siyarox.myhelper.Encryption$Builder)>($r3);

        $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r4);

        $r2 = new javax.crypto.spec.PBEKeySpec;

        $r3 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r4 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$700(com.siyarox.myhelper.Encryption$Builder)>($r3);

        $r3 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r6 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$100(com.siyarox.myhelper.Encryption$Builder)>($r3);

        $r7 = virtualinvoke $r4.<java.lang.String: byte[] getBytes(java.lang.String)>($r6);

        $r3 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $i0 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: int access$800(com.siyarox.myhelper.Encryption$Builder)>($r3);

        $r3 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $i1 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: int access$900(com.siyarox.myhelper.Encryption$Builder)>($r3);

        specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r7, $i0, $i1);

        $r8 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2);

        $r9 = new javax.crypto.spec.SecretKeySpec;

        $r7 = interfaceinvoke $r8.<javax.crypto.SecretKey: byte[] getEncoded()>();

        $r3 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r4 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$1000(com.siyarox.myhelper.Encryption$Builder)>($r3);

        specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r4);

        return $r9;
    }

    private char[] hashTheKey(java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException
    {
        com.siyarox.myhelper.Encryption $r0;
        java.lang.String $r1, $r3;
        com.siyarox.myhelper.Encryption$Builder $r2;
        java.security.MessageDigest $r4;
        byte[] $r5;
        char[] $r6;
        int varReplacer4223;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: java.lang.String;

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r3 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$1100(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r3 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$100(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r5 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

        virtualinvoke $r4.<java.security.MessageDigest: void update(byte[])>($r5);

        $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>();

        varReplacer4223 = 1;

        $r1 = staticinvoke <com.siyarox.myhelper.Base64: java.lang.String encodeToString(byte[],int)>($r5, varReplacer4223);

        $r6 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        return $r6;
    }

    public java.lang.String decrypt(java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException, javax.crypto.NoSuchPaddingException, java.security.InvalidAlgorithmParameterException, java.security.InvalidKeyException, javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException
    {
        com.siyarox.myhelper.Encryption $r0;
        java.lang.String $r1;
        com.siyarox.myhelper.Encryption$Builder $r2;
        int $i0, varReplacer4193;
        byte[] $r3;
        char[] $r4;
        javax.crypto.SecretKey $r5;
        javax.crypto.Cipher $r6;
        javax.crypto.spec.IvParameterSpec $r7;
        java.security.SecureRandom $r8;
        null_type varReplacer4194;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        varReplacer4194 = null;

        return varReplacer4194;

     label1:
        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $i0 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: int access$500(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r3 = staticinvoke <com.siyarox.myhelper.Base64: byte[] decode(java.lang.String,int)>($r1, $i0);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r1 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$000(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r4 = specialinvoke $r0.<com.siyarox.myhelper.Encryption: char[] hashTheKey(java.lang.String)>($r1);

        $r5 = specialinvoke $r0.<com.siyarox.myhelper.Encryption: javax.crypto.SecretKey getSecretKey(char[])>($r4);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r1 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$200(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r7 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: javax.crypto.spec.IvParameterSpec access$300(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r8 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.security.SecureRandom access$400(com.siyarox.myhelper.Encryption$Builder)>($r2);

        varReplacer4193 = 2;

        virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer4193, $r5, $r7, $r8);

        $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3);

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r3);

        return $r1;
    }

    public void decryptAsync(java.lang.String, com.siyarox.myhelper.Encryption$Callback)
    {
        com.siyarox.myhelper.Encryption $r0;
        java.lang.String $r1;
        com.siyarox.myhelper.Encryption$Callback $r2;
        java.lang.Thread $r3;
        com.siyarox.myhelper.Encryption$2 $r4;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.siyarox.myhelper.Encryption$Callback;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = new java.lang.Thread;

        $r4 = new com.siyarox.myhelper.Encryption$2;

        specialinvoke $r4.<com.siyarox.myhelper.Encryption$2: void <init>(com.siyarox.myhelper.Encryption,java.lang.String,com.siyarox.myhelper.Encryption$Callback)>($r0, $r1, $r2);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;
    }

    public java.lang.String decryptOrNull(java.lang.String)
    {
        com.siyarox.myhelper.Encryption $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;
        null_type varReplacer4192;

        nop;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke $r0.<com.siyarox.myhelper.Encryption: java.lang.String decrypt(java.lang.String)>($r1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        varReplacer4192 = null;

        return varReplacer4192;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String encrypt(java.lang.String) throws java.io.UnsupportedEncodingException, java.security.NoSuchAlgorithmException, javax.crypto.NoSuchPaddingException, java.security.InvalidAlgorithmParameterException, java.security.InvalidKeyException, java.security.spec.InvalidKeySpecException, javax.crypto.BadPaddingException, javax.crypto.IllegalBlockSizeException
    {
        com.siyarox.myhelper.Encryption $r0;
        java.lang.String $r1, $r3;
        com.siyarox.myhelper.Encryption$Builder $r2;
        char[] $r4;
        javax.crypto.SecretKey $r5;
        byte[] $r6;
        javax.crypto.Cipher $r7;
        javax.crypto.spec.IvParameterSpec $r8;
        java.security.SecureRandom $r9;
        int $i0;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: java.lang.String;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r3 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$000(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r4 = specialinvoke $r0.<com.siyarox.myhelper.Encryption: char[] hashTheKey(java.lang.String)>($r3);

        $r5 = specialinvoke $r0.<com.siyarox.myhelper.Encryption: javax.crypto.SecretKey getSecretKey(char[])>($r4);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r3 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$100(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r6 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r1 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.lang.String access$200(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r8 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: javax.crypto.spec.IvParameterSpec access$300(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $r9 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: java.security.SecureRandom access$400(com.siyarox.myhelper.Encryption$Builder)>($r2);

        virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(1, $r5, $r8, $r9);

        $r6 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6);

        $r2 = $r0.<com.siyarox.myhelper.Encryption: com.siyarox.myhelper.Encryption$Builder mBuilder>;

        $i0 = staticinvoke <com.siyarox.myhelper.Encryption$Builder: int access$500(com.siyarox.myhelper.Encryption$Builder)>($r2);

        $r1 = staticinvoke <com.siyarox.myhelper.Base64: java.lang.String encodeToString(byte[],int)>($r6, $i0);

        return $r1;
    }

    public void encryptAsync(java.lang.String, com.siyarox.myhelper.Encryption$Callback)
    {
        com.siyarox.myhelper.Encryption $r0;
        java.lang.String $r1;
        com.siyarox.myhelper.Encryption$Callback $r2;
        java.lang.Thread $r3;
        com.siyarox.myhelper.Encryption$1 $r4;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: com.siyarox.myhelper.Encryption$Callback;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = new java.lang.Thread;

        $r4 = new com.siyarox.myhelper.Encryption$1;

        specialinvoke $r4.<com.siyarox.myhelper.Encryption$1: void <init>(com.siyarox.myhelper.Encryption,java.lang.String,com.siyarox.myhelper.Encryption$Callback)>($r0, $r1, $r2);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;
    }

    public java.lang.String encryptOrNull(java.lang.String)
    {
        com.siyarox.myhelper.Encryption $r0;
        java.lang.String $r1;
        java.lang.Exception $r2;

        $r0 := @this: com.siyarox.myhelper.Encryption;

        $r1 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke $r0.<com.siyarox.myhelper.Encryption: java.lang.String encrypt(java.lang.String)>($r1);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
