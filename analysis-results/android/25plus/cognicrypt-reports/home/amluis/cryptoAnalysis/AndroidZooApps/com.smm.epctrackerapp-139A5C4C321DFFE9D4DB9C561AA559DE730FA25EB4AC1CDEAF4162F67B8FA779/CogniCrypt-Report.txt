Ruleset: 
	java.security.KeyStore
	java.security.AlgorithmParameters
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.Mac
	java.security.DigestInputStream
	java.security.SecureRandom
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.SSLContext
	java.security.KeyPairGenerator
	javax.crypto.SecretKeyFactory
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.GCMParameterSpec
	java.security.Key
	javax.crypto.spec.DHGenParameterSpec
	java.security.cert.PKIXBuilderParameters
	java.security.KeyPair
	javax.crypto.CipherInputStream
	javax.crypto.KeyGenerator
	javax.crypto.SecretKey
	java.security.DigestOutputStream
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.CertPathTrustManagerParameters
	javax.crypto.spec.PBEKeySpec
	javax.net.ssl.KeyStoreBuilderParameters
	java.security.spec.DSAGenParameterSpec
	java.security.MessageDigest
	javax.crypto.spec.IvParameterSpec
	java.security.Signature
	java.security.cert.PKIXParameters

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7360)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: 1c585278c24a8e765df2994cc057dc675d139cc9d4e5491bfc74395e821d2987
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer16918, varReplacer16919)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: a56ded56f9b44d1b2a4ee41cb33f7ea0d7dd53262378486dfefc7bbc82c801aa
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9823)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 759aec9b5a180c634e95ea871b27e174a8144a73e21a1b95174485a505a0ac32
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer16906, $r24)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: f7bd2588692d3b844a33b14094c3fd3fe34f7407e36144df73d85175c228d580
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 954e9f666dc6663ac3198d4c83a7c885893390e9e77a37fe053a41ffaa347eb7
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory createAdditionalApacheCertsSSLSocketFactory(android.content.Context)>
		SHA-256: 15dd4c09357370287da655c9000eb19b850fa2e138e7fa2b62445048968ecb0c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16905)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 270c80cd2346a0e7cb7eaed8c63afdce4a89204394d102a2dc8e26ca3f917583
		Secure: false
	Object:
		Variable: r32
		Type: java.security.SecureRandom
		Statement: specialinvoke r32.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: ec5a3b9c459e095d06455cbfbb767d05f39652ee39e2deb63e1be93dffc7f5e7
		Secure: true
	Object:
		Variable: $r15
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r15 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer16911)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 5c6924870b1d2714f845a36f3ee2db59c474d207b199a60295982adeda7fc564
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManager[]
		Statement: $r4 = virtualinvoke $r15.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: aba9fa4c2396667a557cdcdbfcf86790b8a3f7d67255e7aabf57ef554d38e4ce
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 70227ee4cebe6669aebfadd648a5aa0401905e3b0c149905f4e0b616961e20b
		Secure: true

Findings in Java Class: org.jivesoftware.smack.tcp.XMPPTCPConnection

	 in Method: void proceedTLSReceived()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #f7bd2588692d3b844a33b14094c3fd3fe34f7407e36144df73d85175c228d580)
			First parameter (with value "PKCS11") should be any of {BKS, AndroidKeyStore, PKCS12, BouncyCastle, AndroidCAStore}
			at statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer16906, $r24)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #a56ded56f9b44d1b2a4ee41cb33f7ea0d7dd53262378486dfefc7bbc82c801aa)
			First parameter (with value "KeychainStore") should be any of {BKS, AndroidKeyStore, PKCS12, BouncyCastle, AndroidCAStore}
			at statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer16918, varReplacer16919)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer16910, r32)

		ConstraintError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #5c6924870b1d2714f845a36f3ee2db59c474d207b199a60295982adeda7fc564)
			First parameter (with value "SunX509") should be any of {PKIX}
			at statement: $r15 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer16911)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer16910, r32)


Findings in Java Class: com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7352, r6, varReplacer7352)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7352, r6, varReplacer7352)


	 in Method: javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9820, $r10, varReplacer9820)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9820, $r10, varReplacer9820)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 32
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 6
=====================================================================