public class com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory extends org.apache.http.conn.ssl.SSLSocketFactory
{
    protected javax.net.ssl.SSLContext sslContext;

    public void <init>(java.security.KeyStore) throws java.security.NoSuchAlgorithmException, java.security.KeyManagementException, java.security.KeyStoreException, java.security.UnrecoverableKeyException
    {
        com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory $r0;
        java.security.KeyStore $r1;
        javax.net.ssl.SSLContext $r2;
        java.lang.Object[] $r3;
        java.security.KeyStore[] $r4;
        com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager r5;
        javax.net.ssl.TrustManager[] r6;
        null_type varReplacer7352, varReplacer7353, varReplacer7354, varReplacer7355, varReplacer7356, varReplacer7357, varReplacer7358, varReplacer7359;
        java.lang.String varReplacer7360;

        nop;

        $r0 := @this: com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory;

        $r1 := @parameter0: java.security.KeyStore;

        varReplacer7354 = null;

        varReplacer7355 = null;

        varReplacer7356 = null;

        varReplacer7357 = null;

        varReplacer7358 = null;

        varReplacer7359 = null;

        specialinvoke $r0.<org.apache.http.conn.ssl.SSLSocketFactory: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.security.KeyStore,java.security.SecureRandom,org.apache.http.conn.scheme.HostNameResolver)>(varReplacer7354, varReplacer7354, varReplacer7354, varReplacer7354, varReplacer7354, varReplacer7354);

        varReplacer7360 = "TLS";

        $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7360);

        $r0.<com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext> = $r2;

        $r2 = $r0.<com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r3 = newarray (javax.net.ssl.TrustManager)[1];

        r5 = new com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager;

        $r4 = newarray (java.security.KeyStore)[1];

        $r4[0] = $r1;

        specialinvoke r5.<com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory$AdditionalKeyStoresTrustManager: void <init>(java.security.KeyStore[])>($r4);

        $r3[0] = r5;

        r6 = (javax.net.ssl.TrustManager[]) $r3;

        varReplacer7352 = null;

        varReplacer7353 = null;

        virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7352, r6, varReplacer7352);

        return;
    }

    public static org.apache.http.conn.ssl.SSLSocketFactory createAdditionalApacheCertsSSLSocketFactory(android.content.Context) throws java.security.KeyStoreException, java.io.IOException
    {
        android.content.Context $r0;
        java.io.BufferedInputStream $r1, r10;
        java.security.cert.CertificateFactory $r2;
        android.content.res.Resources $r3;
        java.io.InputStream $r4;
        java.security.cert.Certificate $r5;
        java.lang.String $r6, varReplacer7348, varReplacer7351;
        java.security.KeyStore $r7;
        java.lang.Throwable $r8, $r9;
        com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory r11;
        java.security.GeneralSecurityException r12;
        null_type varReplacer7346, varReplacer7347, varReplacer7350;
        int varReplacer7349;

        nop;

        $r0 := @parameter0: android.content.Context;

     label01:
        varReplacer7348 = "X.509";

        $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer7348);

     label02:
        r10 = new java.io.BufferedInputStream;

        $r1 = r10;

     label03:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        varReplacer7349 = 2131165184;

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(varReplacer7349);

        specialinvoke r10.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);

     label04:
        $r5 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1);

     label05:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        $r6 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6);

        varReplacer7346 = null;

        varReplacer7347 = null;

        virtualinvoke $r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer7346, varReplacer7346);

        varReplacer7351 = "ca";

        virtualinvoke $r7.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(varReplacer7351, $r5);

     label06:
        r11 = new com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory;

     label07:
        specialinvoke r11.<com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: void <init>(java.security.KeyStore)>($r7);

     label08:
        return r11;

     label09:
        $r8 := @caughtexception;

     label10:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r8;

     label11:
        $r9 := @caughtexception;

     label12:
        r12 = (java.security.GeneralSecurityException) $r9;

        virtualinvoke r12.<java.security.GeneralSecurityException: void printStackTrace()>();

        varReplacer7350 = null;

        return varReplacer7350;

     label13:
        $r9 := @caughtexception;

        goto label12;

     label14:
        $r9 := @caughtexception;

        goto label12;

     label15:
        $r9 := @caughtexception;

        goto label12;

        catch java.security.cert.CertificateException from label01 to label02 with label11;
        catch java.security.cert.CertificateException from label03 to label04 with label11;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label13;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label13;
        catch java.security.UnrecoverableKeyException from label01 to label02 with label14;
        catch java.security.UnrecoverableKeyException from label03 to label04 with label14;
        catch java.security.KeyManagementException from label01 to label02 with label15;
        catch java.security.KeyManagementException from label03 to label04 with label15;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.security.cert.CertificateException from label05 to label06 with label11;
        catch java.security.cert.CertificateException from label07 to label08 with label11;
        catch java.security.cert.CertificateException from label10 to label11 with label11;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label13;
        catch java.security.NoSuchAlgorithmException from label07 to label08 with label13;
        catch java.security.NoSuchAlgorithmException from label10 to label11 with label13;
        catch java.security.UnrecoverableKeyException from label05 to label06 with label14;
        catch java.security.UnrecoverableKeyException from label07 to label08 with label14;
        catch java.security.UnrecoverableKeyException from label10 to label11 with label14;
        catch java.security.KeyManagementException from label05 to label06 with label15;
        catch java.security.KeyManagementException from label07 to label08 with label15;
        catch java.security.KeyManagementException from label10 to label11 with label15;
    }

    public static javax.net.ssl.SSLSocketFactory createAdditionalCertsSSLSocketFactory(android.content.Context)
    {
        android.content.Context $r0;
        java.io.BufferedInputStream $r1, r14;
        java.security.cert.CertificateFactory $r2;
        android.content.res.Resources $r3;
        java.io.InputStream $r4;
        java.security.cert.Certificate $r5;
        java.lang.String $r6, varReplacer9819, varReplacer9823, varReplacer9824;
        java.security.KeyStore $r7;
        javax.net.ssl.TrustManagerFactory $r8;
        javax.net.ssl.SSLContext $r9;
        javax.net.ssl.TrustManager[] $r10;
        javax.net.ssl.SSLSocketFactory $r11;
        java.lang.Throwable $r12, $r13;
        java.lang.Exception r15;
        null_type varReplacer9817, varReplacer9818, varReplacer9820, varReplacer9821, varReplacer9822;
        int varReplacer9825;

        nop;

        $r0 := @parameter0: android.content.Context;

     label01:
        varReplacer9824 = "X.509";

        $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer9824);

     label02:
        r14 = new java.io.BufferedInputStream;

        $r1 = r14;

     label03:
        $r3 = virtualinvoke $r0.<android.content.Context: android.content.res.Resources getResources()>();

        varReplacer9825 = 2131165184;

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.io.InputStream openRawResource(int)>(varReplacer9825);

        specialinvoke r14.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r4);

     label04:
        $r5 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1);

     label05:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        $r6 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6);

        varReplacer9817 = null;

        varReplacer9818 = null;

        virtualinvoke $r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer9817, varReplacer9817);

        varReplacer9819 = "ca";

        virtualinvoke $r7.<java.security.KeyStore: void setCertificateEntry(java.lang.String,java.security.cert.Certificate)>(varReplacer9819, $r5);

        $r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6);

        virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r7);

        varReplacer9823 = "TLS";

        $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9823);

        $r10 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        varReplacer9820 = null;

        varReplacer9821 = null;

        virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9820, $r10, varReplacer9820);

        $r11 = virtualinvoke $r9.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

     label06:
        return $r11;

     label07:
        $r12 := @caughtexception;

     label08:
        virtualinvoke $r1.<java.io.InputStream: void close()>();

        throw $r12;

     label09:
        $r13 := @caughtexception;

     label10:
        r15 = (java.lang.Exception) $r13;

        virtualinvoke r15.<java.lang.Exception: void printStackTrace()>();

        varReplacer9822 = null;

        return varReplacer9822;

     label11:
        $r13 := @caughtexception;

        goto label10;

     label12:
        $r13 := @caughtexception;

        goto label10;

     label13:
        $r13 := @caughtexception;

        goto label10;

     label14:
        $r13 := @caughtexception;

        goto label10;

        catch java.security.cert.CertificateException from label01 to label02 with label09;
        catch java.security.cert.CertificateException from label03 to label04 with label09;
        catch java.security.NoSuchAlgorithmException from label01 to label02 with label12;
        catch java.security.NoSuchAlgorithmException from label03 to label04 with label12;
        catch java.security.KeyManagementException from label01 to label02 with label14;
        catch java.security.KeyManagementException from label03 to label04 with label14;
        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label03 to label04 with label13;
        catch java.security.KeyStoreException from label01 to label02 with label11;
        catch java.security.KeyStoreException from label03 to label04 with label11;
        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.security.cert.CertificateException from label05 to label06 with label09;
        catch java.security.cert.CertificateException from label08 to label09 with label09;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label12;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label12;
        catch java.security.KeyManagementException from label05 to label06 with label14;
        catch java.security.KeyManagementException from label08 to label09 with label14;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label08 to label09 with label13;
        catch java.security.KeyStoreException from label05 to label06 with label11;
        catch java.security.KeyStoreException from label08 to label09 with label11;
    }

    public java.net.Socket createSocket() throws java.io.IOException
    {
        com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory $r0;
        javax.net.ssl.SSLContext $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        java.net.Socket $r3;

        $r0 := @this: com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory;

        $r1 = $r0.<com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r2 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r3 = virtualinvoke $r2.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket()>();

        return $r3;
    }

    public java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) throws java.io.IOException
    {
        com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory $r0;
        java.net.Socket $r1;
        java.lang.String $r2;
        int $i0;
        boolean $z0;
        javax.net.ssl.SSLContext $r3;
        javax.net.ssl.SSLSocketFactory $r4;

        $r0 := @this: com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory;

        $r1 := @parameter0: java.net.Socket;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $r3 = $r0.<com.smm.epctrackerapp.utils.AdditionalKeyStoresSSLSocketFactory: javax.net.ssl.SSLContext sslContext>;

        $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();

        $r1 = virtualinvoke $r4.<javax.net.ssl.SSLSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r1, $r2, $i0, $z0);

        return $r1;
    }
}
