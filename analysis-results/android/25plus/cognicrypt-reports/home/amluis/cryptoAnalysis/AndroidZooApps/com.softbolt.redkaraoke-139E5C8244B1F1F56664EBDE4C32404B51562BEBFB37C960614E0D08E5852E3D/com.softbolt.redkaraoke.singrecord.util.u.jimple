public final class com.softbolt.redkaraoke.singrecord.util.u extends java.lang.Object
{

    public static java.security.PublicKey a(java.lang.String)
    {
        java.lang.String $r0, varReplacer6388, varReplacer6389, varReplacer6390, varReplacer6391, varReplacer6392;
        byte[] $r1;
        java.security.KeyFactory $r2;
        java.security.spec.X509EncodedKeySpec $r3;
        java.security.PublicKey $r4;
        java.lang.Throwable $r5, $r7;
        java.lang.RuntimeException $r6;
        java.lang.IllegalArgumentException $r8;
        com.softbolt.redkaraoke.singrecord.util.f $r9;

        nop;

        $r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <com.softbolt.redkaraoke.singrecord.util.e: byte[] a(java.lang.String)>($r0);

        varReplacer6390 = "RSA";

        $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6390);

     label2:
        $r3 = new java.security.spec.X509EncodedKeySpec;

     label3:
        specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1);

        $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3);

     label4:
        return $r4;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r7 := @caughtexception;

        varReplacer6388 = "IABUtil/Security";

        varReplacer6389 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer6388, varReplacer6389);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r7);

        throw $r8;

     label7:
        $r9 := @caughtexception;

        varReplacer6391 = "IABUtil/Security";

        varReplacer6392 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer6391, varReplacer6392);

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r9);

        throw $r8;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label5;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label5;
        catch java.security.spec.InvalidKeySpecException from label1 to label2 with label6;
        catch java.security.spec.InvalidKeySpecException from label3 to label4 with label6;
        catch com.softbolt.redkaraoke.singrecord.util.f from label1 to label2 with label7;
        catch com.softbolt.redkaraoke.singrecord.util.f from label3 to label4 with label7;
    }

    public static boolean a(java.security.PublicKey, java.lang.String, java.lang.String)
    {
        java.security.PublicKey $r0;
        java.lang.String $r1, $r2, varReplacer6375, varReplacer6376, varReplacer6377, varReplacer6378, varReplacer6379, varReplacer6380, varReplacer6381, varReplacer6382, varReplacer6384, varReplacer6385, varReplacer6386;
        java.security.Signature $r3;
        byte[] $r4;
        boolean $z0;
        java.lang.Throwable $r5, $r6, $r7;
        com.softbolt.redkaraoke.singrecord.util.f $r8;
        int varReplacer6371, varReplacer6372, varReplacer6373, varReplacer6374, varReplacer6383, varReplacer6387;

        nop;

        $r0 := @parameter0: java.security.PublicKey;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.String;

     label1:
        varReplacer6386 = "SHA1withRSA";

        $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer6386);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0);

        $r4 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r4);

        $r4 = staticinvoke <com.softbolt.redkaraoke.singrecord.util.e: byte[] a(java.lang.String)>($r2);

        $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4);

     label2:
        if $z0 != 0 goto label5;

     label3:
        varReplacer6384 = "IABUtil/Security";

        varReplacer6385 = "Signature verification failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer6384, varReplacer6385);

     label4:
        varReplacer6374 = 0;

        return varReplacer6374;

     label5:
        varReplacer6372 = 1;

        return varReplacer6372;

     label6:
        $r5 := @caughtexception;

        varReplacer6379 = "IABUtil/Security";

        varReplacer6380 = "NoSuchAlgorithmException.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer6379, varReplacer6380);

        varReplacer6373 = 0;

        return varReplacer6373;

     label7:
        $r6 := @caughtexception;

        varReplacer6381 = "IABUtil/Security";

        varReplacer6382 = "Invalid key specification.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer6381, varReplacer6382);

        varReplacer6387 = 0;

        return varReplacer6387;

     label8:
        $r7 := @caughtexception;

        varReplacer6377 = "IABUtil/Security";

        varReplacer6378 = "Signature exception.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer6377, varReplacer6378);

        varReplacer6383 = 0;

        return varReplacer6383;

     label9:
        $r8 := @caughtexception;

        varReplacer6375 = "IABUtil/Security";

        varReplacer6376 = "Base64 decoding failed.";

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>(varReplacer6375, varReplacer6376);

        varReplacer6371 = 0;

        return varReplacer6371;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.security.NoSuchAlgorithmException from label3 to label4 with label6;
        catch java.security.InvalidKeyException from label1 to label2 with label7;
        catch java.security.InvalidKeyException from label3 to label4 with label7;
        catch java.security.SignatureException from label1 to label2 with label8;
        catch java.security.SignatureException from label3 to label4 with label8;
        catch com.softbolt.redkaraoke.singrecord.util.f from label1 to label2 with label9;
        catch com.softbolt.redkaraoke.singrecord.util.f from label3 to label4 with label9;
    }
}
